// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    thread suppressedlaser();
    thread table_getaddblueprintattachments();
}

suppressedlaser()
{
    _handlevehiclerepair::init();

    if ( getdvar( "scr_br_verse" ) == "ww2" )
    {
        var_0 = [];
        var_0["brloot_plunder_cash_rare_1"] = 1;
        var_0["brloot_plunder_cash_rare_2"] = 1;
        var_0["brloot_plunder_cash_epic_1"] = 0.5;
        _handlevehiclerepair::_id_11A45( "ai_convoy_cash", var_0 );
        var_0 = [];
        var_0["brloot_weapon_la_mike32_lege"] = 1;
        var_0["nothing"] = 1;
        _handlevehiclerepair::_id_11A45( "ai_convoy_weapon", var_0 );
        var_0 = [];
        var_0["brloot_offhand_semtex"] = 1;
        var_0["brloot_offhand_smoke"] = 1;
        _handlevehiclerepair::_id_11A45( "ai_convoy_gear", var_0 );
        var_0 = [];
        var_0["brloot_killstreak_explosive_bow"] = 1;
        var_0["brloot_plate_pouch"] = 1;
        var_0["brloot_offhand_decon_station"] = 1;
        _handlevehiclerepair::_id_11A45( "ai_convoy_supers", var_0 );
        var_0 = [];

        if ( getdvarint( "scr_convoy_should_drop_nebula_bomb", 1 ) == 1 )
            var_0["brloot_killstreak_city_killer"] = 1;
        else
        {
            var_0["brloot_killstreak_clusterstrike"] = 1;
            var_0["brloot_killstreak_precision_airstrike"] = 1;
        }

        _handlevehiclerepair::_id_11A45( "ai_convoy_killstreaks", var_0 );
    }
    else
    {
        var_0 = [];
        var_0["brloot_plunder_cash_rare_1"] = 1;
        var_0["brloot_plunder_cash_rare_2"] = 1;
        var_0["brloot_plunder_cash_epic_1"] = 0.5;
        _handlevehiclerepair::_id_11A45( "ai_convoy_cash", var_0 );
        var_0 = [];
        var_0["brloot_weapon_la_mike32_lege"] = 1;
        var_0["nothing"] = 1;
        _handlevehiclerepair::_id_11A45( "ai_convoy_weapon", var_0 );
        var_0 = [];
        var_0["brloot_offhand_semtex"] = 1;
        var_0["brloot_offhand_smoke"] = 1;
        _handlevehiclerepair::_id_11A45( "ai_convoy_gear", var_0 );
        var_0 = [];
        var_0["brloot_killstreak_explosive_bow"] = 1;
        var_0["brloot_plate_pouch"] = 1;
        var_0["brloot_offhand_decon_station"] = 1;
        _handlevehiclerepair::_id_11A45( "ai_convoy_supers", var_0 );
        var_0 = [];

        if ( getdvarint( "scr_convoy_should_drop_nebula_bomb", 1 ) == 1 )
            var_0["brloot_killstreak_city_killer"] = 1;
        else
        {
            var_0["brloot_killstreak_clusterstrike"] = 1;
            var_0["brloot_killstreak_precision_airstrike"] = 1;
        }

        _handlevehiclerepair::_id_11A45( "ai_convoy_killstreaks", var_0 );
    }
}

table_getaddblueprintattachments()
{
    waitframe();
    level.hurt_trigger_active = getdvarfloat( "scr_armored_convoy_map_spawn_delay", 1 );

    if ( getdvarint( "scr_city_killers_convoy_event_active", 0 ) == 1 )
    {
        self waittill( "br_vehiclesReset" );
        wait( level.hurt_trigger_active );
        hudplunderstart();
        hvt_key_picked_up();
        var_0 = spawnstruct();
        var_0.streakname = "convoy_truck";
        level.idflags_source_left_hand = var_0;
        level.hudextractnum = ::hudextractnum;
        level thread scripts\mp\gametypes\br_heavy_weapon_drop.gsc::init();
        level thread object_is_valid( var_0 );
    }
}

hvt_key_picked_up()
{
    var_0 = scripts\cp_mp\vehicles\vehicle_mines::vehicle_mines_getleveldataforvehicle( "convoy_truck", 1 );
    var_0.frontextents = 165;
    var_0.backextents = 168;
    var_0.leftextents = 57;
    var_0.rightextents = 57;
    var_0.bottomextents = 35;
    var_0.distancetobottom = 50;
    var_0.loscheckoffset = ( 0, 0, 70 );
}

accessorylogicbyindex()
{

}

object_is_valid( var_0 )
{
    level endon( "game_ended" );
    wait 1;
    level.hudglobalkillcountmax = spawnstruct();
    level.hudglobalkillcountmax.hudzombie = [];
    level.hudglobalkillcountmax.brvalidatekillcam = 0;
    level.hudglobalkillcountmax.i_see_player_drone_watcher = [];
    stoppingpower_onkill();
    forcefail();

    if ( getdvarint( "scr_armored_convoy_spawn_all_locations", 0 ) == 1 )
    {
        obj_room_fire_09( var_0, "mines" );
        obj_room_fire_09( var_0, "docks" );
        obj_room_fire_09( var_0, "capital" );
        obj_room_fire_09( var_0, "agcenter" );
        obj_room_fire_09( var_0, "lagoon" );
        obj_room_fire_09( var_0, "beachhead" );
    }
    else if ( getdvarint( "scr_armored_convoy_spawn_week_2", 0 ) == 1 )
        obj_room_fire_09( var_0, "docks" );
    else
        _id_13527( var_0 );

    foreach ( var_2 in level.hudglobalkillcountmax.i_see_player_drone_watcher )
    {
        var_2._id_13415 = 5;
        var_2.personnel_platform = 15;
        var_2._id_136EB = var_2._id_13415;
        var_3 = scripts\common\utility::playersincylinder( var_2.origin, 20000 );

        foreach ( var_5 in var_3 )
        {
            var_5 thread scripts\mp\hud_message::showsplash( "convoy_truck_spawn" );
            var_5.shoulddonodedrop = 1;
        }
    }

    level.hudglobalkillcountmax.locindex = 20;
    level.hudglobalkillcountmax.getoldestdogtags = 0;
    level.hudglobalkillcountmax._id_119E9 = 500;
}

_id_13527( var_0 )
{
    var_1 = [];

    if ( getdvarint( "scr_armored_convoy_mines_route_active", 1 ) == 1 )
        var_1[var_1.size] = "mines";

    if ( getdvarint( "scr_armored_convoy_docks_route_active", 1 ) == 1 )
        var_1[var_1.size] = "docks";

    if ( getdvarint( "scr_armored_convoy_capital_route_active", 1 ) == 1 )
        var_1[var_1.size] = "capital";

    if ( getdvarint( "scr_armored_convoy_agcenter_route_active", 1 ) == 1 )
        var_1[var_1.size] = "agcenter";

    if ( getdvarint( "scr_armored_convoy_lagoon_route_active", 1 ) == 1 )
        var_1[var_1.size] = "lagoon";

    if ( getdvarint( "scr_armored_convoy_beachhead_route_active", 1 ) == 1 )
        var_1[var_1.size] = "beachhead";

    var_1 = scripts\engine\utility::array_randomize( var_1 );

    for ( var_2 = 0; var_2 < var_1.size; var_2++ )
    {
        if ( var_2 > getdvarint( "scr_armored_convoy_number_of_convoys_to_spawn", 3 ) - 1 )
            break;

        obj_room_fire_09( var_0, var_1[var_2] );
    }
}

obj_room_fire_09( var_0, var_1, var_2 )
{
    if ( getdvarint( "scr_armored_convoy_" + var_1 + "_route_active", 1 ) == 0 )
        return;

    var_3 = 0;

    if ( getdvarint( "scr_test_convoy_randomize", 0 ) )
        var_3 = randomint( level.hudglobalkillcountmax.paths[var_1].size );

    var_4 = level.hudglobalkillcountmax.paths[var_1][var_3];
    var_5 = spawn_convoy_truck( var_4, var_2 );
    var_5.vehiclename = "convoy_truck";
    var_5.name = "convoy_truck";
    var_5.ownerdamageenabled = 1;
    var_5._id_13DD4 = 1;
    var_5 setcandamage( 1 );
    var_5.godmode = 0;
    var_5.team = "neutral";
    var_5 setvehicleteam( "neutral" );
    var_6 = getdvarint( "RRNTNNKNP", 1 );
    var_5.health = 5000;
    var_5.maxhealth = 5000;

    if ( var_6 > 2 )
    {
        var_5.health = var_5.health * 2;
        var_5.maxhealth = var_5.maxhealth * 2;
    }

    var_5 hurt_enabled();
    var_5.initplunderpads = "unengaged";
    var_5.locale = var_1;
    var_5.inside_bush = var_3;
    var_5.is_enemy_of_type = 1;
    var_5._id_12B1D = [];
    var_5._id_13A89 = [];
    var_5 vehphys_enablecollisioncallback( 1 );
    var_5._id_119FB = 3;
    var_5.little_bird_mg_onexitheavydamagestate = 1;
    var_5.clipsize = getdvarint( "scr_armored_convoy_turret_clip_size", 80 );
    var_7 = anglestoforward( var_5.angles ) * 150 * -1;
    level.hudglobalkillcountmax._id_13E81 = getdvarint( "scr_armored_convoy_turret_accuracy", 65 );
    var_8 = var_5 gettagorigin( "TAG_TURRET_L" );
    var_9 = var_5 gettagorigin( "TAG_TURRET_R" );
    var_10 = var_5 gettagorigin( "TAG_TURRET_B" );
    var_11 = var_5 gettagorigin( "TAG_DROP_BACK_LEFT" );
    var_12 = var_5 gettagorigin( "TAG_DROP_BACK_RIGHT" );
    var_13 = cos( 37.5 );
    var_14 = cos( 60 );
    var_5.waypoint_endzone_vfx = spawnturret( "misc_turret", var_8, "convoy_truck_turret_mp" );
    var_5.waypoint_endzone_vfx setmodel( "veh_s4_mil_lnd_truck_opapa40_armored_wz_turret" );
    var_5.waypoint_endzone_vfx.owner = var_0.owner;
    var_5.waypoint_endzone_vfx setturretowner( var_0.owner );
    var_5.waypoint_endzone_vfx.team = var_5.team;
    var_5.waypoint_endzone_vfx maketurretinoperable();
    var_5.waypoint_endzone_vfx.streakinfo = var_0;
    var_5.waypoint_endzone_vfx.turreton = 1;
    var_5.waypoint_endzone_vfx.name = "left_turret";
    var_5.waypoint_endzone_vfx.attackingtarget = undefined;
    var_5.waypoint_endzone_vfx linkto( var_5, "TAG_TURRET_L", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_5.waypoint_endzone_vfx._id_11E1D = var_5;
    var_5.waypoint_endzone_vfx._id_11A52 = [];
    var_5.waypoint_endzone_vfx setturretteam( var_5.team );
    var_5.waypoint_endzone_vfx setturretmodechangewait( 0 );
    var_5.waypoint_endzone_vfx setmode( "manual" );
    var_5.waypoint_endzone_vfx setotherent( var_0.owner );
    var_5.waypoint_endzone_vfx setdefaultdroppitch( 30 );
    var_5.waypoint_endzone_vfx._id_11B52 = var_13;
    var_5.waypoint_endzone_vfx._id_13A71 = 0;
    var_5._id_12D3F = spawnturret( "misc_turret", var_9, "convoy_truck_turret_mp" );
    var_5._id_12D3F setmodel( "veh_s4_mil_lnd_truck_opapa40_armored_wz_turret" );
    var_5._id_12D3F.owner = var_0.owner;
    var_5._id_12D3F setturretowner( var_0.owner );
    var_5._id_12D3F.team = var_5.team;
    var_5._id_12D3F maketurretinoperable();
    var_5._id_12D3F.streakinfo = var_0;
    var_5._id_12D3F.turreton = 1;
    var_5._id_12D3F.name = "right_turret";
    var_5._id_12D3F.attackingtarget = undefined;
    var_5._id_12D3F linkto( var_5, "TAG_TURRET_R", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_5._id_12D3F._id_11E1D = var_5;
    var_5._id_12D3F._id_11A52 = [];
    var_5._id_12D3F setturretteam( var_5.team );
    var_5._id_12D3F setturretmodechangewait( 0 );
    var_5._id_12D3F setmode( "manual" );
    var_5._id_12D3F setotherent( var_0.owner );
    var_5._id_12D3F setdefaultdroppitch( 30 );
    var_5._id_12D3F._id_11B52 = var_13;
    var_5._id_12D3F._id_13A71 = 0;
    var_15 = var_5.origin + var_7;
    var_16 = ( var_15[0], var_15[1], var_5.origin[2] + 150 );
    var_17 = vectornormalize( var_16 - var_5.origin ) * 150;
    var_18 = var_5.origin + var_17;
    var_5.rearturret = spawnturret( "misc_turret", var_10, "convoy_truck_turret_mp" );
    var_5.rearturret setmodel( "veh_s4_mil_lnd_truck_opapa40_armored_wz_back_turret" );
    var_5.rearturret setturretowner( var_0.owner );
    var_5.rearturret.owner = var_0.owner;
    var_5.rearturret.team = var_5.team;
    var_5.rearturret maketurretinoperable();
    var_5.rearturret.streakinfo = var_0;
    var_5.rearturret.turreton = 1;
    var_5.rearturret.name = "rear_turret";
    var_5.rearturret.attackingtarget = undefined;
    var_5.rearturret linkto( var_5, "TAG_TURRET_B", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_5.rearturret._id_11E1D = var_5;
    var_5.rearturret._id_11A52 = [];
    var_5.rearturret setturretteam( var_5.team );
    var_5.rearturret setturretmodechangewait( 0 );
    var_5.rearturret setmode( "manual" );
    var_5.rearturret setotherent( var_0.owner );
    var_5.rearturret setdefaultdroppitch( 30 );
    var_5.rearturret._id_11B52 = var_14;
    var_5.rearturret._id_13A71 = 0;
    var_5.intel_pieces = 5;
    var_5.waypoint_completed_vfx = var_11;
    var_5._id_12D3E = var_12;
    var_5 vehicle_setspeed( 50, 5, 5 );
    var_5.killcament = spawn( "script_model", var_5 gettagorigin( "tag_origin" ) );
    var_5.killcament.origin = var_5.killcament.origin + ( 0, 0, 300 );
    var_5.killcament linkto( var_5, "tag_origin", ( -600, 0, 1000 ), ( 0, 0, 0 ) );
    var_5.waypoint_endzone_vfx.killcament = var_5.killcament;
    var_5._id_12D3F.killcament = var_5.killcament;
    var_5.rearturret.killcament = var_5.killcament;

    if ( getdvarint( "scr_armored_convoy_respawn_after_death", 0 ) )
        level thread _id_144B2( var_5 );

    var_5 thread _id_14237();
    var_5 thread _id_14483( var_1 );
    var_5 thread is_stealth_sequence_activated();
    var_5 thread vehicle_damage_onenterstateheavy();
    var_5 thread _id_11C18();
    var_5 thread setup_backup_respawn_points_in_verdansk();
    var_5 thread _id_14479();
    return var_5;
}

_id_135EE()
{
    self._id_12D3F.groundtargetent = spawn( "script_origin", level.players[0].origin );
    self._id_12D3F.groundtargetent dontinterpolate();
    self.waypoint_endzone_vfx.groundtargetent = spawn( "script_origin", level.players[0].origin );
    self.waypoint_endzone_vfx.groundtargetent dontinterpolate();
    self.rearturret.groundtargetent = spawn( "script_origin", level.players[0].origin );
    self.rearturret.groundtargetent dontinterpolate();
}

_id_11C18()
{
    self endon( "death" );

    if ( !isdefined( level.mines ) )
        level.mines = [];

    for (;;)
    {
        foreach ( var_1 in level.mines )
        {
            if ( !isdefined( var_1 ) )
                continue;

            if ( istrue( var_1._id_11B0D ) )
                continue;

            if ( isdefined( var_1.weapon_name ) && var_1.weapon_name == "claymore_mp" )
            {
                if ( distancesquared( self.origin, var_1.origin ) < squared( 192 ) )
                {
                    if ( vectordot( self.origin - var_1.origin, anglestoforward( var_1.angles ) ) > 0.86602 )
                        var_1 thread scripts\mp\equipment\claymore::claymore_trigger( self );
                }
            }
        }

        waitframe();
    }
}

_id_144B2( var_0 )
{
    level endon( "game_ended" );
    var_1 = var_0.locale;
    var_0 waittill( "death" );

    if ( isdefined( var_0.waypoint_endzone_vfx ) )
        var_0.waypoint_endzone_vfx delete();

    if ( isdefined( var_0._id_12D3F ) )
        var_0._id_12D3F delete();

    if ( isdefined( var_0.cannon ) )
        var_0.cannon delete();

    if ( isdefined( var_0.rearturret ) )
        var_0.rearturret delete();

    if ( isdefined( var_0._id_1253B ) )
        var_0._id_1253B delete();

    if ( isdefined( var_0.computerrebootused ) )
        var_0.computerrebootused delete();

    scripts\engine\utility::array_removeundefined( level.hudglobalkillcountmax.i_see_player_drone_watcher );
    wait 10;
    var_2 = getdvarint( "scr_armored_convoy_respawn_after_death", 0 ) == 2;
    var_3 = obj_room_fire_09( level.idflags_source_left_hand, var_1, var_2 );
    var_3._id_13415 = 5;
    var_3.personnel_platform = 15;
    var_3._id_136EB = var_3._id_13415;
    level.hudglobalkillcountmax.locindex = 20;
    level.hudglobalkillcountmax.getoldestdogtags = 0;
    level.hudglobalkillcountmax._id_119E9 = 500;

    if ( istrue( var_2 ) && isdefined( var_3.path ) && isdefined( var_3.path.nodes ) && var_3.path.nodes.size > 1 )
        var_3 thread br_armor_plate_amount_equipped_set();
}

br_armor_plate_amount_equipped_set()
{
    level endon( "game_ended" );
    self endon( "vehicleBeginPath" );
    self endon( "death" );
    scripts\mp\gametypes\br_gametype_truckwar.gsc::stoppingpower_givehcrdata();
    scripts\mp\gametypes\br_gametype_truckwar.gsc::stoppingpower_loadoutchangeremovehcr();
    level thread scripts\mp\gametypes\br_gametype_truckwar.gsc::_id_13DF8();
    level thread scripts\mp\gametypes\br_gametype_truckwar.gsc::_id_13DE4( self, self.origin, self.angles, 1 );

    if ( isdefined( self.path ) )
    {
        self.stop_pressure_sensor = 1;

        while ( self.stop_pressure_sensor )
            wait 0.1;

        wait 3;
        thread _id_1422F( self.path );
    }
}

hudextractnum( var_0, var_1 )
{
    if ( level.hudglobalkillcountmax.i_see_player_drone_watcher.size <= 0 )
        return;

    foreach ( var_3 in level.hudglobalkillcountmax.i_see_player_drone_watcher )
    {
        if ( !isdefined( var_3 ) )
            continue;

        var_4 = distance2d( var_3.origin, var_0 );

        if ( var_4 > var_1 && var_4 - var_1 > 4000 )
        {
            var_3._id_133DA = 1;
            var_5 = play_ac130_approach_scene();
            var_6 = spawnstruct();
            var_6.attacker = var_5;
            var_6._id_11E93 = 1;
            var_3 hudnumtoconsume( var_6 );
        }
    }
}

_id_144B1()
{
    level endon( "game_ended" );
    self endon( "death" );

    for (;;)
    {
        if ( validtousecosmetic() )
        {
            wait 10;

            if ( validtousecosmetic() )
                break;
        }

        wait 5;
    }

    self._id_133DA = 1;
}

validtousecosmetic()
{
    var_0 = scripts\mp\gametypes\br_circle.gsc::getdangercircleorigin();
    var_1 = scripts\mp\gametypes\br_circle.gsc::getdangercircleradius();
    var_2 = self.origin - var_0;
    var_3 = distance2d( self.origin, var_0 );
    return var_3 > var_1 && var_3 - var_1 > 4000;
}

stoppingpower_onkill()
{
    if ( level.mapname == "mp_br_mechanics" )
        scripts\mp\gametypes\br_payload_path_mp_br_mechanics_2.gsc::toggle_farah_lights( 2, "standard", 2 );

    if ( level.mapname == "mp_wz_island" )
    {
        _codephonescriptableused::toggle_farah_lights( 0, "standard", 0 );
        _closepurchasemenuwithresponse::toggle_farah_lights( 0, "standard", 0 );
        _cleanuptabletallows::toggle_farah_lights( 0, "standard", 0 );
        _calloutmarkerping_shouldremovecalloutifwholesquadinvehicle::toggle_farah_lights( 0, "standard", 0 );
        _codecomputerscriptableused::toggle_farah_lights( 0, "standard", 0 );
        _cancelputawayonuseend::toggle_farah_lights( 0, "standard", 0 );
    }

    syringe_finish_crouch();
}

syringe_finish_crouch()
{
    foreach ( var_1 in level.hudglobalkillcountmax.paths )
    {
        foreach ( var_3 in var_1 )
        {
            var_3.points = [];

            foreach ( var_5 in var_3.nodes )
                var_3.points[var_3.points.size] = var_5.origin;
        }
    }
}

forcefail()
{
    forced_kill_off( "mines" );
    forced_kill_off( "docks" );
    forced_kill_off( "capital" );
    forced_kill_off( "agcenter" );
    forced_kill_off( "lagoon" );
    forced_kill_off( "beachhead" );
}

forced_kill_off( var_0 )
{
    if ( !isdefined( level.hudglobalkillcountmax.paths[var_0] ) )
        return;

    foreach ( var_2 in level.hudglobalkillcountmax.paths[var_0] )
    {
        for ( var_3 = 0; var_3 < var_2.nodes.size; var_3++ )
        {
            if ( var_3 < var_2.nodes.size - 1 )
            {
                var_2.times[var_3] = freight_lift_build( var_2.nodes[var_3].origin, var_2.nodes[var_3 + 1].origin );
                continue;
            }

            var_2.times[var_3] = freight_lift_build( var_2.nodes[var_3].origin, var_2.nodes[0].origin );
        }
    }
}

spawn_convoy_truck( var_0, var_1 )
{
    var_2 = ( 0, 0, 0 );
    var_3 = var_0;
    var_4 = undefined;
    var_5 = 0;

    if ( isdefined( var_0.nodes ) && isdefined( var_0.nodes[var_5] ) && isdefined( var_0.nodes[var_5 + 1] ) )
    {
        var_3 = var_0.nodes[var_5];
        var_4 = var_0.nodes[var_5 + 1];

        if ( var_3.origin == var_4.origin )
            var_4 = var_0.nodes[var_5 + 2];

        var_2 = vectortoangles( var_4.origin - var_3.origin );
    }
    else if ( isdefined( var_0.target ) )
    {
        var_4 = scripts\engine\utility::getstruct( var_0.target, "targetname" );

        if ( isdefined( var_4 ) )
            var_2 = vectortoangles( var_4.origin - var_0.origin );
        else if ( isdefined( var_0.angles ) )
            var_2 = vectortoangles( var_4.origin - var_0.origin );
        else
            var_2 = ( 0, randomint( 0, 360 ), 0 );
    }

    var_6 = spawnstruct();
    var_6.origin = var_3.origin;
    var_6.angles = var_2;
    var_6.spawntype = "GAME_MODE";
    var_6.spawnmethod = "place_at_position_unsafe";
    var_6.team = "neutral";
    var_6.player_rig_create = ::_id_1423F;
    var_6.vehicletype = "mkilo_physics_mg_convoy";
    var_6.modelname = "veh_s4_mil_lnd_truck_opapa40_armored_wz";
    var_6.showheadicon = 1;
    var_7 = spawnstruct();
    var_8 = scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "convoy_truck", var_6, var_7 );
    var_8 markkeyframedmover( 1 );
    var_8 _meth_87C1( 1 );
    level.hudglobalkillcountmax.i_see_player_drone_watcher[level.hudglobalkillcountmax.i_see_player_drone_watcher.size] = var_8;
    var_8.intel_pieces = 5;

    if ( isdefined( var_4 ) )
    {
        var_0.vehicle = var_8;
        var_8.path = var_0;

        if ( !isdefined( var_0.trigger ) )
            var_0.trigger = spawn( "trigger_radius", var_8.origin, 0, 250, 200 );

        if ( !istrue( var_0.trigger.x1loadout ) )
        {
            var_0.trigger enablelinkto();
            var_0.trigger.x1loadout = 1;
        }

        var_0.trigger linkto( var_8, "tag_origin", ( 0, 0, 0 ), ( 0, 0, 0 ) );
        var_0.trigger.brkillstreakbeginusefunc = 1;

        if ( isdefined( var_4 ) && !istrue( var_1 ) )
            var_8 thread _id_1422F( var_0 );
    }

    var_8._id_1253B = spawn( "trigger_radius", var_8.origin, 0, 1000, 1000 );
    var_8._id_1253B enablelinkto();
    var_8._id_1253B.x1loadout = 1;
    var_8._id_1253B linkto( var_8, "tag_origin", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_8._id_1253B._id_11E1D = var_8;
    scripts\mp\utility\trigger::makeenterexittrigger( var_8._id_1253B, ::nuke_vault_alarm, ::onplayerconnectstream, undefined, undefined, ::hudkothbesttime );
    var_8.computerrebootused = spawn( "trigger_radius", var_8.origin, 0, 150, 150 );
    var_8.computerrebootused enablelinkto();
    var_8.computerrebootused.x1loadout = 1;
    var_8.computerrebootused linkto( var_8, "tag_origin", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_8.computerrebootused._id_11E1D = var_8;
    scripts\mp\utility\trigger::makeenterexittrigger( var_8.computerrebootused, ::confirmed_pilot, ::connect_circlar_path, undefined, undefined, ::connect_init );
    var_8._id_1253B thread _id_144CA();
    return var_8;
}

nuke_vault_alarm( var_0, var_1 )
{
    if ( isplayer( var_0 ) )
    {
        if ( !isdefined( var_0.aq_playerremoved ) )
            var_0.aq_playerremoved = [];

        if ( !scripts\engine\utility::array_contains( var_0.aq_playerremoved, var_1._id_11E1D ) )
        {
            var_0.aq_playerremoved[var_0.aq_playerremoved.size] = var_1._id_11E1D;
            var_0 thread scripts\mp\hud_message::showsplash( "convoy_truck_spawn" );
        }

        var_1._id_11E1D _id_12AFF( var_0.team );
    }
    else if ( isvalidmissile( var_0 ) )
        var_0.exploding = 1;
}

onplayerconnectstream( var_0, var_1 )
{

}

hudkothbesttime( var_0, var_1 )
{
    if ( !isdefined( var_0 ) )
        return 1;

    return 0;
}

confirmed_pilot( var_0, var_1 )
{
    var_0 dodamage( 10000, self.origin );
}

connect_circlar_path( var_0, var_1 )
{

}

connect_init( var_0, var_1 )
{
    if ( var_0 == self )
        return 1;

    if ( isdefined( var_0.vehiclename ) || isdefined( var_0.equipmentref ) && var_0.equipmentref == "equip_tac_cover" )
        return 0;

    return 1;
}

_id_14479()
{
    level endon( "game_ended" );
    self endon( "death" );

    for (;;)
    {
        var_0 = scripts\engine\trace::create_default_contents( 1 );
        var_1 = scripts\mp\utility\entity::getentitiesinradius( self.origin, 175, undefined, self, var_0 );

        if ( isdefined( var_1 ) && var_1.size > 0 )
        {
            foreach ( var_3 in var_1 )
            {
                var_4 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getalloccupants( var_3, 0 );

                if ( isdefined( var_3.vehiclename ) )
                {
                    if ( isdefined( var_4 ) && var_4.size > 0 )
                        var_3 dodamage( 10000, self.origin, self, self );
                    else
                    {
                        var_5 = scripts\cp_mp\vehicles\vehicle::vehicle_getleveldataforvehicle( var_3.vehiclename );
                        var_6 = var_5.destroycallback;
                        var_3 thread [[ var_6 ]]( undefined, 1 );
                    }
                }

                if ( isdefined( var_3.animname ) && var_3.animname == "fulton" )
                    var_3 thread _debug_rooftopobjstart::playerswithoutdismemberment( undefined );
            }
        }

        wait 1;
    }
}

setup_backup_respawn_points_in_verdansk()
{
    level endon( "game_ended" );
    self endon( "death" );
    var_0 = self getentitynumber();
    var_1 = 150;
    var_2 = physics_createcontents( [ "physicscontents_item" ] );
    var_3 = ( var_1, var_1, 200 );
    var_4 = [ self, self._id_12D3F, self.waypoint_endzone_vfx, self.rearturret ];

    for (;;)
    {
        var_5 = self.origin;
        var_6 = var_5 - var_3;
        var_7 = var_5 + var_3;
        var_8 = physics_aabbbroadphasequery( var_6, var_7, var_2, var_4 );

        for ( var_9 = 0; var_9 < var_8.size; var_9++ )
        {
            var_10 = var_8[var_9];

            if ( istrue( var_10._id_11B0D ) )
                continue;

            if ( isdefined( var_10.idflags_br_armor_hit ) && isdefined( var_10.idflags_br_armor_hit.size ) )
            {
                if ( var_10.idflags_br_armor_hit.size > 0 )
                {
                    if ( isdefined( var_10.idflags_br_armor_hit[var_0] ) )
                        continue;
                }
            }

            if ( isdefined( var_10.equipmentref ) )
            {
                if ( var_10.equipmentref == "equip_tac_cover" )
                {
                    if ( !var_10.collision istouching( self ) )
                        continue;

                    var_10 scripts\mp\equipment\tactical_cover::tac_cover_destroy( undefined, 0 );
                    var_10._id_11B0D = 1;
                    continue;
                }
            }

            if ( isdefined( var_10.get_teaminquiry_alias ) )
                var_10 thread scripts\mp\equipment\binoculars::get_smoke_grenade_start_pos();

            if ( !var_10 istouching( self ) )
                continue;

            if ( isdefined( var_10.cratetype ) && var_10.cratetype == "battle_royale_loadout" )
            {
                hudkothtimer( var_10, self, var_5 );
                continue;
            }

            if ( scripts\mp\utility\entity::isturret( var_10 ) )
            {
                if ( istrue( var_10.usedropspawn ) )
                    continue;

                var_10 notify( "kill_turret", 1 );
                var_10._id_11B0D = 1;
                continue;
            }

            if ( hudextractmax( var_10 ) )
            {
                if ( isdefined( var_10.health ) && var_10.health > 0 )
                {
                    var_10 dodamage( var_10.health + 100, self.origin );
                    var_10._id_11B0D = 1;
                }
            }
        }

        waitframe();
    }
}

hudextractmax( var_0 )
{
    if ( !isdefined( var_0.weapon_name ) )
        return 0;

    var_1 = 0;

    switch ( var_0.weapon_name )
    {
        case "armor_box_mp":
        case "support_box_mp":
            var_1 = 1;
            break;
    }

    if ( var_1 )
        return 1;

    return 0;
}

vehicle_collision_loadtablecell( var_0, var_1, var_2 )
{
    if ( !isdefined( var_0.idflags_br_armor_hit ) )
        var_0.idflags_br_armor_hit = [];

    var_3 = self getentitynumber();
    var_0.idflags_br_armor_hit[var_3] = var_1;
    wait( var_2 );

    if ( isdefined( var_0 ) && isdefined( var_0.idflags_br_armor_hit ) )
        var_0.idflags_br_armor_hit[var_3] = undefined;

    if ( isdefined( var_0 ) && isdefined( var_0.idflags_br_armor_hit ) && var_0.idflags_br_armor_hit.size == 0 )
        var_0.idflags_br_armor_hit = undefined;
}

hudkothtimer( var_0, var_1, var_2 )
{
    if ( !istrue( var_0.spawn_juggernauts_fob ) )
    {
        var_3 = var_1.velocity * 150;
        var_0 playsound( "mp_care_package_high_impact" );
        var_0 physicslaunchserver( var_2, var_3 );
        var_0.spawn_juggernauts_fob = 1;
        level thread vehicle_collision_loadtablecell( var_0, var_1, 1 );
    }
    else
    {
        var_0 scripts\cp_mp\killstreaks\airdrop::destroycrate();
        var_0._id_11B0D = 1;
    }
}

_id_144CA()
{
    level endon( "game_ended" );
    self endon( "death" );

    for (;;)
    {
        self waittill( "trigger", var_0 );

        if ( isdefined( var_0 ) && isplayer( var_0 ) )
        {
            self._id_11E1D _id_13F03( var_0 );
            break;
        }
    }
}

_id_1423F( var_0, var_1 )
{

}

_id_1422F( var_0, var_1 )
{
    self notify( "vehicleBeginPath" );
    self endon( "vehicleBeginPath" );
    self endon( "death" );
    var_2 = 0;
    self.carriable_explode = 1;
    self.tutonplayerkilled = undefined;

    if ( !isdefined( var_1 ) )
        var_1 = 0;

    var_0.initial_enemy_spawner = 0;
    var_0._id_136FB = var_1;
    thread _id_1423A();
    var_3 = 1;
    self startpathnodes( var_0.points, var_0.times, 0, 0.5, 0.5, 0, 0, var_2, 0, 0, 1, 1 );
}

_id_14483( var_0 )
{
    self notify( "kill_path_swap_watcher" );
    level endon( "game_ended" );
    self endon( "death" );
    self endon( "kill_path_swap_watcher" );

    for (;;)
    {
        self waittill( "swap_to_next_path" );

        if ( self.inside_bush >= level.hudglobalkillcountmax.paths[var_0].size - 1 )
            self.inside_bush = 0;
        else
            self.inside_bush = self.inside_bush + 1;

        self startpathnodes( level.hudglobalkillcountmax.paths[var_0][self.inside_bush].points, level.hudglobalkillcountmax.paths[var_0][self.inside_bush].times, 0, 0.5, 0.5, 0, 0, 0, 0, 0, 1, 1 );
    }
}

freight_lift_build( var_0, var_1 )
{
    var_2 = 0.0000157828;
    var_3 = 3600;
    var_4 = 1;
    var_5 = distance( var_0, var_1 );
    var_6 = var_5 * var_2;
    var_7 = max( var_6 / 10 * var_3, var_4 );
    return var_7;
}

_id_1423A()
{
    level endon( "game_ended" );
    self notify( "vehicleDamageVehicles" );
    self endon( "vehicleDamageVehicles" );
    self endon( "death" );
    self vehphys_enablecollisioncallback( 1 );

    for (;;)
    {
        self waittill( "collision", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 );

        if ( !isdefined( var_7 ) )
            continue;

        if ( var_7 scripts\mp\gametypes\br_public.gsc::nuke_vault_suicidebombers() )
        {
            var_7 _id_1423E( self );
            continue;
        }

        if ( isdefined( var_7.equipmentref ) && var_7.equipmentref == "equip_tac_cover" )
            var_7 scripts\mp\equipment\tactical_cover::tac_cover_destroy( undefined, 1 );
    }
}

_id_14237()
{
    self notify( "kill_path_end_watcher" );
    level endon( "game_ended" );
    self endon( "death" );
    self endon( "kill_path_end_watcher" );

    for (;;)
    {
        self waittill( "reached_end_node" );
        self notify( "swap_to_next_path" );
    }
}

_id_1423E( var_0 )
{
    self._id_12282 = 1;
    self dodamage( self.health, var_0.origin, var_0, var_0 );

    if ( isdefined( self ) )
        self._id_12282 = undefined;
}

_id_11F86( var_0 )
{
    self endon( "death" );

    for (;;)
    {
        scripts\mp\objidpoolmanager::update_objective_onentity( var_0, self );
        wait 0.1;
    }
}

accessoryfem()
{

}

preventleave( var_0 )
{
    var_1 = var_0;
    var_2 = [];

    for ( var_2[var_2.size] = var_0; isdefined( var_1.target ); var_1 = var_3 )
    {
        var_3 = getvehiclenode( var_1.target, "targetname" );
        var_2[var_2.size] = var_3;
    }

    return var_2;
}

accessreaderscriptableused()
{

}

is_stealth_sequence_activated()
{
    self endon( "death" );
    self waittill( "enter_slowdown" );
    _id_13077( 1, 5, 5 );
    wait 3;
    _id_13077( 10, 5, 5 );
    thread is_stealth_sequence_activated();
}

_id_13077( var_0, var_1, var_2 )
{
    foreach ( var_4 in level.hudglobalkillcountmax.i_see_player_drone_watcher )
    {
        if ( isdefined( var_4 ) )
        {
            level.hudglobalkillcountmax.i_see_player_drone_watcher[0].intel_pieces = var_0;
            var_4 vehicle_setspeed( var_0, var_1, var_2 );
        }
    }
}

_id_13F03( var_0 )
{
    if ( isdefined( var_0 ) )
        _id_12AFF( var_0.team );

    if ( !isdefined( self.waypoint_endzone_vfx.groundtargetent ) )
        _id_135EE();

    if ( isdefined( self.initplunderpads ) && self.initplunderpads != "engaged" )
    {
        thread disengage_watcher();
        self.initplunderpads = "engaged";
        self notify( "engaged" );
        self.intel_pieces = 15;
        self.waypoint_endzone_vfx thread _id_13C3F();
        self._id_12D3F thread _id_13C3F();
        self.rearturret thread _id_13C3F();
        var_0.intel_collect_vo_func = 0;
        var_0.armsrace_c4_planter_backlot = 0;
        thread _id_13A6A();
        thread _id_12C4E();
        self.waypoint_endzone_vfx thread playapache_dialogue( var_0 );
        self._id_12D3F thread playapache_dialogue( var_0 );
        self.rearturret thread playapache_dialogue( var_0 );
    }
}

disengage_watcher()
{
    self endon( "death" );

    for (;;)
    {
        level.hudglobalkillcountmax.locindex = level.hudglobalkillcountmax.locindex - 1;

        if ( level.hudglobalkillcountmax.locindex <= 0 )
        {
            var_0 = scripts\common\utility::playersincylinder( self.origin, 1000 );

            if ( isdefined( var_0 ) && isdefined( var_0[0] ) )
                level.hudglobalkillcountmax.locindex = 20;
            else
                break;
        }

        wait 1;
    }

    if ( isdefined( self ) )
    {
        self.initplunderpads = "unengaged";

        if ( isdefined( self.waypoint_endzone_vfx ) )
        {
            self.waypoint_endzone_vfx cleartargetentity();
            self.waypoint_endzone_vfx notify( "kill_turret" );
            self.waypoint_endzone_vfx.groundtargetent delete();
        }

        if ( isdefined( self._id_12D3F ) )
        {
            self._id_12D3F cleartargetentity();
            self._id_12D3F notify( "kill_turret" );
            self._id_12D3F.groundtargetent delete();
        }

        if ( isdefined( self.rearturret ) )
        {
            self.rearturret cleartargetentity();
            self.rearturret notify( "kill_turret" );
            self.rearturret.groundtargetent delete();
        }

        if ( isdefined( self.cannon ) )
        {
            self.cannon cleartargetentity();
            self.cannon notify( "kill_turret" );
        }

        self._id_1253B thread _id_144CA();
    }

    self notify( "kill_mines" );
    self._id_12B1D = [];
    self notify( "engaged" );
    _id_13077( 5, 5, 5 );
}

_id_13A6A()
{
    self endon( "death" );
    self endon( "kill_turret" );
    level endon( "game_ended" );

    for (;;)
    {
        foreach ( var_1 in self._id_12B1D )
        {
            if ( isdefined( var_1 ) && isdefined( var_1.origin ) )
            {
                var_1.intel_collect_vo_func = _id_12EFC( var_1 ) + _id_12F0C( var_1 );

                if ( var_1.intel_collect_vo_func < 0 )
                    var_1.intel_collect_vo_func = 0;
            }
        }

        wait 0.1;
    }
}

_id_12EFC( var_0 )
{
    return ( 1 - distance2d( self.origin, var_0.origin ) / 5000 ) * 1;
}

_id_12F0C( var_0 )
{
    var_1 = var_0.armsrace_c4_planter_backlot;

    if ( !isdefined( var_0.armsrace_c4_planter_backlot ) )
        return 0;

    if ( var_0.armsrace_c4_planter_backlot > 1000 )
        var_1 = 1000;

    return var_1 / 1000 * 2;
}

_id_12C4E()
{
    level endon( "game_ended" );
    self endon( "death" );

    for (;;)
    {
        wait 5;

        foreach ( var_1 in self._id_12B1D )
        {
            if ( isdefined( var_1 ) && isdefined( var_1.armsrace_c4_planter_backlot ) )
            {
                var_1.armsrace_c4_planter_backlot = var_1.armsrace_c4_planter_backlot - 250;

                if ( var_1.armsrace_c4_planter_backlot < 0 )
                    var_1.armsrace_c4_planter_backlot = 0;
            }
        }
    }
}

playapache_dialogue( var_0 )
{
    self._id_11E1D endon( "death" );
    self endon( "kill_turret" );
    waitframe();
    var_1 = 0;
    var_2 = 1;
    var_3 = var_0;
    self.attackingtarget = var_0;
    self.canseetarget = _id_140D7( self, self.groundtargetent, self.attackingtarget );

    for (;;)
    {
        if ( isdefined( var_3 ) && self.canseetarget && !scripts\mp\utility\player::unset_relic_trex( var_3 ) && scripts\mp\utility\player::isreallyalive( var_3 ) && var_1 < self._id_11E1D.clipsize && scripts\engine\utility::distance_2d_squared( self.origin, var_3.origin ) < 25000000 )
        {
            if ( !isdefined( self.groundtargetent ) )
                return;

            self.groundtargetent.origin = var_3.origin;
            var_4 = vectordot( anglestoright( self._id_11E1D.angles ), vectornormalize( self.groundtargetent.origin - self.origin ) );
            var_5 = vectordot( -1 * anglestoforward( self._id_11E1D.angles ), vectornormalize( self.groundtargetent.origin - self.origin ) );

            if ( self.name == "right_turret" )
            {
                if ( var_4 >= self._id_11B52 )
                    fire_turret( var_3 );
            }
            else if ( self.name == "left_turret" )
            {
                if ( var_4 <= -1 * self._id_11B52 )
                    fire_turret( var_3 );
            }
            else if ( self.name == "rear_turret" && var_5 > self._id_11B52 )
                fire_turret( var_3 );

            var_1++;
        }
        else if ( var_1 < self._id_11E1D.clipsize )
            var_3 = selfrevivemonitorrevivebuttonpressed();
        else
        {
            wait 4;
            var_3 = selfrevivemonitorrevivebuttonpressed();
            var_1 = 0;
        }

        wait 0.1;
    }
}

fire_turret( var_0 )
{
    self settargetentity( self.groundtargetent );
    _id_13129( self, var_0.origin, level.hudglobalkillcountmax._id_13E81 );
    self shootturret( "tag_flash" );
}

_id_14448( var_0 )
{
    self._id_11E1D endon( "death" );
    self endon( "kill_turret" );
    self endon( "lost_target" );
    level endon( "game_ended" );

    if ( !isdefined( var_0 ) )
        return;

    for (;;)
    {
        if ( !_id_140D7( self, self.groundtargetent, var_0 ) )
        {
            wait 0.5;
            self.canseetarget = 0;
            self notify( "lost_target" );
        }
        else
            self.canseetarget = 1;

        wait 0.5;
    }
}

_id_14475()
{
    self endon( "death" );
    level endon( "game_ended" );
    var_0 = self.maxhealth * 0.6;

    for (;;)
    {
        if ( self.health < var_0 )
        {
            get_all_players_enemy_info_new();
            var_0 = var_0 / 2;
        }

        wait 0.1;
    }
}

get_all_players_enemy_info_new()
{
    level endon( "game_ended" );
    self endon( "kill_turret" );
    self endon( "death" );
    var_0 = 7;
    var_1 = semtex_killstuckplayer();

    for (;;)
    {
        if ( isdefined( var_1 ) )
        {
            level thread scripts\mp\gametypes\br_quest_util.gsc::_id_140B1( self.origin + ( 0, 0, 75 ), "attack", 2 );

            foreach ( var_3 in self._id_12B1D )
                scripts\mp\gametypes\br_killstreaks.gsc::isbrsquadleader( var_1, "precision_airstrike" );

            wait 1;
            thread pavelow_boss_explodes( var_1 );
            wait 60;
            break;
        }
    }
}

accuracy_bonus_factor()
{

}

selfrevivemonitorrevivebuttonpressed()
{
    var_0 = 0;
    var_1 = undefined;

    if ( self._id_11A52.size > 0 )
    {
        foreach ( var_3 in self._id_11A52 )
        {
            if ( isdefined( var_3 ) )
            {
                if ( isdefined( var_3.intel_collect_vo_func ) && var_3.intel_collect_vo_func > var_0 )
                    var_1 = var_3;
            }
        }

        thread _id_14448( var_1 );
    }

    return var_1;
}

semtex_killstuckplayer()
{
    if ( !isdefined( self ) || self._id_12B1D.size == 0 )
        return;

    if ( self._id_12B1D.size == 1 )
        return self._id_12B1D[0];

    return self._id_12B1D[randomintrange( 0, self._id_12B1D.size - 1 )];
}

selfrevivebuttonpressed()
{
    if ( !isdefined( self ) )
        return;

    var_0 = self._id_12B1D[0];

    for ( var_1 = 1; var_1 < self._id_12B1D.size; var_1++ )
    {
        if ( !isdefined( self._id_12B1D[var_1] ) )
        {
            self._id_12B1D = scripts\engine\utility::can_path_to_target( self._id_12B1D, var_1 );
            continue;
        }

        if ( scripts\engine\utility::distance_2d_squared( self, self._id_12B1D[var_1] ) < scripts\engine\utility::distance_2d_squared( self.origin, var_0.origin ) )
            var_0 = self._id_12B1D[var_1];
    }

    return var_0;
}

_id_12AFF( var_0 )
{
    var_1 = scripts\mp\utility\teams::getteamdata( var_0, "players" );

    if ( isdefined( var_1 ) )
    {
        foreach ( var_3 in var_1 )
        {
            if ( isdefined( var_3 ) && scripts\mp\utility\player::isreallyalive( var_3 ) && !scripts\engine\utility::array_contains( self._id_12B1D, var_3 ) )
                self._id_12B1D[self._id_12B1D.size] = var_3;
        }
    }
}

_id_13C3F()
{
    level endon( "game_ended" );
    self._id_11E1D endon( "death" );
    self endon( "kill_turret" );
    var_0 = 0;

    for ( var_1 = 0; var_1 < self._id_11E1D._id_12B1D.size + 1; var_1++ )
    {
        scripts\engine\utility::array_removeundefined( self._id_11E1D._id_12B1D );
        scripts\engine\utility::array_removeundefined( self._id_11A52 );

        if ( var_1 >= self._id_11E1D._id_12B1D.size )
            var_1 = 0;

        if ( self._id_11E1D._id_12B1D.size == 0 )
            break;

        if ( scripts\mp\utility\player::unset_relic_trex( self._id_11E1D._id_12B1D[var_1] ) )
            self._id_11E1D _id_12BEA( self._id_11E1D._id_12B1D[var_1] );
        else if ( _id_140D7( self, self.groundtargetent, self._id_11E1D._id_12B1D[var_1] ) )
        {
            if ( !scripts\engine\utility::array_contains( self._id_11A52, self._id_11E1D._id_12B1D[var_1] ) )
                self._id_11A52[self._id_11A52.size] = self._id_11E1D._id_12B1D[var_1];
        }
        else if ( scripts\engine\utility::array_contains( self._id_11A52, self._id_11E1D._id_12B1D[var_1] ) )
        {
            self._id_11A52 = scripts\engine\utility::array_remove( self._id_11A52, self._id_11E1D._id_12B1D[var_1] );

            if ( self._id_11A52.size <= 0 )
                self cleartargetentity();
        }

        if ( var_1 % 3 == 0 )
            wait 0.1;
    }
}

_id_12BEA( var_0 )
{
    if ( !isdefined( var_0 ) )
        return;

    var_1 = scripts\engine\utility::array_contains( self._id_12D3F._id_11A52, var_0 );
    var_2 = scripts\engine\utility::array_contains( self.waypoint_endzone_vfx._id_11A52, var_0 );
    var_3 = scripts\engine\utility::array_contains( self.rearturret._id_11A52, var_0 );

    if ( var_1 )
        self._id_12D3F._id_11A52 = scripts\engine\utility::array_remove( self._id_12D3F._id_11A52, var_0 );
    else if ( var_2 )
        self.waypoint_endzone_vfx._id_11A52 = scripts\engine\utility::array_remove( self.waypoint_endzone_vfx._id_11A52, var_0 );
    else if ( var_3 )
        self.rearturret._id_11A52 = scripts\engine\utility::array_remove( self.rearturret._id_11A52, var_0 );
}

_id_13129( var_0, var_1, var_2 )
{
    var_3 = var_1;

    if ( isdefined( var_2 ) )
    {
        var_4 = randomint( var_2 );
        var_5 = randomint( 360 );
        var_6 = randomintrange( 32, 48 );
        var_7 = var_1[0] + var_4 * cos( var_5 );
        var_8 = var_1[1] + var_4 * sin( var_5 );
        var_9 = var_1[2] + var_6;
        var_3 = ( var_7, var_8, var_9 );
        var_0.groundtargetent.origin = var_3;
    }
}

accessoryfemband()
{

}

hurt_enabled()
{
    scripts\mp\vehicles\damage::set_vehicle_hit_damage_data( self.vehiclename, 20 );
    hudsbredeploy( "iw8_la_gromeo_mp", 4.0, 20 );
    hudsbredeploy( "iw8_la_kgolf_mp", 4.0, 20 );
    hudsbredeploy( "iw8_la_t9standard_mp", 4.0, 20 );
    hudsbredeploy( "iw8_la_rpapa7_mp", 4.0, 20 );
    hudsbredeploy( "iw8_la_t9freefire_mp", 4.0, 20 );
    hudsbredeploy( "iw8_la_juliet_mp", 5.0, 20 );
    hudsbredeploy( "iw8_la_gromeoks_mp", 4.0, 20 );
    hudsbredeploy( "iw8_la_mike32_mp", 2.85714, 20 );
    hudsbredeploy( "iw8_la_t9launcher_mp", 2.85714, 20 );
    hudsbredeploy( "iw8_ar_mike4_mp", 2.85714, 20 );
    hudsbredeploy( "iw8_ar_akilo47_mp", 2.85714, 20 );
    hudsbredeploy( "s4_la_palpha_mp", 4.0, 20 );
    hudsbredeploy( "s4_la_m1bravo_mp", 4.0, 20 );
    hudsbredeploy( "s4_la_palpha42_mp", 4.0, 20 );
    hudsbredeploy( "c4_mp_p", 4.0, 20 );
    hudsbredeploy( "semtex_mp", 2.85714, 20 );
    hudsbredeploy( "frag_grenade_mp", 2.85714, 20 );
    hudsbredeploy( "pop_rocket_mp", 2.85714, 20 );
    hudsbredeploy( "molotov_mp", 1.81818, 20 );
    hudsbredeploy( "at_mine_ap_mp", 1.81818, 20 );
    hudsbredeploy( "at_mine_mp", 2.85714, 20 );
    hudsbredeploy( "thermite_mp", 1, 36 );
    hudsbredeploy( "thermite_av_mp", 1, 36 );
    hudsbredeploy( "thermite_bolt_mp", 1, 30 );
    hudsbredeploy( "thermite_xmike109_mp", 1, 52 );
    hudsbredeploy( "emp_grenade_mp", 2.85714, 20 );
    hudsbredeploy( "claymore_mp", 2.85714, 20 );
    hudsbredeploy( "semtex_bolt_mp", 2.0, 20 );
    hudsbredeploy( "semtex_xmike109_mp", 1.42857, 20 );
    hudsbredeploy( "semtex_aalpha12_mp", 1.0, 20 );
    scripts\cp_mp\vehicles\vehicle_damage::vehicle_damage_enableownerdamage( self );
    scripts\mp\vehicles\damage::get_vehicle_mod_damage_data( self.vehiclename, 1 );
    scripts\mp\vehicles\damage::set_pre_mod_damage_callback( self.vehiclename, ::hunters_killed_by_targets );
    scripts\mp\vehicles\damage::set_post_mod_damage_callback( self.vehiclename, ::humanspawninair );
    scripts\mp\vehicles\damage::set_death_callback( self.vehiclename, ::hudnumtoconsume );
    scripts\cp_mp\vehicles\vehicle_tracking::vehicle_tracking_registerinstance( self );
}

hudsbredeploy( var_0, var_1, var_2 )
{
    scripts\mp\vehicles\damage::set_weapon_hit_damage_data_for_vehicle( var_0, var_1, self.vehiclename );
    scripts\mp\vehicles\damage::set_vehicle_hit_damage_data_for_weapon( self.vehiclename, var_2, var_0 );
}

hunters_killed_by_targets( var_0 )
{
    var_1 = var_0.damage;
    var_2 = var_0.attacker;

    if ( !isdefined( var_2 ) || !isplayer( var_2 ) )
        return 0;

    level.hudglobalkillcountmax.locindex = 20;

    if ( isdefined( self.initplunderpads ) && self.initplunderpads != "engaged" && !level.hudglobalkillcountmax.getoldestdogtags )
        _id_13F03( var_2 );

    return 1;
}

humanspawninair( var_0 )
{
    if ( !isdefined( self.attackers ) )
        self.attackers = [];

    var_1 = hudkothbesttimelabel( var_0.attacker );

    if ( !isdefined( var_1 ) )
    {
        var_2 = spawnstruct();
        var_2.player = var_0.attacker;
        var_2.objweapon = var_0.objweapon;
        var_2._id_13BEE = var_0.damage;
        self.attackers[self.attackers.size] = var_2;
    }
    else
    {
        var_1._id_13BEE = var_1._id_13BEE + var_0.damage;
        var_1.objweapon = var_0.objweapon;
    }

    if ( !isdefined( var_0.attacker.armsrace_c4_planter_backlot ) )
        var_0.attacker.armsrace_c4_planter_backlot = 0;

    var_0.attacker.armsrace_c4_planter_backlot = var_0.attacker.armsrace_c4_planter_backlot + var_0.damage;

    if ( var_0.attacker.armsrace_c4_planter_backlot > 1000 )
        var_0.attacker.armsrace_c4_planter_backlot = 1000;

    level.hudglobalkillcountmax._id_119E9 = level.hudglobalkillcountmax._id_119E9 - var_0.damage;

    if ( is_enemy_dangerous( var_0.objweapon.basename ) )
        self notify( "enter_slowdown" );

    if ( level.hudglobalkillcountmax._id_119E9 <= 0 )
        self notify( "loot_splat" );

    if ( self.health < self.maxhealth * 0.8 && self.is_enemy_of_type == 1 )
    {
        self.is_enemy_of_type = 2;
        thread watchcrategastimeout( 6 );
    }

    return 1;
}

hasseenendgamesplash()
{
    self endon( "death" );
    self endon( "game_ended" );

    for (;;)
        wait 1;
}

hudplunderstart()
{
    var_0 = getdvar( "scr_br_verse" );
    level._id_12815 = spawnstruct();
    level._id_12815.ammo = [ "brloot_ammo_919", "brloot_ammo_12g", "brloot_ammo_762", "brloot_ammo_50cal", "brloot_ammo_rocket" ];
    level._id_12815.armor = [ "brloot_armor_plate" ];
    level._id_12815.weapon_xp_iw8_sh_mike26 = [ "brloot_offhand_c4", "brloot_offhand_molotov" ];

    if ( isdefined( var_0 ) && var_0 != "ww2" )
    {
        level._id_12815.weapon_xp_iw8_sh_mike26[level._id_12815.weapon_xp_iw8_sh_mike26.size] = "brloot_offhand_thermite";
        level._id_12815.weapon_xp_iw8_sh_mike26[level._id_12815.weapon_xp_iw8_sh_mike26.size] = "brloot_offhand_claymore";
        level._id_12815.weapon_xp_iw8_sh_mike26[level._id_12815.weapon_xp_iw8_sh_mike26.size] = "brloot_offhand_semtex";
    }

    level._id_12815._id_11CD2 = [ "brloot_plunder_cash_uncommon_1" ];
}

hudglobalkillcount( var_0 )
{
    if ( scripts\mp\gametypes\br_lootcache.gsc::get_bonus_targets( var_0 ) )
    {
        var_1 = level.br_pickups.delay_hide_player_clip[var_0];
        var_2 = scripts\mp\gametypes\br_pickups.gsc::test_ai_anim();
        var_3 = anglestoforward( self.angles ) * 155 * -1;
        var_4 = self.origin + var_3;
        var_5 = ( var_4[0], var_4[1], self.origin[2] + 100 );
        var_6 = vectornormalize( var_5 - ( self.origin + ( 0, 0, 100 ) ) ) * 155;
        var_7 = self.origin + var_6;

        if ( issubstr( var_0, "ammo" ) )
        {
            var_8 = scripts\mp\gametypes\br_lootcache.gsc::_id_11A41( var_0, var_2, var_7, self.angles, 0, 0 );
            var_8.count = level.br_pickups.maxcounts[var_0];
        }
        else
        {
            var_9 = scripts\mp\gametypes\br_lootcache.gsc::_id_11A41( var_0, var_2, var_7, self.angles, 0, 0 );

            if ( isdefined( var_9 ) )
                var_9.count = 1;
        }
    }
}

hunterswonending()
{
    var_0 = randomint( 4 );

    switch ( var_0 )
    {
        case 0:
            var_1 = level._id_12815.ammo[randomint( level._id_12815.ammo.size - 1 )];
            hudglobalkillcount( var_1 );
            break;
        case 1:
            var_1 = level._id_12815.armor[0];
            hudglobalkillcount( var_1 );
            break;
        case 2:
            var_1 = level._id_12815.weapon_xp_iw8_sh_mike26[randomint( level._id_12815.weapon_xp_iw8_sh_mike26.size - 1 )];
            hudglobalkillcount( var_1 );
            break;
        case 3:
            var_1 = level._id_12815._id_11CD2[0];
            hudglobalkillcount( var_1 );
            break;
        default:
            break;
    }
}

vehicle_damage_onenterstateheavy()
{
    self endon( "death" );
    self waittill( "loot_splat" );
    hunterswonending();
    wait 0.1;
    hunterswonending();
    wait 0.1;
    hunterswonending();
    wait 0.1;
    hunterswonending();
    level.hudglobalkillcountmax._id_119E9 = 500;
    thread vehicle_damage_onenterstateheavy();
}

is_enemy_dangerous( var_0 )
{
    if ( var_0 == "c4_mp_p" || var_0 == "at_mine_ap_mp" || var_0 == "at_mine_mp" || var_0 == "claymore_mp" )
        return 1;

    return 0;
}

hudnumtoconsume( var_0 )
{
    if ( isdefined( self.waypoint_endzone_vfx ) )
        self.waypoint_endzone_vfx delete();

    if ( isdefined( self._id_12D3F ) )
        self._id_12D3F delete();

    if ( isdefined( self.cannon ) )
        self.cannon delete();

    if ( isdefined( self.rearturret ) )
        self.rearturret delete();

    self._id_1253B delete();
    self.computerrebootused delete();
    var_1 = undefined;
    var_2 = undefined;
    var_3 = var_0.attacker;
    var_4 = istrue( self._id_133DA );
    level.hudglobalkillcountmax.i_see_player_drone_watcher = scripts\engine\utility::array_remove( level.hudglobalkillcountmax.i_see_player_drone_watcher, self );
    self notify( "death", var_0.attacker, var_0.meansofdeath, var_0._id_14596, var_0.damagelocation );

    if ( !var_4 )
    {
        foreach ( var_6 in self.attackers )
        {
            if ( isdefined( var_6.player ) )
            {
                if ( isdefined( var_3 ) && var_3 == var_6.player )
                    var_1 = "convoy_killed";
                else
                    var_1 = "convoy_assist";

                var_2 = scripts\mp\rank::getscoreinfovalue( var_1 );
                var_6.player thread scripts\mp\rank::giverankxp( var_1, var_2, var_6.objweapon );
                var_6.player thread scripts\mp\events::killeventtextpopup( var_1, 0 );
                thread scripts\cp\vehicles\vehicle_compass_cp::vehiclekilled( self, var_0.inflictor, var_6.player, 0, var_6.objweapon );
            }
        }

        foreach ( var_9 in self._id_12B1D )
        {
            if ( isdefined( var_9 ) )
                var_9 thread scripts\mp\hud_message::showsplash( "convoy_truck_finish" );
        }

        if ( getdvarint( "scr_armored_convoy_explicit_cash_drops", 0 ) == 1 )
        {
            convoy_spawn_specific_cash_type( "brloot_plunder_cash_uncommon_1", getdvarint( "scr_armored_convoy_cash_uncommon_1_count", 0 ), self.origin );
            convoy_spawn_specific_cash_type( "brloot_plunder_cash_uncommon_2", getdvarint( "scr_armored_convoy_cash_uncommon_2_count", 0 ), self.origin );
            convoy_spawn_specific_cash_type( "brloot_plunder_cash_uncommon_3", getdvarint( "scr_armored_convoy_cash_uncommon_3_count", 0 ), self.origin );
            convoy_spawn_specific_cash_type( "brloot_plunder_cash_rare_1", getdvarint( "scr_armored_convoy_cash_rare_1_count", 0 ), self.origin );
            convoy_spawn_specific_cash_type( "brloot_plunder_cash_rare_2", getdvarint( "scr_armored_convoy_cash_rare_2_count", 0 ), self.origin );
            convoy_spawn_specific_cash_type( "brloot_plunder_cash_epic_1", getdvarint( "scr_armored_convoy_cash_epic_1_count", 0 ), self.origin );
            convoy_spawn_specific_cash_type( "brloot_plunder_cash_epic_2", getdvarint( "scr_armored_convoy_cash_epic_1_count", 0 ), self.origin );
        }
        else
            level thread _handlevehiclerepair::_id_13673( "ai_convoy_cash", self.origin, 10, 1 );

        level thread _handlevehiclerepair::_id_13673( "ai_convoy_weapon", self.origin, 1, 0 );
        level thread _handlevehiclerepair::_id_13673( "ai_convoy_gear", self.origin, 2, 0 );
        level thread _handlevehiclerepair::_id_13673( "ai_convoy_supers", self.origin, 3, 0 );
        level thread _handlevehiclerepair::_id_13673( "ai_convoy_killstreaks", self.origin, 1, 0 );
    }

    var_11 = getdvarint( "scr_convoy_team_points", 0 );

    if ( isdefined( var_3 ) && var_11 > 0 && !isdefined( var_0._id_11E93 ) )
        level scripts\mp\gamescore::giveteamscoreforobjective( var_3.team, var_11, 0 );

    level.hudglobalkillcountmax.brvalidatekillcam++;
    var_12 = self gettagorigin( "tag_origin" );
    playfx( scripts\engine\utility::getfx( "convoy_truck_explode" ), var_12, anglestoforward( self.angles ), anglestoup( self.angles ) );
    playsoundatpos( var_12, "car_explode" );
    earthquake( 0.4, 800, var_12, 0.7 );
    playrumbleonposition( "grenade_rumble", var_12 );
    physicsexplosionsphere( var_12, 500, 200, 1 );
    scripts\cp_mp\vehicles\vehicle_tracking::_deletevehicle( self );
    scripts\engine\utility::array_removeundefined( level.hudglobalkillcountmax.i_see_player_drone_watcher );
    return 0;
}

convoy_spawn_specific_cash_type( var_0, var_1, var_2 )
{
    var_3 = spawnstruct();
    var_3.item = var_0;
    var_3.ml_p3_to_safehouse_transition = var_1;
    var_3.heightoffset = 0;
    var_3.origin = var_2;

    for ( var_4 = 0; var_4 < var_1; var_4++ )
        thread _handlevehiclerepair::_id_13672( var_3 );
}

hudkothbesttimelabel( var_0 )
{
    var_1 = undefined;

    if ( !isdefined( var_0 ) )
        return var_1;

    foreach ( var_3 in self.attackers )
    {
        if ( isdefined( var_3.player ) && var_0 == var_3.player )
        {
            var_1 = var_3;
            break;
        }
    }

    return var_1;
}

minigamelosersettings()
{
    var_0 = self.origin;

    if ( isdefined( var_0 ) )
    {
        var_1 = scripts\cp_mp\killstreaks\airdrop::dropcrate( undefined, undefined, "heavy_weapon_crate", self.origin, ( 0, randomfloat( 360 ), 0 ), var_0 );
        var_1._id_13428 = spawn( "script_model", var_0 );
        var_1._id_13428 setmodel( "ks_airdrop_crate_br" );
        var_1._id_13428 setscriptablepartstate( "smoke_signal", "on", 0 );

        if ( isdefined( var_1 ) )
            var_1 setscriptablepartstate( "objective", "heavy_weapon_public" );

        var_2 = scripts\cp_mp\killstreaks\airdrop::gettriggerobject( var_1 );
        var_2._id_140A0 = 10;
    }
}

_id_140D7( var_0, var_1, var_2 )
{
    self endon( "explode" );
    self endon( "death" );

    if ( !isdefined( var_2 ) || scripts\mp\utility\player::unset_relic_trex( var_2 ) )
        return 0;

    var_3 = 1;
    var_4 = 1;
    var_5 = 0;
    var_6 = 1;
    var_7 = 0;
    var_8 = 1;
    var_9 = 0;
    var_10 = 1;
    var_11 = 0;
    var_12 = scripts\engine\trace::create_contents( var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11 );
    var_12 = var_12 + init_cp_execution( "physicscontents_solid" );
    var_12 = var_12 + init_cp_execution( "physicscontents_water" );
    var_13 = [ var_0 ];

    if ( isdefined( var_1 ) )
    {
        var_13[var_13.size] = var_1;
        var_14 = var_1 getlinkedchildren();

        if ( isdefined( var_14 ) && var_14.size > 0 )
            var_13 = scripts\engine\utility::array_combine( var_13, var_14 );
    }

    var_15 = scripts\engine\trace::ray_trace_passed( var_0 gettagorigin( "tag_barrel" ), var_2.origin, var_13, var_12 );
    return var_15;
}

init_cp_execution( var_0 )
{
    var_1 = [ var_0 ];
    return physics_createcontents( var_1 );
}

accessorybig()
{

}

watchcheck()
{

}

buttonmashcount( var_0 )
{
    var_0 scripts\mp\hud_message::showsplash( "br_reveal_bombardment_launch_enemy" );
}

crates_delete_early()
{
    var_0 = getmaxobjectivecount( self.origin[0], self.origin[1], 2000 );
    level waittill( "launch_bombardment" );
    var_0 delete();
}

create_animpack( var_0, var_1 )
{
    var_2 = magicgrenademanual( "toma_proj_mp", var_1.sourcepos, var_1.initvelocity, 5 );
    var_3 = var_2 scripts\mp\objidpoolmanager::createobjective( "icon_minimap_cruisemissile", "axis", undefined, 1, 1 );
    var_2 setentityowner( self );
    var_2 setotherent( self );
    var_2.owner = self;
    var_2 setscriptablepartstate( "launch", "active", 0 );
    var_2 setscriptablepartstate( "trail", "active", 0 );
    var_2.explodeent = spawn( "script_model", var_2.origin );
    var_2.explodeent setmodel( "ks_toma_strike_missile_mp_x2" );
    var_2.explodeent linkto( var_2 );
    var_2.explodeent dontinterpolate();
    var_2.explodeent setentityowner( self );
    var_4 = spawn( "script_model", var_1.sourcepos );
    var_4 linkto( var_2, "tag_origin", ( 10, 0, 10 ), ( 0, 0, 0 ) );
    var_2.killcament = var_4;
    var_2.streakinfo = var_0;
    var_5 = randomint( 360 );
    var_2.angles = ( 90, var_5, 0 );
    var_2 thread create_badplace_extraction( var_1.preexplpos, var_1.parachutecleanup );
    var_2 thread scripts\cp_mp\killstreaks\toma_strike::toma_strike_watch_stuck( vectortoangles( var_1.initvelocity ), gettime(), var_1.initvelocity );
    var_2 waittill( "death" );
    objective_delete( var_3 );
}

cratephysicsoncallback( var_0, var_1 )
{
    var_2 = spawnstruct();
    var_3 = var_0 + ( 0, 0, 5000 );
    var_4 = vectornormalize( var_0 - ( var_3[0], var_3[1], 0 ) );
    var_5 = scripts\cp_mp\killstreaks\toma_strike::_id_13BD6( var_0, var_1, var_4 );
    var_6 = ( 0, 0, -1 * getdvarint( "NPOQPMP", 800 ) );
    var_7 = ( var_5.point - 0.5 * var_6 * squared( 1 ) - var_3 ) / 1;
    var_8 = 1 * randomfloatrange( 0.95, 1.0 );
    var_9 = var_3 + var_7 * var_8 + 0.5 * var_6 * squared( var_8 );
    var_2.sourcepos = var_3;
    var_2.num_of_frame_frozen = var_5.num_of_frame_frozen;
    var_2.num_of_subway_cars = var_5.num_of_subway_cars;
    var_2.goalpos = var_5.point;
    var_2.preexplpos = var_9;
    var_2.initvelocity = var_7;
    var_2.parachutecleanup = var_8;
    return var_2;
}

create_badplace_extraction( var_0, var_1 )
{
    self endon( "death" );
    self endon( "missile_dest_failed" );
    self.killcament thread scripts\cp_mp\killstreaks\toma_strike::toma_strike_move_killcam( 0.75, var_0 );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_1 );
    self setmissileminimapvisible( 0 );
    thread scripts\cp_mp\killstreaks\toma_strike::toma_strike_missile_explode( var_0 );
}

accessoryface()
{

}

entityhit()
{
    var_0 = spawnstruct();
    var_0.streakname = "toma_strike";
    var_0.owner = self;
    var_0.score = 0;
    var_0.shots_fired = 0;
    var_0.hits = 0;
    var_0.damage = 0;
    var_0.kills = 0;
    var_0._id_121A9 = "ks_toma_strike_missile_mp_x2";
    var_0._id_121A8 = "ks_toma_strike_cluster_mp_x2";

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "createCustomStreakData" ) )
        var_0 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "createCustomStreakData" ) ]]( var_0, "toma_strike" );

    return var_0;
}

_id_11D2C( var_0, var_1, var_2 )
{
    var_3 = play_ac130_approach_scene();
    _id_132B3( var_3, var_0, var_1, var_2 );
}

pavelow_boss_explodes( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    self endon( "death" );
    var_1 = spawnstruct();
    var_1.streakname = "precision_airstrike";
    var_1.owner = self;
    var_1.score = 0;
    var_1.shots_fired = 0;
    var_1.hits = 0;
    var_1.damage = 0;
    var_1._id_133DE = 1;
    var_1.kills = 0;
    var_1._id_133CE = 1;
    var_1.setuptimelimit = 0;
    var_1.brmini_ontimelimit = 1;
    var_1.lifeid = 0;
    self.pers["team"] = "neutral";
    var_2 = spawnstruct();
    var_2.origin = var_0.origin;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "createCustomStreakData" ) )
        var_1 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "createCustomStreakData" ) ]]( var_1, "precision_airstrike" );

    if ( isdefined( level.killstreaktriggeredfunc ) )
    {
        if ( !level [[ level.killstreaktriggeredfunc ]]( var_1 ) )
            return 0;
    }

    if ( isdefined( level.killstreakbeginusefunc ) )
    {
        if ( !level [[ level.killstreakbeginusefunc ]]( var_1 ) )
            return 0;
    }

    var_3 = level.scr_anim[var_1.streakname]["airstrike_flyby"];
    var_4 = getanimlength( var_3 );
    var_5 = scripts\engine\utility::get_notetrack_time( var_3, "attack" );
    var_6 = scripts\cp_mp\killstreaks\airstrike::branalytics_respawn( var_0.origin + anglestoforward( var_0.angles ) * 1000, self );
    var_7 = self.angles[1];
    scripts\cp_mp\killstreaks\airstrike::finishairstrikeusage( var_0.origin, var_7, var_2, var_1, var_3, var_6 );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_4 );

    if ( isdefined( level.killstreakfinishusefunc ) )
        level thread [[ level.killstreakfinishusefunc ]]( var_1 );

    scripts\cp_mp\killstreaks\airstrike::branalytics_seteventdelayedstate( self, var_6 );
}

play_ac130_approach_scene()
{
    var_0 = undefined;

    if ( isdefined( level.idflags_br_armor_break ) )
        var_0 = level.idflags_br_armor_break;
    else
    {
        var_1 = scripts\engine\utility::array_reverse( level.agentarray );

        foreach ( var_3 in var_1 )
        {
            if ( !isdefined( var_3 ) )
                continue;

            if ( isdefined( var_3.team ) && var_3.team != "axis" )
                continue;

            if ( !isdefined( var_3.team ) && isdefined( var_3.agentteam ) )
                continue;

            var_0 = var_3;
            var_0._id_1407D = 1;

            if ( !isdefined( var_0.pers["nextKillstreakID"] ) )
                var_0.pers["nextKillstreakID"] = 0;

            break;
        }

        level.idflags_br_armor_break = var_0;
    }

    return var_0;
}

_id_132B3( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_3 ) )
        var_3 = var_0 scripts\cp_mp\utility\killstreak_utility::createstreakinfo( "toma_strike", var_0 );

    var_3._id_11EAE = 0;
    var_3._id_11F47 = 1;
    var_3.vehicle_process_node_when_at_goal = 1;
    var_3._id_121A9 = "ks_toma_strike_missile_mp_x2";
    var_3._id_121A8 = "ks_toma_strike_cluster_mp_x2";
    var_0.origin = var_1;
    var_0.angles = vectortoangles( var_2 - var_1 );
    var_3._id_13A81 = var_2;
    var_0 thread scripts\cp_mp\killstreaks\toma_strike::starttomastrike( 5, undefined, undefined, var_3 );
}

_id_13AFB( var_0, var_1 )
{
    var_2 = scripts\mp\mp_agent::spawnnewagent( "actor_enemy_lw_br", "team_two_hundred", var_0, var_1 );
    var_2 setgoalvolume( level.hudglobalkillcountmax.getoriginidentifierstringnoz );
    var_2 bomber();
}

_id_13068( var_0 )
{
    switch ( var_0 )
    {
        case "assault":
            bomb_hostage_play_anim( "iw8_ar_akilo47" );
            self.goalradius = randomintrange( 100, 200 );
            break;
        case "smg":
            bomb_hostage_play_anim( "iw8_sm_mpapa5" );
            self.goalradius = randomintrange( 50, 100 );
            break;
        case "lmg":
            break;
        case "shotgun":
            break;
        default:
            break;
    }
}

_id_13521( var_0, var_1 )
{
    var_2 = [];

    for ( var_3 = 0; var_3 < var_0; var_3++ )
    {
        var_4 = var_1 + 300 * anglestoforward( ( 0, ( var_3 + 1 ) * 72, 0 ) );
        var_5 = _id_13AFB( var_4, ( 0, 0, 0 ) );
        var_2[var_2.size] = var_5;
    }

    return var_2;
}

bomb_hostage_play_anim( var_0, var_1 )
{
    self.weapon = scripts\mp\class::buildweapon( var_0, [ "laserrange", "none", "none", "none", "none", "none" ], "none", "none", var_1 );
    self giveweapon( self.weapon );
    self.bulletsinclip = weaponclipsize( self.weapon );
    self.primaryweapon = self.weapon;
}

bomber()
{
    self.recentkillcount = 0;
    self.recentdefendcount = 0;
    self.kills = 0;
    self.deaths = 0;
    self.pers["cur_kill_streak"] = 0;
    self.pers["cur_death_streak"] = 0;
    self.pers["cur_kill_streak_for_nuke"] = 0;
    self.tookweaponfrom = [];
    self.killedplayers = [];
    self._id_1407D = 0;
}

bonuskillscharge()
{
    level.ai_event endon( "soa_tower_stop_ai_event" );
    level endon( "game_ended" );
    self endon( "terminate_ai_threads" );
    self endon( "death" );
    var_0 = gettime() / 1000;

    for (;;)
    {
        var_1 = self getgoalvolume();
        var_2 = distance2d( self.origin, var_1.origin );
        var_3 = var_2 < 600;
        self._id_145D4 = var_3;

        if ( var_3 )
        {
            var_4 = gettime() / 1000;
            var_5 = var_4 - var_0;
            self._id_13B6B = var_5;
            var_6 = level.ai_event.binoculars_targetisvalid;
            self._id_13B6C = var_6 - var_5;

            if ( var_4 - var_0 >= var_6 )
            {
                var_7 = [];

                foreach ( var_9 in level.ai_event.select_hostage_room_three_spawners )
                {
                    if ( var_9.players.size > 0 && var_9 != var_1 )
                        var_7[var_7.size] = var_9;
                }

                if ( var_7.size > 0 )
                {
                    var_11 = scripts\engine\utility::random( var_7 );
                    self setgoalvolumeauto( var_11 );
                }

                var_0 = gettime() / 1000;
            }
        }
        else
            var_0 = gettime() / 1000;

        wait 1.0;
    }
}

_id_134E9()
{

}

_id_134EA()
{

}

activate_scavenger_bag()
{

}

watchcrategastimeout( var_0 )
{
    self endon( "death" );
    self endon( "checkpoint_encounter_started" );
    self endon( "kill_mines" );
    var_1 = randomintrange( 6, 10 );
    wait( var_1 );
    var_2 = 1;

    for ( var_3 = 0; var_3 < var_0; var_3++ )
    {
        self.waypoint_completed_vfx = self gettagorigin( "TAG_DROP_BACK_LEFT" );
        self._id_12D3E = self gettagorigin( "TAG_DROP_BACK_RIGHT" );
        var_4 = randomintrange( 4, 6 );

        if ( var_2 )
            var_5 = magicgrenademanual( "semtex_mp", self.waypoint_completed_vfx, ( 0, 0, -2 ), var_4, self );
        else
            var_5 = magicgrenademanual( "semtex_mp", self._id_12D3E, ( 0, 0, -2 ), var_4, self );

        var_2 = !var_2;
        wait 0.5;
    }

    thread watchcrategastimeout( var_0 );
}
