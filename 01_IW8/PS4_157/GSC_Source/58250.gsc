// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

activate_minigun()
{

}

init()
{
    if ( getdvarint( "scr_chemical_factory_trap_active", 0 ) == 1 )
    {
        level._effects["vfx_chem_factory_trap"] = loadfx( "vfx/iw8_br/equipment/vfx_factory_trap_ground_gas" );
        level thread table_getaddblueprintattachments();
    }
}

table_getaddblueprintattachments()
{
    level endon( "game_ended" );
    waitframe();
    scripts\engine\scriptable::_id_12F5B( "chemlab_button", ::plunder_repositorysendcountdownmessage );
    var_0 = easepower( "scriptable_chemlab_trap_button", ( 3459.75, 37679, 1193.75 ), ( 75, 223.998, 179.999 ) );
    var_0 setscriptablepartstate( "chemlab_button", "on" );
    level.getteamspawnbots = spawnstruct();
    level.getteamspawnbots.plunderatcapacity = getdvarint( "chemlab_event_gastrap_trigger_width", 750 );
    level.getteamspawnbots.plunder_updaterepositorywidgetforplayer = getdvarint( "chemlab_event_gastrap_trigger_length", 750 );
    level.getteamspawnbots.plunder_updateanchoredwidgetforplayers = getdvarint( "chemlab_event_gastrap_trigger_height", 240 );
    level.getteamspawnbots.plunder_tenpercent_music = getdvarint( "chemlab_event_gastrap_trigger_durration", 30 );
    level.getteamspawnbots.plunder_thirtypercent_music = getdvarint( "chemlab_event_gastrap_damage_per_tick", 8 );
    level.getteamspawnbots.plunder_repositoryusecallback = getdvarint( "chemlab_event_gastrap_tick_rate", 1 );
    level.getteamspawnbots.plunder_items_dropped = getdvarint( "chemlab_event_gastrap_fill_amount", 100.0 );
    level.getteamspawnbots.plunder_items_picked_up = getdvarint( "chemlab_event_gastrap_fill_rate", 1 );
    level.getteamspawnbots.plunder_repositoryusescriptablecallback = getdvarint( "chemlab_event_gastrap_cooldown", 10 );
    level.getteamspawnbots.plunder_deregisterrepositoryinstance = [];
    level.getteamspawnbots.plundercountroll = plunderusable();
    level.getteamspawnbots._id_11A70 = plunderusedisabledwhenempty();
}

plunderusable()
{
    var_0 = [];
    var_0[var_0.size] = ( 2987, 37243, 600 );
    return var_0;
}

plunderusedisabledwhenempty()
{
    var_0 = [];
    var_0[var_0.size] = ( 2808, 36760, 672 );
    var_0[var_0.size] = ( 3320, 37248, 672 );
    var_0[var_0.size] = ( 2792, 36760, 672 );
    var_0[var_0.size] = ( 2496, 37048, 672 );
    var_0[var_0.size] = ( 2832, 37352, 672 );
    var_0[var_0.size] = ( 3176, 37656, 672 );
    var_0[var_0.size] = ( 3056, 37304, 672 );
    var_0[var_0.size] = ( 2776, 36720, 672 );
    var_0[var_0.size] = ( 2432, 37024, 688 );
    var_0[var_0.size] = ( 3056, 37304, 912.25 );
    var_0[var_0.size] = ( 3088, 37632, 912.25 );
    var_0[var_0.size] = ( 3376, 37616, 912.25 );
    var_0[var_0.size] = ( 3384, 37288, 912.25 );
    var_0[var_0.size] = ( 3040, 36960, 912.25 );
    var_0[var_0.size] = ( 2696, 37104, 912.25 );
    var_0[var_0.size] = ( 2864, 37448, 912.25 );
    var_0[var_0.size] = ( 3136, 37224, 912.25 );
    var_0[var_0.size] = ( 2776, 36720, 912.25 );
    var_0[var_0.size] = ( 2448, 37048, 912.25 );
    var_0[var_0.size] = ( 3216, 37848, 912.25 );
    var_0[var_0.size] = ( 3560, 37512, 912.25 );
    return var_0;
}

activate_laser_from_struct()
{

}

plunder_repositorysendcountdownmessage( var_0, var_1, var_2, var_3, var_4 )
{
    if ( var_2 != "off" )
    {
        level thread _id_13CF3( var_0.origin );
        var_0 setscriptablepartstate( var_1, "off" );
        plunder_repositoryinstanceisregistered( var_0, var_1 );
    }
}

plunder_repositoryinstanceisregistered( var_0, var_1 )
{
    foreach ( var_3 in level.getteamspawnbots.plundercountroll )
    {
        var_4 = getent( "main_lab_storage_room", "targetname" );
        var_5 = plunder_repositoryplayerplundereventcallback( var_4 );
        var_5 thread plunder_extraction_site_active();
        var_5 thread _id_12A3D( var_0, var_1 );
    }
}

_id_12A3D( var_0, var_1 )
{
    level endon( "game_ended" );
    self waittill( "disperse" );
    wait( level.getteamspawnbots.plunder_repositoryusescriptablecallback );
    var_0 setscriptablepartstate( var_1, "on" );
}

_id_13CF3( var_0 )
{
    level endon( "game_ended" );
    playsoundatpos( var_0, "scr_br_infil_ac130_klaxon" );
    wait 1;
    playsoundatpos( var_0, "scr_br_infil_ac130_klaxon" );
    wait 1;
    playsoundatpos( var_0, "scr_br_infil_ac130_klaxon" );
    wait 1;
}

plunder_repositoryplayerplundereventcallback( var_0 )
{
    var_1 = var_0;

    if ( !isdefined( var_1 ) )
        var_1 = spawn( "trigger_radius", level.getteamspawnbots.plundercountroll[0], 0, level.getteamspawnbots.plunderatcapacity, level.getteamspawnbots.plunder_updateanchoredwidgetforplayers );

    var_1.location = "main_lab";
    scripts\mp\utility\trigger::makeenterexittrigger( var_1, ::plunder_repositoryatcapacity, ::plunder_repositoryclearcountdown, undefined, undefined, ::plunder_ninetypercent_music );
    var_1 thread plunder_playerrepositoryuseshouldsucceed( var_1.location );
    level.getteamspawnbots.plundervar[var_1.location] = var_1;
    var_1.intel_loc = 100;
    var_1.active = 0;
    return var_1;
}

plunder_infils_ready()
{
    level endon( "game_ended" );
    self endon( "disperse" );
    var_0 = 100;

    for (;;)
    {
        if ( var_0 < self.intel_loc )
            var_0 = var_0 + 50;

        wait 0.1;
    }
}

plunder_playerrepositoryuseshouldsucceed( var_0 )
{
    level endon( "game_ended" );

    switch ( var_0 )
    {
        case "main_lab":
            thread setup_comms_obj();
            break;
        case "default":
            break;
    }
}

setup_comms_obj()
{
    level endon( "game_ended" );
    var_0 = [];

    foreach ( var_2 in level.getteamspawnbots._id_11A70 )
    {
        var_3 = easepower( "vfx_chem_lab_trap_cloud", var_2, ( 0, 0, 0 ) );
        var_0[var_0.size] = var_3;
        var_3 setscriptablepartstate( "chem_lab_trap_cloud_vfx", "visible" );
        var_3 setscriptablepartstate( "chem_lab_trap_cloud_sfx", "on" );
        waitframe();
    }

    self.active = 1;
    self waittill( "disperse" );

    foreach ( var_6 in self.triggerenterents )
        var_6 scripts\mp\gametypes\br_pickups.gsc::plunderrankupdate( "chem_factory_gas" );

    foreach ( var_9 in var_0 )
    {
        var_9 setscriptablepartstate( "chem_lab_trap_cloud_vfx", "hidden" );
        var_9 thread _id_11A6F();
    }
}

_id_11A6F()
{
    level endon( "game_ended" );
    wait 5.7;
    self freescriptable();
}

plunder_repositoryatcapacity( var_0, var_1 )
{
    var_0 thread plunder_repositoryendcountdown( var_1 );
}

plunder_repositoryclearcountdown( var_0, var_1 )
{
    var_0 notify( "out_of_poison_cloud" );
    var_0 scripts\mp\gametypes\br_pickups.gsc::plunderrankupdate( "chem_factory_gas" );
}

plunder_ninetypercent_music( var_0, var_1 )
{
    if ( !isdefined( var_0 ) || !isplayer( var_0 ) )
        return 1;

    return 0;
}

plunder_extraction_site_active()
{
    level endon( "game_ended" );

    for (;;)
    {
        wait( level.getteamspawnbots.plunder_items_picked_up );

        if ( self.intel_loc >= level.getteamspawnbots.plunderatcapacity )
            break;

        self.intel_loc = self.intel_loc + level.getteamspawnbots.plunder_items_dropped;
    }

    wait( level.getteamspawnbots.plunder_tenpercent_music );
    self notify( "disperse" );
    self.active = 0;
}

plunder_repositoryendcountdown( var_0 )
{
    level endon( "game_ended" );
    self endon( "out_of_poison_cloud" );
    self endon( "death" );

    for (;;)
    {
        wait( level.getteamspawnbots.plunder_repositoryusecallback );

        if ( istrue( self.start_death_from_above_sequence ) )
            continue;

        if ( istrue( var_0.active ) )
        {
            if ( scripts\cp_mp\gasmask::hasgasmask( self ) )
            {
                scripts\mp\gametypes\br_pickups.gsc::plunderrepositoryref( "chem_factory_gas" );
                scripts\cp_mp\gasmask::processdamage( level.getteamspawnbots.plunder_thirtypercent_music );
                continue;
            }

            scripts\mp\gametypes\br_pickups.gsc::plunderrankupdate( "chem_factory_gas" );

            if ( scripts\mp\gametypes\br_public.gsc::hasarmor() )
                scripts\mp\gametypes\br_public.gsc::damagearmor( level.getserverroomspawnpoint.plunder_getleveldataforrepository );
            else
                self dodamage( level.getteamspawnbots.plunder_thirtypercent_music, var_0.origin, var_0, undefined, "MOD_TRIGGER_HURT", "danger_circle_br" );

            scripts\mp\gametypes\br_circle.gsc::_id_13E18();
        }
    }
}
