// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

toggle_farah_lights( var_0, var_1, var_2 )
{
    if ( level.mapname != "mp_wz_island" )
        return;

    if ( !isdefined( level.hudglobalkillcountmax ) )
        return;

    if ( !isdefined( level.hudglobalkillcountmax.paths ) )
        level.hudglobalkillcountmax.paths = [];

    level.hudglobalkillcountmax.paths["lagoon"] = [];
    var_3 = spawnstruct();
    var_3.nodes = [];
    var_3.origin = ( -42465.2, -11066.6, 587.875 );
    var_3.script_index = var_0;
    var_3.initchallengeandeventglobals = var_2;
    var_3.nodes[0] = var_3;
    var_4 = var_3.nodes.size;
    var_5 = spawnstruct();
    var_5.nodes = [];
    var_5.origin = ( -48558.2, -17213.6, 373.109 );
    var_5.script_index = var_0;
    var_5.initchallengeandeventglobals = var_2 + 1;
    var_5.nodes[0] = var_5;
    var_6 = spawnstruct();
    var_6.nodes = [];
    var_6.origin = ( -37243.5, -21022.9, 313.446 );
    var_6.script_index = var_0;
    var_6.initchallengeandeventglobals = var_2 + 2;
    var_6.nodes[0] = var_6;
    var_7 = spawnstruct();
    var_7.nodes = [];
    var_7.origin = ( -41685.6, -10748.8, 571.176 );
    var_7.script_index = var_0;
    var_7.initchallengeandeventglobals = var_2 + 3;
    var_7.nodes[0] = var_7;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -42686.2, -11186.2, 589.466 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -42907.3, -11305.7, 591.056 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -43342.8, -11556.9, 591.462 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -43732.7, -11870.3, 590.809 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -44168.2, -12122, 590.882 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -44606, -12366.1, 591.412 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -45017.6, -12652.1, 590.945 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -45433.4, -12932, 590.796 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -45870.6, -13178.2, 615.348 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -46308.7, -13417.4, 668.837 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -46753.9, -13639.8, 720.975 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -47229, -13789, 772.375 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -47723.2, -13864.7, 823.031 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -48223.4, -13896.6, 859.653 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -48728.4, -13908.2, 865.004 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -49232.9, -13889.4, 864.243 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -49736.1, -13871, 863.998 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -50232, -13950.3, 863.852 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -50359.5, -14169.8, 860.966 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -50491.1, -14656.3, 874.419 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -50546.2, -15158.4, 877.806 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -50524.2, -15661.5, 857.432 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -50474.5, -16154.5, 786.697 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -50247.6, -16589.5, 678.197 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -49967.1, -16772, 652.38 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -49494.6, -16933.9, 602.754 );
    var_4 = var_3.nodes.size;
    var_3.nodes[var_4] = spawnstruct();
    var_3.nodes[var_4].origin = ( -49016.1, -17053.7, 495.52 );
    var_4 = 0;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -49016.1, -17053.7, 495.52 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -48127.5, -17436.5, 237.511 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -47790.7, -17794.9, 137.328 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -47579.9, -18247.3, 189.52 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -47392.5, -18707.1, 269.464 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -47215, -19172.7, 340.956 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -47039.1, -19638.9, 399.764 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -46855.5, -20101.5, 450.685 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -46669.3, -20564.8, 494.839 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -46429.2, -21005.9, 534.381 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -46145.7, -21420.5, 574.389 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -45775.4, -21760.7, 609.726 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -45320.8, -21968.9, 625.006 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -44835.4, -22092.8, 634.725 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -44337.9, -22158.1, 636.714 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -43841.6, -22072, 625.397 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -43650.7, -21908.4, 609.726 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -43312.2, -21540.4, 565.063 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -42971.2, -21177.1, 501.233 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -42580.6, -20875, 416.049 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -42152.8, -20635.3, 302.179 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -41676.4, -20537.9, 180.182 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -41177.1, -20545.3, 142.37 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -40680.2, -20538.2, 230.25 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -40186.4, -20543.3, 321.951 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -39691.7, -20619.8, 291.547 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -39217.1, -20745.9, 192.762 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -38729.8, -20854.4, 137.515 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -38234.6, -20948, 173.54 );
    var_4 = var_5.nodes.size;
    var_5.nodes[var_4] = spawnstruct();
    var_5.nodes[var_4].origin = ( -37737.4, -21019.9, 212.316 );
    var_4 = 0;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -37737.4, -21019.9, 212.316 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -36761.4, -20955.7, 444.705 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -36313.2, -20733.6, 474.027 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -36197, -20508.7, 480.844 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -36073.8, -20019.7, 494.874 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -35966.2, -19527.7, 509.839 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -35840.9, -19040.1, 523.184 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -35707.6, -18554.6, 501.205 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -35684.7, -18054.8, 450.914 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -35838.2, -17576.6, 427.302 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -36023.6, -17111.3, 397.521 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -36232.3, -16654.1, 394.516 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -36456.5, -16207, 396.632 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -36711.4, -15773.9, 421.321 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -37004.9, -15610.1, 439.741 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -37507.6, -15605, 445.749 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -38010.4, -15598.4, 452.007 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -38488.7, -15441.1, 453.773 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -38916.4, -15172.3, 451.613 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -39317.9, -14870.8, 449.167 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -39695.9, -14543.4, 447.022 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -40060.5, -14200.3, 447.612 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -40325.6, -13774.1, 454.767 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -40509.1, -13308.2, 470.309 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -40654.1, -12830, 487.934 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -40775.8, -12341.8, 506.12 );
    var_4 = var_6.nodes.size;
    var_6.nodes[var_4] = spawnstruct();
    var_6.nodes[var_4].origin = ( -40973.2, -11356.4, 539.551 );
    var_4 = 0;
    var_7.nodes[var_4] = spawnstruct();
    var_7.nodes[var_4].origin = ( -40973.2, -11356.4, 539.551 );
    var_4 = var_7.nodes.size;
    var_7.nodes[var_4] = spawnstruct();
    var_7.nodes[var_4].origin = ( -41136.6, -10882.1, 550.319 );
    var_4 = var_7.nodes.size;
    var_7.nodes[var_4] = spawnstruct();
    var_7.nodes[var_4].origin = ( -41350.9, -10753.3, 561.428 );
    var_4 = var_7.nodes.size;
    var_7.nodes[var_4] = spawnstruct();
    var_7.nodes[var_4].origin = ( -41685.6, -10748.8, 571.176 );
    var_4 = var_7.nodes.size;
    var_7.nodes[var_4] = spawnstruct();
    var_7.nodes[var_4].origin = ( -42465.2, -11066.6, 587.875 );
    level.hudglobalkillcountmax.paths["lagoon"][0] = var_3;
    level.hudglobalkillcountmax.paths["lagoon"][1] = var_5;
    level.hudglobalkillcountmax.paths["lagoon"][2] = var_6;
    level.hudglobalkillcountmax.paths["lagoon"][3] = var_7;
}
