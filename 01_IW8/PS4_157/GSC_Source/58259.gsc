// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

randomoffsetmortar()
{
    return getdvarfloat( "scr_serum_gadget_damage_scalar", 1.5 );
}

_id_13058( var_0, var_1 )
{

}

_id_13057( var_0, var_1, var_2 )
{
    if ( self isthrowingbackgrenade() )
    {
        self _meth_87A8();

        if ( isdefined( var_2 ) )
        {
            var_3 = self getweaponammoclip( var_2 );
            var_4 = int( max( var_3 - 1, 0 ) );
            self setweaponammoclip( var_2, var_4 );
        }
    }

    var_5 = "serum_gadget";
    var_6 = accesscardsspawned_red::preinfilstreamfunc();

    if ( !isdefined( var_6 ) || var_6 != var_5 )
    {
        childthread apc_rus_update();
        childthread apc_rus_updatedriverturretammoui();
    }

    var_7 = getdvarint( "scr_serum_gadget_duration_seconds", 60 );
    var_8 = getdvarfloat( "scr_serum_gadget_moverate", 1.08 );
    var_9 = "actionhero_mp";
    var_10 = "zombiedefault";
    var_11 = 1;
    var_12 = 1;
    accesscardsspawned_red::_id_1380C( var_5, var_7, var_8, var_9, var_10, var_11, var_12 );
}

apc_rus_update()
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self waittill( "start_speed_boost_serum_gadget" );
    scripts\mp\gamelogic::sethasdonecombat( self, 1 );
}

apc_rus_updatedriverturretammoui()
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self waittill( "stop_speed_boost_serum_gadget" );
}
