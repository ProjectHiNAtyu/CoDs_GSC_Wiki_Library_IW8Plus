// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

coop_stealth_init()
{
    if ( !scripts\engine\utility::flag_exist( "raid_active" ) )
        scripts\engine\utility::flag_init( "raid_active" );

    scripts\engine\utility::flag_init( "stealth_settings_activated" );
    register_stealth_state_funcs();
    _id_129FD();
    _id_129FE();
    level thread _id_134E4();
    level.bonusdeathplunderot = [];
    level.stealth_soundaliases = [ "ui_stealth_threat_low_lp", "ui_stealth_threat_med_lp", "ui_stealth_threat_high_lp" ];
}

_id_12C57()
{
    level.bonusdeathplunderot = [];
    level.global_stealth_broken = 0;
}

register_stealth_state_funcs()
{
    level.enter_stealth_state_func = [];
    level.exit_stealth_state_func = [];
    register_stealth_state_func( "idle", ::enter_casual, ::exit_casual );
    register_stealth_state_func( "casual", ::enter_casual, ::exit_casual );
    register_stealth_state_func( "alert", ::enter_alert, ::exit_alert );
    register_stealth_state_func( "combat", ::enter_combat, ::exit_combat );
}

register_stealth_state_func( var_0, var_1, var_2 )
{
    level.enter_stealth_state_func[var_0] = var_1;
    level.exit_stealth_state_func[var_0] = var_2;
}

start_coop_stealth()
{
    level thread flash_crate_update_hint_logic_alt();
}

ai_sight_monitor( var_0 )
{
    self.sightlastactivetime = 0;
    self.sightstate = 0;
    updateaisightonplayer( self.sightstate );
}

getaisightdirection( var_0 )
{
    var_1 = anglestoforward( self getplayerangles() );
    var_2 = ( var_1[0], var_1[1], var_1[2] );
    var_2 = vectornormalize( var_2 );
    var_3 = var_0.origin - self.origin;
    var_4 = ( var_3[0], var_3[1], var_3[2] );
    var_4 = vectornormalize( var_4 );
    var_5 = vectordot( var_2, var_4 );

    if ( var_5 >= 0.92388 )
        return 2;
    else if ( var_5 >= 0.382683 )
        return scripts\engine\utility::ter_op( isleft2d( self.origin, var_2, var_0.origin ), 4, 1 );
    else if ( var_5 >= -0.382683 )
        return scripts\engine\utility::ter_op( isleft2d( self.origin, var_2, var_0.origin ), 128, 64 );
    else if ( var_5 >= -0.92388 )
        return scripts\engine\utility::ter_op( isleft2d( self.origin, var_2, var_0.origin ), 32, 8 );
    else
        return 16;
}

isleft2d( var_0, var_1, var_2 )
{
    var_3 = ( var_0[0], var_0[1], 0 );
    var_4 = ( var_2[0], var_2[1], 0 );
    var_5 = var_4 - var_3;
    var_6 = ( var_1[0], var_1[1], 0 );
    return var_5[0] * var_6[1] - var_5[1] * var_6[0] < 0;
}

regular_enemy_death_func()
{
    var_0 = self;

    if ( isdefined( level.ai_going_to_alarm ) && level.ai_going_to_alarm == self )
        level.ai_going_to_alarm = undefined;

    if ( isdefined( level.bonusdeathplunderot ) && scripts\engine\utility::array_contains( level.bonusdeathplunderot, self ) )
        scripts\engine\utility::array_remove( level.bonusdeathplunderot, self );

    var_0 leave_corpse_for_others_to_see();
    var_0 delete_stealth_meter( var_0 );
    var_0 delete_combat_icon( var_0 );
}

leave_corpse_for_others_to_see()
{
    if ( !isdefined( level.enemy_ai_corpse_locations ) )
        level.enemy_ai_corpse_locations = [];

    if ( !istrue( self.died_poorly ) )
    {
        var_0 = spawnstruct();
        var_0.loc = self.origin + ( 0, 0, 120 );
        var_0.time_stamp = gettime();
        var_0.index = self getentitynumber() + randomint( 100 );
        level.enemy_ai_corpse_locations = scripts\engine\utility::array_add( level.enemy_ai_corpse_locations, var_0 );
    }
}

weapon_xp_iw8_sn_kilo98()
{
    if ( scripts\cp\utility::coop_mode_has( "sp_stealth" ) )
        return 1;

    return getdvarint( "cp_sp_stealth", 0 );
}

_id_132D7()
{
    if ( level.script == "cp_raid_complex" )
        return weapon_xp_iw8_sn_kilo98() && ( self.unittype == "soldier" || self.unittype == "juggernaut" );
    else
        return weapon_xp_iw8_sn_kilo98() && self.unittype == "soldier";
}

run_common_functions( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( !scripts\engine\utility::flag( "stealth_settings_activated" ) )
    {
        setdvarifuninitialized( "cp_sp_stealth", 0 );
        attachdrill();
    }

    if ( istrue( level.global_stealth_broken ) )
        var_0 thread scripts\cp\cp_modular_spawning::enter_combat();
    else
    {
        if ( var_0 _id_132D7() )
        {
            if ( isdefined( var_0.group ) && isdefined( var_0.group.group_name ) )
                var_0.script_stealthgroup = var_0.group.group_name;
            else
                var_0.script_stealthgroup = "group";

            if ( isdefined( var_0.spawnpoint ) && isdefined( var_0.spawnpoint.script_sightrange ) )
                var_0.stealth.override_damage_auto_range = int( var_0.script_sightrange );

            var_0 thread scripts\stealth\enemy::main();
            var_0 thread scripts\mp\vehicles\cargo_truck_mg_mp::_id_11CD7( level.stealth.damage_auto_range, level.stealth.damage_sight_range );
            var_0 thread seeing_player_time_tracker( var_0 );
            var_0 thread _id_14458();
            var_0 thread stealth_meter_display_think( var_0 );
            var_0.stealth.console_being_hacked = 1;
            var_0.stealth.funcs["event_combat"] = ::nuke_stoptheclock;
            var_0.fnstealthgotonode = ::select_bunker_server_two_spawners;
            var_0.pacifist_override = 1;
            return;
        }

        if ( !isdefined( var_3 ) )
            var_3 = 0.34202;
        else
            var_3 = cos( var_3 );

        if ( !isdefined( var_4 ) )
            var_4 = 250000;

        var_0 addaieventlistener( "glass_destroyed" );
        var_0 enablestatelookat( 1 );
        var_0 enablescriptedlookat( 1 );
        var_0.pacifist_override = 1;
        var_0 set_current_stealth_state( var_0, "casual" );
        var_0 enter_current_stealth_state( var_0 );

        if ( !istrue( var_5 ) )
            var_0 thread open_scriptable_door_monitor( var_0 );

        var_0 thread watch_for_ai_events();
        var_0 thread i_see_player_watcher( var_0, var_2, var_3, var_4, var_6 );
        var_0 thread i_see_friendly_corpse_watcher( var_0, var_1 );
        var_0 thread delay_enter_combat_after_stealth( var_0 );
        var_0 thread watch_for_alarm_triggered();
        var_0 thread spotlight_min_dist_sq_from_node( var_3, var_4 );
        var_0 thread spotlight_goal_node( var_3, var_4 );
        var_0 thread spotlight_max_dist_sq_from_node( var_3, var_4 );
        var_0 thread spotlight_angles_offset( var_3, var_4 );
        var_0 thread _id_119D0( var_0 );
        var_0 thread blueprint_chancebase( var_0 );
        var_0 thread bomb_count_down_end_time_stamp_ms( var_0 );
    }
}

blueprint_chancebase( var_0 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    self endon( "death" );
    self endon( "long_death" );
    self endon( "enter_combat" );
    var_0 waittill( "damage", var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14 );
    level thread play_enemy_radio_chat( propwatchcleanupondisconnect(), var_0 );
    var_0 notify( "watch_for_ai_events" );
    var_0 getbestintersectionpt( var_0, var_2.name, "enemies_are_alerted" );
}

bomb_count_down_end_time_stamp_ms( var_0 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    self endon( "death" );
    self endon( "long_death" );
    self endon( "enter_combat" );
    var_0 waittill( "hit_ai", var_1 );
    level thread play_enemy_radio_chat( propwatchcleanupondisconnect(), var_0 );
    var_0 notify( "watch_for_ai_events" );
    var_0 getbestintersectionpt( var_0, var_1.name, "enemies_are_alerted" );
}

_id_119D0( var_0 )
{
    level endon( "game_ended" );
    var_0 endon( "death" );
    var_0.a.disablelongdeath = 1;
    var_1 = scripts\engine\utility::waittill_any_ents_return( level, "weapons_free", var_0, "enter_combat" );
    var_0.a.disablelongdeath = 0;
}

nuke_stoptheclock( var_0 )
{
    thread scripts\cp\cp_modular_spawning::enter_combat();
    return 0;
}

select_bunker_server_two_spawners( var_0, var_1, var_2 )
{
    if ( istrue( self.using_goto_node ) )
    {
        if ( isdefined( self.currentnode ) )
            thread scripts\cp\cp_modular_spawning::go_to_node( self.currentnode );
    }
    else
        scripts\cp\cp_modular_spawning::return_to_last_goalradius();
}

_id_139BF()
{
    self notify( "suspicious_door_monitor_end" );
    self endon( "death" );
    self endon( "disconnect" );
    self endon( "suspicious_door_monitor_end" );
    var_0 = 384;
    var_1 = 80;
}

_id_13B3A()
{
    self endon( "death" );
    self endon( "disconnect" );

    for (;;)
    {
        if ( isdefined( self.stealth.maxthreat ) )
        {
            if ( self.stealth.maxthreat > 0.2 && isdefined( self.stealth.maxthreat_enemy ) )
            {
                var_0 = self.stealth.maxthreat_enemy;
                mark_seen_this_player_this_frame( var_0, self );
                var_0 notify( "display_stealth_meter_to", self );
            }
        }

        waitframe();
    }
}

spotlight_max_dist_sq_from_node( var_0, var_1 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    self endon( "death" );
    self endon( "long_death" );
    self endon( "enter_combat" );
    var_2 = self;
    var_3 = 3000;
    var_4 = var_3 * var_3;
    var_5 = 0.1;
    var_6 = scripts\engine\trace::init_ground_vehicle( 1, 0 );
    var_1 = var_1 * 6.25;

    for (;;)
    {
        wait 0.4;

        if ( !isdefined( level.taccovers ) )
            continue;

        var_7 = self getapproxeyepos();

        foreach ( var_9 in level.taccovers )
        {
            if ( isdefined( var_9 ) )
            {
                var_10 = lengthsquared( var_9.origin - self.origin );
                var_11 = raritycamsmall( var_2, var_9, var_0, var_3, var_5 );

                if ( var_10 < var_11 * var_11 )
                {
                    var_12 = self cansee( var_9 );

                    if ( !var_12 )
                        var_12 = scripts\engine\trace::ray_trace_passed( var_7, var_9.origin, [ self, var_9 ], var_6 );

                    if ( var_12 )
                    {
                        if ( var_10 <= var_1 )
                            getbestintersectionpt( self, var_9.owner.name, "enemies_are_alerted" );
                        else if ( get_current_stealth_state( self ) != "alert" )
                            enemy_ai_enter_alert( self, var_9, 1 );
                        else
                            i_saw_player( self, var_9.owner, 0 );

                        break;
                    }
                }
            }
        }
    }
}

raritycamsmall( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( var_2 ) )
        var_5 = 0.34202;
    else
        var_5 = cos( var_2 );

    if ( !scripts\engine\utility::within_fov( var_0.origin, var_0.angles, var_1.origin, var_2 ) )
        var_3 = var_3 * var_4;

    return var_3;
}

spotlight_goal_node( var_0, var_1 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    self endon( "death" );
    self endon( "long_death" );
    self endon( "enter_combat" );
    var_2 = self;
    var_3 = 3000;
    var_4 = 200;
    var_5 = 1500;
    var_6 = 0.6;
    var_7 = scripts\engine\trace::init_ground_vehicle( 1, 0 );
    var_1 = var_1 * 6.25;

    for (;;)
    {
        var_8 = self getapproxeyepos();

        foreach ( var_10 in level.players )
        {
            var_11 = quickdropnewitem( var_10 );

            if ( isdefined( var_11 ) )
            {
                var_12 = lengthsquared( var_11.origin - self.origin );
                var_13 = raritycamwatch( self, var_11, var_0, var_3, var_5, var_4, var_6 );

                if ( var_12 < var_13 * var_13 )
                {
                    var_14 = self cansee( var_11 );

                    if ( !var_14 )
                        var_14 = scripts\engine\trace::ray_trace_passed( var_8, var_11.origin, [ self, var_11 ], var_7 );

                    if ( var_14 )
                    {
                        if ( var_12 <= var_1 )
                            getbestintersectionpt( self, var_10.name, "enemies_are_alerted" );
                        else if ( get_current_stealth_state( self ) != "alert" )
                            enemy_ai_enter_alert( self, var_11, 1 );
                        else
                            i_saw_player( self, var_10, 0 );

                        break;
                    }
                }
            }
        }

        wait 0.1;
    }
}

quickdropnewitem( var_0 )
{
    if ( isdefined( var_0._id_12F15 ) )
        return var_0._id_12F15;

    if ( isdefined( var_0.monitorhotfoot ) )
        return var_0.monitorhotfoot;

    return undefined;
}

spotlight_min_dist_sq_from_node( var_0, var_1 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    self endon( "death" );
    self endon( "long_death" );
    self endon( "enter_combat" );
    var_2 = 3000;
    var_3 = 200;
    var_4 = 1500;
    var_5 = 0.6;
    var_6 = scripts\engine\trace::init_ground_vehicle( 1, 0 );

    for (;;)
    {
        var_7 = self getapproxeyepos();

        foreach ( var_9 in level.players )
        {
            if ( var_9 scripts\cp_mp\utility\player_utility::isinvehicle() )
            {
                var_10 = lengthsquared( var_9.origin - self.origin );
                var_11 = raritycamwatch( self, var_9.vehicle, var_0, var_2, var_4, var_3, var_5 );

                if ( var_10 < var_11 * var_11 )
                {
                    var_12 = self cansee( var_9 );

                    if ( !var_12 )
                        var_12 = scripts\engine\trace::ray_trace_passed( var_7, var_9 geteye(), [ self, var_9, var_9.vehicle ], var_6 );

                    if ( var_12 )
                    {
                        if ( var_10 <= var_1 )
                            getbestintersectionpt( self, var_9.name, "enemies_are_alerted" );
                        else if ( get_current_stealth_state( self ) != "alert" )
                            enemy_ai_enter_alert( self, var_9, 0 );
                        else
                            i_saw_player( self, var_9, 0 );

                        break;
                    }
                }
            }
        }

        wait 0.1;
    }
}

spotlight_angles_offset( var_0, var_1 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    self endon( "death" );
    self endon( "long_death" );
    self endon( "enter_combat" );
    var_2 = 2000;
    var_3 = 0.6;
    var_4 = scripts\engine\trace::init_ground_vehicle( 1, 0 );

    for (;;)
    {
        var_5 = self getapproxeyepos();

        foreach ( var_7 in level.players )
        {
            if ( scripts\cp\cp_laststand::player_in_laststand( var_7 ) )
            {
                var_8 = lengthsquared( var_7.origin - self.origin );
                var_9 = raritycammedium( self, var_7, var_2, var_0, var_3 );

                if ( var_8 < var_9 * var_9 )
                {
                    var_10 = self cansee( var_7 );

                    if ( !var_10 )
                        var_10 = scripts\engine\trace::ray_trace_passed( var_5, var_7 geteye(), [ self, var_7 ], var_4 );

                    if ( var_10 )
                    {
                        if ( var_8 <= var_1 )
                            getbestintersectionpt( self, var_7.name, "enemies_are_alerted" );
                        else if ( get_current_stealth_state( self ) != "alert" )
                            enemy_ai_enter_alert( self, var_7, 0 );
                        else
                            i_saw_player( self, var_7, 0 );

                        break;
                    }
                }
            }
        }

        wait 0.1;
    }
}

raritycammedium( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( var_3 ) )
        var_5 = 0.34202;
    else
        var_5 = cos( var_3 );

    var_6 = anglestoforward( var_0.angles );
    var_7 = var_1.origin - var_0.origin;
    var_7 = vectornormalize( var_7 );

    if ( vectordot( var_6, var_7 ) < var_5 )
        var_2 = var_2 * var_4;

    return var_2;
}

raritycamwatch( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( !isdefined( var_2 ) )
        var_7 = 0.34202;
    else
        var_7 = cos( var_2 );

    var_8 = anglestoforward( var_0.angles );
    var_9 = length( var_1 vehicle_getvelocity() );
    var_10 = var_4 + ( var_3 - var_4 ) * min( 1, 1 - ( var_5 - var_9 ) / var_5 );
    var_11 = var_1.origin - var_0.origin;
    var_12 = lengthsquared( var_11 );
    var_11 = vectornormalize( var_11 );

    if ( vectordot( var_8, var_11 ) < var_7 )
        var_10 = var_10 * var_6;

    return var_10;
}

watch_for_alarm_triggered()
{
    level endon( "weapons_free" );
    self notify( "watch_for_alarm_triggered" );
    self endon( "watch_for_alarm_triggered" );
    self endon( "death" );
    self endon( "long_death" );
    self endon( "enter_combat" );
    level waittill( "alarm_on" );
    thread scripts\cp\cp_modular_spawning::enter_combat();
}

delay_enter_combat_after_stealth( var_0 )
{
    var_0 endon( "death" );
    var_0 endon( "long_death" );

    if ( !istrue( var_0._id_11E50 ) )
    {
        var_0.never_kill_off = 0;
        var_0.dontkilloff = 0;
    }

    var_0 scripts\cp\cp_modular_spawning::_id_12BC9();
    var_0 thread scripts\cp\cp_modular_spawning::enter_combat_after_stealth();
}

open_scriptable_door_monitor( var_0 )
{
    var_0 endon( "death" );

    for (;;)
    {
        var_0 waittill( "use_scriptable_door", var_1, var_0, var_2, var_3 );

        if ( var_2 == "door" && ( var_3 == "right_90" || var_3 == "left_90" ) )
        {
            var_4 = scripts\engine\utility::getclosest( var_1.origin, scripts\engine\utility::getstructarray( "snakecam_interaction", "script_noteworthy" ) );

            if ( isdefined( var_4 ) )
                scripts\cp\cp_interaction::remove_from_current_interaction_list( var_4 );
        }
    }
}

change_stealth_state_to( var_0, var_1 )
{
    level endon( "weapons_free" );
    var_0 notify( "change_stealth_state_to", var_1 );
    var_0 endon( "change_stealth_state_to" );
    var_0 endon( "death" );
    var_0 endon( "enter_combat" );
    exit_current_stealth_state( var_0 );
    set_current_stealth_state( var_0, var_1 );
    enter_current_stealth_state( var_0 );
}

exit_current_stealth_state( var_0 )
{
    var_0 [[ level.exit_stealth_state_func[get_current_stealth_state( var_0 )] ]]( var_0 );
}

enter_current_stealth_state( var_0 )
{
    var_0 [[ level.enter_stealth_state_func[get_current_stealth_state( var_0 )] ]]( var_0 );
}

set_current_stealth_state( var_0, var_1 )
{
    var_0.current_stealth_state = var_1;
}

get_current_stealth_state( var_0 )
{
    return var_0.current_stealth_state;
}

trial_trigger_think( var_0 )
{
    return isdefined( get_current_stealth_state( var_0 ) );
}

enter_casual( var_0 )
{
    var_0 scripts\cp\cp_modular_spawning::set_demeanor_from_unittype( "patrol" );
    var_0 scripts\engine\utility::set_movement_speed( 25 );
}

exit_casual( var_0 )
{

}

enter_alert( var_0 )
{
    var_0 scripts\cp\cp_modular_spawning::set_demeanor_from_unittype( "alert" );
    var_0 scripts\engine\utility::set_movement_speed( 25 );
    var_0 thread stealth_meter_display_think( var_0 );
    var_0 thread stealth_meter_degree_think( var_0 );
}

stealth_meter_display_think( var_0 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    var_0 endon( "death" );
    var_0 endon( "enter_combat" );
    var_0 endon( "exit_stealth_think" );

    for (;;)
    {
        var_0 waittill( "display_stealth_meter_to", var_1 );
        var_0.spawnposition = var_1;
        show_stealth_meter_to( var_1, var_0 );
        var_1 thread ping_enemy_and_player_for_duration( var_0, var_1, 1 );
    }
}

ping_enemy_and_player_for_duration( var_0, var_1, var_2 )
{
    var_1 notify( "ping_enemy_and_player_for_duration" );
    var_1 endon( "disconnect" );
    var_1 endon( "ping_enemy_and_player_for_duration" );

    if ( !isdefined( var_2 ) )
        var_2 = 3;

    var_1 thread _id_123C4( var_1 );
    var_1 setscriptablepartstate( "sixthsense", "loop" );
    wait( var_2 );
    var_1 setscriptablepartstate( "sixthsense", "neutral" );
}

stopsoundoncompletion( var_0 )
{
    wait( lookupsoundlength( var_0 ) );
    self.bplayingspecificstealthsound = undefined;
}

increase_stealth_meter( var_0, var_1 )
{
    if ( get_current_stealth_state( var_0 ) == "alert" )
    {
        var_2 = max( distancesquared( var_0.origin, var_1.origin ), 1 );
        var_3 = 1 / var_2 * 110889;

        if ( var_0.stealth_meter_state == "decreasing" )
            var_0.target_stealth_meter_progress = clamp( var_0.current_stealth_meter_progress + var_3, 0, 1 );
        else
            var_0.target_stealth_meter_progress = clamp( var_0.target_stealth_meter_progress + var_3, 0, 1 );

        var_0 notify( "increase_stealth_meter" );
    }
}

decrease_stealth_meter( var_0, var_1 )
{
    if ( get_current_stealth_state( var_0 ) == "alert" )
    {
        if ( var_0.stealth_meter_state == "increasing" )
            var_0.target_stealth_meter_progress = clamp( var_0.current_stealth_meter_progress + var_1, 0, 1 );
        else
            var_0.target_stealth_meter_progress = clamp( var_0.target_stealth_meter_progress + var_1, 0, 1 );

        var_0 notify( "decrease_stealth_meter" );
    }
}

stop_stealth_meter( var_0 )
{
    var_0.target_stealth_meter_progress = var_0.current_stealth_meter_progress;
    var_0 notify( "stop_stealth_meter" );
}

stealth_meter_degree_think( var_0 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    var_0 endon( "death" );
    var_0 endon( "enter_combat" );
    var_0 endon( "exit_stealth_think" );
    var_0.current_stealth_meter_progress = 0;
    var_0.target_stealth_meter_progress = 0;
    var_0.stealth_meter_state = "stopped";

    for (;;)
    {
        if ( var_0.current_stealth_meter_progress == var_0.target_stealth_meter_progress )
            var_0.stealth_meter_state = "stopped";
        else
        {
            var_1 = min( 0.2, abs( var_0.target_stealth_meter_progress - var_0.current_stealth_meter_progress ) );

            if ( var_0.target_stealth_meter_progress > var_0.current_stealth_meter_progress )
                var_0.stealth_meter_state = "increasing";
            else
            {
                var_0.stealth_meter_state = "decreasing";
                var_1 = var_1 * -1;
            }

            var_0.current_stealth_meter_progress = clamp( var_0.current_stealth_meter_progress + var_1, 0, 0.99 );

            if ( getdvarint( "scr_phj_disable_icons", 0 ) == 0 )
                objective_setprogress( var_0.stealth_meter_objective_id, var_0.current_stealth_meter_progress );

            check_stealth_state_change( var_0 );
        }

        var_2 = var_0 scripts\engine\utility::_id_143B9( 0.1, "stop_stealth_meter" );

        if ( var_2 == "stop_stealth_meter" )
            var_0.target_stealth_meter_progress = var_0.current_stealth_meter_progress;
    }
}

check_stealth_state_change( var_0 )
{
    if ( var_0.current_stealth_meter_progress >= 0.99 )
    {
        var_1 = var_0.spawnposition.name;
        wait 0.1;
        var_0 getbestintersectionpt( var_0, var_1, "player_spotted" );
    }
}

exit_alert( var_0 )
{
    delete_stealth_meter( var_0 );
}

enter_combat( var_0 )
{
    var_0 endon( "death" );
    var_0 endon( "enter_combat" );

    if ( !istrue( level.global_stealth_broken ) )
    {
        stop_patrol( 0 );

        if ( !_id_132C1( var_0 ) )
            friendly_exit( var_0 );

        if ( _id_132C5( var_0 ) )
            var_0 thread logevent_spawnviaplayer( var_0 );

        level thread global_stealth_broken( var_0 );
    }
}

_id_1215D( var_0 )
{
    var_1 = 5;
    scripts\cp\cp_outline::enable_outline_for_players( var_0, level.players, "snapshotgrenade", "high" );
    var_0 scripts\engine\utility::waittill_any_in_array_or_timeout( [ "death" ], var_1 );
    scripts\cp\cp_outline::disable_outline_for_players( var_0, level.players );
}

_id_132C1( var_0 )
{
    if ( bomber_damage_thread( var_0 ) )
        return 1;

    if ( istrue( var_0._id_133B9 ) )
        return 1;

    if ( isdefined( var_0._id_132C2 ) )
        return [[ var_0._id_132C2 ]]( var_0 );

    if ( !isdefined( level.bonusdeathplunderot ) )
        level.bonusdeathplunderot = [];

    if ( level.bonusdeathplunderot.size > max( 2, level.players.size ) )
        return 1;

    return 0;
}

logevent_spawnviaplayer( var_0 )
{
    var_0 endon( "death" );
    var_1 = 3;
    waittillframeend;

    if ( isdefined( var_0._id_11BD5 ) )
        logevent_challengeitemunlocked( var_0, var_0._id_11BD5, ::keypadscriptableused_altbunker );
    else
        logevent_challengeitemunlocked( var_0, "cellphone", ::keypadscriptableused_altbunker );

    wait( var_1 );
    var_0 notify( "delete_reinforcement_icon" );
}

_id_132C5( var_0 )
{
    return 1;
}

bomber_damage_thread( var_0 )
{
    return var_0.agent_type == "actor_enemy_cp_rus_juggernaut";
}

friendly_exit( var_0 )
{
    var_0.bcallingreinforcements = 1;
    level.ai_going_to_alarm = var_0;
    var_0 notify( "alerted" );
    var_0 childthread goto_alarm_or_nearest_cover();
    var_0 waittill( "called_reinforcements" );
    var_0.bcallingreinforcements = undefined;
    level.ai_going_to_alarm = undefined;
    level.bonusdeathplunderot = [];
}

modified_enter_combat( var_0 )
{
    if ( istrue( self.aggressive ) || istrue( self.dont_enter_combat ) )
        return;

    self endon( "death" );
    level endon( "game_ended" );
    scripts\cp\cp_modular_spawning::set_demeanor_from_unittype( "combat" );
    scripts\cp\cp_outline::enable_outline_for_players( self, level.players, "outline_nodepth_green", "high" );
    self.pacifist_override = undefined;
    self.scripted_mode = 0;
    self.entered_combat = 1;

    if ( isdefined( self.script_radius ) )
        scripts\cp\cp_modular_spawning::set_goal_radius( self.script_radius );
    else if ( !istrue( self.is_on_platform ) )
        scripts\cp\cp_modular_spawning::set_goal_radius( 2048 );
    else
        scripts\cp\cp_modular_spawning::set_goal_radius( 512 );

    if ( isdefined( self.script_goalheight ) )
        self.goalheight = self.script_goalheight;
    else
        self.goalheight = 256;

    if ( !scripts\cp\cp_modular_spawning::is_specified_unittype( "suicidebomber" ) && !scripts\cp\cp_modular_spawning::is_specified_unittype( "civilian" ) )
    {
        self.script_pacifist = undefined;
        self.pacifist = 0;
        thread scripts\cp\cp_modular_spawning::get_enemy_info_loop();
    }

    scripts\cp\cp_modular_spawning::run_combat_func();
    self notify( "stop_going_to_node" );
}

goto_alarm_or_nearest_cover()
{
    self endon( "death" );
    var_0 = undefined;

    if ( isdefined( level.alarm_box_structs ) )
        var_0 = scripts\engine\utility::get_array_of_closest( self.origin, level.alarm_box_structs, undefined, 1, 666 );

    if ( !isdefined( level.ai_going_to_alarm ) )
    {
        if ( isdefined( var_0 ) && isarray( var_0 ) && var_0.size > 0 )
        {
            logevent_challengeitemunlocked( self, "alert", ::keypadscriptableused );
            self._id_11BD6 = "alarm";
            scripts\cp\cp_modular_spawning::set_demeanor_from_unittype( "combat" );
            self.scripted_mode = 1;
            thread scripts\cp\maps\cp_donetsk\milbase\ai_flare.gsc::run_to_and_set_alarm( var_0[0] );
            level waittill( "alarm_on" );
            self.scripted_mode = 0;
            self notify( "called_reinforcements" );

            foreach ( var_2 in var_0 )
                var_2 notify( "stop_attracting" );

            foreach ( var_5 in getaiarray( "axis" ) )
            {
                if ( isdefined( var_5.going_to_object ) )
                {
                    var_5.going_to_object = undefined;
                    var_5.goalradius = 2048;
                    var_5 scripts\cp\maps\cp_donetsk\milbase\ai_flare.gsc::clear_custom_anim();
                }
            }
        }
    }
    else
    {
        logevent_challengeitemunlocked( self, "alert", ::keypadscriptableused );

        if ( !isdefined( level.bonusdeathplunderot ) )
            level.bonusdeathplunderot = [];

        level.bonusdeathplunderot[level.bonusdeathplunderot.size] = self;
        var_7 = self findbestcovernode( "cover_default", 1, self.origin, 1 );

        if ( isdefined( var_7 ) )
        {
            var_8 = var_7.angles;
            var_9 = var_7.origin;

            if ( !issubstr( var_7.type, "Prone" ) )
            {
                if ( issubstr( var_7.type, "Left" ) )
                    var_8 = var_8 + ( 0, 90, 0 );
                else if ( issubstr( var_7.type, "Right" ) || issubstr( var_7.type, "Cover Crouch" ) || issubstr( var_7.type, "Conceal" ) || issubstr( var_7.type, "Cover Stand" ) )
                    var_8 = var_8 - ( 0, 90, 0 );
            }

            scripts\common\utility::demeanor_override( "sprint" );
            self setgoalnode( var_7 );
            self waittill( "goal" );
            self setgoalpos( self.origin );
            wait 3;
            scripts\cp\utility::array_notify( getaiarray( "axis" ), "called_reinforcements" );
        }
        else
        {
            var_7 = getclosestnodeinsight( self.origin );

            if ( isdefined( var_7 ) )
            {
                scripts\common\utility::demeanor_override( "sprint" );
                self.scripted_mode = 1;
                scripts\cp\cp_modular_spawning::set_goal_pos( var_7.origin );
                wait 1;
                self usecovernode( var_7, 1 );
                self setgoalnode( var_7 );
                wait 3;
                self.scripted_mode = 0;
                scripts\cp\utility::array_notify( getaiarray( "axis" ), "called_reinforcements" );
            }
            else
            {
                wait 3;
                scripts\cp\utility::array_notify( getaiarray( "axis" ), "called_reinforcements" );
            }
        }
    }
}

exit_combat( var_0 )
{

}

global_stealth_broken( var_0 )
{
    if ( istrue( level.global_stealth_broken ) )
        return;

    level endon( "game_ended" );
    level notify( "weapons_free" );
    level.global_stealth_broken = 1;
    level.battlechatterenabled = 1;
    level._id_139B5 = 0;
    isenemyteamplayer();

    if ( isdefined( level.select_boss_two_spawners ) )
        [[ level.select_boss_two_spawners ]]( var_0 );

    level thread play_combat_music_to_players();
}

i_see_friendly_corpse_watcher( var_0, var_1 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    var_0 endon( "death" );
    var_0 endon( "long_death" );
    var_0 endon( "enter_combat" );

    if ( !isdefined( level.enemy_ai_corpse_locations ) )
        level.enemy_ai_corpse_locations = [];

    var_2 = physics_createcontents( [ "physicscontents_clipshot", "physicscontents_missileclip", "physicscontents_solid", "physicscontents_ainosight" ] );

    for (;;)
    {
        if ( istrue( self.bcallingreinforcements ) )
        {
            wait 1;
            continue;
        }

        foreach ( var_4 in level.enemy_ai_corpse_locations )
        {
            if ( distance( var_0.origin, var_4.loc ) > var_0.sightmaxdistance )
            {
                wait 1;
                continue;
            }

            if ( !var_0 scripts\engine\math::point_in_fov( var_4.loc, cos( 50 ), 1 ) )
            {
                wait 1;
                continue;
            }

            var_5 = angleclamp180( vectortopitch( var_4.loc - var_0.origin ) );

            if ( var_5 < var_0.upaimlimit || var_5 > var_0.downaimlimit )
            {
                wait 1;
                continue;
            }

            var_6 = scripts\engine\trace::ray_trace_passed( var_0 geteye(), var_4.loc, [ var_0 ], var_2 );

            if ( var_6 )
            {
                if ( istrue( var_1 ) && allow_to_get_to_corpse( var_4 ) && corpse_is_too_far_away( var_0, var_4.loc ) )
                {
                    level.num_time_getting_to_corpse[var_4.index]++;
                    go_check_out_corpse( var_0, var_4, 1 );
                }
            }

            wait 1;
        }

        wait 1;
    }
}

go_check_out_corpse( var_0, var_1, var_2 )
{
    var_0 notify( "checking_friendly_corpse" );
    var_0.investigating_friendly_corpse = 1;
    var_0 thread change_stealth_state_to( var_0, "alert" );
    var_0 show_stealth_meter_to_all_players( var_0 );

    if ( istrue( var_2 ) )
    {
        var_0 stop_patrol( 1 );
        var_3 = vectornormalize( var_0.origin - var_1.loc );
        var_4 = getclosestpointonnavmesh( var_1.loc + var_3 * 15 );
        var_0 scripts\cp\cp_modular_spawning::set_goal_pos( var_4 );
        var_0 scripts\engine\utility::_id_143B9( 15, "forever" );
        level.enemy_ai_corpse_locations = scripts\engine\utility::array_remove( level.enemy_ai_corpse_locations, var_1 );
        check_around_the_area( var_0 );
    }
    else
    {
        var_0 thread increase_stealth_meter_when_approaching_corpse( var_0, var_1 );
        var_0 stop_patrol( 1 );
        var_0 scripts\engine\utility::set_movement_speed( 100 );
        var_3 = vectornormalize( var_0.origin - var_1.loc );
        var_4 = getclosestpointonnavmesh( var_1.loc + var_3 * 15 );
        var_0 scripts\cp\cp_modular_spawning::set_goal_pos( var_4 );
        var_0 waittill( "forever" );
    }
}

stop_patrol( var_0 )
{
    var_1 = self;
    var_1 notify( "stop_going_to_node" );
    var_1 notify( "patrol_using_cover_nodes" );

    if ( istrue( var_0 ) )
        var_1 scripts\cp\cp_modular_spawning::set_goal_pos( var_1.origin );
}

show_stealth_meter_to_all_players( var_0 )
{
    if ( getdvarint( "scr_phj_disable_icons", 0 ) != 0 )
        return;

    foreach ( var_2 in level.players )
        show_stealth_meter_to( var_2, var_0 );
}

increase_stealth_meter_when_approaching_corpse( var_0, var_1 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    var_0 endon( "death" );
    var_0 endon( "enter_combat" );
    var_2 = distancesquared( var_0.origin, var_1.loc ) - 40000;
    var_3 = 0;

    for (;;)
    {
        waitframe();
        var_4 = distancesquared( var_0.origin, var_1.loc );
        var_5 = clamp( 1 - var_4 / var_2, 0, 1 );
        var_6 = max( var_5, var_3 + 0.05 );
        set_stealth_meter_progress( var_0, var_6 );
        var_3 = var_6;
    }
}

allow_to_get_to_corpse( var_0 )
{
    if ( !isdefined( level.num_time_getting_to_corpse ) )
        level.num_time_getting_to_corpse = [];

    if ( !isdefined( level.num_time_getting_to_corpse[var_0.index] ) )
        level.num_time_getting_to_corpse[var_0.index] = 0;

    return level.num_time_getting_to_corpse[var_0.index] < 1;
}

corpse_is_too_far_away( var_0, var_1 )
{
    return distance2dsquared( var_0.origin, var_1 ) >= 90000;
}

updateaisightonplayer( var_0 )
{
    self setclientomnvar( "ui_edge_glow", var_0 );
}

sendout_notify_of_vehicle_kill( var_0, var_1 )
{
    foreach ( var_3 in getaiarray( "axis" ) )
    {
        if ( isdefined( var_0 ) && var_3 == var_0 )
            continue;

        var_3 notify( "ai_events", var_1 );
        waitframe();
    }
}

turn_off_hours_later_chyron_text( var_0 )
{
    return 1;
}

watch_for_ai_events( var_0 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    self endon( "death" );
    self endon( "long_death" );
    self endon( "enter_combat" );
    waitframe();
    self notify( "watch_for_ai_events" );
    self endon( "watch_for_ai_events" );
    var_1 = 2000;

    if ( isdefined( self.sightmaxdistance ) )
        var_1 = self.sightmaxdistance;

    for (;;)
    {
        self waittill( "ai_events", var_2 );

        if ( istrue( self.bcallingreinforcements ) )
        {
            waitframe();
            continue;
        }

        var_3 = self getapproxeyepos();

        for ( var_4 = 0; var_4 < var_2.size; var_4++ )
        {
            var_5 = var_2[var_4];

            if ( !turn_off_hours_later_chyron_text( var_5 ) )
            {
                waitframe();
                continue;
            }

            if ( scripts\cp\cp_modular_spawning::has_func_for_aievent( var_5.type ) )
                scripts\cp\cp_modular_spawning::run_aievent_func( var_5.type, var_2 );

            if ( var_5.type == "enemy" )
            {
                if ( isdefined( var_5.entity ) && isplayer( var_5.entity ) )
                {
                    var_7 = self cansee( var_5.entity ) && sighttracepassed( var_3, var_5.entity geteye(), 0, self );

                    if ( var_7 )
                    {
                        if ( istrue( var_5.entity.disguised ) )
                        {
                            if ( distance( self.origin, var_5.entity.origin ) > self.sightmaxdistance / 6 )
                            {
                                waitframe();
                                continue;
                            }
                        }
                        else if ( distance( self.origin, var_5.entity.origin ) > self.sightmaxdistance )
                        {
                            waitframe();
                            continue;
                        }

                        var_8 = angleclamp180( vectortopitch( var_5.entity.origin - self.origin ) );

                        if ( var_8 < self.upaimlimit || var_8 > self.downaimlimit )
                        {
                            waitframe();
                            continue;
                        }

                        var_5.type = "enemy_visible";
                    }
                    else
                    {
                        waitframe();
                        continue;
                    }
                }
                else
                {
                    waitframe();
                    continue;
                }
            }

            if ( var_5.type == "footstep_sprint" )
            {
                var_7 = self cansee( var_5.entity ) && sighttracepassed( var_3, var_5.entity geteye(), 0, self );

                if ( var_7 )
                {
                    if ( istrue( var_5.entity.disguised ) )
                    {
                        if ( distance( self.origin, var_5.entity.origin ) > self.sightmaxdistance / 6 )
                        {
                            waitframe();
                            continue;
                        }
                    }
                    else if ( distance( self.origin, var_5.entity.origin ) > self.sightmaxdistance )
                    {
                        waitframe();
                        continue;
                    }

                    var_8 = angleclamp180( vectortopitch( var_5.entity.origin - self.origin ) );

                    if ( var_8 < self.upaimlimit || var_8 > self.downaimlimit )
                    {
                        waitframe();
                        continue;
                    }
                }

                self setlookat( var_5.entity.origin, 1 );
            }
            else if ( var_5.type == "bulletwhizby" || var_5.type == "grenade danger" || var_5.type == "gunshot" || var_5.type == "vehicle_hit_me" )
            {
                if ( isplayer( var_5.entity ) )
                {
                    if ( var_5.type == "bulletwhizby" )
                    {
                        if ( !scripts\cp\killstreaks\init_cp::gastrap_dmg_trig( var_5.entity getcurrentweapon() ) )
                            continue;
                    }

                    if ( var_5.type == "vehicle_hit_me" )
                    {
                        var_9 = self cansee( var_5.entity ) && sighttracepassed( var_3, var_5.entity geteye(), 0, self );
                        var_10 = isdefined( var_5.entity.vehicle ) && self cansee( var_5.entity.vehicle ) && sighttracepassed( var_3, var_5.entity.vehicle.origin, 0, self );

                        if ( var_9 || var_10 )
                        {
                            if ( istrue( var_5.entity.disguised ) )
                            {
                                if ( distance( self.origin, var_5.entity.origin ) > self.sightmaxdistance / 6 )
                                {
                                    waitframe();
                                    continue;
                                }
                            }
                            else if ( distance( self.origin, var_5.entity.origin ) > self.sightmaxdistance )
                            {
                                waitframe();
                                continue;
                            }

                            var_8 = angleclamp180( vectortopitch( var_5.entity.origin - self.origin ) );

                            if ( var_8 < self.upaimlimit || var_8 > self.downaimlimit )
                            {
                                waitframe();
                                continue;
                            }

                            var_5.type = "vehicle_hit_me";
                        }
                    }
                    else if ( !istrue( self.stack_patch_waittill_context_patch ) && var_5.entity scripts\cp\cp_weapon::player_has_silencer( var_5.entity getcurrentweapon() ) )
                    {
                        var_7 = self cansee( var_5.entity ) && sighttracepassed( var_3, var_5.entity geteye(), 0, self );

                        if ( var_7 )
                        {
                            if ( istrue( var_5.entity.disguised ) )
                            {
                                if ( distance( self.origin, var_5.entity.origin ) > self.sightmaxdistance / 6 )
                                {
                                    waitframe();
                                    continue;
                                }
                            }
                            else if ( distance( self.origin, var_5.entity.origin ) > self.sightmaxdistance )
                            {
                                waitframe();
                                continue;
                            }

                            var_8 = angleclamp180( vectortopitch( var_5.entity.origin - self.origin ) );

                            if ( var_8 < self.upaimlimit || var_8 > self.downaimlimit )
                            {
                                waitframe();
                                continue;
                            }

                            var_5.type = "shot_fired_seen";
                        }
                        else
                            var_5.type = "silenced_shot";
                    }
                }
            }

            switch ( var_5.type )
            {
                case "enemy_visible":
                    if ( get_current_stealth_state( self ) != "alert" )
                        enemy_ai_enter_alert( self, var_5.entity, var_0, var_5.type );
                    else
                        i_saw_player( self, var_5.entity, var_0 );

                    break;
                case "shot_fired_notseen":
                    if ( get_current_stealth_state( self ) != "alert" )
                        enemy_ai_enter_alert( self, var_5.entity, var_0, var_5.type );
                    else
                        i_saw_player( self, var_5.entity, var_0 );

                    break;
                case "shot_fired_seen":
                    if ( distancesquared( self.origin, var_5.entity.origin ) <= 10000 )
                    {
                        level thread play_enemy_radio_chat( processassist_regularcp(), self );
                        thread delay_enter_combat( self, var_5.type, var_5.entity );
                    }
                    else if ( did_anyone_see_this( self, var_5.entity.origin, var_1, 1, var_5.entity.origin ) )
                    {
                        level thread play_enemy_radio_chat( receivingampeddamage(), self );
                        thread delay_enter_combat( self, var_5.type, var_5.entity );
                    }
                    else if ( get_current_stealth_state( self ) != "alert" )
                        enemy_ai_enter_alert( self, var_5.entity, var_0, var_5.type );
                    else
                        i_saw_player( self, var_5.entity, var_0 );

                    break;
                case "silenced_shot":
                case "vehicle_hit_me":
                    if ( did_anyone_see_this( self, var_5.origin, var_1, 1, var_5.origin ) )
                    {
                        level thread play_enemy_radio_chat( receivingampeddamage(), self );
                        thread delay_enter_combat( self, var_5.type, var_5.entity );
                    }
                    else if ( get_current_stealth_state( self ) != "alert" )
                        enemy_ai_enter_alert( self, var_5.entity, var_0, var_5.type );
                    else
                        i_saw_player( self, var_5.entity, var_0 );

                    break;
                case "footstep_walk":
                case "footstep":
                case "footstep_sprint":
                    var_9 = self cansee( var_5.entity ) && sighttracepassed( self geteye(), var_5.entity geteye(), 0, self );

                    if ( var_9 )
                    {
                        if ( istrue( var_5.entity.disguised ) )
                        {
                            if ( distance( self.origin, var_5.entity.origin ) > self.sightmaxdistance / 6 )
                            {
                                waitframe();
                                break;
                            }
                        }

                        level thread play_enemy_radio_chat( receivingampeddamage(), self );
                        thread delay_enter_combat( self, var_5.type, var_5.entity );
                    }

                    break;
                case "break_stealth_with_no_damage":
                case "gunshot_teammate":
                case "gunshot":
                case "bulletwhizby":
                case "glass_destroyed":
                case "explode":
                    if ( istrue( self.compare_higher_score ) )
                    {
                        waitframe();
                        break;
                    }

                    level thread play_enemy_radio_chat( processassist_regularcp(), self );
                    thread delay_enter_combat( self, var_5.type, var_5.entity );
                    break;
                default:
                    break;
            }
        }
    }
}

vehicle_hit_event( var_0, var_1 )
{
    if ( did_anyone_see_this( var_0, var_1, 2000, 1, var_1 ) )
        return;
}

delay_enter_combat( var_0, var_1, var_2 )
{
    var_0 endon( "death" );
    self notify( "watch_for_ai_events" );

    if ( !( isdefined( var_2 ) && isplayer( var_2 ) ) )
        var_2 = quickdropremoveselfrevivetokenfrominventory( var_0.origin, ::quickdropremoveweaponfrominventory );

    wait 0.75;
    var_0 getbestintersectionpt( var_0, var_2.name, "enemies_are_alerted" );
}

i_see_player_watcher( var_0, var_1, var_2, var_3, var_4 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    var_0 endon( "death" );
    var_0 endon( "long_death" );
    var_0 endon( "enter_combat" );
    var_0 thread seeing_player_time_tracker( var_0 );

    if ( !isdefined( var_4 ) )
        var_4 = 1024;

    for (;;)
    {
        var_0 waittill( "known_event", var_5, var_6, var_7, var_8 );

        if ( istrue( var_0.bcallingreinforcements ) )
        {
            waitframe();
            continue;
        }

        if ( !isent( var_5 ) || !isplayer( var_5 ) )
            continue;

        if ( player_in_concealment_area( var_5 ) )
            continue;

        var_9 = var_0.sightmaxdistance;
        var_9 = var_9 * var_5.perk_data["stealth_dist_scalar"];

        if ( istrue( var_5.disguised ) )
            var_9 = var_9 / 6;

        if ( distance( var_0.origin, var_5.origin ) > var_9 )
        {
            waitframe();
            continue;
        }

        if ( var_5.origin[2] - var_0.origin[2] > var_4 )
        {
            waitframe();
            continue;
        }

        var_10 = angleclamp180( vectortopitch( var_5.origin - var_0.origin ) );

        if ( var_10 < var_0.upaimlimit || var_10 > var_0.downaimlimit )
        {
            waitframe();
            continue;
        }

        var_11 = var_0 getapproxeyepos();
        var_12 = var_5 geteye();
        var_13 = anglestoforward( var_0.angles );
        var_14 = vectornormalize( var_12 - var_11 );
        var_15 = vectordot( var_14, var_13 );

        if ( var_15 < var_2 )
        {
            waitframe();
            continue;
        }

        var_16 = 0;

        if ( var_5 scripts\cp_mp\utility\player_utility::isinvehicle() )
        {
            if ( scripts\engine\trace::ray_trace_passed( var_11, var_5.vehicle.origin, var_0, scripts\engine\trace::create_vehicle_contents() ) )
                var_16 = 1;
        }
        else
            var_16 = var_0 cansee( var_5 ) && sighttracepassed( var_11, var_12, 0, var_0 );

        if ( var_16 )
        {
            if ( distancesquared( var_0.origin, var_5.origin ) <= var_3 )
            {
                var_0 getbestintersectionpt( var_0, var_5.name, "player_spotted" );
                continue;
            }

            if ( get_current_stealth_state( self ) != "alert" )
            {
                enemy_ai_enter_alert( var_0, var_5, var_1 );
                continue;
            }

            i_saw_player( var_0, var_5, var_1 );
        }
    }
}

i_saw_player( var_0, var_1, var_2 )
{
    var_0 notify( "display_stealth_meter_to", var_1 );
    mark_seen_this_player_this_frame( var_0, var_1 );

    if ( has_seen_any_player_long_enough_to_trigger_alert( var_0 ) )
        enemy_ai_enter_alert( var_0, var_1, var_2 );

    increase_stealth_meter( var_0, var_1 );
}

display_combat_icon_to_player( var_0 )
{
    var_0 thread delay_delete_combat_icon( var_0 );

    foreach ( var_2 in level.players )
        show_combat_icon_to( var_2, var_0 );
}

logevent_challengeitemunlocked( var_0, var_1, var_2 )
{
    var_0._id_12B4C = var_1;

    foreach ( var_4 in level.players )
        _id_13336( var_4, var_0, var_2 );
}

keypadscriptableused( var_0, var_1, var_2 )
{
    var_3 = var_2 getentitynumber();
    var_4 = var_2 scripts\engine\utility::waittill_any_ents_return( var_2, "death", var_2, "called_reinforcements", level, "weapons_free" );
    laser_func( var_0, var_1, var_2, var_3 );
}

keypadscriptableused_altbunker( var_0, var_1, var_2 )
{
    var_3 = var_2 getentitynumber();
    var_4 = var_2 scripts\engine\utility::waittill_any_ents_return( var_2, "death", var_2, "delete_reinforcement_icon" );
    laser_func( var_0, var_1, var_2, var_3 );
}

delay_delete_combat_icon( var_0 )
{
    var_0 endon( "death" );
    wait 3;
    delete_combat_icon( var_0 );
}

get_player_with_player_id( var_0 )
{
    foreach ( var_2 in level.players )
    {
        var_3 = var_2 getentitynumber();

        if ( var_3 == var_0 )
            return var_2;
    }
}

enemy_ai_enter_alert( var_0, var_1, var_2, var_3, var_4 )
{
    if ( get_current_stealth_state( var_0 ) != "alert" )
    {
        if ( isdefined( var_1 ) && isplayer( var_1 ) )
            display_warning_message_to_player( var_1, var_3 );

        var_0 thread change_stealth_state_to( var_0, "alert" );

        if ( istrue( var_2 ) )
            var_0 thread select_bunker_interior_one_spawners( var_0, var_1, var_4, propwaitminigamerun( var_1 ) );
    }
}

propwaitminigamerun( var_0 )
{
    var_1 = undefined;

    if ( isplayer( var_0 ) )
        var_1 = var_0.name;
    else
        var_1 = var_0.owner.name;
}

select_bunker_interior_one_spawners( var_0, var_1, var_2, var_3 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    var_0 endon( "death" );
    var_0 endon( "enter_combat" );
    level thread play_enemy_radio_chat( processlobbydataforclient(), var_0 );
    var_0 notify( "basic_combat" );
    waitframe();
    var_0.goalradius = 128;
    var_0 stop_patrol( 1 );
    var_0 scripts\engine\utility::set_movement_speed( 75 );
    var_0 scripts\cp\cp_modular_spawning::set_goal_pos( get_investigate_loc( var_0, var_1.origin ) );
    var_0 waittill( "goal" );

    if ( isdefined( var_2 ) && [[ var_2 ]]( var_1 ) )
        var_0 thread kickplayersatcircleedge( var_0, var_3 );

    check_around_the_area( var_0 );
    level thread play_enemy_radio_chat( prevbrbonusxp(), var_0 );
    var_0 thread change_stealth_state_to( var_0, "casual" );
    var_0 scripts\cp\cp_modular_spawning::start_patrol();
}

kickplayersatcircleedge( var_0, var_1 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    var_0 endon( "death" );
    var_0 endon( "enter_combat" );
    logevent_challengeitemunlocked( var_0, "alert", ::keypadscriptableused );
    wait 3;
    var_0 getbestintersectionpt( var_0, var_1, "enemies_are_alerted" );
}

play_enemy_radio_chat( var_0, var_1 )
{
    if ( isdefined( var_1 ) && isai( var_1 ) && isalive( var_1 ) )
    {
        var_1 notify( "play_enemy_radio_chat" );
        var_1 endon( "play_enemy_radio_chat" );
        var_1 endon( "death" );
        var_1.trucks_intel_sequence = 1;
        var_1 playsoundonmovingent( var_0 );
        wait( lookupsoundlength( var_0 ) / 1000 );
        var_1.trucks_intel_sequence = 0;
    }
    else
    {
        scripts\cp\cp_vo::try_to_play_vo_on_team( var_0, "allies" );
        wait( lookupsoundlength( var_0 ) / 1000 );
        play_enemy_radio_beep();
    }
}

play_enemy_radio_beep()
{
    foreach ( var_1 in level.players )
        var_1 playlocalsound( "weap_uav_radio_button_npc_cp" );

    wait( lookupsoundlength( "weap_uav_radio_button_npc_cp" ) / 1000 );
}

get_investigate_loc( var_0, var_1 )
{
    var_2 = vectornormalize( var_0.origin - var_1 );
    var_3 = var_1 + var_2 * randomfloatrange( 75, 125 );
    return getclosestpointonnavmesh( var_3 );
}

check_around_the_area( var_0 )
{
    wait( randomfloatrange( 0.75, 1.5 ) );

    if ( istrue( var_0.using_goto_node ) )
    {
        if ( isdefined( var_0.currentnode ) )
            var_0 thread scripts\cp\cp_modular_spawning::go_to_node( var_0.currentnode );
    }
    else
    {
        var_1 = randomintrange( 2, 4 );
        var_0 scripts\cp\cp_modular_spawning::set_goal_radius( 36 );
        var_0 scripts\engine\utility::set_movement_speed( 25 );

        for ( var_2 = 0; var_2 < var_1; var_2++ )
        {
            var_3 = randomfloatrange( 85, 150 ) * scripts\engine\utility::ter_op( randomint( 100 ) > 50, 1, -1 );
            var_4 = randomfloatrange( 85, 150 ) * scripts\engine\utility::ter_op( randomint( 100 ) > 50, 1, -1 );
            var_5 = ( var_0.origin[0] + var_3, var_0.origin[1] + var_4, var_0.origin[2] );
            var_0 scripts\cp\cp_modular_spawning::set_goal_pos( getclosestpointonnavmesh( var_5 ) );
            var_0 scripts\engine\utility::waittill_notify_or_timeout( "goal", 5 );
            wait( randomfloatrange( 0.75, 1.5 ) );
        }

        var_0 scripts\cp\cp_modular_spawning::return_to_last_goalradius();
    }
}

display_warning_message_to_player( var_0, var_1 )
{
    if ( !isdefined( var_0.next_warning_message_time ) )
        var_0.next_warning_message_time = 0;

    var_2 = gettime();

    if ( var_2 > var_0.next_warning_message_time )
        var_0.next_warning_message_time = var_2 + 1000;
}

has_seen_any_player_long_enough_to_trigger_alert( var_0 )
{
    return has_seen_any_player_long_enough( var_0, 0.1 );
}

has_seen_any_player_long_enough( var_0, var_1 )
{
    foreach ( var_4, var_3 in var_0.time_seeing_players )
    {
        if ( var_3 >= var_1 )
            return 1;
    }

    return 0;
}

mark_seen_this_player_this_frame( var_0, var_1 )
{
    var_0.player_most_recently_saw = var_1;
    var_2 = var_1 getentitynumber();

    if ( !isdefined( var_0.time_seeing_players ) )
        var_0 thread seeing_player_time_tracker( var_0 );

    if ( !isdefined( var_0.time_seeing_players[var_2] ) )
        var_0.time_seeing_players[var_2] = 0;
}

_id_14458()
{
    level endon( "game_ended" );
    self notify( "watch_for_level_weapons_free" );
    self endon( "watch_for_level_weapons_free" );
    self endon( "death" );
    self endon( "long_death" );
    self endon( "enter_combat" );
    level waittill( "weapons_free" );
    scripts\cp\cp_modular_spawning::remove_pacifist_from_guy();
    self aieventlistenerevent( "combat", self, self.origin );
}

seeing_player_time_tracker( var_0 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    var_0 notify( "seeing_player_time_tracker" );
    var_0 endon( "seeing_player_time_tracker" );
    var_0 endon( "death" );
    var_0 endon( "long_death" );
    var_0 endon( "enter_combat" );
    var_0.player_most_recently_saw = undefined;
    var_0.time_seeing_players = [];
    var_1 = 0;

    for (;;)
    {
        if ( isdefined( var_0.player_most_recently_saw ) )
            var_1 = 0;
        else
            var_1 = var_1 + 0.1;

        foreach ( var_4, var_3 in var_0.time_seeing_players )
        {
            if ( isdefined( var_0.player_most_recently_saw ) && var_4 == var_0.player_most_recently_saw getentitynumber() )
            {
                var_0.time_seeing_players[var_4] = var_0.time_seeing_players[var_4] + 0.1;
                var_0.player_most_recently_saw = undefined;
                continue;
            }

            var_0.time_seeing_players[var_4] = max( var_0.time_seeing_players[var_4] - 0.05, 0 );
        }

        foreach ( var_6 in level.players )
        {
            var_4 = var_6 getentitynumber();

            if ( isdefined( var_0.time_seeing_players[var_4] ) && var_0.time_seeing_players[var_4] == 0 )
                hide_stealth_meter_from( var_6, var_0 );
        }

        if ( var_1 >= 0.5 )
            stop_stealth_meter( var_0 );

        wait 0.1;
    }
}

player_in_concealment_area( var_0 )
{
    return istrue( var_0.tracking_munitions_purchase );
}

_id_11A86( var_0, var_1 )
{
    if ( getdvarint( "scr_phj_disable_icons", 0 ) != 0 )
        return;

    if ( sg_respawn( var_0 ) )
        return;

    var_2 = ragdoll_on_vehicle_death( var_0 );
    var_3 = deleteheadicon( var_0 );
    setheadiconfriendlyimage( var_3, var_2 );
    addclienttoheadiconmask( var_3, 10 );
    setheadicondrawthroughgeo( var_3, 0 );
    setheadiconzoffset( var_3, 1 );
    setheadiconsnaptoedges( var_3, 5000 );
    setheadiconmaxdistance( var_3, 500 );
    var_4 = scripts\cp\cp_objectives::requestworldid( "enemy_AI_combat_ID_" + var_0 getentitynumber(), 22 );
    objective_state( var_4, "active" );
    objective_icon( var_4, var_2 );
    objective_setbackground( var_4, 1 );
    objective_removeallfrommask( var_4 );
    objective_setplayoutro( var_4, 0 );
    objective_setshowdistance( var_4, 0 );
    objective_setshowprogress( var_4, 0 );
    objective_setfadedisabled( var_4, 1 );
    objective_sethot( var_4, 1 );
    objective_setpulsate( var_4, 1 );
    objective_setshowoncompass( var_4, 1 );
    objective_onentity( var_4, var_0 );
    var_0 thread [[ var_1 ]]( var_4, var_3, var_0 );
    var_0._id_12B4A = var_4;
}

ragdoll_on_vehicle_death( var_0 )
{
    switch ( var_0._id_12B4C )
    {
        case "alert":
            return "hud_alert";
        case "alarm":
            return "hud_icon_head_tacops_alarm";
        case "cellphone":
            return "hud_icon_head_tacops_cellphone";
        case "head_marked":
            return "hud_icon_esc_bounty_target";
    }
}

_id_11A7B( var_0 )
{
    if ( getdvarint( "scr_phj_disable_icons", 0 ) != 0 )
        return;

    if ( has_combat_icon( var_0 ) )
        return;

    var_1 = scripts\cp\cp_objectives::requestworldid( "enemy_AI_combat_ID_" + var_0 getentitynumber(), 22 );
    objective_state( var_1, "active" );
    objective_icon( var_1, "hud_icon_stealth" );
    objective_onentity( var_1, var_0 );
    objective_setzoffset( var_1, 90 );
    objective_removeallfrommask( var_1 );
    objective_setplayintro( var_1, 0 );
    objective_setplayoutro( var_1, 0 );
    objective_setbackground( var_1, 1 );
    objective_setshowdistance( var_1, 0 );
    objective_setshowprogress( var_1, 1 );
    objective_setfadedisabled( var_1, 1 );
    objective_sethot( var_1, 1 );
    objective_setpulsate( var_1, 1 );
    objective_setshowoncompass( var_1, 1 );
    var_0.combat_icon_objective_id = var_1;
}

make_stealth_meter_on_ai( var_0 )
{
    if ( getdvarint( "scr_phj_disable_icons", 0 ) != 0 )
        return;

    if ( has_stealth_meter( var_0 ) )
        return;

    var_1 = scripts\cp\cp_objectives::requestworldid( "enemy_AI_stealth_ID_" + var_0 getentitynumber(), 21 );
    objective_state( var_1, "active" );
    objective_icon( var_1, "hud_icon_stealth" );
    objective_onentity( var_1, var_0 );
    objective_setzoffset( var_1, 90 );
    objective_removeallfrommask( var_1 );
    objective_setplayintro( var_1, 0 );
    objective_setplayoutro( var_1, 0 );
    objective_setbackground( var_1, 1 );
    objective_setshowdistance( var_1, 0 );
    objective_setshowprogress( var_1, 1 );
    objective_setprogress( var_1, 0 );
    objective_setfadedisabled( var_1, 1 );
    objective_sethot( var_1, 1 );
    objective_setpulsate( var_1, 1 );
    objective_setshowoncompass( var_1, 1 );
    var_0.showing_the_stealth_meter_to_players = [];
    var_0.stealth_meter_objective_id = var_1;
    var_0 thread clear_up_stealth_meter_when_enter_combat( var_0 );
}

clear_up_stealth_meter_when_enter_combat( var_0 )
{
    var_0 endon( "death" );
    var_0 waittill( "enter_combat" );
    delete_stealth_meter( var_0 );
}

show_stealth_meter_to( var_0, var_1 )
{
    if ( !has_stealth_meter( var_1 ) )
        make_stealth_meter_on_ai( var_1 );

    if ( is_showing_stealth_meter_to( var_0, var_1 ) )
        return;

    var_1.showing_the_stealth_meter_to_players[var_1.showing_the_stealth_meter_to_players.size] = var_0;
    objective_addclienttomask( var_1.stealth_meter_objective_id, var_0 );
}

show_combat_icon_to( var_0, var_1 )
{
    if ( getdvarint( "scr_phj_disable_icons", 0 ) != 0 )
        return;

    if ( !has_combat_icon( var_1 ) )
        _id_11A7B( var_1 );

    objective_addclienttomask( var_1.combat_icon_objective_id, var_0 );
}

_id_13336( var_0, var_1, var_2 )
{
    if ( istrue( level.little_bird_mg_handleflarerecharge ) )
        return;

    if ( getdvarint( "scr_phj_disable_icons", 0 ) != 0 )
        return;

    if ( !sg_respawn( var_1 ) )
        _id_11A86( var_1, var_2 );

    objective_addclienttomask( var_1._id_12B4A, var_0 );
}

set_stealth_meter_progress( var_0, var_1 )
{
    if ( get_current_stealth_state( var_0 ) == "alert" )
        var_0.target_stealth_meter_progress = var_1;
}

hide_stealth_meter_from( var_0, var_1 )
{
    if ( !has_stealth_meter( var_1 ) )
        return;

    if ( !is_showing_stealth_meter_to( var_0, var_1 ) )
        return;

    var_1.showing_the_stealth_meter_to_players = scripts\engine\utility::array_remove( var_1.showing_the_stealth_meter_to_players, var_0 );
    objective_removeclientfrommask( var_1.stealth_meter_objective_id, var_0 );

    if ( var_1.showing_the_stealth_meter_to_players.size == 0 )
        var_1.spawnposition = undefined;
}

is_showing_stealth_meter_to( var_0, var_1 )
{
    return scripts\engine\utility::array_contains( var_1.showing_the_stealth_meter_to_players, var_0 );
}

has_stealth_meter( var_0 )
{
    return isdefined( var_0.stealth_meter_objective_id );
}

has_combat_icon( var_0 )
{
    return isdefined( var_0.combat_icon_objective_id );
}

sg_respawn( var_0 )
{
    return isdefined( var_0._id_12B4A );
}

delete_stealth_meter( var_0 )
{
    if ( has_stealth_meter( var_0 ) )
    {
        scripts\cp\cp_objectives::freeworldid( "enemy_AI_stealth_ID_" + var_0 getentitynumber() );
        objective_delete( var_0.stealth_meter_objective_id );
        var_0.stealth_meter_objective_id = undefined;
        var_0 notify( "exit_stealth_think" );
    }
}

delete_combat_icon( var_0 )
{
    if ( has_combat_icon( var_0 ) )
    {
        scripts\cp\cp_objectives::freeworldid( "enemy_AI_combat_ID_" + var_0 getentitynumber() );
        objective_delete( var_0.combat_icon_objective_id );
        var_0.combat_icon_objective_id = undefined;
        var_0 notify( "exit_stealth_think" );
    }
}

laser_func( var_0, var_1, var_2, var_3 )
{
    scripts\cp\cp_objectives::freeworldid( "enemy_AI_reinforcement_ID_" + var_3 );
    objective_delete( var_0 );
    var_2._id_12B4A = undefined;
    setheadiconimage( var_1 );
    var_2 notify( "exit_stealth_think" );
}

did_anyone_see_this( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = getaiarray( "axis" );
    var_7 = var_2 * var_2;

    if ( !isdefined( var_3 ) )
        var_3 = 1;

    if ( !isdefined( var_4 ) )
        var_4 = var_1;

    var_8 = 3;
    var_9 = 0;

    foreach ( var_11 in var_6 )
    {
        if ( var_0 == var_11 )
        {
            if ( !isdefined( var_0.times_hit ) )
                var_0.times_hit = 1;
            else
                var_0.times_hit++;

            if ( var_0.times_hit > 1 )
                return 1;
            else
                continue;
        }

        if ( !isalive( var_11 ) )
            continue;

        var_12 = distancesquared( var_11.origin, var_1 );

        if ( var_12 > var_7 )
            continue;

        if ( isdefined( var_5 ) && var_12 <= var_5 * var_5 )
            continue;

        if ( !var_11 hastacvis( var_4, var_3 ) )
        {
            if ( var_3 && !var_11 aipointinfov( var_1 ) )
                continue;

            var_9++;

            if ( var_9 > var_8 )
            {
                waitframe();
                var_9 = 0;
            }

            if ( !sighttracepassed( var_11 geteye(), var_1, 0, var_0 ) )
                continue;
        }

        return 1;
    }

    return 0;
}

increase_script_maxdist( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\cp\cp_modular_spawning::process_module_var( var_0, var_0.spawn_points );

    for ( var_5 = 0; var_5 < var_4.size; var_5++ )
    {
        var_6 = var_4[var_5];
        var_6.script_maxdist = 20000;
    }
}

flash_crate_update_hint_logic_alt()
{
    level.flash_icon_extraction = 0;
    var_0 = 2;
    level.flash_group = getent( "bush_trig", "targetname" );
    level.flashbang_ai = [];
    var_1 = scripts\engine\utility::getstructarray( "bush_zone", "targetname" );
    var_2 = scripts\engine\utility::getstructarray( "bush_struct", "targetname" );

    if ( !isdefined( level.flash_group ) )
        return;

    var_3 = gettime();

    foreach ( var_5 in var_1 )
    {
        var_6 = [];
        var_7 = var_5.origin;
        var_8 = var_5.radius * var_5.radius;

        foreach ( var_10 in var_2 )
        {
            if ( !isdefined( var_10 ) || istrue( var_10.should_break_stealth_immediately_func ) )
                continue;

            if ( scripts\engine\utility::distance_2d_squared( var_10.origin, var_7 ) < var_8 )
            {
                var_6[var_6.size] = [ var_10.origin, ( var_10.radius + var_0 ) * ( var_10.radius + var_0 ) ];
                var_10.should_break_stealth_immediately_func = 1;
            }
        }

        level.flashbang_ai[level.flashbang_ai.size] = [ var_7, var_8, var_6 ];
    }

    scripts\engine\utility::deletestructarray( "bush_zone", "targetname" );
    scripts\engine\utility::deletestructarray( "bush_struct", "targetname" );
    level thread _id_124B6();
}

_id_124B6()
{
    level endon( "game_ended" );

    foreach ( var_1 in level.players )
        var_1 thread _id_11CD6( var_1 );

    level thread flash_crate_use();
}

flash_crate_use()
{
    level endon( "game_ended" );

    for (;;)
    {
        level waittill( "connected", var_0 );
        var_0 thread _id_11CD6( var_0 );
    }
}

_id_11CD6( var_0 )
{
    level endon( "game_ended" );
    var_0 endon( "disconnect" );
    var_1 = 100;
    var_2 = 0.1;

    for (;;)
    {
        wait( var_2 );
        var_0.tracking_munitions_purchase = 0;

        if ( var_0 istouching( level.flash_group ) )
        {
            var_0.tracking_munitions_purchase = 1;
            continue;
        }

        var_3 = propcircleindex( var_0 );

        if ( !isdefined( var_3 ) )
            continue;

        foreach ( var_5 in var_3[2] )
        {
            var_6 = var_5[0];
            var_7 = var_5[1];

            if ( scripts\engine\utility::distance_2d_squared( var_6, var_0.origin ) < var_7 && abs( var_6[2] - var_0.origin[2] ) < var_1 )
            {
                var_0.tracking_munitions_purchase = 1;
                continue;
            }
        }
    }
}

propcircleindex( var_0 )
{
    foreach ( var_2 in level.flashbang_ai )
    {
        if ( scripts\engine\utility::distance_2d_squared( var_0.origin, var_2[0] ) < var_2[1] )
            return var_2;
    }

    return undefined;
}

tryspawnscriptableparenting()
{
    if ( !scripts\engine\utility::flag_exist( "stealth_settings_activated" ) )
        return 0;

    return scripts\engine\utility::flag( "stealth_settings_activated" );
}

attachdrill()
{
    setdvar( "ai_eventDistExplosion", 2048 );
    setdvar( "ai_eventDistGunShot", 1024 );
    setdvar( "ai_eventDistFootstep", 128 );
    setdvar( "ai_eventDistFootstepWalk", 64 );
    setdvar( "ai_eventDistFootstepSprint", 200 );
    scripts\engine\utility::flag_set( "stealth_settings_activated" );
    level thread serverroomtvs();
    level thread _id_12665();
    level thread _id_12655();
}

_id_12655()
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    level notify( "players_grenade_fire_monitor" );
    level endon( "players_grenade_fire_monitor" );

    foreach ( var_1 in level.players )
        var_1 thread _id_124A7( var_1 );

    for (;;)
    {
        level waittill( "connected", var_1 );
        var_1 thread killstreak_createobjective_engineer( var_1 );
    }
}

killstreak_createobjective_engineer( var_0 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    var_0 scripts\engine\utility::_id_143A5( "loadout_given", "start_hotjoining_via_c130" );
    var_0 thread _id_124A7( var_0 );
}

_id_124A7( var_0 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    var_0 notify( "player_grenade_fire_monitor" );
    var_0 endon( "player_grenade_fire_monitor" );

    for (;;)
    {
        var_0 waittill( "grenade_fire" );
        var_0.waittill_any_timeout_no_endon_death_2 = gettime();
    }
}

quit_game_in()
{
    var_0 = undefined;
    var_1 = -1;

    foreach ( var_3 in level.players )
    {
        if ( var_3.sessionstate == "spectator" )
            continue;

        if ( isdefined( var_3.waittill_any_timeout_no_endon_death_2 ) && var_3.waittill_any_timeout_no_endon_death_2 > var_1 )
        {
            var_0 = var_3;
            var_1 = var_3.waittill_any_timeout_no_endon_death_2;
        }
    }

    return var_0;
}

_id_12665()
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    level notify( "players_weapon_fired_monitor" );
    level endon( "players_weapon_fired_monitor" );

    foreach ( var_1 in level.players )
        var_1 thread _id_12506( var_1 );

    for (;;)
    {
        level waittill( "connected", var_1 );
        var_1 thread killstreak_loadout_state( var_1 );
    }
}

killstreak_loadout_state( var_0 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    var_0 scripts\engine\utility::_id_143A5( "loadout_given", "start_hotjoining_via_c130" );
    var_0 thread _id_12506( var_0 );
}

_id_12506( var_0 )
{
    level endon( "game_ended" );
    level endon( "weapons_free" );
    var_0 notify( "player_weapon_fired_monitor" );
    var_0 endon( "player_weapon_fired_monitor" );

    for (;;)
    {
        var_0 waittill( "weapon_fired" );
        var_0.waittill_player_dropkit_crate_used = gettime();
    }
}

quickdropremoveselfrevivetokenfrominventory( var_0, var_1 )
{
    var_2 = [[ var_1 ]]();

    if ( isdefined( var_2 ) )
        return var_2;

    return projectiledeleteonnote( var_0 );
}

projectiledeleteonnote( var_0 )
{
    var_1 = [];

    foreach ( var_3 in level.players )
    {
        if ( var_3.sessionstate == "spectator" )
            continue;

        var_1[var_1.size] = var_3;
    }

    return scripts\engine\utility::getclosest( var_0, var_1 );
}

quickdropremoveweaponfrominventory()
{
    var_0 = undefined;
    var_1 = -1;

    foreach ( var_3 in level.players )
    {
        if ( var_3.sessionstate == "spectator" )
            continue;

        if ( isdefined( var_3.waittill_player_dropkit_crate_used ) && var_3.waittill_player_dropkit_crate_used > var_1 )
        {
            var_0 = var_3;
            var_1 = var_3.waittill_player_dropkit_crate_used;
        }
    }

    return var_0;
}

isenemyteamplayer()
{
    setdvar( "ai_eventDistExplosion", 1024 );
    setdvar( "ai_eventDistGunShot", 1024 );
    setdvar( "ai_eventDistGlassDestroyed", 384 );
    setdvar( "ai_eventDistFootstep", 256 );
    setdvar( "ai_eventDistFootstepWalk", 128 );
    setdvar( "ai_eventDistFootstepSprint", 400 );
    scripts\engine\utility::flag_clear( "stealth_settings_activated" );
}

serverroomtvs()
{
    level endon( "stealth_settings_activated" );
    level endon( "game_ended" );

    for (;;)
    {
        level waittill( "grenade_exploded_during_stealth", var_0, var_1, var_2 );

        switch ( var_1 )
        {
            case "claymore_mp":
                level thread _id_11E31( 4194304, 2, var_0, 1, var_2 );
                break;
            case "suicide_vest":
                level thread _id_11E31( 4194304, 2, var_0, 1, var_2 );
                break;
            case "frag_grenade_mp":
                level thread _id_11E31( 4194304, 2, var_0, 1, var_2 );
                break;
            case "molotov_mp":
                level thread _id_11E31( 4194304, 2, var_0, 1, var_2 );
                break;
            case "c4_mp_p":
                level thread _id_11E31( 4194304, 2, var_0, 1, var_2 );
                break;
            case "semtex_mp":
                level thread _id_11E31( 4194304, 2, var_0, 1.8, var_2 );
                break;
            case "throwingknife_mp":
                _id_11E32( 1048576, 1, var_0, var_1, ::_id_132D1, var_2 );
                break;
            case "at_mine_mp":
                level thread _id_11E31( 4194304, 2, var_0, 0.6, var_2 );
                break;
            case "thermite_mp":
                level thread _id_11E31( 4194304, 2, var_0, 0.6, var_2 );
                break;
            case "flash_grenade_mp":
                level thread _id_11E31( 4194304, 2, var_0, 0.6, var_2 );
                break;
            case "concussion_grenade_mp":
                level thread _id_11E31( 4194304, 2, var_0, 0.75, var_2 );
                break;
            case "smoke_grenade_mp":
                _id_11E32( 4194304, 2, var_0, var_1, ::_id_132CF, var_2 );
                break;
            case "snapshot_grenade_mp":
                _id_11E32( 4194304, 2, var_0, var_1, ::_id_132D0, var_2 );
                break;
            case "gas_mp":
                _id_11E32( 4194304, 2, var_0, var_1, ::_id_132CE, var_2 );
                break;
            case "decoy_grenade_mp":
                _id_11E32( 9437184, 2, var_0, var_1, ::_id_132CD, var_2 );
                break;
            default:
                return;
        }
    }
}

_id_11E31( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( var_4 ) )
    {
        if ( isvector( var_2 ) )
            var_5 = quickdropremoveselfrevivetokenfrominventory( var_2, ::quit_game_in );
        else
            var_5 = quickdropremoveselfrevivetokenfrominventory( var_2.origin, ::quit_game_in );

        var_4 = var_5.name;
    }

    wait( var_3 );

    if ( isvector( var_2 ) )
        var_6 = prematchloadoutindex( var_2, var_0, var_1 );
    else
        var_6 = prematchloadoutindex( var_2.origin, var_0, var_1 );

    foreach ( var_8 in var_6 )
    {
        if ( isdefined( get_current_stealth_state( var_8 ) ) )
            var_8 getbestintersectionpt( var_8, var_4, "enemies_are_alerted" );
    }
}

_id_11E32( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = prematchloadoutindex( var_2.origin, var_0, var_1 );

    foreach ( var_8 in var_6 )
    {
        if ( trial_trigger_think( var_8 ) )
            next_mortar_vo( var_8, var_2, var_3, var_4, var_5 );
    }
}

next_mortar_vo( var_0, var_1, var_2, var_3, var_4 )
{
    if ( get_current_stealth_state( var_0 ) != "alert" )
        var_0 thread change_stealth_state_to( var_0, "alert" );

    var_0 thread select_bunker_interior_one_spawners( var_0, var_1, var_3, var_4 );
}

prematchloadoutindex( var_0, var_1, var_2 )
{
    var_3 = [];
    var_4 = [];
    var_5 = getaiarray( "axis" );

    foreach ( var_7 in var_5 )
    {
        if ( distancesquared( var_0, var_7.origin ) <= var_1 )
            var_4[var_4.size] = var_7;
    }

    var_4 = sortbydistance( var_4, var_0 );
    var_9 = int( min( var_4.size, var_2 ) );

    for ( var_10 = 0; var_10 < var_9; var_10++ )
        var_3[var_10] = var_4[var_10];

    return var_3;
}

_id_132D1( var_0 )
{
    return 0;
}

_id_132D0( var_0 )
{
    return 0;
}

_id_132CF( var_0 )
{
    return isdefined( var_0 );
}

_id_132CE( var_0 )
{
    return isdefined( var_0 );
}

_id_132CD( var_0 )
{
    return isdefined( var_0 );
}

_id_129FD()
{
    var_0 = [ "mus_cp_stealth_1", "mus_cp_stealth_2", "mus_cp_stealth_3", "mus_cp_stealth_4", "mus_cp_stealth_5", "mus_cp_stealth_6" ];

    for ( var_1 = 0; var_1 < 5; var_1++ )
        var_0 = scripts\engine\utility::array_randomize( var_0 );

    level._id_13894 = var_0;
    level._id_13895 = 0;
}

rear_spawn_type_adjuster()
{
    var_0 = level._id_13894[level._id_13895];
    level._id_13895++;

    if ( level._id_13895 == level._id_13894.size - 1 )
        _id_129FD();

    return var_0;
}

_id_129FE()
{
    var_0 = [ "mus_cp_stealth_broken_1", "mus_cp_stealth_broken_2", "mus_cp_stealth_broken_3", "mus_cp_stealth_broken_4", "mus_cp_stealth_broken_5", "mus_cp_stealth_broken_6" ];

    for ( var_1 = 0; var_1 < 5; var_1++ )
        var_0 = scripts\engine\utility::array_randomize( var_0 );

    level._id_13896 = var_0;
    level._id_13897 = 0;
}

rear_spotlight_angles_offset()
{
    var_0 = level._id_13896[level._id_13897];
    level._id_13897++;

    if ( level._id_13897 == level._id_13896.size - 1 )
        _id_129FE();

    return var_0;
}

_id_123C4( var_0 )
{
    level endon( "game_ended" );
    var_0 endon( "disconnect" );
    var_0 notify( "play_alert_music_to_player" );
    var_0 endon( "play_alert_music_to_player" );
    var_1 = 3;

    if ( !isdefined( var_0._id_1273E ) )
    {
        var_2 = rear_spawn_type_adjuster();
        var_0._id_1273E = var_2;
        scripts\cp\utility::_id_123FE( var_2, var_0 );
    }

    var_3 = level scripts\engine\utility::_id_143B9( var_1, "weapons_free" );
    var_0._id_1273E = undefined;
    var_0 setplayermusicstate( "" );
}

play_combat_music_to_players()
{
    scripts\cp\utility::_id_123FE( rear_spotlight_angles_offset(), level.players );
}

getbestintersectionpt( var_0, var_1, var_2 )
{
    var_0._id_124D1 = var_1;
    var_0._id_12A6E = var_2;
    var_0 thread change_stealth_state_to( var_0, "combat" );
}

logloadoutcopy( var_0 )
{
    foreach ( var_2 in level.players )
    {
        if ( var_2.name == var_0._id_124D1 )
        {
            logevent_playerregen( var_2, var_0._id_12A6E );
            continue;
        }

        logevent_servermatchend( var_2, var_0._id_124D1, var_0._id_12A6E );
    }
}

logevent_playerregen( var_0, var_1 )
{
    switch ( var_1 )
    {
        case "enemies_are_alerted":
            var_0 iprintlnbold( "^1You ^7have alerted the enemies" );
            break;
        case "player_spotted":
            var_0 iprintlnbold( "^1You ^7have been spotted by the enemies" );
            break;
    }
}

logevent_servermatchend( var_0, var_1, var_2 )
{
    switch ( var_2 )
    {
        case "enemies_are_alerted":
            var_0 iprintlnbold( "^1" + var_1 + "^7 has alerted the enemies" );
            break;
        case "player_spotted":
            var_0 iprintlnbold( "^1" + var_1 + "^7 has been spotted by the enemies" );
            break;
    }
}

_id_134E4()
{
    level notify( "sp_stealth_broken_listener" );
    level endon( "sp_stealth_broken_listener" );

    if ( weapon_xp_iw8_sn_kilo98() )
    {
        while ( !( isdefined( level.stealth ) && isdefined( level.stealth.groupdata ) ) )
            wait 0.25;

        for (;;)
        {
            if ( scripts\stealth\manager::anyone_in_combat() )
            {
                level thread global_stealth_broken();
                return;
            }

            wait 0.25;
        }
    }
}

prevbrbonusxp()
{
    return scripts\engine\utility::random( [ "dx_cst_aq1_alert_callin_10", "dx_cst_aq2_alert_callin_10", "dx_cst_aq3_alert_callin_10", "dx_cst_aq4_alert_callin_10" ] );
}

processlobbydataforclient()
{
    return scripts\engine\utility::random( [ "dx_cst_aq1_investigate_callin_10", "dx_cst_aq2_investigate_callin_10", "dx_cst_aq3_investigate_callin_10", "dx_cst_aq4_investigate_callin_10" ] );
}

raid_objective_cleanup_func()
{
    return scripts\engine\utility::random( [ "dx_cst_aq1_seek_backup_10", "dx_cst_aq2_seek_backup_10", "dx_cst_aq3_seek_backup_10", "dx_cst_aq4_seek_backup_10" ] );
}

processassist_regularcp()
{
    return scripts\engine\utility::random( [ "dx_cst_aq1_bulletwhizby_generic_10", "dx_cst_aq2_bulletwhizby_generic_10", "dx_cst_aq3_bulletwhizby_generic_10", "dx_cst_aq4_bulletwhizby_generic_10" ] );
}

receivingampeddamage()
{
    return scripts\engine\utility::random( [ "dx_cst_aq1_coverblown_generic_10", "dx_cst_aq2_coverblown_generic_10", "dx_cst_aq3_coverblown_generic_10", "dx_cst_aq4_coverblown_generic_10" ] );
}

prematchmusic()
{
    var_0 = [ "dx_cst_aq1_alert_reset_10", "dx_cst_aq2_alert_reset_10", "dx_cst_aq3_alert_reset_10", "dx_cst_aq4_alert_reset_10" ];
    return var_0[randomint( var_0.size )];
}

puddle_structs()
{
    var_0 = [ "dx_cst_aq1_investigate_generic_10", "dx_cst_aq2_investigate_generic_10", "dx_cst_aq3_investigate_generic_10", "dx_cst_aq4_investigate_generic_10" ];
    return var_0[randomint( var_0.size )];
}

propane_detonate_fiery_drips()
{
    var_0 = [ "dx_cst_aq1_coverblown_generic_10", "dx_cst_aq2_coverblown_generic_10", "dx_cst_aq3_coverblown_generic_10", "dx_cst_aq4_coverblown_generic_10" ];
    return var_0[randomint( var_0.size )];
}

projectileimpactthermite()
{
    var_0 = [ "dx_cst_aq1_combat_generic_10", "dx_cst_aq2_combat_generic_10", "dx_cst_aq3_combat_generic_10", "dx_cst_aq4_combat_generic_10" ];
    return var_0[randomint( var_0.size )];
}

raritycamlarge()
{
    var_0 = [ "dx_cst_aq1_sight_generic_10", "dx_cst_aq2_sight_generic_10", "dx_cst_aq3_sight_generic_10", "dx_cst_aq4_sight_generic_10" ];
    return var_0[randomint( var_0.size )];
}

propnumclones()
{
    var_0 = [ "dx_cst_aq1_explosion_generic_10", "dx_cst_aq2_explosion_generic_10", "dx_cst_aq3_explosion_generic_10", "dx_cst_aq4_explosion_generic_10" ];
    return var_0[randomint( var_0.size )];
}

propwaitminigamehudsetpoint()
{
    var_0 = [ "dx_cst_aq1_grenade_danger_10", "dx_cst_aq2_grenade_danger_10", "dx_cst_aq3_grenade_danger_10", "dx_cst_aq4_grenade_danger_10" ];
    return var_0[randomint( var_0.size )];
}

ray_trace_trigger_radius_2d()
{
    var_0 = [ "dx_cst_aq1_silenced_shot_10", "dx_cst_aq2_silenced_shot_10", "dx_cst_aq3_silenced_shot_10", "dx_cst_aq4_silenced_shot_10" ];
    return var_0[randomint( var_0.size )];
}

propwatchcleanupondisconnect()
{
    var_0 = [ "dx_cst_aq1_gunshot_generic_10", "dx_cst_aq2_gunshot_generic_10", "dx_cst_aq3_gunshot_generic_10", "dx_cst_aq4_gunshot_generic_10" ];
    return var_0[randomint( var_0.size )];
}

propwatchcleanuponroundend()
{
    var_0 = [ "dx_cst_aq1_gunshot_teammate_10", "dx_cst_aq2_gunshot_teammate_10", "dx_cst_aq3_gunshot_teammate_10", "dx_cst_aq4_gunshot_teammate_10" ];
    return var_0[randomint( var_0.size )];
}

pressure_timeout()
{
    var_0 = [ "dx_cst_aq1_ally_killed_10", "dx_cst_aq2_ally_killed_10", "dx_cst_aq3_ally_killed_10", "dx_cst_aq4_ally_killed_10" ];
    return var_0[randomint( var_0.size )];
}

race_set_player_safe()
{
    var_0 = [ "dx_cst_aq1_proximity_generic_10", "dx_cst_aq2_proximity_generic_10", "dx_cst_aq3_proximity_generic_10", "dx_cst_aq4_proximity_generic_10" ];
    return var_0[randomint( var_0.size )];
}

propsizetext()
{
    var_0 = [ "dx_cst_aq1_footstep_generic_10", "dx_cst_aq2_footstep_generic_10", "dx_cst_aq3_footstep_generic_10", "dx_cst_aq4_footstep_generic_10" ];
    return var_0[randomint( var_0.size )];
}

propspawnorigin()
{
    var_0 = [ "dx_cst_aq1_footstep_sprint_10", "dx_cst_aq2_footstep_sprint_10", "dx_cst_aq3_footstep_sprint_10", "dx_cst_aq4_footstep_sprint_10" ];
    return var_0[randomint( var_0.size )];
}

recent_spawn_threshold()
{
    var_0 = [ "dx_cst_aq1_team_inquiry_10", "dx_cst_aq2_team_inquiry_10", "dx_cst_aq3_team_inquiry_10", "dx_cst_aq4_team_inquiry_10" ];
    return var_0[randomint( var_0.size )];
}

put_passenger_in_truck()
{
    var_0 = [ "dx_cst_aq1_lost_sight_10", "dx_cst_aq2_lost_sight_10", "dx_cst_aq3_lost_sight_10", "dx_cst_aq4_lost_sight_10" ];
    return var_0[randomint( var_0.size )];
}

proximity_explode()
{
    var_0 = [ "dx_cst_aq1_hunt_firstlost_10", "dx_cst_aq2_hunt_firstlost_10", "dx_cst_aq3_hunt_firstlost_10", "dx_cst_aq4_hunt_firstlost_10" ];
    return var_0[randomint( var_0.size )];
}
