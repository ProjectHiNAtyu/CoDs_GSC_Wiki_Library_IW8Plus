// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

tac_cover_init()
{
    if ( !isdefined( level.taccovercollision ) )
    {
        var_0 = getentarray( "_encstr_8B1213CB23522B9CD2F9593FF2F020A373F1C367B4", "_encstr_B8CE0BE43FC317DF690862BA48" );

        if ( isdefined( var_0 ) )
            level.taccovercollision = var_0[0];
    }

    level._id_139FF = getentarray( "_encstr_94810F8123D57BF973B698890FA18FD143", "_encstr_B8CE0BE43FC317DF690862BA48" );
    level._id_139FD = getdvarfloat( "_encstr_A1DD1D5BEFB8F9E3875170BA9BEDA3A12043CDD51F78FBC734891B7340B537", 150.0 );
}

tac_cover_on_give( var_0, var_1 )
{
    self notify( "_encstr_A2071045264AC7191FB348C82F2F10DD728D" );
}

tac_cover_on_take( var_0, var_1, var_2 )
{
    self notify( "_encstr_A898106BC7BF89E3683807535923D9721BE8" );
    self.taccoverrefund = undefined;
}

tac_cover_used( var_0 )
{
    waitframe();

    if ( isdefined( var_0 ) )
        var_0 delete();
}

tac_cover_on_fired( var_0, var_1, var_2, var_3 )
{
    self.taccoverrefund = 1;
    var_4 = physics_createcontents( [ "_encstr_9F57173778F77BCBC6133048DA5B9B90BB0B28AFC43FE22B6A", "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_BA411B0E0DF2B9B4D8CD1BB7B9D1B2B93A37D707C6162FAC9C8DB196E0", "_encstr_A18816F8C3E1EFFCFF5A92BF8363BBF55BCBD9C3538DF74D", "_encstr_B7F9145B18AB8AF721FE235718AB8F95E96811E39843", "_encstr_B7D018B89C4B13AC473342305523920D607E50E3571038A69138" ] );
    var_5 = tac_cover_ignore_list( self );
    var_6 = anglestoforward( self.angles );
    var_7 = self.origin + var_6 * 32;
    var_8 = _calloutmarkerping_handleluinotify_brinventoryslotrequest::_id_12F67( var_7, 140, 20 );
    var_9 = undefined;
    var_10 = 0;

    if ( _id_139EE( var_7 ) )
    {
        tac_cover_fire_failed( 0 );
        return 0;
    }

    if ( scripts\cp_mp\auto_ascender::updatesixthsensevo( var_7 ) )
        return 0;

    if ( scripts\cp\utility\script::updatespecificfobindanger( var_7 ) )
        return 0;

    var_4 = scripts\engine\trace::init_gas_trap_cloud();
    var_11 = getdvarfloat( "_encstr_BD402880976AFEF91ADEC54336F20126A30F10B84B2FD08B7207B5D6019A4B490EDFB8F123A929530BEA", 32.0 );
    var_12 = scripts\engine\trace::sphere_trace_get_all_results( var_7, var_7 + ( 0, 0, 10 ), var_11, var_5, var_4, 1 );

    foreach ( var_14 in var_12 )
    {
        if ( isdefined( var_14["_encstr_949F0DA64FD0E8BF9FC9E418A77973"] ) )
        {
            var_15 = 19;
            var_16 = 0;
            var_16 = var_16 | var_14["_encstr_949F0DA64FD0E8BF9FC9E418A77973"] == 8;
            var_16 = var_16 | var_14["_encstr_949F0DA64FD0E8BF9FC9E418A77973"] == 2048;
            var_16 = var_16 | var_14["_encstr_949F0DA64FD0E8BF9FC9E418A77973"] == 9 << var_15;
            var_16 = var_16 | var_14["_encstr_949F0DA64FD0E8BF9FC9E418A77973"] == 38 << var_15;
            var_16 = var_16 | var_14["_encstr_949F0DA64FD0E8BF9FC9E418A77973"] == 39 << var_15;

            if ( var_16 )
            {
                tac_cover_fire_failed( 0 );
                return 0;
            }
        }
    }

    foreach ( var_19 in var_8 )
    {
        var_20 = distancesquared( var_19.origin, var_7 );

        if ( isdefined( var_9 ) && var_10 <= var_20 )
            continue;

        var_9 = var_19;
        var_10 = var_20;
    }

    if ( isdefined( var_9 ) )
    {
        var_22 = var_9 scriptabledoorangle();
        var_23 = abs( var_22 ) > 65;
        var_24 = undefined;

        foreach ( var_26 in var_8 )
        {
            if ( var_9 _calloutmarkerping_handleluinotify_brinventoryslotrequest::_id_12F68( var_26 ) )
            {
                var_24 = var_26;
                break;
            }
        }

        var_28 = 1;

        if ( isdefined( var_24 ) )
        {
            var_29 = var_24 scriptabledoorangle();
            var_28 = abs( var_29 ) > 65;
        }

        if ( var_10 < 1600 && var_23 && var_28 )
        {
            var_30 = _id_139F4( var_9 );

            if ( isdefined( var_24 ) )
                var_30 = var_30 | _id_139F4( var_24 );

            if ( !istrue( var_30 ) )
            {
                tac_cover_fire_failed( 1 );
                return 0;
            }

            var_31 = self gettagorigin( "_encstr_82890D35F5B90EA5CD95B1DEEEAC93" );
            var_32 = var_9.heli_intro_vo_done + ( 0, 0, 24 );
            var_33 = physics_raycast( var_31, var_32, var_4, var_5, 0, "_encstr_B3C411793B0B26E8CB729B139FA21048E2BBE3", 1 );

            if ( isdefined( var_33 ) && var_33 > 0 )
            {
                tac_cover_fire_failed( 1 );
                return 0;
            }

            var_9.tutonplayerkilled = 1;
            self.taccoverrefund = undefined;
            thread _id_139F6( var_9, var_24, var_3, var_4 );
            scripts\mp\utility\stats::incpersstat( "_encstr_ABE1148C2B8363F6970B981B560DF6D9B29CAA6E5623", 1 );
            return 1;
        }
        else if ( var_10 < 6400 )
        {
            tac_cover_fire_failed( 1 );
            return 0;
        }
    }

    var_34 = self getplayerangles() * ( 0, 1, 0 );
    var_35 = self.origin + ( 0, 0, 24 );
    var_36 = anglestoforward( var_34 );
    var_37 = 29.5;
    var_38 = var_35 + var_36 * var_37;
    var_33 = physics_raycast( var_35, var_38, var_4, var_5, 0, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3", 1 );

    if ( isdefined( var_33 ) && var_33.size > 0 )
    {
        tac_cover_fire_failed();
        return 0;
    }

    var_39 = undefined;
    var_40 = undefined;
    var_35 = var_38;
    var_36 = anglestoright( var_34 );
    var_37 = 55.5;
    var_41 = var_35 + var_36 * var_37;
    var_33 = physics_spherecast( var_35, var_41, 2.5, var_4, var_5, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3" );

    if ( isdefined( var_33 ) && var_33.size > 0 )
    {
        var_42 = var_33[0]["_encstr_8B320F8A639B5B058EE8CFB7C803F1526D"];
        var_39 = var_33[0]["_encstr_B130095358E1B3930B687D"];
    }
    else
        var_39 = 1;

    var_35 = var_38;
    var_36 = -1 * anglestoright( var_34 );
    var_37 = 55.5;
    var_41 = var_35 + var_36 * var_37;
    var_33 = physics_spherecast( var_35, var_41, 2.5, var_4, var_5, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3" );

    if ( isdefined( var_33 ) && var_33.size > 0 )
    {
        var_42 = var_33[0]["_encstr_8B320F8A639B5B058EE8CFB7C803F1526D"];
        var_40 = var_33[0]["_encstr_B130095358E1B3930B687D"];
    }
    else
        var_40 = 1;

    if ( var_40 + var_39 < 1 )
    {
        tac_cover_fire_failed();
        return 0;
    }
    else if ( var_39 < 0.5 )
        var_38 = var_38 + var_36 * var_37 * ( 0.5 - var_39 );
    else if ( var_40 < 0.5 )
        var_38 = var_38 + var_36 * var_37 * ( 0.5 - var_40 ) * -1;

    var_43 = var_34;
    var_35 = var_38;
    var_36 = ( 0, 0, -1 );
    var_37 = 60;
    var_41 = var_35 + var_36 * var_37;
    var_44 = combineangles( var_43, ( 0, 0, 90 ) );
    var_33 = physics_capsulecast( var_35, var_41, 2.5, 16.8, var_44, var_4, var_5, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3" );

    if ( !isdefined( var_33 ) || var_33.size <= 0 )
    {
        tac_cover_fire_failed();
        return 0;
    }

    var_45 = var_33[0]["_encstr_B60E07C9FD1C2055E3"];

    if ( isdefined( var_45 ) && !_id_139F0( var_45 ) )
    {
        tac_cover_fire_failed();
        return 0;
    }

    var_46 = var_33[0]["_encstr_8B320F8A639B5B058EE8CFB7C803F1526D"];
    var_42 = var_33[0]["_encstr_B7260923C89E8F3378E72E"];
    var_47 = var_46 - ( 0, 0, 2.5 );
    var_48 = _id_139F2( var_45 );
    var_49 = 25.025;
    var_50 = pow( var_49 * 0.14, 2 );
    var_51 = var_46;
    var_52 = distance2dsquared( var_51, var_42 );
    var_53 = var_46 + anglestoright( var_34 ) * 14.3 * 1.75;
    var_54 = distance2dsquared( var_53, var_42 );
    var_55 = var_46 + anglestoright( var_34 ) * 14.3 * 1.75 * -1;
    var_56 = distance2dsquared( var_55, var_42 );
    var_57 = [];
    var_58 = 0;

    if ( var_54 <= var_50 && var_54 < var_52 && var_54 < var_56 )
    {
        var_58++;
        var_57 = [ var_51, var_55 ];
    }
    else if ( var_56 <= var_50 && var_56 < var_52 && var_56 < var_54 )
    {
        var_58++;
        var_57 = [ var_51, var_53 ];
    }
    else if ( var_52 <= var_50 )
    {
        var_58++;
        var_57 = [ var_55, var_53 ];
    }
    else
        var_57 = [ var_51, var_55, var_53 ];

    var_36 = ( 0, 0, -1 );
    var_37 = 8.5;

    foreach ( var_35 in var_57 )
    {
        var_41 = var_35 + var_36 * var_37;
        var_33 = physics_raycast( var_35, var_41, var_4, var_5, 0, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3", 1 );

        if ( !isdefined( var_33 ) || var_33.size <= 0 )
            continue;

        var_45 = var_33[0]["_encstr_B60E07C9FD1C2055E3"];

        if ( isdefined( var_45 ) && !_id_139F0( var_45 ) )
        {
            tac_cover_fire_failed();
            return 0;
        }

        var_58++;

        if ( var_58 >= 2 )
            break;
    }

    if ( var_58 < 2 )
    {
        tac_cover_fire_failed();
        return 0;
    }

    self.taccoverrefund = undefined;
    thread tac_cover_spawn( var_47, var_43, var_48, var_3, var_4 );
    scripts\mp\utility\stats::incpersstat( "_encstr_ABE1148C2B8363F6970B981B560DF6D9B29CAA6E5623", 1 );
    return 1;
}

_id_139F2( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        if ( _calloutmarkerping_handleluinotify_enemyrepinged::tugofwar_tank( var_0 ) || _calloutmarkerping_handleluinotify_enemyrepinged::tryspawnweapons( var_0 ) || _encstr_9516241B336A5F337D57A20B63B2F78FFD4BD10BEB67CA022EE5A188D722B910B9EE7A1A4B21::triggereliminatedoverlay( var_0 ) || _encstr_A43F26127E3542A85378564778E0770AF3855B085FB3BB8FF9589F37680117235F24E742E8EF730B::triggeraddobjectivetext( var_0 ) )
            return var_0;
    }

    return undefined;
}

tac_cover_adjust_for_player_space( var_0, var_1, var_2 )
{
    var_3 = tac_cover_get_free_space( 1, var_0, var_1, var_2, 32 );

    if ( !isdefined( var_3 ) )
        return var_0;

    var_4 = tac_cover_get_free_space( 0, var_0, var_1, var_2, 32 );

    if ( !isdefined( var_4 ) )
        return var_0;

    var_5 = min( var_3, 15 );
    var_6 = anglestoforward( var_1 );
    var_7 = var_0 + var_6 * var_5;

    foreach ( var_9 in level._id_139FF )
    {
        if ( ispointinvolume( var_7 + ( 0, 0, 20 ), var_9 ) )
        {
            var_7 = var_7 + ( 0, 0, -6 );
            break;
        }
    }

    return var_7;
}

tac_cover_get_free_space( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = anglestoleft( var_2 );
    var_6 = anglestoforward( var_2 );
    var_7 = -1 * var_6;
    var_8 = undefined;

    if ( var_0 )
        var_8 = var_6 * var_4;
    else
        var_8 = var_7 * var_4;

    var_9 = var_1 + ( 0, 0, 48 );
    var_10 = var_9;
    var_11 = var_9 + var_8;
    var_12 = 2.5;
    var_13 = 29.0 + var_4;
    var_14 = combineangles( var_2, ( 0, 0, 90 ) );
    var_3 = var_3;
    var_15 = [ self ];
    var_16 = "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3";
    var_17 = physics_capsulecast( var_10, var_11, var_12, var_13, var_14, var_3, var_15, var_16 );
    var_18 = var_17.size == 0;

    if ( var_18 )
        return undefined;

    var_25 = var_17[0]["_encstr_8B320F8A639B5B058EE8CFB7C803F1526D"];
    var_26 = distance( var_25, var_9 );
    return var_26;
}

_id_139EE( var_0 )
{
    if ( isdefined( level.turrets ) )
    {
        foreach ( var_2 in level.turrets )
        {
            if ( !isdefined( var_2 ) )
                continue;

            var_3 = distancesquared( var_2.origin, var_0 );

            if ( 6400 >= var_3 )
                return 1;
        }
    }

    if ( isdefined( level.arenaflag_showflagoutlineplayer ) )
    {
        foreach ( var_2 in level.arenaflag_showflagoutlineplayer )
        {
            if ( !isdefined( var_2 ) )
                continue;

            if ( 6400 >= distancesquared( var_2.origin, var_0 ) )
                return 1;
        }
    }

    return 0;
}

tac_cover_fire_failed( var_0 )
{
    var_1 = scripts\engine\utility::ter_op( istrue( var_0 ), "_encstr_8A921EA90ABC8A0A0DAF689EACA229EB0A89056854FA29E4EB223DE949AE1465", "_encstr_95431AB867F82326613FCBDF35893AC766FDE410EC3D572A31EBC3DD" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) ]]( var_1 );

    self playsoundtoplayer( "_encstr_B16C207B134F7749A57BD0D047F9C15922B1E6F0AB72F5169863B0D05B2F99FB8AE5", self );

    if ( scripts\mp\equipment::hasequipment( "_encstr_AB701059B8AB4B38FAE88536D78DB7ECCAE4" ) )
        scripts\mp\equipment::incrementequipmentammo( "_encstr_AB701059B8AB4B38FAE88536D78DB7ECCAE4", 1 );
}

tac_cover_entmanagerdelete()
{
    thread tac_cover_delete( 0 );
}

_id_139F6( var_0, var_1, var_2, var_3 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A898106BC7BF89E3683807535923D9721BE8" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_4 = anglestoforward( self.angles );
    var_5 = var_0.heli_intro + ( 0, 90, 0 );
    var_6 = anglestoforward( var_5 );
    var_7 = vectordot( var_4, var_6 );
    var_8 = var_7 > 0;
    var_9 = var_0 scriptabledoorangle();
    var_0 _calloutmarkerping_handleluinotify_brinventoryslotrequest::matchslopekey( 1, "_encstr_B6340FE858B1D76CB73BAC397D19DBDE39" );

    if ( isdefined( var_1 ) )
        var_1 _calloutmarkerping_handleluinotify_brinventoryslotrequest::matchslopekey( 1, "_encstr_B6340FE858B1D76CB73BAC397D19DBDE39" );

    var_10 = scripts\engine\utility::ter_op( var_8, ( 0, 90, 0 ), ( 0, -90, 0 ) );
    var_11 = ( 0, 0, -1 );
    var_12 = var_0.heli_intro_vo_done + var_11;
    var_13 = combineangles( var_0.heli_intro, var_10 );
    var_14 = undefined;
    tac_cover_spawn( var_12, var_13, var_14, var_2, var_3, var_0, var_1 );
}

_id_139F4( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A898106BC7BF89E3683807535923D9721BE8" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = var_0.angles;
    wait 0.05;
    return var_1 == var_0.angles;
}

tac_cover_spawn( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A898106BC7BF89E3683807535923D9721BE8" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    wait 0.05;
    var_0 = tac_cover_adjust_for_player_space( var_0, var_1, var_4 );
    self notify( "_encstr_87CC12A3166CF5C6B7D92BE47D9B071677E6B219" );
    var_3 = istrue( var_3 );
    var_7 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0 );
    var_7.angles = var_1;
    var_7.owner = self;
    var_7.team = self.team;
    var_7.slot = scripts\mp\equipment::findequipmentslot( "_encstr_AB701059B8AB4B38FAE88536D78DB7ECCAE4" );
    var_7.exploding = 1;
    var_7.issuper = scripts\engine\utility::ter_op( var_3, 1, undefined );
    var_7.superid = level.superglobals.staticsuperdata["_encstr_9F3A10E7E343579DC7BB57BB41A7D830AA03"].id;
    var_7 scripts\cp_mp\ent_manager::registerspawn( 2, ::tac_cover_entmanagerdelete );
    var_7 scripts\mp\sentientpoolmanager::registersentient( "_encstr_B42E10610746F54F3F79B1219A812B9DC34E", self );
    var_7 setentityowner( self );
    var_7 setotherent( self );
    var_7 setmodel( "_encstr_94F71C70FA03A39815EC3F971DB178FD83F2C83A127BE9E061C3579D3DA2" );

    if ( isdefined( var_2 ) )
    {
        var_7.moving_platform = var_2;
        var_8 = spawnstruct();
        var_8.linkparent = var_7.moving_platform;
        var_8.deathoverridecallback = ::_id_139F5;
        var_8.validateaccuratetouching = 1;
        var_7 thread scripts\mp\movers::handle_moving_platforms( var_8 );
        var_7 thread tac_cover_destroy_on_unstuck();
    }

    var_9 = tac_cover_spawn_collision( var_7 );
    var_7 ctgsreportusermatchstats( var_9, level.taccovercollision );
    var_7.collision = var_9;
    var_9.cover = var_7;
    var_9.moverdoesnotkill = 1;

    if ( isdefined( var_5 ) )
    {
        if ( isdefined( var_5.connected_vandalize_node ) )
            var_5.connected_vandalize_node tac_cover_destroy();

        var_7.concussionused = var_5;
        var_5.connected_vandalize_node = var_7;
    }

    if ( isdefined( var_6 ) )
    {
        var_7.concusspushstart = var_6;
        var_6.connected_vandalize_node = var_7;
    }

    scripts\mp\weapons::onequipmentplanted( var_7, "_encstr_AB701059B8AB4B38FAE88536D78DB7ECCAE4", ::tac_cover_destroy );
    thread scripts\mp\weapons::monitordisownedequipment( self, var_7 );

    if ( var_3 )
    {
        var_7 thread tac_cover_destroy_on_disowned( self );
        var_7 thread tac_cover_destroy_on_timeout();
    }

    var_7 thread tac_cover_destroy_on_game_end();
    thread tac_cover_spawn_internal( var_7 );
    thread scripts\mp\weapons::outlineequipmentforowner( var_7 );
    var_7 thread scripts\mp\perks\perk_equipmentping::runequipmentping();
}

tac_cover_spawn_internal( var_0 )
{
    var_0 endon( "_encstr_A3750609A5E61883" );

    if ( 1 && 0 )
        var_0 tac_cover_set_can_damage( 1 );

    if ( isdefined( var_0.concussionused ) )
        var_0 setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_A8C60FDBC1A7F264918BA66A63C1B73A86", 0 );
    else
        var_0 setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_94420B539ADF60F09A3C83DD44", 0 );

    wait( tac_cover_get_deploy_anim_dur() );

    if ( 1 && !0 )
        var_0 tac_cover_set_can_damage( 1 );

    if ( isdefined( var_0.concussionused ) )
        var_0 setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_AB260D72783176F3EDB86AA5C7EA2B", 0 );
    else
        var_0 setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_A6D109E3685753F3D92564", 0 );
}

tac_cover_spawn_collision( var_0 )
{
    if ( !isdefined( level.taccovercollision ) )
        return;

    var_1 = var_0.origin + ( 0, 0, -2 );
    var_2 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_1 );
    var_2 dontinterpolate();
    var_2.angles = var_0.angles;
    var_2 clonebrushmodeltoscriptmodel( level.taccovercollision );
    var_2 linkto( var_0 );
    var_2 setentityowner( self );

    if ( !isdefined( level._id_139FE ) )
        var_2 disconnectpaths();

    return var_2;
}

_id_139F1( var_0, var_1 )
{
    var_2 = 100;

    if ( !isdefined( var_1 ) )
        var_1 = var_2;

    var_3 = ( var_1, var_1, var_1 );
    var_4 = var_0 - var_3;
    var_5 = var_0 + var_3;
    var_6 = [];
    var_7 = physics_createcontents( [ "_encstr_9DD6156A78B803FAD687D7EF95056246B86329B453E0D5" ] );
    var_8 = physics_aabbbroadphasequery( var_4, var_5, var_7, var_6 );

    for ( var_9 = 0; var_9 < var_8.size; var_9++ )
    {
        var_10 = var_8[var_9];

        if ( isdefined( var_10.equipmentref ) )
        {
            if ( var_10.equipmentref == "_encstr_AB701059B8AB4B38FAE88536D78DB7ECCAE4" )
            {
                var_10 tac_cover_destroy( undefined, 1 );
                var_10._id_11B0D = 1;
                continue;
            }
        }
    }
}

tac_cover_destroy( var_0, var_1, var_2 )
{
    var_3 = 0;

    if ( !istrue( var_1 ) )
        var_3 = 0.2 + tac_cover_get_destroy_anim_dur();

    var_4 = self.maxhealth;

    if ( isdefined( self.damagetaken ) && self.damagetaken < self.maxhealth )
        var_4 = self.damagetaken;

    if ( !isdefined( var_4 ) )
        var_4 = 1250;

    self.owner scripts\cp\vehicles\vehicle_compass_cp::_id_12032( "_encstr_9F3A10E7E343579DC7BB57BB41A7D830AA03", int( var_4 ), var_0, var_2 );
    scripts\mp\analyticslog::logevent_fieldupgradeexpired( self.owner, self.superid, int( var_4 ), istrue( var_2 ) );
    thread tac_cover_destroy_internal( var_3 );
    thread tac_cover_delete( var_3 );
}

tac_cover_destroy_internal( var_0 )
{
    if ( isdefined( self.concussionused ) )
    {
        self.concussionused _calloutmarkerping_handleluinotify_brinventoryslotrequest::matchslopekey( 0, "_encstr_B6340FE858B1D76CB73BAC397D19DBDE39" );
        self.concussionused.connected_vandalize_node = undefined;
    }

    if ( isdefined( self.concusspushstart ) )
    {
        self.concusspushstart _calloutmarkerping_handleluinotify_brinventoryslotrequest::matchslopekey( 0, "_encstr_B6340FE858B1D76CB73BAC397D19DBDE39" );
        self.concusspushstart.connected_vandalize_node = undefined;
    }

    if ( var_0 > 0 )
    {
        self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_B8E30D3F519A1B3A90B0DAC3BF6E75" );
        wait( tac_cover_get_destroy_anim_dur() );
        self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_8FB80BE4A8038B3D3727776881" );
    }

    if ( isdefined( self.collision ) )
    {
        self.collision connectpaths();
        self.collision delete();
    }
}

tac_cover_delete( var_0 )
{
    self notify( "_encstr_A3750609A5E61883" );
    level.mines[self getentitynumber()] = undefined;
    var_1 = self.owner;

    if ( isdefined( var_1 ) )
        var_1 scripts\mp\weapons::removeequip( self );

    if ( 1 )
    {
        scripts\mp\damage::monitordamageend();
        self thermaldrawdisable();
    }

    if ( isdefined( self.collision ) )
    {
        self.collision connectpaths();
        self.collision delete();
    }

    wait( var_0 );
    self delete();
}

tac_cover_destroy_on_timeout()
{
    self endon( "_encstr_A3750609A5E61883" );
    wait( level._id_139FD );
    tac_cover_destroy( undefined, 0 );
}

tac_cover_destroy_on_game_end()
{
    self endon( "_encstr_A3750609A5E61883" );
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    tac_cover_destroy( undefined, 0 );
}

tac_cover_destroy_on_unstuck()
{
    self endon( "_encstr_A3750609A5E61883" );

    while ( isdefined( self getlinkedparent() ) )
        waitframe();

    tac_cover_destroy( undefined, 0 );
}

tac_cover_set_can_damage( var_0 )
{
    if ( 1 )
    {
        if ( var_0 )
        {
            var_1 = scripts\mp\utility\perk::_hasperk( "_encstr_871415CD83AC1BB416C6A3CBD7395D3BB35919F52BE2E0" );
            var_2 = scripts\engine\utility::ter_op( var_1, 1250, 1000 );
            var_3 = "_encstr_8CFB0986B4E856B8EA960E";
            thread scripts\mp\damage::monitordamage( var_2, var_3, ::tac_cover_handle_fatal_damage, ::tac_cover_handle_damage, 0 );
            self thermaldrawenable();
        }
        else
        {
            scripts\mp\damage::monitordamageend();
            self thermaldrawdisable();
        }
    }
}

tac_cover_handle_damage( var_0 )
{
    var_1 = _id_139ED( var_0 );

    if ( isdefined( self.owner ) )
    {
        var_2 = max( self.maxhealth - self.damagetaken, 0 );
        var_3 = int( min( var_2, var_1 ) );
        self.owner scripts\mp\supers::hide_plunderboxes( "_encstr_9F3A10E7E343579DC7BB57BB41A7D830AA03", var_3 );
    }

    return var_1;
}

_id_139ED( var_0 )
{
    var_1 = var_0.attacker;
    var_2 = var_0.objweapon;
    var_3 = var_0.meansofdeath;
    var_4 = var_0.damage;
    var_5 = var_0.point;

    if ( var_2.basename == "_encstr_B89B0FB411E85A7F7B5B8A11C1CC7F5598" )
        return 200.0;

    if ( scripts\mp\damage::usefaillaststandmsg( var_0.objweapon ) )
        return 0;

    if ( var_2.basename == "_encstr_BA3B11C0E23F8DC0D70CCD28F2272859691A58" )
        return 83.3333;

    if ( var_2.basename == "_encstr_A45E1539B897587167FB1946232F3BD82F59393B677D90" )
        return 62.5;

    if ( var_3 == "_encstr_8AED0A5719ED37B8FB512FD7" || var_3 == "_encstr_A9ED0B35F488AF94A9A0A00D8A" )
    {
        if ( var_3 == "_encstr_A9ED0B35F488AF94A9A0A00D8A" && var_2.classname == "_encstr_A28D080FA2D39DC7FAFA" )
            return var_4;

        return 333.333;
    }

    if ( scripts\mp\utility\weapon::isthrowingknife( var_2.basename ) )
        return 0;

    if ( var_2.basename == "_encstr_80AC13B4DD707D9B9BF51BE4DE37B998DBBBD7ADE0" && var_3 != "_encstr_8AED0A5719ED37B8FB512FD7" )
        return 0;

    if ( var_3 == "_encstr_8A4E0A41A7FB067762A99949" && isdefined( var_0.inflictor ) && var_0.inflictor.classname == "_encstr_AB440F9BD8932D071DAFB3CA435A3663B2" )
    {
        if ( isdefined( var_1 ) && !scripts\mp\weapons::friendlyfirecheck( self.owner, var_1 ) )
            return var_4;
    }

    if ( isexplosivedamagemod( var_0.meansofdeath ) )
    {
        if ( var_2.basename == "_encstr_AA9E139F78F82C0A91C8702DCB5FC291AB72B76F68" )
            return 333.333;

        return 700.0;
    }

    var_4 = scripts\mp\damage::handleapdamage( var_2, var_3, var_4 );
    var_4 = scripts\mp\damage::handleshotgundamage( var_2, var_3, var_4 );
    return var_4;
}

tac_cover_handle_fatal_damage( var_0 )
{
    var_1 = var_0.attacker;

    if ( istrue( scripts\cp_mp\utility\player_utility::playersareenemies( self.owner, var_1 ) ) )
    {
        var_1 notify( "_encstr_B6BB140AE56FC14D7781B0FDAF0869F3E818D827BDEB" );
        var_1 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_B6BB140AE56FC14D7781B0FDAF0869F3E818D827BDEB" );
        var_1 thread scripts\mp\battlechatter_mp::equipmentdestroyed( self );
    }

    thread tac_cover_destroy( var_1, undefined, 1 );
}

tac_cover_deploy_freeze_controls()
{
    if ( !isdefined( self.taccoverfrozecontrols ) )
    {
        var_0 = scripts\mp\equipment::findequipmentslot( "_encstr_AB701059B8AB4B38FAE88536D78DB7ECCAE4" );
        scripts\mp\equipment::allow_equipment_slot( var_0, 0, "_encstr_AB701059B8AB4B38FAE88536D78DB7ECCAE4" );
        scripts\common\utility::allow_usability( 0 );
        scripts\mp\utility\player::allow_gesture( 0 );
        self.taccoverfrozecontrols = var_0;
    }
}

tac_cover_deploy_unfreeze_controls()
{
    if ( isdefined( self.taccoverfrozecontrols ) )
    {
        var_0 = self.taccoverfrozecontrols;
        scripts\mp\equipment::allow_equipment_slot( var_0, 1, "_encstr_AB701059B8AB4B38FAE88536D78DB7ECCAE4" );
        scripts\common\utility::allow_usability( 1 );
        scripts\mp\utility\player::allow_gesture( 1 );
        self.taccoverfrozecontrols = undefined;
    }
}

tac_cover_ignore_list( var_0 )
{
    var_1 = [ var_0 ];

    if ( isdefined( level.grenades ) )
    {
        foreach ( var_3 in level.grenades )
        {
            if ( isdefined( var_3 ) )
                var_1[var_1.size] = var_3;
        }
    }

    if ( isdefined( level.missiles ) )
    {
        foreach ( var_6 in level.missiles )
        {
            if ( isdefined( var_6 ) )
                var_1[var_1.size] = var_6;
        }
    }

    if ( isdefined( level.mines ) )
    {
        foreach ( var_9 in level.mines )
        {
            if ( !isdefined( var_9 ) )
                continue;

            var_10 = isdefined( var_9.owner ) && var_9.owner == var_0;
            var_11 = isdefined( var_9.equipmentref ) && var_9.equipmentref == "_encstr_AB701059B8AB4B38FAE88536D78DB7ECCAE4";
            var_12 = isdefined( var_9.equipmentref ) && var_9.equipmentref == "_encstr_95820FE13B0B887BC7C109B2ED79C830B8";

            if ( !var_10 && ( var_11 || var_12 ) )
                continue;

            var_1[var_1.size] = var_9;

            if ( isdefined( var_9.collision ) )
                var_1[var_1.size] = var_9.collision;
        }
    }

    return var_1;
}

_id_139F0( var_0 )
{
    if ( isplayer( var_0 ) )
        return 0;

    if ( var_0 getnonstick() )
        return 0;

    if ( istrue( var_0.mountmantlemodel ) )
        return 0;

    if ( isdefined( var_0.cover ) && isdefined( var_0.cover.equipmentref ) && var_0.cover.equipmentref == "_encstr_AB701059B8AB4B38FAE88536D78DB7ECCAE4" )
        return 0;

    if ( var_0.classname == "_encstr_88710C0763169AF7A3330A1229D8" )
        return 0;

    if ( var_0.classname == "_encstr_AB440F9BD8932D071DAFB3CA435A3663B2" )
        return 0;

    return 1;
}

#using_animtree("_encstr_B1CF0CC7CF3E927058D976FD7148");

tac_cover_get_deploy_anim_dur()
{
    return getanimlength( %_encstr_950D1BC0CF27F9BB6B7DE8EB1662E1817F9F784077A25661C26251F868 );
}

tac_cover_get_destroy_anim_dur()
{
    return 0;
}

tac_cover_on_fired_super()
{
    return tac_cover_on_fired( undefined, undefined, undefined, 1 );
}

tac_cover_on_take_super()
{
    tac_cover_on_take( undefined, undefined, 1 );
}

tac_cover_destroy_on_disowned( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_A898106BC7BF89E3683807535923D9721BE8" );
    var_0 scripts\engine\utility::_id_143A5( "_encstr_B2170C4AD884CDC823B9DB9D9F42", "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    thread tac_cover_destroy( undefined, undefined, 0 );
}

_id_139F5( var_0 )
{
    tac_cover_destroy( var_0.attacker, undefined, 0 );
}
