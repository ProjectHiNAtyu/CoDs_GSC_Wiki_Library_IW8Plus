// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    scripts\mp\playeractions::registeractionset( "_encstr_B10E0E9B585DD93B8357651F5DBF8A5B", [ "_encstr_ADE40AEADCC2312D1B2DD12F", "_encstr_8B0508CE95DC1DEAC92B" ] );
}

gettargetmarker( var_0, var_1 )
{
    if ( !scripts\cp_mp\utility\player_utility::_isalive() )
        return;

    scripts\mp\playeractions::allowactionset( "_encstr_B10E0E9B585DD93B8357651F5DBF8A5B", 0 );
    scripts\mp\utility\entity::_enableequipdeployvfx();
    var_2 = asmdevgetallstates( var_0.weaponname );
    var_3 = undefined;
    thread watchforinvalidweapon( var_2, var_0 );
    thread watchforammouse( var_2, var_0 );
    thread watchforempapply( var_2, var_0 );

    if ( !istrue( var_1 ) )
    {
        if ( !isai( self ) )
        {
            self notifyonplayercommand( "_encstr_B9221159E2AE2D07BE1959E0D87BBCAF56E68C", "_encstr_A8E60AFF77FA1F30D6E7CA43" );
            self notifyonplayercommand( "_encstr_B9221159E2AE2D07BE1959E0D87BBCAF56E68C", "_encstr_825C0E23CB1013B7A0D013EAD805CA5B" );

            if ( !self isconsoleplayer() )
            {
                self notifyonplayercommand( "_encstr_B9221159E2AE2D07BE1959E0D87BBCAF56E68C", "_encstr_AA5C0E13FB2023E7F080639A8855FACB" );
                self notifyonplayercommand( "_encstr_B9221159E2AE2D07BE1959E0D87BBCAF56E68C", "_encstr_AB5C0E86296FC9F83062830A50E34635" );
                self notifyonplayercommand( "_encstr_B9221159E2AE2D07BE1959E0D87BBCAF56E68C", "_encstr_B15C0EB327F943D457F04BB210895E96" );
            }
        }
    }

    for (;;)
    {
        var_3 = waittill_succeed_fail_end( "_encstr_B69917FA2043FC6376A5F5F849988F89B7E8021238CBF74F49", "_encstr_8F1414900907B0622F613F7934100A19256F82689DC7", "_encstr_B9221159E2AE2D07BE1959E0D87BBCAF56E68C", "_encstr_A69814595CBA5A07AF46B28363DBE5EB1B0B378D59C6", "_encstr_A41712F05A531B5C6781D5588DD3E6FF3B22D0F0" );

        if ( var_3.string == "_encstr_A69814595CBA5A07AF46B28363DBE5EB1B0B378D59C6" )
            break;
        else
        {
            if ( var_3.string == "_encstr_B9221159E2AE2D07BE1959E0D87BBCAF56E68C" )
            {
                if ( !istrue( var_1 ) )
                    break;
                else
                    scripts\mp\hud_message::showerrormessage( "_encstr_B7861A57EB51B023C92F0F0624D91718BF8D3BCF496089FFD9F7B65C" );

                continue;
            }

            if ( var_3.string == "_encstr_8F1414900907B0622F613F7934100A19256F82689DC7" )
            {
                scripts\mp\hud_message::showerrormessage( "_encstr_A6921D47BFA979FE1B36D167B38F8A5F89D05677A4414A40BFE7D9CE400398" );
                continue;
            }

            if ( isdefined( var_3 ) && var_3.string == "_encstr_B69917FA2043FC6376A5F5F849988F89B7E8021238CBF74F49" )
            {
                if ( updatecallback( var_3 ) )
                {
                    scripts\mp\hud_message::showerrormessage( "_encstr_AA7A241A89F34C6FDBF1F1E958225F651F6610E00C17351B71B9B1E1304FB1BE33DC0F63B55B" );
                    continue;
                }
                else if ( !self isonground() || self isonladder() )
                {
                    scripts\mp\hud_message::showerrormessage( "_encstr_A68121A1AF74EC623C220F811259F80EE7855D0494A995CFC140C058B965C3C9470102" );
                    continue;
                }
                else if ( _calloutmarkerping_handleluinotify_enemyrepinged::updateleaders() )
                {
                    scripts\mp\hud_message::showerrormessage( "_encstr_883A2404C1E1708F4F2E37FB8BB76660A5DEC51D6C4648BD9051B9E51F6783DE8F45D25F27F7" );
                    continue;
                }
            }

            break;
        }
    }

    if ( isdefined( var_3.location ) && isdefined( var_3.angles ) )
    {
        var_4 = var_3.location + ( 0, 0, 20 );
        var_5 = var_3.location + ( 0, 0, -1000 );
        var_6 = [ "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_8F9917383497B9B4B19BD8DB733ACACD1D37EB58D26CC6D238", "_encstr_941116D7F47B0FC88317C8B07BCC017DD35AD8D44D52D773", "_encstr_B7D018B89C4B13AC473342305523920D607E50E3571038A69138", "_encstr_BA411B0E0DF2B9B4D8CD1BB7B9D1B2B93A37D707C6162FAC9C8DB196E0", "_encstr_9DD6156A78B803FAD687D7EF95056246B86329B453E0D5" ];
        var_7 = physics_createcontents( var_6 );
        var_8 = scripts\engine\trace::ray_trace( var_4, var_5, undefined, var_7 );

        if ( isdefined( var_8["_encstr_B60E07C9FD1C2055E3"] ) )
        {
            var_9 = var_8["_encstr_B60E07C9FD1C2055E3"];
            var_3.moving_platform = var_9;
            var_10 = var_3.location - var_9.origin;
            var_11 = vectordot( var_10, anglestoforward( var_9.angles ) );
            var_12 = -1.0 * vectordot( var_10, anglestoright( var_9.angles ) );
            var_13 = vectordot( var_10, anglestoup( var_9.angles ) );
            var_3._id_11DBE = ( var_11, var_12, var_13 );
            var_3._id_11DBD = combineangles( invertangles( var_9.angles ), var_3.angles );
        }

        var_3.visual = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_3.location + var_3.fxoffset );
        var_3.visual.angles = var_3.angles;

        if ( var_0.streakname == "_encstr_8CE60CA3DE5BC2AFB98EC94B6D59" )
            var_3.visual setmodel( "_encstr_BC9A1997A0D634B293FF81825D95EAE33959074740889D2B9F8152" );

        if ( isdefined( var_3.visual.model ) && var_3.visual.model != "_encstr_A40101" )
        {
            var_3.visual setotherent( self );
            var_3.visual setscriptablepartstate( "_encstr_A9600763091EB77790", "_encstr_BDB00703157108A55A", 0 );
        }
    }

    if ( scripts\mp\utility\player::isreallyalive( self ) )
        var_0 notify( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );

    scripts\mp\utility\entity::_disableequipdeployvfx();
    thread scripts\engine\utility::delaythread( 0.05, scripts\mp\playeractions::allowactionset, "_encstr_B10E0E9B585DD93B8357651F5DBF8A5B", 1 );
    return var_3;
}

updatecallback( var_0 )
{
    var_1 = 0;
    var_2 = var_0.location;

    if ( !scripts\engine\trace::sphere_trace_passed( var_2 + ( 0, 0, 100 ), var_2, 20, undefined, scripts\engine\trace::create_character_contents() ) )
        var_1 = 1;

    return var_1;
}

watchforinvalidweapon( var_0, var_1 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_1 endon( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );

    for (;;)
    {
        if ( self getcurrentweapon() != var_0 )
        {
            self notify( "_encstr_B9221159E2AE2D07BE1959E0D87BBCAF56E68C" );
            break;
        }

        waitframe();
    }
}

watchforammouse( var_0, var_1 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_1 endon( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );
    var_2 = self getweaponammoclip( var_0 );

    for (;;)
    {
        self waittill( "_encstr_BE140D3FF56983E5E5C94AB288DB1F", var_3 );

        if ( var_3 == var_0 )
            self setweaponammoclip( var_3, var_2 );
    }
}

watchforempapply( var_0, var_1 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_1 endon( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );
    self waittill( "_encstr_97770CB13F4FE9A06B18358319BC" );
    self notify( "_encstr_B9221159E2AE2D07BE1959E0D87BBCAF56E68C" );
}

waittill_succeed_fail_end( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = spawnstruct();

    if ( isdefined( var_0 ) )
        childthread waittill_return( var_0, var_5 );

    if ( isdefined( var_1 ) )
        childthread waittill_return( var_1, var_5 );

    if ( isdefined( var_2 ) )
        childthread waittill_return( var_2, var_5 );

    if ( isdefined( var_3 ) )
        childthread waittill_return( var_3, var_5 );

    if ( isdefined( var_4 ) )
        childthread waittill_return( var_4, var_5 );

    childthread waittill_return( "_encstr_A3750609A5E61883", var_5 );
    var_5 waittill( "_encstr_BE300993B23ABA93E6AC8C", var_6, var_7, var_8, var_9, var_10 );
    var_5 notify( "_encstr_BD1804379BFB" );
    var_11 = spawnstruct();
    var_11.weapon = var_7;
    var_11.location = var_8;
    var_11.angles = var_9;
    var_11.string = var_10;
    var_11.fxoffset = var_6;
    return var_11;
}

waittill_return( var_0, var_1 )
{
    if ( var_0 != "_encstr_A3750609A5E61883" )
        self endon( "_encstr_A3750609A5E61883" );

    var_1 endon( "_encstr_BD1804379BFB" );
    self waittill( var_0, var_2, var_3, var_4, var_5 );
    var_1 notify( "_encstr_BE300993B23ABA93E6AC8C", var_2, var_3, var_4, var_5, var_0 );
}
