// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

hostagesysteminit()
{
    level.activehostagecount = 0;
    level.hostages = [];
    level.inactiveextractions = [];
    level.activeextractions = [];
    level.activeextractors = [];
    level.hostagehidespots = scripts\engine\utility::getstructarray( "_encstr_B2AD081ABD37D1B0B3AC", "_encstr_B8CE0BE43FC317DF690862BA48" );
    level.hostageexitpoints = scripts\engine\utility::getstructarray( "_encstr_B80F0D906FA3430BB2E7181DB80A79", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_1 in level.hostageexitpoints )
        level.objective[level.objective.size] = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", var_1.origin, 0, 90, 128 );

    level.randhidespots = scripts\engine\utility::array_randomize( level.hostagehidespots );
    level._effect["_encstr_9BB20F6B38F9D1CF5042AF9B6B3973E669"] = loadfx( "_encstr_A9162956EDE0ED5716992B13E1EEB3B20253E8F777C085673F9022DB804403A829177D5BEFE8CC27E829EA" );
    thread hostagestatuswatcher();
}

numextractpointsavailable()
{
    return level.inactiveextractions.size;
}

heloextracttryuse( var_0 )
{
    var_1 = scripts\mp\killstreaks\target_marker::gettargetmarker( var_0 );

    if ( !isdefined( var_1.location ) )
        return 0;

    if ( numextractpointsavailable() == 0 )
    {
        iprintlnbold( "_encstr_B4A31BD79FAF394D9E4951ABA3174D094D63414F9D4EA95125D033E9E0" );

        if ( isdefined( var_1.visual ) )
            var_1.visual delete();

        return 0;
    }

    _encstr_BE7D216E36C94B1C8EE6E5DAE0793BC2B6593ACB07956E5ED1BDFA0D374776B83BE61B::trycreateextractpoint( var_1.location, var_1 );
    var_2 = _encstr_88C021DB28B338B3692366357B200F71BBBD50D7B75DF315B376BB01D8D77386F49017::gettacopstimeremainingms();

    if ( var_2 < _encstr_BE7D216E36C94B1C8EE6E5DAE0793BC2B6593ACB07956E5ED1BDFA0D374776B83BE61B::getextractiontimeconst() * 1000 )
        startlastextraction();

    return 1;
}

spawnhostage( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        var_2 = 1;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9E19042B0359" )
    {
        var_1 = game["_encstr_941C0A6AF345075ED05BEAD3"];
        var_3 = "_encstr_ADB1222288DDD27138B21938F30F4D870488AA44B0950E8B52D26D5812D7C77D99015012";
        var_4 = "_encstr_9CBB10990BD1A53FB05FB5C091DA93C09A06";
    }
    else
    {
        var_1 = "_encstr_9BA4080D39CFFB5AB7C1";
        var_3 = "_encstr_B4F32A26CD52E3E665C301487F935B039B3530BC244B93CB559F68110FDDF369911E1EA8AA31C396348F286A";
        var_4 = "_encstr_AF5F250B6317E2FFF09B595BD1E81C0A769D4FBBC3C6BAACE881CDA98B604353581B73E71BF827";
    }

    var_5 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0 );
    var_6 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0 );
    var_7 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0 );
    var_6 setmodel( var_3 );
    var_7 setmodel( var_4 );
    var_7 linkto( var_6, "_encstr_B7AB07159F2590061F", ( -9, 1, 0 ), ( 0, 0, 0 ) );
    var_6 linkto( var_5, "_encstr_A40101", ( 0, 0, -48 ), ( 0, 0, 0 ) );
    var_8 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0 );
    var_8.team = var_1;
    var_8.destination = var_0;
    var_5.trigger = var_8;
    var_8 linkto( var_5 );
    var_5.trigger makeusable();
    var_5.body = var_6;
    var_5.head = var_7;
    var_5 = drophostage( undefined, var_5, var_0, 1 );
    var_5.teamscored["_encstr_BC850785638DA59537"] = 0;
    var_5.teamscored["_encstr_BA840579D3F7F6"] = 0;
    var_5.wasindent = 0;
    var_5.requireslos = 1;
    var_5.setdropped = ::drophostage;
    var_5.team = var_1;
    var_5.usehostagedrop = 1;
    var_5.ownerteam = var_1;
    var_5.interactteam = scripts\engine\utility::ter_op( var_1 == "_encstr_9BA4080D39CFFB5AB7C1", "_encstr_BC19047780DA", "_encstr_B9FC095F8BCCFF02D92B43" );
    var_5.exclusiveuse = 0;
    var_5.curprogress = 0;
    var_5.usetime = scripts\engine\utility::ter_op( scripts\mp\utility\game::getgametype() == "_encstr_881904634971", 500, 0 );
    var_5.userate = 1;
    var_5.id = "_encstr_98E50D36B03956BE1C851BDAC2D9CA";
    var_5.skiptouching = 1;
    var_5.onuse = ::hostageonuse;
    var_5 thread scripts\mp\gameobjects::useobjectusethink();
    var_9 = "_encstr_9EE925A56CF6CDAFD6B437B4ADC2E0AF3A2C8DBEDB8337D743EDCDA385CEACAFBAE6DAB9DEEEB9";
    var_10 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0 );
    var_10 linkto( var_5 );
    var_5.attachobj = var_10;

    if ( var_1 == "_encstr_9BA4080D39CFFB5AB7C1" )
    {
        var_11 = "_encstr_BC19047780DA";
        var_12 = "_encstr_BC19047780DA";
    }
    else
    {
        var_11 = "_encstr_B9FC095F8BCCFF02D92B43";
        var_12 = "_encstr_B9FC095F8BCCFF02D92B43";
    }

    if ( scripts\mp\utility\game::getgametype() != "_encstr_881904634971" && var_2 )
    {
        var_5.trackedobject = var_5 scripts\mp\gameobjects::createtrackedobject( var_10, ( 0, 0, 0 ) );
        var_5.trackedobject.objidpingfriendly = 0;
        var_5.trackedobject.objidpingenemy = 1;
        var_5.trackedobject.objpingdelay = 2.0;
        var_5.trackedobject scripts\mp\gameobjects::allowcarry( var_11 );
        var_5.trackedobject scripts\mp\gameobjects::setownerteam( var_5.ownerteam );
        var_5.trackedobject scripts\mp\gameobjects::setobjectivestatusicons( level.iconrecover, level.iconrecover );
        var_5.trackedobject.cancontestclaim = 1;
        var_5.trackedobject.stalemate = 0;
        var_5.trackedobject.wasstalemate = 1;
        var_5.trackedobject scripts\mp\gameobjects::setvisibleteam( var_12 );
    }

    if ( isdefined( var_5.trackedobject ) )
    {
        var_5.trackedobject scripts\mp\gameobjects::allowcarry( var_1 );
        var_5.trackedobject scripts\mp\gameobjects::setownerteam( var_1 );
        var_5.trackedobject scripts\mp\gameobjects::setobjectivestatusicons( level.iconrecover, level.iconrecover );

        if ( scripts\mp\utility\game::getgametype() == "_encstr_9D19041941CD" || scripts\mp\utility\game::getgametype() == "_encstr_BD19047616EB" )
        {
            var_5.trackedobject.cancontestclaim = 1;
            var_5.trackedobject.stalemate = 0;
            var_5.trackedobject.wasstalemate = 1;
        }

        var_5.trackedobject scripts\mp\gameobjects::setvisibleteam( var_12 );
    }

    return var_5;
}

spawnallhostages( var_0 )
{
    for ( var_1 = 0; var_1 < level.hostagehidespots.size; var_1++ )
        level.hostages[var_1] = spawnhostage( level.hostagehidespots[var_1].origin, var_0 );
}

spawnrandomhostages( var_0, var_1 )
{
    var_2 = int( min( 5 - level.activehostagecount, min( level.randhidespots.size - level.spawnedhostagecount, var_0 ) ) );

    if ( var_2 == 0 )
        return;

    for ( var_3 = 0; var_3 < var_2; var_3++ )
        level.hostages[level.spawnedhostagecount + var_3] = spawnhostage( level.randhidespots[level.spawnedhostagecount + var_3].origin, var_1 );

    level.spawnedhostagecount = level.spawnedhostagecount + var_2;
    level.activehostagecount = level.activehostagecount + var_2;
}

spawnwmhostagecarry()
{
    var_0 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self.origin );
    var_1 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self.origin );
    var_0 setmodel( "_encstr_ADB1222288DDD27138B21938F30F4D870488AA44B0950E8B52D26D5812D7C77D99015012" );
    var_1 setmodel( "_encstr_9CBB10990BD1A53FB05FB5C091DA93C09A06" );
    var_1 linkto( var_0, "_encstr_B7AB07159F2590061F", ( -9, 1, 0 ), ( 0, 0, 0 ) );

    if ( 0 )
    {
        var_0 scriptmodelplayanimdeltamotion( "_encstr_B26D1EEFEB090273235D82A672A7D0A3C0C8EEF8E0C04BF9206FD1DE1BE88551" );
        var_0 linkto( self, "_encstr_AAB30E3A7626037DAB69DCA52D29C57F" );
    }
    else
    {
        var_0 scriptmodelplayanimdeltamotion( "_encstr_AA191BE8BDB7D0D6126BBFCFB77B88A0251631E372A259038A533371FA" );
        var_0 linkto( self, "_encstr_AAB30E3A7626037DAB69DCA52D29C57F", ( -12, -8, -8 ), ( 0, 0, 30 ) );
        var_1 hidefromplayer( self );
        var_0 hidefromplayer( self );
    }

    var_0.head = var_1;
    self.hostagecarried.wmhostage = var_0;
    return var_0;
}

hostageonuse( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_9B0E143498D77359D16837931849032A37253DAF7511" );
    self endon( "_encstr_80C6084639F60EC1CAC8" );
    var_0 endon( "_encstr_A3750609A5E61883" );

    if ( istrue( self.inlaststand ) )
        return;

    var_0 setclientomnvar( "_encstr_82370C57A5EBB92B1B57C9B4DC9D", 0 );
    var_0 setclientomnvar( "_encstr_87B915D748EE7B5AD7AD827C18F7B1201310E743B0C3B3", 0.01 );
    var_0.ui_securing = undefined;
    thread scripts\mp\gameobjects::updatecurorigin();
    level.hostagecarrier = var_0;
    self.trigger makeunusable();
    var_0.hostagecarried = self;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9E19042B0359" || scripts\mp\utility\game::getgametype() == "_encstr_9D19041941CD" )
        level thread scripts\mp\hud_message::updatematchstatushintforallplayers( self.team, 11, 12, level.hostagecarrier, 13 );

    var_0 carrydebuff();
    thread playthanksvo();
    wait 0.4;
    var_0 spawnwmhostagecarry();
    var_0.hostagecarried.body hide( 1 );
    var_0.hostagecarried.head hide( 1 );
    self linkto( var_0, "_encstr_A93008E0529FF7E1B73D", ( 0, 0, 0 ), ( 0, 0, 0 ) );

    if ( isdefined( self.trackedobject ) )
    {
        self.trackedobject.ownerteam = var_0.team;
        self.trackedobject.carrier = var_0;
        self.trackedobject scripts\mp\gameobjects::setobjectivestatusicons( level.iconescort, level.iconkill );
    }

    if ( scripts\mp\utility\game::getgametype() != "_encstr_9D19041941CD" && isdefined( level.hostagegoalent ) )
    {
        level.hostagegoalent.ownerteam = var_0.team;
        level.hostagegoalent scripts\mp\gameobjects::requestid( 1, 1 );
        level.hostagegoalent scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
        level.hostagegoalent scripts\mp\gameobjects::setobjectivestatusicons( level.iconextract, level.iconpreventextract );
    }
    else if ( scripts\mp\utility\game::getgametype() == "_encstr_9D19041941CD" )
    {
        var_0 _encstr_B7D21D7F5093FB7934D0EF750747C750B31528F83A1FAA121A240106BF373E::summonextractchopper( level.vipextractzones[var_0.team] );
        level.vipextractzones[var_0.team].goalent scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
    }

    if ( isdefined( self.outlineid ) )
        scripts\mp\utility\outline::outlinedisable( self.outlineid, self );

    if ( scripts\mp\utility\game::getgametype() != "_encstr_881904634971" && scripts\mp\utility\game::getgametype() != "_encstr_9D19041941CD" || scripts\mp\utility\game::getgametype() == "_encstr_BD19047616EB" )
    {
        if ( var_0.team == "_encstr_BA840579D3F7F6" )
            var_0.hostageoutlineid = scripts\mp\utility\outline::outlineenableforteam( var_0, "_encstr_BA840579D3F7F6", "_encstr_8CA117D5B5F9D271D008578B40C9355B8143514D9E7B2A8759", "_encstr_A34214771A396A17A9730F01D2B902A85E0B7810C8AA" );
        else
            var_0.hostageoutlineid = scripts\mp\utility\outline::outlineenableforteam( var_0, "_encstr_BC850785638DA59537", "_encstr_BCBD15F0DB9349B823C50898D7536139FB72F908B36E95", "_encstr_A34214771A396A17A9730F01D2B902A85E0B7810C8AA" );
    }

    if ( !isdefined( self.useobj ) )
        self.useobj = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0.origin );

    self.useobj linkto( var_0, "_encstr_A93008E0529FF7E1B73D" );
    self.useobj makeusable();
    self.useobj setcursorhint( "_encstr_939A0CEC70DBF521459F5B47F73D" );
    self.useobj sethintonobstruction( "_encstr_B7180526C81F4B" );

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9E19042B0359" )
        self.useobj sethintstring( &"_encstr_A92214B8E937745FD4750F1C98DE3B8A8F8101819961" );
    else
        self.useobj sethintstring( &"_encstr_8B3E18D5BF70B35D11A1893111DF4703D4077F5858878B963FB1" );

    self.useobj sethintdisplayfov( 360 );
    self.useobj setusefov( 360 );
    self.useobj sethintdisplayrange( 100 );
    self.useobj setuserange( 100 );
    self.useobj setusepriority( -3 );
    var_0 giveandfireoffhand( "_encstr_BD51163ACAB6C17D34B7CDA32CEC597DD816C94E2FD7D607" );
    var_0.carryobject = self;

    foreach ( var_2 in level.players )
    {
        if ( var_2 == var_0 )
        {
            self.useobj enableplayeruse( var_2 );
            continue;
        }

        self.useobj disableplayeruse( var_2 );
    }

    foreach ( var_5 in level.hostages )
    {
        if ( var_5 != self )
            var_5 disableplayeruse( var_0 );
    }

    thread watchhostagedrop( var_0, self, self.useobj );

    if ( isdefined( level.tacopssublevel ) )
        thread chemistcomplaining();

    thread laststandlistener( var_0 );

    if ( !self.wasindent )
    {

    }

    self.wasindent = 1;
    level notify( "_encstr_8A1B1653255689374C45512FA3469BEFA8E12898CAFF4D22", 1 );
}

playthanksvo()
{
    wait 4;
    self playsound( "_encstr_94701569D849F0AF1B792B1347176BE05B67C1C9696DB8" );
}

spawncmdgoal()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_804A10D2934F924B294D2718D033831EF72B" );
    var_0 = ( -1970, -1692, 5 );
    level.hostagegoalent = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0 );
    level.hostagegoalent.angles = ( 0, 270, 0 );
    level.hostagegoalent.team = "_encstr_BC850785638DA59537";
    level.hostagegoalent setmodel( "_encstr_8C2116338FD081EFEF2BDA2233285F46386BB8AC2BE815B7" );
    level.hostagegoalent setscriptablepartstate( "_encstr_A12B07D13E43B7F12A", "_encstr_811904785890" );
    level.hostagegoalent playloopsound( "_encstr_A92F11AD07F5CCC62CC9ACFA4CD54EE6F5B183" );
    level.hostagegoalent thread scripts\cp_mp\entityheadicons::setheadicon_factionimage( 0, 60 );
    waitframe();
    playfxontag( level._effect["_encstr_9BB20F6B38F9D1CF5042AF9B6B3973E669"], level.hostagegoalent, "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_1 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", var_0, 0, 120, 128 );
    var_1 thread goaltriggerwatcher( self );
}

goaltriggerwatcher( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self notify( "_encstr_B6450EFBA2505CB7FF6AD87793125213" );
    self endon( "_encstr_B6450EFBA2505CB7FF6AD87793125213" );
    self waittill( "_encstr_8B5C081B58E0B7A213E6", var_0 );

    if ( isdefined( var_0.hostagecarried ) )
    {
        drophostage( var_0, level.hostages[0], var_0.origin );
        level.hostages[0].trigger makeunusable();
        level.hostages[0] makeunusable();
        level.hostages[0].useobj unlink();
        level.hostages[0].useobj makeunusable();

        if ( isdefined( level.hostages[0].outlineid ) )
            scripts\mp\utility\outline::outlinedisable( level.hostages[0].outlineid, level.hostages[0].body );

        thread spawnstartbradley( var_0 );
    }

    self delete();
}

spawnstartbradley( var_0 )
{
    while ( !isdefined( level.bradley ) )
        waitframe();

    var_1 = ( -2139, -1977, 64 );
    var_2 = ( 0, 270, 0 );
    var_3 = var_0.team;
    var_4 = [];

    foreach ( var_6 in scripts\mp\utility\teams::getteamdata( "_encstr_BC850785638DA59537", "_encstr_8875080E3685E52B93B9" ) )
    {
        if ( distancesquared( var_6.origin, var_1 ) < 360000 )
            var_6 queuedialogforplayer( "_encstr_9D3D1F5773EF82285399BFBFF8A3CF1A770EDB8E5433F9453AE8ABFF8823A112DD", "_encstr_9B8B17BAE0CFBF80FFF301F1CFE3F85028D31347EFD0801D72", 2 );
    }

    wait 3;
    scripts\mp\utility\dialog::leaderdialog( "_encstr_8868170E65BB07D8D91BC09B43FAD1B3D281760E7E52D941A1", var_3, "_encstr_A6C61022F12B1047BB8B98B07219338B6764", var_4 );
    scripts\mp\utility\dialog::leaderdialog( "_encstr_80971222377F2158763F7390F83232A7257A3118", scripts\mp\utility\game::getotherteam( var_3 )[0], "_encstr_A6C61022F12B1047BB8B98B07219338B6764", var_4 );
    _encstr_A1E429F852FABB63A30BE831E0264973E59A7820FB57C7D0C312C7BDC457F247CA3358C872EF3D38BF3BDE::spawnbradleynoduration( var_1, var_2, "_encstr_BC850785638DA59537" );
}

getclosestcheckpoint( var_0 )
{
    var_1 = level.extractionlocent.origin;
    var_2 = var_1 - level.hostagecheckpointent[0][0].origin;
    var_3 = undefined;

    for ( var_4 = 0; var_4 < level.hostagecheckpointent.size; var_4++ )
    {
        var_5 = level.hostagecheckpointent[var_4][0].origin;
        var_6 = var_5 - var_0;

        if ( vectordot( var_2, var_6 ) < 0 )
            var_3 = var_5;
    }

    if ( !isdefined( var_3 ) )
        var_3 = level.hostagecheckpointent[0][0].origin;

    return var_3;
}

getclosestfleezone( var_0 )
{
    var_1 = level.hostageexitpoints[0].origin;
    var_2 = distancesquared( var_0, var_1 );

    for ( var_3 = 1; var_3 < level.hostageexitpoints.size; var_3++ )
    {
        var_4 = level.hostageexitpoints[var_3].origin;
        var_5 = distancesquared( var_4, var_0 );

        if ( var_2 > var_5 )
        {
            var_1 = var_4;
            var_2 = var_5;
        }
    }

    return var_1;
}

hostagethreatwatcher()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_B99E0F9045D3A317DA2707274722E6C09C" );
    level endon( "_encstr_9B0E143498D77359D16837931849032A37253DAF7511" );

    for (;;)
    {
        foreach ( var_1 in level.players )
        {
            var_2 = distancesquared( var_1 geteye(), self.origin );

            if ( var_1.team == "_encstr_BC850785638DA59537" && isalive( var_1 ) )
            {
                if ( var_2 < 57600 )
                {
                    hostagestoprunning();
                    return;
                }
            }
        }

        wait 0.5;
    }
}

hostagestoprunning()
{
    self notify( "_encstr_A9B6101AF6E6A3B0CEAC7D37D1B738E0B291" );
    self.isrunning = 0;
    drophostage( undefined, self, self.origin );
}

hostagenearbywatcher()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_9B0E143498D77359D16837931849032A37253DAF7511" );

    for (;;)
    {
        foreach ( var_1 in level.players )
        {
            if ( var_1.team != "_encstr_BA840579D3F7F6" )
                continue;

            var_2 = var_1 hasextractionkillstreak();
            var_3 = 0;
            var_4 = 0;

            foreach ( var_6 in level.activeextractors )
            {
                if ( var_1 == var_6 )
                    var_4 = 1;
            }

            foreach ( var_9 in level.hostages )
            {
                var_10 = distancesquared( var_1 geteye(), var_9.origin );

                if ( !istrue( var_9.isrunning ) )
                {
                    if ( var_10 < 14400 && var_9 proxentlos( var_1 ) )
                    {
                        var_3 = 1;
                        break;
                    }
                }
            }

            if ( istrue( level.lastevaccopterdeployed ) || var_2 && !var_3 )
            {
                var_1 removeextractionkillstreak();
                var_1 notify( "_encstr_B9221159E2AE2D07BE1959E0D87BBCAF56E68C" );
                var_1 scripts\mp\killstreaks\killstreaks::updatekillstreakuislots();
                var_1 scripts\mp\killstreaks\killstreaks::updatekillstreakselectedui();

                if ( !var_4 && istrue( level.lastevaccopterdeployed ) )
                    var_1 delayplayerwarning( "_encstr_9E0F2A45A19504C62CCD3A402B3B0BC680B17B1C8ECA93104BDC80B08DE42B2C19F280CACD0239F6AE3A5690" );

                break;
            }
            else if ( !var_4 && !var_2 && var_3 )
            {
                var_1 clearoffhandprimary();
                var_1 scripts\mp\killstreaks\killstreaks::awardkillstreak( "_encstr_A996112358483729BA1F5A95D9F11F881FCB47", "_encstr_93610627DB28CDDB" );
                var_1 iprintlnbold( "_encstr_985C2215A7A785986A6BB7D86BD70B50464789D98DBA33709AF76BE1C1B64B0AD2E3C5D3" );
                break;
            }
        }

        wait 0.5;
    }
}

proxentlos( var_0 )
{
    if ( !isdefined( self.requireslos ) )
        return 1;

    var_1 = var_0 geteye();
    var_2 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 1, 0 );
    var_3 = [];
    var_4 = self.origin + ( 0, 0, 32 );
    var_5 = 1;
    var_3[0] = self.visuals;
    var_3[1] = var_0;
    var_6 = scripts\engine\trace::ray_trace( var_1, var_4, var_3, var_2, 0 );

    if ( var_6["_encstr_B130095358E1B3930B687D"] != 1 && var_5 )
    {
        var_4 = self.origin + ( 0, 0, 16 );
        var_6 = scripts\engine\trace::ray_trace( var_1, var_4, var_3, var_2, 0 );
    }

    if ( var_6["_encstr_B130095358E1B3930B687D"] != 1 )
    {
        var_4 = self.origin + ( 0, 0, 0 );
        var_6 = scripts\engine\trace::ray_trace( var_1, var_4, var_3, var_2, 0 );
    }

    return var_6["_encstr_B130095358E1B3930B687D"] == 1;
}

delayplayerwarning( var_0 )
{
    if ( !isdefined( self.lastlzwarning ) )
    {
        self iprintlnbold( var_0 );
        self.lastlzwarning = 1;
        wait 10;
        self.lastlzwarning = undefined;
    }
}

startlastextraction()
{
    level.lastevaccopterdeployed = 1;
    _encstr_88C021DB28B338B3692366357B200F71BBBD50D7B75DF315B376BB01D8D77386F49017::extendtacopstimelimitms( 60000 );
}

hasextractionkillstreak()
{
    var_0 = scripts\mp\killstreaks\killstreaks::getgimmeslotkillstreakstructs();

    for ( var_1 = 0; var_1 < var_0.size; var_1++ )
    {
        var_2 = var_0[var_1];

        if ( var_2.streakname == "_encstr_A996112358483729BA1F5A95D9F11F881FCB47" )
            return 1;
    }

    return 0;
}

removeextractionkillstreak()
{
    var_0 = scripts\mp\killstreaks\killstreaks::getgimmeslotkillstreakstructs();

    for ( var_1 = 0; var_1 < var_0.size; var_1++ )
    {
        var_2 = var_0[var_1];

        if ( var_2.streakname == "_encstr_A996112358483729BA1F5A95D9F11F881FCB47" )
            scripts\mp\killstreaks\killstreaks::removekillstreak( 0 );
    }
}

manageheadicons( var_0 )
{
    self.ownerteamid = scripts\mp\objidpoolmanager::requestobjectiveid( 99 );
    objective_onentity( self.ownerteamid, self );
    objective_addteamtomask( self.ownerteamid, var_0.team );
    self.teamheadicon = thread scripts\cp_mp\entityheadicons::setheadicon_singleimage( var_0.team, "_encstr_A3E916F388B7E0F73B92B0718BBDE0753330C9BBEBC73DCB", 36 );
}

moveonpath( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_9B0E143498D77359D16837931849032A37253DAF7511" );
    self endon( "_encstr_B99E0F9045D3A317DA2707274722E6C09C" );
    self endon( "_encstr_A9B6101AF6E6A3B0CEAC7D37D1B738E0B291" );
    var_1 = 100;

    for ( var_2 = 0; var_2 < var_0.size; var_2++ )
    {
        var_3 = var_0[var_2];
        var_4 = getphysicspointaboutnavmesh( var_3 );
        var_5 = distance( self.origin, var_4 );

        if ( var_5 == 0 )
            continue;

        var_6 = var_5 / var_1;
        self.angles = vectortoangles( var_4 - self.origin );
        self moveto( var_4, var_6, 0, 0 );
        wait( var_6 );
    }

    thread hostagestoprunning();
}

scorehostage( var_0, var_1 )
{
    level.hostages = scripts\engine\utility::array_remove( level.hostages, self );
    scripts\mp\gameobjects::deletetrackedobject();
    level.activehostagecount--;

    if ( isdefined( self.useobj ) )
        self.useobj delete();

    self.body delete();
    self.head delete();
    self delete();
    level scripts\mp\gamescore::giveteamscoreforobjective( var_0, var_1, 0 );
    self notify( "_encstr_B99E0F9045D3A317DA2707274722E6C09C" );
}

removeminimapicons()
{
    scripts\mp\objidpoolmanager::returnobjectiveid( self.curobjid );

    if ( isdefined( self.useobj ) )
        scripts\mp\objidpoolmanager::returnobjectiveid( self.useobj.ownerteamid );

    if ( isdefined( self.useobj ) && isdefined( self.useobj.teamheadicon ) )
    {
        self.useobj.teamheadicon destroy();

        foreach ( var_2, var_1 in self.useobj.entityheadicons )
        {
            if ( !isdefined( var_1 ) )
                continue;

            var_1 destroy();
        }
    }
}

getphysicspointaboutnavmesh( var_0 )
{
    var_1 = scripts\engine\trace::create_contents( undefined, 1, 1, undefined, undefined, undefined, undefined );
    var_2 = physics_raycast( var_0 + ( 0, 0, 48 ), var_0 - ( 0, 0, 48 ), var_1, undefined, 0, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3" );
    var_3 = isdefined( var_2 ) && var_2.size > 0;

    if ( var_3 )
    {
        var_4 = var_2[0]["_encstr_B7260923C89E8F3378E72E"];
        return var_4;
    }

    return var_0;
}

drophostage( var_0, var_1, var_2, var_3, var_4 )
{
    self notify( "_encstr_B97C13D789418D9865CA6D4B73072522F8ADAB3B84" );

    if ( !isdefined( var_0 ) )
        var_0 = self.carrier;

    if ( !isdefined( var_2 ) )
        var_2 = self.curorigin;

    if ( !isdefined( var_1 ) )
        var_1 = self;

    var_1 notify( "_encstr_80C6084639F60EC1CAC8" );

    if ( isdefined( var_1.trackedobject ) )
    {
        var_1.trackedobject.carrier = var_1.attachobj;
        var_1.trackedobject scripts\mp\gameobjects::setobjectivestatusicons( level.iconrecover, level.iconrecover );

        if ( isdefined( var_0 ) && isdefined( var_0.hostageoutlineid ) )
            scripts\mp\utility\outline::outlinedisable( var_0.hostageoutlineid, var_0 );

        if ( scripts\mp\utility\game::getgametype() != "_encstr_881904634971" && scripts\mp\utility\game::getgametype() != "_encstr_9D19041941CD" || scripts\mp\utility\game::getgametype() == "_encstr_BD19047616EB" )
            var_1.outlineid = scripts\mp\utility\outline::outlineenableforall( var_1.body, "_encstr_BCBD15F0DB9349B823C50898D7536139FB72F908B36E95", "_encstr_A34214771A396A17A9730F01D2B902A85E0B7810C8AA" );
    }

    if ( isdefined( level.hostagegoalent ) )
    {
        level.hostagegoalent scripts\mp\gameobjects::setvisibleteam( "_encstr_AABA05236DC831" );
        level.hostagegoalent scripts\mp\gameobjects::releaseid();
    }

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9D19041941CD" && isdefined( level.vipextractzones ) )
        level.vipextractzones[var_0.team].goalent scripts\mp\gameobjects::setvisibleteam( "_encstr_AABA05236DC831" );

    var_1.carried = 0;
    var_5 = var_2;
    var_1 unlink();
    var_5 = getclosestpointonnavmesh( var_2 );
    var_1.origin = getphysicspointaboutnavmesh( var_5 ) + ( 0, 0, 2 );
    var_1.angles = ( 0, var_1.angles[1], 0 );

    if ( !isdefined( var_3 ) && isdefined( var_1.useobj ) )
        var_1.useobj.origin = var_1.origin;

    if ( isdefined( var_0 ) )
    {
        var_0.carryobject = undefined;
        var_6 = var_0.team;

        foreach ( var_8 in level.hostages )
        {
            if ( var_8 != var_1 )
                var_8 enableplayeruse( var_0 );
        }

        var_0 removecarrydebuff( !isdefined( var_4 ) );
    }

    if ( isdefined( var_1.wmhostage ) )
    {
        var_1.wmhostage unlink();
        var_1.wmhostage.head delete();
        var_1.wmhostage delete();
        var_1.wmhostage = undefined;
    }

    if ( isdefined( var_4 ) )
        wait( var_4 );

    if ( isdefined( var_0 ) && isdefined( var_0.hostagecarried ) )
    {
        var_0.hostagecarried.body show();
        var_0.hostagecarried.head show();
        var_0.hostagecarried = undefined;
    }
    else
    {
        var_1.body show();
        var_1.head show();
    }

    var_1.trigger makeusable();

    if ( isdefined( var_4 ) )
        var_0 restoreweapons();

    level.hostagecarrier = undefined;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9E19042B0359" )
    {
        foreach ( var_0 in level.players )
        {
            if ( var_0.team != var_1.trigger.team )
            {
                var_1.trigger disableplayeruse( var_0 );
                var_1.trigger hidefromplayer( var_0 );
            }
        }

        var_1.trigger sethintstring( &"_encstr_B3C61603C85DD128BBC096FF981F7F01EE7B8BB15F7B91EF" );
        level thread scripts\mp\hud_message::updatematchstatushintforallplayers( var_1.team, 10, 12 );
    }
    else if ( scripts\mp\utility\game::getgametype() == "_encstr_9D19041941CD" )
    {
        var_1.trigger sethintstring( &"_encstr_B3C61603C85DD128BBC096FF981F7F01EE7B8BB15F7B91EF" );
        level thread scripts\mp\hud_message::updatematchstatushintforallplayers( var_1.team, 10, 12 );
    }
    else
        var_1.trigger sethintstring( &"_encstr_A3A51A79B05EEC77FDB001A1F8C181043703FD4F27AB7417D3C8C921" );

    var_1 setusepriority( -3 );

    if ( isdefined( var_1.curobjid ) )
        objective_setownerteam( var_1.curobjid, "_encstr_9BA4080D39CFFB5AB7C1" );

    if ( isdefined( var_1.body ) )
    {
        var_1.body linkto( var_1, "_encstr_A40101", ( 0, 0, 0 ), ( 0, 0, 0 ) );
        var_1.body scriptmodelplayanimdeltamotion( "_encstr_82191BA01331171BE05111DAD8C4778A08F3232401E2513F9D488AF7EB" );
    }

    return var_1;
}

restoreweapons()
{
    self takeallweapons();

    foreach ( var_1 in self.restoreweaponlist )
    {
        scripts\cp_mp\utility\inventory_utility::_giveweapon( var_1, undefined, undefined, 0 );

        if ( scripts\mp\utility\weapon::update_health_bar_to_player( var_1 ) )
            self assignweaponmeleeslot( var_1 );
    }

    var_3 = scripts\mp\supers::getcurrentsuper();

    if ( isdefined( var_3 ) )
        thread scripts\mp\supers::givesuperweapon( var_3 );

    var_4 = self.loadoutgesture;

    if ( isdefined( var_4 ) )
    {
        scripts\cp_mp\gestures::cleargesture();
        scripts\cp_mp\gestures::givegesture( var_4 );
    }

    var_5 = "_encstr_987F080E394BDAC2E45E";
    var_6 = scripts\mp\equipment::getcurrentequipment( var_5 );

    if ( isdefined( var_6 ) )
        scripts\mp\equipment::giveequipment( var_6, var_5 );

    var_5 = "_encstr_B98F0AC7D5B99F4DDBA8353B";
    var_6 = scripts\mp\equipment::getcurrentequipment( var_5 );

    if ( isdefined( var_6 ) )
        scripts\mp\equipment::giveequipment( var_6, var_5 );

    foreach ( var_1 in self.restoreweaponlist )
    {
        if ( !scripts\mp\utility\weapon::update_health_bar_to_player( var_1 ) )
        {
            scripts\cp_mp\utility\inventory_utility::_switchtoweapon( var_1 );
            break;
        }
    }
}

carrydebuff()
{
    if ( istrue( level.hostagecarrystates[self.guid] ) )
        return;

    scripts\common\utility::allow_prone( 0 );
    scripts\common\utility::allow_mantle( 0 );
    var_0 = "_encstr_89A510796752C8C29D899213A322B9671923";

    if ( scripts\common\utility::iscp() )
        var_0 = "_encstr_B4A5107F7FA289E88C70D7EB5B137117A9F7";

    scripts\mp\utility\player::_setsuit( var_0 );
    scripts\mp\utility\perk::giveperk( "_encstr_A3BE15437B034F5BD6310C70E113D3F0305DA471793B65" );
    self.overrideweaponspeed_speedscale = 0.75;
    scripts\mp\weapons::updatemovespeedscale();
    var_1 = "_encstr_BDB31120D328E92F8A5FE7EF8B2256D2372D8B";
    var_2 = scripts\mp\utility\weapon::getweaponrootname( var_1 );
    var_3 = [];
    var_3[var_3.size] = "_encstr_B68D08D9B52AD768168B";
    var_4 = scripts\mp\class::buildweapon( var_2, [ "_encstr_B68D08D9B52AD768168B" ], "_encstr_AABA05236DC831", "_encstr_AABA05236DC831" );
    self.removeweaponhostagedrop = var_4;
    self.restoreweaponlist = self.weaponlist;
    self takeallweapons();
    scripts\common\utility::allow_weapon_switch( 0 );
    scripts\cp_mp\utility\inventory_utility::_giveweapon( var_4, undefined, undefined, 1 );
    scripts\cp_mp\utility\inventory_utility::_switchtoweaponimmediate( var_4 );
    thread refillsinglecountammo();
    thread refillammo();
    level.hostagecarrystates[self.guid] = 1;
}

refillsinglecountammo()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_9B0E143498D77359D16837931849032A37253DAF7511" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_804A10D2934F924B294D2718D033831EF72B" );

    for (;;)
    {
        if ( scripts\mp\utility\player::isreallyalive( self ) && self.team != "_encstr_A68C0A5803A5D151A2B310A6" && isdefined( self.lastdroppableweaponobj ) && self getcurrentweaponclipammo() == 0 )
        {
            wait 1;
            self notify( "_encstr_A64D0743C1D1370153" );
            wait 1;
            continue;
        }

        waitframe();
    }
}

refillammo()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_9B0E143498D77359D16837931849032A37253DAF7511" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_804A10D2934F924B294D2718D033831EF72B" );

    for (;;)
    {
        self waittill( "_encstr_A64D0743C1D1370153" );
        self givestartammo( self.currentprimaryweapon );
    }
}

removecarrydebuff( var_0 )
{
    if ( !istrue( level.hostagecarrystates[self.guid] ) )
        return;

    scripts\common\utility::allow_prone( 1 );
    scripts\common\utility::allow_mantle( 1 );
    scripts\mp\utility\player::_setsuit( "_encstr_A17A13C2BB4B274748A5110D59284A771B33390AE3" );
    scripts\mp\utility\perk::removeperk( "_encstr_A3BE15437B034F5BD6310C70E113D3F0305DA471793B65" );
    self.overrideweaponspeed_speedscale = undefined;
    scripts\mp\weapons::updatemovespeedscale();
    scripts\cp_mp\utility\inventory_utility::getridofweapon( "_encstr_BD51163ACAB6C17D34B7CDA32CEC597DD816C94E2FD7D607" );
    scripts\common\utility::allow_weapon_switch( 1 );

    if ( var_0 )
        restoreweapons();

    level.hostagecarrystates[self.guid] = 0;
    self notify( "_encstr_804A10D2934F924B294D2718D033831EF72B" );
}

chemistcomplaining()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_9B0E143498D77359D16837931849032A37253DAF7511" );
    level endon( "_encstr_804A10D2934F924B294D2718D033831EF72B" );

    for (;;)
    {
        wait( 5.0 + randomfloatrange( 3.0, 10.0 ) );
        playsoundatpos( self.origin, "_encstr_A6E61D71908EB879AE01FB5ADF50895B788AD297CAB786E1479D337359B7CD" );
        wait( 5.0 + randomfloatrange( 3.0, 10.0 ) );
    }
}

laststandlistener( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_9B0E143498D77359D16837931849032A37253DAF7511" );
}

watchhostagedrop( var_0, var_1, var_2 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_9B0E143498D77359D16837931849032A37253DAF7511" );
    self endon( "_encstr_A3750609A5E61883" );
    self.carried = 1;
    var_3 = 0;
    self.carrier = var_0;
    var_4 = level.framedurationseconds;

    while ( self.carried )
    {
        if ( !var_0 usebuttonpressed() )
            var_3 = 1;

        var_5 = 0;

        while ( var_3 && var_0 usebuttonpressed() )
        {
            var_5 = var_5 + var_4;

            if ( var_5 > 0.3 )
            {
                var_2 unlink();
                var_2 disableplayeruse( var_0 );
                var_2 makeunusable();
                var_6 = var_0.origin + anglestoforward( var_0.angles ) * 72.0 + ( 0, 0, 24 );
                drophostage( var_0, var_1, var_6, undefined, 1.4 );
                return;
            }

            wait( var_4 );
        }

        waitframe();
    }
}

obfuscateobjectiveposition()
{
    self endon( "_encstr_A3750609A5E61883" );
    var_0 = 512.0;
    var_1 = var_0 / 2.0;

    for (;;)
    {
        var_2 = randomfloatrange( var_1 / 3.0, var_1 );

        if ( randomint( 2 ) == 0 )
            var_2 = var_2 * -1;

        var_3 = randomfloatrange( var_1 / 3.0, var_1 );

        if ( randomint( 2 ) == 0 )
            var_3 = var_3 * -1;

        var_4 = ( var_2, var_3, 0 );
        scripts\mp\objidpoolmanager::update_objective_position( self.curobjid, self.origin + ( var_2, var_3, 0 ) );
        wait( randomfloatrange( 8, 13 ) );
    }
}

createobjective( var_0 )
{
    var_1 = scripts\mp\objidpoolmanager::requestobjectiveid( 10 );

    if ( var_1 == -1 )
        return -1;

    scripts\mp\objidpoolmanager::objective_add_objective( var_1, "_encstr_8CBE0A41F59874FF8371821A", ( 0, 0, 0 ), var_0 );
    scripts\mp\objidpoolmanager::update_objective_onentity( var_1, self );
    scripts\mp\objidpoolmanager::update_objective_state( var_1, "_encstr_B30B07E216CBFFC4C2" );
    scripts\mp\objidpoolmanager::update_objective_icon( var_1, var_0 );
    scripts\mp\objidpoolmanager::objective_playermask_showtoall( var_1 );

    if ( isdefined( level.objvisall ) )
        [[ level.objvisall ]]( var_1 );

    return var_1;
}

hostagestatuswatcher()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_9B0E143498D77359D16837931849032A37253DAF7511" );
    level endon( "_encstr_BAFA1CD0ED9B1D2CCE2BFA1AF6C6237BAB3A7DC1A1C29BB2BE4C56CEBAB9" );
    level childthread hostageallygrabbedchatterwatcher();
    level childthread hostageallygrabbedwatcher();
    level childthread hostageallydroppedchatterwatcher();
    level childthread hostageallydroppedwatcher();
    level childthread hostageaxisgrabbedwatcher();
    level childthread hostagespawnpushedwatcher();

    for (;;)
    {
        level waittill( "_encstr_8A1B1653255689374C45512FA3469BEFA8E12898CAFF4D22", var_0 );

        switch ( var_0 )
        {
            case 1:
                level notify( "_encstr_8FC515B4C56AA31A9F1731D9BC53EA57C235A119DA42F1" );
                break;
            case 2:
                level notify( "_encstr_8C2115388FC84BDFECC9996272335F49905DA9BA2DD017" );
                break;
            case 3:
                level notify( "_encstr_9F2215E088DF7BC20F97179144513269B253E8ABD19714" );
                break;
            default:
                break;
        }
    }
}

hostageallygrabbedchatterwatcher()
{
    for (;;)
    {
        level waittill( "_encstr_8FC515B4C56AA31A9F1731D9BC53EA57C235A119DA42F1" );
        wait 1;
        scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_A6E61D71908EB879AE01FB5ADF50895B788AD297CAB786E1479D337359B7CD", "_encstr_BC850785638DA59537" );
        wait 10;
    }
}

hostageallydroppedchatterwatcher()
{
    for (;;)
    {
        level waittill( "_encstr_9F2215E088DF7BC20F97179144513269B253E8ABD19714" );
        wait 1;
        scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_A6E61D71908EB879AE01FB5ADF50895B788AD297CAB786E1479D337359B7CD", "_encstr_BC850785638DA59537" );
        wait 10;
    }
}

hostageallygrabbedwatcher()
{
    for (;;)
    {
        level waittill( "_encstr_8FC515B4C56AA31A9F1731D9BC53EA57C235A119DA42F1" );
        scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_88911B913CBEAD8389AF5D3726EBE0A1B0E69526BE343BA37639163116", "_encstr_BC850785638DA59537" );
        scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_8A4B21913C7DDA0E89D72C8BC66BAFE0D058DCB298EBAC9BB2DAF2863B3AB34E0B98C4", "_encstr_BA840579D3F7F6" );
        wait 30;
    }
}

hostageallydroppedwatcher()
{
    for (;;)
    {
        level waittill( "_encstr_9F2215E088DF7BC20F97179144513269B253E8ABD19714" );
        scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_9D051B34A1A90D9B6E8E3B435B285384A05FADE957B893F30503927BB9", "_encstr_BC850785638DA59537" );
        scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_9EDE2118BBE99B4BC30FE7E70BC796698CB228E8C73133C0B755F353F64B3935350B38", "_encstr_BA840579D3F7F6" );
        wait 30;
    }
}

hostageaxisgrabbedwatcher()
{
    for (;;)
    {
        level waittill( "_encstr_8C2115388FC84BDFECC9996272335F49905DA9BA2DD017" );
        scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_8FA9204C28B7E26B0671239FCF7F1B080207658127EFABF09BFB6B9CEB28D3F7E27F", "_encstr_BC850785638DA59537" );
        scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_BDA31CB1BA11A8F3813727E0D8DDFFE8C3A3D3B74BF9A033ABC7D5F1C621", "_encstr_BA840579D3F7F6" );
        wait 30;
    }
}

hostagespawnpushedwatcher()
{
    for (;;)
    {
        level waittill( "_encstr_8B58161ADB373A2CB359F56E0EC2DD37DCFA07EA9B0D2BC8" );
        scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_8A9B1D19F07D5B07C4F5AE6E26BE0E43856EAC89BECDE0857773C1EA370D85", "_encstr_BC850785638DA59537" );
        scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_A1AC1E7B28069DF33D505E52A6FBD9484858AFE7127EDBBB135C650A95AFE2E2", "_encstr_BA840579D3F7F6" );
        wait 30;
    }
}

proxcmdwatcher()
{
    level endon( "_encstr_A3750609A5E61883" );
    var_0 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", level.hostages[0].origin, 0, 120, 128 );
    var_0 waittill( "_encstr_8B5C081B58E0B7A213E6", var_1 );

    foreach ( var_3 in scripts\mp\utility\teams::getteamdata( "_encstr_BC850785638DA59537", "_encstr_8875080E3685E52B93B9" ) )
    {
        if ( distancesquared( var_3.origin, var_0.origin ) < 250000 )
            var_3 queuedialogforplayer( "_encstr_81411CF948F9401FE3E9BB63033E40A00DBB516BFFDF8969F702318BBA43", "_encstr_B8A814D8F6C1F5347B9B8E85D9B2BEB1DBB1C2A39519", 2 );
    }

    var_0 delete();
}
