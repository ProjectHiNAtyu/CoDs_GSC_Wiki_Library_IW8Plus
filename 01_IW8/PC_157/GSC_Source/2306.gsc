// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

decoy_init()
{
    level.decoygrenades = [];
    var_0 = spawnstruct();
    level.decoygrenadedata = var_0;
    var_0.firetypes = [];
    var_0.firetypeweights = [];
    var_0.firetimes = [];
    var_0.firemaxcounts = [];
    var_0.fireintervalmintimes = [];
    var_0.fireintervalmaxtimes = [];
    var_0.fireminupimpulse = [];
    var_0.firemaxupimpulse = [];
    var_0.fireminforwardimpulse = [];
    var_0.firemaxforwardimpulse = [];
    var_0.firetypes[var_0.firetypes.size] = "_encstr_A30703F270";
    var_0.firetypeweights["_encstr_A30703F270"] = 35;
    var_0.firetimes["_encstr_A30703F270"] = 0.4;
    var_0.firemaxcounts["_encstr_A30703F270"] = 3;
    var_0.fireintervalmintimes["_encstr_A30703F270"] = 0.5;
    var_0.fireintervalmaxtimes["_encstr_A30703F270"] = 2;
    var_0.fireminupimpulse["_encstr_A30703F270"] = 175;
    var_0.firemaxupimpulse["_encstr_A30703F270"] = 225;
    var_0.fireminforwardimpulse["_encstr_A30703F270"] = 55;
    var_0.firemaxforwardimpulse["_encstr_A30703F270"] = 125;
    var_0.firetypes[var_0.firetypes.size] = "_encstr_BE1904B9D6B3";
    var_0.firetypeweights["_encstr_BE1904B9D6B3"] = 50;
    var_0.firetimes["_encstr_BE1904B9D6B3"] = 0.4;
    var_0.firemaxcounts["_encstr_BE1904B9D6B3"] = 4;
    var_0.fireintervalmintimes["_encstr_BE1904B9D6B3"] = 0.25;
    var_0.fireintervalmaxtimes["_encstr_BE1904B9D6B3"] = 1;
    var_0.fireminupimpulse["_encstr_BE1904B9D6B3"] = 80;
    var_0.firemaxupimpulse["_encstr_BE1904B9D6B3"] = 125;
    var_0.fireminforwardimpulse["_encstr_BE1904B9D6B3"] = 175;
    var_0.firemaxforwardimpulse["_encstr_BE1904B9D6B3"] = 265;
    var_0.firetypes[var_0.firetypes.size] = "_encstr_B6070748328C39712B";
    var_0.firetypeweights["_encstr_B6070748328C39712B"] = 15;
    var_0.firetimes["_encstr_B6070748328C39712B"] = 0.4;
    var_0.firemaxcounts["_encstr_B6070748328C39712B"] = 2;
    var_0.fireintervalmintimes["_encstr_B6070748328C39712B"] = 1;
    var_0.fireintervalmaxtimes["_encstr_B6070748328C39712B"] = 3;
    var_0.fireminupimpulse["_encstr_B6070748328C39712B"] = 250;
    var_0.firemaxupimpulse["_encstr_B6070748328C39712B"] = 375;
    var_0.fireminforwardimpulse["_encstr_B6070748328C39712B"] = 0;
    var_0.firemaxforwardimpulse["_encstr_B6070748328C39712B"] = 60;
    var_0.light_tank_watchmissileinputchange = getdvarint( "_encstr_98A51ADC6C9C7D23B2B1EDF2FA4829BE32B4C6959CBD361BBEC6DEBB", 1 );
    var_0.light_tank_watchgameend = getdvarint( "_encstr_AF661B6E36E4AF46CA6CDE2FEB1292EB465A36CAC9DB3636EB1A4B7634", 4 );
}

decoy_used( var_0 )
{
    var_0 endon( "_encstr_A3750609A5E61883" );
    scripts\mp\utility\print::printgameaction( "_encstr_98871439E23F1860AEC77D5BE62650D5DA7B33016BB3", var_0.owner );
    var_0.playersdebuffed = [];
    var_0.juggdroplocations = 0;
    var_0 scripts\cp_mp\emp_debuff::set_apply_emp_callback( ::decoy_empapplied );
    var_0 scripts\cp_mp\emp_debuff::allow_emp( 0 );
    decoy_addtogloballist( var_0 );
    thread scripts\mp\weapons::monitordisownedgrenade( self, var_0 );
    wait 0.4;
    var_0 scripts\cp_mp\emp_debuff::allow_emp( 1 );
    var_0 thread scripts\mp\damage::monitordamage( 19, "_encstr_8CFB0986B4E856B8EA960E", ::decoy_handlefataldamage, ::decoy_handledamage );
    var_0 thread decoy_monitorposition();
    wait 0.6;
    var_1 = gettime() + 5000;
    var_2 = gettime();
    var_3 = 3;

    while ( gettime() < var_1 )
    {
        if ( gettime() >= var_2 )
        {
            var_2 = gettime() + 200.0;

            if ( var_0 decoy_isonground() )
            {
                var_3--;

                if ( var_3 == 0 )
                    break;
            }
            else
                var_3 = 3;
        }

        wait 0.2;
    }

    var_0 thread decoy_monitorfuse();
    var_0 thread decoy_activated();
}

decoy_activated()
{
    self endon( "_encstr_A3750609A5E61883" );
    self setotherent( self.owner );
    self setscriptablepartstate( "_encstr_82380726952CB17B73", "_encstr_B30B07E216CBFFC4C2", 0 );
    var_0 = decoy_getfiretype();

    for (;;)
    {
        decoy_firesequence( var_0 );
        wait( randomfloatrange( 1.5, 3.5 ) );
    }
}

decoy_destroy()
{
    self setscriptablepartstate( "_encstr_A6CB08A5FD5713457D3B", "_encstr_B30B07E216CBFFC4C2", 0 );
    self setscriptablepartstate( "_encstr_82380726952CB17B73", "_encstr_9BA4080D39CFFB5AB7C1", 0 );
    thread decoy_delete( 0.1 );
}

decoy_delete( var_0 )
{
    if ( !isdefined( var_0 ) )
        var_0 = 0;

    self notify( "_encstr_A3750609A5E61883" );
    self.exploding = 1;
    decoy_removefromgloballist( self getentitynumber() );
    scripts\mp\damage::monitordamageend();
    wait( var_0 );
    self delete();
}

decoy_firesequence( var_0 )
{
    var_1 = decoy_getleveldata();
    var_2 = 1 + randomint( var_1.firemaxcounts[var_0] );

    for (;;)
    {
        var_2--;
        decoy_fireevent( var_0 );

        if ( var_2 == 0 )
            break;

        wait( randomfloatrange( var_1.fireintervalmintimes[var_0], var_1.fireintervalmaxtimes[var_0] ) );
    }
}

decoy_fireevent( var_0 )
{
    var_1 = decoy_getvelocity();
    var_2 = decoy_getfireeventangles( var_1 );
    var_3 = decoy_getfireeventimpulse( var_1, var_0, var_2 );
    var_4 = self.owner getheldoffhand();

    if ( !isdefined( var_4 ) || var_4.basename != "_encstr_A24A10B6DA889F713C522A18E8157A0F7580" )
        self.owner scripts\mp\utility\weapon::_launchgrenade( "_encstr_BE8B1123B28DF6BCFAB3932BDC0B1959BEB538", self.origin, var_3, 100, 1, self );

    self setcandamage( 1 );
    self setscriptablepartstate( "_encstr_82380726952CB17B73", "_encstr_B30B07E216CBFFC4C2", 0 );
    self setscriptablepartstate( "_encstr_ABBD0B8FF7725F101EE750CBD7", var_0 + "_encstr_8078057F5B15A2", 0 );
    self setscriptablepartstate( "_encstr_B1980D0B371FBB9870FE306B2BB9CB", var_0 + "_encstr_8078057F5B15A2", 0 );
    pinglocationenemyteams( self.origin, self.team, self.owner );
    decoy_debuffenemiesinrange();
    var_5 = decoy_getleveldata();
    wait( var_5.firetimes[var_0] );
}

decoy_debuffenemiesinrange()
{
    var_0 = decoy_getleveldata();
    var_1 = scripts\common\utility::playersincylinder( self.origin, 800 );
    var_2 = 0;

    if ( getdvarint( "_encstr_BEEB1E180FF296B122B6D0E38168E5DE49AB6880378709732ADF4DE76532C741", 1 ) == 1 )
    {
        if ( scripts\mp\utility\game::unset_relic_grounded() )
            var_2 = 1;
    }

    foreach ( var_4 in var_1 )
    {
        if ( !var_4 scripts\cp_mp\utility\player_utility::_isalive() )
            continue;

        if ( !istrue( scripts\cp_mp\utility\player_utility::playersareenemies( self.owner, var_4 ) ) )
            continue;

        thread decoy_debuffenemy( var_4 );

        if ( var_2 )
        {
            var_5 = randomintrange( var_0.light_tank_watchmissileinputchange, var_0.light_tank_watchgameend );

            if ( var_5 == 1 )
                thread jugg_watchherodrop( var_4 );
        }

        self.owner scripts\mp\damage::combatrecordtacticalstat( "_encstr_AA0E0C2B2ED5B4C1D732CA1BB75E" );
        self.owner scripts\mp\utility\stats::incpersstat( "_encstr_95960A19AC8DDBBC21968E6E", 1 );
    }
}

decoy_debuffenemy( var_0 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_A3750609A5E61883" );
    var_1 = self.owner;
    var_1 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self notify( "_encstr_8FC213B7476E659B7F13BFB9A57B093F521B207AE7" + var_0 getentitynumber() );
    self endon( "_encstr_8FC213B7476E659B7F13BFB9A57B093F521B207AE7" + var_0 getentitynumber() );

    if ( !isdefined( self.playersdebuffed[var_0 getentitynumber()] ) )
        self.playersdebuffed[var_0 getentitynumber()] = var_0;

    var_2 = var_0 scripts\engine\utility::waittill_notify_or_timeout_return( "_encstr_A3750609A5E61883", 5 );
    self.playersdebuffed[var_0 getentitynumber()] = undefined;

    if ( isdefined( var_0.lastkilledby ) && var_0.lastkilledby != var_1 )
    {
        if ( var_2 == "_encstr_A3750609A5E61883" && scripts\cp_mp\utility\player_utility::playersareenemies( var_0, var_1 ) )
        {
            if ( self.juggdroplocations < 3 )
            {
                var_1 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_B2820D1E2BD8290B0D8FBBB7DFB893" );
                self.juggdroplocations++;
            }
        }
    }
}

jugg_watchherodrop( var_0 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_A3750609A5E61883" );
    var_1 = self.owner;
    var_2 = self.origin;
    var_1 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_97C10C6CB09B47AF332C5AD8AC91" );
    var_3 = physics_createcontents( [ "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_941116D7F47B0FC88317C8B07BCC017DD35AD8D44D52D773", "_encstr_A18816F8C3E1EFFCFF5A92BF8363BBF55BCBD9C3538DF74D", "_encstr_B7F9145B18AB8AF721FE235718AB8F95E96811E39843", "_encstr_9DD6156A78B803FAD687D7EF95056246B86329B453E0D5", "_encstr_B7D018B89C4B13AC473342305523920D607E50E3571038A69138" ] );
    var_4 = var_2;
    var_5 = var_0 geteye();
    var_6 = physics_raycast( var_4, var_5, var_3, undefined, 0, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3", 1 );

    if ( isdefined( var_6 ) && var_6.size > 0 )
        self notify( "_encstr_97C10C6CB09B47AF332C5AD8AC91" );

    var_0 playsoundtoplayer( "_encstr_9C9A1D223FD87A275499078DDE28D1B634793DB3DBD9290AB29A871FF39CB0", var_0 );
    var_0.donotmodifydamage = 1;
    var_0 dodamage( 1, var_2, self );
    var_0.donotmodifydamage = undefined;
}

decoy_monitorposition()
{
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        var_0 = self.origin;
        waitframe();
        self.oldposition = var_0;
    }
}

decoy_monitorfuse()
{
    self endon( "_encstr_A3750609A5E61883" );
    wait 15;
    thread decoy_destroy();
}

decoy_empapplied( var_0 )
{
    var_0.victim decoy_givepointsfordestroy( var_0.attacker );
    var_0.victim thread decoy_destroy();
}

decoy_handledamage( var_0 )
{
    scripts\mp\weapons::equipmenthit( self.owner, var_0.attacker, var_0.objweapon, var_0.meansofdeath );
    return var_0.damage;
}

decoy_handlefataldamage( var_0 )
{
    decoy_givepointsfordestroy( var_0.attacker, var_0.objweapon );
    thread decoy_destroy();
}

decoy_getfiretype()
{
    var_1 = 0;
    var_2 = [];
    var_3 = decoy_getleveldata();

    for ( var_4 = 0; var_4 < var_3.firetypes.size; var_4++ )
    {
        var_5 = var_3.firetypes[var_4];
        var_1 = var_1 + var_3.firetypeweights[var_5];
        var_2[var_4] = var_1;
    }

    var_6 = randomint( var_1 );

    for ( var_4 = 0; var_4 < var_2.size; var_4++ )
    {
        if ( var_6 < var_2[var_4] )
            return var_3.firetypes[var_4];
    }

    return undefined;
}

decoy_getvelocity()
{
    if ( !isdefined( self.oldposition ) )
        return undefined;

    return ( self.origin - self.oldposition ) / level.framedurationseconds;
}

decoy_getfireeventangles( var_0 )
{
    var_1 = undefined;

    if ( !isdefined( var_0 ) )
        var_1 = ( 0, randomint( 360 ), 0 );
    else if ( var_0 * ( 1, 1, 0 ) == ( 0, 0, 0 ) )
        var_1 = ( 0, randomint( 360 ), 0 );
    else if ( randomint( 100 ) < 20 )
        var_1 = ( 0, randomint( 360 ), 0 );
    else
    {
        var_1 = vectortoangles( var_0 * ( 1, 1, 0 ) );
        var_2 = angleclamp180( var_1[1] );
        var_2 = var_2 + angleclamp( -30.0 + randomint( 61 ) );
        var_1 = ( var_1[0], var_2, var_1[2] );
    }

    return var_1;
}

decoy_getfireeventimpulse( var_0, var_1, var_2 )
{
    var_3 = decoy_getleveldata();
    var_4 = var_0;
    var_4 = var_4 + anglestoup( var_2 ) * randomfloatrange( var_3.fireminupimpulse[var_1], var_3.firemaxupimpulse[var_1] );
    var_4 = var_4 + anglestoforward( var_2 ) * randomfloatrange( var_3.fireminforwardimpulse[var_1], var_3.firemaxforwardimpulse[var_1] );
    return var_4;
}

decoy_isonground()
{
    var_0 = decoy_getvelocity();

    if ( !isdefined( var_0 ) || abs( var_0[2] ) <= 200 )
    {
        if ( decoy_isongroundraycastonly() )
            return 1;
    }

    return 0;
}

decoy_isongroundraycastonly()
{
    var_0 = scripts\engine\trace::create_contents( 0, 1, 0, 0, 1, 1 );
    var_1 = self.origin + ( 0, 0, 1 );
    var_2 = var_1 + ( 0, 0, -5 );
    var_3 = physics_raycast( var_1, var_2, var_0, self, 0, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3", 1 );

    if ( isdefined( var_3 ) && var_3.size > 0 )
        return 1;

    return 0;
}

decoy_givepointsfordestroy( var_0, var_1 )
{
    if ( isdefined( var_0 ) && istrue( scripts\cp_mp\utility\player_utility::playersareenemies( self.owner, var_0 ) ) )
    {
        var_0 notify( "_encstr_B6BB140AE56FC14D7781B0FDAF0869F3E818D827BDEB" );
        var_0 scripts\mp\killstreaks\killstreaks::givescoreforequipment( self, var_1 );
    }
}

decoy_addtogloballist( var_0 )
{
    level.decoygrenades[var_0 getentitynumber()] = var_0;
}

decoy_removefromgloballist( var_0 )
{
    level.decoygrenades[var_0] = undefined;
}

decoy_getleveldata()
{
    return level.decoygrenadedata;
}
