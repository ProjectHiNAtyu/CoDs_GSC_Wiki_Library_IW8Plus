// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.killcam = scripts\mp\tweakables::gettweakablevalue( "_encstr_A47205E8C28D13", "_encstr_87820D16C636B7DDDA2D8D8D1B0B6B" );
    level.killcammiscitems = [];
    var_0 = 0;

    for (;;)
    {
        var_1 = tablelookupbyrow( "_encstr_9CCA18FAA8400BC127413C8839B17888E8791D0357685DF776B3", var_0, 0 );

        if ( !isdefined( var_1 ) || var_1 == "_encstr_A40101" )
            break;

        var_1 = int( var_1 );
        var_2 = tablelookupbyrow( "_encstr_9CCA18FAA8400BC127413C8839B17888E8791D0357685DF776B3", var_0, 1 );

        if ( !isdefined( var_2 ) || var_2 == "_encstr_A40101" )
            break;

        level.killcammiscitems[var_2] = var_1;
        var_0++;
    }
}

setcinematiccamerastyle( var_0, var_1, var_2 )
{
    self setclientomnvar( "_encstr_9D590F7A4093918F51855E4DB0D88FA53B", var_0 );
    self setclientomnvar( "_encstr_A4490FC60BADFA9B8D2BB9B2D71B568519", var_1 );
    self setclientomnvar( "_encstr_98C2126C165BBEE66C59E6CAFA9BAB83E0DE4E8E", var_2 );
}

getkillcamentity( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_0 ) || !isdefined( var_1 ) || var_0 == var_1 && !isagent( var_0 ) )
        return undefined;

    if ( usesattackeraskillcamentity( var_0, var_1, var_2, var_3 ) )
        return undefined;

    if ( usesvehiclekillcamentityrelay( var_0, var_1, var_2, var_3 ) )
        return var_1.killcament;

    switch ( var_2.basename )
    {
        case "_encstr_AFBA14092006870A86451DA87EC4DB9816D55C27AF63":
        case "_encstr_A1BF1ABFE8D2D9CBDB2E2098B3A358B74DDCC8A337103A8FDC012777":
        case "_encstr_A25A129AC0532D3F8090C7C7BE29AB7393A99233":
        case "_encstr_937E0D942BC0E4D33D21F2AACE99FB":
        case "_encstr_A94A0D78FB84010E5F99C04D57A713":
        case "_encstr_8FDF12C87A135BDBE7CA1595E70383077C016890":
        case "_encstr_9DF00DF37BD0E2716F3B8BC7086BBB":
        case "_encstr_A226180E1B852F2BC9AF474E7B83A15ED7CD2FCDE8AC6BD7B5E0":
        case "_encstr_9FEA0A4BD5D8EB085A26CB99":
            return scripts\engine\utility::ter_op( isdefined( var_1.killcament ), var_1.killcament, var_1 );
        case "_encstr_9EDB195BB8D8784731B31367338BC37F23EDCBE9674807CA777DF3":
        case "_encstr_8C9408280B84AB8EDF70":
        case "_encstr_8C950D507B43B3E8DB154EC3D72793":
        case "_encstr_9EE70DD1EDD62CAF0739B735EBDAE0":
        case "_encstr_AABA05236DC831":
            if ( isnoneweaponinflictor( var_1 ) || isenvironmentalinflictor( var_1 ) )
                return var_1.killcament;

            break;
    }

    if ( scripts\common\utility::isdestructibleweapon( var_2.basename ) || scripts\mp\utility\weapon::isbombsiteweapon( var_2.basename ) )
    {
        if ( isdefined( var_1.killcament ) && !var_0 scripts\mp\utility\killstreak::attackerinremotekillstreak() )
            return var_1.killcament;
        else
            return undefined;
    }

    return var_1;
}

usesattackeraskillcamentity( var_0, var_1, var_2, var_3 )
{
    switch ( var_2.basename )
    {
        case "_encstr_AFDA1189BAC9B09BE2C729231BFB55505F5513":
        case "_encstr_9D0C1A1308FB038F1AA0706D4380779AA97259AB08A13E9F30887D88":
        case "_encstr_809F1CACDABD23B53B63E7D6D9BAC830D7F371A63725693728F092DE7769":
        case "_encstr_81A016808F759BDB8BD1CE40F5A367A3B003A808232FF0A9":
        case "_encstr_959C18471AAC9CDA964759D713DEB13A7DE4B0C8B45D6EF55B83":
        case "_encstr_8BE517231BD6198F48100116E928C0522637CFABE77F225390":
        case "_encstr_A84016F5ED8DE7CFA8CD71C813F19077AFA377C5D7B2DAC2":
        case "_encstr_81A00EB8CF6AFEDF5B9D50C6F31103C3":
        case "_encstr_8FE016E09A157BB92BFF9D15CA0B61313192601892E19353":
        case "_encstr_80F90E9B3B1ACA5737679B98FA5FA188":
        case "_encstr_80710E6E59BA032F8849DAA7D3502298":
        case "_encstr_9BBC0FD39F078E9A7F6A2B936525A9E96B":
        case "_encstr_8ACB0F82FB0D1F62E877A0AA3FB821B737":
        case "_encstr_B9740F0B070B36D02BAF0EC9BDA6FADA83":
        case "_encstr_AA9E139F78F82C0A91C8702DCB5FC291AB72B76F68":
        case "_encstr_A45E1539B897587167FB1946232F3BD82F59393B677D90":
        case "_encstr_808E0F48828D317103B7DE406CDBFEFB32":
        case "_encstr_BA3B11C0E23F8DC0D70CCD28F2272859691A58":
        case "_encstr_BD210F0B8F2BAFA3521E311DD50BB6AD11":
        case "_encstr_B8C015E3F7CF776B6DD38B0391D6551D4ACE31CB3932F0":
        case "_encstr_B1BE1CD15DE4EBEC5DDCEBB12DD1471BCAAF13B427917D1BAC9947EBAD83":
        case "_encstr_A6651DBBC0232F02934851952349EBD469296B579099771B83D4648BAF13E3":
        case "_encstr_9C0714B33209A4637C0E1298498B170876C22FCEBF23":
        case "_encstr_B2D91198828F3BA81B612527B7C378FEC77A93":
            return 1;
    }

    return 0;
}

usesvehiclekillcamentityrelay( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_1 ) )
        return 0;

    if ( !var_1 scripts\cp_mp\vehicles\vehicle::isvehicle() )
        return 0;

    switch ( var_3 )
    {
        case "_encstr_9E0B13A801F1A16F27C52E196DED47FA817110C1A1":
        case "_encstr_A11B0CBD04C9B790F653EBCF4915":
        case "_encstr_BA3916099077D7673B375A25D3CB8C29EF394169385E873C":
        case "_encstr_81670F602F2B4957763C758D38D1FF6C3B":
            return 1;
        default:
            return 0;
    }
}

setkillcamerastyle( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_5.camerastyle = "_encstr_8AC708E3780203657815";

    if ( isdefined( var_1 ) && isdefined( var_1.agent_type ) )
    {
        setcinematiccamerastyle( "_encstr_9C450E18C03A5DF087F7B777425DEE4B", var_0 getentitynumber(), var_3 getentitynumber() );
        var_5.camerastyle = "_encstr_9C450E18C03A5DF087F7B777425DEE4B";
        return 1;
    }
    else if ( isdefined( var_6 ) && isdefined( var_6.basename ) )
    {
        if ( var_6.basename == "_encstr_B49E11E04B3E3B0B70DF2B8D3E2D1FCB59AD88" || var_6.basename == "_encstr_B370197F0BF093A1D85EB3FBD393ED3BC081D7A7E9A81A9C1960AA" || var_6.basename == "_encstr_BAC319EB0396CF6F101D97A01B28F547B799D1730BEDE7A46973B0" )
            return 1;
    }
    else if ( var_4 > 0 )
    {
        setcinematiccamerastyle( "_encstr_8AC708E3780203657815", -1, -1 );
        return 0;
    }
    else
    {
        setcinematiccamerastyle( "_encstr_8AC708E3780203657815", -1, -1 );
        return 0;
    }

    return 0;
}

trimkillcamtime( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = var_2 + var_3;

    if ( isdefined( var_5 ) && var_6 > var_5 )
    {
        if ( var_5 < 2 )
            return;

        if ( var_5 - var_2 >= 1 )
            var_3 = var_5 - var_2;
        else
        {
            var_3 = 1;
            var_2 = var_5 - 1;
        }

        var_6 = var_2 + var_3;
    }

    var_7 = var_2 + var_4;

    if ( isdefined( var_0 ) && isdefined( var_0.lastspawntime ) )
        var_8 = var_0.lastspawntime;
    else
    {
        var_8 = var_1.lastspawntime;

        if ( isdefined( var_1.deathtime ) )
        {
            if ( gettime() - var_1.deathtime < var_3 * 1000.0 )
            {
                var_3 = 1.0;
                var_3 = var_3 - level.framedurationseconds;
                var_6 = var_2 + var_3;
            }
        }
    }

    var_9 = ( gettime() - var_8 ) / 1000.0;

    if ( var_7 > var_9 && var_9 > var_4 )
    {
        var_10 = var_9 - var_4;

        if ( var_2 > var_10 )
        {
            var_2 = var_10;
            var_6 = var_2 + var_3;
            var_7 = var_2 + var_4;
        }
    }

    var_11 = spawnstruct();
    var_11.camtime = var_2;
    var_11.postdelay = var_3;
    var_11.killcamlength = var_6;
    var_11.killcamoffset = var_7;
    return var_11;
}

prekillcamnotify( var_0 )
{
    if ( isdefined( var_0 ) && !isagent( var_0 ) )
    {
        var_1 = [];

        if ( isdefined( self.class ) && isdefined( self.classstruct ) )
        {
            var_2 = scripts\mp\playerlogic::getplayerassets( self.classstruct );
            var_1[var_1.size] = var_2;
        }

        if ( isdefined( var_0.class ) && isdefined( var_0.classstruct ) )
        {
            var_3 = scripts\mp\playerlogic::getplayerassets( var_0.classstruct );
            var_1[var_1.size] = var_3;
        }

        if ( var_1.size > 0 )
            scripts\mp\playerlogic::loadplayerassets( var_1, 1 );

        self predictstreampos( var_0 geteye(), 1 );
        self loadcustomizationplayerview( var_0 );
    }
}

makekillcamdata( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15 )
{
    var_16 = spawnstruct();
    var_16.einflictor = var_0;
    var_16.inflictoragentinfo = var_1;
    var_16.attackernum = var_2;
    var_16.killcamentityindex = var_3;
    var_16.killcamentitystarttime = var_4;
    var_16.killcamlookatentityindex = var_5;
    var_16.killcamentstickstolookatent = var_6;
    var_16.objweapon = var_7;
    var_16.offsettime = var_8;
    var_16.maxtime = var_9;
    var_16.attacker = var_10;
    var_16.victim = var_11;
    var_16.smeansofdeath = var_12;
    var_16.attackerloadoutperks = var_13;
    var_16.skippable = var_14;
    var_16.doslowmo = var_15;

    if ( var_12 == "_encstr_87230ED5301DEFDF39A94821C9F38573" )
        var_16.executionref = scripts\cp_mp\execution::execution_getrefbyplayer( var_10 );

    return var_16;
}

dokillcamfromstruct( var_0, var_1, var_2, var_3 )
{
    killcam( var_0.einflictor, var_0.inflictoragentinfo, var_0.attackernum, var_0.killcamentityindex, var_0.killcamentitystarttime, var_0.killcamlookatentityindex, var_0.killcamentstickstolookatent, var_0.objweapon, var_1, var_0.offsettime, var_2, var_0.maxtime, var_0.attacker, var_0.victim, var_0.smeansofdeath, var_0.attackerloadoutperks, var_0.skippable, var_0.doslowmo, var_3 );
}

calckillcamtimes( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 )
{
    if ( getdvar( "_encstr_B86111DF685E016F706A752769F007E5B812D8" ) == "_encstr_A40101" )
    {
        if ( level.showingfinalkillcam )
        {
            if ( var_10 == "_encstr_87230ED5301DEFDF39A94821C9F38573" )
                var_11 = 4.0;
            else if ( scripts\mp\utility\game::getgametype() == "_encstr_9DB606854E567385" )
            {
                if ( isdefined( var_2.recentkillcount ) && var_2.recentkillcount > 1 )
                    var_11 = 4.0 + level.maxkillcamdelay - var_9;
                else
                    var_11 = 1.5 + level.maxkillcamdelay - var_9;
            }
            else
                var_11 = 4.0 + level.maxkillcamdelay - var_9;
        }
        else if ( var_7.basename == "_encstr_8C950D507B43B3E8DB154EC3D72793" )
            var_11 = 2.25;
        else if ( var_7.basename == "_encstr_8FDF12C87A135BDBE7CA1595E70383077C016890" )
            var_11 = 3.0;
        else if ( var_7.basename == "_encstr_AFBA14092006870A86451DA87EC4DB9816D55C27AF63" || var_7.basename == "_encstr_A1BF1ABFE8D2D9CBDB2E2098B3A358B74DDCC8A337103A8FDC012777" )
            var_11 = 1.5;
        else if ( var_7.basename == "_encstr_9EE70DD1EDD62CAF0739B735EBDAE0" )
            var_11 = 2.5;
        else if ( var_7.basename == "_encstr_8ACB0F82FB0D1F62E877A0AA3FB821B737" )
            var_11 = 3.0;
        else if ( var_7.basename == "_encstr_8A270BE4CF6DD2E4A0E0E71728" )
            var_11 = 8;
        else if ( issubstr( var_7.basename, "_encstr_95C60F27CAD6EDA32BB5B4CD9B96B159EB" ) )
            var_11 = 5;
        else if ( isdefined( var_0.sentrytype ) && var_0.sentrytype == "_encstr_A9EE0CB557D83A968EEA39C9AC8E" )
            var_11 = 2.0;
        else if ( !var_8 || var_8 > 5.0 )
            var_11 = 5.0;
        else if ( var_7.basename == "_encstr_A24A10B6DA889F713C522A18E8157A0F7580" || var_7.basename == "_encstr_AA7B168CB247297717F3F090FAEFCBE6D740807E2C17D071" || var_7.basename == "_encstr_9FA70ADF38B86C4AD188752A" || var_7.basename == "_encstr_B7CC0EBBDF41F3AF2B0353305DE91231" || var_7.basename == "_encstr_87431168320B85B02AEF4F71FD95E0D8178A43" || var_7.basename == "_encstr_B692132A78F3CAC3A13E5F9FD64963960998514283" )
            var_11 = 4.25;
        else
            var_11 = 2.5;
    }
    else
        var_11 = getdvarfloat( "_encstr_B86111DF685E016F706A752769F007E5B812D8" );

    if ( isdefined( var_5 ) )
    {
        if ( var_11 > var_5 )
            var_11 = var_5;

        if ( var_11 < level.framedurationseconds )
            var_11 = level.framedurationseconds;
    }

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9DB606854E567385" )
    {
        var_12 = 1;

        if ( var_10 == "_encstr_87230ED5301DEFDF39A94821C9F38573" )
            var_12 = 3.0;
    }
    else if ( getdvar( "_encstr_ABD41508A20A27F007C49906A17F3E0135CBA8B8BA659B" ) == "_encstr_A40101" )
        var_12 = 2;
    else
    {
        var_12 = getdvarfloat( "_encstr_ABD41508A20A27F007C49906A17F3E0135CBA8B8BA659B" );

        if ( var_12 < level.framedurationseconds )
            var_12 = level.framedurationseconds;
    }

    if ( var_3 < 0 || !isdefined( var_2 ) )
        return undefined;

    if ( isagent( var_2 ) || isagent( var_0 ) )
        var_3 = var_4 getentitynumber();

    var_13 = trimkillcamtime( var_1, var_2, var_11, var_12, var_6, var_5 );

    if ( !isdefined( var_13 ) )
        return undefined;

    return var_13;
}

setkilledbyuiomnvar( var_0 )
{
    self setclientomnvar( "_encstr_9B1C17D52DAF6D5A1B8D1B0B5BAFB6B48D1B958C265EFAB446", var_0 getentitynumber() );
}

setkillcamuitimer( var_0 )
{
    self setclientomnvar( "_encstr_B94D1C2BA969E003036AC9B142F7CD737F0793EB440D48564FF240583AAF", int( var_0 * 1000 ) + gettime() );
}

setupkillcamui( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( isplayer( var_0 ) )
    {
        setkilledbyuiomnvar( var_0 );
        self setclientomnvar( "_encstr_B30D150B32DF2AD08DFC4F4315B9D0E3C77B2DB0F95FD5", var_1 getentitynumber() );
        self loadcustomizationplayerview( var_0 );
    }

    if ( scripts\mp\utility\weapon::iskillstreakweapon( var_2.basename ) )
        setkillcamkillstreaktypeomnvars( var_2 );
    else if ( istrue( level.allowperks ) )
        scripts\mp\perks\perks::setomnvarsforperklist( "_encstr_BEB119ABD8099B7AD1395757131002C1F88D277711806723BD1D4F", var_5 );

    var_6 = getdvarint( "_encstr_B77818E6369CEBE06358BC569CF533BD4E6C95C995371CB0DD37" );

    if ( var_4 && !level.gameended || isdefined( self ) && !level.gameended || var_6 == 0 && !level.gameended )
        self setclientomnvar( "_encstr_B4E71003EBDFD201E010F707E07ED4FA49FD", "_encstr_891805CDDAD238" );
    else if ( !level.gameended )
        self setclientomnvar( "_encstr_B4E71003EBDFD201E010F707E07ED4FA49FD", "_encstr_8C0A08272BCDC1C2BBDC" );
    else
        self setclientomnvar( "_encstr_B4E71003EBDFD201E010F707E07ED4FA49FD", "_encstr_AABA05236DC831" );

    setkillcamuitimer( var_3.killcamlength );
}

beginarchiveplayback( var_0, var_1, var_2, var_3 )
{
    scripts\mp\utility\player::updatesessionstate( "_encstr_A68C0A5803A5D151A2B310A6" );
    self.spectatekillcam = 1;
    self.forcespectatorclient = var_0;
    self.killcamentity = -1;
    self.archivetime = var_1;
    self.killcamlength = var_2;
    self.psoffsettime = var_3;
    self allowspectateteam( "_encstr_B287095B250DEAD4C8407C", 1 );
    self allowspectateteam( "_encstr_AABA05236DC831", 1 );

    foreach ( var_5 in level.teamnamelist )
        self allowspectateteam( var_5, 1 );
}

checkkillcamtruncation( var_0 )
{
    if ( self.archivetime + 0.015 < var_0 )
    {
        var_1 = var_0 - self.archivetime;

        if ( game["_encstr_A6851355F23BB509018B78683F532DF9D2DE47510A"] < 32 )
            game["_encstr_A6851355F23BB509018B78683F532DF9D2DE47510A"]++;
    }
}

queueforkillcam()
{
    level.numplayerswaitingtoenterkillcam++;
    var_0 = 1;

    if ( istrue( level.showingfinalkillcam ) && scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
        var_0 = 5;

    var_1 = level.framedurationseconds * int( floor( ( level.numplayerswaitingtoenterkillcam - 1 ) / var_0 ) );
    level.maxkillcamdelay = var_1;

    if ( var_1 > 0 )
        wait( var_1 );

    waitframe();
    level.numplayerswaitingtoenterkillcam--;
    return var_1;
}

killcam( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17, var_18 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_983508635BE787C548A1" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\mp\utility\player::_id_12898( "_encstr_8F11192A010405C65E353A428794DCBCB9F2EAAB41A209C1D68773" );
    resetplayeromnvarsonkillcam();

    if ( var_2 < 0 || !isdefined( var_12 ) )
    {
        self notify( "_encstr_9E8F11FA39E3D89F06B291686A1D57311BDDF5" );

        if ( istrue( var_18 ) )
            self setclientomnvar( "_encstr_8B2210E19A4A03D75761D81DF7B06370DD98", 1 );

        return;
    }

    var_19 = queueforkillcam();
    var_20 = calckillcamtimes( var_0, var_1, var_12, var_2, var_13, var_11, var_8, var_7, var_10, var_19, var_14 );

    if ( !isdefined( var_20 ) )
    {
        self notify( "_encstr_9E8F11FA39E3D89F06B291686A1D57311BDDF5" );

        if ( istrue( var_18 ) )
            self setclientomnvar( "_encstr_8B2210E19A4A03D75761D81DF7B06370DD98", 1 );

        return;
    }

    setupkillcamui( var_12, var_13, var_7, var_20, var_10, var_15 );

    if ( isplayer( var_12 ) )
        self loadcustomizationplayerview( var_12 );

    beginarchiveplayback( var_2, var_20.killcamoffset, var_20.killcamlength, var_9 );
    var_21 = setkillcamerastyle( var_0, var_1, var_2, var_13, var_3, var_20, var_7 );

    if ( !var_21 )
        thread setkillcamentity( var_3, var_20.killcamoffset, var_4, var_5, var_6 );

    thread endedkillcamcleanup( var_18 );
    waitframe();

    if ( !isdefined( self ) )
        return;

    checkkillcamtruncation( var_20.killcamoffset );
    var_20.camtime = self.archivetime - level.framedurationseconds - var_8;
    var_20.killcamlength = var_20.camtime + var_20.postdelay;
    self.killcamlength = var_20.killcamlength;

    if ( var_20.camtime <= 0 )
    {
        killcamcleanup( 1, undefined, var_18 );
        return;
    }

    self.killcam = 1;
    thread spawnedkillcamcleanup( var_18 );

    if ( istrue( var_17 ) )
        thread dokillcamslowmo( var_20.camtime );

    if ( !isdefined( var_16 ) || var_16 )
    {
        thread waitskipkillcambutton( var_10 );
        thread waitskipkillcamkbm();
    }

    if ( istrue( var_18 ) )
        thread scripts\mp\final_killcam::play_patrol_sequence_based_on_first_vehicle();

    thread endkillcamifnothingtoshow();

    if ( !isbot( self ) )
        thread _id_12C7F();

    self.killcamwatchtime = gettime();
    waittillkillcamover();
    self.killcamwatchtime = ( gettime() - self.killcamwatchtime ) / 1000;
    scripts\mp\utility\stats::incpersstat( "_encstr_9B5515D599475957A64310508ABDFF54EF3451C6E92FC3", self.killcamwatchtime );
    killcamcleanup( 1, undefined, var_18 );
    scripts\mp\utility\player::_id_12898( "_encstr_9F331C62B16B5027BE3A222AB254C1A8BF21F94B5902FD37EDD189295967" );
}

_id_12C7F()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    scripts\engine\utility::_id_143BA( 0.15, "_encstr_9E8F11FA39E3D89F06B291686A1D57311BDDF5", "_encstr_983508635BE787C548A1" );
    self clearpredictedstreampos();

    if ( istrue( level.showingfinalkillcam ) )
        scripts\mp\gamelogic::_id_1284E();
}

setuppotgui( var_0, var_1 )
{
    setkilledbyuiomnvar( var_0 );
    setkillcamuitimer( var_1 );
}

potg_killcam( var_0, var_1, var_2, var_3 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    prekillcamnotify( var_0 );
    resetplayeromnvarsonkillcam();
    var_4 = var_0 getentitynumber();
    queueforkillcam();

    if ( isplayer( var_0 ) )
        self loadcustomizationplayerview( var_0 );

    var_5 = gettime();
    var_6 = ( var_5 - var_2 ) / 1000.0;
    var_7 = ( var_5 - var_3 ) / 1000.0;
    var_8 = ( var_3 - var_2 ) / 1000.0;
    setuppotgui( var_0, var_8 );
    self.archiveusepotg = 1;
    beginarchiveplayback( var_4, var_6, var_8, var_1 );
    waitframe();

    if ( !isdefined( self ) )
        return;

    checkkillcamtruncation( var_6 );
    self.killcamlength = self.archivetime - var_7;
    self.killcam = 1;
    self notify( "_encstr_8A860E4CB2EC4BE6F56D5A36368DC2DA" );
    waittillkillcamover();
    potgkillcamcleanup();
}

potgkillcamcleanup()
{
    self.killcam = undefined;
    scripts\mp\spectating::setspectatepermissions();
    scripts\mp\utility\player::updatesessionstate( "_encstr_816705F27BBF90" );
    scripts\mp\utility\player::clearkillcamstate();
    self notify( "_encstr_81BC0E4A1A88992FA7880170C027C711" );
}

dokillcamslowmo( var_0 )
{
    self endon( "_encstr_81BC0E4A1A88992FA7880170C027C711" );

    if ( isdefined( level.doingkillcamslowmo ) )
        return;

    level.doingkillcamslowmo = 1;
    var_1 = 0;
    var_2 = var_0;

    if ( var_2 > 1.0 )
    {
        var_2 = 1.0;
        var_1 = var_1 + 1.0;
        wait( var_0 - var_1 );
    }

    if ( !isdefined( level.vip_freeze_link ) )
    {
        createheadiconatorigin( "_encstr_891308B7094538E6D79A" );
        level.vip_freeze_link = 1;
    }

    setslowmotion( 1.0, 0.25, var_2 );
    wait( var_2 + 0.5 );
    setslowmotion( 0.25, 1, 1 );
    level.doingkillcamslowmo = undefined;
}

setkillcamnormalweaponomnvars( var_0, var_1, var_2, var_3 )
{
    if ( var_1 == "_encstr_87230ED5301DEFDF39A94821C9F38573" )
        setkillcamexecutiontypeomnvars( var_3 );
    else if ( !isdefined( var_0 ) || var_0.basename == "_encstr_AABA05236DC831" )
        clearkillcamattachmentomnvars();
    else
    {
        if ( isdefined( var_2.see_killstreak_dist ) )
        {
            var_4 = undefined;
            var_0 = var_2.see_killstreak_dist;
            var_2 = undefined;
        }
        else
            var_4 = scripts\mp\utility\weapon::getequipmenttype( var_0.basename );

        if ( isdefined( scripts\mp\supers::getsuperrefforsuperweapon( var_0 ) ) )
            setkillcamsupertypeomnvars( var_0 );
        else
        {
            if ( isdefined( var_4 ) && ( var_4 == "_encstr_9C1607D0071420D7AA" || var_4 == "_encstr_94C2099887BA24607BE134" ) )
            {
                setkillcamequipmenttypeomnvars( var_0 );
                return;
            }

            if ( isdefined( level.killcammiscitems[var_0.basename] ) )
            {
                setkillcammisctypeomnvars( level.killcammiscitems[var_0.basename] );
                return;
            }

            setkillcamweapontypeomnvars( var_0, var_2 );
        }
    }
}

waittillkillcamover()
{
    self endon( "_encstr_95730EC213DE4E3A7DB6D2D81B6C85DA" );
    scripts\mp\utility\player::_id_12898( "_encstr_B32C255292FA421612BFFA1ACCBF3824CB89A98451EBE009B1EB9598AC7ADABAF049BB4F399EB1" );
    wait( self.killcamlength - level.frameduration / 1000.0 );
    scripts\mp\utility\player::_id_12898( "_encstr_AB0628E79B7182233098A0A8F31861BBD5336373272B4A1478616DCDCBC0A2360339570783DF10F529CD" );
}

setkillcamentity( var_0, var_1, var_2, var_3, var_4 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_81BC0E4A1A88992FA7880170C027C711" );
    var_5 = gettime() - var_1 * 1000;

    if ( var_2 > var_5 )
    {
        waitframe();
        var_1 = self.archivetime;
        var_5 = gettime() - var_1 * 1000;

        if ( var_2 > var_5 )
            wait( ( var_2 - var_5 ) / 1000 );
    }

    self.killcamentity = var_0;

    if ( isdefined( var_3 ) )
        self.killcamentitylookat = var_3;

    if ( isdefined( var_4 ) )
        self setkillcamentstickstolookatent( var_4 );
}

waitskipkillcambutton( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_81BC0E4A1A88992FA7880170C027C711" );

    if ( !isai( self ) )
    {
        self notifyonplayercommand( "_encstr_931E0BD68DF593ACE60EC2DDCD", "_encstr_88410B02AB0E5F15AFB8A883DC" );
        self notifyonplayercommand( "_encstr_931E0BD68DF593ACE60EC2DDCD", "_encstr_A4C60AACB01B1DD2B3583A2B" );
        self waittill( "_encstr_931E0BD68DF593ACE60EC2DDCD" );
        scripts\mp\utility\stats::incpersstat( "_encstr_B36510DCB54B3838CA1996D2B1B136B0B5E6", 1 );
        scripts\mp\utility\player::_id_12898( "_encstr_80873152815B6037AE2AD2DA6346FBBB0F3BEB57CB37286116F290017B5B8990239043E7539FD0597EDA981A71BC0BCFB3656D" );
        self notify( "_encstr_95730EC213DE4E3A7DB6D2D81B6C85DA" );
    }
}

waitskipkillcamkbm()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_81BC0E4A1A88992FA7880170C027C711" );
    self endon( "_encstr_95730EC213DE4E3A7DB6D2D81B6C85DA" );

    while ( self usinggamepad() || !self jumpbuttonpressed() )
        waitframe();

    scripts\mp\utility\stats::incpersstat( "_encstr_B36510DCB54B3838CA1996D2B1B136B0B5E6", 1 );
    scripts\mp\utility\player::_id_12898( "_encstr_89B32EDAB436631B2CB51D1DEE0BD28E35B5D2C1B4D21B63D8855BA52453144901D2D236638D2CD6806A6952A0A02A22" );
    self notify( "_encstr_95730EC213DE4E3A7DB6D2D81B6C85DA" );
}

endkillcamifnothingtoshow()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_81BC0E4A1A88992FA7880170C027C711" );

    for (;;)
    {
        if ( self.archivetime <= 0 )
            break;

        waitframe();
    }

    scripts\mp\utility\player::_id_12898( "_encstr_BE1C35B5963663B10BB5A3E8593746B45A36B1D8855B923393DB1DA1B4DC9D8AEDD40DB7BB5092012DA51BC63658D608A9699214828A88" );
    self notify( "_encstr_95730EC213DE4E3A7DB6D2D81B6C85DA" );
}

spawnedkillcamcleanup( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_81BC0E4A1A88992FA7880170C027C711" );
    self waittill( "_encstr_983508635BE787C548A1" );
    killcamcleanup( 0, undefined, var_0 );
}

endedkillcamcleanup( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_81BC0E4A1A88992FA7880170C027C711" );
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    killcamcleanup( 1, 1, var_0 );
}

clearkillcamomnvars()
{
    clearkillcamkilledbyitemomnvars();
    self setclientomnvar( "_encstr_B94D1C2BA969E003036AC9B142F7CD737F0793EB440D48564FF240583AAF", 0 );
    self setclientomnvar( "_encstr_9B1C17D52DAF6D5A1B8D1B0B5BAFB6B48D1B958C265EFAB446", -1 );
    self setclientomnvar( "_encstr_B30D150B32DF2AD08DFC4F4315B9D0E3C77B2DB0F95FD5", -1 );
    self setclientomnvar( "_encstr_8F6424D3EA07C2387504A79B3D91609B93D2A979C23710C84DEF81EF4E4690534F4A0386DABB", -1 );
    self setclientomnvar( "_encstr_8A4722ABD8099B7AD1395757131002C1F88D277711806753BD3B23776D385B01D0081BB8", -1 );
    clearkillcamattachmentomnvars();

    for ( var_0 = 0; var_0 < 6; var_0++ )
        self setclientomnvar( "_encstr_BEB119ABD8099B7AD1395757131002C1F88D277711806723BD1D4F" + var_0, -1 );
}

killcamcleanup( var_0, var_1, var_2 )
{
    clearkillcamomnvars();
    self.killcam = undefined;
    setcinematiccamerastyle( "_encstr_8AC708E3780203657815", -1, -1 );
    scripts\mp\spectating::setspectatepermissions( var_1 );
    scripts\mp\utility\player::clearkillcamstate();

    if ( istrue( var_0 ) && !istrue( var_1 ) )
        scripts\mp\utility\player::updatesessionstate( "_encstr_816705F27BBF90" );

    self notify( "_encstr_81BC0E4A1A88992FA7880170C027C711" );

    if ( istrue( var_2 ) )
        self setclientomnvar( "_encstr_8B2210E19A4A03D75761D81DF7B06370DD98", 1 );
}

clearlootweaponomnvars()
{
    self setclientomnvar( "_encstr_8F6424D3EA07C2387504A79B3D91609B93D2A979C23710C84DEF81EF4E4690534F4A0386DABB", -1 );
    self setclientomnvar( "_encstr_8A4722ABD8099B7AD1395757131002C1F88D277711806753BD3B23776D385B01D0081BB8", -1 );
}

clearkillcamkilledbyitemomnvars()
{
    self setclientomnvar( "_encstr_9CCF1E8D6CC1E72D44931B18BF5F983B1AD50D9D061BC74824AF48F123A1B36B", -1 );
    self setclientomnvar( "_encstr_98751C15F4597F88CC2B888037276DB3925D85158E934FF0BC27F079CF34", -1 );
}

setkillcamkilledbyitemomnvars( var_0, var_1 )
{
    self setclientomnvar( "_encstr_9CCF1E8D6CC1E72D44931B18BF5F983B1AD50D9D061BC74824AF48F123A1B36B", var_0 );
    self setclientomnvar( "_encstr_98751C15F4597F88CC2B888037276DB3925D85158E934FF0BC27F079CF34", var_1 );
}

setkillcamweapontypeomnvars( var_0, var_1 )
{
    if ( isdefined( var_0._id_121D9 ) )
        var_0 = var_0._id_121D9;

    var_0 = scripts\mp\utility\weapon::mapweapon( var_0, var_1 );
    var_2 = scripts\mp\utility\weapon::getweaponrootname( var_0.basename );
    var_3 = tablelookuprownum( "_encstr_AD2712B507E5E61DC23A373AB04C8D56C5D8379D", 4, var_2 );
    self setclientomnvar( "_encstr_A381115DA5AF772B16C1DEE6EB1C96B1D6EA38", 0 );

    if ( !isdefined( var_3 ) || var_3 < 0 )
    {
        setkillcamkilledbyitemomnvars( -1, -1 );
        return;
    }

    var_4 = scripts\mp\loot::getlootinfoforweapon( var_0.basename, var_0.variantid );

    if ( isdefined( var_4 ) )
    {
        self setclientomnvar( "_encstr_8F6424D3EA07C2387504A79B3D91609B93D2A979C23710C84DEF81EF4E4690534F4A0386DABB", var_4.variantid );
        self setclientomnvar( "_encstr_8A4722ABD8099B7AD1395757131002C1F88D277711806753BD3B23776D385B01D0081BB8", var_4.quality - 1 );
    }
    else
    {
        self setclientomnvar( "_encstr_8F6424D3EA07C2387504A79B3D91609B93D2A979C23710C84DEF81EF4E4690534F4A0386DABB", -1 );
        self setclientomnvar( "_encstr_8A4722ABD8099B7AD1395757131002C1F88D277711806753BD3B23776D385B01D0081BB8", -1 );
    }

    self setclientomnvar( "_encstr_AA8F2935D4795FA8ECCB6860D7072093F23DA5356E736F53CD17F818F36F5B3BFBE4A5C389DAC77BB93348", gettime() );
    setkillcamkilledbyitemomnvars( 0, var_3 );

    if ( var_2 != "_encstr_8F610A500B9AD828F501AD93" )
    {
        var_5 = getweaponattachments( var_0 );

        if ( !isdefined( var_5 ) )
            var_5 = [];

        var_6 = 0;

        for ( var_7 = 0; var_7 < var_5.size; var_7++ )
        {
            var_8 = var_5[var_7];
            var_9 = scripts\mp\utility\weapon::attachmentmap_tobase( var_8 );

            if ( scripts\mp\utility\weapon::carriedpunchcard( var_2, var_9 ) )
            {
                if ( var_6 >= 8 )
                    break;

                var_10 = tablelookuprownum( "_encstr_823C29ABD9D82E59E0BF2153CF68E3D73B371BDBCBCF6FBB0D2A406BC7DBA3DFD2098B89596860154F1828", 0, var_8 );

                if ( isdefined( var_10 ) && var_10 >= 0 )
                {
                    self setclientomnvar( "_encstr_BE991F67F85ED32A19F1168E695742698078BFAB58722F9271959E06C3CB7A26EB" + ( var_6 + 1 ), var_10 );
                    var_6++;
                }
            }
        }

        for ( var_7 = var_6; var_7 < 8; var_7++ )
            self setclientomnvar( "_encstr_BE991F67F85ED32A19F1168E695742698078BFAB58722F9271959E06C3CB7A26EB" + ( var_7 + 1 ), -1 );
    }
}

setkillcamsupertypeomnvars( var_0 )
{
    var_1 = scripts\mp\supers::getsuperrefforsuperweapon( var_0 );
    var_2 = scripts\mp\supers::getsuperid( var_1 );
    setkillcamkilledbyitemomnvars( 2, var_2 );
    clearlootweaponomnvars();
    clearkillcamattachmentomnvars();
}

setkillcamkillstreaktypeomnvars( var_0 )
{
    var_1 = scripts\mp\utility\killstreak::getkillstreakindex( level.killstreakweaponmap[var_0.basename] );

    if ( isdefined( self.scorestreakvariantattackerinfo ) )
    {
        var_1 = self.scorestreakvariantattackerinfo.id;
        var_2 = self.scorestreakvariantattackerinfo.rarity;
        self setclientomnvar( "_encstr_9CCF1E8D6CC1E72D44931B18BF5F983B1AD50D9D061BC74824AF48F123A1B36B", 1 );
        self setclientomnvar( "_encstr_8F6424D3EA07C2387504A79B3D91609B93D2A979C23710C84DEF81EF4E4690534F4A0386DABB", var_1 );
        self setclientomnvar( "_encstr_8A4722ABD8099B7AD1395757131002C1F88D277711806753BD3B23776D385B01D0081BB8", var_2 - 1 );
    }
    else
    {
        setkillcamkilledbyitemomnvars( 1, var_1 );
        clearlootweaponomnvars();
    }

    clearkillcamattachmentomnvars();
}

setkillcamequipmenttypeomnvars( var_0 )
{
    var_1 = scripts\mp\equipment::getequipmentreffromweapon( var_0 );
    var_2 = scripts\mp\equipment::getequipmenttableinfo( var_1 );
    setkillcamkilledbyitemomnvars( 3, var_2.id );
    clearlootweaponomnvars();
    clearkillcamattachmentomnvars();
}

setkillcamexecutiontypeomnvars( var_0 )
{
    if ( !isdefined( var_0 ) )
        var_1 = 0;
    else
        var_1 = scripts\cp_mp\execution::execution_getidbyref( var_0 );

    setkillcamkilledbyitemomnvars( 4, var_1 );
    clearlootweaponomnvars();
    clearkillcamattachmentomnvars();
}

setkillcammisctypeomnvars( var_0 )
{
    setkillcamkilledbyitemomnvars( 5, var_0 );
    clearlootweaponomnvars();
    clearkillcamattachmentomnvars();
}

clearkillcamattachmentomnvars()
{
    for ( var_0 = 0; var_0 < 8; var_0++ )
        self setclientomnvar( "_encstr_BE991F67F85ED32A19F1168E695742698078BFAB58722F9271959E06C3CB7A26EB" + ( var_0 + 1 ), -1 );
}

isnoneweaponinflictor( var_0 )
{
    var_1 = 0;

    if ( isdefined( var_0 ) && isdefined( var_0.targetname ) )
    {
        switch ( var_0.targetname )
        {
            case "_encstr_AFAC0C7D7F756724B550FBB312D8":
            case "_encstr_98E50D36B03956BE1C851BDAC2D9CA":
                var_1 = 1;
                break;
        }
    }

    return var_1;
}

isenvironmentalinflictor( var_0 )
{
    var_1 = 0;

    if ( isdefined( var_0.killcament ) && isdefined( var_0.classname ) )
    {
        switch ( var_0.classname )
        {
            case "_encstr_A6F51207834290EF033989F3E367ABF85D1CA381":
            case "_encstr_93DC0DCD1B272D3847AF5BED23B2C6":
            case "_encstr_9B091103AB2F34B8270ACFB3154DE88BF3E2B9":
                var_1 = 1;
                break;
        }
    }

    return var_1;
}

resetplayeromnvarsonkillcam()
{
    scripts\cp_mp\utility\vehicle_omnvar_utility::vehomn_clearall( self );
}
