// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.classmap["_encstr_9780077798D1733369"] = 0;
    level.classmap["_encstr_9B8007C6C6166E3798"] = 1;
    level.classmap["_encstr_A980076C362C6E6E8C"] = 2;
    level.classmap["_encstr_9B0708E1DB47BDF82549"] = 0;
    level.classmap["_encstr_AF0708861B770BF7409F"] = 1;
    level.classmap["_encstr_B30708C21DBB8B4842CA"] = 2;
    level.classmap["_encstr_A1070829FB9BA96777FB"] = 3;
    level.classmap["_encstr_8B0708AE432BF1F87DDE"] = 4;
    level.classmap["_encstr_BD0708067340AC2279A5"] = 5;
    level.classmap["_encstr_B907088DBAB93AF6AD73"] = 6;
    level.classmap["_encstr_BE0708864DF7B39F1DCF"] = 7;
    level.classmap["_encstr_BA0708830B78FB5759D2"] = 8;
    level.classmap["_encstr_B37509AE477723EF0599FA"] = 9;
    level.classmap["_encstr_8A550DC1F0996858DB97CFC3DB72B7"] = 0;
    level.classmap["_encstr_B1550D28A37CCFC6FB5D8EF320CF23"] = 1;
    level.classmap["_encstr_AB550D0163709781B56072AAB0E3D2"] = 2;
    level.classmap["_encstr_98550D3A229BFFE1A88B2B39B94863"] = 3;
    level.classmap["_encstr_9D550D5A889B9A3F7385534127B9DE"] = 4;
    level.classmap["_encstr_A2550DC20F4BB9BEC9598D5A1C951B"] = 5;
    level.classmap["_encstr_8B800F617AA0C311E88992E72B47A32F7F"] = 0;
    level.classmap["_encstr_BD800F992198A497BEE6334A499BFB1FC2"] = 1;
    level.classmap["_encstr_B9800FCEE91A4B7558598B0260D3FB3DD2"] = 2;
    level.classmap["_encstr_BE800F8F68807942FFB0BA7786934B3DE3"] = 3;
    level.classmap["_encstr_BA800FAE789099BA5E5F13470F0BB3CD32"] = 4;
    level.classmap["_encstr_93800F992198A497BEE6334A499BFB1FE2"] = 5;
    level.classmap["_encstr_87AC099DB05B59ADF619AC"] = 0;
    level.classmap["_encstr_9D0B0D0E6D3F9B87C980674F78817D"] = 0;
    level.classmap["_encstr_95DC0ED85DDCA3D9B05BAC6BBD32B2C4"] = 0;
    level.classmap["_encstr_A4DC0E5963FF15107E4DD3CB67E7D8FE"] = 1;
    level.classmap["_encstr_9EDC0ED9A508784FBE1095652FCAF70E"] = 2;
    level.classmap["_encstr_B6DC0EC6BAE68E3B85B5CAB6B732951A"] = 3;
    level.classmap["_encstr_89DC0E4F7B93E9F17FB818C2DD041D83"] = 4;
    level.classmap["_encstr_81DC0E365DB9A39D16AD566BB78C596C"] = 5;
    level.classmap["_encstr_B8DC0EBE65DF9BD746F22B58CA5F9BBB"] = 6;
    level.classmap["_encstr_B2DC0E7943DF35305E6D332B87C7F8DB"] = 7;
    level.classmap["_encstr_87DC0EAF40DB03AF1E791A05A705655F"] = 8;
    level.classmap["_encstr_A4130FD09B1239395F8D55599793A17B2A"] = 9;
    level.classmap["_encstr_A97A10166350BCB20F63271F7FA5DADF5043"] = 0;
    level.classmap["_encstr_9B7A10408F2BDB9F5A1D8D81F562D3E6643A"] = 1;
    level.classmap["_encstr_977A108DABCDD17658D6566BDE19B27D2399"] = 2;
    level.classmap["_encstr_947A10D7E356E527477F7D2D40BC08379AAA"] = 3;
    level.classmap["_encstr_AD7A10B1D59BA3D916B6B2B5DE23ACF5324D"] = 4;
    level.classmap["_encstr_9BAA097EB163581D86D2B0"] = 0;
    level.classmap["_encstr_B145092B9071A19311F59A"] = 0;
    level.classmap["_encstr_8245098269F44F93B031D2"] = 1;
    level.classmap["_encstr_AA4509CF79E0B19BF12976"] = 2;
    level.classmap["_encstr_944509D10AC3E7F8553C29"] = 3;
    level.classmap["_encstr_AD45090525F3DFD5B4899B"] = 4;
    level.classmap["_encstr_9B4509883FCE894B5A8B94"] = 5;
    level.classmap["_encstr_974509E13AF3D7C8452C3F"] = 6;
    level.classmap["_encstr_B345093D576ACBAB6C2B32"] = 7;
    level.classmap["_encstr_A94509ED857BC903F5B332"] = 8;
    level.classmap["_encstr_A3CC0A14DDA1EF3BB9F8474F"] = 9;
    level.classmap["_encstr_B6CC0A0431AA377BFAB86116"] = 10;
    level.classmap["_encstr_AAFC0BA9AB3B9DCAC9DC2C571D"] = 0;
    level.defaultclass = "_encstr_B1C70E7FB99103779105E727D113B349";

    if ( level.gametype == "_encstr_9507034B25" || level.gametype == "_encstr_B31D06435BCB61E0" )
        level.classtablename = "_encstr_9F501D85DFE56FC51B48FB83B075BD0F664E023F7D91B34EEB88935EB86FF3";
    else if ( scripts\mp\utility\game::tv_station_intro_camera() )
    {
        var_0 = getdvarint( "_encstr_9CB51883A7F2CF4F2CD9EBAF030A41012F378080056093ECEA37", 0 );

        switch ( var_0 )
        {
            case 1:
                level.classtablename = "_encstr_95C51F85DFE56FC51B48FB83B075BD0F66C61E097791E3CABF90327A68D5B69FFB";
                break;
            default:
                level.classtablename = "_encstr_BDF812DA83BCD81B2C9BCD3A5813C6B28B8DDC3B";
                break;
        }

        setomnvar( "_encstr_B4B11757B4BE1B3658379B1D16268DB2BEBDCEB2C99C4B23CA", var_0 );
    }
    else if ( getdvarint( "_encstr_8BF1126F8695A1205DE729F009702049E8C3F00B", 0 ) )
        level.classtablename = "_encstr_9BF917C7F0901BBA433E528B2F6D72A526787F37A8D85373B5";
    else if ( scripts\mp\utility\game::isanymlgmatch() )
        level.classtablename = "_encstr_8F34166B0EBC36B1859BDC3A1613B159D7D846C617C66E67";
    else
        level.classtablename = "_encstr_BDF812DA83BCD81B2C9BCD3A5813C6B28B8DDC3B";

    level thread onplayerconnecting();
    level thread onplayerspawned();
}

getclasschoice( var_0 )
{
    return var_0;
}

getweaponchoice( var_0 )
{
    var_1 = strtok( var_0, "_encstr_B44C02C9" );

    if ( var_1.size > 1 )
        return int( var_1[1] );
    else
        return 0;
}

cac_getweapon( var_0, var_1 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", var_1, "_encstr_B92007DDCA2C0EF6DC" );
}

cac_getweaponattachment( var_0, var_1, var_2 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", var_1, "_encstr_986F10AA1851EE3FA011C5F6B5EFEF738BD0", var_2, "_encstr_9C9A0B213BDBAAA648152B8E9B" );
}

force_interrupt_current_combat_action( var_0, var_1, var_2 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", var_1, "_encstr_986F10AA1851EE3FA011C5F6B5EFEF738BD0", var_2, "_encstr_893E0A67B04EA5B0B9E82511" );
}

cac_getweaponlootitemid( var_0, var_1 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", var_1, "_encstr_8AE00B8B40D034D0A1FD0D0C45" );
}

cac_getweaponvariantid( var_0, var_1 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", var_1, "_encstr_893E0A67B04EA5B0B9E82511" );
}

cac_getweaponcamo( var_0, var_1 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", var_1, "_encstr_9C90056E476317" );
}

cac_getweaponreticle( var_0, var_1 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", var_1, "_encstr_9F50089A556B470601F8" );
}

cac_getkillstreak( var_0, var_1 )
{
    var_2 = self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_94CD11D65A1BD86E47C9B216B64DCA8E57C137", var_0, "_encstr_B6CE0B0BB00A031B7B88355740" );
    return var_2;
}

cac_getcharacterarchetype()
{
    if ( isdefined( self.changedarchetypeinfo ) )
        return self.changedarchetypeinfo.archetype;

    return "_encstr_A6B3120F05CFBC15435ADB2FF1F723E338B88B13";
}

cac_getequipmentprimary( var_0 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_A888105957333FC3A859F8E3774D133393AA", 0, "_encstr_BE8F0A2BB8D596386BB273A3" );
}

cac_getextraequipmentprimary( var_0 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_A888105957333FC3A859F8E3774D133393AA", 0, "_encstr_BA770C95E18EE4160D0D0B93CEB2" );
}

cac_getequipmentsecondary( var_0 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_A888105957333FC3A859F8E3774D133393AA", 1, "_encstr_BE8F0A2BB8D596386BB273A3" );
}

cac_getextraequipmentsecondary( var_0 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_A888105957333FC3A859F8E3774D133393AA", 1, "_encstr_BA770C95E18EE4160D0D0B93CEB2" );
}

cac_getsuper()
{
    if ( isdefined( self.changedarchetypeinfo ) )
        return self.changedarchetypeinfo.super;

    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_97010F2E3B68183A5D939BC7EF85334D88" );
}

cac_getfieldupgrade( var_0 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_A8F60E2581BF80ED8FD3218BAA23159B", var_0 );
}

cac_getgesture()
{
    var_0 = "_encstr_AABA05236DC831";

    if ( isdefined( self.changedarchetypeinfo ) )
    {
        var_1 = level.archetypeids[self.changedarchetypeinfo.archetype];
        var_0 = self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_81B415CF5379D88B2897724B6F3E5F4085621A0E661FCB", var_1, "_encstr_8B0508CE95DC1DEAC92B" );
    }
    else
        var_0 = self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_8B0508CE95DC1DEAC92B" );

    return scripts\cp_mp\gestures::getgesturedata( var_0 );
}

cac_getaccessoryweapon()
{
    var_0 = self getplayerdata( level.loadoutsgroup, "_encstr_9D7E13D8D5DCA3B7B65A9E58E8D2BDCD4D2B1D57C1", "_encstr_89B00EDB38B2930B8EBD39AB2CA3C60D" );
    return scripts\mp\accessories::getaccessoryweaponbyindex( var_0 );
}

cac_getaccessorydata()
{
    var_0 = self getplayerdata( level.loadoutsgroup, "_encstr_9D7E13D8D5DCA3B7B65A9E58E8D2BDCD4D2B1D57C1", "_encstr_89B00EDB38B2930B8EBD39AB2CA3C60D" );
    return scripts\mp\accessories::getaccessorydatabyindex( var_0 );
}

force_interrupt_all_current_combat_actions()
{
    var_0 = self getplayerdata( level.loadoutsgroup, "_encstr_9D7E13D8D5DCA3B7B65A9E58E8D2BDCD4D2B1D57C1", "_encstr_89B00EDB38B2930B8EBD39AB2CA3C60D" );
    return scripts\mp\accessories::register_respawn_functions( var_0 );
}

cac_getloadoutperk( var_0, var_1 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7", var_1 );
}

cac_getloadoutextraperk( var_0, var_1 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_80350BACE1A339C21456936D9B", var_1 );
}

cac_getloadoutarchetypeperk()
{
    if ( isdefined( self.changedarchetypeinfo ) )
        return self.changedarchetypeinfo.trait;

    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B2C90EC99EC903C771588BD2F9BBFAF7" );
}

cac_getusingspecialist( var_0 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_A9F11023E8A3F5F70F673D33F311837CFFA8" );
}

cac_getweaponcosmeticattachment( var_0, var_1 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", var_1, "_encstr_80AC13B1BDE6B52B1D961B82E847B0D81A6B59CDE8" );
}

cac_getweaponsticker( var_0, var_1, var_2 )
{
    return self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_B4B309C6B7C223B75D479B", var_0, "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", var_1, "_encstr_9F9E089BE896366DAC93", var_2 );
}

recipe_getkillstreak( var_0, var_1, var_2 )
{
    return scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_0, var_1, "_encstr_9E95066E81471B5F", "_encstr_9F6710CCBBA16735EB55988AE7970CA3699A", var_2, "_encstr_B6CE0B0BB00A031B7B88355740" );
}

table_getarchetype( var_0, var_1 )
{
    return tablelookup( var_0, 0, "_encstr_872D11D1FF892130152B9EE3788CA51CCBFBCF", var_1 + 1 );
}

table_getloadoutname( var_0, var_1 )
{
    return tablelookup( var_0, 0, "_encstr_A3DA0C74A03983D5E3A018E2802B", var_1 + 1 );
}

_id_139E4( var_0, var_1, var_2 )
{
    var_3 = scripts\engine\utility::ter_op( var_2 == 0, "_encstr_BD0526B9DF725510056B77CBD4F5A8962BCF1121F3CAA51838C25840BB8178CD02BF81AB0752ED60", "_encstr_94B2280B6707F2DFAB2B4ACFE1F8162AEFB5A737E93DD8847811BA12582834303D014F2759D1124E58BB" );
    var_4 = tablelookup( var_0, 0, var_3, var_1 + 1 );

    if ( var_4 == "_encstr_A40101" )
        return 0;
    else
        return istrue( int( var_4 ) );
}

table_getweapon( var_0, var_1, var_2 )
{
    if ( var_2 == 0 )
        return tablelookup( var_0, 0, "_encstr_87C30FC410893345733089A330AB3E9362", var_1 + 1 );
    else
        return tablelookup( var_0, 0, "_encstr_A14E11D520C0AC320551FF3F67206AE4782B08", var_1 + 1 );
}

table_getweaponattachment( var_0, var_1, var_2, var_3 )
{
    var_4 = "_encstr_AABA05236DC831";

    if ( var_2 == 0 )
        var_4 = tablelookup( var_0, 0, "_encstr_B44319C6DB5832DEAE3A289C965B2CC95E141DA32C36A1D65673A3" + ( var_3 + 1 ), var_1 + 1 );
    else
        var_4 = tablelookup( var_0, 0, "_encstr_9D6F1B6C48D16B2D1B48D18AC817252389AEF1395DDBC7F6C968BA3218" + ( var_3 + 1 ), var_1 + 1 );

    if ( var_4 == "_encstr_A40101" || var_4 == "_encstr_AABA05236DC831" )
        return "_encstr_AABA05236DC831";
    else
        return var_4;
}

table_getweaponcamo( var_0, var_1, var_2 )
{
    if ( var_2 == 0 )
        return tablelookup( var_0, 0, "_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB", var_1 + 1 );
    else
        return tablelookup( var_0, 0, "_encstr_A2EA151BD081D44253851297663F0A9C2980C73F48F807", var_1 + 1 );
}

table_getweaponreticle( var_0, var_1, var_2 )
{
    if ( var_2 == 0 )
        return tablelookup( var_0, 0, "_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9", var_1 + 1 );
    else
        return tablelookup( var_0, 0, "_encstr_82B618ABEA2661705BBB2A415B6D7332AB2AD71F9D3880AE324D", var_1 + 1 );
}

_id_139E6( var_0, var_1, var_2, var_3 )
{
    var_4 = undefined;

    if ( var_2 == 0 )
        var_4 = tablelookup( var_0, 0, "_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488", var_1 + 1 );
    else
        var_4 = tablelookup( var_0, 0, "_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018", var_1 + 1 );

    return _id_139E7( var_3, var_4 );
}

_id_139E7( var_0, var_1 )
{
    if ( var_0 == "_encstr_AABA05236DC831" )
        return 0;

    if ( !isdefined( level.confirm_good_pickup_location ) )
    {
        level.confirm_good_pickup_location = [];
        level.confirm_good_pickup_location["_encstr_B9940F5ADDE0BE58C9EB3A85B99D7BC898"] = [ 1 ];
        level.confirm_good_pickup_location["_encstr_A2160DEB2B88CE9358D8A2831FE5BA"] = [ 5 ];
        level.confirm_good_pickup_location["_encstr_94550FA5BBE0F5B039AFB6B436DED0CC33"] = [ 3 ];
        level.confirm_good_pickup_location["_encstr_B7F710CAE02981D703E8335B1B09D315D3D8"] = [ 3 ];
        level.confirm_good_pickup_location["_encstr_936B0D98A3D867B357B755CA75BBBB"] = [ 4 ];
        level.confirm_good_pickup_location["_encstr_9D631003CB205F0333263A1759AF62A8DA92"] = [ 5 ];
        level.confirm_good_pickup_location["_encstr_A9E70FB4DD70D7DC86BE32C12CC1B09864"] = [ 3 ];
        level.confirm_good_pickup_location["_encstr_97CD0FB4BB83AF366B7DB6B3EDB1993368"] = [ 4 ];
        level.confirm_good_pickup_location["_encstr_B12C0E3A43B3CF6AC87FA3B90198A01A"] = [ 16 ];
        level.confirm_good_pickup_location["_encstr_A4190F580392C0F0FD3F9B89382438BDDA"] = [ 2 ];
        level.confirm_good_pickup_location["_encstr_AF2A0F281368D703CB274BB5E227087B65"] = [ 4 ];
        level.confirm_good_pickup_location["_encstr_AAE20EA5BBE07DE05AAF3BF61B331962"] = [ 3 ];
        level.confirm_good_pickup_location["_encstr_8A900D2DEEE0EB83A5AF6CE0C238B0"] = [ 15 ];
        var_2 = getdvar( "_encstr_B7CE1EBB5ECE966E7BF242324327F009C87E466B475198278C18E390732B9B47", "_encstr_A40101" );

        if ( var_2 != "_encstr_A40101" )
        {
            var_3 = strtok( var_2, "_encstr_B44C02C9" );

            foreach ( var_5 in var_3 )
            {
                var_6 = strtok( var_5, "_encstr_B64C02F0" );

                if ( var_6.size == 2 )
                {
                    var_7 = var_6[0];
                    var_8 = int( var_6[1] );

                    if ( !isdefined( level.confirm_good_pickup_location[var_7] ) )
                        level.confirm_good_pickup_location[var_7] = [];

                    level.confirm_good_pickup_location[var_7][level.confirm_good_pickup_location[var_7].size] = var_8;
                }
            }
        }
    }

    var_10 = undefined;

    if ( isdefined( level.confirm_good_pickup_location[var_0] ) )
        var_10 = level.confirm_good_pickup_location[var_0];

    var_11 = 0;
    var_12 = getdvarint( "_encstr_8228216EC6397D33B7E4D859A13685DC6E15164CD8B22BC2C996B0E63AA4B09B327BD6", 0 );

    if ( var_12 == 1 )
        var_11 = scripts\mp\utility\weapon::runspawnmodule_isolated( var_0, var_10 );
    else
    {
        var_13 = strtok( var_1, "_encstr_884C02C6" );
        var_14 = [];

        foreach ( var_16 in var_13 )
        {
            var_17 = int( var_16 );

            if ( !isdefined( var_10 ) || !scripts\engine\utility::array_contains( var_10, var_17 ) )
                var_14[var_14.size] = var_17;
        }

        if ( var_14.size != 0 )
            var_11 = var_14[randomint( var_14.size )];
    }

    if ( var_11 == -1 )
        var_11 = scripts\mp\utility\weapon::runspawnmodule_isolated( var_0, var_10 );

    var_19 = scripts\mp\utility\weapon::_id_1458C( var_0, var_11 );

    if ( !var_19 )
        var_11 = 0;

    return var_11;
}

table_getperk( var_0, var_1, var_2 )
{
    return tablelookup( var_0, 0, "_encstr_A30E0C36BDB019EDBA8E0A569CD6" + ( var_2 + 1 ), var_1 + 1 );
}

table_getextraperk( var_0, var_1, var_2 )
{
    return tablelookup( var_0, 0, "_encstr_BAAD11805F81510783D36583AB8B639FEDB330" + ( var_2 + 1 ), var_1 + 1 );
}

table_getequipmentprimary( var_0, var_1 )
{
    return tablelookup( var_0, 0, "_encstr_B3A418C6F61691DB5747A2175796C1D6B27347824E96B6854E5E", var_1 + 1 );
}

table_getextraequipmentprimary( var_0, var_1 )
{
    var_2 = tablelookup( var_0, 0, "_encstr_BD141DD8DB2C46BDBAA3A2E11D4E58A8E2EA96C1B6CA733A82C92DD62C9C5E", var_1 + 1 );
    return isdefined( var_2 ) && var_2 == "_encstr_87EF0559D9AB8B";
}

table_getequipmentsecondary( var_0, var_1 )
{
    return tablelookup( var_0, 0, "_encstr_AA781A89AF4749179393F168BBACE1A08F460DEE3DE7904DBFAA4020", var_1 + 1 );
}

table_getextraequipmentsecondary( var_0, var_1 )
{
    var_2 = tablelookup( var_0, 0, "_encstr_BAA71FE1872A0D383D53FD527B0270258377632167B2C0A8736F2188E5FCB8F67B", var_1 + 1 );
    return isdefined( var_2 ) && var_2 == "_encstr_87EF0559D9AB8B";
}

table_getsuper( var_0, var_1 )
{
    return tablelookup( var_0, 0, "_encstr_B6920DDA60DB0FAFA33D538DD74913", var_1 + 1 );
}

table_getspecialist( var_0, var_1 )
{
    var_2 = tablelookup( var_0, 0, "_encstr_A9AF1280628B0AD8DF4C2E88BD4E4B1E98A4FF0B", var_1 + 1 );
    return isdefined( var_2 ) && var_2 == "_encstr_87EF0559D9AB8B";
}

table_getgesture( var_0, var_1 )
{
    return tablelookup( var_0, 0, "_encstr_A4450FEB472A87A2834C172243E0E538F8", var_1 + 1 );
}

table_getaccessory( var_0, var_1 )
{
    return tablelookup( var_0, 0, "_encstr_9B05119AA88F08E06889A9636B7A9FB28772B8", var_1 + 1 );
}

table_getexecution( var_0, var_1 )
{
    return tablelookup( var_0, 0, "_encstr_B2E611340FC91DE80B835BA377BA4DC32BC0A8", var_1 + 1 );
}

table_getkillstreak( var_0, var_1, var_2 )
{
    return tablelookup( var_0, 0, "_encstr_89A50E7C079855B29B899139A3E7A10F" + var_2, var_1 + 1 );
}

loadout_getplayerstreaktype( var_0 )
{
    var_1 = undefined;

    switch ( var_0 )
    {
        case "_encstr_A4E5139B1D27B20BB5E8F2E0CAEBE6AEC138F6391D":
            var_1 = "_encstr_B89108CDD50E0EF69C8E";
            break;
        case "_encstr_872F165E939A01400B2B90C34841AE18E0B7FFDF8A8B6063":
        case "_encstr_98AE0B231BA5974428F1594BA9":
            var_1 = "_encstr_98AE0B231BA5974428F1594BA9";
            break;
        case "_encstr_B1B514B30BBE1FD6C871D9D87B415A4766EDAB2B719D":
            var_1 = "_encstr_BC04097390D3AF932D7E8F";
            break;
        default:
            var_1 = "_encstr_973508BF93EFFBC363B3";
    }

    return var_1;
}

getloadoutstreaktypefromstreaktype( var_0 )
{
    if ( !isdefined( var_0 ) )
        return "_encstr_97B313076883B5C20FE5B8F245BF1A6B4B3897E3C0";

    switch ( var_0 )
    {
        case "_encstr_B89108CDD50E0EF69C8E":
            return "_encstr_A4E5139B1D27B20BB5E8F2E0CAEBE6AEC138F6391D";
        case "_encstr_98AE0B231BA5974428F1594BA9":
            return "_encstr_872F165E939A01400B2B90C34841AE18E0B7FFDF8A8B6063";
        case "_encstr_973508BF93EFFBC363B3":
            return "_encstr_97B313076883B5C20FE5B8F245BF1A6B4B3897E3C0";
        default:
            return "_encstr_97B313076883B5C20FE5B8F245BF1A6B4B3897E3C0";
    }
}

loadout_getclassteam( var_0 )
{
    if ( self.team == "_encstr_A68C0A5803A5D151A2B310A6" )
        var_0 = "_encstr_AABA05236DC831";

    var_1 = undefined;

    if ( issubstr( var_0, "_encstr_BA840579D3F7F6" ) )
        var_1 = "_encstr_BA840579D3F7F6";
    else if ( issubstr( var_0, "_encstr_BC850785638DA59537" ) )
        var_1 = "_encstr_BC850785638DA59537";
    else
        var_1 = "_encstr_AABA05236DC831";

    return var_1;
}

loadout_clearplayer( var_0 )
{
    loadout_clearweapons( var_0 );
    _detachall( var_0 );
    scripts\mp\equipment::clearallequipment();

    if ( isdefined( self.loadoutarchetype ) )
        clearscriptable();

    scripts\mp\archetypes\archcommon::removearchetype( self.loadoutarchetype );
    loadout_clearperks( var_0 );
    scripts\mp\perks\weaponpassives::forgetpassives();
    scripts\cp_mp\gestures::cleargesture();
    scripts\cp_mp\execution::_clearexecution();
    scripts\mp\accessories::clearplayeraccessory();
    scripts\mp\perks\perkpackage::_id_12301();

    if ( !istrue( var_0 ) )
    {
        resetfunctionality();
        resetactionslots();
    }
}

loadout_clearweapons( var_0 )
{
    if ( istrue( var_0 ) )
    {
        if ( isdefined( self.primaryweaponobj ) )
            scripts\cp_mp\utility\inventory_utility::_takeweapon( self.primaryweaponobj );

        if ( isdefined( self.secondaryweaponobj ) && self.secondaryweaponobj.basename != "_encstr_AABA05236DC831" )
            scripts\cp_mp\utility\inventory_utility::_takeweapon( self.secondaryweaponobj );
    }
    else
        self takeallweapons();

    self.primaryweapon = undefined;
    self.primaryweaponobj = undefined;
    self.secondaryweapon = undefined;
    self.secondaryweaponobj = undefined;
}

loadout_giveperk( var_0 )
{
    if ( !isdefined( self.loadoutperks ) )
        self.loadoutperks = [];

    scripts\mp\utility\perk::giveperk( var_0 );
    self.loadoutperks[self.loadoutperks.size] = var_0;
}

loadout_removeperk( var_0 )
{
    if ( isdefined( self.loadoutperks ) )
    {
        var_1 = 0;
        var_2 = [];

        foreach ( var_4 in self.loadoutperks )
        {
            if ( !var_1 )
            {
                if ( var_4 == var_0 )
                {
                    scripts\mp\utility\perk::removeperk( var_4 );
                    var_1 = 1;
                    continue;
                }
            }

            var_2[var_2.size] = var_4;
        }

        self.loadoutperks = var_2;
    }
}

loadout_clearperks( var_0 )
{
    if ( istrue( var_0 ) )
    {
        if ( isdefined( self.loadoutperks ) )
        {
            foreach ( var_2 in self.loadoutperks )
                scripts\mp\utility\perk::removeperk( var_2 );
        }
    }
    else
    {
        scripts\mp\perks\perks::_clearperks();
        self notify( "_encstr_A3B9121941F80F72A3F0EA63B1872DBF31366594" );
    }

    self.loadoutperks = [];
    self notify( "_encstr_9E8B16793FD7D987032391F02A1A47F3D7DBF1658933A1E9" );
}

loadout_getclassstruct()
{
    var_0 = spawnstruct();
    var_0.loadoutarchetype = "_encstr_AABA05236DC831";
    var_0.loadoutprimary = "_encstr_AABA05236DC831";
    var_0.loadoutprimaryattachments = [];
    var_0.loadoutprimaryattachmentids = [];

    for ( var_1 = 0; var_1 < 10; var_1++ )
    {
        var_0.loadoutprimaryattachments[var_1] = "_encstr_AABA05236DC831";
        var_0.loadoutprimaryattachmentids[var_1] = 0;
    }

    var_0.loadoutprimarycamo = "_encstr_AABA05236DC831";
    var_0.loadoutprimaryreticle = "_encstr_AABA05236DC831";
    var_0.loadoutprimarylootitemid = 0;
    var_0.loadoutprimaryvariantid = -1;
    var_0.loadoutprimarycosmeticattachment = "_encstr_AABA05236DC831";
    var_0.loadoutprimarystickers = [];

    for ( var_2 = 0; var_2 < 4; var_2++ )
        var_0.loadoutprimarystickers[var_2] = "_encstr_AABA05236DC831";

    var_0.loadoutsecondary = "_encstr_AABA05236DC831";
    var_0.loadoutsecondaryattachments = [];
    var_0.loadoutsecondaryattachmentids = [];

    for ( var_1 = 0; var_1 < 10; var_1++ )
    {
        var_0.loadoutsecondaryattachments[var_1] = "_encstr_AABA05236DC831";
        var_0.loadoutsecondaryattachmentids[var_1] = 0;
    }

    var_0.loadoutsecondarycamo = "_encstr_AABA05236DC831";
    var_0.loadoutsecondaryreticle = "_encstr_AABA05236DC831";
    var_0.loadoutsecondarylootitemid = 0;
    var_0.loadoutsecondaryvariantid = -1;
    var_0.loadoutsecondarycosmeticattachment = "_encstr_AABA05236DC831";
    var_0.loadoutsecondarystickers = [];

    for ( var_2 = 0; var_2 < 4; var_2++ )
        var_0.loadoutsecondarystickers[var_2] = "_encstr_AABA05236DC831";

    var_0.loadoutmeleeslot = "_encstr_AABA05236DC831";
    var_0.loadoutperksfromgamemode = 0;
    var_0.loadoutperks = [];
    var_0.loadoutstandardperks = [];
    var_0.loadoutextraperks = [];
    var_0.loadoutrigtrait = "_encstr_B99C0FF382C5B813BA035133B732658894";
    var_0.loadoutusingspecialist = 0;
    var_0.loadoutequipmentprimary = "_encstr_AABA05236DC831";
    var_0.loadoutextraequipmentprimary = 0;
    var_0.loadoutequipmentsecondary = "_encstr_AABA05236DC831";
    var_0.loadoutextraequipmentsecondary = 0;
    var_0.loadoutsuper = "_encstr_AABA05236DC831";
    var_0.loadoutgesture = "_encstr_AABA05236DC831";
    var_0.loadoutaccessorydata = "_encstr_AABA05236DC831";
    var_0.loadoutaccessoryweapon = "_encstr_AABA05236DC831";
    var_0.loadoutstreaksfilled = 0;
    var_0.loadoutstreaktype = "_encstr_97B313076883B5C20FE5B8F245BF1A6B4B3897E3C0";
    var_0.loadoutkillstreak1 = "_encstr_AABA05236DC831";
    var_0.loadoutkillstreak2 = "_encstr_AABA05236DC831";
    var_0.loadoutkillstreak3 = "_encstr_AABA05236DC831";
    var_0.tweakedbyplayerduringmatch = 0;
    var_0.gamemodeforcednewloadout = 0;
    var_0.uavbestid = 0;
    return var_0;
}

zombieregenratescaleingas( var_0 )
{
    var_1 = spawnstruct();
    var_1.loadoutarchetype = var_0.loadoutarchetype;

    if ( isdefined( var_0._id_11960 ) )
        var_1._id_11960 = var_0._id_11960;

    var_1.loadoutprimary = var_0.loadoutprimary;
    var_1.loadoutprimaryattachments = var_0.loadoutprimaryattachments;
    var_1.loadoutprimaryattachmentids = var_0.loadoutprimaryattachmentids;
    var_1.loadoutprimarycamo = var_0.loadoutprimarycamo;
    var_1.loadoutprimaryreticle = var_0.loadoutprimaryreticle;
    var_1.loadoutprimarylootitemid = var_0.loadoutprimarylootitemid;
    var_1.loadoutprimaryvariantid = var_0.loadoutprimaryvariantid;
    var_1.loadoutprimarycosmeticattachment = var_0.loadoutprimarycosmeticattachment;
    var_1.loadoutprimarystickers = var_0.loadoutprimaryweaponstickers;

    if ( isdefined( var_0._id_11961 ) )
        var_1._id_11961 = var_0._id_11961;

    var_1.loadoutsecondary = var_0.loadoutsecondary;
    var_1.loadoutsecondaryattachments = var_0.loadoutsecondaryattachments;
    var_1.loadoutsecondaryattachmentids = var_0.loadoutsecondaryattachmentids;
    var_1.loadoutsecondarycamo = var_0.loadoutsecondarycamo;
    var_1.loadoutsecondaryreticle = var_0.loadoutsecondaryreticle;
    var_1.loadoutsecondarylootitemid = var_0.loadoutsecondarylootitemid;
    var_1.loadoutsecondaryvariantid = var_0.loadoutsecondaryvariantid;
    var_1.loadoutsecondarycosmeticattachment = var_0.loadoutsecondarycosmeticattachment;
    var_1.loadoutsecondarystickers = var_0.loadoutsecondarystickers;
    var_1.loadoutmeleeslot = var_0.loadoutmeleeslot;
    var_1.loadoutperksfromgamemode = var_0.loadoutperksfromgamemode;
    var_1.loadoutperks = var_0.loadoutperks;
    var_1.loadoutstandardperks = var_0.loadoutstandardperks;
    var_1.loadoutextraperks = var_0.loadoutextraperks;
    var_1.loadoutrigtrait = var_0.loadoutrigtrait;
    var_1.loadoutusingspecialist = var_0.loadoutusingspecialist;
    var_1.loadoutequipmentprimary = var_0.loadoutequipmentprimary;
    var_1.loadoutextraequipmentprimary = var_0.loadoutextraequipmentprimary;
    var_1.loadoutequipmentsecondary = var_0.loadoutequipmentsecondary;
    var_1.loadoutextraequipmentsecondary = var_0.loadoutextraequipmentsecondary;
    var_1.loadoutsuper = var_0.loadoutsuper;
    var_1.loadoutgesture = var_0.loadoutgesture;
    var_1.loadoutaccessorydata = var_0.loadoutaccessorydata;
    var_1.loadoutaccessoryweapon = var_0.loadoutaccessoryweapon;
    var_1.loadoutstreaksfilled = var_0.loadoutstreaksfilled;
    var_1.loadoutstreaktype = var_0.loadoutstreaktype;
    var_1.loadoutkillstreak1 = var_0.loadoutkillstreak1;
    var_1.loadoutkillstreak2 = var_0.loadoutkillstreak2;
    var_1.loadoutkillstreak3 = var_0.loadoutkillstreak3;
    var_1.tweakedbyplayerduringmatch = var_0.tweakedbyplayerduringmatch;
    var_1.gamemodeforcednewloadout = var_0.gamemodeforcednewloadout;
    var_1.uavbestid = var_0.uavbestid;
    var_1 = loadout_updateclass( var_1, "_encstr_88E8076F67E8337212" );
    return var_1;
}

loadout_updateclassteam( var_0, var_1, var_2 )
{
    var_2 = loadout_getclassteam( var_1 );
    var_3 = getclassindex( var_1 );
    self.class_num = var_3;
    self.classteam = var_2;
    var_0.loadoutarchetype = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_2, var_3, "_encstr_9E95066E81471B5F", "_encstr_B4400AAB2399713863B3B9A8" );
    var_0.loadoutprimary = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_2, var_3, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 0, "_encstr_B92007DDCA2C0EF6DC" );

    if ( var_0.loadoutprimary == "_encstr_AABA05236DC831" )
        var_0.loadoutprimary = "_encstr_9BED0AA307609154C76BDB23";
    else
    {
        for ( var_4 = 0; var_4 < 10; var_4++ )
            var_0.loadoutprimaryattachments[var_4] = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_2, var_3, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 0, "_encstr_986F10AA1851EE3FA011C5F6B5EFEF738BD0", var_4, "_encstr_9C9A0B213BDBAAA648152B8E9B" );

        for ( var_5 = 0; var_5 < 4; var_5++ )
            var_0.loadoutprimarystickers[var_5] = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_2, var_3, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 0, "_encstr_9F9E089BE896366DAC93", var_5 );
    }

    var_0.loadoutprimarycamo = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_2, var_3, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 0, "_encstr_9C90056E476317" );
    var_0.loadoutprimaryreticle = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_2, var_3, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 0, "_encstr_9F50089A556B470601F8" );
    var_0.loadoutsecondary = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_2, var_3, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 1, "_encstr_B92007DDCA2C0EF6DC" );

    for ( var_4 = 0; var_4 < 10; var_4++ )
        var_0.loadoutsecondaryattachments[var_4] = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_2, var_3, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 1, "_encstr_986F10AA1851EE3FA011C5F6B5EFEF738BD0", var_4, "_encstr_9C9A0B213BDBAAA648152B8E9B" );

    for ( var_5 = 0; var_5 < 4; var_5++ )
        var_0.loadoutsecondarystickers[var_5] = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_2, var_3, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 1, "_encstr_9F9E089BE896366DAC93", var_5 );

    var_0.loadoutsecondarycamo = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_2, var_3, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 1, "_encstr_9C90056E476317" );
    var_0.loadoutsecondaryreticle = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_2, var_3, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 1, "_encstr_9F50089A556B470601F8" );
    var_0.loadoutmeleeslot = "_encstr_AABA05236DC831";
    var_0.loadoutequipmentprimary = "_encstr_AABA05236DC831";
    var_0.loadoutextraequipmentprimary = 0;
    var_0.loadoutequipmentsecondary = "_encstr_AABA05236DC831";
    var_0.loadoutextraequipmentsecondary = 0;
    var_0.loadoutsuper = "_encstr_AABA05236DC831";
    var_0.loadoutgesture = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_2, var_3, "_encstr_9E95066E81471B5F", "_encstr_8B0508CE95DC1DEAC92B" );
    var_0.loadoutstreaksfilled = 1;
    var_0.loadoutkillstreak1 = recipe_getkillstreak( var_2, var_3, 0 );
    var_0.loadoutkillstreak2 = recipe_getkillstreak( var_2, var_3, 1 );
    var_0.loadoutkillstreak3 = recipe_getkillstreak( var_2, var_3, 2 );
}

loadout_updateclasscustom( var_0, var_1 )
{
    var_2 = getclassindex( var_1 );
    self.class_num = var_2;

    if ( !isdefined( var_2 ) )
    {
        var_3 = scripts\engine\utility::ter_op( isdefined( self.name ), self.name, "_encstr_873A0CE15DDC8C95CC4BDC5646F1" );
        var_4 = scripts\engine\utility::ter_op( isdefined( var_1 ), var_1, "_encstr_873A0CE15DDC8C95CC4BDC5646F1" );
        scripts\mp\utility\script::laststand_dogtags( "_encstr_872C27D1FF892130152B1993E08FA71CE037EBDF7B86E123833BD231F12B81EFE0FD1D7F17F245C259" + var_3 + "_encstr_9C0E1704DD4B8EA101A5CD3B85369623408D36169BDC08F404" + var_4 );
    }

    var_0.loadoutarchetype = cac_getcharacterarchetype();
    var_0.loadoutprimary = cac_getweapon( var_2, 0 );

    for ( var_5 = 0; var_5 < 10; var_5++ )
    {
        var_0.loadoutprimaryattachments[var_5] = cac_getweaponattachment( var_2, 0, var_5 );
        var_0.loadoutprimaryattachmentids[var_5] = force_interrupt_current_combat_action( var_2, 0, var_5 );
    }

    var_0.loadoutprimarycamo = cac_getweaponcamo( var_2, 0 );
    var_0.loadoutprimaryreticle = cac_getweaponreticle( var_2, 0 );
    var_0.loadoutprimarylootitemid = cac_getweaponlootitemid( var_2, 0 );
    var_0.loadoutprimaryvariantid = cac_getweaponvariantid( var_2, 0 );
    var_0.loadoutprimarycosmeticattachment = cac_getweaponcosmeticattachment( var_2, 0 );

    for ( var_6 = 0; var_6 < 4; var_6++ )
        var_0.loadoutprimarystickers[var_6] = cac_getweaponsticker( var_2, 0, var_6 );

    var_0.loadoutsecondary = cac_getweapon( var_2, 1 );

    for ( var_5 = 0; var_5 < 10; var_5++ )
    {
        var_0.loadoutsecondaryattachments[var_5] = cac_getweaponattachment( var_2, 1, var_5 );
        var_0.loadoutsecondaryattachmentids[var_5] = force_interrupt_current_combat_action( var_2, 1, var_5 );
    }

    var_0.loadoutsecondarycamo = cac_getweaponcamo( var_2, 1 );
    var_0.loadoutsecondaryreticle = cac_getweaponreticle( var_2, 1 );
    var_0.loadoutsecondarylootitemid = cac_getweaponlootitemid( var_2, 1 );
    var_0.loadoutsecondaryvariantid = cac_getweaponvariantid( var_2, 1 );
    var_0.loadoutsecondarycosmeticattachment = cac_getweaponcosmeticattachment( var_2, 1 );

    for ( var_6 = 0; var_6 < 4; var_6++ )
        var_0.loadoutsecondarystickers[var_6] = cac_getweaponsticker( var_2, 1, var_6 );

    var_0.loadoutequipmentprimary = cac_getequipmentprimary( var_2 );
    var_0.loadoutextraequipmentprimary = cac_getextraequipmentprimary( var_2 );
    var_0.loadoutequipmentsecondary = cac_getequipmentsecondary( var_2 );
    var_0.loadoutextraequipmentsecondary = cac_getextraequipmentsecondary( var_2 );
    var_0.loadoutsuper = cac_getsuper();
    var_0.loadoutgesture = cac_getgesture();
    var_0.loadoutaccessoryweapon = cac_getaccessoryweapon();
    var_0.loadoutaccessorydata = cac_getaccessorydata();
    var_0.loadoutaccessorylogic = force_interrupt_all_current_combat_actions();
    var_0.loadoutstreaksfilled = 1;
    var_0.loadoutkillstreak1 = cac_getkillstreak( 0, var_1 );
    var_0.loadoutkillstreak2 = cac_getkillstreak( 1, var_1 );
    var_0.loadoutkillstreak3 = cac_getkillstreak( 2, var_1 );
    var_0.loadoutusingspecialist = cac_getusingspecialist( var_2 );
    var_7 = 0;

    foreach ( var_9 in var_0.loadoutprimaryattachments )
    {
        if ( var_9 != "_encstr_AABA05236DC831" )
            var_7++;
    }

    var_11 = 0;

    foreach ( var_9 in var_0.loadoutsecondaryattachments )
    {
        if ( var_9 != "_encstr_AABA05236DC831" )
            var_11++;
    }

    var_14 = int( tablelookup( "_encstr_AD2712B507E5E61DC23A373AB04C8D56C5D8379D", 4, var_0.loadoutprimary, 18 ) );

    if ( var_14 < var_7 )
    {
        for ( var_5 = 0; var_5 < 10; var_5++ )
        {
            var_0.loadoutprimaryattachments[var_5] = "_encstr_AABA05236DC831";
            var_0.loadoutprimaryattachmentids[var_5] = 0;
        }
    }

    var_14 = int( tablelookup( "_encstr_AD2712B507E5E61DC23A373AB04C8D56C5D8379D", 4, var_0.loadoutsecondary, 18 ) );

    if ( var_14 < var_11 )
    {
        for ( var_5 = 0; var_5 < 10; var_5++ )
        {
            var_0.loadoutsecondaryattachments[var_5] = "_encstr_AABA05236DC831";
            var_0.loadoutsecondaryattachmentids[var_5] = 0;
        }
    }
}

loadout_updateclassgamemode( var_0, var_1 )
{
    var_2 = getclassindex( var_1 );
    self.class_num = var_2;
    var_3 = self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"];

    if ( isdefined( var_3["_encstr_872D11D1FF892130152B9EE3788CA51CCBFBCF"] ) )
        var_0.loadoutarchetype = var_3["_encstr_872D11D1FF892130152B9EE3788CA51CCBFBCF"];
    else if ( isbot( self ) )
    {
        var_4 = scripts\mp\bots\bots_loadout::bot_loadout_class_callback();
        var_0.loadoutarchetype = var_4["_encstr_872D11D1FF892130152B9EE3788CA51CCBFBCF"];
    }
    else
        var_0.loadoutarchetype = cac_getcharacterarchetype();

    if ( isdefined( var_3["_encstr_8024101147AFA1EF6B7BD14B224B8D5927E4"] ) )
        var_0.loadoutrigtrait = var_3["_encstr_8024101147AFA1EF6B7BD14B224B8D5927E4"];

    if ( isdefined( var_3["_encstr_BD0526B9DF725510056B77CBD4F5A8962BCF1121F3CAA51838C25840BB8178CD02BF81AB0752ED60"] ) )
        var_0._id_11960 = var_3["_encstr_BD0526B9DF725510056B77CBD4F5A8962BCF1121F3CAA51838C25840BB8178CD02BF81AB0752ED60"];

    if ( isdefined( var_3["_encstr_87C30FC410893345733089A330AB3E9362"] ) )
        var_0.loadoutprimary = var_3["_encstr_87C30FC410893345733089A330AB3E9362"];

    for ( var_5 = 0; var_5 < 10; var_5++ )
    {
        var_6 = getattachmentloadoutstring( var_5, "_encstr_987F080E394BDAC2E45E" );

        if ( isdefined( var_3[var_6] ) )
            var_0.loadoutprimaryattachments[var_5] = var_3[var_6];
    }

    for ( var_7 = 0; var_7 < 4; var_7++ )
    {
        var_8 = getstickerloadoutstring( var_7, "_encstr_987F080E394BDAC2E45E" );

        if ( isdefined( var_3[var_8] ) )
            var_0.loadoutprimarystickers[var_7] = var_3[var_8];
    }

    if ( isdefined( var_3["_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB"] ) )
        var_0.loadoutprimarycamo = var_3["_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB"];

    if ( isdefined( var_3["_encstr_B4312136DB1646B7D5A328E4B46B164E9734F69BDAAC1D5A1B828ED185D8A1ADCA9B8E"] ) )
        var_0.loadoutprimarycosmeticattachment = var_3["_encstr_B4312136DB1646B7D5A328E4B46B164E9734F69BDAAC1D5A1B828ED185D8A1ADCA9B8E"];

    if ( isdefined( var_3["_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9"] ) )
        var_0.loadoutprimaryreticle = var_3["_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9"];

    if ( isdefined( var_3["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"] ) )
        var_0.loadoutprimaryvariantid = var_3["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"];

    if ( isdefined( var_3["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"] ) && scripts\mp\utility\game::getgametype() == "_encstr_9DB606854E567385" )
    {
        if ( isdefined( var_3["_encstr_A8741E3B82A75848B30985F73CA21897B709B3C00A4F8E685E19BB97644FF069"] ) && isdefined( self.pers["_encstr_89EF05D46BA8FD"] ) && var_3["_encstr_A8741E3B82A75848B30985F73CA21897B709B3C00A4F8E685E19BB97644FF069"] == self.pers["_encstr_89EF05D46BA8FD"] )
        {
            if ( isdefined( var_3["_encstr_88081A0AC0DBCB77C728BA61E8A56FAF7027729969E173F81770B2BA"] ) )
                var_0.loadoutprimarycamo = var_3["_encstr_88081A0AC0DBCB77C728BA61E8A56FAF7027729969E173F81770B2BA"];
        }

        if ( var_3["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"] != -1 )
            setomnvar( "_encstr_A9021ABAB4FA8539ACCD85FAE09CA5B60BE45E2BC2E42D169B3A9422", var_3["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"] );
    }

    if ( isdefined( var_3["_encstr_94B2280B6707F2DFAB2B4ACFE1F8162AEFB5A737E93DD8847811BA12582834303D014F2759D1124E58BB"] ) )
        var_0._id_11961 = var_3["_encstr_94B2280B6707F2DFAB2B4ACFE1F8162AEFB5A737E93DD8847811BA12582834303D014F2759D1124E58BB"];

    if ( isdefined( var_3["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"] ) )
        var_0.loadoutsecondary = var_3["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"];

    for ( var_5 = 0; var_5 < 10; var_5++ )
    {
        var_6 = getattachmentloadoutstring( var_5, "_encstr_B98F0AC7D5B99F4DDBA8353B" );

        if ( isdefined( var_3[var_6] ) )
            var_0.loadoutsecondaryattachments[var_5] = var_3[var_6];
    }

    for ( var_7 = 0; var_7 < 4; var_7++ )
    {
        var_8 = getstickerloadoutstring( var_7, "_encstr_B98F0AC7D5B99F4DDBA8353B" );

        if ( isdefined( var_3[var_8] ) )
            var_0.loadoutsecondarystickers[var_7] = var_3[var_8];
    }

    if ( isdefined( var_3["_encstr_A2EA151BD081D44253851297663F0A9C2980C73F48F807"] ) )
        var_0.loadoutsecondarycamo = var_3["_encstr_A2EA151BD081D44253851297663F0A9C2980C73F48F807"];

    if ( isdefined( var_3["_encstr_9E9523ADB7470C676323C9B0D2174ED9AE88EAB7FA93A2236BF7F9871581C37F30E2ABE0BC"] ) )
        var_0.loadoutsecondarycosmeticattachment = var_3["_encstr_9E9523ADB7470C676323C9B0D2174ED9AE88EAB7FA93A2236BF7F9871581C37F30E2ABE0BC"];

    if ( isdefined( var_3["_encstr_82B618ABEA2661705BBB2A415B6D7332AB2AD71F9D3880AE324D"] ) )
        var_0.loadoutsecondaryreticle = var_3["_encstr_82B618ABEA2661705BBB2A415B6D7332AB2AD71F9D3880AE324D"];

    if ( isdefined( var_3["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"] ) )
        var_0.loadoutsecondaryvariantid = var_3["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"];

    if ( isdefined( var_3["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"] ) && scripts\mp\utility\game::getgametype() == "_encstr_9DB606854E567385" && var_3["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"] != -1 )
    {
        if ( isdefined( var_3["_encstr_B9711F055FB3D0C8A7AC306F136A089F8ADF9FB7C3CA2F20B10ED9A0FD1470C742"] ) && isdefined( self.pers["_encstr_89EF05D46BA8FD"] ) && var_3["_encstr_B9711F055FB3D0C8A7AC306F136A089F8ADF9FB7C3CA2F20B10ED9A0FD1470C742"] == self.pers["_encstr_89EF05D46BA8FD"] )
        {
            if ( isdefined( var_3["_encstr_AFAF1CE3851FD5890CE9C297611218139A8AF7FB608A21D7FA2AA7E2A350"] ) )
                var_0.loadoutsecondarycamo = var_3["_encstr_AFAF1CE3851FD5890CE9C297611218139A8AF7FB608A21D7FA2AA7E2A350"];
        }

        if ( var_3["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"] != -1 )
            setomnvar( "_encstr_A21F1CE54369CE532D68BA41D3755F059831696ADB8916ABC3A142FBFCCD", var_3["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"] );
    }

    if ( isdefined( var_3["_encstr_879C11A537D2DA37230B19FA98E96581D0A55B"] ) )
        var_0.loadoutmeleeslot = var_3["_encstr_879C11A537D2DA37230B19FA98E96581D0A55B"];

    var_0.loadoutperksfromgamemode = isdefined( var_3["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] );

    if ( isdefined( var_3["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] ) )
        var_0.loadoutperks = var_3["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"];

    var_0._id_1195E = isdefined( var_3["_encstr_88EA12B1DB0B8CB7EA3A511ED1C95841564EB6CD"] );

    if ( isdefined( var_3["_encstr_88EA12B1DB0B8CB7EA3A511ED1C95841564EB6CD"] ) )
        var_0.loadoutextraperks = var_3["_encstr_88EA12B1DB0B8CB7EA3A511ED1C95841564EB6CD"];

    if ( isdefined( var_3["_encstr_B3A418C6F61691DB5747A2175796C1D6B27347824E96B6854E5E"] ) )
        var_0.loadoutequipmentprimary = var_3["_encstr_B3A418C6F61691DB5747A2175796C1D6B27347824E96B6854E5E"];

    if ( isdefined( var_3["_encstr_BD141DD8DB2C46BDBAA3A2E11D4E58A8E2EA96C1B6CA733A82C92DD62C9C5E"] ) )
        var_0.loadoutextraequipmentprimary = var_3["_encstr_BD141DD8DB2C46BDBAA3A2E11D4E58A8E2EA96C1B6CA733A82C92DD62C9C5E"];

    if ( isdefined( var_3["_encstr_AA781A89AF4749179393F168BBACE1A08F460DEE3DE7904DBFAA4020"] ) )
        var_0.loadoutequipmentsecondary = var_3["_encstr_AA781A89AF4749179393F168BBACE1A08F460DEE3DE7904DBFAA4020"];

    if ( isdefined( var_3["_encstr_BAA71FE1872A0D383D53FD527B0270258377632167B2C0A8736F2188E5FCB8F67B"] ) )
        var_0.loadoutextraequipmentsecondary = var_3["_encstr_BAA71FE1872A0D383D53FD527B0270258377632167B2C0A8736F2188E5FCB8F67B"];

    if ( isdefined( var_3["_encstr_B6920DDA60DB0FAFA33D538DD74913"] ) )
        var_0.loadoutsuper = var_3["_encstr_B6920DDA60DB0FAFA33D538DD74913"];

    if ( isbot( self ) )
    {
        var_0.loadoutaccessoryweapon = "_encstr_AABA05236DC831";
        var_0.loadoutaccessorydata = "_encstr_AABA05236DC831";
        var_0.loadoutaccessorylogic = "_encstr_AABA05236DC831";
    }
    else
    {
        var_0.loadoutaccessoryweapon = cac_getaccessoryweapon();
        var_0.loadoutaccessorydata = cac_getaccessorydata();
        var_0.loadoutaccessorylogic = force_interrupt_all_current_combat_actions();
    }

    if ( isdefined( var_3["_encstr_A4450FEB472A87A2834C172243E0E538F8"] ) )
    {
        if ( var_3["_encstr_A4450FEB472A87A2834C172243E0E538F8"] == "_encstr_A83C0BF7F4ABABC79045FE5807" )
        {
            if ( isbot( self ) )
                var_0.loadoutgesture = "_encstr_AABA05236DC831";
            else
                var_0.loadoutgesture = cac_getgesture();
        }
        else
            var_0.loadoutgesture = var_3["_encstr_A4450FEB472A87A2834C172243E0E538F8"];
    }

    if ( isdefined( var_3["_encstr_BAE713C8CFE03C60079B6BE3E83B5FEC7AAAF917B3"] ) && var_3["_encstr_BAE713C8CFE03C60079B6BE3E83B5FEC7AAAF917B3"] != "_encstr_B99C0FF382C5B813BA035133B732658894" || isdefined( var_3["_encstr_A1E71363923EA180A70CDA33FC2BCB59229AD0B0DF"] ) && var_3["_encstr_A1E71363923EA180A70CDA33FC2BCB59229AD0B0DF"] != "_encstr_B99C0FF382C5B813BA035133B732658894" || isdefined( var_3["_encstr_B9E71363DEC291F6ABD196961B63DCE8935616B6CC"] ) && var_3["_encstr_B9E71363DEC291F6ABD196961B63DCE8935616B6CC"] != "_encstr_B99C0FF382C5B813BA035133B732658894" )
    {
        var_0.loadoutstreaksfilled = 1;
        var_0.loadoutkillstreak1 = var_3["_encstr_BAE713C8CFE03C60079B6BE3E83B5FEC7AAAF917B3"];
        var_0.loadoutkillstreak2 = var_3["_encstr_A1E71363923EA180A70CDA33FC2BCB59229AD0B0DF"];
        var_0.loadoutkillstreak3 = var_3["_encstr_B9E71363DEC291F6ABD196961B63DCE8935616B6CC"];
    }

    if ( isdefined( var_3["_encstr_B77517780277DD90BB947337A125880E5BDA11404AFB83B813"] ) )
        var_0.loadoutusingspecialist = 1;
}

zone_get_node_nearest_2d_bounds( var_0, var_1 )
{
    var_2 = getclassindex( var_1 );
    self.class_num = var_2;
    var_3 = self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"];
    var_4 = issubstr( var_1, "_encstr_AB130FB183934054FA4733DBB752ADD15C" );

    if ( !var_4 )
    {
        var_0.loadoutarchetype = cac_getcharacterarchetype();

        if ( isdefined( var_3["_encstr_BD0526B9DF725510056B77CBD4F5A8962BCF1121F3CAA51838C25840BB8178CD02BF81AB0752ED60"] ) )
            var_0._id_11960 = var_3["_encstr_BD0526B9DF725510056B77CBD4F5A8962BCF1121F3CAA51838C25840BB8178CD02BF81AB0752ED60"];

        if ( isdefined( var_3["_encstr_87C30FC410893345733089A330AB3E9362"] ) )
        {
            var_0.loadoutprimary = var_3["_encstr_87C30FC410893345733089A330AB3E9362"];

            for ( var_5 = 0; var_5 < 10; var_5++ )
            {
                var_6 = getattachmentloadoutstring( var_5, "_encstr_987F080E394BDAC2E45E" );

                if ( isdefined( var_3[var_6] ) )
                    var_0.loadoutprimaryattachments[var_5] = var_3[var_6];
            }

            for ( var_7 = 0; var_7 < 4; var_7++ )
            {
                var_8 = getstickerloadoutstring( var_7, "_encstr_987F080E394BDAC2E45E" );

                if ( isdefined( var_3[var_8] ) )
                    var_0.loadoutprimarystickers[var_7] = var_3[var_8];
            }

            if ( isdefined( var_3["_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB"] ) )
                var_0.loadoutprimarycamo = var_3["_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB"];

            if ( isdefined( var_3["_encstr_B4312136DB1646B7D5A328E4B46B164E9734F69BDAAC1D5A1B828ED185D8A1ADCA9B8E"] ) )
                var_0.loadoutprimarycosmeticattachment = var_3["_encstr_B4312136DB1646B7D5A328E4B46B164E9734F69BDAAC1D5A1B828ED185D8A1ADCA9B8E"];

            if ( isdefined( var_3["_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9"] ) )
                var_0.loadoutprimaryreticle = var_3["_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9"];

            if ( isdefined( var_3["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"] ) )
                var_0.loadoutprimaryvariantid = var_3["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"];
        }
        else
        {
            var_0.loadoutprimary = cac_getweapon( var_2, 0 );

            for ( var_5 = 0; var_5 < 10; var_5++ )
            {
                var_0.loadoutprimaryattachments[var_5] = cac_getweaponattachment( var_2, 0, var_5 );
                var_0.loadoutprimaryattachmentids[var_5] = force_interrupt_current_combat_action( var_2, 0, var_5 );
            }

            var_0.loadoutprimarycamo = cac_getweaponcamo( var_2, 0 );
            var_0.loadoutprimaryreticle = cac_getweaponreticle( var_2, 0 );
            var_0.loadoutprimarylootitemid = cac_getweaponlootitemid( var_2, 0 );
            var_0.loadoutprimaryvariantid = cac_getweaponvariantid( var_2, 0 );
            var_0.loadoutprimarycosmeticattachment = cac_getweaponcosmeticattachment( var_2, 0 );

            for ( var_7 = 0; var_7 < 4; var_7++ )
                var_0.loadoutprimarystickers[var_7] = cac_getweaponsticker( var_2, 0, var_7 );
        }

        if ( isdefined( var_3["_encstr_94B2280B6707F2DFAB2B4ACFE1F8162AEFB5A737E93DD8847811BA12582834303D014F2759D1124E58BB"] ) )
            var_0._id_11961 = var_3["_encstr_94B2280B6707F2DFAB2B4ACFE1F8162AEFB5A737E93DD8847811BA12582834303D014F2759D1124E58BB"];

        if ( isdefined( var_3["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"] ) )
        {
            var_0.loadoutsecondary = var_3["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"];

            for ( var_5 = 0; var_5 < 10; var_5++ )
            {
                var_6 = getattachmentloadoutstring( var_5, "_encstr_B98F0AC7D5B99F4DDBA8353B" );

                if ( isdefined( var_3[var_6] ) )
                    var_0.loadoutsecondaryattachments[var_5] = var_3[var_6];
            }

            for ( var_7 = 0; var_7 < 4; var_7++ )
            {
                var_8 = getstickerloadoutstring( var_7, "_encstr_B98F0AC7D5B99F4DDBA8353B" );

                if ( isdefined( var_3[var_8] ) )
                    var_0.loadoutsecondarystickers[var_7] = var_3[var_8];
            }

            if ( isdefined( var_3["_encstr_A2EA151BD081D44253851297663F0A9C2980C73F48F807"] ) )
                var_0.loadoutsecondarycamo = var_3["_encstr_A2EA151BD081D44253851297663F0A9C2980C73F48F807"];

            if ( isdefined( var_3["_encstr_9E9523ADB7470C676323C9B0D2174ED9AE88EAB7FA93A2236BF7F9871581C37F30E2ABE0BC"] ) )
                var_0.loadoutsecondarycosmeticattachment = var_3["_encstr_9E9523ADB7470C676323C9B0D2174ED9AE88EAB7FA93A2236BF7F9871581C37F30E2ABE0BC"];

            if ( isdefined( var_3["_encstr_82B618ABEA2661705BBB2A415B6D7332AB2AD71F9D3880AE324D"] ) )
                var_0.loadoutsecondaryreticle = var_3["_encstr_82B618ABEA2661705BBB2A415B6D7332AB2AD71F9D3880AE324D"];

            if ( isdefined( var_3["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"] ) )
                var_0.loadoutsecondaryvariantid = var_3["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"];
        }
        else
        {
            var_0.loadoutsecondary = cac_getweapon( var_2, 1 );

            for ( var_5 = 0; var_5 < 10; var_5++ )
            {
                var_0.loadoutsecondaryattachments[var_5] = cac_getweaponattachment( var_2, 1, var_5 );
                var_0.loadoutsecondaryattachmentids[var_5] = force_interrupt_current_combat_action( var_2, 1, var_5 );
            }

            var_0.loadoutsecondarycamo = cac_getweaponcamo( var_2, 1 );
            var_0.loadoutsecondaryreticle = cac_getweaponreticle( var_2, 1 );
            var_0.loadoutsecondarylootitemid = cac_getweaponlootitemid( var_2, 1 );
            var_0.loadoutsecondaryvariantid = cac_getweaponvariantid( var_2, 1 );
            var_0.loadoutsecondarycosmeticattachment = cac_getweaponcosmeticattachment( var_2, 1 );

            for ( var_7 = 0; var_7 < 4; var_7++ )
                var_0.loadoutsecondarystickers[var_7] = cac_getweaponsticker( var_2, 1, var_7 );
        }

        if ( isdefined( var_3["_encstr_879C11A537D2DA37230B19FA98E96581D0A55B"] ) )
            var_0.loadoutmeleeslot = var_3["_encstr_879C11A537D2DA37230B19FA98E96581D0A55B"];

        var_0.loadoutequipmentprimary = cac_getequipmentprimary( var_2 );
        var_0.loadoutextraequipmentprimary = cac_getextraequipmentprimary( var_2 );
        var_0.loadoutequipmentsecondary = cac_getequipmentsecondary( var_2 );
        var_0.loadoutextraequipmentsecondary = cac_getextraequipmentsecondary( var_2 );
        var_0.loadoutsuper = cac_getsuper();
        var_0.loadoutgesture = cac_getgesture();
        var_0.loadoutaccessoryweapon = cac_getaccessoryweapon();
        var_0.loadoutaccessorydata = cac_getaccessorydata();
        var_0.loadoutaccessorylogic = force_interrupt_all_current_combat_actions();
        var_0.loadoutstreaksfilled = 1;
        var_0.loadoutkillstreak1 = cac_getkillstreak( 0, var_1 );
        var_0.loadoutkillstreak2 = cac_getkillstreak( 1, var_1 );
        var_0.loadoutkillstreak3 = cac_getkillstreak( 2, var_1 );
        var_0.loadoutusingspecialist = cac_getusingspecialist( var_2 );
    }
    else
    {
        if ( isdefined( var_3["_encstr_BD0526B9DF725510056B77CBD4F5A8962BCF1121F3CAA51838C25840BB8178CD02BF81AB0752ED60"] ) )
            var_0._id_11960 = var_3["_encstr_BD0526B9DF725510056B77CBD4F5A8962BCF1121F3CAA51838C25840BB8178CD02BF81AB0752ED60"];

        if ( isdefined( var_3["_encstr_87C30FC410893345733089A330AB3E9362"] ) )
        {
            var_0.loadoutprimary = var_3["_encstr_87C30FC410893345733089A330AB3E9362"];

            for ( var_5 = 0; var_5 < 10; var_5++ )
            {
                var_6 = getattachmentloadoutstring( var_5, "_encstr_987F080E394BDAC2E45E" );

                if ( isdefined( var_3[var_6] ) )
                    var_0.loadoutprimaryattachments[var_5] = var_3[var_6];
            }

            for ( var_7 = 0; var_7 < 4; var_7++ )
            {
                var_8 = getstickerloadoutstring( var_7, "_encstr_987F080E394BDAC2E45E" );

                if ( isdefined( var_3[var_8] ) )
                    var_0.loadoutprimarystickers[var_7] = var_3[var_8];
            }

            if ( isdefined( var_3["_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB"] ) )
                var_0.loadoutprimarycamo = var_3["_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB"];

            if ( isdefined( var_3["_encstr_B4312136DB1646B7D5A328E4B46B164E9734F69BDAAC1D5A1B828ED185D8A1ADCA9B8E"] ) )
                var_0.loadoutprimarycosmeticattachment = var_3["_encstr_B4312136DB1646B7D5A328E4B46B164E9734F69BDAAC1D5A1B828ED185D8A1ADCA9B8E"];

            if ( isdefined( var_3["_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9"] ) )
                var_0.loadoutprimaryreticle = var_3["_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9"];

            if ( isdefined( var_3["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"] ) )
                var_0.loadoutprimaryvariantid = var_3["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"];
        }
        else if ( !isagent( self ) && self calloutmarkerping_getactive() && getdvarint( "_encstr_A4861F93C99ED737C85DA3AD41F0BE63C9A12B1B55F5AF6BF07BD1AA2BA0448760", 1 ) == 1 )
            zoomkey( var_0 );
        else
        {
            var_0.loadoutprimary = table_getweapon( level.classtablename, var_2, 0 );

            for ( var_5 = 0; var_5 < 10; var_5++ )
                var_0.loadoutprimaryattachments[var_5] = table_getweaponattachment( level.classtablename, var_2, 0, var_5 );

            var_0.loadoutprimarycamo = table_getweaponcamo( level.classtablename, var_2, 0 );
            var_0.loadoutprimaryreticle = table_getweaponreticle( level.classtablename, var_2, 0 );
            var_0.loadoutsecondary = table_getweapon( level.classtablename, var_2, 1 );

            for ( var_5 = 0; var_5 < 10; var_5++ )
                var_0.loadoutsecondaryattachments[var_5] = table_getweaponattachment( level.classtablename, var_2, 1, var_5 );

            var_0.loadoutsecondarycamo = table_getweaponcamo( level.classtablename, var_2, 1 );
            var_0.loadoutsecondaryreticle = table_getweaponreticle( level.classtablename, var_2, 1 );
        }

        var_0.loadoutequipmentprimary = table_getequipmentprimary( level.classtablename, var_2 );
        var_0.loadoutextraequipmentprimary = table_getextraequipmentprimary( level.classtablename, var_2 );
        var_0.loadoutequipmentsecondary = table_getequipmentsecondary( level.classtablename, var_2 );
        var_0.loadoutextraequipmentsecondary = table_getextraequipmentsecondary( level.classtablename, var_2 );
        var_0.loadoutgesture = table_getgesture( level.classtablename, var_2 );
        var_0.loadoutsuper = table_getsuper( level.classtablename, var_2 );
        var_0.loadoutusingspecialist = table_getspecialist( level.classtablename, var_2 );
        var_0.loadoutaccessoryweapon = cac_getaccessoryweapon();
        var_0.loadoutaccessorydata = cac_getaccessorydata();
        var_0.loadoutaccessorylogic = force_interrupt_all_current_combat_actions();
        var_0.loadoutarchetype = cac_getcharacterarchetype();
        var_0.loadoutkillstreak1 = cac_getkillstreak( 0, var_1 );
        var_0.loadoutkillstreak2 = cac_getkillstreak( 1, var_1 );
        var_0.loadoutkillstreak3 = cac_getkillstreak( 2, var_1 );
        var_0.loadoutrigtrait = cac_getloadoutarchetypeperk();

        if ( getdvarint( "_encstr_9DFC184F278BAF28CDA26983478F78465223F3FFE3134D70FE7C", 0 ) )
            var_0.loadoutsuper = "_encstr_9F520E9B5DEB774267C0EBD29869FF7F";
    }
}

loadout_updateclasscallback( var_0 )
{
    if ( !isdefined( self.classcallback ) )
        scripts\engine\utility::error( "_encstr_8CFA4437B2D86617C6C62CCD37D0C28D36892C1BDA8033ABCDD8D14BBDE6104E95992B932BCDC6AC0293595C5DA5C92BC81033ED9310B16316B9DC10E48D0B1BB12616B16DC9" );

    var_1 = self [[ self.classcallback ]]();

    if ( !isdefined( var_1 ) )
        scripts\engine\utility::error( "_encstr_B3293C8933268B8F3A3ACB33634A9BEF4B8F880A65C037B7770151322E95507B7B59C77B09F1F81F9817488D4B19192867BEAFC6126131920CB3EFB80456" );

    if ( isdefined( var_1["_encstr_872D11D1FF892130152B9EE3788CA51CCBFBCF"] ) )
        var_0.loadoutarchetype = var_1["_encstr_872D11D1FF892130152B9EE3788CA51CCBFBCF"];

    if ( isdefined( var_1["_encstr_BD0526B9DF725510056B77CBD4F5A8962BCF1121F3CAA51838C25840BB8178CD02BF81AB0752ED60"] ) )
        var_0._id_11960 = var_1["_encstr_BD0526B9DF725510056B77CBD4F5A8962BCF1121F3CAA51838C25840BB8178CD02BF81AB0752ED60"];

    if ( isdefined( var_1["_encstr_87C30FC410893345733089A330AB3E9362"] ) )
        var_0.loadoutprimary = var_1["_encstr_87C30FC410893345733089A330AB3E9362"];

    for ( var_2 = 0; var_2 < 10; var_2++ )
    {
        var_3 = getattachmentloadoutstring( var_2, "_encstr_987F080E394BDAC2E45E" );

        if ( isdefined( var_1[var_3] ) )
            var_0.loadoutprimaryattachments[var_2] = var_1[var_3];
    }

    if ( isdefined( var_1["_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB"] ) )
        var_0.loadoutprimarycamo = var_1["_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB"];

    if ( isdefined( var_1["_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9"] ) )
        var_0.loadoutprimaryreticle = var_1["_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9"];

    if ( isdefined( var_1["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"] ) )
        var_0.loadoutprimaryvariantid = var_1["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"];

    if ( isdefined( var_1["_encstr_94B2280B6707F2DFAB2B4ACFE1F8162AEFB5A737E93DD8847811BA12582834303D014F2759D1124E58BB"] ) )
        var_0._id_11961 = var_1["_encstr_94B2280B6707F2DFAB2B4ACFE1F8162AEFB5A737E93DD8847811BA12582834303D014F2759D1124E58BB"];

    if ( isdefined( var_1["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"] ) )
        var_0.loadoutsecondary = var_1["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"];

    for ( var_2 = 0; var_2 < 10; var_2++ )
    {
        var_3 = getattachmentloadoutstring( var_2, "_encstr_B98F0AC7D5B99F4DDBA8353B" );

        if ( isdefined( var_1[var_3] ) )
            var_0.loadoutsecondaryattachments[var_2] = var_1[var_3];
    }

    if ( isdefined( var_1["_encstr_A2EA151BD081D44253851297663F0A9C2980C73F48F807"] ) )
        var_0.loadoutsecondarycamo = var_1["_encstr_A2EA151BD081D44253851297663F0A9C2980C73F48F807"];

    if ( isdefined( var_1["_encstr_82B618ABEA2661705BBB2A415B6D7332AB2AD71F9D3880AE324D"] ) )
        var_0.loadoutsecondaryreticle = var_1["_encstr_82B618ABEA2661705BBB2A415B6D7332AB2AD71F9D3880AE324D"];

    if ( isdefined( var_1["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"] ) )
        var_0.loadoutsecondaryvariantid = var_1["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"];

    if ( isdefined( var_1["_encstr_879C11A537D2DA37230B19FA98E96581D0A55B"] ) )
        var_0.loadoutmeleeslot = var_1["_encstr_879C11A537D2DA37230B19FA98E96581D0A55B"];

    if ( isdefined( var_1["_encstr_B3A418C6F61691DB5747A2175796C1D6B27347824E96B6854E5E"] ) )
        var_0.loadoutequipmentprimary = var_1["_encstr_B3A418C6F61691DB5747A2175796C1D6B27347824E96B6854E5E"];

    if ( isdefined( var_1["_encstr_BD141DD8DB2C46BDBAA3A2E11D4E58A8E2EA96C1B6CA733A82C92DD62C9C5E"] ) )
        var_0.loadoutextraequipmentprimary = var_1["_encstr_BD141DD8DB2C46BDBAA3A2E11D4E58A8E2EA96C1B6CA733A82C92DD62C9C5E"];

    if ( isdefined( var_1["_encstr_AA781A89AF4749179393F168BBACE1A08F460DEE3DE7904DBFAA4020"] ) )
        var_0.loadoutequipmentsecondary = var_1["_encstr_AA781A89AF4749179393F168BBACE1A08F460DEE3DE7904DBFAA4020"];

    if ( isdefined( var_1["_encstr_BAA71FE1872A0D383D53FD527B0270258377632167B2C0A8736F2188E5FCB8F67B"] ) )
        var_0.loadoutextraequipmentsecondary = var_1["_encstr_BAA71FE1872A0D383D53FD527B0270258377632167B2C0A8736F2188E5FCB8F67B"];

    if ( isdefined( var_1["_encstr_B6920DDA60DB0FAFA33D538DD74913"] ) )
        var_0.loadoutsuper = var_1["_encstr_B6920DDA60DB0FAFA33D538DD74913"];

    if ( isdefined( var_1["_encstr_A4450FEB472A87A2834C172243E0E538F8"] ) )
        var_0.loadoutgesture = var_1["_encstr_A4450FEB472A87A2834C172243E0E538F8"];

    var_0.loadoutstreaksfilled = isdefined( var_1["_encstr_AABF0F2B6D4F11A853438FAB126DAF129B"] ) || isdefined( var_1["_encstr_8ABF0FF882F75D103B14FFB93A673892D2"] ) || isdefined( var_1["_encstr_B1BF0FB1DBC28CED5DE86AD14E9516DA66"] );

    if ( isdefined( var_1["_encstr_A31B12E09AEF5518032CF7A1326F20AA4393FB49"] ) )
        var_0.loadoutstreaktype = var_1["_encstr_A31B12E09AEF5518032CF7A1326F20AA4393FB49"];

    if ( isdefined( var_1["_encstr_AABF0F2B6D4F11A853438FAB126DAF129B"] ) )
        var_0.loadoutkillstreak1 = var_1["_encstr_AABF0F2B6D4F11A853438FAB126DAF129B"];

    if ( isdefined( var_1["_encstr_8ABF0FF882F75D103B14FFB93A673892D2"] ) )
        var_0.loadoutkillstreak2 = var_1["_encstr_8ABF0FF882F75D103B14FFB93A673892D2"];

    if ( isdefined( var_1["_encstr_B1BF0FB1DBC28CED5DE86AD14E9516DA66"] ) )
        var_0.loadoutkillstreak3 = var_1["_encstr_B1BF0FB1DBC28CED5DE86AD14E9516DA66"];
}

loadout_updateclassdefault( var_0, var_1 )
{
    var_2 = getclassindex( var_1 );
    self.class_num = var_2;

    if ( !isdefined( var_2 ) )
    {
        var_3 = "_encstr_873A0CE15DDC8C95CC4BDC5646F1";
        var_4 = "_encstr_873A0CE15DDC8C95CC4BDC5646F1";

        if ( isdefined( self.name ) )
            var_3 = self.name;

        if ( isdefined( var_1 ) )
            var_4 = var_1;

        scripts\mp\utility\script::laststand_dogtags( "_encstr_B9C228DDCA1E6A9247033FF8EB7117BB5568E95A2A9035DD738A5DBA439B338A93763AB8B7130FE8488A" + var_3 + "_encstr_9C0E1704DD4B8EA101A5CD3B85369623408D36169BDC08F404" + var_4 );
    }

    if ( !isagent( self ) && self calloutmarkerping_getactive() && getdvarint( "_encstr_A4861F93C99ED737C85DA3AD41F0BE63C9A12B1B55F5AF6BF07BD1AA2BA0448760", 1 ) == 1 )
        zoomkey( var_0 );
    else
        zoneislocked( var_0, var_2 );

    var_0.loadoutequipmentprimary = table_getequipmentprimary( level.classtablename, var_2 );
    var_0.loadoutextraequipmentprimary = table_getextraequipmentprimary( level.classtablename, var_2 );
    var_0.loadoutequipmentsecondary = table_getequipmentsecondary( level.classtablename, var_2 );
    var_0.loadoutextraequipmentsecondary = table_getextraequipmentsecondary( level.classtablename, var_2 );
    var_0.loadoutgesture = table_getgesture( level.classtablename, var_2 );
    var_0.loadoutsuper = table_getsuper( level.classtablename, var_2 );
    var_0.loadoutusingspecialist = table_getspecialist( level.classtablename, var_2 );
    var_0.loadoutaccessoryweapon = cac_getaccessoryweapon();
    var_0.loadoutaccessorydata = cac_getaccessorydata();
    var_0.loadoutaccessorylogic = force_interrupt_all_current_combat_actions();
    var_0.loadoutarchetype = cac_getcharacterarchetype();
    var_0.loadoutkillstreak1 = cac_getkillstreak( 0, var_1 );
    var_0.loadoutkillstreak2 = cac_getkillstreak( 1, var_1 );
    var_0.loadoutkillstreak3 = cac_getkillstreak( 2, var_1 );
    var_0.loadoutrigtrait = cac_getloadoutarchetypeperk();

    if ( getdvarint( "_encstr_9DFC184F278BAF28CDA26983478F78465223F3FFE3134D70FE7C", 0 ) )
        var_0.loadoutsuper = "_encstr_9F520E9B5DEB774267C0EBD29869FF7F";
}

zoneislocked( var_0, var_1 )
{
    var_0.loadoutprimary = table_getweapon( level.classtablename, var_1, 0 );

    for ( var_2 = 0; var_2 < 10; var_2++ )
        var_0.loadoutprimaryattachments[var_2] = table_getweaponattachment( level.classtablename, var_1, 0, var_2 );

    var_0.loadoutprimarycamo = table_getweaponcamo( level.classtablename, var_1, 0 );
    var_0.loadoutprimaryreticle = table_getweaponreticle( level.classtablename, var_1, 0 );
    var_0.loadoutsecondary = table_getweapon( level.classtablename, var_1, 1 );

    for ( var_2 = 0; var_2 < 10; var_2++ )
        var_0.loadoutsecondaryattachments[var_2] = table_getweaponattachment( level.classtablename, var_1, 1, var_2 );

    var_0.loadoutsecondarycamo = table_getweaponcamo( level.classtablename, var_1, 1 );
    var_0.loadoutsecondaryreticle = table_getweaponreticle( level.classtablename, var_1, 1 );
}

zoomkey( var_0 )
{
    if ( !isdefined( self.showextractiontime ) )
    {
        if ( !isdefined( level.showextractiontime ) )
        {
            var_1 = randomint( 200 );
            level.showextractiontime = var_1;
            level.showhint = var_1;
        }
        else
        {
            level.showextractiontime++;
            level.showhint++;
        }

        self.showextractiontime = level.showextractiontime;
        self.showhint = level.showhint;
    }

    var_2 = zone_stompeenemyprogressupdate( self.showextractiontime, 1 );
    var_3 = zone_stompeenemyprogressupdate( self.showhint, 0 );
    var_4 = var_2[0];
    var_5 = var_2[1];
    var_6 = var_3[0];
    var_7 = var_3[1];
    var_0.loadoutprimary = var_4;

    foreach ( var_10, var_9 in var_5.attachcustomtoidmap )
    {
        var_0.loadoutprimaryattachments[var_0.loadoutprimaryattachments.size] = var_10;
        var_0.loadoutprimaryattachmentids[var_0.loadoutprimaryattachmentids.size] = var_9;
    }

    var_0.loadoutprimaryvariantid = var_5.variantid;
    var_0.loadoutsecondary = var_6;

    foreach ( var_10, var_9 in var_7.attachcustomtoidmap )
    {
        var_0.loadoutsecondaryattachments[var_0.loadoutsecondaryattachments.size] = var_10;
        var_0.loadoutsecondaryattachmentids[var_0.loadoutsecondaryattachmentids.size] = var_9;
    }

    var_0.loadoutsecondaryvariantid = var_7.variantid;
}

zone_stompeenemyprogressupdate( var_0, var_1 )
{
    var_2 = 0;
    var_3 = -1;
    var_4 = getdvarint( "_encstr_AB231BD802DAE6384AD04B6B07234950E151D82FBE2F689DBF3897934F", 1 );

    for (;;)
    {
        foreach ( var_8, var_6 in level.weaponlootmapdata )
        {
            if ( var_6.variantid == 0 || var_6.update_focus_fire_objective || !isdefined( var_6.attachcustomtoidmap ) )
                continue;

            if ( var_4 && isdefined( var_6.tut_bot_nameplate ) && !var_6.tut_bot_nameplate )
                continue;

            var_7 = strtok( var_8, "_encstr_B64C02F0" )[0];

            if ( var_1 != scripts\mp\utility\weapon::iscacprimaryweapon( var_7 ) )
                continue;

            var_3++;

            if ( var_3 == var_0 )
                return [ var_7, var_6 ];
        }
    }
}

loadout_updatestreaktype( var_0 )
{
    if ( istrue( var_0.loadoutusingspecialist ) )
        self.streaktype = "_encstr_872F165E939A01400B2B90C34841AE18E0B7FFDF8A8B6063";
    else
        self.streaktype = "_encstr_97B313076883B5C20FE5B8F245BF1A6B4B3897E3C0";

    var_0.loadoutstreaktype = self.streaktype;
}

loadout_updateabilities( var_0, var_1 )
{
    if ( !isdefined( self.pers["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] ) )
        self.pers["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] = [];

    if ( !isdefined( self.pers["_encstr_876715E02FA7617075D8C17839F5F241F2DA69C91AC88B"] ) )
        self.pers["_encstr_876715E02FA7617075D8C17839F5F241F2DA69C91AC88B"] = [];

    if ( !isdefined( self.pers["_encstr_88EA12B1DB0B8CB7EA3A511ED1C95841564EB6CD"] ) )
        self.pers["_encstr_88EA12B1DB0B8CB7EA3A511ED1C95841564EB6CD"] = [];

    if ( !isdefined( self.pers["_encstr_8024101147AFA1EF6B7BD14B224B8D5927E4"] ) )
        self.pers["_encstr_8024101147AFA1EF6B7BD14B224B8D5927E4"] = [];

    if ( !isdefined( self.pers["_encstr_B77517780277DD90BB947337A125880E5BDA11404AFB83B813"] ) )
        self.pers["_encstr_B77517780277DD90BB947337A125880E5BDA11404AFB83B813"] = 0;

    var_2 = getsubstr( var_1, 0, 7 ) == "_encstr_AA1608C07786F13312D3";
    var_3 = getsubstr( var_1, 0, 14 ) == "_encstr_AB130FB183934054FA4733DBB752ADD15C";

    if ( var_0.loadoutperksfromgamemode )
    {
        var_0.loadoutstandardperks = var_0.loadoutperks;

        if ( var_0._id_1195E )
            var_0.loadoutextraperks = var_0.loadoutextraperks;
    }
    else if ( !scripts\mp\utility\perk::perksenabled() )
        return;
    else if ( isai( self ) )
    {
        if ( isdefined( self.pers["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] ) )
            var_0.loadoutperks = self.pers["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"];
    }
    else
    {
        if ( var_1 == "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D" || var_1 == "_encstr_88E8076F67E8337212" )
            return;

        var_4 = loadout_getclassteam( var_1 );

        for ( var_5 = 0; var_5 < 3; var_5++ )
        {
            var_6 = "_encstr_B99C0FF382C5B813BA035133B732658894";

            if ( var_4 != "_encstr_AABA05236DC831" )
            {
                var_7 = getclassindex( var_1 );
                var_6 = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_4, var_7, "_encstr_9E95066E81471B5F", "_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7" );
            }
            else if ( var_2 || var_3 )
            {
                var_7 = getclassindex( var_1 );
                var_6 = table_getperk( level.classtablename, var_7, var_5 );
            }
            else
                var_6 = cac_getloadoutperk( self.class_num, var_5 );

            if ( isdefined( var_6 ) && var_6 != "_encstr_B99C0FF382C5B813BA035133B732658894" )
            {
                var_0.loadoutperks[var_0.loadoutperks.size] = var_6;
                var_0.loadoutstandardperks[var_0.loadoutstandardperks.size] = var_6;
            }
        }

        for ( var_5 = 0; var_5 < 3; var_5++ )
        {
            var_6 = "_encstr_B99C0FF382C5B813BA035133B732658894";

            if ( var_4 != "_encstr_AABA05236DC831" )
            {
                var_7 = getclassindex( var_1 );
                var_6 = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_4, var_7, "_encstr_9E95066E81471B5F", "_encstr_80350BACE1A339C21456936D9B" );
            }
            else if ( var_2 || var_3 )
            {
                var_7 = getclassindex( var_1 );
                var_6 = table_getextraperk( level.classtablename, var_7, var_5 );
            }
            else
                var_6 = cac_getloadoutextraperk( self.class_num, var_5 );

            if ( isdefined( var_6 ) && var_6 != "_encstr_B99C0FF382C5B813BA035133B732658894" )
                var_0.loadoutextraperks[var_0.loadoutextraperks.size] = var_6;
        }

        var_6 = "_encstr_B99C0FF382C5B813BA035133B732658894";

        if ( var_4 != "_encstr_AABA05236DC831" )
        {
            var_7 = getclassindex( var_1 );
            var_6 = scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_4, var_7, "_encstr_9E95066E81471B5F", "_encstr_B2C90EC99EC903C771588BD2F9BBFAF7" );
        }
        else
            var_6 = cac_getloadoutarchetypeperk();

        if ( isdefined( var_6 ) && var_6 != "_encstr_B99C0FF382C5B813BA035133B732658894" )
        {
            var_0.loadoutperks[var_0.loadoutperks.size] = var_6;
            self.pers["_encstr_8024101147AFA1EF6B7BD14B224B8D5927E4"] = var_6;
            var_0.loadoutrigtrait = var_6;
        }

        var_7 = getclassindex( var_1 );
        return;
    }
}

loadout_getclasstype( var_0 )
{
    var_1 = loadout_getclassteam( var_0 );

    if ( var_1 == "_encstr_AABA05236DC831" && !isdefined( var_0 ) )
        return "_encstr_B73407B68FAB1BAD91";

    if ( var_1 != "_encstr_AABA05236DC831" )
        return "_encstr_89EF05D46BA8FD";
    else if ( issubstr( var_0, "_encstr_B73407B68FAB1BAD91" ) )
        return "_encstr_B73407B68FAB1BAD91";
    else if ( var_0 == "_encstr_87AC099DB05B59ADF619AC" )
        return "_encstr_87AC099DB05B59ADF619AC";
    else if ( issubstr( var_0, "_encstr_9D0B0D0E6D3F9B87C980674F78817D" ) )
        return "_encstr_9D0B0D0E6D3F9B87C980674F78817D";
    else if ( var_0 == "_encstr_9BAA097EB163581D86D2B0" )
        return "_encstr_9BAA097EB163581D86D2B0";
    else if ( var_0 == "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D" )
        return "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D";
    else if ( var_0 == "_encstr_88E8076F67E8337212" )
        return "_encstr_88E8076F67E8337212";
    else
        return "_encstr_AA1608C07786F13312D3";
}

_id_1194E( var_0, var_1 )
{
    var_2 = loadout_getclasstype( var_1 );

    switch ( var_2 )
    {
        case "_encstr_89EF05D46BA8FD":
            break;
        case "_encstr_B73407B68FAB1BAD91":
            break;
        case "_encstr_9D0B0D0E6D3F9B87C980674F78817D":
            break;
        case "_encstr_87AC099DB05B59ADF619AC":
            _id_1194F( var_0, var_1 );
            break;
        case "_encstr_9BAA097EB163581D86D2B0":
            break;
        case "_encstr_AA1608C07786F13312D3":
            break;
        case "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D":
            break;
    }

    return var_0;
}

loadout_updateclass( var_0, var_1 )
{
    if ( !isagent( self ) && self calloutmarkerping_getactive() && getdvarint( "_encstr_A4861F93C99ED737C85DA3AD41F0BE63C9A12B1B55F5AF6BF07BD1AA2BA0448760", 1 ) == 1 && scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" )
        var_1 = "_encstr_AA1608C07786F13312D3" + ( randomint( 5 ) + 1 );

    var_2 = loadout_getclasstype( var_1 );

    switch ( var_2 )
    {
        case "_encstr_89EF05D46BA8FD":
            loadout_updateclassteam( var_0, var_1 );
            break;
        case "_encstr_B73407B68FAB1BAD91":
            loadout_updateclasscustom( var_0, var_1 );
            break;
        case "_encstr_87AC099DB05B59ADF619AC":
            loadout_updateclassgamemode( var_0, var_1 );
            break;
        case "_encstr_9D0B0D0E6D3F9B87C980674F78817D":
            zone_get_node_nearest_2d_bounds( var_0, var_1 );
            break;
        case "_encstr_9BAA097EB163581D86D2B0":
            loadout_updateclasscallback( var_0 );
            break;
        case "_encstr_AA1608C07786F13312D3":
            loadout_updateclassdefault( var_0, var_1 );
            break;
        case "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D":
            break;
        case "_encstr_88E8076F67E8337212":
            break;
    }

    if ( !istrue( game["_encstr_87010E111E3823354DC251C560F3ED0A"] ) )
        self.pers["_encstr_8A7219235633C257B1A3F4C12B39B0477B4E9AAD96DC29CD2356F0"] = scripts\mp\teams::pickdefaultoperatorskin( var_0.loadoutprimary );

    loadout_updatehasnvg( var_0 );
    loadout_updateclassfistweapons( var_0 );
    loadout_updatestreaktype( var_0 );
    loadout_updateabilities( var_0, var_1 );
    var_0 = loadout_validateclass( var_0, var_1 );

    if ( !isbot( self ) && isdefined( level.set_systems_init_flag ) && level.set_systems_init_flag )
        zvelscale( var_0 );
    else
        loadout_updateclassfinalweapons( var_0 );

    if ( isdefined( level._id_11C88 ) )
        self [[ level._id_11C88 ]]( var_0 );

    return var_0;
}

loadout_updateclassfistweapons( var_0 )
{
    if ( isdefined( level.set_systems_init_flag ) && level.set_systems_init_flag && issameweapon( var_0.loadoutprimary ) )
        var_0.loadoutprimary = var_0.loadoutprimary;
    else if ( var_0.loadoutprimary == "_encstr_AABA05236DC831" )
        var_0.loadoutprimary = "_encstr_9BED0AA307609154C76BDB23";

    if ( scripts\mp\utility\game::handle_carry_special_item() )
    {
        if ( var_0.loadoutsecondary == "_encstr_AABA05236DC831" )
            var_0.loadoutsecondary = "_encstr_AABA05236DC831";
    }
    else if ( var_0.loadoutsecondary == "_encstr_AABA05236DC831" && var_0.loadoutprimary != "_encstr_9BED0AA307609154C76BDB23" && !istrue( self.isjuggernaut ) )
        var_0.loadoutsecondary = "_encstr_9BED0AA307609154C76BDB23";
    else if ( var_0.loadoutprimary == "_encstr_9BED0AA307609154C76BDB23" && var_0.loadoutsecondary == "_encstr_9BED0AA307609154C76BDB23" )
        var_0.loadoutsecondary = "_encstr_AABA05236DC831";
}

loadout_updatehasnvg( var_0 )
{
    if ( scripts\cp_mp\utility\game_utility::isnightmap() )
        var_0.loadouthasnvg = 1;
}

loadout_validateclass( var_0, var_1 )
{
    var_2 = scripts\mp\utility\game::isanymlgmatch() && issubstr( var_1, "_encstr_AA1608C07786F13312D3" );

    if ( issubstr( var_1, "_encstr_B73407B68FAB1BAD91" ) || var_2 )
        return scripts\mp\validation::validateloadout( var_0 );

    return var_0;
}

loadout_forcearchetype( var_0 )
{
    var_1 = getdvarint( "_encstr_8F0D0FFA071AC64756F25F109BD3C9A079", 0 );

    if ( var_1 > 0 )
    {
        var_2 = getdvarint( "_encstr_8F0D0FFA071AC64756F25F109BD3C9A079", 0 );

        switch ( var_2 )
        {
            case 1:
                var_0.loadoutarchetype = "_encstr_A6B3120F05CFBC15435ADB2FF1F723E338B88B13";
                break;
            default:
                var_0.loadoutarchetype = "_encstr_A6B3120F05CFBC15435ADB2FF1F723E338B88B13";
                break;
        }
    }
    else if ( var_1 == -1 )
    {
        var_3 = [ "_encstr_A6B3120F05CFBC15435ADB2FF1F723E338B88B13" ];
        var_4 = randomint( var_3.size );
        var_0.loadoutarchetype = var_3[var_4];
        self iprintlnbold( "_encstr_9FE01394B0CDC8DB6B080A9C6C1A2BA3BC0756A308" + var_3[var_4] );
    }
}

loadout_updateplayerarchetype( var_0 )
{
    if ( !istrue( self.btestclient ) )
    {
        if ( !isdefined( level.aonrules ) || level.aonrules == 0 )
        {

        }
    }

    self.loadoutarchetype = var_0.loadoutarchetype;
    scripts\mp\weapons::updatemovespeedscale();
    var_1 = 1;
    var_2 = 2;
    var_3 = 4;
    var_4 = 8;
    var_5 = 0;
    var_6 = undefined;
    var_7 = undefined;
    var_8 = 400;
    var_9 = 400;
    var_10 = 900;

    if ( scripts\cp_mp\utility\game_utility::isrealismenabled() )
    {
        var_9 = 133.333;
        var_10 = 1800;
    }

    switch ( self.loadoutarchetype )
    {
        case "_encstr_A6B3120F05CFBC15435ADB2FF1F723E338B88B13":
            var_5 = var_1 | var_2 | var_3;
            var_6 = scripts\mp\archetypes\archassault::applyarchetype;
            var_7 = "_encstr_BEE00AB3AC6EA3D8B49D348E";
            self.clothtype = var_7;
            break;
        default:
            if ( !istrue( self.btestclient ) )
            {
                if ( !isdefined( level.aonrules ) || level.aonrules == 0 )
                {

                }
            }

            break;
    }

    self setcamerathirdperson( 0 );

    if ( getdvarint( "_encstr_A24B1BB4CD901BB020490BB419163AFF73B861B2C1AACE60184DFF2324" ) )
    {
        self allowdoublejump( var_5 & var_1 );
        self allowwallrun( var_5 & var_3 );
        self allowdodge( var_5 & var_4 );
    }
    else
    {
        self allowdoublejump( 0 );
        self allowwallrun( 0 );
        self allowdodge( 0 );
    }

    self allowslide( var_5 & var_2 );
    self allowlean( 0 );
    self energy_setmax( 0, var_8 );
    self energy_setenergy( 0, var_8 );
    self energy_setrestorerate( 0, var_9 );
    self energy_setresttimems( 0, var_10 );
    self energy_setmax( 1, 50 );
    self energy_setenergy( 1, 50 );
    self energy_setrestorerate( 1, 10 );
    self energy_setresttimems( 1, scripts\engine\utility::ter_op( scripts\mp\utility\game::isanymlgmatch(), 2500, 0 ) );

    if ( isdefined( var_6 ) )
        self [[ var_6 ]]();
}

loadout_updateclassfinalweapons( var_0 )
{
    if ( istrue( var_0._id_11960 ) )
        var_0.loadoutprimaryobject = fixsuperforbr( var_0.loadoutprimary, var_0.loadoutprimaryattachments, var_0.loadoutprimarycamo, var_0.loadoutprimaryreticle, var_0.loadoutprimaryvariantid, var_0.loadoutprimaryattachmentids, var_0.loadoutprimarycosmeticattachment, var_0.loadoutprimarystickers, istrue( var_0.loadouthasnvg ) );
    else
        var_0.loadoutprimaryobject = buildweapon( var_0.loadoutprimary, var_0.loadoutprimaryattachments, var_0.loadoutprimarycamo, var_0.loadoutprimaryreticle, var_0.loadoutprimaryvariantid, var_0.loadoutprimaryattachmentids, var_0.loadoutprimarycosmeticattachment, var_0.loadoutprimarystickers, istrue( var_0.loadouthasnvg ) );

    var_0.loadoutprimaryfullname = createheadicon( var_0.loadoutprimaryobject );

    if ( var_0.loadoutsecondary == "_encstr_AABA05236DC831" )
    {
        var_0.loadoutsecondaryfullname = "_encstr_AABA05236DC831";
        var_0.loadoutsecondaryobject = undefined;
    }
    else
    {
        if ( istrue( var_0._id_11961 ) )
            var_0.loadoutsecondaryobject = fixsuperforbr( var_0.loadoutsecondary, var_0.loadoutsecondaryattachments, var_0.loadoutsecondarycamo, var_0.loadoutsecondaryreticle, var_0.loadoutsecondaryvariantid, var_0.loadoutsecondaryattachmentids, var_0.loadoutsecondarycosmeticattachment, var_0.loadoutsecondarystickers, istrue( var_0.loadouthasnvg ) );
        else
            var_0.loadoutsecondaryobject = buildweapon( var_0.loadoutsecondary, var_0.loadoutsecondaryattachments, var_0.loadoutsecondarycamo, var_0.loadoutsecondaryreticle, var_0.loadoutsecondaryvariantid, var_0.loadoutsecondaryattachmentids, var_0.loadoutsecondarycosmeticattachment, var_0.loadoutsecondarystickers, istrue( var_0.loadouthasnvg ) );

        var_0.loadoutsecondaryfullname = createheadicon( var_0.loadoutsecondaryobject );
    }

    if ( var_0.loadoutmeleeslot != "_encstr_AABA05236DC831" )
    {
        self giveweapon( var_0.loadoutmeleeslot );
        self assignweaponmeleeslot( var_0.loadoutmeleeslot );
    }
}

loadout_updateplayerweapons( var_0, var_1, var_2, var_3 )
{
    var_4 = respawnitems_getrespawnitems();
    var_5 = respawnitems_hasweapondata( var_4 );
    var_6 = level.magcount;
    var_7 = loadout_giveprimaryweapon( var_0, var_4, var_5 );
    var_8 = loadout_givesecondaryweapon( var_0, var_4, var_5 );
    zombievehiclelaststand( var_0, var_7, var_8, var_4, var_5, var_6 );
    self.loadoutmeleeslot = var_0.loadoutmeleeslot;

    if ( !isdefined( var_7 ) )
        scripts\mp\utility\script::laststand_dogtags( var_0.loadoutprimary );

    if ( isdefined( var_7 ) && self hasweapon( var_7 ) )
        var_9 = var_7;
    else
        var_9 = var_8;

    if ( isdefined( var_8 ) && var_8.basename != "_encstr_AABA05236DC831" && isdefined( var_7 ) && var_7.basename == "_encstr_9B660D018F3841EE3A23DBEE3639F0" )
        var_9 = var_8;

    if ( !isai( self ) )
        scripts\cp_mp\utility\inventory_utility::_switchtoweapon( var_9 );

    if ( !isdefined( var_2 ) || var_2 )
    {
        var_3 = shouldskipfirstraise( var_9, var_3 );

        if ( !isagent( self ) )
            self setspawnweapon( var_9, !var_3 );
    }

    self.spawnweaponobj = var_9;
    _id_11951();
}

zombierespawning()
{
    if ( isdefined( self.primaryweaponobj ) && !self hasweapon( self.primaryweaponobj ) )
    {
        loadout_giveprimaryweapon( self.classstruct );
        thread _id_13C58();
    }

    if ( isdefined( self.secondaryweaponobj ) && !self hasweapon( self.secondaryweaponobj ) )
    {
        loadout_givesecondaryweapon( self.classstruct );
        thread _id_13C58();
    }
}

loadout_giveprimaryweapon( var_0, var_1, var_2 )
{
    self.loadoutprimary = var_0.loadoutprimary;
    self.loadoutprimarycamo = var_0.loadoutprimarycamo;
    self.loadoutprimaryattachments = var_0.loadoutprimaryattachments;
    self.loadoutprimaryattachmentids = var_0.loadoutprimaryattachmentids;
    self.loadoutprimaryreticle = var_0.loadoutprimaryreticle;
    self.loadoutprimarylootitemid = var_0.loadoutprimarylootitemid;
    self.loadoutprimaryvariantid = var_0.loadoutprimaryvariantid;
    var_3 = zombiespawninair( "_encstr_987F080E394BDAC2E45E", var_0.loadoutprimaryobject, var_1, var_2 );
    self.primaryweapon = var_0.loadoutprimaryfullname;
    self.primaryweaponobj = var_0.loadoutprimaryobject;
    self.pers["_encstr_BE310E8339B4B60B272FEA591607BD9B"] = var_0.loadoutprimaryfullname;
    return var_3;
}

loadout_givesecondaryweapon( var_0, var_1, var_2 )
{
    self.loadoutsecondary = var_0.loadoutsecondary;
    self.loadoutsecondarycamo = var_0.loadoutsecondarycamo;
    self.loadoutsecondaryattachments = var_0.loadoutsecondaryattachments;
    self.loadoutsecondaryattachmentids = var_0.loadoutsecondaryattachmentids;
    self.loadoutsecondaryreticle = var_0.loadoutsecondaryreticle;
    self.loadoutsecondarylootitemid = var_0.loadoutsecondarylootitemid;
    self.loadoutsecondaryvariantid = var_0.loadoutsecondaryvariantid;
    var_3 = zombiespawninair( "_encstr_B98F0AC7D5B99F4DDBA8353B", var_0.loadoutsecondaryobject, var_1, var_2 );
    self.secondaryweapon = var_0.loadoutsecondaryfullname;
    self.secondaryweaponobj = var_0.loadoutsecondaryobject;
    self.pers["_encstr_B68910905AD6CFD88B411E936FD761B9BD92"] = var_0.loadoutsecondaryfullname;
    return var_3;
}

zombiespawninair( var_0, var_1, var_2, var_3 )
{
    var_4 = undefined;

    if ( !istrue( var_3 ) )
        var_4 = var_1;
    else
        var_4 = respawnitems_getweaponobj( var_2, var_0 );

    if ( !getqueuedspleveltransients( var_4 ) )
    {
        if ( scripts\mp\riotshield::isriotshield( var_4 ) && !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) && isdefined( self.infil ) && !istrue( self.stopchallengetimers ) )
        {

        }
        else
        {
            var_4 = scripts\mp\weapons::updatesavedaltstate( var_4 );
            scripts\cp_mp\utility\inventory_utility::_giveweapon( var_4, undefined, undefined, 1 );
            scripts\mp\weapons::updatetogglescopestate( var_4 );
            scripts\mp\perks\weaponpassives::loadoutweapongiven( var_4 );
        }
    }

    return var_4;
}

zombievehiclelaststand( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = [];

    if ( isdefined( var_0.loadoutprimaryobject ) && var_0.loadoutprimaryobject.basename != "_encstr_AABA05236DC831" )
        var_6[var_6.size] = var_0.loadoutprimaryobject;

    if ( isdefined( var_0.loadoutsecondaryobject ) && var_0.loadoutsecondaryobject.basename != "_encstr_AABA05236DC831" )
        var_6[var_6.size] = var_0.loadoutsecondaryobject;

    foreach ( var_8 in var_6 )
        var_8.should_spawn_boss_one = var_8 hasattachment( "_encstr_A45E080BB1D0C071774A", 1 );

    if ( isdefined( level._id_11C73 ) )
        self [[ level._id_11C73 ]]( var_6 );
    else if ( istrue( var_4 ) )
    {
        respawnitems_giveweaponammo( var_3, "_encstr_987F080E394BDAC2E45E" );
        respawnitems_giveweaponammo( var_3, "_encstr_B98F0AC7D5B99F4DDBA8353B" );
    }
    else if ( var_5 != 3 )
    {
        if ( isdefined( var_1 ) )
            spawnammocountoverride_giveweaponammo( var_1, "_encstr_987F080E394BDAC2E45E", var_5 );

        if ( isdefined( var_2 ) )
            spawnammocountoverride_giveweaponammo( var_2, "_encstr_B98F0AC7D5B99F4DDBA8353B", var_5 );
    }
    else
    {
        foreach ( var_8 in var_6 )
        {
            if ( istrue( var_8.should_spawn_boss_one ) )
            {
                var_11 = weaponmaxammo( var_8 ) - weaponstartammo( var_8 );
                var_12 = self getweaponammostock( var_8 );
                self setweaponammostock( var_8, var_12 + var_11 );
            }
        }
    }

    if ( !istrue( var_4 ) && var_5 == 3 )
    {
        foreach ( var_8 in var_6 )
        {
            if ( istrue( var_8.hasalternate ) )
            {
                var_15 = var_8 getaltweapon();
                var_16 = weaponclass( var_15 );

                if ( var_16 == "_encstr_A28D080FA2D39DC7FAFA" && istrue( var_8.should_spawn_boss_one ) )
                    self setweaponammostock( var_15, 1 );
                else if ( var_16 == "_encstr_A91007F0AB1AC9A31A" )
                    self setweaponammoclip( var_15, scripts\engine\utility::ter_op( istrue( var_8.should_spawn_boss_one ), 8, 6 ) );

                continue;
            }

            if ( scripts\mp\utility\weapon::turnexfiltoside( var_8 ) )
                self setweaponammostock( var_8, self getweaponammostock( var_8 ) + weaponclipsize( var_8 ) * 3 );
        }
    }
}

_id_11951()
{
    scripts\mp\weapons::updatemovespeedscale();
}

loadout_updateplayerperks( var_0 )
{
    loadout_giveperk( "_encstr_BC871BCD83AC8DA5161B47CBBE6ECA63B2B13A4BCE5934568539D2CDEC" );

    if ( scripts\mp\utility\game::islaststandenabled() )
        scripts\mp\utility\perk::giveperk( "_encstr_9EAA160357C1E73CA33813DBB9D974EF9BB0948C65E96384" );

    loadout_giveperk( "_encstr_8C821B43D118EE9F8FC80BC3B651CFA68071C1D71521B5872E40D2BA99" );

    if ( scripts\cp_mp\utility\game_utility::isnightmap() )
        loadout_giveperk( "_encstr_9D7E19DCC1591BB4B01B1D5EBEE8C92C8D5B59277DA685B5DA5627" );

    if ( var_0.loadoutstandardperks.size > 0 )
    {
        var_1 = getdvarint( "_encstr_9B6D14DC1B277DC67B2C46F6574782599C6D9BE99933", 0 ) == 0;

        if ( var_1 )
            scripts\mp\perks\perks::giveperks( var_0.loadoutperks, 0 );
    }

    self.pers["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] = var_0.loadoutperks;
    self.pers["_encstr_876715E02FA7617075D8C17839F5F241F2DA69C91AC88B"] = var_0.loadoutstandardperks;
    self.pers["_encstr_88EA12B1DB0B8CB7EA3A511ED1C95841564EB6CD"] = var_0.loadoutextraperks;
    self.pers["_encstr_8024101147AFA1EF6B7BD14B224B8D5927E4"] = var_0.loadoutrigtrait;
    self.pers["_encstr_B77517780277DD90BB947337A125880E5BDA11404AFB83B813"] = var_0.loadoutusingspecialist;

    if ( isdefined( self.avoidkillstreakonspawntimer ) && self.avoidkillstreakonspawntimer > 0 )
        thread scripts\mp\perks\perks::giveperksafterspawn();

    if ( !isagent( self ) && scripts\mp\utility\dvars::getintproperty( "_encstr_B35115DC8DE4F5CD0DDEBB3856276DB9B7CD9BC1C2BBDC", 1 ) == 1 && game["_encstr_A9AD064B0D19E377"] != "_encstr_B9E70983DEE6D1760BB5CA" )
        scripts\mp\perks\perks::setomnvarsforperklist( "_encstr_B6E20F03E1674248E7FB0D70DFE55347E7", self.pers["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] );
}

loadout_updateplayerequipment( var_0 )
{
    var_1 = respawnitems_getrespawnitems();
    var_2 = respawnitems_hasequipmentdata( var_1 );
    self.loadoutequipmentprimary = var_0.loadoutequipmentprimary;
    self.loadoutequipmentsecondary = var_0.loadoutequipmentsecondary;
    var_3 = undefined;

    if ( !var_2 )
        var_3 = var_0.loadoutequipmentprimary;
    else
        var_3 = respawnitems_getequipmentref( var_1, "_encstr_987F080E394BDAC2E45E" );

    var_4 = undefined;

    if ( !var_2 )
        var_4 = var_0.loadoutequipmentsecondary;
    else
        var_4 = respawnitems_getequipmentref( var_1, "_encstr_B98F0AC7D5B99F4DDBA8353B" );

    scripts\mp\equipment::giveequipment( var_3, "_encstr_987F080E394BDAC2E45E" );
    scripts\mp\equipment::giveequipment( var_4, "_encstr_B98F0AC7D5B99F4DDBA8353B" );

    if ( var_2 )
    {
        respawnitems_giveequipmentammo( var_1, "_encstr_987F080E394BDAC2E45E" );
        respawnitems_giveequipmentammo( var_1, "_encstr_B98F0AC7D5B99F4DDBA8353B" );
    }

    if ( scripts\cp_mp\utility\game_utility::isnightmap() )
    {
        thread scripts\mp\equipment\nvg::runnvg();
        thread loadout_updateplayernvgs();
    }
}

loadout_updateplayernvgs()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self notify( "_encstr_AAB61938186721AF7D21F163A7E1689DA75292EBDBB835450B75F3" );
    self endon( "_encstr_AAB61938186721AF7D21F163A7E1689DA75292EBDBB835450B75F3" );
    var_0 = 0;

    if ( game["_encstr_8AC30D9CDEBA73466E41B1585E568C"] == 0 && !istrue( self.hasspawned ) )
    {
        if ( !scripts\mp\flags::gameflag( "_encstr_B87F0F4428EDB244C6889FF328BE123BA5" ) || scripts\mp\flags::gameflag( "_encstr_A20D0EF9B8412F9D3FE0337AF0B117D3" ) )
            var_0 = 1;
    }
    else if ( istrue( self.pers["_encstr_B7AA072BB3E7C99CAF"] ) )
        var_0 = 1;

    if ( istrue( self.inspawncamera ) )
        scripts\engine\utility::_id_143A5( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C", "_encstr_AB7E0D330B2359AA0EBEDCD12CE48E" );

    while ( !isdefined( self.operatorcustomization ) )
        waitframe();

    if ( var_0 )
        self nightvisionviewon( 1 );

    scripts\mp\equipment\nvg::nvg_update3rdperson( var_0 );
}

loadout_updateplayersuper( var_0 )
{
    var_1 = scripts\cp_mp\vehicles\light_tank::light_tank_supported();

    if ( !var_1 && var_0.loadoutsuper == "_encstr_9F520E9B5DEB774267C0EBD29869FF7F" )
        var_0.loadoutsuper = "_encstr_898B119BBAC12BC9BE1C85D8FA9B2BCD3A272F";

    var_2 = var_0.loadoutsuper;
    var_3 = respawnitems_getrespawnitems();
    var_4 = respawnitems_hassuperdata( var_3 );

    if ( var_4 )
        var_2 = respawnitems_getsuperref( var_3 );

    if ( isdefined( scripts\mp\supers::getcurrentsuper() ) )
    {
        var_5 = scripts\mp\supers::getcurrentsuperref();

        if ( var_5 == var_2 && !haschangedarchetype() )
        {
            scripts\mp\supers::givesuperweapon( self.super );
            return;
        }
    }

    if ( var_2 == "_encstr_AABA05236DC831" || !level.allowsupers )
    {
        scripts\mp\supers::clearsuper();
        self.loadoutsuper = undefined;
    }
    else if ( level.allowsupers && isdefined( self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] ) && isdefined( self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"]["_encstr_B6920DDA60DB0FAFA33D538DD74913"] ) )
    {
        self.loadoutsuper = self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"]["_encstr_B6920DDA60DB0FAFA33D538DD74913"];
        scripts\mp\supers::givesuper( self.loadoutsuper, 1 );
    }
    else if ( var_2 == "_encstr_9F520E9B5DEB774267C0EBD29869FF7F" && !scripts\cp_mp\vehicles\light_tank::light_tank_supported() )
    {
        scripts\mp\supers::clearsuper();
        self.loadoutsuper = undefined;
    }
    else
    {
        self.loadoutsuper = var_0.loadoutsuper;
        scripts\mp\supers::givesuper( var_2, 1 );

        if ( var_4 )
        {
            scripts\mp\supers::setsuperbasepoints( respawnitems_getsuperpoints( var_3 ) );
            scripts\mp\supers::setsuperextrapoints( respawnitems_getsuperextrapoints( var_3 ) );
        }
    }
}

loadout_updateplayergesture( var_0 )
{
    if ( !istrue( self.btestclient ) )
    {
        if ( var_0.loadoutgesture != "_encstr_AABA05236DC831" )
        {
            self.loadoutgesture = var_0.loadoutgesture;
            scripts\cp_mp\gestures::givegesture( var_0.loadoutgesture );
        }
    }
}

zombiethermalon( var_0 )
{
    var_1 = getdvarint( "_encstr_A47D199B6C4EFAE89CAFDD2CE81B43FADC57071C932BCD9B967BB9", 0 );

    if ( var_1 && isdefined( var_0.loadoutaccessorydata ) )
    {
        var_2 = scripts\mp\accessories::register_script_model_animation( var_0.loadoutaccessorydata );

        if ( isdefined( var_2 ) && var_2 == "_encstr_A60703ADA1" )
            return 1;
    }

    return 0;
}

loadout_updateplayeraccessory( var_0 )
{
    if ( !istrue( self.btestclient ) )
    {
        if ( isdefined( var_0.loadoutaccessoryweapon ) && var_0.loadoutaccessoryweapon != "_encstr_AABA05236DC831" )
        {
            if ( zombiethermalon( var_0 ) )
                return;

            self.loadoutaccessorydata = var_0.loadoutaccessorydata;
            self.loadoutaccessoryweapon = var_0.loadoutaccessoryweapon;
            scripts\mp\accessories::giveplayeraccessory( var_0.loadoutaccessorydata, var_0.loadoutaccessoryweapon, var_0.loadoutaccessorylogic );
        }
    }
}

loadout_updateplayerstreaktype( var_0 )
{
    self.streaktype = loadout_getplayerstreaktype( var_0.loadoutstreaktype );
}

loadout_updateplayerkillstreaks( var_0, var_1 )
{
    if ( !level.allowkillstreaks )
    {
        var_0.loadoutkillstreak1 = "_encstr_AABA05236DC831";
        var_0.loadoutkillstreak2 = "_encstr_AABA05236DC831";
        var_0.loadoutkillstreak3 = "_encstr_AABA05236DC831";
    }

    if ( var_0.loadoutstreaksfilled == 0 && isdefined( self.streakdata ) && self.streakdata.streaks.size > 0 && var_1 == "_encstr_87AC099DB05B59ADF619AC" )
    {
        var_2 = 0;

        foreach ( var_4 in self.streakdata.streaks )
        {
            if ( var_2 == 0 )
            {
                var_0.loadoutkillstreak1 = var_4;
                var_2++;
                continue;
            }

            if ( var_2 == 1 )
            {
                var_0.loadoutkillstreak2 = var_4;
                var_2++;
                continue;
            }

            if ( var_2 == 2 )
            {
                var_0.loadoutkillstreak3 = var_4;
                break;
            }
        }
    }

    if ( scripts\mp\utility\game::usefloorrocks() )
    {
        var_2 = 0;
        var_6 = getdvar( "_encstr_8CDD2480976AFEDF1A5D4D5836221BA3B363A8803315B6AF7382B55F0C497F4B0D83B8407BAD", "_encstr_976628308A03F9AB63D5060BBB773035211258B0035BBD402FFDB9F58933B9F753FAF0D8DAF5AF9BDFF6" );

        if ( var_6 != "_encstr_A40101" )
        {
            var_6 = strtok( var_6, "_encstr_B44C02C9" );

            foreach ( var_4 in var_6 )
            {
                if ( var_2 == 0 )
                {
                    var_0.loadoutkillstreak1 = var_6[0];
                    var_2++;
                    continue;
                }

                if ( var_2 == 1 )
                {
                    var_0.loadoutkillstreak2 = var_6[1];
                    var_2++;
                    continue;
                }

                if ( var_2 == 2 )
                {
                    var_0.loadoutkillstreak3 = var_6[2];
                    break;
                }
            }
        }
    }

    if ( level.allowkillstreaks && getdvar( "_encstr_8CE319D753B2D11EB72B9B439277D5190CA16171EB9BE0EDCF8273", "_encstr_A40101" ) != "_encstr_A40101" )
    {
        var_9 = [];

        if ( getdvar( "_encstr_AD0519A0B74ADED97A7D2721564333068B77A0D06FE433A342E49E", "_encstr_A40101" ) != "_encstr_A40101" )
        {
            var_9 = strtok( getdvar( "_encstr_AD0519A0B74ADED97A7D2721564333068B77A0D06FE433A342E49E", "_encstr_A40101" ), "_encstr_884C02C6" );

            for ( var_10 = 0; var_10 < 3; var_10++ )
            {
                if ( var_10 < var_9.size )
                {
                    var_11 = var_9[var_10];

                    if ( !isdefined( level.killstreaksetups[var_11] ) )
                        var_9[var_10] = "_encstr_AABA05236DC831";

                    continue;
                }

                var_9[var_10] = "_encstr_AABA05236DC831";
            }
        }
        else
        {
            var_9[0] = "_encstr_8CE60CA3DE5BC2AFB98EC94B6D59";
            var_9[1] = "_encstr_A2980A513FE33518CF0C312B";
            var_9[2] = "_encstr_AF330F47C0F793D23B32CF4A6D0E7592DA";
        }

        var_12 = strtok( getdvar( "_encstr_8CE319D753B2D11EB72B9B439277D5190CA16171EB9BE0EDCF8273", "_encstr_A40101" ), "_encstr_884C02C6" );

        foreach ( var_14 in var_12 )
        {
            if ( var_0.loadoutkillstreak1 == var_14 )
            {
                var_0.loadoutkillstreak1 = var_9[0];
                continue;
            }

            if ( var_0.loadoutkillstreak2 == var_14 )
            {
                var_0.loadoutkillstreak2 = var_9[1];
                continue;
            }

            if ( var_0.loadoutkillstreak3 == var_14 )
                var_0.loadoutkillstreak3 = var_9[2];
        }
    }

    var_16 = [ var_0.loadoutkillstreak1, var_0.loadoutkillstreak2, var_0.loadoutkillstreak3 ];

    if ( level.allowkillstreaks )
    {
        self.pers["_encstr_80F00E8208C7246F79469C9265E16F6A"] = 0;
        var_16 = replacetankwithwheelson( var_0 );
    }

    self.loadoutusingspecialist = var_0.loadoutusingspecialist;
    self setmlgdominationpoint( self.loadoutusingspecialist );

    if ( var_0.loadoutusingspecialist && level.allowkillstreaks )
        var_16 = replacewithspecialistkillstreaks( var_0 );

    var_17 = respawnitems_getrespawnitems();
    var_18 = respawnitems_hasstreakdata( var_17 );

    if ( var_18 && level.allowkillstreaks )
        var_16 = respawnitems_getstreaks( var_17 );

    if ( level.allowkillstreaks )
        var_16 = sortkillstreaksbycost( var_16 );

    if ( !isagent( self ) )
    {
        var_19 = scripts\mp\killstreaks\killstreaks::arekillstreaksequipped( var_16 );

        if ( !var_19 )
        {
            self notify( "_encstr_9D960E9AC0D4576DC0996771D15873EB" );
            var_20 = scripts\mp\killstreaks\killstreaks::getgimmeslotkillstreakstructs();
            var_21 = scripts\mp\killstreaks\killstreaks::getavailableequippedkillstreakstructs();

            if ( !scripts\mp\utility\perk::_hasperk( "_encstr_8C9E1ED237DB22713140FBD7C12B255B89C01A8B086F5A8C7890F3F37841E393" ) && !isdefined( self.earnedmaxkillstreak ) )
                scripts\mp\killstreaks\killstreaks::clearkillstreaks();

            for ( var_22 = 0; var_22 < var_16.size; var_22++ )
            {
                var_23 = var_16[var_22];

                if ( isdefined( var_23 ) && var_23 != "_encstr_AABA05236DC831" && var_23 != "_encstr_A40101" )
                    scripts\mp\killstreaks\killstreaks::equipkillstreak( var_23, var_22 + 1 );
            }

            for ( var_24 = var_20.size - 1; var_24 >= 0; var_24-- )
            {
                var_23 = var_20[var_24];

                if ( !var_23.isspecialist )
                    scripts\mp\killstreaks\killstreaks::awardkillstreakfromstruct( var_20[var_24], "_encstr_93610627DB28CDDB" );
            }

            for ( var_24 = 0; var_24 < var_21.size; var_24++ )
            {
                var_23 = var_21[var_24];

                if ( !var_23.isspecialist )
                    scripts\mp\killstreaks\killstreaks::awardkillstreakfromstruct( var_21[var_24], "_encstr_93610627DB28CDDB" );
            }
        }
    }

    self notify( "_encstr_B74C1959E2D55A38B4A58D366EE8E4B285D6E664D2DCD2B934CA8C" );
}

sortkillstreaksbycost( var_0 )
{
    for ( var_1 = 0; var_1 < var_0.size - 1; var_1++ )
    {
        if ( isdefined( var_0[var_1] ) && var_0[var_1] != "_encstr_AABA05236DC831" && var_0[var_1] != "_encstr_A40101" )
        {
            for ( var_2 = var_1 + 1; var_2 < var_0.size; var_2++ )
            {
                if ( isdefined( var_0[var_2] ) && var_0[var_2] != "_encstr_AABA05236DC831" && var_0[var_2] != "_encstr_A40101" )
                {
                    var_3 = scripts\mp\killstreaks\killstreaks::calcstreakcost( var_0[var_1] );
                    var_4 = scripts\mp\killstreaks\killstreaks::calcstreakcost( var_0[var_2] );

                    if ( var_4 < var_3 )
                    {
                        var_5 = var_0[var_2];
                        var_0[var_2] = var_0[var_1];
                        var_0[var_1] = var_5;
                    }
                }
            }
        }
    }

    return var_0;
}

loadout_updateplayeractionslots( var_0, var_1 )
{
    self setactionslot( 3, "_encstr_A4DC0819F2E399503F45" );
}

loadout_updatefieldupgrades( var_0, var_1 )
{
    if ( var_1 == "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D" )
        return;

    self.loadoutfieldupgrade1 = var_0.loadoutfieldupgrade1;
    self.loadoutfieldupgrade2 = var_0.loadoutfieldupgrade2;

    if ( setgamebattleplayerstats( self.loadoutfieldupgrade1 ) )
        self.loadoutfieldupgrade1 = "_encstr_A86C12EBDBF8A0B6610B6B6B238B73B0857591A1";

    if ( setgamebattleplayerstats( self.loadoutfieldupgrade2 ) )
        self.loadoutfieldupgrade2 = "_encstr_A86C12EBDBF8A0B6610B6B6B238B73B0857591A1";

    if ( scripts\mp\utility\game::isanymlgmatch() || self.loadoutfieldupgrade1 == self.loadoutfieldupgrade2 )
        self.loadoutfieldupgrade2 = "_encstr_AABA05236DC831";

    if ( level.allowsupers )
    {
        var_2 = scripts\cp_mp\utility\game_utility::getmapname();

        if ( issubstr( var_2, "_encstr_871606B583EB6BAF" ) && var_2 != "_encstr_B1110BDDD007984FF3EB671D71" )
        {
            self.loadoutfieldupgrade1 = player_give_killstreak( self.loadoutfieldupgrade1 );
            self.loadoutfieldupgrade2 = player_give_killstreak( self.loadoutfieldupgrade2 );

            if ( self.loadoutfieldupgrade1 == self.loadoutfieldupgrade2 )
                self.loadoutfieldupgrade2 = "_encstr_AABA05236DC831";
        }

        thread scripts\mp\supers::watchplayersuperdelayweapon();
        thread scripts\mp\perks\perkpackage::perkpackage_initperkpackages();

        if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
        {
            var_3 = player_get_carepackage_sentry( self.loadoutfieldupgrade1 );

            if ( isdefined( level.forcegivesuper ) )
            {
                self [[ level.forcegivesuper ]]( var_3 );
                return;
            }

            return;
        }
    }
    else if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
    {
        self._id_11954 = player_get_carepackage_sentry( self.loadoutfieldupgrade1 );

        if ( !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        {
            if ( isdefined( level.forcegivesuper ) )
                self [[ level.forcegivesuper ]]( "_encstr_B4F610A33B508F1370C93A2210A8838250D9" );
        }

        self.loadoutfieldupgrade1 = "_encstr_AABA05236DC831";
        self.loadoutfieldupgrade2 = "_encstr_AABA05236DC831";

        if ( getdvarint( "_encstr_B33B115F88DBC7DA731EF62E8903D185A3A0C7", 0 ) == 0 )
            scripts\mp\perks\perkpackage::perkpackage_initpersdata();
    }
}

player_get_carepackage_sentry( var_0 )
{
    if ( !isdefined( var_0 ) || var_0 == "_encstr_AABA05236DC831" )
        return "_encstr_B4F610A33B508F1370C93A2210A8838250D9";

    return var_0;
}

player_give_killstreak( var_0 )
{
    switch ( var_0 )
    {
        case "_encstr_9C2F12AB6DDB47527778EAA2287F0DF7F1560F20":
        case "_encstr_945B10A37F413BB229050570FE6172C7A589":
        case "_encstr_9E5F122867C0014D5102253E5D9ACFE92AF7482B":
            var_0 = "_encstr_B4F610A33B508F1370C93A2210A8838250D9";
            break;
        default:
            break;
    }

    return var_0;
}

loadout_updateplayer( var_0, var_1, var_2, var_3, var_4 )
{
    loadout_updateplayerstreaktype( var_1 );
    loadout_updateplayerarchetype( var_1 );

    if ( !istrue( level.noweaponsonstart ) )
        loadout_updateplayerweapons( var_1, var_2, var_3, var_4 );

    loadout_updateplayerperks( var_1 );

    if ( !istrue( level.noweaponsonstart ) )
        loadout_updateplayerequipment( var_1 );

    if ( !istrue( game["_encstr_87010E111E3823354DC251C560F3ED0A"] ) && scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" )
        loadout_updateplayerkillstreaks( var_1, var_2 );

    loadout_updateplayeractionslots( var_1, var_2 );

    if ( !istrue( game["_encstr_87010E111E3823354DC251C560F3ED0A"] ) )
        loadout_updatefieldupgrades( var_0, var_2 );

    self.pers["_encstr_9F690A0DBF9F69AE0A510886"] = self.class;
    self.lastclass = self.class;
    self.lastarchetypeinfo = self.changedarchetypeinfo;

    if ( isdefined( self.gamemode_chosenclass ) )
    {
        self.pers["_encstr_9E95066E81471B5F"] = self.gamemode_chosenclass;
        self.pers["_encstr_9F690A0DBF9F69AE0A510886"] = self.gamemode_chosenclass;
        self.class = self.gamemode_chosenclass;
        self.lastclass = self.gamemode_chosenclass;
        self.gamemode_chosenclass = undefined;
    }

    if ( isdefined( self.revive_chosenclass ) )
    {
        self.pers["_encstr_9E95066E81471B5F"] = self.revive_chosenclass;
        self.pers["_encstr_9F690A0DBF9F69AE0A510886"] = self.revive_chosenclass;
        self.class = self.revive_chosenclass;
        self.lastclass = self.revive_chosenclass;
    }

    scripts\mp\teams::setupplayermodel();
    loadout_updateplayeraccessory( var_1 );
}

setmlgspectatorclientloadoutdata( var_0, var_1 )
{
    if ( isagent( var_0 ) )
        return;

    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 notify( "_encstr_95BA23EB9BC8EDBDE777F33007AC8EBCD0FBE568902FDBD141204F02C8F3535399DBD9BB8B" );
    var_0 endon( "_encstr_95BA23EB9BC8EDBDE777F33007AC8EBCD0FBE568902FDBD141204F02C8F3535399DBD9BB8B" );
    var_0 useinvisibleplayerduringspawnselection();
    var_0 enableplayeruseforallplayers( level.laststand );
    var_0 setclientweaponinfo( 0, var_1.loadoutprimaryfullname );
    var_0 setclientweaponinfo( 1, var_1.loadoutsecondaryfullname );

    if ( isdefined( self.equipment["_encstr_987F080E394BDAC2E45E"] ) )
    {
        var_2 = scripts\mp\equipment::getequipmenttableinfo( self.equipment["_encstr_987F080E394BDAC2E45E"] );
        var_0 setclientloadoutinfo( "_encstr_AF750DF1DB82A110527827D8E32DC0", var_2.id );
    }

    if ( isdefined( self.equipment["_encstr_B98F0AC7D5B99F4DDBA8353B"] ) )
    {
        var_3 = scripts\mp\equipment::getequipmenttableinfo( self.equipment["_encstr_B98F0AC7D5B99F4DDBA8353B"] );
        var_0 setclientloadoutinfo( "_encstr_B8B90F6B5F6B7038529FC5DB73CAFC7812", var_3.id );
    }

    if ( scripts\mp\codcasterclientmatchdata::shouldlogcodcasterclientmatchdata() )
    {
        var_4 = scripts\mp\codcasterclientmatchdata::getcodcasterplayervalue( var_0, "_encstr_94F30B19C2D6B0765988DE7356" );
        scripts\mp\codcasterclientmatchdata::setcodcasterplayervalue( var_0, "_encstr_94F30B19C2D6B0765988DE7356", var_4 );
    }

    if ( isdefined( self.loadoutfieldupgrade1 ) )
        var_0 setclientloadoutinfo( "_encstr_95760DCC4BCA8D325507CEE4588C95", scripts\mp\supers::getsuperid( self.loadoutfieldupgrade1 ) );

    var_5 = scripts\mp\supers::getsuperid( var_1.loadoutsuper );
    var_0 setclientloadoutinfo( "_encstr_BEB4068F1B5BA3AB", var_5 );

    if ( isai( var_0 ) )
    {
        for ( var_6 = 0; var_6 < var_1.loadoutperks.size; var_6++ )
        {
            var_7 = var_1.loadoutperks[var_6];
            var_8 = scripts\mp\perks\perks::getperkid( var_7 );
            var_0 setclientloadoutinfo( var_6 + 1 + "_encstr_8C6E06D71C56E4DA", var_8 );
        }
    }
    else
    {
        if ( var_1.loadoutperksfromgamemode )
            var_1.loadoutstandardperks = var_1.loadoutperks;

        for ( var_6 = 0; var_6 < self.pers["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"].size; var_6++ )
        {
            var_7 = self.pers["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"][var_6];
            var_8 = scripts\mp\perks\perks::getperkid( var_7 );
            var_0 setclientloadoutinfo( var_6 + 1 + "_encstr_8C6E06D71C56E4DA", var_8 );
        }

        for ( var_6 = 0; var_6 < var_1.loadoutextraperks.size; var_6++ )
        {
            var_7 = var_1.loadoutextraperks[var_6];
            var_8 = scripts\mp\perks\perks::getperkid( var_7 );
            var_0 setclientloadoutinfo( var_6 + 1 + "_encstr_8C730B36BFF8105D07912185B4", var_8 );
        }
    }

    var_9 = var_1.loadoutrigtrait;
    var_10 = scripts\mp\perks\perks::getperkid( var_9 );
    var_0 setclientloadoutinfo( "_encstr_9CA7094AA80F7DABFFCFCC", var_10 );
    var_11 = scripts\mp\archetypes\archcommon::getrigindexfromarchetyperef( var_1.loadoutarchetype );
    var_0 setclientloadoutinfo( "_encstr_B4400AAB2399713863B3B9A8", var_11 );
}

shouldallowinstantclassswap()
{
    if ( scripts\cp_mp\utility\player_utility::isinvehicle( 1 ) || istrue( self.isjuggernaut ) )
        disableclassswapallowed();

    if ( !isdefined( self.instantclassswapallowed ) )
        return 1;

    return self.instantclassswapallowed;
}

swaploadout()
{
    if ( scripts\engine\utility::ent_flag_exist( "_encstr_BCB9142B8773029D12C739474383B9CE20E7B2DA4502" ) && scripts\engine\utility::ent_flag( "_encstr_BCB9142B8773029D12C739474383B9CE20E7B2DA4502" ) )
    {
        self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
        self endon( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
        self endon( "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
        self notify( "_encstr_BCC10CEE5B4F330C20F87B8F13EB" );
        self endon( "_encstr_BCC10CEE5B4F330C20F87B8F13EB" );

        if ( !scripts\engine\utility::ent_flag( "_encstr_9D3914138F687A5BD8593A7223ADDFB29015BC812530" ) )
            scripts\engine\utility::ent_flag_set( "_encstr_9D3914138F687A5BD8593A7223ADDFB29015BC812530" );

        self waittill( "_encstr_BCB9142B8773029D12C739474383B9CE20E7B2DA4502" );
    }

    setclass( self.pers["_encstr_9E95066E81471B5F"] );
    self.tag_stowed_back = undefined;
    self.tag_stowed_hip = undefined;
    scripts\mp\weapons::savetogglescopestates();
    scripts\mp\weapons::savealtstates();

    if ( scripts\mp\utility\game::allowclasschoice() )
        scripts\mp\utility\stats::incpersstat( "_encstr_8C710DD81B16E6DC868658DC76AC9B", 1 );

    giveloadout( self.pers["_encstr_89EF05D46BA8FD"], self.pers["_encstr_9E95066E81471B5F"], undefined, 1 );
    var_0 = scripts\mp\utility\game::unset_relic_grounded() && !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    if ( var_0 && isdefined( level.calculateclientmatchdataextrainfopayload ) )
        self [[ level.calculateclientmatchdataextrainfopayload ]]();

    if ( scripts\engine\utility::ent_flag_exist( "_encstr_9D3914138F687A5BD8593A7223ADDFB29015BC812530" ) && scripts\engine\utility::ent_flag( "_encstr_9D3914138F687A5BD8593A7223ADDFB29015BC812530" ) )
    {
        scripts\engine\utility::ent_flag_clear( "_encstr_9D3914138F687A5BD8593A7223ADDFB29015BC812530" );
        scripts\engine\utility::ent_flag_set( "_encstr_9F26152B7F567AD13F7BF95F285B2991882D98BA905327" );
    }
}

giveloadout( var_0, var_1, var_2, var_3, var_4 )
{
    self notify( "_encstr_A41712F05A531B5C6781D5588DD3E6FF3B22D0F0" );
    self.gettingloadout = 1;

    if ( isdefined( self.perks ) )
        self.oldperks = self.perks;

    loadout_clearplayer( var_3 );
    var_5 = zombiesignorevehicleexplosions();
    var_5 = _id_1194E( var_5, var_1 );
    self.select_bridge_two_spawners = var_5;
    var_6 = undefined;

    if ( isdefined( self.preloadedclassstruct ) )
    {
        var_6 = self.preloadedclassstruct;
        self.preloadedclassstruct = undefined;
        self.class_num = getclassindex( var_1 );

        if ( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
            self validateoperatorownership( self.class_num );
    }
    else
    {
        var_6 = loadout_getclassstruct();
        var_6 = loadout_updateclass( var_6, var_1 );
    }

    self.classstruct = var_6;
    loadout_updateplayer( var_5, var_6, var_1, var_2, var_4 );

    if ( var_1 != "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D" )
    {
        if ( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
            loadout_lognewlygivenloadout( var_5, var_6, var_1 );
    }

    self.gettingloadout = 0;
    respawnitems_clear();
    self notify( "_encstr_AA840C8E23B0EABF13F22178CF44" );
    self notify( "_encstr_B8030CCE4B3B2B627B8523DEBAD1" );
    scripts\mp\rank::tryresetrankxp();

    if ( !istrue( game["_encstr_87010E111E3823354DC251C560F3ED0A"] ) && !isagent( self ) )
        scripts\mp\killstreaks\killstreaks::resetforloadoutswitch();

    scripts\mp\playerlogic::trydisableminimap();
}

loadout_lognewlygivenloadout( var_0, var_1, var_2 )
{
    if ( !isplayer( self ) && !isalive( self ) )
        return;

    if ( isagent( self ) )
        return;

    if ( level.codcasterenabled )
        thread setmlgspectatorclientloadoutdata( self, var_1 );

    if ( getdvarint( "_encstr_B1B60AC10CAECB5C010FEDFB" ) == 0 )
        return;

    if ( var_1.uavbestid )
    {
        var_3 = 99;
        var_4 = "_encstr_88E8076F67E8337212";
    }
    else
    {
        var_3 = getclassindex( var_2 );
        var_4 = loadout_getclasstype( var_2 );
        var_5 = getsubstr( var_2, 0, 7 ) == "_encstr_AA1608C07786F13312D3";

        if ( var_5 )
            var_3 = var_3 + 20;
    }

    var_6 = var_1.tweakedbyplayerduringmatch || var_1.gamemodeforcednewloadout;
    var_1.tweakedbyplayerduringmatch = 0;
    var_1.gamemodeforcednewloadout = 0;
    var_7 = 0;

    if ( !isdefined( self.pers["_encstr_823D0E8BCF90AF5D41FFED914AF8B2A7"] ) )
        self.pers["_encstr_823D0E8BCF90AF5D41FFED914AF8B2A7"] = [];

    var_8 = -1;

    foreach ( var_12, var_10 in self.pers["_encstr_823D0E8BCF90AF5D41FFED914AF8B2A7"] )
    {
        var_11 = self.pers["_encstr_823D0E8BCF90AF5D41FFED914AF8B2A7"][var_12];

        if ( var_11 == var_3 )
        {
            if ( var_6 )
            {
                var_7 = var_7 + 1;
                continue;
            }

            var_8 = var_12;
        }
    }

    if ( var_8 == -1 || var_1.uavbestid )
    {
        var_8 = self.pers["_encstr_823D0E8BCF90AF5D41FFED914AF8B2A7"].size;
        self.pers["_encstr_823D0E8BCF90AF5D41FFED914AF8B2A7"][var_8] = var_3;
        loadout_logloadout( var_0, var_1, var_8, var_7, var_4 );
    }

    self.loadoutindex = var_8;
}

loadout_logloadout( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = 1;
    var_6 = var_4;
    var_7 = var_3;

    if ( isdefined( self.matchdatalifeindex ) )
        var_8 = self.matchdatalifeindex;
    else
        var_8 = -1;

    var_9 = scripts\mp\matchdata::gettimefrommatchstart( gettime() );
    var_10 = var_1.loadoutprimary;
    var_11 = [];

    for ( var_12 = 0; var_12 < 10; var_12++ )
    {
        var_11[var_12] = var_1.loadoutprimaryattachments[var_12];

        if ( !isdefined( var_11[var_12] ) )
            var_11[var_12] = "_encstr_A40101";
    }

    var_13 = var_1.loadoutprimarycamo;
    var_14 = var_1.loadoutprimaryreticle;
    var_15 = var_1.loadoutprimarylootitemid;
    var_16 = var_1.loadoutprimaryvariantid;
    var_17 = var_1.loadoutsecondary;
    var_18 = [];

    for ( var_12 = 0; var_12 < 10; var_12++ )
    {
        var_18[var_12] = var_1.loadoutsecondaryattachments[var_12];

        if ( !isdefined( var_18[var_12] ) )
            var_18[var_12] = "_encstr_A40101";
    }

    var_19 = var_1.loadoutsecondarycamo;
    var_20 = var_1.loadoutsecondaryreticle;
    var_21 = var_1.loadoutsecondarylootitemid;
    var_22 = var_1.loadoutsecondaryvariantid;
    var_23 = var_1.loadoutequipmentprimary;
    var_24 = var_1.loadoutequipmentsecondary;
    var_25 = [];
    var_26 = 3;

    for ( var_27 = 0; var_27 < var_26; var_27++ )
    {
        var_28 = "_encstr_B99C0FF382C5B813BA035133B732658894";

        if ( isdefined( var_1.loadoutstandardperks[var_27] ) )
            var_28 = var_1.loadoutstandardperks[var_27];

        var_25[var_27] = var_28;
    }

    var_29 = [];
    var_30 = var_1.loadoutextraperks.size;

    if ( var_30 > 3 )
        var_30 = 3;

    for ( var_27 = 0; var_27 < var_30; var_27++ )
        var_29[var_27] = var_1.loadoutextraperks[var_27];

    for ( var_27 = 0; var_27 < 3; var_27++ )
    {
        if ( !isdefined( var_29[var_27] ) )
            var_29[var_27] = "_encstr_AFBA0505631CA3";
    }

    self dlog_recordplayerevent( "_encstr_BD141AC81BED767DB2B3B2B91DEB1C8DC2F256C9AFD87BB023BDAE47", [ "_encstr_B6C60E9BF797624FB09BD95C30D08D5B", var_2, "_encstr_B74D0BD8D885DCB9F5D12F38AC", var_6, "_encstr_88EB15B55A23EBB6C23AD81A7D9519A547EB36BDABB9D1", var_7, "_encstr_B4FA15B603400A0B704BDBA21631B7872B872136A15090", var_8, "_encstr_A2FB196BF39125DE5F97D9DA4B9852AF5DBA2B1E23B9F35BD980C1", var_9, "_encstr_828B1CA7D207086B322341789A8E01ED4357AE954C9F53CF5BCAB8481265", var_10, "_encstr_B9D8220E4E2DB6B0E497AFBBAC85C1B737BE6EACE8AE38F58547D10B360DB556738EF503", var_11[0], "_encstr_BDD8226233301562569B1F879BF73B5F50FEDAAF6B78B0592769BBD7FF2BD28DB8235922", var_11[1], "_encstr_8BD822384EA5DAC24ECB7DEECA5807BDB9BE9B953A5D0EEB58A33A856C43B6AC37A3D746", var_11[2], "_encstr_A1D82258CD6075B70E12B13BF9EFABADF02FD3D52978FA87BFAB7B4201B317E7A811470B", var_11[3], "_encstr_9FD822D3CA12902F05C3CE336159079F8A083773184F70F1B9C5FC3AE380450D423B6915", var_11[4], "_encstr_97881A1FBAB2FB316AF7F1B86F91EB072A69162D932B89BE23AF7880", var_13, "_encstr_B6771DB7E237385B02335108EA9E313053A7BEA55CEF43DFEADAA3F0E2F5C3", var_14, "_encstr_8F0122DAFB489D49029A4997D7B1033875075F40830D07E1C8D8C04B5F54C358E8BE60D4", var_15, "_encstr_A109204BF5D09B5F0BA8C13B20705068B6E633D2C423DB8FD36892EB3F48A52F9029", var_16, "_encstr_988C1EE6958DDE7332584E2FFADD2B8583DE73D737CA475783BEBBCAC283BD37", var_17, "_encstr_878F24E6B26CB7CD19C23997BEDD952C83B7DCF59B2BE85738EB0BD1E816D81A5BCADC1DD70C", var_18[0], "_encstr_888F2453C9D6D7F550BBF2F12F20FF3787203A1993BDF36BC8DF19E441C8065BA199B2337E2F", var_18[1], "_encstr_808F2448820E07107389D64B5FD7B9E332CA38A15B27790B7B8F57C56CB721B9DDF2B040F1AA", var_18[2], "_encstr_B28F249B59D8BDCD19B0E42FF5DD59C2C1EDE6FADC2B1DBA83F52C3A472CD8866B9573A3AFCC", var_18[3], "_encstr_898F249BB28D7BB9C858C95EFABB2B2C38F6CDEB6ECAE8EAC1BE0B3AE8B0B1A16BCA371DBE43", var_18[4], "_encstr_BCF71C67631652CEB8B912D896C80D4A779F8B5FF74DABAD40464E26C830", var_19, "_encstr_80191FCD59C6F6CD23B027E5BEDDCA581CBD37D7372BA3EA1CAFE4ACD1D28DD8CA", var_20, "_encstr_9FC624B6759FF8C50732B8F8C99B9B71AB17B038DB2F430BEAF94040A2733788138549B029F3", var_21, "_encstr_9462222F4AA62F9517D6DA51D7E35351CA10E5FE97E733F803717B0B5012B25539C0C829", var_22, "_encstr_9E4B10D38038750AC59BF9EF0683B201E150", var_23, "_encstr_B43E0E816F994958A63281796A194763", var_24, "_encstr_B9240F8DBD0B32BD57D17D0EAC93DAAF81", var_25[0], "_encstr_BD240FB1DE8591BD573A7D83CA4EB6D726", var_25[1], "_encstr_8B240F45B0503CA2F5A13FFBFB1EAA4F92", var_25[2], "_encstr_9FE6153873B07BB37939828798979FB917AB023D8A26AA", var_29[0], "_encstr_BEE615E571201A0F20186AB221B717D321099D7ACFD172", var_29[1], "_encstr_BAE61580E1482AA1AF9D4FF3E93747EC31FBFD25076E2F", var_29[2], "_encstr_957F0D200B4DA07791A30D72EC795A", var_1.loadoutkillstreak1, "_encstr_A87F0DDAE80301336DB3EDC2FA2981", var_1.loadoutkillstreak2, "_encstr_B87F0DC4ABF9E25BA3A0AFC710BE52", var_1.loadoutkillstreak3, "_encstr_B77410396267D9C83195391FBAE69015E78F", var_0.loadoutfieldupgrade1, "_encstr_8F7410DAB87779102FE3AB3F0AA7512D01DF", var_0.loadoutfieldupgrade2 ] );
}

hasvalidationinfraction()
{
    return isdefined( self.pers ) && isdefined( self.pers["_encstr_A4D416BBA15DC4341715FC287D31CA07231A37E4F8787553"] ) && self.pers["_encstr_A4D416BBA15DC4341715FC287D31CA07231A37E4F8787553"] > 0;
}

recordvalidationinfraction()
{
    if ( isdefined( self.pers ) && isdefined( self.pers["_encstr_A4D416BBA15DC4341715FC287D31CA07231A37E4F8787553"] ) )
        self.pers["_encstr_A4D416BBA15DC4341715FC287D31CA07231A37E4F8787553"] = self.pers["_encstr_A4D416BBA15DC4341715FC287D31CA07231A37E4F8787553"] + 1;
}

_detachall( var_0 )
{
    if ( !istrue( var_0 ) )
        self.headmodel = undefined;

    if ( isdefined( self.riotshieldmodel ) )
        scripts\mp\riotshield::riotshield_detach( 1 );

    if ( isdefined( self.riotshieldmodelstowed ) )
        scripts\mp\riotshield::riotshield_detach( 0 );

    if ( !istrue( var_0 ) )
        self detachall();

    scripts\mp\equipment\nvg::clearnvg( istrue( var_0 ) );
}

trackriotshield_ontrophystow()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A1D70BDE071B53794F208AE3F8" );

    for (;;)
    {
        self waittill( "_encstr_BD9B114A738DFB1E689B07108310650327C902", var_0 );

        if ( var_0.basename != "_encstr_9FEA0A4BD5D8EB085A26CB99" )
            continue;

        if ( !isdefined( self.riotshieldmodel ) )
            continue;

        scripts\mp\riotshield::riotshield_move( 1 );
        self waittill( "_encstr_BC630CF633331AC237327D959B8C" );

        if ( scripts\mp\riotshield::isriotshield( self getcurrentweapon() ) && isdefined( self.riotshieldmodelstowed ) )
            scripts\mp\riotshield::riotshield_move( 0 );
    }
}

valuehud( var_0 )
{
    if ( isdefined( var_0 ) && var_0.basename != "_encstr_AABA05236DC831" )
    {
        if ( scripts\mp\utility\weapon::issuperweapon( var_0.basename ) )
            return 1;

        var_1 = scripts\mp\utility\weapon::getequipmenttype( var_0.basename );

        if ( isdefined( var_1 ) && var_1 == "_encstr_9C1607D0071420D7AA" )
            return 1;
    }

    return 0;
}

_id_13C57()
{
    for (;;)
    {
        self waittill( "_encstr_BD9B114A738DFB1E689B07108310650327C902", var_0 );

        if ( !nullweapon( var_0 ) && var_0.basename == "_encstr_BCAE08D8D0F5B607F538" && scripts\mp\riotshield::isriotshield( self getcurrentweapon() ) )
            self._id_1207E = 1;

        waitframe();
    }
}

_id_13C5D()
{
    if ( !istrue( self._id_1207E ) )
    {
        var_0 = self getheldoffhand();

        if ( !nullweapon( var_0 ) && var_0.basename != "_encstr_BCAE08D8D0F5B607F538" && scripts\mp\riotshield::isriotshield( self getcurrentweapon() ) && valuehud( var_0 ) )
            self._id_1207E = 1;
    }
}

_id_13C5F()
{
    self._id_12D52 = undefined;
    self._id_12D51 = undefined;

    for (;;)
    {
        self waittill( "_encstr_B3C216770F8AA7D8C679DB539CA4C0D301CFF9E3FB03E548", var_0 );

        if ( !scripts\mp\riotshield::isriotshield( var_0 ) )
        {
            self._id_12D52 = gettime() + 200;
            continue;
        }

        self._id_12D52 = undefined;
        self._id_12D51 = undefined;
    }
}

_id_13C5E()
{
    for (;;)
    {
        self waittill( "_encstr_805017FF35A943A5A5895B1310B99E9BC6AE716E5E717BEF69", var_0 );
        waittillframeend;

        if ( scripts\mp\riotshield::isriotshield( var_0 ) )
        {
            self._id_12D52 = undefined;
            self._id_12D51 = undefined;
        }
    }
}

_id_13C58( var_0 )
{
    self notify( "_encstr_9E6024DC4DA0761F9E90328BBFEB4FAF60D97F5D9F203CAB38EB8952C0B593275191ECD91FB8" );
    self endon( "_encstr_9E6024DC4DA0761F9E90328BBFEB4FAF60D97F5D9F203CAB38EB8952C0B593275191ECD91FB8" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A1D70BDE071B53794F208AE3F8" );
    self endon( "_encstr_88241227A5BD479B0DB4B26346F523CA3A58D81A" );

    if ( isdefined( self.infil ) )
        scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    childthread _id_13C57();

    if ( isdefined( var_0 ) )
        self._id_1443A = var_0;
    else if ( !isdefined( self._id_1443A ) )
        self._id_1443A = 0;

    while ( scripts\mp\riotshield::riotshield_hasweapon() )
    {
        _id_13C5D();

        if ( !istrue( self.inlaststand ) )
        {
            if ( self._id_1443A )
            {
                self.watch_for_heli_bosses_dead = 1;
                self.watch_for_heli_death = gettime() + 1000;
            }
            else if ( isdefined( self.watch_for_heli_death ) && gettime() >= self.watch_for_heli_death )
            {
                self.watch_for_heli_bosses_dead = undefined;
                self.watch_for_heli_death = undefined;
            }

            self._id_1443A = 0;
        }
        else
        {
            self.watch_for_heli_bosses_dead = undefined;
            self.watch_for_heli_death = undefined;
            self._id_1443A = 1;
        }

        if ( self isonladder() )
            _id_13C5A();
        else if ( self isinexecutionattack() )
            _id_13C5A();
        else if ( self isinexecutionvictim() )
            _id_13C5B();
        else if ( self isparachuting() || self isskydiving() )
            _id_13C5A();
        else if ( istrue( self.watch_for_heli_bosses_dead ) )
            _id_13C5A();
        else if ( istrue( self._id_1207E ) )
        {
            if ( nullweapon( self getheldoffhand() ) )
            {
                self._id_1207E = undefined;
                _id_13C5C();
            }
            else
                _id_13C5A();
        }
        else
            _id_13C5C();

        waitframe();
    }

    _id_13C5C();
}

_id_13C5A()
{
    var_0 = isdefined( self.riotshieldmodel );
    var_1 = isdefined( self.riotshieldmodelstowed );

    if ( !var_1 )
    {
        if ( var_0 )
            scripts\mp\riotshield::riotshield_move( 1 );
        else
            scripts\mp\riotshield::riotshield_attach( 0, scripts\mp\riotshield::riotshield_getmodel() );
    }
}

_id_13C59()
{
    var_0 = isdefined( self.riotshieldmodel );
    var_1 = isdefined( self.riotshieldmodelstowed );

    if ( !var_0 )
    {
        if ( var_1 )
            scripts\mp\riotshield::riotshield_move( 0 );
        else
            scripts\mp\riotshield::riotshield_attach( 1, scripts\mp\riotshield::riotshield_getmodel() );
    }
}

_id_13C5B()
{
    var_0 = isdefined( self.riotshieldmodel );
    var_1 = isdefined( self.riotshieldmodelstowed );

    if ( var_0 )
        scripts\mp\riotshield::riotshield_detach( 1 );

    if ( var_1 )
        scripts\mp\riotshield::riotshield_detach( 0 );
}

_id_13C5C()
{
    if ( scripts\mp\riotshield::riotshield_hasweapon() )
    {
        var_0 = scripts\mp\riotshield::isriotshield( self getcurrentweapon() );

        if ( var_0 )
        {
            _id_13C59();
            return;
        }

        _id_13C5A();
        return;
    }
    else
    {
        var_1 = isdefined( self.riotshieldmodel );
        var_2 = isdefined( self.riotshieldmodelstowed );

        if ( var_1 )
            scripts\mp\riotshield::riotshield_detach( 1 );

        if ( var_2 )
            scripts\mp\riotshield::riotshield_detach( 0 );
    }
}

riotshieldonweaponchange( var_0 )
{
    if ( scripts\mp\riotshield::riotshield_hasweapon() )
        thread _id_13C58();
    else
    {
        _id_13C5C();
        _id_12D4E();
        self notify( "_encstr_88241227A5BD479B0DB4B26346F523CA3A58D81A" );
    }
}

_id_12D4E( var_0 )
{
    self.watch_for_heli_bosses_dead = undefined;
    self.watch_for_heli_death = undefined;
    self._id_1443A = undefined;

    if ( istrue( var_0 ) )
    {
        self.hasriotshield = undefined;
        self.hasriotshieldequipped = undefined;
        self.riotshieldmodel = undefined;
        self.riotshieldmodelstowed = undefined;
    }
}

fixsuperforbr( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    var_9 = buildweaponassetname( var_0, var_4 );
    var_10 = scripts\mp\utility\weapon::weaponattachcustomtoidmap( var_0, var_4 );

    if ( !isdefined( var_10 ) )
        var_10 = [];

    var_11 = [];

    foreach ( var_16, var_13 in var_10 )
    {
        var_14 = scripts\mp\utility\weapon::attachmentmap_tounique( var_16, var_9 );
        var_15 = scripts\mp\utility\weapon::carryiteminfo( var_14 );

        if ( isdefined( var_15 ) )
            var_11[var_15] = 1;
    }

    if ( isdefined( var_1 ) )
    {
        foreach ( var_19, var_16 in var_1 )
        {
            if ( var_11.size > 0 )
            {
                var_14 = scripts\mp\utility\weapon::attachmentmap_tounique( var_16, var_9 );
                var_15 = scripts\mp\utility\weapon::carryitemomnvar( var_14 );

                if ( isdefined( var_11[var_15] ) )
                    continue;
            }

            var_18 = 0;

            if ( isdefined( var_5 ) && isdefined( var_5[var_19] ) )
                var_18 = var_5[var_19];

            var_10[var_16] = var_18;
        }
    }

    return buildweapon_attachmentidmap( var_0, var_10, var_2, var_3, var_4, var_6, var_7, var_8 );
}

fixcollision( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_7 = scripts\mp\utility\weapon::weaponattachcustomtoidmap( var_0, var_3 );

    if ( !isdefined( var_7 ) )
        var_7 = [];

    return buildweapon_attachmentidmap( var_0, var_7, var_1, var_2, var_3, var_4, var_5, var_6 );
}

buildweapon_attachmentidmap( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    var_8 = [];
    var_9 = [];

    foreach ( var_12, var_11 in var_1 )
    {
        var_8[var_8.size] = var_12;
        var_9[var_9.size] = var_11;
    }

    return buildweapon( var_0, var_8, var_2, var_3, var_4, var_9, var_5, var_6, var_7 );
}

buildweapon( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    if ( isdefined( var_1 ) )
    {

    }
    else
        var_1 = [];

    if ( !isdefined( var_2 ) )
        var_2 = "_encstr_AABA05236DC831";

    if ( isdefined( var_4 ) && var_4 <= 0 )
        var_4 = undefined;

    var_9 = buildweaponassetname( var_0, var_4 );
    var_10 = buildweaponattachmentidmap( var_1, var_5 );

    if ( istrue( var_8 ) )
    {
        if ( scripts\mp\utility\weapon::weaponsupportslaserir( var_9 ) )
        {
            var_11 = scripts\mp\utility\weapon::getweaponnvgattachment( var_9 );

            if ( !isdefined( var_10[var_11] ) )
            {
                if ( var_10.size > 0 )
                    var_10[var_11] = 0;
            }
        }
    }

    var_12 = buildweaponuniqueattachmenttoidmap( var_0, var_10, var_4 );

    if ( isdefined( var_6 ) && var_6 != "_encstr_AABA05236DC831" )
    {
        var_6 = player_get_secondary_weapon_object( var_6 );
        var_12[var_6] = 0;
    }

    var_12 = filterinvalidattachmentsfromidmap( var_12, var_9 );
    var_12 = getbrendsplashpostgamestate( var_12, var_9 );

    if ( !isdefined( var_9 ) || var_9 == "_encstr_A40101" )
        scripts\mp\utility\script::laststand_dogtags( "_encstr_9E332FE2C550CB6FDF40725B289536862126699CF73B57F679F88A40A0C75F3B041FFD155F888A7A1FE033A82823974A71" + scripts\engine\utility::ter_op( isdefined( var_0 ), var_0, "_encstr_AFBA0505631CA3" ) + "_encstr_A3600C39E203D7F8192EB00B8EB8" + scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, "_encstr_AABA05236DC831" ) );

    var_13 = getcompleteweaponname( var_9, [], undefined, var_2, var_4 );

    if ( isdefined( var_9 ) && !isdefined( var_13 ) )
        scripts\mp\utility\script::laststand_dogtags( "_encstr_B4EC2EF83F816829A98F7FFF6552E938B03BD863E360C3D312F26088288E9FF959DB80A8BFEB1B9B6B956F01D7664309" + var_9 + "_encstr_A6860E79664BB78814635820D7188A61" + scripts\engine\utility::ter_op( isdefined( var_0 ), var_0, "_encstr_AFBA0505631CA3" ) + "_encstr_BC880DB001CE85C99658E6A340A740" + scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, "_encstr_AABA05236DC831" ) );

    foreach ( var_16, var_15 in var_12 )
        var_13 = var_13 withattachment( var_16, var_15 );

    if ( isdefined( var_7 ) )
    {
        for ( var_17 = 0; var_17 < var_7.size; var_17++ )
        {
            var_18 = var_7[var_17];

            if ( var_18 == "_encstr_AABA05236DC831" )
                continue;

            if ( "_encstr_A20703CBB5" != getsubstr( var_18, 0, 2 ) )
                var_18 = "_encstr_A20703CBB5" + var_7[var_17];

            var_13 = var_13 setsticker( var_17, var_18 );
        }
    }

    if ( isdefined( var_13.scope ) && !isstartstr( var_13.scope, "_encstr_80B90D81EEB70D039969DF61ADB38B" ) )
    {
        var_19 = getreticleindex( var_3 );

        if ( isdefined( var_19 ) )
            var_13 = var_13 withreticle( var_19 );
    }

    return var_13;
}

player_get_secondary_weapon_object( var_0 )
{
    switch ( var_0 )
    {
        case "_encstr_B8271A3A93BED886B04EADAF9C5913D2E43AD04ADCD8169B46D70698":
            var_0 = "_encstr_B8271A3A93BED886B04EADAF9C5913D2E43AD04BDCD8169B46D70698";
        default:
            break;
    }

    return var_0;
}

buildweaponattachmentidmap( var_0, var_1 )
{
    var_2 = [];

    foreach ( var_5, var_4 in var_0 )
    {
        if ( isdefined( var_1 ) && var_5 < var_1.size )
        {
            var_2[var_4] = var_1[var_5];
            continue;
        }

        var_2[var_4] = 0;
    }

    return var_2;
}

buildweaponuniqueattachmenttoidmap( var_0, var_1, var_2 )
{
    if ( !isdefined( var_1 ) )
        var_1 = [];

    var_1 = scripts\engine\utility::array_remove_key( var_1, "_encstr_AABA05236DC831" );
    var_3 = scripts\mp\utility\weapon::weaponattachdefaulttoidmap( var_0, var_2 );
    var_4 = buildweaponassetname( var_0, var_2 );
    var_5 = [];

    if ( isdefined( var_3 ) )
        var_5 = combinedefaultandcustomattachmentidmaps( var_3, var_1 );

    var_6 = [];

    if ( var_5.size > 0 )
    {
        var_5 = filterattachmenttoidmap( var_5, var_0 );

        foreach ( var_10, var_8 in var_5 )
        {
            var_9 = scripts\mp\utility\weapon::attachmentmap_tounique( var_10, var_4 );
            var_6[var_9] = var_8;
        }
    }

    var_11 = [];
    var_12 = 0;
    var_13 = undefined;

    foreach ( var_20, var_8 in var_6 )
    {
        var_15 = scripts\mp\utility\weapon::attachmentmap_toextra( var_20 );

        if ( isdefined( var_15 ) )
        {
            var_16 = 0;

            if ( isdefined( var_2 ) )
            {
                var_17 = scripts\mp\utility\weapon::attachmentmap_tobase( var_15 );
                var_16 = scripts\mp\utility\weapon::attachmentmap_extratovariantid( var_17, var_0, var_2 );
            }
            else if ( var_8 != 0 )
                var_16 = var_8;

            var_18 = scripts\mp\utility\weapon::attachmentmap_tounique( var_15, var_4 );
            var_11[var_18] = var_16;
        }

        var_19 = scripts\mp\utility\weapon::attachmentmap_tobase( var_20 );

        if ( !isdefined( var_13 ) && tv_station_fastrope_two_infil_rider_start_targetname( var_19 ) )
            var_13 = var_20;

        if ( !var_12 && ( useeventtype( var_19 ) || useeventtimestamp( var_20 ) ) )
            var_12 = 1;
    }

    if ( var_11.size > 0 )
        var_6 = scripts\engine\utility::array_combine_unique_keys( var_6, var_11 );

    if ( isdefined( var_13 ) && var_12 && !issubstr( var_0, "_encstr_B219046E68FA" ) )
    {
        var_13 = scripts\engine\utility::ter_op( var_13 == "_encstr_9BAC0D7EB163BB03071180B84A5F79", "_encstr_8B7C10FE09038BEB3C37E387A8C2B35038BC", "_encstr_A99907E658302B1B7D" );
        var_6[var_13] = 0;
    }

    return var_6;
}

combinedefaultandcustomattachmentidmaps( var_0, var_1 )
{
    var_2 = [];

    foreach ( var_5, var_4 in var_0 )
    {
        if ( scripts\engine\utility::array_contains_key( var_1, var_5 ) )
            continue;

        var_2[var_5] = var_4;
    }

    foreach ( var_5, var_4 in var_1 )
        var_2[var_5] = var_4;

    return var_2;
}

filterattachmenttoidmap( var_0, var_1 )
{
    var_2 = [];
    var_3 = [];
    var_4 = [];
    var_5 = getfirstarraykey( var_0 );
    var_4[0] = var_5;

    for ( var_6 = 0; var_6 < var_4.size; var_6++ )
    {
        var_7 = var_4[var_6];

        if ( var_7 != "_encstr_AABA05236DC831" )
        {
            var_8 = scripts\mp\utility\weapon::attachmentmap_tounique( var_7, var_1 );
            var_9 = 1;

            for ( var_10 = 0; var_10 < var_2.size; var_10++ )
            {
                var_11 = var_2[var_10];

                if ( var_11 == "_encstr_A40101" )
                    continue;

                if ( var_7 == var_11 )
                {
                    var_9 = 0;
                    break;
                }

                var_12 = scripts\mp\utility\weapon::attachmentsconflict( var_7, var_11, var_1, var_8, var_3[var_10] );

                if ( var_12 == var_7 )
                {
                    var_2[var_10] = "_encstr_A40101";
                    var_3[var_10] = "_encstr_A40101";
                    continue;
                }

                if ( var_12 != "_encstr_A40101" )
                {
                    var_2[var_10] = "_encstr_A40101";
                    var_3[var_10] = "_encstr_A40101";
                    var_9 = 0;
                    var_13 = [];
                    var_13 = strtok( var_12, "_encstr_884C02C6" );

                    for ( var_14 = 0; var_14 < var_13.size; var_14++ )
                        var_4[var_4.size] = var_13[var_14];

                    break;
                }
            }

            if ( var_9 )
            {
                var_15 = var_2.size;
                var_2[var_15] = var_7;
                var_3[var_15] = var_8;
            }
        }

        if ( var_6 == var_4.size - 1 )
        {
            var_5 = getnextarraykey( var_0, var_5 );

            if ( isdefined( var_5 ) )
                var_4[var_4.size] = var_5;
        }
    }

    var_16 = [];

    for ( var_6 = 0; var_6 < var_2.size; var_6++ )
    {
        var_7 = var_2[var_6];

        if ( var_7 != "_encstr_A40101" )
        {
            var_17 = scripts\engine\utility::ter_op( isdefined( var_0[var_7] ), var_0[var_7], 0 );
            var_16[var_7] = var_17;
        }
    }

    return var_16;
}

filterinvalidattachmentsfromidmap( var_0, var_1 )
{
    var_2 = getcompleteweaponname( var_1 );
    var_3 = [];

    foreach ( var_6, var_5 in var_0 )
    {
        if ( var_2 canuseattachment( var_6 ) )
        {
            var_3[var_6] = var_5;
            continue;
        }

        thread invalidattachmentwarning( var_6, var_1 );
    }

    return var_3;
}

getbrendsplashpostgamestate( var_0, var_1 )
{
    var_2 = [];

    foreach ( var_10, var_4 in var_0 )
    {
        var_5 = var_10;

        foreach ( var_9, var_7 in var_0 )
        {
            var_8 = scripts\mp\utility\weapon::attachmentmap_tobase( var_10 );

            if ( isdefined( level.carryingplayer[var_9] ) && isdefined( level.carryingplayer[var_9][var_8] ) )
                var_5 = level.carryingplayer[var_9][var_8];
        }

        var_2[var_5] = var_4;
    }

    return var_2;
}

invalidattachmentwarning( var_0, var_1 )
{
    var_2 = "_encstr_BC85152573CE85B19619020AE88EC21B34B6B2738E8E10" + var_0 + "_encstr_A9720520DF700E" + var_1;

    if ( isdefined( self ) && isplayer( self ) )
    {
        if ( getdvarint( "_encstr_9D0F0D1338C5C9DB98BF7174458333", 0 ) == 1 )
            self iprintlnbold( var_2 );
        else
        {

        }
    }
}

buildweaponassetname( var_0, var_1 )
{
    return scripts\mp\utility\weapon::weaponassetnamemap( var_0, var_1 );
}

getreticleindex( var_0 )
{
    if ( !isdefined( var_0 ) )
        return undefined;

    var_1 = int( tablelookup( "_encstr_8FB614ED835F4B132C67FE69A1A5F09B0105BA8F7FD5", 1, var_0, 5 ) );

    if ( !isdefined( var_1 ) || var_1 == 0 )
        return undefined;

    return var_1;
}

tv_station_fastrope_two_infil_rider_start_targetname( var_0 )
{
    return var_0 == "_encstr_BEE3081B2C8D1BEAB9D1" || var_0 == "_encstr_959907D82CB1DCB69D" || var_0 == "_encstr_A6BD0CA9A3638FA95F8FD2DB9982";
}

useeventtimestamp( var_0 )
{
    return scripts\engine\utility::string_starts_with( var_0, "_encstr_971A0889B039DCA51BD7" ) || var_0 == "_encstr_B87A1046B2A68635173C5EC7453F3E8A1B4B" || scripts\engine\utility::string_starts_with( var_0, "_encstr_BE510D807BDF6041510327B99AFAB3" ) || var_0 == "_encstr_A25610C42C9336D29D1AD1D79D8536E00DC2" || var_0 == "_encstr_AF7C1013B6D3380BD983E31740F643637801" || var_0 == "_encstr_A21710FDE91A4B81B04E33986BE1781B59B7";
}

useeventtype( var_0 )
{
    return scripts\engine\utility::string_starts_with( var_0, "_encstr_A33E09E64B36B2CDB1B293" );
}

vehicle_checkpiggybackexploit( var_0 )
{
    return var_0 _meth_87B7();
}

getweaponpassives( var_0, var_1 )
{
    return scripts\mp\loot::getpassivesforweapon( var_0, var_1 );
}

weaponhaspassive( var_0, var_1, var_2 )
{
    var_3 = getweaponpassives( var_0, var_1 );

    if ( !isdefined( var_3 ) || var_3.size <= 0 )
        return 0;

    foreach ( var_5 in var_3 )
    {
        if ( var_2 == var_5 )
            return 1;
    }

    return 0;
}

getweaponvariantattachments( var_0, var_1 )
{
    var_2 = [];
    var_3 = getweaponpassives( var_0, var_1 );

    if ( isdefined( var_3 ) )
    {
        foreach ( var_5 in var_3 )
        {
            var_6 = scripts\mp\passives::getpassiveattachment( var_5 );

            if ( !isdefined( var_6 ) )
                continue;

            var_2[var_2.size] = var_6;
        }
    }

    return var_2;
}

replenishloadout()
{
    var_0 = self.pers["_encstr_89EF05D46BA8FD"];
    var_1 = self.pers["_encstr_9E95066E81471B5F"];
    var_2 = self getweaponslistall();

    for ( var_3 = 0; var_3 < var_2.size; var_3++ )
    {
        var_4 = var_2[var_3];
        self givemaxammo( var_4 );
        self setweaponammoclip( var_4, 9999 );
        var_5 = var_4.basename;

        if ( var_5 == "_encstr_B9C40C1EFA1EBBB22FC305A93AF3" || var_5 == "_encstr_B2C716CB918947C54793DA7158BB7BE7808F444F36165FCA" )
            self setweaponammostock( var_4, 2 );
    }
}

onplayerconnecting()
{
    for (;;)
    {
        level waittill( "_encstr_87940A7F075A88E8ABD37951", var_0 );
        var_0 enableplayerbreathsystem( 0 );

        if ( !isdefined( var_0.pers["_encstr_9E95066E81471B5F"] ) )
            var_0.pers["_encstr_9E95066E81471B5F"] = "_encstr_A40101";

        if ( !isdefined( var_0.pers["_encstr_9F690A0DBF9F69AE0A510886"] ) )
            var_0.pers["_encstr_9F690A0DBF9F69AE0A510886"] = "_encstr_A40101";

        var_0.class = var_0.pers["_encstr_9E95066E81471B5F"];
        var_0.lastclass = var_0.pers["_encstr_9F690A0DBF9F69AE0A510886"];
        var_0.changedarchetypeinfo = var_0.pers["_encstr_A3AD15361A16DCD92B32289CD8439547F238AC949BCC7B"];
        var_0.lastarchetypeinfo = undefined;

        if ( !isdefined( var_0.pers["_encstr_A4D416BBA15DC4341715FC287D31CA07231A37E4F8787553"] ) )
            var_0.pers["_encstr_A4D416BBA15DC4341715FC287D31CA07231A37E4F8787553"] = 0;
    }
}

onplayerspawned()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        level waittill( "_encstr_9E7F0F83E0068BA8D3374EA2490F65E339", var_0 );
        var_0 enableplayerbreathsystem( 1 );

        if ( getdvarint( "_encstr_8F1414201B1B01E69B063E412C088815216DE1AA13C2", 0 ) )
        {
            if ( istrue( var_0.iszombie ) )
            {
                var_0 _meth_87A9( "_encstr_98CB0755CFC5882307" );
                var_0 setentitysoundcontext( "_encstr_BA7107EFB7C2152B42", "_encstr_98CB0755CFC5882307" );
            }
            else if ( isdefined( var_0.operatorcustomization ) && isdefined( var_0.operatorcustomization.gender ) && var_0.operatorcustomization.gender == "_encstr_BD290799CAB585B156" )
                var_0 _meth_87A9( "_encstr_BD290799CAB585B156" );
            else
                var_0 _meth_87A9( "_encstr_A40101" );
        }
        else if ( getdvarint( "_encstr_A81414D613BB9EBDE27180F0DB716B505BBD484470DB", 0 ) )
        {
            if ( istrue( var_0.unset_relic_gun_game ) )
            {
                var_0 _meth_87A9( "_encstr_A3F806472BF0D70B" );
                var_0 setentitysoundcontext( "_encstr_BA7107EFB7C2152B42", "_encstr_98CB0755CFC5882307" );
            }
            else if ( isdefined( var_0.operatorcustomization ) && isdefined( var_0.operatorcustomization.gender ) && var_0.operatorcustomization.gender == "_encstr_BD290799CAB585B156" )
                var_0 _meth_87A9( "_encstr_BD290799CAB585B156" );
            else
                var_0 _meth_87A9( "_encstr_A40101" );
        }
        else if ( istrue( level.setplayerselfrevivingextrainfo ) && scripts\mp\utility\game::getgametype() == "_encstr_87E507D23766566CD1" && var_0.team == "_encstr_BA840579D3F7F6" )
            var_0 _meth_87A9( "_encstr_98CB0755CFC5882307" );
        else if ( isdefined( var_0.operatorcustomization ) && isdefined( var_0.operatorcustomization.gender ) && var_0.operatorcustomization.gender == "_encstr_BD290799CAB585B156" )
            var_0 _meth_87A9( "_encstr_BD290799CAB585B156" );
        else
            var_0 _meth_87A9( "_encstr_A40101" );

        var_0 stoplocalsound( "_encstr_9F101246CA2CD1436EEB46F67BC9D71995581DD0" );

        if ( isdefined( var_0._id_12135 ) )
        {
            var_0 clearsoundsubmix( "_encstr_A65F14D4F7D2614A310EF7B9035BF8F66E17F84F9B81" );
            var_0._id_12135 stoploopsound( self._id_12136 );
            var_0._id_12135 delete();
            var_0._id_12135 = undefined;
            var_0._id_12136 = undefined;
        }

        if ( isdefined( var_0.operatorcustomization.clothtype ) && var_0.operatorcustomization.clothtype != "_encstr_A40101" )
        {
            if ( istrue( var_0.iszombie ) )
                var_0 setclothtype( "_encstr_9D95063389284BFB" );
            else
                var_0 setclothtype( var_0.operatorcustomization.clothtype );

            continue;
        }

        var_0 setclothtype( "_encstr_BEE00AB3AC6EA3D8B49D348E" );
    }
}

fadeaway( var_0, var_1 )
{
    wait( var_0 );
    self fadeovertime( var_1 );
    self.alpha = 0;
}

setclass( var_0 )
{
    self.curclass = var_0;
}

haschangedclass()
{
    if ( isdefined( self.lastclass ) && self.lastclass != self.class || !isdefined( self.lastclass ) )
        return 1;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_87E507D23766566CD1" && ( !isdefined( self.last_infected_class ) || self.last_infected_class != self.infected_class ) )
        return 1;

    return 0;
}

haschangedarchetype()
{
    if ( isdefined( self.changedarchetypeinfo ) )
    {
        if ( !isdefined( self.lastarchetypeinfo ) )
            return 1;

        if ( self.changedarchetypeinfo != self.lastarchetypeinfo )
            return 1;
    }

    return 0;
}

resetactionslots()
{
    self setactionslot( 1, "_encstr_A40101" );
    self setactionslot( 2, "_encstr_A40101" );
    self setactionslot( 3, "_encstr_A40101" );
    self setactionslot( 4, "_encstr_A40101" );

    if ( !isagent( self ) && !self isconsoleplayer() )
    {
        self setactionslot( 5, "_encstr_A40101" );
        self setactionslot( 6, "_encstr_A40101" );
        self setactionslot( 7, "_encstr_A40101" );
    }
}

resetfunctionality()
{
    self enableequipdeployvfx( 0 );

    if ( !isagent( self ) )
    {
        self setclientomnvar( "_encstr_875B0C459BC68B7CE930E18AA831", 0 );
        vehicle_allowplayeruse( self, 1 );

        if ( level.minimaponbydefault )
            self setclientomnvar( "_encstr_894910CB3808F968F94AFF6861DB90387081", 0 );
        else
            self setclientomnvar( "_encstr_894910CB3808F968F94AFF6861DB90387081", 1 );
    }

    scripts\common\input_allow::clear_all_allow_info();
    scripts\cp_mp\vehicles\vehicle_occupancy::_id_141CA( self, 1 );
    scripts\common\utility::allow_script_weapon_switch( 0 );
    self.doublejumpenergy = undefined;
    self.doublejumpenergyrestorerate = undefined;
    self.enabledcollisionnotifies = undefined;
    self.enabledequipdeployvfx = undefined;
    self.minimapstatetracker = undefined;
    self.isstunned = undefined;
    self.isblinded = undefined;
    self.nocorpse = undefined;
    self.prematchlook = undefined;
    self.ladderexecutionblocked = undefined;
    scripts\mp\damage::resetattackerlist();
    scripts\mp\damage::clearcorpsetablefuncs();
    _id_12D4E();
    scripts\cp_mp\utility\player_utility::cleardemeanorsafe();
    scripts\mp\weapons::clearburnfx();
    scripts\mp\equipment\molotov::_id_11CB6();
    scripts\mp\equipment\throwing_knife_mp::_id_13B52();
    scripts\mp\equipment\flash_grenade::clearflash( 1 );
    scripts\mp\equipment\gas_grenade::gas_clear( 1 );

    if ( !isagent( self ) )
    {
        scripts\mp\utility\player::spawn_carriables_from_scriptables_total_percentage();
        scripts\cp_mp\killstreaks\helper_drone::markeduioff();
    }

    scripts\cp_mp\killstreaks\white_phosphorus::clearloopingcoughaudio();
    scripts\mp\utility\player::_resetenableignoreme();
    scripts\cp_mp\utility\player_utility::_id_125D0();
}

clearscriptable()
{
    self setscriptablepartstate( "_encstr_8A6D0C68F6DAE0586E37251BED37", "_encstr_A4250C79AF9EF045C2DB83DF9FCA" );
}

changearchetype( var_0, var_1, var_2 )
{
    if ( isdefined( self.changedarchetypeinfo ) )
    {
        var_3 = self.changedarchetypeinfo;

        if ( var_3.archetype == var_0 && var_3.super == var_1 && var_3.trait == var_2 )
            return;
    }

    var_4 = spawnstruct();
    var_4.archetype = var_0;
    var_4.super = var_1;
    var_4.trait = var_2;
    self.changedarchetypeinfo = var_4;
    self.pers["_encstr_A3AD15361A16DCD92B32289CD8439547F238AC949BCC7B"] = var_4;

    if ( isdefined( self.pers["_encstr_9E95066E81471B5F"] ) && self.pers["_encstr_9E95066E81471B5F"] != "_encstr_A40101" )
    {
        preloadandqueueclass( self.pers["_encstr_9E95066E81471B5F"] );

        if ( shouldallowinstantclassswap() )
            thread swaploadout();
        else if ( isalive( self ) )
            self iprintlnbold( game["_encstr_A9B10863D3ADDAF8974B"]["_encstr_8C280B1B3416E6B395BEC9D276"] );
    }
}

getattachmentloadoutstring( var_0, var_1 )
{
    var_2 = scripts\engine\utility::ter_op( var_1 == "_encstr_987F080E394BDAC2E45E", "_encstr_B44319C6DB5832DEAE3A289C965B2CC95E141DA32C36A1D65673A3", "_encstr_9D6F1B6C48D16B2D1B48D18AC817252389AEF1395DDBC7F6C968BA3218" );

    if ( var_0 == 0 )
        return var_2;

    return var_2 + ( var_0 + 1 );
}

getstickerloadoutstring( var_0, var_1 )
{
    var_2 = scripts\engine\utility::ter_op( var_1 == "_encstr_987F080E394BDAC2E45E", "_encstr_95FC16036F1FEAC708138212A8101143EBEFEB8FDFB2A292", "_encstr_ADB91840671B357873339E6DA868B8FFB94E335E7BE8E27B1F63" );

    if ( var_0 == 0 )
        return var_2;

    return var_2 + ( var_0 + 1 );
}

getmaxprimaryattachments()
{
    return 10;
}

getmaxsecondaryattachments()
{
    return 10;
}

getmaxattachments( var_0 )
{
    return scripts\engine\utility::ter_op( var_0 == "_encstr_987F080E394BDAC2E45E", getmaxprimaryattachments(), getmaxsecondaryattachments() );
}

fillemptystreakslots( var_0, var_1 )
{
    if ( !level.allowkillstreaks )
        return;

    var_2 = [];
    var_3 = [];

    foreach ( var_6, var_5 in var_0 )
    {
        if ( var_5 == "_encstr_AABA05236DC831" )
        {
            var_2[var_2.size] = var_6;
            continue;
        }

        var_3[var_3.size] = var_5;
    }

    if ( var_2.size > 0 )
        self.pers["_encstr_80F00E8208C7246F79469C9265E16F6A"] = 1;

    foreach ( var_8 in var_2 )
    {
        var_9 = findfirststreakdifferentcost( var_3 );

        if ( var_8 + 1 == 1 )
            var_1.loadoutkillstreak1 = var_9;
        else if ( var_8 + 1 == 2 )
            var_1.loadoutkillstreak2 = var_9;
        else
            var_1.loadoutkillstreak3 = var_9;

        var_3[var_3.size] = var_9;
    }

    return [ var_1.loadoutkillstreak1, var_1.loadoutkillstreak2, var_1.loadoutkillstreak3 ];
}

findfirststreakdifferentcost( var_0 )
{
    var_1 = [];

    foreach ( var_8, var_3 in game["_encstr_BE9E10EBCBF0CBAA99F8324A08E166BBA8A5"].tabledatabyref )
    {
        if ( !istrue( int( var_3["_encstr_A80B0C22CAC748BB8C78F70DAAF5"] ) ) )
            continue;

        var_4 = 0;

        foreach ( var_6 in var_0 )
        {
            if ( var_8 == var_6 || scripts\mp\killstreaks\killstreaks::calcstreakcost( var_8 ) == scripts\mp\killstreaks\killstreaks::calcstreakcost( var_6 ) )
            {
                var_4 = 1;
                break;
            }
        }

        if ( !istrue( var_4 ) )
            var_1[var_1.size] = var_8;
    }

    return var_1[0];
}

replacetankwithwheelson( var_0 )
{
    if ( !level.allowkillstreaks )
        return;

    var_1 = scripts\cp_mp\vehicles\light_tank::light_tank_supported();

    if ( !var_1 )
    {
        if ( var_0.loadoutkillstreak1 == "_encstr_A2C00813C958328DB297" )
            var_0.loadoutkillstreak1 = "_encstr_9CB30B0EC28DFACD2BCD8E9CE5";
        else if ( var_0.loadoutkillstreak2 == "_encstr_A2C00813C958328DB297" )
            var_0.loadoutkillstreak2 = "_encstr_9CB30B0EC28DFACD2BCD8E9CE5";
        else if ( var_0.loadoutkillstreak3 == "_encstr_A2C00813C958328DB297" )
            var_0.loadoutkillstreak3 = "_encstr_9CB30B0EC28DFACD2BCD8E9CE5";

        self.pers["_encstr_80F00E8208C7246F79469C9265E16F6A"] = 1;
    }

    return [ var_0.loadoutkillstreak1, var_0.loadoutkillstreak2, var_0.loadoutkillstreak3 ];
}

replacewithspecialistkillstreaks( var_0 )
{
    return [ "_encstr_B4AF123738CA1BB458C64BDC47F50EB2E4ADEB98", "_encstr_87AF12F6AB0D17AAAFF3E38F08379738DB48C0E3", "_encstr_B2AF12D3BB2F06F8F6C4737FE451F8DDABE2AE53", "_encstr_890F16EBAF391FD44BE0EA43C8DF4ADF739A7F7248200F1A" ];
}

updateinstantclassswapallowed()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_A3750609A5E61883" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self.instantclassswapallowed = 1;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
    {
        var_0 = scripts\mp\gamelogic::generate_randomized_primary_weapon_objs( scripts\mp\utility\game::round_vehicle_logic() );

        if ( var_0 )
        {
            scripts\mp\flags::gameflagwait( "_encstr_A84113F7EAA383D7A0A1BC011B0BB1FDAFD2F5CEEF" );
            _id_13FE4();
        }
    }
    else
    {
        scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
        _id_13FE4();
    }

    disableclassswapallowed();
}

_id_13FE4()
{
    self endon( "_encstr_A3750609A5E61883" );
    var_0 = scripts\engine\utility::ter_op( scripts\mp\utility\game::ismlgmatch(), 5, 15 );

    if ( scripts\mp\gamelogic::generate_randomized_primary_weapon_objs( scripts\mp\utility\game::round_vehicle_logic() ) )
    {
        while ( scripts\mp\utility\game::updatehistoryhud( self ) )
            waitframe();

        self waittill( "_encstr_9DE1132997EAB03919B0C387272E3533CAF1E741F0" );
    }

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_9D2512D3A2A5D873DA63311397B345787DF19B4B" ) )
        var_0 = scripts\engine\utility::ter_op( scripts\mp\utility\game::ismlgmatch(), 5, 5 );

    wait( var_0 );
}

disableclassswapallowed()
{
    if ( istrue( self.instantclassswapallowed ) )
    {
        self.instantclassswapallowed = 0;

        if ( scripts\mp\utility\game::isteamreviveenabled() )
        {
            self.revive_chosenclass = self.class;
            self.pers["_encstr_9E4311DCCA87E8F593B75DE691BE6C362CE66E"] = self.class;
        }
    }
}

isvalidclass( var_0 )
{
    return isdefined( var_0 ) && var_0 != "_encstr_A40101";
}

getclassindex( var_0 )
{
    return level.classmap[var_0];
}

preloadandqueueclass( var_0, var_1 )
{
    var_2 = loadout_getorbuildclassstruct( var_0 );
    preloadandqueueclassstruct( var_2, var_1 );
    return var_2;
}

preloadandqueueclassstruct( var_0, var_1, var_2 )
{
    var_3 = scripts\mp\playerlogic::getplayerassets( var_0 );
    scripts\mp\playerlogic::loadplayerassets( [ var_3 ], var_1, var_2 );
    self.preloadedclassstruct = var_0;
}

loadout_getorbuildclassstruct( var_0 )
{
    if ( self.team == "_encstr_A68C0A5803A5D151A2B310A6" && !isdefined( var_0 ) )
        var_0 = "_encstr_9B0708E1DB47BDF82549";

    var_1 = loadout_getclasstype( var_0 );
    var_2 = getcachedloadoutstruct( var_0, var_1 );
    var_3 = var_1 == "_encstr_B73407B68FAB1BAD91" || var_1 == "_encstr_AA1608C07786F13312D3";

    if ( var_3 && scripts\mp\utility\game::unset_relic_grounded() )
        self.wam_sequence = var_0;

    if ( isdefined( var_2 ) )
    {
        if ( !isdefined( var_2.loadoutprimaryobject ) && isdefined( var_2.loadoutprimaryfullname ) )
            var_2.loadoutprimaryobject = asmdevgetallstates( var_2.loadoutprimaryfullname );

        if ( !isdefined( var_2.loadoutsecondaryobject ) && isdefined( var_2.loadoutsecondaryfullname ) )
            var_2.loadoutsecondaryobject = asmdevgetallstates( var_2.loadoutsecondaryfullname );
    }

    if ( isdefined( var_2 ) )
    {
        if ( var_0 == "_encstr_87AC099DB05B59ADF619AC" )
        {
            var_4 = loadout_getclassstruct();
            var_4 = loadout_updateclass( var_4, var_0 );
            var_5 = compareclassstructs( var_4, var_2 );

            if ( !var_5 )
            {
                var_4.gamemodeforcednewloadout = 1;
                trytocacheclassstruct( var_4, var_0, var_1 );
                return var_4;
            }
        }

        return var_2;
    }

    var_6 = loadout_getclassstruct();
    var_6 = loadout_updateclass( var_6, var_0 );
    trytocacheclassstruct( var_6, var_0, var_1 );
    return var_6;
}

zombiesignorevehicleexplosions()
{
    if ( !isdefined( self.pers["_encstr_9FA4148F70F87A0AF901F56E0D97031407D8434FB033"] ) )
        _id_11950();

    return self.pers["_encstr_9FA4148F70F87A0AF901F56E0D97031407D8434FB033"];
}

_id_11950()
{
    var_0 = spawnstruct();

    if ( !isagent( self ) )
    {
        var_0.loadoutfieldupgrade1 = cac_getfieldupgrade( 0 );
        var_0.loadoutfieldupgrade2 = cac_getfieldupgrade( 1 );
    }
    else
    {
        var_0.loadoutfieldupgrade1 = "_encstr_AABA05236DC831";
        var_0.loadoutfieldupgrade2 = "_encstr_AABA05236DC831";
    }

    self.pers["_encstr_9FA4148F70F87A0AF901F56E0D97031407D8434FB033"] = var_0;
}

zombieregenratescaleoutgas()
{
    var_0 = zombiesignorevehicleexplosions();
    _id_11950();
    var_1 = zombiesignorevehicleexplosions();

    if ( var_0.loadoutfieldupgrade1 != var_1.loadoutfieldupgrade1 )
        return 1;

    if ( var_0.loadoutfieldupgrade2 != var_1.loadoutfieldupgrade2 )
        return 1;

    return 0;
}

_id_1194F( var_0, var_1 )
{
    var_2 = self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"];

    if ( isdefined( var_2["_encstr_A1C815A37F37A928A383E56A0AD83FD5F824DBE8886399"] ) )
        var_0.loadoutfieldupgrade1 = var_2["_encstr_A1C815A37F37A928A383E56A0AD83FD5F824DBE8886399"];

    if ( isdefined( var_2["_encstr_B9C815B17B168C7BAE3A32D256C691AAC176C9581956C8"] ) )
        var_0.loadoutfieldupgrade2 = var_2["_encstr_B9C815B17B168C7BAE3A32D256C691AAC176C9581956C8"];
}

loadout_editcachedclassstruct( var_0 )
{
    var_1 = loadout_getclasstype( var_0 );
    var_2 = getcachedloadoutstruct( var_0, var_1 );

    if ( isdefined( var_2 ) )
    {
        var_3 = loadout_getclassstruct();
        var_3 = loadout_updateclass( var_3, var_0 );
        var_4 = compareclassstructs( var_3, var_2 );

        if ( !var_4 )
        {
            var_3.tweakedbyplayerduringmatch = 1;
            trytocacheclassstruct( var_3, var_0, var_1 );
            return 1;
        }
    }

    return 0;
}

getcachedloadoutstruct( var_0, var_1 )
{
    switch ( var_1 )
    {
        case "_encstr_9D0B0D0E6D3F9B87C980674F78817D":
        case "_encstr_B73407B68FAB1BAD91":
        case "_encstr_87AC099DB05B59ADF619AC":
        case "_encstr_AA1608C07786F13312D3":
            if ( !isdefined( self.pers["_encstr_A9B90BD8C6C29BB9862C8D8695"] ) )
                break;

            return self.pers["_encstr_A9B90BD8C6C29BB9862C8D8695"][var_0];
    }

    return undefined;
}

trytocacheclassstruct( var_0, var_1, var_2 )
{
    switch ( var_2 )
    {
        case "_encstr_9D0B0D0E6D3F9B87C980674F78817D":
        case "_encstr_B73407B68FAB1BAD91":
        case "_encstr_87AC099DB05B59ADF619AC":
        case "_encstr_AA1608C07786F13312D3":
            addclassstructtocache( var_0, var_1 );
            break;
    }
}

addclassstructtocache( var_0, var_1 )
{
    if ( !isdefined( self.pers["_encstr_A9B90BD8C6C29BB9862C8D8695"] ) )
        self.pers["_encstr_A9B90BD8C6C29BB9862C8D8695"][var_1] = [];

    self.pers["_encstr_A9B90BD8C6C29BB9862C8D8695"][var_1] = var_0;
}

loadout_emptycacheofloadout( var_0 )
{
    if ( !isdefined( self.pers["_encstr_A9B90BD8C6C29BB9862C8D8695"] ) )
        return;

    self.pers["_encstr_A9B90BD8C6C29BB9862C8D8695"][var_0] = undefined;
}

loadout_gamemodeloadoutchanged()
{
    self.pers["_encstr_A9B90BD8C6C29BB9862C8D8695"]["_encstr_87AC099DB05B59ADF619AC"] = undefined;
}

copyclassfornextlife( var_0 )
{
    self setclientomnvar( "_encstr_A43912EAD2AFB1F68591BD57D1AF367B07D295C8", gettime() );
    thread allow_cp_munitions();
    var_1 = undefined;

    if ( isdefined( var_0.juggcontext ) && isdefined( var_0.juggcontext.prevclassstruct ) )
        var_1 = var_0.juggcontext.prevclassstruct;
    else
        var_1 = var_0.classstruct;

    self.pers["_encstr_8A460C2E187099BAD5676B572F06"] = zombieregenratescaleingas( var_1 );
    self.pers["_encstr_9CBD0B9103C3AD17906BB5C0DA"] = var_0;
}

allow_cp_munitions()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self waittill( "_encstr_983508635BE787C548A1" );
    self setclientomnvar( "_encstr_A4E613AB5AF5367BB0C8DEEAE8EBC60D853776B219", 11 );
}

zombiesdamagezombies( var_0, var_1 )
{
    var_0.loadoutsuper = var_1.loadoutsuper;
    var_0.loadoutstreaksfilled = var_1.loadoutstreaksfilled;
    var_0.loadoutstreaktype = var_1.loadoutstreaktype;
    var_0.loadoutkillstreak1 = var_1.loadoutkillstreak1;
    var_0.loadoutkillstreak2 = var_1.loadoutkillstreak2;
    var_0.loadoutkillstreak3 = var_1.loadoutkillstreak3;
    var_0.loadoutaccessoryweapon = var_1.loadoutaccessoryweapon;
    var_0.loadoutaccessorydata = var_1.loadoutaccessorydata;
    var_0.loadoutaccessorylogic = var_1.loadoutaccessorylogic;
    var_0.tweakedbyplayerduringmatch = 0;
    var_0.gamemodeforcednewloadout = 0;
    var_0.uavbestid = 1;
}

shouldskipfirstraise( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = 0;

    if ( !istrue( self.hasspawned ) )
        var_1 = 1;

    if ( scripts\cp_mp\utility\game_utility::shouldskipfirstraise() && istrue( self.hasspawned ) )
        var_1 = 1;

    if ( istrue( self._id_1443D ) )
        var_1 = 1;

    if ( weaponclass( var_0.basename ) == "_encstr_BE0703815F" )
        var_1 = 1;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_87E507D23766566CD1" && istrue( self.faux_spawn_infected ) )
        var_1 = 1;

    return var_1;
}

respawnitems_saveplayeritemstostruct( var_0, var_1, var_2, var_3 )
{
    var_4 = spawnstruct();
    var_3 = 0;

    if ( !isdefined( var_0 ) || var_0 )
        respawnitems_saveweapons( var_4 );

    if ( !isdefined( var_1 ) || var_1 )
        respawnitems_saveequipmentitems( var_4 );

    if ( !isdefined( var_2 ) || var_2 )
        respawnitems_savestreaks( var_4 );

    if ( !isdefined( var_3 ) || var_3 )
        respawnitems_savesuper( var_4 );

    return var_4;
}

respawnitems_assignrespawnitems( var_0 )
{
    self.respawnitems = var_0;
}

respawnitems_hasrespawnitems()
{
    return isdefined( self.respawnitems );
}

respawnitems_getrespawnitems()
{
    if ( isdefined( self.respawnitems ) )
        return self.respawnitems;

    return undefined;
}

respawnitems_clear()
{
    self.respawnitems = undefined;
}

respawnitems_saveweapons( var_0 )
{
    var_1 = [];
    var_2 = self.primaryweapons;
    var_3 = self.currentweapon;

    foreach ( var_5 in var_2 )
    {
        if ( scripts\mp\utility\weapon::iscacprimaryorsecondary( var_5 ) )
            var_1[var_1.size] = var_5;
    }

    var_7 = undefined;

    if ( isdefined( self.lastcacweaponobj ) )
        var_7 = self.lastcacweaponobj;
    else if ( !scripts\mp\utility\weapon::iscacprimaryorsecondary( self.currentweapon ) )
        var_7 = self.currentweapon;
    else if ( var_1.size > 0 )
        var_7 = var_1[0];

    if ( getqueuedspleveltransients( var_7 ) )
        var_7 = getcompleteweaponname( "_encstr_9B660D018F3841EE3A23DBEE3639F0" );

    respawnitems_saveweapon( var_7, "_encstr_987F080E394BDAC2E45E", var_0 );
    var_8 = undefined;

    foreach ( var_5 in var_1 )
    {
        if ( !isnullweapon( var_5, var_7, 1 ) )
        {
            var_8 = var_5;
            break;
        }
    }

    if ( isdefined( var_8 ) )
        respawnitems_saveweapon( var_8, "_encstr_B98F0AC7D5B99F4DDBA8353B", var_0 );
}

respawnitems_saveweapon( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2.weapons ) )
        var_2.weapons = [];

    var_3 = spawnstruct();
    var_2.weapons[var_1] = var_3;
    var_3.weaponobj = var_0;
    var_3.clipammo = self getweaponammoclip( var_0 );
    var_3.stockammo = self getweaponammostock( var_0 );

    if ( var_0.hasalternate )
    {
        var_4 = var_0 getaltweapon();
        var_3.altclipammo = self getweaponammoclip( var_4 );
        var_3.altstockammo = self getweaponammostock( var_4 );
    }
}

respawnitems_saveequipmentitems( var_0 )
{
    respawnitems_saveequipment( "_encstr_987F080E394BDAC2E45E", var_0 );
    respawnitems_saveequipment( "_encstr_B98F0AC7D5B99F4DDBA8353B", var_0 );
}

respawnitems_saveequipment( var_0, var_1 )
{
    var_2 = scripts\mp\equipment::getcurrentequipment( var_0 );

    if ( !isdefined( var_2 ) )
        var_2 = "_encstr_AABA05236DC831";

    if ( !isdefined( var_1.equipment ) )
        var_1.equipment = [];

    var_3 = spawnstruct();
    var_1.equipment[var_0] = var_3;
    var_3.item = var_2;

    if ( var_2 != "_encstr_AABA05236DC831" )
        var_3.ammo = scripts\mp\equipment::getequipmentammo( var_3.item );
    else
        var_3.ammo = 0;
}

respawnitems_savestreaks( var_0 )
{
    var_1 = spawnstruct();
    var_1.streaks = [];
    var_1.streakpoints = self.streakpoints;

    if ( !isdefined( self.streakpoints ) )
        return;

    var_2 = scripts\mp\killstreaks\killstreaks::getkillstreakinslot( 1 );

    if ( isdefined( var_2 ) )
        var_1.streaks[var_1.streaks.size] = var_2.streakname;

    var_2 = scripts\mp\killstreaks\killstreaks::getkillstreakinslot( 2 );

    if ( isdefined( var_2 ) )
        var_1.streaks[var_1.streaks.size] = var_2.streakname;

    var_2 = scripts\mp\killstreaks\killstreaks::getkillstreakinslot( 3 );

    if ( isdefined( var_2 ) )
        var_1.streaks[var_1.streaks.size] = var_2.streakname;

    if ( var_1.streaks.size <= 0 )
        return;

    var_0.streakstate = var_1;
}

respawnitems_savesuper( var_0 )
{
    var_1 = scripts\mp\supers::getcurrentsuperref();

    if ( !isdefined( var_1 ) )
        return;

    var_2 = spawnstruct();
    var_0.superstate = var_2;
    var_2.super = var_1;
    var_2.superpoints = scripts\mp\supers::getcurrentsuperbasepoints();
    var_2.extrapoints = scripts\mp\supers::getcurrentsuperextrapoints();
}

respawnitems_hasweapondata( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    return isdefined( var_0.weapons );
}

respawnitems_getweaponobj( var_0, var_1 )
{
    return var_0.weapons[var_1].weaponobj;
}

respawnitems_giveweaponammo( var_0, var_1 )
{
    var_2 = var_0.weapons[var_1];
    self setweaponammoclip( var_2.weaponobj, var_2.clipammo );
    self setweaponammostock( var_2.weaponobj, var_2.stockammo );

    if ( var_2.weaponobj.hasalternate )
    {
        var_3 = var_2.weaponobj getaltweapon();
        self setweaponammoclip( var_3, var_2.altclipammo );
        self setweaponammostock( var_3, var_2.altstockammo );
    }
}

respawnitems_hasequipmentdata( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    return isdefined( var_0.equipment );
}

respawnitems_getequipmentref( var_0, var_1 )
{
    return var_0.equipment[var_1].item;
}

respawnitems_giveequipmentammo( var_0, var_1 )
{
    var_2 = respawnitems_getequipmentref( var_0, var_1 );

    if ( !isdefined( var_2 ) || var_2 == "_encstr_AABA05236DC831" )
        return;

    var_3 = var_0.equipment[var_1].ammo;

    if ( !isdefined( var_3 ) )
        return;

    scripts\mp\equipment::setequipmentammo( var_2, var_3 );
}

respawnitems_hasstreakdata( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    return isdefined( var_0.streakstate );
}

respawnitems_getstreakpoints( var_0 )
{
    return var_0.streakstate.streakpoints;
}

respawnitems_getstreaks( var_0 )
{
    return var_0.streakstate.streaks;
}

respawnitems_hassuperdata( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    return isdefined( var_0.superstate );
}

respawnitems_getsuperref( var_0 )
{
    return var_0.superstate.super;
}

respawnitems_getsuperpoints( var_0 )
{
    return var_0.superstate.superpoints;
}

respawnitems_getsuperextrapoints( var_0 )
{
    return var_0.superstate.extrapoints;
}

spawnammocountoverride_giveweaponammo( var_0, var_1, var_2 )
{
    var_3 = var_0;
    var_4 = !var_2;

    if ( var_4 && !update_health_bar_to_players( var_0 ) )
    {
        var_5 = 0;
        var_6 = 0;

        if ( var_0 hasattachment( "_encstr_A39C07B1CFC082B1AD", 1 ) )
            self setweaponammoclip( var_3, var_5, "_encstr_B1AD05C65666E8" );
    }
    else
    {
        var_5 = var_3.clipsize;
        var_6 = var_2 - 1;
    }

    if ( var_2 == 7 )
        var_6 = weaponmaxammo( var_3 );
    else if ( issubstr( var_3.basename, "_encstr_9C0B12A7D3E269136081C280C69373D031ECAD83" ) && !var_4 )
        var_6 = var_3.clipsize * var_6 + 18;
    else
        var_6 = var_3.clipsize * var_6;

    self setweaponammoclip( var_3, var_5 );
    self setweaponammostock( var_3, var_6 );

    if ( var_0.hasalternate )
    {
        var_7 = var_0 getaltweapon();

        if ( var_4 )
        {
            var_8 = 0;
            var_9 = 0;
        }
        else
        {
            var_8 = self getweaponammoclip( var_7 );
            var_9 = self getweaponammostock( var_7 );
        }

        self setweaponammoclip( var_7, var_8 );
        self setweaponammostock( var_7, var_9 );
    }
}

update_health_bar_to_players( var_0 )
{
    var_1 = scripts\mp\utility\weapon::isknifeonly( var_0.basename ) || scripts\mp\utility\weapon::turret_aimed_at_last_known( var_0.basename ) || scripts\mp\utility\weapon::isaxeweapon( var_0.basename ) || scripts\mp\utility\weapon::update_health_bar_to_player( var_0 ) || scripts\mp\riotshield::isriotshield( var_0.basename );
    return var_1;
}

compareclassstructs( var_0, var_1 )
{
    if ( var_0.loadoutarchetype != var_1.loadoutarchetype )
        return 0;

    if ( var_0.loadoutprimary != var_1.loadoutprimary )
        return 0;

    if ( !checkclassstructarray( var_0.loadoutprimaryattachments, var_1.loadoutprimaryattachments ) )
        return 0;

    if ( !checkclassstructarray( var_0.loadoutprimaryattachmentids, var_1.loadoutprimaryattachmentids ) )
        return 0;

    if ( var_0.loadoutprimarycamo != var_1.loadoutprimarycamo )
        return 0;

    if ( var_0.loadoutprimaryreticle != var_1.loadoutprimaryreticle )
        return 0;

    if ( var_0.loadoutprimarylootitemid != var_1.loadoutprimarylootitemid )
        return 0;

    if ( var_0.loadoutprimaryvariantid != var_1.loadoutprimaryvariantid )
        return 0;

    if ( var_0.loadoutprimarycosmeticattachment != var_1.loadoutprimarycosmeticattachment )
        return 0;

    if ( var_0.loadoutsecondary != var_1.loadoutsecondary )
        return 0;

    if ( !checkclassstructarray( var_0.loadoutsecondaryattachments, var_1.loadoutsecondaryattachments ) )
        return 0;

    if ( !checkclassstructarray( var_0.loadoutsecondaryattachmentids, var_1.loadoutsecondaryattachmentids ) )
        return 0;

    if ( var_0.loadoutsecondarycamo != var_1.loadoutsecondarycamo )
        return 0;

    if ( var_0.loadoutsecondaryreticle != var_1.loadoutsecondaryreticle )
        return 0;

    if ( var_0.loadoutsecondarylootitemid != var_1.loadoutsecondarylootitemid )
        return 0;

    if ( var_0.loadoutsecondaryvariantid != var_1.loadoutsecondaryvariantid )
        return 0;

    if ( var_0.loadoutsecondarycosmeticattachment != var_1.loadoutsecondarycosmeticattachment )
        return 0;

    if ( !checkclassstructarray( var_0.loadoutperks, var_1.loadoutperks ) )
        return 0;

    if ( !checkclassstructarray( var_0.loadoutstandardperks, var_1.loadoutstandardperks ) )
        return 0;

    if ( !checkclassstructarray( var_0.loadoutextraperks, var_1.loadoutextraperks ) )
        return 0;

    if ( var_0.loadoutusingspecialist != var_1.loadoutusingspecialist )
        return 0;

    if ( var_0.loadoutmeleeslot != var_1.loadoutmeleeslot )
        return 0;

    if ( var_0.loadoutperksfromgamemode != var_1.loadoutperksfromgamemode )
        return 0;

    if ( var_0.loadoutrigtrait != var_1.loadoutrigtrait )
        return 0;

    if ( var_0.loadoutequipmentprimary != var_1.loadoutequipmentprimary )
        return 0;

    if ( var_0.loadoutextraequipmentprimary != var_1.loadoutextraequipmentprimary )
        return 0;

    if ( var_0.loadoutequipmentsecondary != var_1.loadoutequipmentsecondary )
        return 0;

    if ( var_0.loadoutextraequipmentsecondary != var_1.loadoutextraequipmentsecondary )
        return 0;

    if ( var_0.loadoutsuper != var_1.loadoutsuper )
        return 0;

    if ( var_0.loadoutgesture != var_1.loadoutgesture )
        return 0;

    if ( var_0.loadoutstreaksfilled != var_1.loadoutstreaksfilled )
        return 0;

    if ( var_0.loadoutstreaktype != var_1.loadoutstreaktype )
        return 0;

    if ( var_0.loadoutkillstreak1 != var_1.loadoutkillstreak1 )
        return 0;

    if ( var_0.loadoutkillstreak2 != var_1.loadoutkillstreak2 )
        return 0;

    if ( var_0.loadoutkillstreak3 != var_1.loadoutkillstreak3 )
        return 0;

    return 1;
}

checkclassstructarray( var_0, var_1 )
{
    if ( var_0.size != var_1.size )
        return 0;

    foreach ( var_4, var_3 in var_0 )
    {
        if ( !isdefined( var_1[var_4] ) )
            return 0;

        if ( var_1[var_4] != var_3 )
            return 0;
    }

    return 1;
}

computerrebootsequence_init()
{
    scripts\engine\utility::ent_flag_init( "_encstr_BCB9142B8773029D12C739474383B9CE20E7B2DA4502" );
    scripts\engine\utility::ent_flag_init( "_encstr_9D3914138F687A5BD8593A7223ADDFB29015BC812530" );
    scripts\engine\utility::ent_flag_init( "_encstr_9F26152B7F567AD13F7BF95F285B2991882D98BA905327" );
    scripts\engine\utility::ent_flag_set( "_encstr_BCB9142B8773029D12C739474383B9CE20E7B2DA4502" );
}

_id_13F02()
{
    if ( scripts\engine\utility::ent_flag_exist( "_encstr_BCB9142B8773029D12C739474383B9CE20E7B2DA4502" ) && scripts\engine\utility::ent_flag( "_encstr_BCB9142B8773029D12C739474383B9CE20E7B2DA4502" ) )
        scripts\engine\utility::ent_flag_clear( "_encstr_BCB9142B8773029D12C739474383B9CE20E7B2DA4502" );
}

zvelscale( var_0 )
{
    var_0.loadoutprimaryobject = var_0.loadoutprimary;

    if ( issameweapon( var_0.loadoutprimary ) )
        var_0.loadoutprimaryfullname = createheadicon( var_0.loadoutprimaryobject );

    if ( var_0.loadoutsecondary == "_encstr_AABA05236DC831" )
    {
        var_0.loadoutsecondaryfullname = "_encstr_AABA05236DC831";
        var_0.loadoutsecondaryobject = undefined;
    }
    else
    {
        if ( istrue( var_0._id_11961 ) )
            var_0.loadoutsecondaryobject = fixsuperforbr( var_0.loadoutsecondary, var_0.loadoutsecondaryattachments, var_0.loadoutsecondarycamo, var_0.loadoutsecondaryreticle, var_0.loadoutsecondaryvariantid, var_0.loadoutsecondaryattachmentids, var_0.loadoutsecondarycosmeticattachment, var_0.loadoutsecondarystickers, istrue( var_0.loadouthasnvg ) );
        else
            var_0.loadoutsecondaryobject = buildweapon( var_0.loadoutsecondary, var_0.loadoutsecondaryattachments, var_0.loadoutsecondarycamo, var_0.loadoutsecondaryreticle, var_0.loadoutsecondaryvariantid, var_0.loadoutsecondaryattachmentids, var_0.loadoutsecondarycosmeticattachment, var_0.loadoutsecondarystickers, istrue( var_0.loadouthasnvg ) );

        var_0.loadoutsecondaryfullname = createheadicon( var_0.loadoutsecondaryobject );
    }

    if ( var_0.loadoutmeleeslot != "_encstr_AABA05236DC831" )
    {
        self giveweapon( var_0.loadoutmeleeslot );
        self assignweaponmeleeslot( var_0.loadoutmeleeslot );
    }
}
