// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

processepictaunt( var_0, var_1, var_2 )
{
    if ( var_1 >= 0 && isdefined( level.camera_bro_shot.char_loc ) )
    {
        var_3 = level.camera_bro_shot.char_loc[var_1].origin;
        var_4 = level.camera_bro_shot.char_loc[var_1].angles;

        if ( isdefined( level.overridebroslot ) )
            var_1 = level.overridebroslot - 1;
    }
    else
    {
        var_3 = level.charactercac.origin;
        var_4 = level.charactercac.angles;
        var_1 = 0;
    }

    if ( tauntinprogress( var_1 ) )
        return;

    processtauntsound( var_0 );
    deleteepictauntprops( var_1 );
    var_5 = [];
    var_6 = [];
    var_7 = [];
    var_8 = [];
    var_9 = [];
    var_10 = [];
    var_11 = [];
    var_12 = [];
    var_13 = 0;
    var_14 = 0;
    var_15 = [];
    var_16 = [];
    var_17 = [];
    var_18 = [];
    var_19 = [];
    var_20 = 0;
    var_21 = 0;
    var_22 = [];
    var_23 = [];
    var_24 = [];
    var_25 = [];
    var_26 = 0;
    var_27 = [];
    var_28 = 0;

    switch ( var_0 )
    {
        case "_encstr_AF671F29756EAFD6E0EBE82CAE73A3EB661DC6BEC4DC3AAF6D5A63C6B9D7A16A63":
            if ( var_2 && ( !isdefined( level.losersinteractable ) || level.losersinteractable == 1 ) )
            {
                var_7[0] = 10.0;
                var_23[0] = 0.85;
                var_23[1] = 2.05;
                var_23[2] = 1.15;
                level.losersinteractable = 0;
            }

            break;
        case "_encstr_B6FC1FEF29F76897CFB9417E285B434F48DD94F80A20B55EF328FB54B7B112DD44":
            if ( var_2 && ( !isdefined( level.losersinteractable ) || level.losersinteractable == 1 ) )
            {
                var_7[0] = 10.0;
                var_23[0] = 1.1;
                var_23[1] = 2.7;
                var_23[2] = 1.467;
                level.losersinteractable = 0;
            }

            break;
        case "_encstr_93BE1FDB27162FC920F0F3D96BCDCD0983BB1CA8B7B0C92917B3426CBBC7559DF5":
            if ( var_2 && ( !isdefined( level.losersinteractable ) || level.losersinteractable == 1 ) )
            {
                var_7[0] = 10.0;
                var_23[0] = 1.03;
                var_23[1] = 2.76;
                var_23[2] = 1.43;
                level.losersinteractable = 0;
            }

            break;
        case "_encstr_8A05188BEFC3C1D5C7B90311738249AF6FA7B10FAACA5B05DACE":
            var_7[0] = 7.834;
            break;
        case "_encstr_AB8C1D071843F77A5118A39E7505A3AF93A0DBBFA8A602B24B2E6CD450D94A":
            var_7[0] = 7.0;

            for ( var_29 = 0; var_29 < 20; var_29++ )
                var_22[var_29] = 2.6 + var_29 * 0.1;

            break;
        case "_encstr_B38B269677CD7DB6C17DD185AB73D1F52B07B41BFACEC995B9B046CAD7A37B9B37F53158D8B58189":
            var_7[0] = 8.0;
            var_22[0] = 5.7;
            var_22[1] = 6.15;
            var_22[2] = 6.6;
            break;
        case "_encstr_A37E285ADD9BF56B077DE816AE9B47AFE6EA382B39FAEEC23999D2D91A8E959C7D0BE8D7B98DE4B22BE6":
            var_7[0] = 6.6;
            var_22[0] = 1.0;
            var_22[1] = 1.2;
            var_22[2] = 1.4;
            var_22[3] = 1.6;
            var_22[4] = 1.8;
            var_22[5] = 2.0;
            var_22[6] = 2.2;
            var_22[7] = 2.4;
            break;
        case "_encstr_A85617F97F2A412FA74EEBA213F00309F82B6747CFB814CFC5":
            var_7[0] = 6.6;
            var_22[0] = 1.65;
            var_22[1] = 2.05;
            break;
        case "_encstr_9CBB219B2F87385B58A7B3E01B1A84C0802FBA03477D4B929F937DF722E566D65ED321":
        case "_encstr_89BB2178238EE0205A1FD1F35D85B0A8377B10E1BB7B2398B92A8BEB60AF48106A62E9":
        case "_encstr_95791D89643BA78D313183AA187583EFEBCB06397FBB87D647709AA2184BFA":
            var_7[0] = 6.6;
            var_21 = 2.0;
            break;
        case "_encstr_9B8921BC4C5B2728A0D79CAF98455D9112C4E878671CE5B90B6A112717F06B531810CA":
            var_5[0] = "_encstr_B3272C6B6F2BF7DF7024BF13A2FB3E6E5F30E8CE666D97CB9F11D3386DD7A15A9B28FF0790B3D83D883F3881BA13";
            var_6[0] = "_encstr_936F2C3F207BFF7249AFABE67D0D9BB79848A393A8CB2A3A4322791A6E273353404043D750817F139F4BFF52EF43";
            var_7[0] = 6.6;
            var_5[1] = "_encstr_B3272C6B6F2BF7DF7024BF13A2FB3E6E5F30E8CE666D97CB9F11D3386DD7A15A9B28FF0790B3D83D883F3881BA13";
            var_6[1] = "_encstr_9F6F2CA5779BD7DA0EFA3A85BACD1DD7B5B48D36CD3A9CB2586D7DE6C6ED9CC6439539BE371B7BC9B1A1CA270664";
            var_7[1] = 6.6;
            var_5[2] = "_encstr_B3272C6B6F2BF7DF7024BF13A2FB3E6E5F30E8CE666D97CB9F11D3386DD7A15A9B28FF0790B3D83D883F3881BA13";
            var_6[2] = "_encstr_BE6F2C4BDDCD7DDAE0D71DB0D5378ED76DB4B1D8B9E8935658B5BEDC36BDC9D8D0ACC9EBCD1B7B398DD0569C0C66";
            var_7[2] = 6.6;
            var_21 = 3.0;
            var_28 = 1;
            break;
        case "_encstr_A3031BB73F7F511518C19992F39E50CFB09BC483E2DB9B1313E2B1CE80":
            var_5[0] = "_encstr_B4C50C4F49114D38932F0B990E92";
            var_6[0] = "_encstr_B6FA213F770C61FD086E632EC3102CB98AE393A3E7D5FBADB8F051B652C152F2D6177B";
            var_7[0] = 5.5;
            var_8[0] = [];
            var_8[0][0] = "_encstr_8BA51877958583DEDCF58D07F5CDA12D95B18CFA1DDE0E7DAD07";
            var_8[0][1] = "_encstr_BA491B77591683F6E6BE361CEBCD864B9536467D98BD3AA3B7B6D7AD83";
            var_9[0] = [];
            var_9[0][0] = "_encstr_BD470EEA095B52093F6947AC77F553BC";
            var_9[0][1] = "_encstr_B6D61153AFEE4ED2371D4CE8DA6E86B4956346";
            var_21 = 1.67;
            var_22[0] = 5.15;
            break;
        case "_encstr_A2641F7B0BAF6778A0B760B067C6132F322C51619A73C5A1994F31B85BE56A293F":
            var_5[0] = "_encstr_8F82218B9B7BB92508B0E17608884F32475767436113F3E91098E93F4388B6EA305BA3";
            var_6[0] = "_encstr_A2E72447819FA76B72BF8B32DB7EA32FA7F8404168CB5D8567EA41DA239AC33316C7E1DAEF68";
            var_7[0] = 5.0;
            var_22[0] = 2.0;
            var_22[1] = 2.4;
            var_22[2] = 2.6;
            var_22[3] = 3.2;
            var_22[4] = 3.6;
            var_22[5] = 3.8;
            break;
        case "_encstr_97C71DB4BBE6D7B5E0AF1D0BEAE63A7DADB4C6C6DCD1E4590BB6D71D0DB74E":
            var_5[0] = "_encstr_948114A5251431F8C2D0710F0383E7F32B400EC7AFB2";
            var_5[1] = "_encstr_BD7619BF3CCFA9F98BB1517B7B87AE20299D3337B3F4F8350F5F63";
            var_5[2] = "_encstr_A8B41ED3108E98EB580A82F34723B296976B83C5F3715773E9D910A7FA9B0980";
            var_5[3] = "_encstr_A8B41ED3108E98EB580A82F34723B296976B83C5F3715773E9D910A7FA9B0980";
            var_5[4] = "_encstr_A8B41ED3108E98EB580A82F34723B296976B83C5F3715773E9D910A7FA9B0980";
            var_5[5] = "_encstr_A8B41ED3108E98EB580A82F34723B296976B83C5F3715773E9D910A7FA9B0980";
            var_5[6] = "_encstr_A8B41ED3108E98EB580A82F34723B296976B83C5F3715773E9D910A7FA9B0980";
            var_6[0] = "_encstr_939722C8933E70B0CA8F2103CD35A33827EAE0D07BEB1E38A6836F51C85DF8E0F33318DB";
            var_6[1] = "_encstr_8F4D27A5BBDCF56B0EEB8EC2BACD8EF56DD2D8D8CD8EC9ACB0D6F54743BD93BEB5D2B9B95A8D590689";
            var_6[2] = "_encstr_9F4D27300BB33F284BCFAD2FDD0B33770C729060233BDDE1E713209DA867BBAF75DAF0103AD53B13F2";
            var_6[3] = "_encstr_934D27CC2CF769CDAB51633F68CDAC11274B150596A9730D51C8D713981862D993D35A7A73315A3033";
            var_6[4] = "_encstr_BA4D2796DD73FAD607BE47B0AEB947FAADB4C6B1DCD1392BB0B5D78E43BDC9AFB52D376E5A63B20368";
            var_6[5] = "_encstr_BE4D2783B712C9E0F3B783A7C5DA6B919AB48A3C2B63DEF16F32904B4858B330532D80E2522CA9DBBB";
            var_6[6] = "_encstr_BE4D2783B712C9E0F3B783A7C5DA6B919AB48A3C2B63DEF16F32904B4858B330532D80E2522CA9DBBB";
            var_7[0] = 7.47;
            var_7[1] = 3.76;
            var_7[2] = 4.7;
            var_7[3] = 4.7;
            var_7[4] = 4.7;
            var_7[5] = 4.7;
            var_7[6] = 4.7;
            var_13 = 1;
            var_14 = 1.5;
            var_21 = 4.5;
            var_28 = 1;
            break;
        case "_encstr_94FD18C3B317DFF0282FE848EF5EABA71AE7D66D55AA71B8EEFF":
            var_5[0] = "_encstr_824A191F8B23F993432D3DB3181BCB8728F8BBAFB838271BCF3CC5";
            var_6[0] = "_encstr_BEC31D29759BEBD638BE1D16BA73E8D7169127B237C21B5A37B2EBCDC2E6DB";
            var_7[0] = 10.0;
            var_22[0] = 7.5;
            break;
        case "_encstr_AFC81D4BEECDF56BC1FAE816AE73D1EB9BAE0ECA4EF59BD07BBDE819EDEE37":
            var_5[0] = "_encstr_823D13E3C5E8A159E0A12191CCF011BF3B37339EC3";
            var_6[0] = "_encstr_AD4921EB4FFBC999EBD193395BBBCD1102A5217BD259E053EFCAAB8102078859DB09A5";
            var_7[0] = 6.0;
            var_22[0] = 3.75;
            break;
        case "_encstr_B69F1FAB674F90283899DB713B1ED8289303731D031241F1432DA049A4C72AF6AA":
        case "_encstr_BC9F1F295DB9FAAD38AFE80B5DB9A3FA1CD0859BA3DEDA7D8DC6DE855BD7919B19":
        case "_encstr_B9581B23C4A2C6C8316F93E1CB456B6FB22BCAB569BA43D97974F59F8F":
            var_10[0] = "_encstr_B99506D8B1BDC2DA";
            var_11[0] = "_encstr_9707035F3B";
            var_12[0] = 0.01;
            var_10[1] = "_encstr_B99506D8B1BDC2DA";
            var_11[1] = "_encstr_9819045FD029";
            var_12[1] = 1.5;
            var_10[2] = "_encstr_B99506D8B1BDC2DA";
            var_11[2] = "_encstr_9707035F3B";
            var_12[2] = 3.2;
            var_10[3] = "_encstr_B99506D8B1BDC2DA";
            var_11[3] = "_encstr_9819045FD029";
            var_12[3] = 4.7;
            var_7[0] = 5.1;
            var_13 = 1;
            var_14 = 2.0;
            break;
        case "_encstr_8C0F249B3F8BB989FBC1A3094BAB3D013295310BC249E0C5AB7ADE73437F7DD08F0A9BF7776D":
            var_15[0] = 0.466;
            var_16[0] = 2.85;
            var_17[0] = "_encstr_B8AE14D3C34C0999E881BF02BBB0B223087D2FE7B96D";
            var_18[0] = "_encstr_88D713DD1642E0FAB15275EB7AD78E7B778D827D28";
            var_19[0] = "_encstr_B335172335CB0184E04B45CB2658CCFA2D49FFE385FF4A4760";
            var_7[0] = 4.0;
            var_22[0] = 0.5;
            var_22[1] = 0.7;
            var_22[2] = 0.9;
            var_22[3] = 1.0;
            var_22[4] = 1.2;
            var_22[5] = 1.4;
            var_22[6] = 1.6;
            var_22[7] = 1.8;
            var_22[8] = 2.0;
            var_22[9] = 2.2;
            var_22[10] = 2.4;
            var_22[11] = 2.7;
            var_22[12] = 2.9;
            var_22[13] = 3.1;
            break;
        case "_encstr_9752250B07AF708898397BD15B7EB88882E789B9BFC3AE80A10C0688464B78567967210DAF9AFD":
            var_7[0] = 12.0;
            var_24[0] = "_encstr_A8241EDB89801F1A80EBA3A7FD3DF19998539467E390FE8167ADA767CBDBCBDC";
            var_24[1] = "_encstr_A33B1D9D66E1F531DB5B130BC946AF0E27EDD4561BD12D63CAF58E39C2D2D8";
            var_26 = 0.2;
            var_25[0] = ( 0, 80, 0 );
            var_25[1] = ( 75, 140, 0 );
            var_25[2] = ( -165, 250, 0 );
            var_25[3] = ( 50, 200, 0 );
            var_25[4] = ( 155, 250, 0 );
            var_25[5] = ( -75, 140, 0 );
            var_25[6] = ( -50, 200, 0 );
            var_27[0] = 1.0;
            var_27[1] = 1.0;
            var_27[2] = 3.5;
            var_22[0] = 3.5;
            var_22[1] = 3.7;
            var_22[2] = 3.9;
            var_22[3] = 4.1;
            var_22[4] = 4.3;
            var_22[5] = 4.5;
            var_22[6] = 4.7;
            var_22[7] = 4.9;
            break;
        default:
            return;
    }

    level.broshotepictauntprops[var_1] = [];
    level.broshotepictauntsubprops[var_1] = [];

    if ( var_2 && var_13 )
    {
        if ( !isdefined( level.queuedtaunts ) )
            level.queuedtaunts = [];

        if ( isdefined( level.queuedtaunts[var_0] ) )
        {
            var_30 = gettime() - level.queuedtaunts[var_0];

            if ( var_30 < var_14 * 1000 )
                wait( var_14 - var_30 / 1000 );
        }

        level.queuedtaunts[var_0] = gettime();
    }

    var_31 = ( 0, 0, 0 );

    if ( var_28 && isdefined( level.upsidedowntaunts ) && level.upsidedowntaunts == 1 )
        var_31 = ( 180, 180, 0 );

    for ( var_29 = 0; var_29 < var_5.size; var_29++ )
    {
        var_32 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_3 );
        var_32 setmodel( var_5[var_29] );
        var_32.angles = var_4 + var_31;
        var_32 notsolid();
        var_32 dontinterpolate();
        var_32 scriptmodelplayanimdeltamotion( var_6[var_29] );

        if ( !isdefined( level.broshotepictauntprops ) )
            level.broshotepictauntprops = [];

        level.broshotepictauntprops[var_1][var_29] = var_32;

        if ( !( isdefined( var_8[var_29] ) && isarray( var_8[var_29] ) ) )
            continue;

        level.broshotepictauntsubprops[var_1] = [];

        for ( var_33 = 0; var_33 < var_8[var_29].size; var_33++ )
        {
            var_34 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_3 );
            var_34 setmodel( var_8[var_29][var_33] );
            var_34.angles = var_4 + var_31;
            var_34 notsolid();
            var_34 dontinterpolate();
            var_34 linkto( var_32, var_9[var_29][var_33], ( 0, 0, 0 ), ( 0, 0, 0 ) );
            level.broshotepictauntsubprops[var_1][var_33] = var_34;
        }
    }

    var_35 = 0;

    for ( var_29 = 0; var_29 < var_7.size; var_29++ )
        var_35 = max( var_35, var_7[var_29] );

    for ( var_29 = 0; var_29 < var_10.size; var_29++ )
        thread doepictauntscriptablestep( var_2, var_1, var_10[var_29], var_11[var_29], var_12[var_29] );

    if ( var_2 == 0 )
        var_36 = getplayercharacter( -1 );
    else
        var_36 = getplayercharacter( var_1 );

    if ( var_2 != 0 )
    {
        for ( var_29 = 0; var_29 < var_15.size; var_29++ )
            thread playbeamfx( var_15[var_29], var_16[var_29], var_19[var_29], var_17[var_29], var_18[var_29], var_36 );
    }

    if ( var_2 != 0 && var_20 > 0 )
        thread doshellshock( var_20 );

    if ( var_2 != 0 && var_21 > 0 )
        thread doearthquake( var_21, 1 );

    for ( var_29 = 0; var_29 < var_22.size; var_29++ )
        thread doearthquake( var_22[var_29], 0 );

    for ( var_29 = 0; var_29 < var_23.size; var_29++ )
        thread dodisintegrate( var_23[var_29], var_29 );

    for ( var_29 = 0; var_29 < var_25.size; var_29++ )
    {
        var_37 = anglestoforward( level.camera_bro_shot.basecam.angles );
        var_38 = vectornormalize( ( var_37[0], var_37[1], 0 ) );
        var_39 = vectorcross( var_38, ( 0, 0, 1 ) );
        var_40 = var_38 * var_25[var_29][1];
        var_41 = var_39 * var_25[var_29][0];
        var_42 = var_40 + var_41;

        if ( var_2 != 0 )
            var_43 = level.camera_bro_shot.char_loc[0].origin;
        else
            var_43 = var_3;

        for ( var_33 = 0; var_33 < var_24.size; var_33++ )
            thread dospawnvfx( var_24[var_33], var_27[var_33] + var_26 * var_29, var_42, var_43 );
    }

    thread cleanupepictauntprops( var_1, var_35, var_0 );
}

dospawnvfx( var_0, var_1, var_2, var_3 )
{
    self endon( "_encstr_805315EB37480F27A1892B72F08D5B4741297561D8730B" );
    wait( var_1 );
    var_4 = var_3 + var_2;
    var_5 = spawnfx( level._effect[var_0], var_4 );

    if ( isdefined( var_5 ) )
    {
        triggerfx( var_5 );
        var_5 thread delayfxdelete( 12.0 );
    }
}

delayfxdelete( var_0 )
{
    self endon( "_encstr_805315EB37480F27A1892B72F08D5B4741297561D8730B" );
    wait( var_0 );

    if ( isdefined( self ) )
        self delete();
}

dodisintegrate( var_0, var_1 )
{
    self endon( "_encstr_805315EB37480F27A1892B72F08D5B4741297561D8730B" );
    wait( var_0 );

    if ( isdefined( level.topplayers[var_1 + 3] ) )
        level.topplayers[var_1 + 3].bro hide( 1 );
}

playbeamfx( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    self endon( "_encstr_805315EB37480F27A1892B72F08D5B4741297561D8730B" );
    wait( var_0 );
    var_6 = playfxontagsbetweenclients( level._effect[var_2], var_5, var_3, var_5, var_4 );
    thread cleanupbeamfx( var_6, var_1 );
}

cleanupbeamfx( var_0, var_1 )
{
    waittill_notify_or_timeout( "_encstr_805315EB37480F27A1892B72F08D5B4741297561D8730B", var_1 );
    var_0 delete();
}

waittill_notify_or_timeout( var_0, var_1 )
{
    self endon( var_0 );
    wait( var_1 );
}

doearthquake( var_0, var_1 )
{
    self endon( "_encstr_805315EB37480F27A1892B72F08D5B4741297561D8730B" );

    if ( !isdefined( level.players ) )
        return;

    wait( var_0 );

    foreach ( var_3 in level.players )
    {
        if ( isbot( var_3 ) )
            continue;

        if ( var_1 )
        {
            var_3 earthquakeforplayer( 0.5, 0.65, var_3.origin, 1000 );
            continue;
        }

        var_3 earthquakeforplayer( 0.15, 0.25, var_3.origin, 1000 );
    }
}

doshellshock( var_0 )
{
    self endon( "_encstr_805315EB37480F27A1892B72F08D5B4741297561D8730B" );
    wait( var_0 );

    foreach ( var_2 in level.players )
    {
        if ( isbot( var_2 ) )
            continue;
    }
}

getplayercharacter( var_0 )
{
    if ( var_0 == -1 )
        var_1 = level.charactercac;
    else
        var_1 = level.topplayers[var_0].bro;

    return var_1;
}

doepictauntscriptablestep( var_0, var_1, var_2, var_3, var_4 )
{
    if ( var_0 == 0 )
        var_1 = -1;

    self endon( "_encstr_805315EB37480F27A1892B72F08D5B4741297561D8730B" );
    thread listenepictauntscriptablecancel( var_1, var_2 );
    wait( var_4 );
    var_5 = getplayercharacter( var_1 );

    if ( !isdefined( var_5 ) )
        return;

    var_5 setscriptablepartstate( var_2, var_3, 0 );
}

listenepictauntscriptablecancel( var_0, var_1 )
{
    self waittill( "_encstr_805315EB37480F27A1892B72F08D5B4741297561D8730B" );
    var_2 = getplayercharacter( var_0 );
    var_2 setscriptablepartstate( var_1, "_encstr_A86C0D681FEEC139420F697B37FB75", 0 );
}

respawnclientcharacter()
{
    var_0 = level.charactercac.angles;
    var_1 = level.charactercac.origin;
    level.charactercac delete();
    level.charactercac = spawn( "_encstr_AA21119B2E8AB0C74377D7C9A70B8758240723", var_1, 0, 0, 1, "_encstr_9B8C12587F56D9A0EB5001D3D1EB6E70EED3F10B" );
    level.charactercac.angles = var_0;
    deleteepictauntprops( 0 );

    if ( isdefined( level.last_taunt_sfx ) )
    {
        self stoplocalsound( level.last_taunt_sfx );

        if ( soundexists( level.last_taunt_sfx + "_encstr_958506BF6C22684E" ) )
            self stoplocalsound( level.last_taunt_sfx + "_encstr_958506BF6C22684E" );

        if ( soundexists( level.last_taunt_sfx + "_encstr_BD430570901F45" ) )
            self stoplocalsound( level.last_taunt_sfx + "_encstr_BD430570901F45" );

        level.last_taunt_sfx = undefined;
    }
}

tauntinprogress( var_0 )
{
    return isdefined( level.broshotepictauntprops ) && isarray( level.broshotepictauntprops ) && isdefined( level.broshotepictauntprops[var_0] ) && level.broshotepictauntprops[var_0].size > 0;
}

cleanupepictauntprops( var_0, var_1, var_2 )
{
    self endon( "_encstr_805315EB37480F27A1892B72F08D5B4741297561D8730B" );
    wait( var_1 );
    level.taunts_done = 1;
    deleteepictauntprops( var_0 );
}

deleteepictauntprops( var_0 )
{
    if ( tauntinprogress( var_0 ) )
    {
        for ( var_1 = 0; var_1 < level.broshotepictauntprops[var_0].size; var_1++ )
        {
            if ( isdefined( level.broshotepictauntprops[var_0][var_1] ) )
            {
                level.broshotepictauntprops[var_0][var_1] scriptmodelclearanim();
                level.broshotepictauntprops[var_0][var_1] delete();
            }
        }

        level.broshotepictauntprops[var_0] = [];

        if ( isdefined( level.broshotepictauntsubprops[var_0] ) && isarray( level.broshotepictauntsubprops[var_0] ) )
        {
            for ( var_1 = 0; var_1 < level.broshotepictauntsubprops[var_0].size; var_1++ )
            {
                if ( isdefined( level.broshotepictauntsubprops[var_0][var_1] ) )
                {
                    level.broshotepictauntsubprops[var_0][var_1] scriptmodelclearanim();
                    level.broshotepictauntsubprops[var_0][var_1] delete();
                }
            }

            level.broshotepictauntsubprops[var_0] = [];
        }
    }

    self notify( "_encstr_805315EB37480F27A1892B72F08D5B4741297561D8730B" );
}

processtauntsound( var_0 )
{
    if ( !soundexists( var_0 ) )
        return;

    if ( !isdefined( level.taunts_done ) )
        level.taunts_done = 0;

    if ( !isdefined( level.taunts_used ) )
        level.taunts_used = [];

    if ( soundexists( var_0 ) )
    {
        if ( isdefined( level.last_taunt_sfx ) )
        {
            self stoplocalsound( level.last_taunt_sfx );

            if ( soundexists( level.last_taunt_sfx + "_encstr_958506BF6C22684E" ) )
                self stoplocalsound( level.last_taunt_sfx + "_encstr_958506BF6C22684E" );

            if ( soundexists( level.last_taunt_sfx + "_encstr_BD430570901F45" ) )
                self stoplocalsound( level.last_taunt_sfx + "_encstr_BD430570901F45" );

            level.last_taunt_sfx = undefined;
        }

        playepicbroshotsound( var_0 );
        level.taunts_used[level.taunts_used.size] = var_0;
        level.last_taunt_sfx = var_0;
    }
    else if ( soundexists( var_0 + "_encstr_B2DF073907B59073F3" ) )
    {
        if ( !array_contains( level.taunts_used, var_0 ) )
        {
            playepicbroshotsound( var_0 + "_encstr_B2DF073907B59073F3" );
            level.taunts_used[level.taunts_used.size] = var_0;
            level.last_taunt_sfx = var_0 + "_encstr_B2DF073907B59073F3";
        }
    }
}

playepicbroshotsound( var_0 )
{
    if ( isdefined( level.players ) )
    {
        foreach ( var_2 in level.players )
        {
            if ( !isbot( var_2 ) )
                var_2 playlocalsound( var_0 );
        }
    }
    else
        self playlocalsound( var_0 );
}

array_contains( var_0, var_1 )
{
    if ( var_0.size <= 0 )
        return 0;

    foreach ( var_3 in var_0 )
    {
        if ( var_3 == var_1 )
            return 1;
    }

    return 0;
}
