// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

getattachmenttype( var_0 )
{
    var_1 = tablelookup( "_encstr_AF9F1761CA261343BC47A0F01FC558613B366E7967CEDF6B86", 4, var_0, 2 );
    return var_1;
}

getcompleteweaponnamenoalt( var_0 )
{
    var_1 = createheadicon( var_0 );

    if ( istrue( var_0.isalternate ) )
        var_1 = getsubstr( var_1, 4 );

    return var_1;
}

getweapontype( var_0 )
{
    if ( !isdefined( var_0 ) )
        return;

    if ( iscacprimaryweapon( var_0 ) )
        return "_encstr_987F080E394BDAC2E45E";

    if ( iscacsecondaryweapon( var_0 ) )
        return "_encstr_B98F0AC7D5B99F4DDBA8353B";

    if ( iskillstreakweapon( var_0 ) )
        return "_encstr_B6CE0B0BB00A031B7B88355740";

    if ( issuperweapon( var_0 ) )
        return "_encstr_BEB4068F1B5BA3AB";

    if ( isgamemodeweapon( var_0 ) )
        return "_encstr_87AC099DB05B59ADF619AC";

    if ( var_0 == "_encstr_A1D81441C7EAF9E38D73631ADBF0BE7A9853CCEF1B50" || var_0 == "_encstr_B370197F0BF093A1D85EB3FBD393ED3BC081D7A7E9A81A9C1960AA" || var_0 == "_encstr_8FE016E09A157BB92BFF9D15CA0B61313192601892E19353" || var_0 == "_encstr_A8ED1BDD5FA0DFDF8057A0481AAE170447AD3AA02F4FDEB36839CF1987" )
        return "_encstr_9BAF074BA0ED9A9773";

    if ( var_0 == "_encstr_9BE91BD0DA95E865B7F541F9DE67084D292AC9D85B88D2AA9D2B575D63" || var_0 == "_encstr_AB2E1DB09CADDE93CA46D71D390B9637FAE8C273B5BE47D5E4C9CAD1FA6B1C" || var_0 == "_encstr_B4FC1FB70815888BB9389F8163B1CF2D8FE14FE3C52F3D8E0C63F5ABC585478D90" || var_0 == "_encstr_8CB6230E95C8BD28102BAF512B86B3BDF8B9F8C877E5ADB0AA13CFF72043364A8D8B718FA2" || var_0 == "_encstr_89E722333B224068651FE69B82497808B9EFA7C75BCB9650BDF3EE516B365835E2BF3BE1" || var_0 == "_encstr_B81F24E10AADEDA261E1A675FD9FBB7831A4398080193DA8F206B7030F320BB54A2B4AA61521" || var_0 == "_encstr_B1052ADF02C7989D27C27130BBFE6370B7B4504667AFC0A90C0BA861F3930D4BB734F04ED55B29C337A11020" )
        return "_encstr_9BAF074BA0ED9A9773";

    if ( islevelweapon( var_0 ) )
        return "_encstr_890A066332FBA3E0";

    if ( scripts\mp\utility\script::isstrstart( var_0, "_encstr_88880EAA4156236A50C77C79DD407747" ) )
        return "_encstr_A8460D91CA6EA3C957C6D1A5981BB2";

    if ( isvehicleweapon( var_0 ) )
        return "_encstr_BC5008F4B573F81FC5B2";

    if ( isspecialmeleeweapon( var_0 ) || var_0 == "_encstr_BAFF15D2DD1CBE462BCC4B98E45A631B8547BD4EFA6B07" )
        return "_encstr_BC8D0E2ACF33CA6929686FAF08A05D12";

    if ( isenvironmentweapon( var_0 ) )
        return "_encstr_B40B0C593767B4C9F6736B5637E8";

    var_1 = getequipmenttype( var_0 );

    if ( isdefined( var_1 ) )
        return var_1;

    if ( var_0 == "_encstr_AABA05236DC831" )
        return "_encstr_B74E0BBBF6393646B93885BBE6";

    if ( var_0 == "_encstr_9DF00DF37BD0E2716F3B8BC7086BBB" )
        return var_0;

    if ( var_0 == "_encstr_BC0D0C2DBB0E7D9DAE9BC6AC6EB9" )
        return "_encstr_B88D08998B20B9B913D3";

    if ( var_0 == "_encstr_AA1118D3EDB531A559AFE40B37D9B232EB2CA3A3C2B1DA7D6BC1" || var_0 == "_encstr_8FEF174FDBAD899659BEB556C695CAAF581D8EB0B15BFAB607" )
        return "_encstr_98CB0755CFC5882307";
}

getequipmenttype( var_0 )
{
    var_1 = undefined;

    switch ( var_0 )
    {
        case "_encstr_98410C37CDDEEE4C2C1BD8AFB61C":
        case "_encstr_970B08473F92B171FD8A":
        case "_encstr_ABB108EEA8EA22DED72B":
        case "_encstr_874513A9024703D06DC2631FEAD6A0C3EF9AA6902B":
        case "_encstr_89F817DB90A61F7BE06DDFAB1598477F588933B2B871273583":
        case "_encstr_BE851A55744BB78B09E36810FB51E1EBE15FC1550E8355B0EB0F30C0":
        case "_encstr_B40F16E88627DEDDD2DCCE5BDC4BCCCAEBCC2D392BBE5B0E":
        case "_encstr_89F511713BBB2818C13559D05DB9E85501B7F1":
        case "_encstr_B9C40C1EFA1EBBB22FC305A93AF3":
        case "_encstr_B2430B07CCC710135D9A29B0E3":
        case "_encstr_A1730ED1DBB801200B0219525A878B43":
        case "_encstr_BCAE08D8D0F5B607F538":
        case "_encstr_9FA70ADF38B86C4AD188752A":
        case "_encstr_A24A10B6DA889F713C522A18E8157A0F7580":
        case "_encstr_B89B0FB411E85A7F7B5B8A11C1CC7F5598":
        case "_encstr_9D8D0F1D34CAC9ADA51D597D16837DB5E0":
        case "_encstr_94410C2B9B052323CB8D7A561F82":
        case "_encstr_98730B19756A772BCF4369E043":
            var_1 = "_encstr_9C1607D0071420D7AA";
            break;
        case "_encstr_BDFE136D5B9892BADE07A74F2D0D52C9B821A93553":
        case "_encstr_B32A125452AAF2972377D14FCD38D0350BBF2998":
        case "_encstr_884A1932F00DA43F789DF7D3AF60536BA3C8B90B30C71A673671C0":
        case "_encstr_B283095A09482CFA98EBEB":
        case "_encstr_A22E0D63D02EBB9A0D6E057A402303":
        case "_encstr_8A2D0E61C9905FB3BF988AC28198F752":
        case "_encstr_82B20FC7F7829E3F2B75B2566D5FF9105B":
        case "_encstr_BDD3079D0BB9FAB6C1":
        case "_encstr_BE8B1123B28DF6BCFAB3932BDC0B1959BEB538":
        case "_encstr_9B9A0E37E0781F39F14B411F09B1C0CA":
        case "_encstr_A31414205AE621AB6BBFED708F3B51D54E6218B9827A":
        case "_encstr_802311433F5F07C5494F1BE12DA911CD999558":
        case "_encstr_B94516A690081B23D68FC7E78DE84A4208D85EEF4929ADAB":
        case "_encstr_970B114D33923EC8CF4FD30935D9E07D295F19":
            var_1 = "_encstr_94C2099887BA24607BE134";
            break;
        case "_encstr_BC6E16CF97333DA0624FF6EB774BE0E05BDBBB610F598E40":
        case "_encstr_8AC11358C8392BE62CB1A59B59F54C9CD7CC16B52B":
        case "_encstr_B67D1088CFF235673FFD1EB2486EE70B4A49":
        case "_encstr_89EA13CB47593A3F1958FB9226E52B3588C34745D9":
            if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
                var_1 = "_encstr_958610CB71A3B0CF47BA2853217785F0FFEA";

            break;
        default:
            break;
    }

    return var_1;
}

isenvironmentweapon( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    var_1 = undefined;

    if ( issameweapon( var_0 ) )
        var_1 = var_0.basename;
    else
        var_1 = var_0;

    switch ( var_1 )
    {
        case "_encstr_BAD01058E713B081C2D5F590EE3AFDFE653B":
        case "_encstr_87BB11F3546F2815E3B271FE2B87438809BD21":
        case "_encstr_A63B113BB0E67D8D859BF547BDC39636BEB583":
        case "_encstr_883F0B24830EB737BFF8299BC8":
        case "_encstr_8BDA0DB62DB9CACC2D2BB1C8BE5B07":
        case "_encstr_9812113CE798CF17ADB90AA2B8E70D9F16DE92":
            return 1;
        default:
            break;
    }

    return 0;
}

issuperweapon( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    return isdefined( scripts\mp\supers::getsuperrefforsuperweapon( var_0 ) );
}

turnexfiltoside( var_0 )
{
    if ( isdefined( var_0.others ) )
    {
        foreach ( var_2 in var_0.others )
        {
            if ( issubstr( var_2, "_encstr_A39C07B1CFC082B1AD" ) )
                return 1;
        }
    }

    if ( isdefined( var_0.attachments ) )
    {
        foreach ( var_2 in var_0.attachments )
        {
            if ( issubstr( var_2, "_encstr_A39C07B1CFC082B1AD" ) )
                return 1;
        }
    }

    return 0;
}

issuperdamagesource( var_0 )
{
    var_1 = undefined;

    if ( issameweapon( var_0 ) )
        var_1 = var_0.basename;
    else
        var_1 = var_0;

    if ( issuperweapon( var_0 ) )
        return 1;

    if ( var_1 == "_encstr_AF030E3A48CB9A9F51419F8C6D3E7FA2" )
        return 1;

    if ( var_1 == "_encstr_93C314F00403F0D099A3936543C2A551DF9B180EAD78" )
        return 1;

    if ( var_1 == "_encstr_8F39108B1387575A3139AA8F09B0A077A12B" )
        return 1;

    return 0;
}

isgamemodeweapon( var_0 )
{
    if ( isbombsiteweapon( var_0 ) )
        return 1;

    var_1 = undefined;

    if ( issameweapon( var_0 ) )
        var_1 = var_0.basename;
    else
        var_1 = var_0;

    switch ( var_1 )
    {
        case "_encstr_B7060D79FFD2C1ABA9CE6A12B0F1CF":
        case "_encstr_9E0A16EAC009A1C3C0C80B3179A8FEA243405382D86FE56B":
        case "_encstr_9812113CE798CF17ADB90AA2B8E70D9F16DE92":
        case "_encstr_A9781094237297838D732B2363A14ADF186B":
        case "_encstr_886A100B633F07D9C923880807E573CFB24A":
            return 1;
        default:
            return 0;
    }

    return 0;
}

islevelweapon( var_0 )
{
    var_1 = undefined;

    if ( issameweapon( var_0 ) )
        var_1 = var_0.basename;
    else
        var_1 = var_0;

    switch ( var_1 )
    {
        case "_encstr_89BB137823B2E0281E1FF7D5474538B057DB3660BB":
            return 1;
        default:
            return 0;
    }

    return 0;
}

getweapongroup( var_0 )
{
    if ( issameweapon( var_0 ) && nullweapon( var_0 ) )
        return "_encstr_93610627DB28CDDB";

    if ( isstring( var_0 ) && ( var_0 == "_encstr_AABA05236DC831" || var_0 == "_encstr_8778092C8D1DFAE6BDE6AC" ) )
        return "_encstr_93610627DB28CDDB";

    var_1 = getweaponrootname( var_0 );
    var_2 = weapongroupmap( var_1 );

    if ( !isdefined( var_2 ) )
    {
        if ( issuperweapon( var_0 ) )
            var_2 = "_encstr_BEB4068F1B5BA3AB";
        else if ( iskillstreakweapon( var_0 ) )
            var_2 = "_encstr_B6CE0B0BB00A031B7B88355740";
        else if ( isgamemodeweapon( var_0 ) )
            var_2 = "_encstr_87AC099DB05B59ADF619AC";
        else if ( tut_loadout( var_0 ) )
            var_2 = "_encstr_A42218374FCAE7988639B9D11D7C509E73E797C7B3D226E0A1CD";
        else if ( unlockableindex( var_0 ) )
            var_2 = "_encstr_9706156F1792BFF0FE4111EBF6DFB8F8EBE31DC39F6B0B";
        else
            var_2 = "_encstr_93610627DB28CDDB";
    }

    return var_2;
}

runpubliceventoftype( var_0 )
{
    if ( issameweapon( var_0 ) && nullweapon( var_0 ) )
        return "_encstr_93610627DB28CDDB";

    if ( isstring( var_0 ) && ( var_0 == "_encstr_AABA05236DC831" || var_0 == "_encstr_8778092C8D1DFAE6BDE6AC" ) )
        return "_encstr_93610627DB28CDDB";

    var_1 = getweaponrootname( var_0 );
    var_2 = _id_14594( var_1 );

    if ( !isdefined( var_2 ) )
    {
        if ( issuperweapon( var_0 ) )
            var_2 = "_encstr_BEB4068F1B5BA3AB";
        else if ( iskillstreakweapon( var_0 ) )
            var_2 = "_encstr_B6CE0B0BB00A031B7B88355740";
        else if ( isgamemodeweapon( var_0 ) )
            var_2 = "_encstr_87AC099DB05B59ADF619AC";
        else if ( tut_loadout( var_0 ) )
            var_2 = "_encstr_A42218374FCAE7988639B9D11D7C509E73E797C7B3D226E0A1CD";
        else if ( unlockableindex( var_0 ) )
            var_2 = "_encstr_9706156F1792BFF0FE4111EBF6DFB8F8EBE31DC39F6B0B";
        else
            var_2 = "_encstr_93610627DB28CDDB";
    }

    return var_2;
}

unlockableindex( var_0 )
{
    var_1 = undefined;

    if ( issameweapon( var_0 ) )
        var_1 = var_0.basename;
    else
        var_1 = var_0;

    return var_1 == "_encstr_974511E14BEFD418C52B95AD256E882B6FD2FB";
}

tut_loadout( var_0 )
{
    var_1 = undefined;

    if ( issameweapon( var_0 ) )
        var_1 = var_0.basename;
    else
        var_1 = var_0;

    switch ( var_1 )
    {
        case "_encstr_A36E1A37CAB63ACAC3D70B8536071A16C48CF5E60ED816CD86EBAD83":
        case "_encstr_9D0C1A1308FB038F1AA0706D4380779AA97259AB08A13E9F30887D88":
        case "_encstr_809F1CACDABD23B53B63E7D6D9BAC830D7F371A63725693728F092DE7769":
        case "_encstr_81A016808F759BDB8BD1CE40F5A367A3B003A808232FF0A9":
        case "_encstr_959C18471AAC9CDA964759D713DEB13A7DE4B0C8B45D6EF55B83":
        case "_encstr_A90B13C38210FBDF596792D180BB50C7EF3B9FBAF0":
        case "_encstr_AA9E139F78F82C0A91C8702DCB5FC291AB72B76F68":
        case "_encstr_A45E1539B897587167FB1946232F3BD82F59393B677D90":
        case "_encstr_808E0F48828D317103B7DE406CDBFEFB32":
        case "_encstr_BA3B11C0E23F8DC0D70CCD28F2272859691A58":
            return 1;
        default:
            return 0;
    }
}

register_wave_spawner( var_0 )
{
    var_1 = getweaponrootname( var_0 );
    var_2 = level.weaponattachments[var_1];

    if ( !isdefined( var_2 ) )
        var_2 = [];

    return var_2;
}

attachmentscompatible( var_0, var_1, var_2 )
{
    if ( attachmentiscosmetic( var_1 ) && attachmentiscosmetic( var_2 ) )
        return 0;

    var_1 = attachmentmap_tobase( var_1 );
    var_2 = attachmentmap_tobase( var_2 );
    var_3 = 1;

    if ( var_1 == var_2 )
        var_3 = 0;
    else if ( isdefined( level.carryitem2omnvar ) )
    {
        if ( !isdefined( level.carryitem2omnvar[var_0] ) )
            var_0 = "_encstr_AA1608C07786F13312D3";

        var_3 = !( isdefined( level.carryitem2omnvar[var_0][var_1] ) && isdefined( level.carryitem2omnvar[var_0][var_1][var_2] ) );
    }
    else if ( var_1 != "_encstr_AABA05236DC831" && var_2 != "_encstr_AABA05236DC831" )
    {
        if ( !isdefined( level.cash_hud_bink[var_0] ) )
            var_0 = "_encstr_AA1608C07786F13312D3";

        var_4 = level.cash_hud_bink[var_0];
        var_5 = tablelookuprownum( var_4, 0, var_2 );

        if ( tablelookup( var_4, 0, var_1, var_5 ) == "_encstr_BE07033757" )
            var_3 = 0;
    }

    return var_3;
}

attachmentsconflict( var_0, var_1, var_2, var_3, var_4 )
{
    if ( attachmentiscosmetic( var_0 ) && attachmentiscosmetic( var_1 ) )
        return var_0;

    var_5 = undefined;

    if ( issameweapon( var_2 ) )
        var_5 = createheadicon( var_2 );
    else
        var_5 = var_2;

    if ( !isdefined( var_3 ) )
        var_3 = attachmentmap_tounique( var_0, var_5 );

    if ( !isdefined( var_4 ) )
        var_4 = attachmentmap_tounique( var_1, var_5 );

    if ( add_head_icon_on_allies( var_3, var_4 ) )
        return var_0;

    if ( add_head_icon_on_allies( var_4, var_3 ) )
        return var_0;

    var_0 = attachmentmap_tobase( var_0 );
    var_1 = attachmentmap_tobase( var_1 );
    var_6 = scripts\mp\weapons::safechecknum( var_5 );

    if ( isdefined( level.carryitem2omnvar ) && !isdefined( level.carryitem2omnvar[var_6] ) )
        var_6 = "_encstr_AA1608C07786F13312D3";

    var_7 = "_encstr_A40101";

    if ( var_0 == var_1 )
        var_7 = var_0;
    else if ( isdefined( level.carryitem2omnvar ) && isdefined( level.carryitem2omnvar[var_6] ) && isdefined( level.carryitem2omnvar[var_6][var_0] ) )
    {
        var_8 = level.carryitem2omnvar[var_6][var_0][var_1];

        if ( isdefined( var_8 ) )
        {
            if ( var_8 == "_encstr_BE07033757" )
                var_7 = var_0;
            else
                var_7 = var_8;
        }
    }

    return var_7;
}

add_head_icon_on_allies( var_0, var_1 )
{
    var_2 = carryitemomnvar( var_0 );
    var_3 = carryiteminfo( var_1 );
    return isdefined( var_2 ) && isdefined( var_3 ) && var_3 == var_2;
}

getweaponrootname( var_0 )
{
    var_1 = undefined;

    if ( issameweapon( var_0 ) )
        var_1 = var_0.basename;
    else
        var_1 = var_0;

    var_2 = level.weaponrootcache[var_1];

    if ( isdefined( var_2 ) )
        return var_2;

    var_3 = var_1;
    var_4 = strtok( var_1, "_encstr_984C028E" );

    if ( !isdefined( var_4 ) || var_4.size == 0 )
        return "_encstr_A40101";

    var_5 = 0;

    if ( var_4[0] == "_encstr_A4190459B2A3" )
        var_5++;

    if ( var_4[var_5] == "_encstr_B8190402FF3A" || var_4[var_5] == "_encstr_B707036379" )
    {
        var_6 = [ "_encstr_A30703F270", "_encstr_9407031388", "_encstr_870703207A", "_encstr_AF07038EB8", "_encstr_A90703C332", "_encstr_8807031CC1", "_encstr_A80703E2DA", "_encstr_8F070398EA", "_encstr_9307033D9B", "_encstr_BE0703815F", "_encstr_9807036B9C" ];

        if ( scripts\engine\utility::array_contains( var_6, var_4[var_5 + 1] ) )
            var_1 = var_4[var_5] + "_encstr_984C028E" + var_4[var_5 + 1] + "_encstr_984C028E" + var_4[var_5 + 2];
        else
            var_1 = var_4[var_5] + "_encstr_984C028E" + var_4[var_5 + 1];
    }

    if ( level.weaponrootcache.size < 100 )
        level.weaponrootcache[var_3] = var_1;

    return var_1;
}

relic_nuketimer_globalthread( var_0 )
{
    var_1 = getweaponrootname( var_0 );

    if ( isdefined( level.weaponmapdata[var_1] ) && isdefined( level.weaponmapdata[var_1].assetname ) )
        var_0 = level.weaponmapdata[var_1].assetname;

    return var_0;
}

getweaponvarianttablename( var_0 )
{
    if ( scripts\mp\utility\script::isstrstart( var_0, "_encstr_82C50518EB38C1" ) )
        var_0 = getsubstr( var_0, 4 );

    if ( scripts\mp\utility\script::isstrstart( var_0, "_encstr_B219046E68FA" ) )
    {

    }

    return "_encstr_A8180DE2B0EAD75D0D4355DBA413B7" + var_0 + "_encstr_A9B90ED767C293B4C2CDD137B8B1B9EC";
}

getweaponbasenamescript( var_0 )
{
    if ( issameweapon( var_0 ) )
        return var_0.basename;

    if ( isstring( var_0 ) && var_0 == "_encstr_AABA05236DC831" )
        return "_encstr_AABA05236DC831";

    return getweaponbasename( var_0 );
}

getweapongunsmithattachmenttable( var_0 )
{
    var_1 = undefined;

    if ( issameweapon( var_0 ) )
        var_1 = var_0.basename;
    else
        var_1 = var_0;

    var_2 = getweaponrootname( var_1 );
    return "_encstr_A8180DE2B0EAD75D0D4355DBA413B7" + getsubstr( var_2, 4 ) + "_encstr_AA0911D7C23A3A2C1BA1D6599B3AB9B8D89B9D";
}

getaltmodeweapon( var_0 )
{
    foreach ( var_2 in var_0.attachments )
    {
        var_3 = attachmentmap_tobase( var_2 );

        if ( var_3 == "_encstr_89070358A2" || var_3 == "_encstr_877608807A621B2867B5" || var_3 == "_encstr_88D506545542FFDB" || var_3 == "_encstr_A3BD07C10B0F7F5556" || var_3 == "_encstr_8F3708CA308C739E5001" || var_3 == "_encstr_A6E00D2C2837F69E396E8009D35059" || var_3 == "_encstr_9B8B09FA614ECB20C93119" || var_3 == "_encstr_813507FFA8B84E0A2F" )
            return var_3;
    }

    return undefined;
}

isaltmodeweapon( var_0 )
{
    if ( var_0 == "_encstr_AABA05236DC831" )
        return 0;

    return weaponinventorytype( var_0 ) == "_encstr_A4DC0819F2E399503F45";
}

removealtmodefromweaponname( var_0 )
{
    if ( isaltmodeweapon( var_0 ) )
        var_0 = getsubstr( var_0, 4 );

    return var_0;
}

getvalidextraammoweapons()
{
    var_0 = [];
    var_1 = self getweaponslistprimaries();

    foreach ( var_3 in var_1 )
    {
        var_4 = weaponclass( var_3 );

        if ( !iskillstreakweapon( var_3 ) && var_4 != "_encstr_A28D080FA2D39DC7FAFA" && var_4 != "_encstr_98080F93DBB1B556D11B85ABB936D059E4" && self getweaponammostock( var_3 ) != 0 )
            var_0[var_0.size] = var_3;
    }

    return var_0;
}

ispickedupweapon( var_0 )
{
    if ( iscacprimaryorsecondary( var_0 ) )
    {
        var_1 = undefined;

        if ( issameweapon( var_0 ) )
            var_1 = createheadicon( var_0 getnoaltweapon() );
        else if ( isstring( var_0 ) )
        {
            var_1 = var_0;

            if ( issubstr( var_1, "_encstr_AD830589BDDC51" ) )
                var_1 = getsubstr( var_1, 4, var_0.size );
        }

        var_2 = isdefined( self.pers["_encstr_BE310E8339B4B60B272FEA591607BD9B"] ) && self.pers["_encstr_BE310E8339B4B60B272FEA591607BD9B"] == var_1;
        var_3 = isdefined( self.pers["_encstr_B68910905AD6CFD88B411E936FD761B9BD92"] ) && self.pers["_encstr_B68910905AD6CFD88B411E936FD761B9BD92"] == var_1;

        if ( !var_2 && !var_3 )
            return 1;
    }

    return 0;
}

iscacprimaryweapon( var_0 )
{
    return tv_station_fastrope_one_infil_start_targetname_array( getweapongroup( var_0 ), var_0 );
}

tv_station_fastrope_one_infil_start_targetname_array( var_0, var_1 )
{
    switch ( var_0 )
    {
        case "_encstr_89CC0DEF5390821F904662EA487D4F":
        case "_encstr_8FE60FAF13D0C25FD006C37AE835877B40":
        case "_encstr_AF710B0B50BB6ACFA0C80C35FC":
        case "_encstr_A9710B24C527AB77354198A8EB":
        case "_encstr_AABE0E47EF4F93A830EFCFC309E7BF9E":
        case "_encstr_BA250FBBB22C1CF6CDF50B6E372CD5D88E":
        case "_encstr_A6710B7FC30B12AF20F613FAD9":
        case "_encstr_9706156F1792BFF0FE4111EBF6DFB8F8EBE31DC39F6B0B":
        case "_encstr_A42218374FCAE7988639B9D11D7C509E73E797C7B3D226E0A1CD":
        case "_encstr_AD6510EEACC283DBB9FA3A85B13A5AB1B063":
            return 1;
        default:
            return 0;
    }
}

iscacsecondaryweapon( var_0 )
{
    return tv_station_fastrope_one_infil_start_targetname_array_index( getweapongroup( var_0 ), var_0 );
}

tv_station_fastrope_one_infil_start_targetname_array_index( var_0, var_1 )
{
    switch ( var_0 )
    {
        case "_encstr_B7BF127F8889D85A6D18A25A780DB2937340ABBF":
        case "_encstr_97C90EBB2B2C1CBDDCAF1C4BE647B7B1":
            return 1;
        case "_encstr_8A200EAF49963790881958AA3D0BB563":
            return !isspecialmeleeweapon( var_1 );
        default:
            return 0;
    }
}

iscacprimaryorsecondary( var_0 )
{
    var_1 = getweapongroup( var_0 );
    return tv_station_fastrope_one_infil_start_targetname_array( var_1, var_0 ) || tv_station_fastrope_one_infil_start_targetname_array_index( var_1, var_0 );
}

iscacmeleeweapon( var_0 )
{
    var_1 = getweapongroup( var_0 );
    return var_1 == "_encstr_89CC0DEF5390821F904662EA487D4F" || var_1 == "_encstr_8A200EAF49963790881958AA3D0BB563";
}

enableweaponlaser()
{
    if ( !isdefined( self.weaponlasercalls ) )
        self.weaponlasercalls = 0;

    self.weaponlasercalls++;
    self laseron();
}

disableweaponlaser()
{
    self.weaponlasercalls--;

    if ( self.weaponlasercalls == 0 )
    {
        self laseroff();
        self.weaponlasercalls = undefined;
    }
}

attachmentmap_tounique( var_0, var_1 )
{
    var_2 = undefined;

    if ( issameweapon( var_1 ) )
        var_2 = createheadicon( var_1 );
    else
        var_2 = var_1;

    var_3 = getweaponrootname( var_1 );

    if ( var_3 != var_2 )
    {
        var_4 = getweaponbasename( var_1 );

        if ( isdefined( var_4 ) )
        {
            if ( isdefined( level.attachmentmap_basetounique[var_4] ) && isdefined( level.attachmentmap_uniquetobase[var_0] ) && isdefined( level.attachmentmap_basetounique[var_4][level.attachmentmap_uniquetobase[var_0]] ) )
            {
                var_5 = level.attachmentmap_uniquetobase[var_0];
                return level.attachmentmap_basetounique[var_4][var_5];
            }
            else if ( isdefined( level.attachmentmap_basetounique[var_4] ) && isdefined( level.attachmentmap_basetounique[var_4][var_0] ) )
                return level.attachmentmap_basetounique[var_4][var_0];
            else
            {
                var_6 = strtok( var_4, "_encstr_984C028E" );

                if ( var_6.size > 3 )
                {
                    var_7 = var_6[0] + "_encstr_984C028E" + var_6[1] + "_encstr_984C028E" + var_6[2];

                    if ( isdefined( level.attachmentmap_basetounique[var_7] ) && isdefined( level.attachmentmap_basetounique[var_7][var_0] ) )
                        return level.attachmentmap_basetounique[var_7][var_0];
                }
            }
        }
    }

    if ( isdefined( level.attachmentmap_basetounique[var_3] ) && isdefined( level.attachmentmap_basetounique[var_3][var_0] ) )
        return level.attachmentmap_basetounique[var_3][var_0];
    else
    {
        var_8 = weapongroupmap( var_3 );

        if ( isdefined( level.attachmentmap_basetounique[var_8] ) && isdefined( level.attachmentmap_basetounique[var_8][var_0] ) )
            return level.attachmentmap_basetounique[var_8][var_0];
    }

    return var_0;
}

attachmentmap_extratovariantid( var_0, var_1, var_2 )
{
    var_3 = var_1 + "_encstr_B64C02F0" + var_2;

    if ( isdefined( level.weaponlootmapdata[var_3] ) && isdefined( level.weaponlootmapdata[var_3].attachextratoidmap ) && isdefined( level.weaponlootmapdata[var_3].attachextratoidmap[var_0] ) )
        return level.weaponlootmapdata[var_3].attachextratoidmap[var_0];

    return 0;
}

attachmentperkmap( var_0 )
{
    if ( isdefined( level.attachmentmap_attachtoperk[var_0] ) )
        return level.attachmentmap_attachtoperk[var_0];

    return undefined;
}

carryiteminfo( var_0 )
{
    if ( isdefined( level.carrier_remove_carriable_weapon[var_0] ) )
        return level.carrier_remove_carriable_weapon[var_0];

    return undefined;
}

carryitemomnvar( var_0 )
{
    if ( isdefined( level.carryobjects_onjuggernaut[var_0] ) )
        return level.carryobjects_onjuggernaut[var_0];

    var_1 = attachmentmap_tobase( var_0 );

    if ( isdefined( level.carry_ref[var_1] ) )
        return level.carry_ref[var_1];

    return undefined;
}

weaponassetnamemap( var_0, var_1 )
{
    if ( iskillstreakweapon( var_0 ) )
        return var_0;

    if ( isdefined( var_1 ) )
    {
        var_2 = var_0 + "_encstr_B64C02F0" + var_1;

        if ( isdefined( level.weaponlootmapdata[var_2] ) && isdefined( level.weaponlootmapdata[var_2].assetoverridename ) )
            return level.weaponlootmapdata[var_2].assetoverridename;
    }

    if ( isdefined( level.weaponmapdata[var_0] ) && isdefined( level.weaponmapdata[var_0].assetname ) )
        return level.weaponmapdata[var_0].assetname;

    return var_0;
}

weaponperkmap( var_0 )
{
    if ( isdefined( level.weaponmapdata[var_0] ) && isdefined( level.weaponmapdata[var_0].perk ) )
        return level.weaponmapdata[var_0].perk;

    return undefined;
}

risktokens( var_0 )
{
    var_1 = randomintrange( 0, level._id_14589[var_0].size );
    return level._id_14589[var_0][var_1];
}

weapongroupmap( var_0 )
{
    if ( isdefined( level.weaponmapdata[var_0] ) && isdefined( level.weaponmapdata[var_0].group ) )
        return level.weaponmapdata[var_0].group;

    return undefined;
}

_id_14594( var_0 )
{
    if ( isdefined( level.weaponmapdata[var_0] ) && isdefined( level.weaponmapdata[var_0]._id_11BD1 ) )
        return level.weaponmapdata[var_0]._id_11BD1;

    return undefined;
}

weaponnumbermap( var_0 )
{
    if ( isdefined( level.weaponmapdata[var_0] ) && isdefined( level.weaponmapdata[var_0].number ) )
        return level.weaponmapdata[var_0].number;

    return undefined;
}

weaponattachdefaulttoidmap( var_0, var_1 )
{
    if ( isdefined( var_1 ) )
    {
        var_2 = var_0 + "_encstr_B64C02F0" + var_1;

        if ( isdefined( level.weaponlootmapdata[var_2] ) && isdefined( level.weaponlootmapdata[var_2].attachdefaulttoidmap ) )
            return level.weaponlootmapdata[var_2].attachdefaulttoidmap;
    }

    if ( isdefined( level.weaponmapdata[var_0] ) && isdefined( level.weaponmapdata[var_0].attachdefaulttoidmap ) )
        return level.weaponmapdata[var_0].attachdefaulttoidmap;

    return undefined;
}

weaponattachcustomtoidmap( var_0, var_1 )
{
    if ( isdefined( var_1 ) && var_1 >= 0 )
    {
        var_2 = var_0 + "_encstr_B64C02F0" + var_1;

        if ( isdefined( level.weaponlootmapdata[var_2] ) && isdefined( level.weaponlootmapdata[var_2].attachcustomtoidmap ) )
            return level.weaponlootmapdata[var_2].attachcustomtoidmap;
    }

    return undefined;
}

safedestroy( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = [];

    var_2 = 1;
    var_3 = [];

    for (;;)
    {
        var_4 = var_0 + "_encstr_B64C02F0" + var_2;

        if ( !isdefined( level.weaponlootmapdata[var_4] ) )
            break;

        if ( !level.weaponlootmapdata[var_4].update_focus_fire_objective && !scripts\engine\utility::array_contains( var_1, var_2 ) )
            var_3[var_3.size] = var_2;

        var_2++;
    }

    return var_3;
}

runspawnmodule_isolated( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = [];

    var_2 = 0;
    var_3 = safedestroy( var_0, var_1 );

    if ( var_3.size > 0 )
        var_2 = var_3[randomint( var_3.size )];

    return var_2;
}

weaponexistsinstatstable( var_0 )
{
    return isdefined( level.weaponmapdata[var_0] );
}

_id_1458C( var_0, var_1 )
{
    var_2 = weaponexistsinstatstable( var_0 );
    var_3 = 1;

    if ( var_2 )
    {
        if ( isdefined( isdefined( var_1 ) ) && var_1 > 0 )
        {
            var_4 = var_0 + "_encstr_B64C02F0" + var_1;
            var_3 = isdefined( level.weaponlootmapdata[var_4] ) && !level.weaponlootmapdata[var_4].update_focus_fire_objective;
        }
    }

    return var_2 && var_3;
}

weaponattachremoveextraattachments( var_0, var_1 )
{
    var_2 = [];

    foreach ( var_4 in var_0 )
    {
        var_5 = attachmentmap_tounique( var_4, var_1 );
        var_6 = attachmentmap_toextra( var_5 );

        if ( isdefined( var_6 ) )
            var_2[var_2.size] = var_6;
    }

    var_8 = [];

    foreach ( var_4 in var_0 )
    {
        var_10 = 0;

        foreach ( var_6 in var_2 )
        {
            if ( var_4 == var_6 )
            {
                var_10 = 1;
                break;
            }
        }

        if ( !var_10 )
            var_8[var_8.size] = var_4;
    }

    return var_8;
}

isattachmentsniperscopedefault( var_0, var_1 )
{
    var_2 = strtok( var_0, "_encstr_984C028E" );
    return isattachmentsniperscopedefaulttokenized( var_2, var_1 );
}

isattachmentsniperscopedefaulttokenized( var_0, var_1 )
{
    var_2 = 0;

    if ( var_0.size && isdefined( var_1 ) )
    {
        var_3 = 0;

        if ( var_0[0] == "_encstr_A4190459B2A3" )
            var_3 = 1;

        if ( var_0.size >= 3 + var_3 && ( var_0[var_3] == "_encstr_BE1904B4771B" || var_0[var_3] == "_encstr_9F1904A8F35E" ) )
        {
            if ( weaponclass( var_0[var_3] + "_encstr_984C028E" + var_0[var_3 + 1] + "_encstr_984C028E" + var_0[var_3 + 2] ) == "_encstr_B6070748328C39712B" )
                var_2 = var_0[var_3 + 1] + "_encstr_BDFB06E61BBD1C59" == var_1;
        }
    }

    return var_2;
}

getweaponattachmentsbasenames( var_0 )
{
    if ( isstring( var_0 ) )
    {
        if ( var_0 == "_encstr_AABA05236DC831" )
            return [];
    }
    else if ( var_0.basename == "_encstr_AABA05236DC831" )
        return [];

    var_1 = getweaponattachments( var_0 );

    if ( !isdefined( var_1 ) )
        return [];

    foreach ( var_4, var_3 in var_1 )
        var_1[var_4] = attachmentmap_tobase( var_3 );

    return var_1;
}

getattachmentbasenames( var_0 )
{
    foreach ( var_3, var_2 in var_0 )
        var_0[var_3] = attachmentmap_tobase( var_2 );

    return var_0;
}

getattachmentlist( var_0, var_1, var_2, var_3 )
{
    var_4 = [];
    var_5 = tablelookupgetnumrows( "_encstr_AF9F1761CA261343BC47A0F01FC558613B366E7967CEDF6B86" );

    for ( var_6 = 0; var_6 < var_5; var_6++ )
    {
        var_7 = tablelookupbyrow( "_encstr_AF9F1761CA261343BC47A0F01FC558613B366E7967CEDF6B86", var_6, 5 );

        if ( var_7 == "_encstr_A40101" )
            continue;

        var_8 = tablelookupbyrow( "_encstr_AF9F1761CA261343BC47A0F01FC558613B366E7967CEDF6B86", var_6, 2 );

        if ( isdefined( var_2 ) && ( var_8 == "_encstr_AABA05236DC831" || var_8 == var_2 ) )
            continue;

        if ( isdefined( var_3 ) && var_8 != var_3 )
            continue;

        if ( var_1 )
        {
            var_9 = tablelookupbyrow( "_encstr_AF9F1761CA261343BC47A0F01FC558613B366E7967CEDF6B86", var_6, 4 );
            var_4[var_4.size] = var_9;
            continue;
        }

        if ( scripts\engine\utility::array_contains( var_4, var_7 ) )
            continue;

        var_4[var_4.size] = var_7;
    }

    return var_4;
}

getnonopticattachmentlistbasenames()
{
    return getattachmentlist( 5, 0, "_encstr_B61F057B6E5158", undefined );
}

getopticattachmentlistbasenames()
{
    if ( isdefined( level.opticattachmentbasenames ) )
        return level.opticattachmentbasenames;

    level.opticattachmentbasenames = getattachmentlist( 5, 0, undefined, "_encstr_B61F057B6E5158" );
    return level.opticattachmentbasenames;
}

attachmentmap_tobase( var_0 )
{
    if ( isdefined( level.attachmentmap_uniquetobase[var_0] ) )
        var_0 = level.attachmentmap_uniquetobase[var_0];

    return var_0;
}

attachmentmap_toextra( var_0 )
{
    var_1 = undefined;

    if ( isdefined( level.attachmentmap_uniquetoextra[var_0] ) )
        var_1 = level.attachmentmap_uniquetoextra[var_0];

    return var_1;
}

mapweapon( var_0, var_1, var_2 )
{
    var_3 = var_0;

    if ( !isdefined( var_0 ) )
        var_3 = isundefinedweapon();

    var_4 = 0;

    if ( var_3.basename != "_encstr_AABA05236DC831" )
    {
        if ( isdefined( var_1 ) && !isplayer( var_1 ) )
        {
            var_5 = getaltmodeweapon( var_0 );

            if ( isdefined( var_5 ) )
            {
                switch ( var_5 )
                {
                    case "_encstr_A3BD07C10B0F7F5556":
                        var_3 = getcompleteweaponname( "_encstr_B94516A690081B23D68FC7E78DE84A4208D85EEF4929ADAB" );
                        break;
                    case "_encstr_8F3708CA308C739E5001":
                        var_3 = getcompleteweaponname( "_encstr_970B114D33923EC8CF4FD30935D9E07D295F19" );
                        break;
                    case "_encstr_813507FFA8B84E0A2F":
                        var_3 = getcompleteweaponname( "_encstr_A31414205AE621AB6BBFED708F3B51D54E6218B9827A" );
                        break;
                    case "_encstr_A6E00D2C2837F69E396E8009D35059":
                        var_3 = getcompleteweaponname( "_encstr_94410C2B9B052323CB8D7A561F82" );
                        break;
                }
            }
        }

        switch ( var_3.basename )
        {
            case "_encstr_9DDA13EB9009312B3066BBAD855E6B024FD081B2D0":
                var_3 = getcompleteweaponname( "_encstr_970F0EE3A041D9E66F48B47B63E1A071" );
                break;
            case "_encstr_B6430BFBA58840B7BF76D80F13":
            case "_encstr_821C13BC2358194F6D10118AD9C6AF0F28E11F3D81":
                var_3 = getcompleteweaponname( "_encstr_A1D81441C7EAF9E38D73631ADBF0BE7A9853CCEF1B50" );
                break;
            case "_encstr_97FC0F53F5B5A13A1368FBC350AACF4A49":
            case "_encstr_887F15A52D733E3FC810882C57B4C8F1EB403DCB7F15E3":
                var_3 = getcompleteweaponname( "_encstr_B2D91198828F3BA81B612527B7C378FEC77A93" );
                break;
            case "_encstr_98DF123BE37BAFB83AC15149ED2089D297B99023":
            case "_encstr_899B18A377D27657C31528492C1AB1DB3CBF584077938B6F6ABA":
                var_3 = getcompleteweaponname( "_encstr_9C0714B33209A4637C0E1298498B170876C22FCEBF23" );
                break;
            case "_encstr_89EA13CB47593A3F1958FB9226E52B3588C34745D9":
                var_3 = isundefinedweapon();
                break;
        }
    }
    else if ( isdefined( var_1 ) )
    {
        if ( isdefined( var_1.objweapon ) )
        {
            var_3 = getcompleteweaponname( var_1.objweapon.basename );
            var_4 = 1;
        }
        else if ( isdefined( var_1.weapon_name ) )
        {
            var_3 = getcompleteweaponname( var_1.weapon_name );
            var_4 = 1;
        }
    }

    if ( var_4 && !istrue( var_2 ) )
        var_3 = mapweapon( var_3, var_1, 1 );

    return var_3;
}

attachmentsfilterforstats( var_0, var_1 )
{
    var_2 = [];

    foreach ( var_4 in var_0 )
    {
        if ( attachmentlogsstats( var_4, var_1 ) )
            var_2[var_2.size] = var_4;
    }

    return var_2;
}

attachmentlogsstats( var_0, var_1 )
{
    if ( attachmentiscosmetic( var_0 ) )
        return 0;

    if ( !carriedpunchcard( var_1, var_0 ) )
        return 0;

    if ( scripts\engine\utility::string_starts_with( var_0, "_encstr_AA4F0B19761BC14B549F60287F" ) )
        return 0;

    return 1;
}

weaponhasattachment( var_0, var_1 )
{
    var_2 = getweaponattachmentsbasenames( var_0 );

    foreach ( var_4 in var_2 )
    {
        if ( var_4 == var_1 )
            return 1;
    }

    return 0;
}

setrecoilscale( var_0, var_1 )
{
    if ( !isdefined( var_0 ) )
        var_0 = 0;

    if ( !isdefined( self.recoilscale ) )
        self.recoilscale = var_0;
    else
        self.recoilscale = self.recoilscale + var_0;

    if ( isdefined( var_1 ) )
    {
        if ( isdefined( self.recoilscale ) && var_1 < self.recoilscale )
            var_1 = self.recoilscale;

        var_2 = 100 - var_1;
    }
    else
        var_2 = 100 - self.recoilscale;

    var_2 = int( clamp( var_2, 0, 255 ) );

    if ( var_2 == 100 )
    {
        self player_recoilscaleoff();
        return;
    }

    self player_recoilscaleon( var_2 );
}

_launchgrenade( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = self launchgrenade( var_0, var_1, var_2, var_3, var_5 );

    if ( !isdefined( var_4 ) )
        var_6.notthrown = 1;
    else
        var_6.notthrown = var_4;

    var_6 setotherent( self );
    return var_6;
}

grenadethrown( var_0 )
{
    return !isdefined( var_0.notthrown ) || !var_0.notthrown;
}

grenadeinpullback()
{
    return !nullweapon( self getheldoffhand() );
}

getgrenadeinpullback()
{
    var_0 = self getheldoffhand();

    if ( isdefined( self.gestureweapon ) && var_0 == asmdevgetallstates( self.gestureweapon ) )
        var_0 = isundefinedweapon();

    return var_0;
}

weaponignoresblastshield( var_0, var_1 )
{
    var_2 = var_0.basename;

    if ( issuperweapon( var_2 ) )
        return 1;

    if ( iskillstreakweapon( var_2 ) )
        return 1;

    switch ( var_2 )
    {
        case "_encstr_BDD3079D0BB9FAB6C1":
        case "_encstr_A31414205AE621AB6BBFED708F3B51D54E6218B9827A":
        case "_encstr_B94516A690081B23D68FC7E78DE84A4208D85EEF4929ADAB":
        case "_encstr_970B114D33923EC8CF4FD30935D9E07D295F19":
        case "_encstr_9DF00DF37BD0E2716F3B8BC7086BBB":
            return 1;
        default:
            return 0;
    }
}

weaponsupportslaserir( var_0 )
{
    switch ( var_0 )
    {
        case "_encstr_BED80DB4BB83AFD6379633CAEBB6E0":
        case "_encstr_BA0817890F22315F5D1EDB92E02DEF347083340CC7E0826BDB":
        case "_encstr_A1081768FF5AFF6F572113F870D85388B1A1C2C2EFA2DBDDFB":
        case "_encstr_B90817A5BB1CAFD6ACF5C9D27BE8DC86D259C691D7DAC167C6":
        case "_encstr_AF0817835B5AA7F32B49F31778307A10C03D2A3BB9418BF4EB":
        case "_encstr_8B0817ABC39FA7B8757790B04F9CB30152EF91A551A281830C":
        case "_encstr_A9081762A3BA57DD6367A3D9983B88436AD1AC2ADF10E2BDD2":
        case "_encstr_B30817621C0F2749C2A94B0425D98A3CDF5FD9093F2F4BB327":
        case "_encstr_ABF5154BEEC1FAB695FAE45ADB1DDC1AA5CA6332D76BC1":
        case "_encstr_B3BD102DEEE0FAD85BD72326B1D63BBEAD0E":
        case "_encstr_AA161CA83FD836034255730CEB4A77FBE2AF5060374A89C90ABEFD18C583":
        case "_encstr_A623119954EA97FD2321729BA06BF7737E3108":
        case "_encstr_9B660D018F3841EE3A23DBEE3639F0":
        case "_encstr_AD13154B237F47589953A8E007A6D05702CB34C4B182A1":
            return 0;
    }

    if ( iskillstreakweapon( var_0 ) )
        return 0;

    var_1 = weaponclass( var_0 );
    return var_1 == "_encstr_B453063D7FBAE9C8" || var_1 == "_encstr_BE0703815F" || var_1 == "_encstr_B6070748328C39712B" || var_1 == "_encstr_BE1904B9D6B3" || var_1 == "_encstr_A91007F0AB1AC9A31A";
}

getweaponnvgattachment( var_0 )
{
    return "_encstr_AD6B08A07643180EAA8B";
}

issinglehitweapon( var_0 )
{
    var_0 = getweaponbasenamescript( var_0 );

    switch ( var_0 )
    {
        case "_encstr_896E10B986D7D885BE07C2B11C4358BEDA38":
        case "_encstr_95D110A3C38FB06729573F234BF297E1452A":
        case "_encstr_B33112379158329111EB86CDC380D9EF862F37B3":
        case "_encstr_A22F110F622EA4DA6F61927ED63B637FF640FB":
        case "_encstr_89BB137823B2E0281E1FF7D5474538B057DB3660BB":
        case "_encstr_A623119954EA97FD2321729BA06BF7737E3108":
        case "_encstr_A96D112BD7424E71F6412840DACA230B87652F":
        case "_encstr_A3521050A3B879B19AEF4F6F17728C31B5FA":
        case "_encstr_AD69112DF308C9012A3F87B5E7B2DD7BD7CDAB":
        case "_encstr_95D8115ADD0EFA1BB0D7AD4BADB299C8BED638":
        case "_encstr_B76D15A8F362D0182E2F81133416E837A79AA1B3196FFF":
        case "_encstr_BE3E15324BBBD7B5B807B4F11D48BF67CC203B7AD6F9A3":
        case "_encstr_AAD0152DEE0EEB3685D7A3C9CDE80BDC8CC2278C7DB683":
            return 1;
        default:
            return 0;
    }
}

attachmentiscosmetic( var_0 )
{
    return isdefined( var_0 ) && scripts\engine\utility::string_starts_with( var_0, "_encstr_BE9105B8527A17" );
}

carriedpunchcard( var_0, var_1 )
{
    var_2 = getweaponrootname( var_0 );
    return carrier_cleanup( var_2, var_1 );
}

carrier_cleanup( var_0, var_1 )
{
    var_2 = level.weaponattachments[var_0];
    return isdefined( var_2 ) && isdefined( var_2[var_1] );
}

_id_12BBB( var_0 )
{
    switch ( var_0 )
    {
        case "_encstr_805E09380F938F5A01EB26":
        case "_encstr_9DF90E8D58E656274C16360B9BB1598C":
        case "_encstr_A1D30BD407DB27324DA87AE2A0":
            var_0 = "_encstr_A1EC06842B70B73B";
            break;
        case "_encstr_971A0889B039DCA51B8C":
        case "_encstr_889A07E5F18BCB8021":
        case "_encstr_ADD30AAB1A200F682F98BA0B":
        case "_encstr_B3D30AA37B405F5D0790939F":
        case "_encstr_AFD30A7308996783599D5A12":
            var_0 = "_encstr_A33E09E64B36B2CDB1B293";
            break;
        case "_encstr_8BF70F99C9A8B11B58B0B0E79A78CF0397":
        case "_encstr_AA4A09E68EF31763BB132A":
        case "_encstr_9EA3082567C3564083EB":
        case "_encstr_9D8B0898B0E4B1EDB9D9":
        case "_encstr_AF9B0789C24EB64B19":
        case "_encstr_A1A51048114617303263D10B8F61C39EAD77":
        case "_encstr_B68E095E364B8F680F93F0":
            var_0 = "_encstr_9D8B0898B0E4B1EDB9D9";
            break;
    }

    return var_0;
}

_id_14584( var_0 )
{
    var_1 = "_encstr_AABA05236DC831";
    var_2 = -1;
    var_3 = getweaponrootname( var_0 );

    if ( isdefined( var_0 ) && !nullweapon( var_0 ) )
    {
        var_1 = weaponclass( var_0 );

        switch ( var_1 )
        {
            case "_encstr_8A94070E2DCD8E7BB1":
                var_2 = 1;
                break;
            case "_encstr_B6070748328C39712B":
                if ( getweapongroup( var_0 ) == "_encstr_A9710B24C527AB77354198A8EB" )
                {
                    if ( var_3 == "_encstr_B12C0E3A43B3CF6AC87FA3B90198A01A" )
                        var_2 = 2;
                    else if ( var_3 == "_encstr_98A5105AEE0E7D9B37AF4EDE6BACB76E1818" )
                        var_2 = 3;
                    else
                        var_2 = 4;
                }
                else if ( var_3 == "_encstr_A9B31220E339B95BB367BDC2BF4E501B68A6E329" || var_3 == "_encstr_9B0D0FF2358FE24AD618CFE3D86811EFF9" )
                    var_2 = 6;
                else
                    var_2 = 5;

                break;
            default:
                var_2 = 0;
        }
    }

    return var_2;
}

isbombsiteweapon( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    var_1 = undefined;

    if ( issameweapon( var_0 ) )
        var_1 = var_0.basename;
    else
        var_1 = var_0;

    switch ( var_1 )
    {
        case "_encstr_9DF00DF37BD0E2716F3B8BC7086BBB":
        case "_encstr_B22C12108D8B47BB1F3AA0D24E8EE8E858AE7863":
            return 1;
    }

    return 0;
}

iskillstreakweapon( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    var_1 = undefined;

    if ( issameweapon( var_0 ) )
        var_1 = var_0.basename;
    else
        var_1 = var_0;

    if ( isdefined( level.killstreakweaponmap ) && isdefined( level.killstreakweaponmap[var_1] ) )
        return 1;

    return 0;
}

unsetreduceregendelayonkills( var_0 )
{
    return isdefined( var_0 ) && isdefined( var_0.vehiclename ) && isdefined( var_0.streakinfo );
}

weaponbypassspawnprotection( var_0 )
{
    var_1 = 1;
    var_2 = undefined;

    if ( issameweapon( var_0 ) )
        var_2 = var_0.basename;
    else
        var_2 = var_0;

    if ( iskillstreakweapon( var_0 ) && var_2 != "_encstr_B49E11E04B3E3B0B70DF2B8D3E2D1FCB59AD88" && var_2 != "_encstr_B8C015E3F7CF776B6DD38B0391D6551D4ACE31CB3932F0" && !update_health_on_spawn( var_2 ) )
        var_1 = 0;

    return var_1;
}

isvehicleweapon( var_0 )
{
    var_1 = undefined;

    if ( issameweapon( var_0 ) )
        var_1 = var_0.basename;
    else
        var_1 = var_0;

    switch ( var_1 )
    {
        case "_encstr_A10416EEC3986BA89B870B68A878F31D4190AB9798A0B060":
        case "_encstr_B7A5197B3302D882FBB597DF1FEB280A8E5FD53029A57B1BB33FDC":
        case "_encstr_B71712B4952EF1AC8B78499FE155C74DDE4168D0":
        case "_encstr_8CCF0CCA8FEFD6752BB37026C2CB":
        case "_encstr_8BE517231BD6198F48100116E928C0522637CFABE77F225390":
        case "_encstr_ADC214F8138738F19C653311B706D8FE7B5AF166AAAB":
        case "_encstr_B4BD0D12EB555339A0336578AF703A":
        case "_encstr_93C50EF08514185E5A97BF591F612928":
        case "_encstr_A9FA12D4E32DA1231577D1A3D3D9767AFF4E9BFB":
        case "_encstr_94E107C86AE53F284B":
        case "_encstr_A6301177E849978B3567453AD7272364F640FB":
        case "_encstr_976F08D4FD9B5307F0E0":
        case "_encstr_896C10382DD8D6D5E0F5E8C95D1BDABEDA38":
        case "_encstr_8FBF13AC9940470187E3D333EE0FA0B2A2282683C0":
        case "_encstr_9BAA0DF5B15F3E3D0583C060095DF1":
        case "_encstr_9F8912D3D9033FF09113430D0EAB013FF70FEFE7":
        case "_encstr_8A7B0DCD9D77F0DD5C3A1878D175D9":
        case "_encstr_BE261081EFA26FF819B1E33B23EBC8307A7B":
        case "_encstr_A2BA0A50850FE05DFB0FA361":
        case "_encstr_B8F60B30F7A8565631B0108250":
        case "_encstr_9FB90B3F590641C2ABCB49CD83":
        case "_encstr_8BC20F870B4377E2A725BA738697B9356B":
        case "_encstr_9BA707CE1BC39E9D3F":
        case "_encstr_937E0D942BC0E4D33D21F2AACE99FB":
        case "_encstr_A84016F5ED8DE7CFA8CD71C813F19077AFA377C5D7B2DAC2":
        case "_encstr_B6B113E85DE4F5B3BADCF54CA3BE6B07EB13B7B526":
        case "_encstr_81A00EB8CF6AFEDF5B9D50C6F31103C3":
        case "_encstr_BD210F0B8F2BAFA3521E311DD50BB6AD11":
        case "_encstr_80E90F362DE8A3D8CAD726969391FA6B83":
        case "_encstr_B1BE1CD15DE4EBEC5DDCEBB12DD1471BCAAF13B427917D1BAC9947EBAD83":
        case "_encstr_A6651DBBC0232F02934851952349EBD469296B579099771B83D4648BAF13E3":
        case "_encstr_BAC319EB0396CF6F101D97A01B28F547B799D1730BEDE7A46973B0":
        case "_encstr_BA2617A3BA4ED776AEE6FA6C164E9DDEEB1D93BAC65BFADA83":
        case "_encstr_955F1426E4C2C8D82B977D477BDDD7C14EB753D7DA1C":
        case "_encstr_B2D91198828F3BA81B612527B7C378FEC77A93":
            return 1;
        default:
            return 0;
    }
}

isgesture( var_0 )
{
    var_1 = undefined;

    if ( issameweapon( var_0 ) )
        var_1 = var_0.basename;
    else
        var_1 = var_0;

    if ( issubstr( var_1, "_encstr_A89F0907ABF8B1AB595A5B" ) )
        return 1;
    else if ( issubstr( var_1, "_encstr_BA550E77C1D801A26B879BF3A798FA50" ) )
        return 1;
    else
        return 0;
}

getweaponfullname( var_0 )
{
    if ( isstring( var_0 ) )
        return var_0;
    else
        return createheadicon( var_0 );
}

playdeatomizefx( var_0, var_1 )
{
    var_2[0][0]["_encstr_A21904575399"] = self gettagorigin( "_encstr_B23B0D92F89BF1F805A258730F796E" );
    var_2[0][0]["_encstr_9B6107C2DC3B63B2E6"] = self gettagangles( "_encstr_B23B0D92F89BF1F805A258730F796E" );
    var_2[0][1]["_encstr_A21904575399"] = self gettagorigin( "_encstr_82890D35F5B90EA5CD95B1DEEEAC93" );
    var_2[0][1]["_encstr_9B6107C2DC3B63B2E6"] = self gettagangles( "_encstr_82890D35F5B90EA5CD95B1DEEEAC93" );
    var_2[0][2]["_encstr_A21904575399"] = self gettagorigin( "_encstr_87DA078B11C012A35F" );
    var_2[0][2]["_encstr_9B6107C2DC3B63B2E6"] = self gettagangles( "_encstr_87DA078B11C012A35F" );
    var_2[1][0]["_encstr_A21904575399"] = self gettagorigin( "_encstr_B7500A35F5B53756B2AFC9B4" );
    var_2[1][0]["_encstr_9B6107C2DC3B63B2E6"] = self gettagangles( "_encstr_B7500A35F5B53756B2AFC9B4" );
    var_2[1][1]["_encstr_A21904575399"] = self gettagorigin( "_encstr_B9500ADADFD8262B6F97522D" );
    var_2[1][1]["_encstr_9B6107C2DC3B63B2E6"] = self gettagangles( "_encstr_B9500ADADFD8262B6F97522D" );
    var_2[1][2]["_encstr_A21904575399"] = self gettagorigin( "_encstr_9B8B0B2AF845D9C1FF7357E2D3" );
    var_2[1][2]["_encstr_9B6107C2DC3B63B2E6"] = self gettagangles( "_encstr_9B8B0B2AF845D9C1FF7357E2D3" );
    var_2[1][3]["_encstr_A21904575399"] = self gettagorigin( "_encstr_8A8B0BA6FA56B126EDEEAFD8CA" );
    var_2[1][3]["_encstr_9B6107C2DC3B63B2E6"] = self gettagangles( "_encstr_8A8B0BA6FA56B126EDEEAFD8CA" );
    var_2[2][0]["_encstr_A21904575399"] = self gettagorigin( "_encstr_A9D50B48E946FD489B5598092D" );
    var_2[2][0]["_encstr_9B6107C2DC3B63B2E6"] = self gettagangles( "_encstr_A9D50B48E946FD489B5598092D" );
    var_2[2][1]["_encstr_A21904575399"] = self gettagorigin( "_encstr_82D50BD4AF2C9BD663567DE4B4" );
    var_2[2][1]["_encstr_9B6107C2DC3B63B2E6"] = self gettagangles( "_encstr_82D50BD4AF2C9BD663567DE4B4" );
    var_2[2][2]["_encstr_A21904575399"] = self gettagorigin( "_encstr_A9190B4D7DEE39A537D1D7B12B" );
    var_2[2][2]["_encstr_9B6107C2DC3B63B2E6"] = self gettagangles( "_encstr_A9190B4D7DEE39A537D1D7B12B" );
    var_2[2][3]["_encstr_A21904575399"] = self gettagorigin( "_encstr_82190BA2777052776E5311CBD8" );
    var_2[2][3]["_encstr_9B6107C2DC3B63B2E6"] = self gettagangles( "_encstr_82190BA2777052776E5311CBD8" );
    var_3 = "_encstr_A6CF1BC24BD15BB75047617CCF707CDB8D03A9FAD0B7276E685F9660EF";
    var_4 = ( 0, 0, 0 );

    if ( isdefined( var_1 ) )
        var_4 = var_1;

    if ( isdefined( var_0 ) )
        var_3 = var_0;

    self playsound( var_3 );

    foreach ( var_6 in var_2 )
    {
        foreach ( var_8 in var_6 )
            playfx( level._effect["_encstr_A3560DA098B059FF9A9DD1425FB1E9"], var_8["_encstr_A21904575399"] + var_4, anglestoforward( var_8["_encstr_9B6107C2DC3B63B2E6"] ) );

        wait 0.01;
    }
}

isprimaryweapon( var_0 )
{
    if ( nullweapon( var_0 ) )
        return 0;

    if ( var_0.inventorytype != "_encstr_987F080E394BDAC2E45E" && var_0.inventorytype != "_encstr_A4DC0819F2E399503F45" )
        return 0;

    switch ( var_0.classname )
    {
        case "_encstr_BE1904B9D6B3":
        case "_encstr_8A94070E2DCD8E7BB1":
        case "_encstr_B6070748328C39712B":
        case "_encstr_A91007F0AB1AC9A31A":
        case "_encstr_BE0703815F":
        case "_encstr_B453063D7FBAE9C8":
        case "_encstr_98080F93DBB1B556D11B85ABB936D059E4":
            return 1;
        default:
            return 0;
    }
}

update_health_bar_to_player( var_0 )
{
    if ( issameweapon( var_0 ) )
        var_1 = var_0.basename;
    else
        var_1 = var_0;

    return var_1 == "_encstr_A6BB11E88FA23FAA7BCCC6D996433B6249AD7B" || var_1 == "_encstr_A6BB11E88FA23FAA7BCCC6D996433B6249AD7B" || var_1 == "_encstr_952020890F22313BDBBB0A732020BFF4489B3E0DC7B8C47B7536225AA88DCFA1F851" || var_1 == "_encstr_B3C2244B471F30A3C03258539CBEE05212A7DDEB4F126140E38BE3E806A7789D8AFF43177FEB" || var_1 == "_encstr_A90A2162A3BA579B794A72C7A87828C21A50A63ADF316283056BC16D6FF1D31DF12D48";
}

isknifeonly( var_0 )
{
    return getweaponrootname( var_0 ) == "_encstr_8F610A500B9AD828F501AD93";
}

ismeleeonly( var_0 )
{
    if ( isstring( var_0 ) )
    {

    }

    return var_0.ismelee;
}

isfistsonly( var_0 )
{
    return getweaponrootname( var_0 ) == "_encstr_9BED0AA307609154C76BDB23";
}

isballweapon( var_0 )
{
    return var_0.basename == "_encstr_886A100B633F07D9C923880807E573CFB24A" || var_0.basename == "_encstr_A9781094237297838D732B2363A14ADF186B";
}

isaxeweapon( var_0 )
{
    var_1 = getweaponrootname( var_0 );
    return var_1 == "_encstr_828608B4779BEB850F95" || var_1 == "_encstr_9D290ED3B39FA87539771F2B2B624E50" || var_1 == "_encstr_A2890A3B8BA0A74FE1E35055";
}

validatefuelstability( var_0, var_1 )
{
    return isaxeweapon( var_0 ) && isdefined( var_1.classname ) && var_1.classname == "_encstr_A28D080FA2D39DC7FAFA";
}

turret_aimed_at_last_known( var_0 )
{
    return getweaponrootname( var_0 ) == "_encstr_95BD134ABFAAFFF5C56FE24013B54EA75683232878" || getweaponrootname( var_0 ) == "_encstr_AD031470E738DEEB7AF1AFA254D23DED8263C89037E3";
}

isthrowingknife( var_0 )
{
    var_1 = undefined;

    if ( issameweapon( var_0 ) )
    {
        if ( nullweapon( var_0 ) )
            return 0;

        var_1 = var_0.basename;
    }
    else
    {
        if ( var_0 == "_encstr_AABA05236DC831" )
            return 0;

        var_1 = var_0;
    }

    return issubstr( var_1, "_encstr_9F590E3578DBF8F744C21068DA1C9DF1" );
}

isspecialmeleeweapon( var_0 )
{
    if ( update_health_bar_to_player( var_0 ) )
        return 1;

    var_1 = undefined;

    if ( issameweapon( var_0 ) )
    {
        if ( nullweapon( var_0 ) )
            return 0;

        var_1 = var_0.basename;
    }
    else
    {
        if ( var_0 == "_encstr_AABA05236DC831" )
            return 0;

        var_1 = var_0;
    }

    return var_1 == "_encstr_AF9310234B172F41E14FD8E8170D5BF7FAF2";
}

unset_relic_mythic( var_0 )
{
    var_1 = undefined;

    if ( issameweapon( var_0 ) )
    {
        if ( nullweapon( var_0 ) )
            return 0;

        var_1 = var_0.basename;
    }
    else
    {
        if ( var_0 == "_encstr_AABA05236DC831" )
            return 0;

        var_1 = var_0;
    }

    return var_1 == "_encstr_BC0D0C2DBB0E7D9DAE9BC6AC6EB9" || var_1 == "_encstr_B42A12B25FEB60776776B1F0928F571340CC2F63" || var_1 == "_encstr_A4FE1D20B7508EAF0BCD79F5E203979071CF50191FB48145C2B9E5083B5A15";
}

update_health_on_spawn( var_0 )
{
    var_1 = undefined;

    if ( issameweapon( var_0 ) )
    {
        if ( nullweapon( var_0 ) )
            return 0;

        var_1 = var_0.basename;
    }
    else
    {
        if ( var_0 == "_encstr_AABA05236DC831" )
            return 0;

        var_1 = var_0;
    }

    return var_1 == "_encstr_AD13154B237F47589953A8E007A6D05702CB34C4B182A1" || var_1 == "_encstr_AA161CA83FD836034255730CEB4A77FBE2AF5060374A89C90ABEFD18C583" || var_1 == "_encstr_B3BD102DEEE0FAD85BD72326B1D63BBEAD0E";
}

unset_jugg_ignoreall_after_notify( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    var_1 = undefined;

    if ( issameweapon( var_0 ) )
    {
        if ( nullweapon( var_0 ) )
            return 0;

        var_1 = var_0.basename;
    }
    else
    {
        if ( var_0 == "_encstr_AABA05236DC831" )
            return 0;

        var_1 = var_0;
    }

    return var_1 == "_encstr_8CC219546B90319260881BB1FD506FE8E046FCB623DD486B79D23B";
}

infiniteammothread( var_0, var_1 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_B2A91ADCD1F6C1AFB4CD994BDC968EB2F516D6B5EDBEE8864ECA8532" );

    if ( !isdefined( var_0 ) )
        var_0 = level.framedurationseconds;

    for (;;)
    {
        if ( !isdefined( var_1 ) )
            var_1 = self.equippedweapons;

        foreach ( var_3 in var_1 )
        {
            self givemaxammo( var_3 );
            self setweaponammoclip( var_3, weaponclipsize( var_3 ) );
        }

        wait( var_0 );
    }
}

stopinfiniteammothread()
{
    self notify( "_encstr_B2A91ADCD1F6C1AFB4CD994BDC968EB2F516D6B5EDBEE8864ECA8532" );
}

russianletter( var_0 )
{
    if ( isdefined( level.br_pickups ) && isdefined( level.br_pickups.br_weapontoscriptable ) && isdefined( level.br_pickups.delay_hide_player_clip ) )
    {
        var_1 = createheadicon( var_0 );
        var_2 = level.br_pickups.br_weapontoscriptable[var_1];

        if ( isdefined( var_2 ) )
            return level.br_pickups.delay_hide_player_clip[var_2];
    }

    var_3 = scripts\mp\loot::getlootinfoforweapon( var_0.basename, var_0.variantid );

    if ( isdefined( var_3 ) )
        return var_3.quality;

    return undefined;
}

safe_to_authenticate( var_0 )
{
    if ( isdefined( level.br_pickups ) && isdefined( level.br_pickups.br_weapontoscriptable ) && isdefined( level.br_pickups.delay_hide_player_clip ) )
    {
        var_1 = createheadicon( var_0 );
        var_2 = level.br_pickups.br_weapontoscriptable[var_1];

        if ( isdefined( var_2 ) )
            return level.br_pickups.delay_hide_player_clip[var_2];
    }

    return undefined;
}

unset_relic_damage_from_above( var_0 )
{
    var_1 = undefined;

    if ( issameweapon( var_0 ) )
        var_1 = getweaponbasename( var_0 );
    else
        var_1 = var_0;

    switch ( var_1 )
    {
        case "_encstr_A8ED1BDD5FA0DFDF8057A0481AAE170447AD3AA02F4FDEB36839CF1987":
        case "_encstr_8FE016E09A157BB92BFF9D15CA0B61313192601892E19353":
        case "_encstr_88781E0DA3103BEF599E3BD3C3AE37B34105B4892FF145F3E850E2FAA886676F":
            return 1;
        default:
            return 0;
    }
}
