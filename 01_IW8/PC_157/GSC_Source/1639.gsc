// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

initfx()
{
    if ( !scripts\engine\utility::add_init_script( "_encstr_8107034D63", ::initfx ) )
        return;

    scripts\engine\utility::set_createfx_enabled();

    if ( isplatformconsole() )
        level.createfxent = [];

    scripts\engine\utility::create_func_ref( "_encstr_A32211B19395583A56FAA3272DD9B3CA9CCC0F", ::create_triggerfx );
    thread init_fx_thread();
    script_struct_fx_init();
}

init_fx_thread()
{
    if ( !isdefined( level._fx ) )
        level._fx = spawnstruct();

    scripts\engine\utility::create_lock( "_encstr_A67610D8275985E82B6687FA1BDEEDC19539", 20 );
    level._fx.fireloopmod = 1;
    level._fx.exploderfunction = scripts\common\exploder::exploder_before_load;
    waittillframeend;
    waittillframeend;
    level._fx.exploderfunction = scripts\common\exploder::exploder_after_load;
    level._fx.server_culled_sounds = 0;

    if ( getdvarint( "_encstr_9D080B857247E9AF8C69B7BB81" ) == 1 )
        level._fx.server_culled_sounds = 1;

    if ( level.createfx_enabled )
        level._fx.server_culled_sounds = 0;

    if ( level.createfx_enabled )
        level waittill( "_encstr_A9B815D827CA0B3ACACCE1F58DB7B6DAB7B9D732DEB9AC" );

    level.createfxexploders = [];
    var_0 = [];

    foreach ( var_2 in level.createfxent )
    {
        var_2 scripts\common\createfx::set_forward_and_up_vectors();

        switch ( var_2.v["_encstr_B2EF05735862FD"] )
        {
            case "_encstr_BE7F07BB70E06072E9":
                var_2 thread loopfxthread();
                break;
            case "_encstr_95480A801AA7E708B7642423":
                var_2 thread oneshotfxthread();
                break;
            case "_encstr_AF540837F65DDC19330F":
                var_2 thread create_loopsound();
                break;
            case "_encstr_8A4D11CDB7D5DC8C991EEB4BDCA3B2E4EC581B":
                var_2 thread create_interval_sound();
                break;
            case "_encstr_93510C2E7D9F71C97C4B18C12250":
                var_2 add_reactive_fx();
                break;
        }

        if ( isdefined( var_2.v["_encstr_A83B096D98236837F7A268"] ) )
        {
            scripts\common\createfx::add_exploder( var_2.v["_encstr_A83B096D98236837F7A268"], var_2 );

            if ( isdefined( var_2.v["_encstr_8B7905BF04379F"] ) && var_2.v["_encstr_8B7905BF04379F"] != "_encstr_9819045BA868" )
            {
                var_3 = var_0[var_2.v["_encstr_8B7905BF04379F"]];

                if ( !isdefined( var_3 ) )
                    var_3 = [];

                var_3[var_3.size] = var_2.v["_encstr_A83B096D98236837F7A268"];
                var_0[var_2.v["_encstr_8B7905BF04379F"]] = var_3;
            }
        }
    }

    foreach ( var_7, var_6 in var_0 )
        thread scripts\common\exploder::exploder_flag_wait( var_7, var_6 );

    check_createfx_limit();
}

remove_dupes()
{

}

offset_fix()
{

}

check_createfx_limit()
{

}

check_limit_type( var_0, var_1 )
{

}

print_org( var_0, var_1, var_2, var_3 )
{
    if ( getdvar( "_encstr_BA750691954CEA76" ) == "_encstr_AF4C02EA" )
        return;
}

loopfx( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_7 = scripts\engine\utility::createloopeffect( var_0 );
    var_7.v["_encstr_88FE07B07AAFE1C38D"] = var_1;
    var_7.v["_encstr_9B6107C2DC3B63B2E6"] = ( 0, 0, 0 );

    if ( isdefined( var_3 ) )
        var_7.v["_encstr_9B6107C2DC3B63B2E6"] = vectortoangles( var_3 - var_1 );

    var_7.v["_encstr_B4750667CD5992F1"] = var_2;
}

create_looper()
{
    self.looper = playloopedfx( level._effect[self.v["_encstr_9E780599F09619"]], self.v["_encstr_B4750667CD5992F1"], self.v["_encstr_88FE07B07AAFE1C38D"], 0, self.v["_encstr_A42E08DEC88B5BE9CD38"], self.v["_encstr_8F070350FB"] );
    create_loopsound();
}

create_loopsound()
{
    self notify( "_encstr_AA2D0A633B2078D1DDAFB7DA" );

    if ( !isdefined( self.v["_encstr_8A760B9BF6BADC46856396859B"] ) )
        return;

    if ( self.v["_encstr_8A760B9BF6BADC46856396859B"] == "_encstr_9819045BA868" )
        return;

    var_0 = 0;
    var_1 = undefined;

    if ( isdefined( self.v["_encstr_AD8909FF6CCD90BF83C251"] ) && self.v["_encstr_AD8909FF6CCD90BF83C251"] )
    {
        if ( isdefined( self.looper ) )
            var_1 = "_encstr_A3750609A5E61883";
        else
            var_1 = "_encstr_AA2D0A633B2078D1DDAFB7DA";
    }
    else if ( level._fx.server_culled_sounds && isdefined( self.v["_encstr_8B9F0E03DD23B33F85A1621B20E177B3"] ) )
        var_0 = self.v["_encstr_8B9F0E03DD23B33F85A1621B20E177B3"];

    var_2 = self;

    if ( isdefined( self.looper ) )
        var_2 = self.looper;

    var_3 = undefined;

    if ( level.createfx_enabled )
        var_3 = self;

    var_2 scripts\engine\utility::loop_fx_sound_with_angles( self.v["_encstr_8A760B9BF6BADC46856396859B"], self.v["_encstr_88FE07B07AAFE1C38D"], self.v["_encstr_9B6107C2DC3B63B2E6"], var_0, var_1, var_3 );
}

create_interval_sound()
{
    self notify( "_encstr_AA2D0A633B2078D1DDAFB7DA" );

    if ( !isdefined( self.v["_encstr_8A760B9BF6BADC46856396859B"] ) )
        return;

    if ( self.v["_encstr_8A760B9BF6BADC46856396859B"] == "_encstr_9819045BA868" )
        return;

    var_0 = undefined;
    var_1 = self;

    if ( isdefined( self.v["_encstr_AD8909FF6CCD90BF83C251"] ) && self.v["_encstr_AD8909FF6CCD90BF83C251"] || level.createfx_enabled )
    {
        if ( isdefined( self.looper ) )
        {
            var_1 = self.looper;
            var_0 = "_encstr_A3750609A5E61883";
        }
        else
            var_0 = "_encstr_AA2D0A633B2078D1DDAFB7DA";
    }

    var_1 thread scripts\engine\utility::loop_fx_sound_interval_with_angles( self.v["_encstr_8A760B9BF6BADC46856396859B"], self.v["_encstr_88FE07B07AAFE1C38D"], self.v["_encstr_9B6107C2DC3B63B2E6"], var_0, undefined, self.v["_encstr_979A0A81DF8AFF98070548A0"], self.v["_encstr_B19A0A3A372B992856E140CA"] );
}

loopfxthread()
{
    waitframe();

    if ( isdefined( self.fxstart ) )
        level waittill( "_encstr_82B00997A3063B7361F4D3" + self.fxstart );

    for (;;)
    {
        create_looper();

        if ( isdefined( self.timeout ) )
            thread loopfxstop( self.timeout );

        if ( isdefined( self.fxstop ) )
            level waittill( "_encstr_A37A087B53AF370A9F78" + self.fxstop );
        else
            return;

        if ( isdefined( self.looper ) )
            self.looper delete();

        if ( isdefined( self.fxstart ) )
        {
            level waittill( "_encstr_82B00997A3063B7361F4D3" + self.fxstart );
            continue;
        }

        return;
    }
}

loopfxstop( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    wait( var_0 );
    self.looper delete();
}

gunfireloopfx( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    thread gunfireloopfxthread( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 );
}

gunfireloopfxthread( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    level endon( "_encstr_AA44170A5BA8A0CE77190B32672572EE30230755D0506862D3" );
    waitframe();

    if ( var_7 < var_6 )
    {
        var_8 = var_7;
        var_7 = var_6;
        var_6 = var_8;
    }

    var_9 = var_6;
    var_10 = var_7 - var_6;

    if ( var_5 < var_4 )
    {
        var_8 = var_5;
        var_5 = var_4;
        var_4 = var_8;
    }

    var_11 = var_4;
    var_12 = var_5 - var_4;

    if ( var_3 < var_2 )
    {
        var_8 = var_3;
        var_3 = var_2;
        var_2 = var_8;
    }

    var_13 = var_2;
    var_14 = var_3 - var_2;
    var_15 = spawnfx( level._effect[var_0], var_1 );

    if ( !level.createfx_enabled )
        var_15 willneverchange();

    for (;;)
    {
        var_16 = var_13 + randomint( var_14 );

        for ( var_17 = 0; var_17 < var_16; var_17++ )
        {
            triggerfx( var_15 );
            wait( var_11 + randomfloat( var_12 ) );
        }

        wait( var_9 + randomfloat( var_10 ) );
    }
}

create_triggerfx()
{
    if ( !verify_effects_assignment( self.v["_encstr_9E780599F09619"] ) )
        return;

    self.looper = spawnfx( level._effect[self.v["_encstr_9E780599F09619"]], self.v["_encstr_88FE07B07AAFE1C38D"], self.v["_encstr_A42E08DEC88B5BE9CD38"], self.v["_encstr_8F070350FB"] );
    triggerfx( self.looper, self.v["_encstr_B4750667CD5992F1"] );

    if ( !level.createfx_enabled )
        self.looper willneverchange();

    create_loopsound();
}

verify_effects_assignment( var_0 )
{
    if ( isdefined( level._effect[var_0] ) )
        return 1;

    if ( !isdefined( level._missing_fx ) )
        level._missing_fx = [];

    level._missing_fx[self.v["_encstr_9E780599F09619"]] = var_0;
    verify_effects_assignment_print( var_0 );
    return 0;
}

verify_effects_assignment_print( var_0 )
{
    level notify( "_encstr_AD0A20C330534942DB806FA7749B6A1C1B79176F28E8BF0ADBA5B55BF099B3D9CD48" );
    level endon( "_encstr_AD0A20C330534942DB806FA7749B6A1C1B79176F28E8BF0ADBA5B55BF099B3D9CD48" );
    waitframe();
    var_1 = getarraykeys( level._missing_fx );

    foreach ( var_3 in var_1 )
    {

    }
}

oneshotfxthread()
{
    waitframe();

    if ( self.v["_encstr_B4750667CD5992F1"] > 0 )
        wait( self.v["_encstr_B4750667CD5992F1"] );

    [[ level.func["_encstr_A32211B19395583A56FAA3272DD9B3CA9CCC0F"] ]]();
}

add_reactive_fx()
{
    if ( !scripts\common\utility::issp() && getdvar( "_encstr_9BA10B19496B296CDBDBBFB8F8" ) == "_encstr_A40101" )
        return;

    if ( !isdefined( level._fx.reactive_thread ) )
    {
        level._fx.reactive_thread = 1;
        level thread reactive_fx_thread();
    }

    if ( !isdefined( level._fx.reactive_fx_ents ) )
        level._fx.reactive_fx_ents = [];

    level._fx.reactive_fx_ents[level._fx.reactive_fx_ents.size] = self;
    self.next_reactive_time = 3000;
}

reactive_fx_thread()
{
    if ( !scripts\common\utility::issp() )
    {
        if ( getdvar( "_encstr_9BA10B19496B296CDBDBBFB8F8" ) == "_encstr_9707035F3B" )
            scripts\engine\utility::flag_wait( "_encstr_93B1117F155DFA9CC811C819AB18D183AD43EB" );
    }

    level._fx.reactive_sound_ents = [];
    var_0 = 256;

    for (;;)
    {
        level waittill( "_encstr_A6B0120E3FD3FF2F03590A3F72E733F11058EFF3", var_1, var_0, var_2, var_3, var_4 );
        var_5 = sort_reactive_ents( var_2, var_0 );

        foreach ( var_8, var_7 in var_5 )
            var_7 thread play_reactive_fx( var_8, var_4 );
    }
}

vector2d( var_0 )
{
    return ( var_0[0], var_0[1], 0 );
}

sort_reactive_ents( var_0, var_1 )
{
    var_2 = [];
    var_3 = gettime();

    foreach ( var_5 in level._fx.reactive_fx_ents )
    {
        if ( var_5.next_reactive_time > var_3 )
            continue;

        var_6 = var_5.v["_encstr_9554104E590B1BD1A5D92BD79C0BC896EAB9"] + var_1;
        var_6 = var_6 * var_6;

        if ( distancesquared( var_0, var_5.v["_encstr_88FE07B07AAFE1C38D"] ) < var_6 )
            var_2[var_2.size] = var_5;
    }

    foreach ( var_5 in var_2 )
    {
        var_9 = vector2d( var_5.v["_encstr_88FE07B07AAFE1C38D"] - level.player.origin );
        var_10 = vector2d( var_0 - level.player.origin );
        var_11 = vectornormalize( var_9 );
        var_12 = vectornormalize( var_10 );
        var_5.dot = vectordot( var_11, var_12 );
    }

    for ( var_14 = 0; var_14 < var_2.size - 1; var_14++ )
    {
        for ( var_15 = var_14 + 1; var_15 < var_2.size; var_15++ )
        {
            if ( var_2[var_14].dot > var_2[var_15].dot )
            {
                var_16 = var_2[var_14];
                var_2[var_14] = var_2[var_15];
                var_2[var_15] = var_16;
            }
        }
    }

    foreach ( var_5 in var_2 )
    {
        var_5.origin = undefined;
        var_5.dot = undefined;
    }

    for ( var_14 = 4; var_14 < var_2.size; var_14++ )
        var_2[var_14] = undefined;

    return var_2;
}

play_reactive_fx( var_0, var_1 )
{
    if ( self.v["_encstr_9E780599F09619"] != "_encstr_A87306BC82F24CA9" )
        playfx( level._effect[self.v["_encstr_9E780599F09619"]], self.v["_encstr_88FE07B07AAFE1C38D"], self.v["_encstr_A42E08DEC88B5BE9CD38"], self.v["_encstr_8F070350FB"] );

    if ( self.v["_encstr_8A760B9BF6BADC46856396859B"] == "_encstr_9819045BA868" )
        return;

    var_2 = get_reactive_sound_ent();

    if ( !isdefined( var_2 ) )
        return;

    self.next_reactive_time = gettime() + 3000;
    var_2.origin = self.v["_encstr_88FE07B07AAFE1C38D"];
    var_2.is_playing = 1;

    if ( !isdefined( var_1 ) )
        var_1 = 0.0;

    wait( var_0 * randomfloatrange( 0.05, 0.1 ) + var_1 );

    if ( scripts\common\utility::issp() )
    {
        var_2 playsound( self.v["_encstr_8A760B9BF6BADC46856396859B"], "_encstr_9EC70A7812BB35616397C8B5" );
        var_2 waittill( "_encstr_9EC70A7812BB35616397C8B5" );
    }
    else
    {
        var_2 playsound( self.v["_encstr_8A760B9BF6BADC46856396859B"] );
        wait 2;
    }

    wait 0.1;
    var_2.is_playing = 0;
}

get_reactive_sound_ent()
{
    foreach ( var_1 in level._fx.reactive_sound_ents )
    {
        if ( !var_1.is_playing )
            return var_1;
    }

    if ( level._fx.reactive_sound_ents.size < 4 )
    {
        var_1 = spawn( "_encstr_A3050EDF6FF5DC081CC1AFA37097B80B", ( 0, 0, 0 ) );
        var_1.is_playing = 0;
        level._fx.reactive_sound_ents[level._fx.reactive_sound_ents.size] = var_1;
        return var_1;
    }

    return undefined;
}

playfxnophase( var_0, var_1, var_2, var_3 )
{
    playfx( var_0, var_1, var_2, var_3 );
}

script_struct_fx_init()
{
    level.struct_fx = scripts\engine\utility::getstructarray( "_encstr_98980A1731EE83B3682E27A8", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_1 in level.struct_fx )
    {
        if ( !scripts\common\utility::issp() || !isdefined( var_1.script_fxgroup ) )
            play_struct_fx( var_1 );
    }
}

play_struct_fx( var_0 )
{
    if ( isdefined( var_0.script_fxid ) && isdefined( level._effect[var_0.script_fxid] ) )
    {
        if ( !isdefined( var_0.angles ) )
            var_0.angles = ( 0, 0, 0 );

        var_0.fx = spawnfx( level._effect[var_0.script_fxid], var_0.origin, anglestoforward( var_0.angles ), anglestoup( var_0.angles ) );

        if ( isdefined( var_0.script_delay_min ) && isdefined( var_0.script_delay_max ) )
            triggerfx( var_0.fx, randomfloat( var_0.script_delay_min, var_0.script_delay_max ) / 1000 );
        else if ( isdefined( var_0.script_delay ) )
            triggerfx( var_0.fx, var_0.script_delay / 1000 );
        else
            triggerfx( var_0.fx, -0.004 );
    }

    if ( isdefined( var_0.script_soundalias ) )
    {
        var_0.sfx = spawn( "_encstr_A3050EDF6FF5DC081CC1AFA37097B80B", var_0.origin );
        var_0.sfx.angles = var_0.angles;

        if ( soundislooping( var_0.script_soundalias ) )
            var_0.sfx playloopsound( var_0.script_soundalias );
        else
            var_0.sfx playsound( var_0.script_soundalias );
    }
}

stop_struct_fx( var_0 )
{
    var_0.fx delete();

    if ( isdefined( var_0.sfx ) )
        var_0.sfx delete();
}

struct_fx_active( var_0 )
{
    return isdefined( var_0.fx );
}

struct_fx_inactive( var_0 )
{
    return !isdefined( var_0.fx );
}
