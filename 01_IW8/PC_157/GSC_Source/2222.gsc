// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

throwing_knife_init()
{
    level.throwingknifemaxpickups = getdvarfloat( "_encstr_8BC417C710434F53C926FDF3839D3A13A8381B07B958BD3A19", 12 );
    level.throwingknifepickuptimeout = getdvarfloat( "_encstr_B86A199B36937DD10DE4F6BBB437B3A5E6B4992B2AB4ADCADEABE8", 20 );
    [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_8AB70F9B0C6A60A4B293FF87EFAAE35015", "_encstr_80C50550FA44C9" ) ]]();
}

throwing_knife_ongive( var_0, var_1 )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_8AB70F9B0C6A60A4B293FF87EFAAE35015", "_encstr_986F074AC837EC6B01" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_8AB70F9B0C6A60A4B293FF87EFAAE35015", "_encstr_986F074AC837EC6B01" ) ]]( var_0, var_1 );
}

throwing_knife_ontake( var_0, var_1 )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_8AB70F9B0C6A60A4B293FF87EFAAE35015", "_encstr_97CE07B73745B0B52B" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_8AB70F9B0C6A60A4B293FF87EFAAE35015", "_encstr_97CE07B73745B0B52B" ) ]]( var_0, var_1 );
}

throwing_knife_used( var_0 )
{
    var_0 makeunusable();

    if ( !isdefined( var_0.equipmentref ) )
    {
        if ( var_0.weapon_name == "_encstr_B40F16E88627DEDDD2DCCE5BDC4BCCCAEBCC2D392BBE5B0E" )
            var_0.equipmentref = "_encstr_811F1A225BCDDF627961F8EA7F10EC7B7C365A1A202CA79168A3FAC5";
        else if ( var_0.weapon_name == "_encstr_BE851A55744BB78B09E36810FB51E1EBE15FC1550E8355B0EB0F30C0" )
            var_0.equipmentref = "_encstr_A6BF1E6983C8E727BF8BC83B98832BA2CA21CAD08B2527297584877FD10AE16E";
        else
            var_0.equipmentref = "_encstr_9E2115CAB8BAB4077D8E0D93BDBBA5DCECD7B6CD4B99B2";
    }

    var_1 = undefined;
    var_2 = undefined;
    var_3 = self.name;
    var_0 waittill( "_encstr_8AE90E7D08B8538A21DB77CF1155D2B3", var_1, var_2, var_4, var_5, var_6, var_7 );
    var_0.surfacetype = var_4;
    level notify( "_encstr_804020BC6287D8DB0772D118BB5A89B0FB1DB538CC6F83336D7AD9A013374B281388", var_0, "_encstr_89F511713BBB2818C13559D05DB9E85501B7F1", var_3 );
    var_8 = isdefined( var_2 ) && var_2 == "_encstr_806E14ACDEA059DA1DC7BBB7C3C9B2B7A00127723128";
    var_9 = isdefined( var_2 ) && var_2 == "_encstr_89D30B432E37C7DFF96A419D18";
    var_10 = isdefined( var_1 ) && ( isplayer( var_1 ) || isagent( var_1 ) );
    var_11 = var_0.weapon_name == "_encstr_B40F16E88627DEDDD2DCCE5BDC4BCCCAEBCC2D392BBE5B0E";
    var_12 = var_0.weapon_name == "_encstr_BE851A55744BB78B09E36810FB51E1EBE15FC1550E8355B0EB0F30C0";
    var_13 = var_0.weapon_name == "_encstr_89F817DB90A61F7BE06DDFAB1598477F588933B2B871273583";

    if ( var_11 || var_12 || var_13 )
    {
        var_0 setscriptablepartstate( "_encstr_9FED0B9AFFF87AE8D927C3BF8B", "_encstr_B30B07E216CBFFC4C2", 0 );

        if ( isdefined( level._id_132A4 ) && [[ level._id_132A4.make_control_station_interaction ]]( var_0 ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_8AB70F9B0C6A60A4B293FF87EFAAE35015", "_encstr_AFE90D633B21BB1DDF4081FA401352" ) ]]( var_0 );

        if ( var_10 && !var_8 )
        {
            var_0 setscriptablepartstate( "_encstr_9E450DE0D816F25693A45B0785C68E", "_encstr_8F880751B3A741AFDB", 0 );

            if ( !isalive( var_1 ) && var_11 )
            {
                var_14 = relic_healthpacks_killfunc( var_2 );

                if ( isdefined( var_14 ) )
                {
                    var_15 = var_1 getcorpseentity();
                    var_15 setscriptablepartstate( "_encstr_9DB10831AE939B4BB93B", var_14, 0 );
                }
            }
        }
        else
            var_0 setscriptablepartstate( "_encstr_AAA30E305A95DB5BBF43839948C721B1", "_encstr_8F880751B3A741AFDB", 0 );
    }
    else
        var_0 setscriptablepartstate( "_encstr_B7A80D27A865BB910F9A8913023748", "_encstr_B30B07E216CBFFC4C2", 0 );

    var_0 throwing_knife_makepickup();
}

relic_healthpacks_killfunc( var_0 )
{
    switch ( var_0 )
    {
        case "_encstr_BCBB09D879945B182FC59D":
            return "_encstr_B2CC0571402BC0";
        case "_encstr_87DA078B11C012A35F":
            return "_encstr_B2CC0571402BC0";
        case "_encstr_B7AB07159F2590061F":
            return "_encstr_B2CC0571402BC0";
        case "_encstr_B23B0D92F89BF1F805A258730F796E":
            return "_encstr_8F7D06EB40967F6D";
        case "_encstr_82890D35F5B90EA5CD95B1DEEEAC93":
            return "_encstr_8F7D06EB40967F6D";
        case "_encstr_9DB30E35EB9B1A7BD56323B24ED74E96":
            return "_encstr_B384057BE0AB47";
        case "_encstr_AAB30E3A7626037DAB69DCA52D29C57F":
            return "_encstr_9E840502EB7054";
        case "_encstr_9B8B0B2AF845D9C1FF7357E2D3":
            return "_encstr_B384057BE0AB47";
        case "_encstr_8A8B0BA6FA56B126EDEEAFD8CA":
            return "_encstr_9E840502EB7054";
        case "_encstr_82190BA2777052776E5311CBD8":
            return "_encstr_B384057BE0AB47";
        case "_encstr_A9190B4D7DEE39A537D1D7B12B":
            return "_encstr_9E840502EB7054";
        case "_encstr_A6DD0992781498B7F7EAD4":
            return "_encstr_94AD05C695CE4A";
        case "_encstr_A6DD0992781498B7F76DD7":
            return "_encstr_A3AD05C6597698";
        case "_encstr_B7500A35F5B53756B2AFC9B4":
            return "_encstr_94AD05C695CE4A";
        case "_encstr_B9500ADADFD8262B6F97522D":
            return "_encstr_A3AD05C6597698";
        case "_encstr_82D50BD4AF2C9BD663567DE4B4":
            return "_encstr_94AD05C695CE4A";
        case "_encstr_A9D50B48E946FD489B5598092D":
            return "_encstr_A3AD05C6597698";
        default:
            return undefined;
    }
}

throwing_knife_makepickup()
{
    self makeunusable();
    var_0 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", self.origin, 0, 64, 64 );
    var_0.targetname = "_encstr_AAB40E39965F09B07501F182A8FB5015";
    var_0 enablelinkto();
    var_0 linkto( self );
    self.knife_trigger = var_0;

    if ( !isdefined( level.throwingknives ) )
        level.throwingknives = [];

    var_1 = [ self ];

    foreach ( var_3 in level.throwingknives )
    {
        if ( var_1.size >= level.throwingknifemaxpickups )
        {
            if ( isdefined( var_3 ) )
                var_3 throwing_knife_deletepickup();

            continue;
        }

        if ( isdefined( var_3 ) )
            var_1[var_1.size] = var_3;
    }

    level.throwingknives = var_1;
    thread throwing_knife_watchpickup();
    thread throwing_knife_watchpickuptimeout();
}

throwing_knife_watchpickup()
{
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        self.knife_trigger waittill( "_encstr_8B5C081B58E0B7A213E6", var_0 );

        if ( !isplayer( var_0 ) )
            continue;

        if ( !var_0 scripts\cp_mp\utility\player_utility::_isalive() )
            continue;

        if ( !var_0 hasweapon( self.weapon_object ) )
            continue;

        if ( var_0 throwing_knife_trytopickup( self.equipmentref ) )
            thread throwing_knife_deletepickup();
    }
}

throwing_knife_watchpickuptimeout()
{
    self endon( "_encstr_A3750609A5E61883" );
    wait( level.throwingknifepickuptimeout );

    if ( isdefined( self.equipmentref ) && self.equipmentref == "_encstr_811F1A225BCDDF627961F8EA7F10EC7B7C365A1A202CA79168A3FAC5" )
        self playsound( "_encstr_B21D19EECA0B1CBEB6CD5ACCACBE332D4E2BAF4CBA93B9FA95B991" );

    thread throwing_knife_deletepickup();
}

throwing_knife_deletepickup()
{
    if ( isdefined( self.knife_trigger ) )
        self.knife_trigger delete();

    self delete();
}

throwing_knife_trytopickup( var_0 )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_8AB70F9B0C6A60A4B293FF87EFAAE35015", "_encstr_94C10C98CB1B04A048E93BBF4598" ) )
    {
        var_1 = self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_8AB70F9B0C6A60A4B293FF87EFAAE35015", "_encstr_94C10C98CB1B04A048E93BBF4598" ) ]]( var_0 );
        return var_1;
    }

    return 1;
}
