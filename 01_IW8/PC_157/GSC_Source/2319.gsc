// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

trophy_init()
{
    var_0 = spawnstruct();
    var_0.tags = [];
    var_0.tags[0] = "_encstr_8AD10DA30BECD726169CC9AC637D13";
    var_0.tags[1] = "_encstr_A2D10D1DC23BD726C2399C958DEB64";
    var_0.tags[3] = "_encstr_BCD10D9C72B7C762171A966A9A213A";
    var_0.timeout = getdvarfloat( "_encstr_89931B37B19C7D8E27EDE043E5AFA3A5B6B2B7BA47F467AC27392D4695", 45.0 );
    level.trophy = var_0;
}

trophy_set( var_0, var_1 )
{
    trophy_clearstored();
    trophy_populatestored();
}

trophy_onsuperset()
{

}

trophy_unset( var_0, var_1 )
{
    trophy_clearstored();
}

trophy_used( var_0 )
{
    var_0 endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    scripts\mp\utility\print::printgameaction( "_encstr_B2A80F1DC9F6C134BC04DC83C277CDB246", self );
    var_0 scripts\cp_mp\ent_manager::registerspawn( 2, ::sweeptrophy );
    thread scripts\mp\weapons::monitordisownedgrenade( self, var_0 );
    var_0 thread trophy_hideandshowaftertime();
    var_0 thread _id_13DDC( self );
    var_0 waittill( "_encstr_8AE90E7D08B8538A21DB77CF1155D2B3", var_1 );
    var_0 setotherent( self );
    var_0 setnodeploy( 1 );
    var_0.issuper = isdefined( self.super ) && self.super.staticdata.weapon == "_encstr_9FEA0A4BD5D8EB085A26CB99";
    var_0.superid = level.superglobals.staticsuperdata["_encstr_AD2F0DD8973091DDC1331EA80A8AF3"].id;
    var_0.usedcount = 0;
    var_0.laststandweapondelay = self;
    var_2 = scripts\mp\utility\perk::_hasperk( "_encstr_871415CD83AC1BB416C6A3CBD7395D3BB35919F52BE2E0" );

    if ( var_2 )
        var_0.hasruggedeqp = 1;

    if ( !istrue( var_0.issuper ) )
    {
        var_0.ammo = trophy_removestored();

        if ( !isdefined( var_0.ammo ) )
            var_0.ammo = 3;

        var_0 thread scripts\mp\weapons::makeexplosiveusabletag( "_encstr_9830081379E42703F8A3", 1 );
    }
    else
        var_0.ammo = 3;

    scripts\mp\weapons::onequipmentplanted( var_0, "_encstr_87870DB2E25D2DE07D1D39B7C11ACB", ::trophy_shutdownanddestroy );
    thread scripts\mp\weapons::monitordisownedequipment( self, var_0 );
    var_0 scripts\mp\sentientpoolmanager::registersentient( "_encstr_B42E10610746F54F3F79B1219A812B9DC34E", self );
    var_0.explosion = trophy_createexplosion( var_0 );
    var_3 = scripts\engine\utility::ter_op( var_2, 200, 100 );
    var_4 = "_encstr_8CFB0986B4E856B8EA960E";
    var_0 thread scripts\mp\damage::monitordamage( var_3, var_4, ::trophy_handlefataldamage, ::trophy_handledamage, 0 );
    var_0 scripts\cp_mp\emp_debuff::set_apply_emp_callback( ::trophy_applyempcallback );
    var_0 setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_B7180526C81F4B", 0 );
    var_0 thread trophy_deploy();
}

_id_13DDC( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_8AE90E7D08B8538A21DB77CF1155D2B3" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_1 = scripts\engine\utility::_id_143B9( 2, "_encstr_ADEC120BD083C04B706DA138630950D0175FFB83" );

    if ( var_1 == "_encstr_945408D1B4B556B7BA3A" )
        return;

    var_2 = undefined;
    var_3 = tablesort( self.origin, 500, 500 );
    var_3[var_3.size] = self;
    var_4 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 1, 1, 0, 1 );
    var_5 = self.origin;
    var_6 = -2000.0;
    var_7 = self.origin + ( 0.0, 0.0, var_6 );
    var_8 = scripts\engine\trace::ray_trace( var_5, var_7, var_3, var_4 );

    if ( var_8["_encstr_B130095358E1B3930B687D"] < 1.0 )
    {
        var_2 = var_8["_encstr_B60E07C9FD1C2055E3"];

        if ( isdefined( var_2 ) )
        {
            if ( tugofwar_tank( var_2 ) )
                self.origin = var_0.origin;
        }
    }
}

tugofwar_tank( var_0 )
{
    if ( isdefined( level._id_145F1 ) )
    {
        foreach ( var_2 in level._id_145F1._id_13C8D )
        {
            if ( var_2 == var_0 )
                return 1;
            else if ( isdefined( var_2.wz_tease ) && var_2.wz_tease == var_0 )
                return 1;
        }
    }

    return 0;
}

trophy_deploy()
{
    self endon( "_encstr_A3750609A5E61883" );
    self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_89E20BCFE353A865D75090D0EA" );
    wait 0.1;
    thread _id_13DD5();
    wait 0.2;
    self.headiconid = scripts\cp_mp\entityheadicons::setheadicon_factionimage( 0, 20, undefined, undefined, undefined, undefined, 1 );
    thread scripts\mp\weapons::outlineequipmentforowner( self );
    thread trophy_watchprotection( 45, 105625, ::_id_13DDA, ::trophy_protectionsuccessful );
    thread _id_13DDD();
    thread scripts\mp\equipment_interact::remoteinteractsetup( ::trophy_remote_destroy, 1, 1 );
    thread scripts\mp\perks\perk_equipmentping::runequipmentping();
}

_id_13DD5()
{
    self endon( "_encstr_A3750609A5E61883" );
    self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_B15C12F9261B371343A12A7308BF0807B39F5264" );
    wait( trophy_getdeployanimtime() );
    self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_A204108EB970B9AB75492F73712803CD08E1" );
}

trophy_hideandshowaftertime()
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_8AE90E7D08B8538A21DB77CF1155D2B3" );
    var_0 = getdvarfloat( "_encstr_B2F01E4B12EBB0B88A7FE9D1813960EE771A46901AEBD5A9275DF53B949CD0B8", 0 );
    self setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_BECC05FC5321BA", 0 );
    wait( var_0 );
    self setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_B7180526C81F4B", 0 );
}

trophy_remote_destroy( var_0 )
{
    trophy_destroy( 1 );
}

sweeptrophy()
{
    thread trophy_delete( undefined, 0 );
    self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_A294111A10E15CDB51D5959BE59B77E03BD0D2", 0 );
}

trophy_destroy( var_0, var_1 )
{
    thread trophy_delete( var_0, 0.1, var_1 );
    self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_A294111A10E15CDB51D5959BE59B77E03BD0D2", 0 );
}

trophy_shutdownanddestroy( var_0, var_1 )
{
    thread trophy_delete( var_0, 2.6, var_1 );
    self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_8A311316361D2D3BB2442BB98E27ED2FD4A385C947", 0 );
    wait 2.5;

    if ( isdefined( self ) )
        self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_A294111A10E15CDB51D5959BE59B77E03BD0D2", 0 );
}

trophy_delete( var_0, var_1, var_2 )
{
    self notify( "_encstr_A3750609A5E61883" );
    self setscriptablepartstate( "_encstr_80DD0C1AB12E0F71AB57D9A211F8", "_encstr_9819045FD029" );
    self.owner scripts\cp\vehicles\vehicle_compass_cp::_id_12032( "_encstr_AD2F0DD8973091DDC1331EA80A8AF3", self.usedcount, var_0, var_2 );
    scripts\mp\analyticslog::logevent_fieldupgradeexpired( self.owner, self.superid, self.usedcount, istrue( var_2 ) );
    level.mines[self getentitynumber()] = undefined;
    self setcandamage( 0 );

    if ( !istrue( self.issuper ) )
    {
        self makeunusable();
        scripts\mp\weapons::makeexplosiveunusuabletag();
    }

    scripts\cp_mp\entityheadicons::setheadicon_deleteicon( self.headiconid );
    self.headiconid = undefined;
    self.exploding = 1;

    if ( isdefined( self.owner ) )
    {
        self.owner notify( "_encstr_B7F50EE8C9ED0743F2D7EAC1C8B01D56", 0 );
        self.owner scripts\mp\weapons::removeequip( self );
    }

    if ( isdefined( var_1 ) )
        wait( var_1 );

    scripts\cp_mp\ent_manager::deregisterspawn();
    self delete();
}

trophy_watchprotection( var_0, var_1, var_2, var_3 )
{
    self endon( "_encstr_A3750609A5E61883" );

    if ( !isdefined( level.grenades ) )
        level.grenades = [];

    if ( !isdefined( level.missiles ) )
        level.missiles = [];

    if ( !isdefined( level.mines ) )
        level.mines = [];

    if ( !isdefined( level._id_123A9 ) )
        level._id_123A9 = [];

    var_4 = trophy_castcontents();

    while ( [[ var_2 ]]() )
    {
        var_5 = trophy_castorigin( var_0 );
        var_6 = [];
        var_6[0] = level.grenades;
        var_6[1] = level.missiles;
        var_6[2] = level.mines;
        var_6[3] = level.projectilekillstreaks;
        var_6[4] = level._id_123A9;
        var_7 = scripts\engine\utility::array_combine_multiple( var_6 );

        foreach ( var_9 in var_7 )
        {
            if ( !isdefined( var_9 ) )
                continue;

            if ( istrue( var_9.exploding ) )
                continue;

            if ( trophy_checkignorelist( var_9 ) )
                continue;

            var_10 = var_9.owner;

            if ( !isdefined( var_10 ) && isdefined( var_9.weapon_name ) && weaponclass( var_9.weapon_name ) == "_encstr_A28D080FA2D39DC7FAFA" )
                var_10 = getmissileowner( var_9 );

            var_11 = 1;

            if ( var_11 )
            {
                var_12 = self.owner;

                if ( scripts\cp_mp\vehicles\vehicle::isvehicle() )
                    var_12 = self;

                if ( isdefined( var_10 ) && !istrue( scripts\cp_mp\utility\player_utility::playersareenemies( var_12, var_10 ) ) )
                    continue;

                if ( var_12 scripts\cp_mp\vehicles\vehicle::isvehicle() && isdefined( var_12._id_13DF6 ) && isdefined( var_10.team ) && var_12._id_13DF6 == var_10.team )
                    continue;
            }
            else if ( var_9 == self )
                continue;

            if ( distancesquared( var_9.origin, self.origin ) > trophy_modifiedprotectiondistsqr( var_9, var_1 ) )
                continue;

            var_13 = physics_raycast( var_5, var_9.origin, var_4, [ self, var_9 ], 0, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3" );

            if ( isdefined( var_13 ) && var_13.size > 0 )
                continue;

            self [[ var_3 ]]( var_9 );
        }

        waitframe();
    }
}

_id_13DDA()
{
    return isdefined( self.owner );
}

trophy_protectionsuccessful( var_0 )
{
    self.owner scripts\mp\killstreaks\killstreaks::givescorefortrophyblocks();
    self.owner thread scripts\mp\gamelogic::threadedsetweaponstatbyname( "_encstr_9FEA0A4BD5D8EB085A26CB99", 1, "_encstr_80CC058CB830E3" );
    self.owner scripts\mp\utility\stats::incpersstat( "_encstr_B9CD11981BE5A148AF03EBE61CE7D019CCE328", 1 );
    self.owner scripts\mp\supers::hide_plunderboxes( "_encstr_AD2F0DD8973091DDC1331EA80A8AF3" );
    self.usedcount++;
    var_1 = var_0.origin;
    _id_119CE( var_0 );
    _id_13DD6( var_0 );
    var_2 = trophy_getbesttag( var_1 );
    var_3 = trophy_getpartbytag( var_2 );
    self setscriptablepartstate( var_3, "_encstr_B30B07E216CBFFC4C2", 0 );
    var_4 = vectortoangles( self gettagorigin( var_2 ) - var_1 );
    var_5 = combineangles( var_4, ( -90, 0, 0 ) );
    self.explosion thread trophy_explode( var_1, var_5 );
    self.ammo--;

    if ( self.ammo <= 0 )
        thread trophy_shutdownanddestroy( undefined, 0 );
}

_id_13DD6( var_0 )
{
    var_0 setcandamage( 0 );
    var_0.exploding = 1;
    var_0 stopsounds();
    scripts\cp\vehicles\vehicle_compass_cp::ondestroyedbytrophy();
    trophy_notifytrophytargetowner( var_0, "_encstr_9FEA0A4BD5D8EB085A26CB99", self.owner );
    _id_13DDB( var_0, var_0.owner, self.owner );

    if ( !var_0 scripts\mp\equipment::ondestroyedbytrophy() )
    {
        if ( isdefined( var_0.streakname ) && var_0.streakname == "_encstr_B87010AA3BE80F83CFA7075A6D614F65EDBB" )
            var_0 notify( "_encstr_AD260FD127EDE01AF2AF2636B76C6D568C" );
        else
            var_0 delete();
    }
}

_id_13DDB( var_0, var_1, var_2 )
{
    if ( !isdefined( var_0.equipmentref ) || var_0.equipmentref != "_encstr_A95317955C5DD20EBE9BDC85079B1A7BE8EB7627599B581959" )
        return;

    if ( !isdefined( var_0.owner ) || !isdefined( self.owner ) )
        return;

    if ( !scripts\mp\utility\player::isreallyalive( var_1 ) )
        return;

    var_3 = var_2;
    var_4 = var_1.origin;
    var_5 = scripts\mp\equipment\snapshot_grenade::_id_13436( var_3, var_4 );
    scripts\mp\equipment\snapshot_grenade::_id_13435( var_1, var_2, var_5 );
}

_id_13DDD()
{
    self endon( "_encstr_A3750609A5E61883" );
    _id_13DDE();
    thread trophy_shutdownanddestroy( undefined, 0 );
}

_id_13DDE()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = level.trophy.timeout;
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( var_0 );
}

trophy_handledamage( var_0 )
{
    var_1 = var_0.attacker;
    var_2 = var_0.objweapon;
    var_3 = var_0.meansofdeath;
    var_4 = var_0.damage;
    var_5 = var_4;
    var_5 = scripts\mp\damage::handlemeleedamage( var_2, var_3, var_5 );
    var_5 = scripts\mp\damage::handleapdamage( var_2, var_3, var_5 );
    scripts\mp\weapons::equipmenthit( self.owner, var_1, var_2, var_3 );
    return var_5;
}

trophy_handlefataldamage( var_0 )
{
    var_1 = var_0.attacker;
    trophy_givepointsfordeath( var_1 );
    thread trophy_destroy( var_1, 1 );
}

trophy_applyempcallback( var_0 )
{
    var_0.victim trophy_givepointsfordeath( var_0.attacker );
    var_0.victim thread trophy_shutdownanddestroy( var_0.attacker, 1 );
}

trophy_pickup()
{
    if ( self.owner scripts\mp\equipment::hasequipment( "_encstr_87870DB2E25D2DE07D1D39B7C11ACB" ) )
        self.owner trophy_addstored( self.ammo );
}

trophy_createexplosion( var_0 )
{
    var_1 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0.origin );
    var_1.killcament = var_0;
    var_1.owner = var_0.owner;
    var_1.team = var_0.team;
    var_1.equipmentref = var_0.equipmentref;
    var_1.weapon_name = var_0.weapon_name;
    var_1 setotherent( var_1.owner );
    var_1 setentityowner( var_1.owner );
    var_1 setmodel( "_encstr_A4B2198E39ED3843BCBEDC2F6E4759B5F5B607BEB2873863EDC8AC" );
    var_1.explode1available = 1;
    var_1 thread trophy_cleanuponparentdeath( var_0, 0.1 );
    return var_1;
}

trophy_explode( var_0, var_1 )
{
    self dontinterpolate();
    self.origin = var_0;
    self.angles = var_1;

    if ( self.explode1available )
    {
        self setscriptablepartstate( "_encstr_9B3B0959C3838DB719B226", "_encstr_B20A122C6C8ED2D9AC444B27ACB1D1D2ED9B58B1", 0 );
        self.explode1available = 0;
    }
    else
    {
        self setscriptablepartstate( "_encstr_AF3B09CA0FC1B17B8CAC46", "_encstr_B20A122C6C8ED2D9AC444B27ACB1D1D2ED9B58B1", 0 );
        self.explode1available = 1;
    }
}

trophy_castorigin( var_0 )
{
    return self.origin + anglestoup( self.angles ) * var_0;
}

trophy_castcontents()
{
    return physics_createcontents( [ "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_B7D018B89C4B13AC473342305523920D607E50E3571038A69138", "_encstr_941116D7F47B0FC88317C8B07BCC017DD35AD8D44D52D773", "_encstr_A18816F8C3E1EFFCFF5A92BF8363BBF55BCBD9C3538DF74D", "_encstr_B7F9145B18AB8AF721FE235718AB8F95E96811E39843", "_encstr_9DD6156A78B803FAD687D7EF95056246B86329B453E0D5" ] );
}

trophy_modifiedprotectiondistsqr( var_0, var_1 )
{
    if ( isdefined( var_0.weapon_name ) && isdefined( var_0.owner ) )
    {
        switch ( var_0.weapon_name )
        {
            case "_encstr_B35E16DCEE2DD1B134BE98632C232BAFC6D02D1B46F5AD07":
            case "_encstr_A6BB1188A378EFAF7341C35918C527A249AD7B":
            case "_encstr_BE5419C827F6B9CA7D34D29D2BD7E0E4DBD4591B8ED21BCA7DB61C":
                if ( 147456 > var_1 )
                    var_1 = 147456;

                break;
            case "_encstr_9DDA13EB9009312B3066BBAD855E6B024FD081B2D0":
            case "_encstr_89BB137823B2E0281E1FF7D5474538B057DB3660BB":
            case "_encstr_A623119954EA97FD2321729BA06BF7737E3108":
            case "_encstr_A96D112BD7424E71F6412840DACA230B87652F":
            case "_encstr_A3521050A3B879B19AEF4F6F17728C31B5FA":
            case "_encstr_AD69112DF308C9012A3F87B5E7B2DD7BD7CDAB":
            case "_encstr_95D8115ADD0EFA1BB0D7AD4BADB299C8BED638":
            case "_encstr_B76D15A8F362D0182E2F81133416E837A79AA1B3196FFF":
            case "_encstr_BE3E15324BBBD7B5B807B4F11D48BF67CC203B7AD6F9A3":
            case "_encstr_AAD0152DEE0EEB3685D7A3C9CDE80BDC8CC2278C7DB683":
                if ( 105625 > var_1 )
                    var_1 = 105625;

                break;
        }
    }

    if ( var_0 _calloutmarkerping_handleluinotify_mappingdeletemarker::unset_bullet_shields() && isdefined( var_0.owner ) )
    {
        if ( 202500 > var_1 )
            var_1 = 202500;
    }

    return var_1;
}

trophy_checkignorelist( var_0 )
{
    var_1 = var_0.weapon_name;

    if ( !isdefined( var_1 ) && isdefined( var_0.weapon_object ) )
        var_1 = var_0.weapon_object.basename;

    if ( isdefined( var_1 ) )
    {
        if ( scripts\mp\utility\weapon::iskillstreakweapon( var_1 ) && var_1 != "_encstr_8ACB0F82FB0D1F62E877A0AA3FB821B737" && var_1 != "_encstr_B9740F0B070B36D02BAF0EC9BDA6FADA83" )
            return 1;

        if ( scripts\mp\utility\weapon::isaxeweapon( var_1 ) )
            return 1;

        switch ( var_1 )
        {
            case "_encstr_9FEA0A4BD5D8EB085A26CB99":
                if ( scripts\mp\weapons::isplantedequipment( var_0 ) )
                    return 1;

                break;
            case "_encstr_BD0E0DE3F39ED94B58D34F92EE9080":
            case "_encstr_BC09120C4F3B676A18E1B3C816C1320AE7B677B2":
            case "_encstr_ABEE1355365AD7480E9778D89367A3C582DF44554A":
            case "_encstr_8A3F0E7B1310A069B86051902048F903":
            case "_encstr_A1291B9B9B1638B943BD3AD7D9279573B0C895BE320B379D2BC9EBAD0E":
            case "_encstr_8BD117331B1A6B908376D9701D4FB81E22CF87B3CBF238C0B0":
            case "_encstr_B32A125452AAF2972377D14FCD38D0350BBF2998":
            case "_encstr_884A1932F00DA43F789DF7D3AF60536BA3C8B90B30C71A673671C0":
            case "_encstr_A22E0D63D02EBB9A0D6E057A402303":
            case "_encstr_89F817DB90A61F7BE06DDFAB1598477F588933B2B871273583":
            case "_encstr_BE851A55744BB78B09E36810FB51E1EBE15FC1550E8355B0EB0F30C0":
            case "_encstr_B40F16E88627DEDDD2DCCE5BDC4BCCCAEBCC2D392BBE5B0E":
            case "_encstr_89F511713BBB2818C13559D05DB9E85501B7F1":
            case "_encstr_937E0D942BC0E4D33D21F2AACE99FB":
            case "_encstr_94D710B62DB1C9EDAF8ED59C4E568EBED6E0":
            case "_encstr_970F0EE3A041D9E66F48B47B63E1A071":
            case "_encstr_A1730ED1DBB801200B0219525A878B43":
                return 1;
        }
    }

    return 0;
}

trophy_notifytrophytargetowner( var_0, var_1, var_2 )
{
    if ( !isdefined( var_0.owner ) || !isplayer( var_0.owner ) )
        return;

    var_0.owner thread scripts\mp\damagefeedback::updatedamagefeedback( "_encstr_A21110F83B035B1A5FF8F2FBF8AB92939991" );

    if ( isdefined( var_0.weapon_name ) )
    {
        switch ( var_0.weapon_name )
        {
            case "_encstr_B35E16DCEE2DD1B134BE98632C232BAFC6D02D1B46F5AD07":
            case "_encstr_A6BB1188A378EFAF7341C35918C527A249AD7B":
            case "_encstr_BE5419C827F6B9CA7D34D29D2BD7E0E4DBD4591B8ED21BCA7DB61C":
                var_0.owner notify( "_encstr_BAF614C8AC9B1D4EDECB2B19F526CBFAA339BDC1A1F2", var_2, var_1, var_0.weapon_name, var_0.origin, var_0.angles );
                break;
        }
    }
}

trophy_getbesttag( var_0 )
{
    var_1 = level.trophy.tags;
    var_2 = undefined;
    var_3 = undefined;

    foreach ( var_10, var_5 in var_1 )
    {
        var_6 = self gettagorigin( var_5 );
        var_7 = self gettagangles( var_5 );
        var_8 = anglestoforward( var_7 );
        var_9 = vectordot( vectornormalize( var_0 - var_6 ), var_8 );

        if ( var_10 == 0 || var_9 > var_2 )
        {
            var_2 = var_9;
            var_3 = var_5;
        }
    }

    return var_3;
}

trophy_getpartbytag( var_0 )
{
    var_1 = level.trophy.tags;

    foreach ( var_4, var_3 in var_1 )
    {
        if ( var_3 == var_0 )
            return "_encstr_A99A07A658C02A037D" + ( var_4 + 1 );
    }

    return undefined;
}

trophy_givepointsfordeath( var_0 )
{
    if ( istrue( scripts\cp_mp\utility\player_utility::playersareenemies( self.owner, var_0 ) ) )
    {
        var_0 notify( "_encstr_B6BB140AE56FC14D7781B0FDAF0869F3E818D827BDEB" );
        var_0 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_B6BB140AE56FC14D7781B0FDAF0869F3E818D827BDEB" );
        var_0 thread scripts\mp\battlechatter_mp::equipmentdestroyed( self );
    }
}

#using_animtree("_encstr_B1CF0CC7CF3E927058D976FD7148");

trophy_getdeployanimtime()
{
    return getanimlength( %_encstr_98D0204B2127DBD24828135F39A3A1D3194D55C91D8B53049058D773D03874BA95D4 );
}

trophy_givedamagefeedback( var_0 )
{
    var_1 = "_encstr_A40101";

    if ( istrue( self.hasruggedeqp ) )
        var_1 = "_encstr_8CFB0986B4E856B8EA960E";

    if ( isplayer( var_0 ) )
        var_0 scripts\mp\damagefeedback::updatedamagefeedback( var_1 );
}

trophy_addstored( var_0 )
{
    if ( !isdefined( self.trophies ) )
        self.trophies = [];

    if ( self.trophies.size < trophy_maxstored() )
    {
        if ( !isdefined( var_0 ) )
            var_0 = 3;

        self.trophies[self.trophies.size] = var_0;
    }
}

trophy_removestored()
{
    if ( isdefined( self.trophies ) && self.trophies.size > 0 )
    {
        var_0 = self.trophies[self.trophies.size - 1];
        self.trophies[self.trophies.size - 1] = undefined;
        return var_0;
    }

    return undefined;
}

trophy_clearstored()
{
    self.trophies = undefined;
}

trophy_populatestored()
{
    var_0 = scripts\mp\equipment::getequipmentmaxammo( "_encstr_87870DB2E25D2DE07D1D39B7C11ACB" );

    for ( var_1 = 0; var_1 < var_0; var_1++ )
        trophy_addstored();
}

trophy_maxstored()
{
    return scripts\mp\equipment::getequipmentmaxammo( "_encstr_87870DB2E25D2DE07D1D39B7C11ACB" );
}

trophy_modifieddamage( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( var_2 ) )
        return [ var_3, var_4 ];

    if ( var_3 == 0 )
        return [ var_3, var_4 ];

    var_5 = undefined;

    if ( level.hardcoremode )
    {
        switch ( var_2 )
        {
            case "_encstr_8F39108B1387575A3139AA8F09B0A077A12B":
            case "_encstr_A226180E1B852F2BC9AF474E7B83A15ED7CD2FCDE8AC6BD7B5E0":
            case "_encstr_9FEA0A4BD5D8EB085A26CB99":
                var_5 = 20;
                break;
        }
    }

    var_6 = var_4;

    if ( isdefined( var_5 ) )
        var_6 = var_5 - var_3;

    var_6 = min( var_6, var_4 );
    return [ var_3, var_4 ];
}

trophy_cleanuponparentdeath( var_0, var_1 )
{
    self endon( "_encstr_A3750609A5E61883" );
    var_0 waittill( "_encstr_A3750609A5E61883" );
    wait( var_1 );
    self delete();
}

_id_119CE( var_0 )
{
    if ( !isdefined( var_0 ) || !isplayer( var_0.owner ) )
        return;

    if ( !isdefined( self.laststandweapondelay ) )
        return;

    getentitylessscriptablearray( "_encstr_88E61D6164F72FD102A0FAD57BC76D409740C96F293F8BEFA9287B433ABBE0", [ "_encstr_B8A8111956C1C6B7CB4BCD9DD738D8855EB2E4", self.laststandweapondelay, "_encstr_9E860E62EB71104ADDD7D920142DD18B", var_0.owner, "_encstr_88A70FF0AD57E1398F9A1948E262C7B9F3", var_0.weapon_name ] );
}
