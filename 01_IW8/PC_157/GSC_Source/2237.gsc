// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_80C50550FA44C9" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_80C50550FA44C9" ) ]]();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_A8FC13A5CD96A3A9AC9B47275E4D598EA396B9CEE6" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_A8FC13A5CD96A3A9AC9B47275E4D598EA396B9CEE6" ) ]]();
}

weaponcleanupsentryturret( var_0, var_1, var_2 )
{
    if ( !istrue( var_1 ) )
        scripts\cp_mp\killstreaks\killstreakdeploy::rocket_fuel( var_2 );
}

tryusesentryturret( var_0 )
{
    var_1 = scripts\cp_mp\utility\killstreak_utility::createstreakinfo( var_0, self );
    return tryusesentryturretfromstruct( var_1 );
}

tryusesentryturretfromstruct( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( isdefined( level.killstreaktriggeredfunc ) )
    {
        if ( !level [[ level.killstreaktriggeredfunc ]]( var_0 ) )
        {
            self.bgivensentry = 0;
            return 0;
        }
    }

    scripts\cp_mp\utility\weapon_utility::_id_12EB2();
    var_1 = scripts\cp_mp\killstreaks\killstreakdeploy::streakdeploy_doweaponswitchdeploy( var_0, getcompleteweaponname( "_encstr_AB511132B207367BCB7D6ECAE6A39CE5EBD61C" ), 1, undefined, undefined, ::weaponcleanupsentryturret );

    if ( !istrue( var_1 ) )
    {
        self.bgivensentry = 0;
        return 0;
    }

    if ( isdefined( level.killstreakbeginusefunc ) )
    {
        if ( !level [[ level.killstreakbeginusefunc ]]( var_0 ) )
        {
            self.bgivensentry = 0;
            return 0;
        }
    }

    scripts\cp_mp\killstreaks\manual_turret::_id_11ACC( 0 );
    var_2 = sentryturret_create( "_encstr_978E0E0271A8ACF37377136F559ECAE4", var_0 );

    if ( !isdefined( var_2 ) )
    {
        scripts\cp_mp\killstreaks\manual_turret::_id_11ACC( 1 );
        self.bgivensentry = 0;
        return 0;
    }

    var_3 = sentryturret_watchplacement( var_2, var_0, 0, 1.25 );

    if ( !isdefined( var_3 ) )
    {
        scripts\cp_mp\killstreaks\manual_turret::_id_11ACC( 1 );
        var_2 delete();
        self.bgivensentry = 0;
        return 0;
    }

    var_2 scripts\cp_mp\emp_debuff::set_start_emp_callback( ::sentryturret_empstarted );
    var_2 scripts\cp_mp\emp_debuff::set_clear_emp_callback( ::sentryturret_empcleared );
    scripts\cp_mp\killstreaks\manual_turret::_id_11ACC( 1 );
    sentryturret_setplaced( var_2, var_3 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_AA330DC11586CB9928C0039DA3BD49" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_AA330DC11586CB9928C0039DA3BD49" ) ]]();

    return 1;
}

sentryturret_watchplacement( var_0, var_1, var_2, var_3 )
{
    self.bgivensentry = 1;
    var_0 laseroff();
    thread sentryturret_delayplacementinstructions( var_3 );
    var_4 = 0;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) )
        var_4 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) ]]() == "_encstr_9507034B25";

    if ( var_4 )
        thread _id_13029();

    var_5 = undefined;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_95F7202793F08EFB7C884B71F03777C73833A6AC2368549B84C4724B1B061BBE70E9" ) )
        self thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_95F7202793F08EFB7C884B71F03777C73833A6AC2368549B84C4724B1B061BBE70E9" ) ]]();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_B7EC101F9D6349F15B0F092395017B5A37BA" ) )
        var_5 = self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_B7EC101F9D6349F15B0F092395017B5A37BA" ) ]]( var_1, var_2 );

    self notify( "_encstr_A4F71A81BF4B56580CA98B8DCEC38001926B094F9B821070237CD119" );

    if ( !isdefined( var_5 ) || !isdefined( var_5.location ) )
    {
        if ( scripts\cp_mp\utility\player_utility::_isalive() )
            scripts\cp_mp\killstreaks\manual_turret::manualturret_switchbacklastweapon( "_encstr_AB511132B207367BCB7D6ECAE6A39CE5EBD61C" );

        return undefined;
    }

    var_0 thread scripts\cp_mp\killstreaks\manual_turret::manualturret_disablefire( self, 1, 1 );

    if ( self hasweapon( "_encstr_AB511132B207367BCB7D6ECAE6A39CE5EBD61C" ) )
        thread scripts\cp_mp\killstreaks\manual_turret::manualturret_switchbacklastweapon( "_encstr_AB511132B207367BCB7D6ECAE6A39CE5EBD61C", 1, 1 );

    var_6 = 0.85;
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_6 );
    return var_5;
}

_id_13029()
{
    self endon( "_encstr_A4F71A81BF4B56580CA98B8DCEC38001926B094F9B821070237CD119" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self waittill( "_encstr_8BE0118D16E68ED7DC3AB0CDC8D7CD47589C3A" );
    self notify( "_encstr_A69814595CBA5A07AF46B28363DBE5EB1B0B378D59C6" );
}

sentryturret_delayplacementinstructions( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A4F71A81BF4B56580CA98B8DCEC38001926B094F9B821070237CD119" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_0 );
    self setclientomnvar( "_encstr_9B75144B50A70BC7433E658C40EB6B96079872C2F099", 1 );
    thread scripts\cp_mp\killstreaks\manual_turret::_id_11AC6( "_encstr_A3750609A5E61883" );
    thread scripts\cp_mp\killstreaks\manual_turret::_id_11AC6( "_encstr_A4F71A81BF4B56580CA98B8DCEC38001926B094F9B821070237CD119" );
}

sentryturret_create( var_0, var_1 )
{
    var_2 = level.sentrysettings[var_0];
    var_3 = spawnturret( "_encstr_88710C0763169AF7A3330A1229D8", self.origin, level.sentrysettings[var_0].weaponinfo );
    var_3.owner = self;
    var_3.team = self.team;
    var_3.angles = self.angles;
    var_3.health = 9999;
    var_3.maxhealth = var_2.maxhealth;
    var_3.streakinfo = var_1;
    var_3.turrettype = var_0;
    var_3.shouldsplash = 1;
    var_3.ammocount = var_2.ammo;
    var_3.timeout = var_2.timeout;
    var_3.carriedby = self;
    var_3 sentryturret_setturretmodel( "_encstr_BDB00703157108A55A" );
    var_3 setturretowner( var_3.owner );
    var_3 setturretteam( var_3.team );
    var_3 makeunusable();
    var_3 setnodeploy( 1 );
    var_3 setdefaultdroppitch( 0 );
    var_3 hide();
    var_3 setautorotationdelay( 0.2 );
    var_3.momentum = 0;
    var_3.heatlevel = 0;
    var_3.overheated = 0;
    var_3.cooldownwaittime = 0.1;

    switch ( var_0 )
    {
        case "_encstr_978E0E0271A8ACF37377136F559ECAE4":
        default:
            var_3 maketurretinoperable();
            var_3 setleftarc( 80 );
            var_3 setrightarc( 80 );
            var_3 setbottomarc( 50 );
            var_3 settoparc( 60 );
            var_3 setconvergencetime( 0.6, "_encstr_B765060ED21D6CD0" );
            var_3 setconvergencetime( 0.6, "_encstr_A619044337C3" );
            var_3 setconvergenceheightpercent( 0.65 );
            var_3 setdefaultdroppitch( -89.0 );
            break;
    }

    var_3 setturretmodechangewait( 1 );
    var_3 scripts\cp_mp\emp_debuff::allow_emp( 0 );
    var_5 = anglestoforward( var_3.angles );
    var_6 = var_3 gettagorigin( "_encstr_BC1E0A117F8A506069D2B953" ) + ( 0, 0, 10 );
    var_6 = var_6 - var_5 * 20;
    var_7 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_6 );
    var_7 linkto( var_3 );
    var_3.killcament = var_7;
    var_3.helperdrone_isbeingpingedbydrone = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_3.origin );
    var_3.helperdrone_isbeingpingedbydrone.team = var_3.team;
    var_3.helperdrone_isbeingpingedbydrone.owner = var_3.owner;
    var_3.helperdrone_isbeingpingedbydrone setmodel( "_encstr_93EE26507F89EB3F3A01F47169626776E31773C09B39C6F15372EE0DBB79A3984EBF602133F91B9B" );
    var_3.helperdrone_isbeingpingedbydrone dontinterpolate();
    var_3.helperdrone_isbeingpingedbydrone hide();
    var_8 = 0;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) )
        var_8 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) ]]() == "_encstr_9507034B25";

    if ( var_8 )
    {
        var_3.helperdrone_monitorcollision = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_3.origin );
        var_3.helperdrone_monitorcollision.team = var_3.team;
        var_3.helperdrone_monitorcollision.owner = var_3.owner;
        var_3.helperdrone_monitorcollision setmodel( "_encstr_9E6A2EEE560BC1DB737D9DD67DB5B37DE656DC8EE4BCFA8EBA4E9CB2A3EB2D736796CDD731B06E59EBD9AC43A5D8B195" );
        var_3.helperdrone_monitorcollision dontinterpolate();
        var_3.helperdrone_monitorcollision hide();
    }

    return var_3;
}

sentryturret_setplaced( var_0, var_1 )
{
    var_2 = level.sentrysettings[var_0.turrettype];
    var_0 sentryturret_setturretmodel( "_encstr_BDB00703157108A55A" );

    if ( !isdefined( self.placedsentries ) )
        self.placedsentries = [];

    if ( !isdefined( self.placedsentries[var_0.turrettype] ) )
        self.placedsentries[var_0.turrettype] = [];

    if ( istrue( var_0.shouldsplash ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_936006576AC048BA", "_encstr_82011B33295F7BA3A850CD124B28D5B22201EFAB81F0A36440D9C51D41" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_936006576AC048BA", "_encstr_82011B33295F7BA3A850CD124B28D5B22201EFAB81F0A36440D9C51D41" ) ]]( self, var_0.streakinfo.streakname );

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_8C401B32B09B9D599C93ED4796332FA036582FCA273792734985B9B3AC" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_8C401B32B09B9D599C93ED4796332FA036582FCA273792734985B9B3AC" ) ]]( var_0.origin, 2048, var_0.streakinfo.streakname );

        var_3 = var_2.teamsplash;

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_957515E82BC2AD28B116F2CA9C6885E4C8D41CB12C6E43" ) )
            level thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_957515E82BC2AD28B116F2CA9C6885E4C8D41CB12C6E43" ) ]]( var_3, self );

        var_0.shouldsplash = 0;
    }

    var_4 = 0;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) )
        var_4 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) ]]() == "_encstr_9507034B25";

    var_0 show();
    var_0 dontinterpolate();
    var_0.angles = var_1.angles;
    var_0.carriedby = undefined;

    if ( isdefined( var_1.moving_platform ) )
    {
        var_0.moving_platform = var_1.moving_platform;
        var_0._id_11DBE = var_1._id_11DBE;
        var_0._id_11DBD = var_1._id_11DBD;
    }

    self.bgivensentry = 0;
    var_0.origin = var_1.location;
    var_0 playsound( "_encstr_B31A11072A6A4118792904EB8576D3C829159B" );
    var_0.helperdrone_isbeingpingedbydrone show();
    var_0.helperdrone_isbeingpingedbydrone.angles = var_0.angles;
    var_0.helperdrone_isbeingpingedbydrone.origin = var_0.origin;
    var_5 = var_0.helperdrone_isbeingpingedbydrone;

    if ( var_4 )
    {
        var_0.helperdrone_monitorcollision show();
        var_0.helperdrone_monitorcollision.angles = var_0.angles;
        var_0.helperdrone_monitorcollision.origin = var_0.origin;
        var_0.helperdrone_isbeingpingedbydrone linkto( var_0, "_encstr_94FE0B5D3E12DFD32D9BD868EB" );
        var_0.helperdrone_monitorcollision linkto( var_0, "_encstr_94FE0B5D3E12DFD32D9BD868EB" );
        var_0.helperdrone_monitorcollision linkto( var_0, "_encstr_89FF0EABBBC4811120C8894A60F0576B" );
        var_5 = var_0.helperdrone_monitorcollision;
    }
    else
        var_0.helperdrone_isbeingpingedbydrone linkto( var_0, "_encstr_89FF0EABBBC4811120C8894A60F0576B" );

    var_0 thread _id_13023( var_0, var_5 );
    var_6 = self.placedsentries[var_0.turrettype].size;
    self.placedsentries[var_0.turrettype][var_6] = var_0;

    if ( var_6 + 1 > 2 )
        self.placedsentries[var_0.turrettype][0] notify( "_encstr_B32D0C5292FA421943DFF33BC535", 0, 0 );

    var_7 = 70;

    if ( var_0.model == level.sentrysettings[var_0.turrettype].modelbasecover )
        var_7 = 35;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_9F1B1AA9C213557B261381B32E1719839BDA6373CB4F77E88DE197B1" ) )
        var_0 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_9F1B1AA9C213557B261381B32E1719839BDA6373CB4F77E88DE197B1" ) ]]( var_0.turrettype, "_encstr_A129125A5AC636B9A3C9B258DAF51D93B7EAB9C8", self, 0, 1, var_7, "_encstr_9D3B0803A3F0FACFDDF9" );

    var_0 setmode( level.sentrysettings[var_0.turrettype].sentrymodeon );
    var_8 = "_encstr_A1D8084AFBD1B6B78E91";

    if ( !isdefined( var_0.useownerobj ) )
    {
        var_9 = var_0 gettagorigin( var_8 );

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_BEDD11B19356B0E8B2844BDC8EA7C435ACC63A" ) )
            var_0.useownerobj = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_BEDD11B19356B0E8B2844BDC8EA7C435ACC63A" ) ]]( var_9, "_encstr_98110C0B790BBF87AE11E9F1A8F5", undefined, var_2.ownerusehintstring );
    }
    else
    {
        var_9 = var_0 gettagorigin( var_8 );
        var_0.useownerobj makeusable();
        var_0.useownerobj dontinterpolate();
        var_0.useownerobj.origin = var_9;
    }

    var_0.useownerobj linkto( var_0, var_8 );

    foreach ( var_11 in level.players )
    {
        if ( var_11 != var_0.owner )
            var_0.useownerobj disableplayeruse( var_11 );
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_934D158C2745DACC09C10F6388CDBFE1294F138798A582" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_934D158C2745DACC09C10F6388CDBFE1294F138798A582" ) ]]( var_0 );

    var_0 scripts\cp_mp\emp_debuff::allow_emp( 1 );
    var_0 scripts\mp\sentientpoolmanager::registersentient( "_encstr_9CB01269D2B163CDA34EAC58ADFAA9A3B0E8D28D", self );
    var_0 sentryturret_empupdate();
    var_0 _id_13020();
    var_0 thread sentry_attacktargets();
    var_0 thread sentry_beepsounds();
    thread sentryturret_delaydeletemarker( var_0, var_1 );
    thread sentryturret_watchpickup( var_0 );
    thread sentryturret_watchdamage( var_0 );
    thread sentryturret_watchdeath( var_0 );
    thread sentryturret_watchtimeout( var_0 );
    thread sentryturret_watchdisown( var_0 );
    thread _id_13028( var_0 );
    var_0 notify( "_encstr_9CF81871ED0A933D5B7173F87AEFE5B1E245E7D7653240F4675A" );
}

sentryturret_setcarried( var_0 )
{
    var_0 endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( createheadicon( self getcurrentweapon() ) == "_encstr_B3BD102DEEE0FAD85BD72326B1D63BBEAD0E" )
    {
        self notify( "_encstr_BAE016CDBB2DD1D80D56237D66E47BB6AFDA4BDCD29D5773" );

        while ( createheadicon( self getcurrentweapon() ) == "_encstr_B3BD102DEEE0FAD85BD72326B1D63BBEAD0E" )
            waitframe();
    }

    if ( isdefined( var_0.moving_platform ) )
    {
        var_0.moving_platform = undefined;
        var_0._id_11DBE = undefined;
        var_0._id_11DBD = undefined;
        var_0 unlink();
    }

    var_0 scripts\cp_mp\emp_debuff::allow_emp( 0 );
    var_0 scripts\mp\sentientpoolmanager::unregistersentient( var_0.sentientpool, var_0.sentientpoolindex );
    var_1 = var_0 getlinkedchildren();

    foreach ( var_3 in var_1 )
    {
        if ( isdefined( var_3 ) )
            var_3 unlink();
    }

    if ( isdefined( var_0.minimapid ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AB771293936D032238ACA6AC81386C9AC43BC7C3" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AB771293936D032238ACA6AC81386C9AC43BC7C3" ) ]]( var_0.minimapid );

        var_0.minimapid = undefined;
    }

    var_5 = 0;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) )
        var_5 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) ]]() == "_encstr_9507034B25";

    var_0.helperdrone_isbeingpingedbydrone unlink();
    var_0.helperdrone_isbeingpingedbydrone hide();

    if ( var_5 )
    {
        var_0.helperdrone_monitorcollision unlink();
        var_0.helperdrone_monitorcollision hide();
    }

    sentryturret_setinactive( var_0 );
    var_0 hide();
    var_0.carriedby = self;
    var_0 notify( "_encstr_9D3B0803A3F0FACFDDF9" );
    var_0 playsound( "_encstr_89F00E7F0F7AA530D179BB901EBB70DF" );
    scripts\cp_mp\utility\weapon_utility::_id_12EB2();
    scripts\cp_mp\utility\inventory_utility::_giveweapon( "_encstr_AB511132B207367BCB7D6ECAE6A39CE5EBD61C" );
    scripts\cp_mp\utility\inventory_utility::_switchtoweapon( "_encstr_AB511132B207367BCB7D6ECAE6A39CE5EBD61C" );
    scripts\cp_mp\killstreaks\manual_turret::_id_11ACC( 0 );
    var_6 = sentryturret_watchplacement( var_0, var_0.streakinfo, 1, 2 );

    if ( !isdefined( var_6 ) )
    {
        scripts\cp_mp\killstreaks\manual_turret::_id_11ACC( 1 );
        return 0;
    }

    scripts\cp_mp\killstreaks\manual_turret::_id_11ACC( 1 );
    sentryturret_setplaced( var_0, var_6 );
}

sentryturret_switchbacklastweapon( var_0 )
{
    if ( istrue( var_0 ) )
        scripts\cp_mp\utility\inventory_utility::_switchtoweaponimmediate( self.lastdroppableweaponobj );
    else
        scripts\cp_mp\utility\inventory_utility::_switchtoweapon( self.lastdroppableweaponobj );

    scripts\cp_mp\utility\inventory_utility::_takeweapon( "_encstr_AB511132B207367BCB7D6ECAE6A39CE5EBD61C" );
}

sentryturret_setinactive( var_0 )
{
    var_0 setdefaultdroppitch( 30 );
    var_0 setmode( level.sentrysettings[var_0.turrettype].sentrymodeoff );
    var_0.useownerobj makeunusable();
    var_0.useownerobj unlink();
}

sentryturret_delaydeletemarker( var_0, var_1 )
{
    var_0 endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    wait 0.25;

    if ( isdefined( var_1.visual ) )
        var_1.visual delete();
}

sentryturret_disableplayeruseonconnect( var_0, var_1 )
{
    if ( isdefined( var_0 ) )
    {
        var_0 endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
        var_0 endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    }

    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        level waittill( "_encstr_87940A7F075A88E8ABD37951", var_2 );
        var_1 disableplayeruse( var_2 );
    }
}

sentryturret_watchpickup( var_0 )
{
    var_0 endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    var_0 endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        var_0.useownerobj waittill( "_encstr_8B5C081B58E0B7A213E6", var_1 );

        if ( var_1 != self )
            continue;

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_A2DE1451BACBC0C87A01A78F255A411C73434BBBB203" ) )
        {
            if ( !var_1 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_A2DE1451BACBC0C87A01A78F255A411C73434BBBB203" ) ]]() )
                continue;
        }

        if ( istrue( var_1.isjuggernaut ) )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) )
                var_1 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) ]]( "_encstr_9DC125D747D8E95F892ACD79D7D18E05A135418FDF873DBD4F15DF9D47DFC9C3C12BE5F047F980" );

            continue;
        }

        var_0 _id_13021();
        var_0.useownerobj makeunusable();
        var_0 setmode( level.sentrysettings[var_0.turrettype].sentrymodeoff );
        self.placedsentries[var_0.turrettype] = scripts\engine\utility::array_remove( self.placedsentries[var_0.turrettype], var_0 );
        thread sentryturret_setcarried( var_0 );
    }
}

sentryturret_disableplayerpickuponconnect( var_0 )
{
    var_0 endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    var_0 endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        level waittill( "_encstr_87940A7F075A88E8ABD37951", var_1 );
        var_1 waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
        var_0.useownerobj disableplayeruse( var_1 );
    }
}

sentryturret_watchdismantle( var_0 )
{
    var_0 endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    var_0 endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    foreach ( var_2 in level.players )
    {
        if ( level.teambased )
        {
            if ( var_2.team != self.team )
                continue;
        }
        else if ( var_2 != self )
            continue;
    }

    thread sentryturret_disableplayerdismantleonconnect( var_0 );

    for (;;)
    {
        var_0.dismantleobj waittill( "_encstr_8B5C081B58E0B7A213E6", var_2 );
        var_0 notify( "_encstr_B32D0C5292FA421943DFF33BC535", 0, 1 );
        break;
    }
}

sentryturret_watchdamage( var_0 )
{
    var_0 endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    var_0 endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_B3790E323A2D083378D310AED9C3E0F3" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_87060BC3FA139D30C0C75F63EE", "_encstr_B3790E323A2D083378D310AED9C3E0F3" ) ]]( var_0 );
}

sentryturret_disableplayerdismantleonconnect( var_0 )
{
    var_0 endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    var_0 endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        level waittill( "_encstr_87940A7F075A88E8ABD37951", var_1 );
        var_1 waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );

        if ( level.teambased )
        {
            if ( var_1.team != self.team )
                continue;
        }
    }
}

sentryturret_empstarted( var_0 )
{
    sentryturret_empupdate();
}

sentryturret_empcleared( var_0 )
{
    if ( var_0 )
        return;

    sentryturret_empupdate();
}

sentryturret_empupdate()
{
    if ( scripts\cp_mp\emp_debuff::is_empd() )
    {
        self turretfiredisable();
        self setmode( level.sentrysettings[self.turrettype].sentrymodeoff );
        self laseroff();
    }
    else
    {
        self turretfireenable();
        self setmode( level.sentrysettings[self.turrettype].sentrymodeon );
    }
}

sentryturret_watchdeath( var_0 )
{
    var_0 endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    var_0 waittill( "_encstr_B32D0C5292FA421943DFF33BC535", var_1, var_2 );

    if ( isdefined( self ) )
    {
        self.placedsentries[var_0.turrettype] = scripts\engine\utility::array_remove( self.placedsentries[var_0.turrettype], var_0 );
        sentryturret_setinactive( var_0 );

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AAB0079B102F47FF38", "_encstr_811B1068E0F8A86BFF803D6F717F9B0802F0" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AAB0079B102F47FF38", "_encstr_811B1068E0F8A86BFF803D6F717F9B0802F0" ) ]]( "_encstr_8003216BD3601DC7355B4A324027D7D578A31CA8C3AAE557D05302EAAE65AF0A201B84", self );

        var_0.streakinfo.onspray = istrue( var_2 );
        scripts\cp_mp\utility\killstreak_utility::_id_12AA7( var_0.streakinfo );
    }

    var_0 sentryturret_setturretmodel( "_encstr_82320A46ACE68EC9DBE5CA32" );
    var_0 _id_13021();
    var_0 setturretowner( undefined );

    if ( !istrue( var_1 ) )
    {
        var_0 playsound( "_encstr_B9B2157BB5C8D3620B09BA6358091D2B0130E3EDD830DF" );
        var_0 setscriptablepartstate( "_encstr_97EF093338705BBDFF08B3", "_encstr_9707035F3B" );
        scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 2 );
        var_0 setscriptablepartstate( "_encstr_AB0808DFB97F822F1899", "_encstr_B230080577925D88916A" );
    }
    else
        var_0 setscriptablepartstate( "_encstr_AB0808DFB97F822F1899", "_encstr_80B208BB2888043AAD4D" );

    var_0 playsound( "_encstr_BCCF138563572F531D0197C91AF02ACBEBEAE8AB98" );

    if ( isdefined( level.killstreakfinishusefunc ) )
        level thread [[ level.killstreakfinishusefunc ]]( var_0.streakinfo );

    if ( isdefined( var_0.killcament ) )
        var_0.killcament delete();

    if ( isdefined( var_0.useownerobj ) )
        var_0.useownerobj delete();

    if ( isdefined( var_0.useotherobj ) )
        var_0.useotherobj delete();

    if ( isdefined( var_0.helperdrone_isbeingpingedbydrone ) )
        var_0.helperdrone_isbeingpingedbydrone delete();

    if ( isdefined( var_0.helperdrone_monitorcollision ) )
        var_0.helperdrone_monitorcollision delete();

    if ( isdefined( var_0.minimapid ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AB771293936D032238ACA6AC81386C9AC43BC7C3" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AB771293936D032238ACA6AC81386C9AC43BC7C3" ) ]]( var_0.minimapid );

        var_0.minimapid = undefined;
    }

    wait 0.2;
    var_0 delete();
}

sentryturret_delayscriptabledelete()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 5 );
    self delete();
}

sentryturret_watchtimeout( var_0 )
{
    var_0 endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    var_0 endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    while ( var_0.timeout > 0 )
    {
        var_0.timeout = var_0.timeout - 0.05;
        scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 0.05 );
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_936006576AC048BA", "_encstr_B3111DAB622723C1CCFC51670CF248E7E7782D31CA4754A925F849BB191FB8" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_936006576AC048BA", "_encstr_B3111DAB622723C1CCFC51670CF248E7E7782D31CA4754A925F849BB191FB8" ) ]]( "_encstr_B9B80B6A8196E3AA40B32D34E7" + var_0.streakinfo.streakname, undefined, undefined, self.origin );

    var_0 notify( "_encstr_B32D0C5292FA421943DFF33BC535", 0, 0 );
}

sentryturret_watchdisown( var_0 )
{
    var_0 endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    var_0 endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    scripts\engine\utility::_id_143A6( "_encstr_8A820B4696CDB1ED3737AC1B3A", "_encstr_B2170C4AD884CDC823B9DB9D9F42", "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
    var_0 notify( "_encstr_B32D0C5292FA421943DFF33BC535", 0, 0 );
}

_id_13028( var_0 )
{
    var_0 endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    var_0 endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 notify( "_encstr_B32D0C5292FA421943DFF33BC535", 0, 0 );
}

sentryturret_setturretmodel( var_0 )
{
    var_1 = undefined;

    if ( var_0 == "_encstr_BDB00703157108A55A" )
        var_1 = level.sentrysettings[self.turrettype].modelbaseground;
    else
        var_1 = level.sentrysettings[self.turrettype].modeldestroyedground;

    self setmodel( var_1 );
}

sentry_attacktargets()
{
    self endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    self endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self.momentum = 0;

    for (;;)
    {
        self waittill( "_encstr_B67D12389F333E65FBF67B827829A648EA28BF2A" );

        if ( self isfiringturret() )
        {
            self laseron();
            thread sentry_burstfirestart();
            continue;
        }

        self laseroff();
        sentry_spindown();
        thread sentry_burstfirestop();
    }
}

sentry_targetlocksound()
{
    self endon( "_encstr_A3750609A5E61883" );
    self playsound( "_encstr_B3961CF34BF09B43337EEAF36018139648279D7CA748E5DFD296B2FA69E7" );
    wait 0.19;
    self playsound( "_encstr_B3961CF34BF09B43337EEAF36018139648279D7CA748E5DFD296B2FA69E7" );
}

sentry_spinup()
{
    thread sentry_targetlocksound();

    while ( self.momentum < level.sentrysettings[self.turrettype].spinuptime )
    {
        self.momentum = self.momentum + 0.1;
        wait 0.1;
    }
}

sentry_spindown()
{
    self.momentum = 0;
}

sentry_burstfirestart()
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_94210E32B34F979E3A7810D2057350BA" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    sentry_spinup();
    var_0 = weaponfiretime( level.sentrysettings[self.turrettype].weaponinfo );
    var_1 = level.sentrysettings[self.turrettype].burstmin;
    var_2 = level.sentrysettings[self.turrettype].burstmax;
    var_3 = level.sentrysettings[self.turrettype].pausemin;
    var_4 = level.sentrysettings[self.turrettype].pausemax;
    var_5 = level.sentrysettings[self.turrettype].lockstrength;

    for (;;)
    {
        var_6 = randomintrange( var_1, var_2 + 1 );

        for ( var_7 = 0; var_7 < var_6 && !self.overheated; var_7++ )
        {
            self shootturret( "_encstr_A94F0AD158D9BECCD80BE6A1", var_5 );
            self.streakinfo.shots_fired++;
            wait( var_0 );
        }

        wait( randomfloatrange( var_3, var_4 ) );
    }
}

sentry_burstfirestop()
{
    self notify( "_encstr_94210E32B34F979E3A7810D2057350BA" );
}

turret_heatmonitor()
{
    self endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    self endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = level.sentrysettings[self.turrettype].overheattime;

    for (;;)
    {
        if ( self.heatlevel > var_0 )
        {
            self.overheated = 1;

            while ( self.heatlevel )
                wait 0.1;

            self.overheated = 0;
            self notify( "_encstr_BE690FE67B8EF5BDB35993D0AC85D1B246" );
        }

        wait 0.05;
    }
}

playheatfx()
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_BE690FE67B8EF5BDB35993D0AC85D1B246" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self notify( "_encstr_B35C101CD82CE5B437CED743AC0BA3AFCCF0" );
    self endon( "_encstr_B35C101CD82CE5B437CED743AC0BA3AFCCF0" );

    for (;;)
    {
        playfxontag( scripts\engine\utility::getfx( "_encstr_A636139BB2DCD1C9E5D7F66795938656C2D1FAB5C1" ), self, "_encstr_A94F0AD158D9BECCD80BE6A1" );
        wait( level.sentrysettings[self.turrettype].fxtime );
    }
}

turret_coolmonitor()
{
    self endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    self endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        if ( self.heatlevel > 0 )
        {
            if ( self.cooldownwaittime <= 0 )
                self.heatlevel = max( 0, self.heatlevel - 0.05 );
            else
                self.cooldownwaittime = max( 0, self.cooldownwaittime - 0.05 );
        }

        wait 0.05;
    }
}

sentry_beepsounds()
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    self endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        wait 3.0;

        if ( self isfiringturret() )
        {
            waitframe();
            continue;
        }

        self playsound( "_encstr_A884109B07504BE32A1E7CC38377D132C26A" );
    }
}

_id_13023( var_0, var_1 )
{
    self.owner endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_B32D0C5292FA421943DFF33BC535" );
    self endon( "_encstr_9D3B0803A3F0FACFDDF9" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_2 = "_encstr_AAE6145186D88BF9F368FA8260C3EA97B37DAEC4A6A2";

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_B1B0107EA86179137789A2249886F3E006E5" ) )
        var_0.minimapid = var_1 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_B1B0107EA86179137789A2249886F3E006E5" ) ]]( var_2, var_0.team, undefined, 1, 1 );

    scripts\mp\objidpoolmanager::objective_mask_showtoplayerteam( var_0.minimapid, var_0.owner );
}

_id_13020()
{
    var_0 = _calloutmarkerping_handleluinotify_brinventoryslotrequest::_id_12F67( self.origin, 140, 20 );
    var_1 = undefined;
    var_2 = 0;

    foreach ( var_4 in var_0 )
    {
        var_5 = distancesquared( var_4.origin, self.origin );

        if ( isdefined( var_1 ) && var_2 <= var_5 )
            continue;

        var_1 = var_4;
        var_2 = var_5;
    }

    if ( isdefined( var_1 ) )
    {
        var_7 = var_1 scriptabledoorangle();
        var_8 = abs( var_7 ) > 25;
        var_9 = undefined;

        foreach ( var_11 in var_0 )
        {
            if ( var_11 == var_1 )
                continue;

            if ( distancesquared( var_11.heli_intro_vo_done, var_1.heli_intro_vo_done ) < 3600 )
            {
                var_9 = var_11;
                break;
            }
        }

        var_13 = 1;

        if ( isdefined( var_9 ) )
        {
            var_14 = var_9 scriptabledoorangle();
            var_13 = abs( var_14 ) > 25;
        }

        if ( var_2 < 3600 && var_8 )
        {
            var_1.tutonplayerkilled = 1;
            var_1 _calloutmarkerping_handleluinotify_brinventoryslotrequest::matchslopekey( 1, "_encstr_B6340FE858B1D76CB73BAC397D19DBDE39" );
            self.concussionused = var_1;

            if ( isdefined( var_9 ) && var_13 )
            {
                var_9.tutonplayerkilled = 1;
                var_9 _calloutmarkerping_handleluinotify_brinventoryslotrequest::matchslopekey( 1, "_encstr_B6340FE858B1D76CB73BAC397D19DBDE39" );
                self.concusspushstart = var_9;
            }
        }
    }

    return 0;
}

_id_13021()
{
    if ( isdefined( self.concussionused ) )
    {
        self.concussionused _calloutmarkerping_handleluinotify_brinventoryslotrequest::matchslopekey( 0, "_encstr_B6340FE858B1D76CB73BAC397D19DBDE39" );
        self.concussionused.tutonplayerkilled = undefined;
        self.concussionused = undefined;
    }

    if ( isdefined( self.concusspushstart ) )
    {
        self.concusspushstart _calloutmarkerping_handleluinotify_brinventoryslotrequest::matchslopekey( 0, "_encstr_B6340FE858B1D76CB73BAC397D19DBDE39" );
        self.concusspushstart.tutonplayerkilled = undefined;
        self.concusspushstart = undefined;
    }
}
