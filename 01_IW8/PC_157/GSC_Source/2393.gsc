// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

leaderdialog( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( !isdefined( game["_encstr_B8DA073D799798C7C7"][var_0] ) )
        return;

    if ( level.teambased && !isdefined( var_1 ) )
        return;

    var_6 = level.players;

    if ( isdefined( var_1 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_8BE20CEC56E88A5958B6222CE858" ) )
            var_6 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_8BE20CEC56E88A5958B6222CE858" ) ]]( var_1, "_encstr_8875080E3685E52B93B9" );
    }

    for ( var_7 = 0; var_7 < var_6.size; var_7++ )
    {
        var_8 = var_6[var_7];

        if ( isdefined( var_3 ) && scripts\engine\utility::array_contains( var_3, var_8 ) )
            continue;

        if ( var_8 issplitscreenplayer() && !var_8 issplitscreenplayerprimary() )
            continue;

        var_8 leaderdialogonplayer_internal( var_0, var_2, undefined, var_4, var_5 );
    }
}

initstatusdialog()
{
    foreach ( var_1 in level.teamnamelist )
        level.lastteamstatustime[var_1]["_encstr_A40101"] = 0;
}

statusdialog( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( istrue( level.gameended ) )
        return;

    if ( !isdefined( level.lastteamstatustime[var_1][var_0] ) )
        level.lastteamstatustime[var_1][var_0] = 0;

    if ( isdefined( var_5 ) )
    {
        if ( gettime() < level.lastteamstatustime[var_1][var_0] + var_5 )
            return;

        var_5 = undefined;
    }
    else if ( gettime() < level.lastteamstatustime[var_1][var_0] + getdialoguedebouncetime() )
        return;

    thread delayedleaderdialog( var_0, var_1, var_2, var_3, var_4, var_5 );
    level.lastteamstatustime[var_1][var_0] = gettime();
}

delayedleaderdialog( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    wait 0.1;
    scripts\mp\utility\script::waittillslowprocessallowed();
    leaderdialog( var_0, var_1, var_2, var_3, var_4, var_5 );
}

leaderdialogonplayers( var_0, var_1, var_2, var_3 )
{
    foreach ( var_5 in var_1 )
        var_5 leaderdialogonplayer( var_0, var_2, undefined, var_3 );
}

leaderdialogonplayer( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( game["_encstr_B8DA073D799798C7C7"][var_0] ) )
        return;

    leaderdialogonplayer_internal( var_0, var_1, var_2, var_3, var_4 );
}

leaderdialogonplayer_internal( var_0, var_1, var_2, var_3, var_4 )
{
    if ( istrue( level.little_bird_mg_mp_init ) )
        return;

    if ( isdefined( level._id_11C7D ) && self [[ level._id_11C7D ]]( var_0 ) )
        return;

    if ( isdefined( var_4 ) )
    {
        var_4 = var_4 * 1000;

        if ( !isdefined( self.playerlastdialogstatus ) )
            initstatusdialogonplayer();

        if ( gettime() < self.playerlastdialogstatus["_encstr_81EF05232C5D4D"] + var_4 && self.playerlastdialogstatus["_encstr_B8DA073D799798C7C7"] == var_0 )
            return;

        self.playerlastdialogstatus["_encstr_81EF05232C5D4D"] = gettime();
        self.playerlastdialogstatus["_encstr_B8DA073D799798C7C7"] = var_0;
    }

    var_5 = self.pers["_encstr_89EF05D46BA8FD"];

    if ( level.gametype == "_encstr_9507034B25" )
        var_5 = _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::disableannouncer( self );

    if ( isdefined( var_5 ) && scripts\mp\utility\teams::isgameplayteam( var_5 ) )
    {
        var_6 = self getplayerdata( "_encstr_9F7C076CF6B5D6F6E6", "_encstr_A9441269909FC935750250703A4FC5C6EB316FD5" );
        var_7 = "_encstr_B26908191EF56B1CB0D7";

        if ( level.gametype == "_encstr_9507034B25" && tutorial_tacmap( var_0 ) )
            var_7 = "_encstr_977508916BD813382F61";

        if ( var_6 > 0 )
        {
            var_8 = tablelookupbyrow( "_encstr_81771AD6075E0B73DCED5DDC8D593967BDB46C56322CD116B8B13767", var_6, 3 );
            var_9 = var_7 + var_8 + "_encstr_984C028E" + game["_encstr_B8DA073D799798C7C7"][var_0];
        }
        else if ( scripts\cp_mp\utility\game_utility::_id_140A8() )
            var_9 = var_7 + "_encstr_958F06891B0D27EB" + game["_encstr_B8DA073D799798C7C7"][var_0];
        else
        {
            var_8 = scripts\mp\utility\teams::getteamvoiceinfix( var_5 );
            var_9 = var_7 + var_8 + "_encstr_B319041BBA79" + game["_encstr_B8DA073D799798C7C7"][var_0];
        }

        var_9 = tolower( var_9 );
        self queuedialogforplayer( var_9, var_0, 2, var_1, var_2, var_3 );
    }
}

tutorial_tacmap( var_0 )
{
    var_1 = 0;

    if ( issubstr( var_0, "_encstr_95B612AB8041DE4B9645020768F937A2FB38E2E2" ) || issubstr( var_0, "_encstr_AA820C47809B9A5345E7BAF8E778" ) || issubstr( var_0, "_encstr_AF340B0B40F9E2933B1FF2CA60" ) )
        var_1 = 1;

    return var_1;
}

initstatusdialogonplayer()
{
    self.playerlastdialogstatus["_encstr_81EF05232C5D4D"] = 0;
    self.playerlastdialogstatus["_encstr_B8DA073D799798C7C7"] = "_encstr_A40101";
}

playkillstreakusedialog( var_0 )
{
    var_1 = self.team;
    var_2 = [ self ];
    var_3 = var_1;

    if ( level.gametype == "_encstr_9507034B25" )
        var_3 = _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::disableannouncer( self );

    if ( level.teambased )
    {
        if ( isdefined( level.killstreakactivatedtime[var_0] ) )
        {
            if ( isdefined( level.killstreakactivatedtime[var_0][var_1] ) )
            {
                if ( gettime() < level.killstreakactivatedtime[var_0][var_1] )
                    return;
            }
        }

        level.killstreakactivatedtime[var_0][var_1] = gettime() + 10000;
    }

    var_4 = self getothersplitscreenplayer();

    if ( isdefined( var_4 ) )
        var_2[var_2.size] = var_4;

    if ( level.teambased )
    {
        var_5 = get_armsrace_interaction_loc( var_0, 1 );
        var_6 = get_armsrace_interaction_loc( var_0 );

        if ( istrue( var_5 ) )
            leaderdialog( var_3 + "_encstr_BABC0B59BC7502FD50801B5741" + var_0 + "_encstr_ABFF097D96CD26EDEA9B32", var_1, "_encstr_A6C61022F12B1047BB8B98B07219338B6764", var_2 );

        if ( !isdefined( var_4 ) )
            var_2 = undefined;

        if ( istrue( var_6 ) && scripts\mp\utility\killstreak::getkillstreakenemyusedialogue( var_0 ) )
        {
            foreach ( var_8 in level.teamnamelist )
            {
                if ( var_8 != var_1 )
                    leaderdialog( var_3 + "_encstr_A11608AFAC37CAB5BC7D" + var_0 + "_encstr_ABFF097D96CD26EDEA9B32", var_8, "_encstr_A6C61022F12B1047BB8B98B07219338B6764", var_2 );
            }

            return;
        }
    }
    else if ( scripts\mp\utility\killstreak::getkillstreakenemyusedialogue( var_0 ) )
        leaderdialog( var_3 + "_encstr_A11608AFAC37CAB5BC7D" + var_0 + "_encstr_ABFF097D96CD26EDEA9B32", undefined, "_encstr_A6C61022F12B1047BB8B98B07219338B6764", var_2 );
}

playkillstreakdialogonplayer( var_0, var_1, var_2, var_3 )
{
    if ( level.showingfinalkillcam )
        return;

    var_0 = getbasekillstreakdialog( var_0 );

    if ( !isdefined( game["_encstr_B8DA073D799798C7C7"][var_0] ) )
        return;

    var_4 = game["_encstr_B8DA073D799798C7C7"][var_0];

    if ( issubstr( var_4, "_encstr_891904BD1CBE" + var_0 ) || var_4 == "_encstr_891904BD1CBE" + var_0 )
        scripts\cp_mp\utility\dialog_utility::operatordialogonplayer( var_0, var_1, var_2, var_3 );
    else
        leaderdialogonplayer( var_0, var_1, var_2, var_3 );
}

getbasekillstreakdialog( var_0 )
{
    var_1 = strtok( var_0, "_encstr_984C028E" );
    var_2 = undefined;

    foreach ( var_6, var_4 in var_1 )
    {
        if ( !isdefined( var_2 ) )
            var_2 = var_4;
        else
            var_2 = var_2 + var_4;

        var_5 = var_1[var_6 + 1];

        if ( isdefined( var_5 ) )
        {
            if ( var_5 == "_encstr_B21F0527B04EAC" || var_5 == "_encstr_898C0763B29D2BB9C8" || var_5 == "_encstr_B160058A580B0E" )
                break;
            else
                var_2 = var_2 + "_encstr_984C028E";
        }
    }

    return var_2;
}

get_armsrace_interaction_loc( var_0, var_1 )
{
    var_2 = 1;

    if ( level.gametype == "_encstr_9507034B25" )
    {
        if ( istrue( var_1 ) )
        {
            switch ( var_0 )
            {
                case "_encstr_9867080A50FD0FDBE03F":
                case "_encstr_8262160BC849A9EB6FE5423DD833F17FD32BF39750E3E312":
                case "_encstr_8BD90EB62CB9EAC28DFAD1EAE49C56D1":
                    var_2 = 0;
                    break;
            }
        }
        else
        {
            switch ( var_0 )
            {
                case "_encstr_AF340B0B40F9E2933B1FF2CA60":
                case "_encstr_AA820C47809B9A5345E7BAF8E778":
                case "_encstr_95B612AB8041DE4B9645020768F937A2FB38E2E2":
                case "_encstr_A2950E1A90EF5ED770CDAF8CE63873E7":
                case "_encstr_9867080A50FD0FDBE03F":
                case "_encstr_8BFA1059C1A8717A6058B8E5FAB037E3D628":
                case "_encstr_8262160BC849A9EB6FE5423DD833F17FD32BF39750E3E312":
                case "_encstr_970316AA19E011BA56B9CF9BF70D134768A1293773C0CAE2":
                case "_encstr_B61904AEB067":
                case "_encstr_87060BC3FA139D30C0C75F63EE":
                case "_encstr_8BD90EB62CB9EAC28DFAD1EAE49C56D1":
                case "_encstr_8CE60CA3DE5BC2AFB98EC94B6D59":
                case "_encstr_B7F514E0C9AC364BE65ADEB9BEB05A279BA327D2ADB2":
                    var_2 = 0;
                    break;
            }
        }
    }
    else if ( level.gametype == "_encstr_BD19047616EB" )
    {
        switch ( var_0 )
        {
            case "_encstr_9867080A50FD0FDBE03F":
            case "_encstr_8262160BC849A9EB6FE5423DD833F17FD32BF39750E3E312":
            case "_encstr_8BD90EB62CB9EAC28DFAD1EAE49C56D1":
                var_2 = 0;
                break;
        }
    }
    else if ( istrue( var_1 ) )
    {
        switch ( var_0 )
        {
            case "_encstr_8262160BC849A9EB6FE5423DD833F17FD32BF39750E3E312":
                var_2 = 0;
                break;
        }
    }

    return var_2;
}

sitrepdialogonplayer( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( game["_encstr_B8DA073D799798C7C7"][var_0] ) )
        return;

    var_5 = gettime();

    if ( !isdefined( self.lastsitreptime ) || var_5 < self.lastsitreptime + 30000 || var_5 < level.lastteamstatustime[self.team][var_0] + 5000 )
        return;

    if ( isdefined( var_4 ) )
        var_6 = var_4;
    else
        var_6 = scripts\mp\utility\teams::getteamvoiceinfix( self.team );

    self.lastsitreptime = var_5;
    var_7 = "_encstr_B26908191EF56B1CB0D7" + var_6 + "_encstr_B319041BBA79" + game["_encstr_B8DA073D799798C7C7"][var_0];
    self queuedialogforplayer( var_7, var_0, 2, var_1, var_2, var_3 );
}

getkillstreakdialogcooldown()
{
    return 10;
}

getdialoguedebouncetime()
{
    if ( istrue( level.longdialoguecooldown ) )
        return 15000;
    else
        return 5000;
}
