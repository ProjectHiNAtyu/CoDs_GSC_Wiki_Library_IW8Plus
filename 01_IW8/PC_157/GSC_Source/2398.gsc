// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

getotherteam( var_0 )
{
    return scripts\mp\utility\teams::getenemyteams( var_0 );
}

gettimepassed()
{
    if ( !isdefined( level.starttime ) || !isdefined( level.discardtime ) )
        return 0;

    if ( level.timerstopped )
        return level.timerpausetime - level.starttime - level.discardtime - level.overtimetotal;
    else
        return gettime() - level.starttime - level.discardtime - level.overtimetotal;
}

gettimepassedpercentage()
{
    var_0 = gettimelimit();

    if ( var_0 == 0 )
        return 0;

    return gettimepassed() / ( gettimelimit() * 1000 ) * 100;
}

getsecondspassed()
{
    return gettimepassed() / 1000;
}

getminutespassed()
{
    return getsecondspassed() / 60;
}

setuipostgamefade( var_0, var_1 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( istrue( level.nukedetonated ) )
        return;

    if ( !isdefined( self.fadecurrent ) )
        self.fadecurrent = 0.0;

    if ( self.fadecurrent == var_0 )
        return;

    if ( isdefined( var_1 ) )
        wait( var_1 );

    self notify( "_encstr_A16E129B593AAAA482ED6EA3D12C5B95640B19CA" );
    self endon( "_encstr_A16E129B593AAAA482ED6EA3D12C5B95640B19CA" );

    if ( self.fadecurrent < var_0 )
        self.fadecurrent = clamp( self.fadecurrent + 0.5 * abs( self.fadecurrent - var_0 ), 0.0, 1.0 );
    else
        self.fadecurrent = clamp( self.fadecurrent - 0.5 * abs( self.fadecurrent - var_0 ), 0.0, 1.0 );

    self setclientomnvar( "_encstr_A8760EDBE20F55107B0181EF2E661095", self.fadecurrent );
    wait 0.1;
    self.fadecurrent = var_0;
    self setclientomnvar( "_encstr_A8760EDBE20F55107B0181EF2E661095", self.fadecurrent );
}

registerroundswitchdvar( var_0, var_1, var_2, var_3 )
{
    scripts\mp\utility\dvars::registerwatchdvarint( "_encstr_97460C239ABF5040822F83A1232C", var_1 );
    var_0 = "_encstr_A61805573F9318" + var_0 + "_encstr_B6730D20E22F3B45879310F8FB1E01";
    level.roundswitchdvar = var_0;
    level.roundswitchmin = var_2;
    level.roundswitchmax = var_3;
    level.roundswitch = getdvarint( var_0, var_1 );

    if ( level.roundswitch < var_2 )
        level.roundswitch = var_2;
    else if ( level.roundswitch > var_3 )
        level.roundswitch = var_3;
}

registerroundlimitdvar( var_0, var_1 )
{
    scripts\mp\utility\dvars::registerwatchdvarint( "_encstr_9EBD0B2D779BF8F0B48448C0EB", var_1 );
}

registernumteamsdvar( var_0, var_1 )
{
    scripts\mp\utility\dvars::registerwatchdvarint( "_encstr_B6FF09730B52EDB747354F", var_1 );
}

registerwinlimitdvar( var_0, var_1 )
{
    scripts\mp\utility\dvars::registerwatchdvarint( "_encstr_88B209DD5A731B2D6BB4A3", var_1 );
}

registerwinbytwoenableddvar( var_0, var_1 )
{
    scripts\mp\utility\dvars::registerwatchdvarint( "_encstr_97B7103FA8288A7B194C255F38DB025C9168", var_1 );
}

registerwinbytwomaxroundsdvar( var_0, var_1 )
{
    scripts\mp\utility\dvars::registerwatchdvarint( "_encstr_9CFD12E743E00E7FA54B5A6291FB1B0540256C6B", var_1 );
}

registerdogtagsenableddvar( var_0, var_1 )
{
    scripts\mp\utility\dvars::registerwatchdvarint( "_encstr_9531083D4FC7D8510F9E", var_1 );
}

registerscorelimitdvar( var_0, var_1 )
{
    scripts\mp\utility\dvars::registerwatchdvarint( "_encstr_95FB0B239728CACF6948BAE2F3", var_1 );
}

registertimelimitdvar( var_0, var_1 )
{
    scripts\mp\utility\dvars::registerwatchdvarfloat( "_encstr_AA250A1D7CF2EB9071A740A0", var_1 );
    setdvar( "_encstr_98E90D57B4AF47D25B95635ADA5AE8", gettimelimit() );
}

registerhalftimedvar( var_0, var_1 )
{
    scripts\mp\utility\dvars::registerwatchdvarint( "_encstr_87DE09BA1109DB5B4B8B3D", var_1 );
    setdvar( "_encstr_B7B40C605A1901F96B86DD5B9597", gethalftime() );
}

registernumlivesdvar( var_0, var_1 )
{
    scripts\mp\utility\dvars::registerwatchdvarint( "_encstr_87AE09780B0509AAF3D7EE", var_1 );
}

registernumrevivesdvar( var_0, var_1 )
{
    scripts\mp\utility\dvars::registerwatchdvarint( "_encstr_A6BE0B088B088BAD1BCCD6D996", var_1 );
}

setovertimelimitdvar( var_0 )
{
    setdvar( "_encstr_A6E312286B07EA5BB86D8834C3A845A94B335361", var_0 );
}

registerlaststandhealthdvar( var_0 )
{
    scripts\mp\utility\dvars::registerwatchdvarint( "_encstr_B13810E2099EFBFA90FB2E2CC1703EC34580", var_0 );
}

registerlaststandrevivehealthdvar( var_0 )
{
    scripts\mp\utility\dvars::registerwatchdvarint( "_encstr_AD2516B1166EE8D4E8B0E63229ACCE96CE598459B08DD186", var_0 );
}

registerlaststandtimerdvar( var_0 )
{
    scripts\mp\utility\dvars::registerwatchdvarfloat( "_encstr_AAF40FFC53088BD7A5894AF23773678778", var_0 );
}

registerlaststandrevivetimerdvar( var_0 )
{
    scripts\mp\utility\dvars::registerwatchdvarfloat( "_encstr_8C0615C60BCDD1A6A3C273C829ACECA53B562A5A5B5639", var_0 );
}

registerlaststandweapondvar( var_0 )
{
    scripts\mp\utility\dvars::registerwatchdvar( "_encstr_8C041081EE8359C7DC27E8B0D7E55989AAD5", var_0 );
}

registerlaststandweapondelaydvar( var_0 )
{
    scripts\mp\utility\dvars::registerwatchdvarfloat( "_encstr_A2B9151B58378EA6E816E6C8EACA0B07DB9B1156C62CE5", var_0 );
}

registerlaststandsuicidetimerdvar( var_0 )
{
    scripts\mp\utility\dvars::registerwatchdvarfloat( "_encstr_8967165DEB83CB2ABBA798820F5BBCD3609945A3876D6BF3", var_0 );
}

registerlaststandinvulntimerdvar( var_0 )
{
    scripts\mp\utility\dvars::registerwatchdvarfloat( "_encstr_B72715E2099EFBFA90FB2E2CC328FBA74940D93A107D2B", var_0 );
}

registerlaststandrevivedecayscaledvar( var_0 )
{
    scripts\mp\utility\dvars::registerwatchdvarfloat( "_encstr_8B291A4571C02C61758BFBAB95957B79B059F78FA9B8D9B9C6A3FBA7", var_0 );
}

isroundbased()
{
    if ( !level.teambased )
        return 0;

    if ( level.winlimit != 1 && level.roundlimit != 1 )
        return 1;

    if ( getgametype() == "_encstr_AD0703D788" || getgametype() == "_encstr_BD07030251" || getgametype() == "_encstr_B14F0606E93B7FC3" || getgametype() == "_encstr_B9F906A857D2014D" || getgametype() == "_encstr_B3A205D647D68D" )
        return 1;

    return 0;
}

safehouse_vo_return_start( var_0 )
{
    return "_encstr_ADDB113BC0C19D011144DDD923CBCA5C0B78F3";
}

vehicle_collision_ignorefuturemultievent( var_0 )
{
    if ( var_0 == safehouse_vo_return_start() && ( isdefined( level._id_14687 ) || deposit_from_compromised_convoy_delayed_failsafe() ) )
        return 1;

    return 0;
}

deposit_from_compromised_convoy_delayed_failsafe()
{
    return getdvarint( "_encstr_BE3912B2E95339ED5EEF907B27F9FF276725D3DF", 0 ) > 0 || istrue( level.disable_oob_immunity_on_riders );
}

isfirstround()
{
    if ( !level.teambased )
        return 1;

    if ( game["_encstr_8AC30D9CDEBA73466E41B1585E568C"] == 0 )
        return 1;

    return 0;
}

nextroundisfinalround()
{
    if ( level.forcedend )
        return 1;

    if ( !level.teambased )
        return 1;

    if ( level.roundlimit > 1 && game["_encstr_8AC30D9CDEBA73466E41B1585E568C"] >= level.roundlimit - 1 && !istimetobeatrulegametype() && !isscoretobeatrulegametype() )
        return 1;

    if ( isovertimesupportedgametype() && ( hitroundlimit() || hitwinlimit() ) )
    {
        if ( shouldplaywinbytwo() && islastwinbytwo() )
            return 1;
        else if ( istimetobeatrulegametype() || isscoretobeatrulegametype() )
        {
            if ( game["_encstr_886315DEB3CAE4475AB6954AEDEACD19DCA01B16BCB232"] == 1 )
                return 1;
        }
        else if ( !level.playovertime )
            return 1;
    }

    var_0 = 0;

    foreach ( var_2 in level.teamnamelist )
    {
        if ( level vehicle_collision_ignorefuturemultievent( var_2 ) )
            continue;

        var_3 = getroundswon( var_2 );

        if ( var_3 == level.winlimit - 1 )
        {
            var_0 = 1;
            break;
        }
    }

    var_5 = level.winlimit > 0 && var_0;

    if ( var_5 && allteamstied() )
    {
        if ( isovertimesupportedgametype() )
            return 0;
        else
            return 1;
    }

    return 0;
}

nextroundismatchpoint()
{
    if ( level.forcedend )
        return 1;

    if ( !level.teambased )
        return 1;

    if ( level.roundlimit > 1 && game["_encstr_8AC30D9CDEBA73466E41B1585E568C"] >= level.roundlimit - 1 && !istimetobeatrulegametype() && !isscoretobeatrulegametype() )
        return 1;

    if ( isovertimesupportedgametype() && ( hitroundlimit() || hitwinlimit() ) )
    {
        if ( shouldplaywinbytwo() && islastwinbytwo() )
            return 1;
        else if ( istimetobeatrulegametype() || isscoretobeatrulegametype() )
        {
            if ( game["_encstr_886315DEB3CAE4475AB6954AEDEACD19DCA01B16BCB232"] == 1 )
                return 1;
        }
        else if ( !level.playovertime )
            return 1;
    }

    var_0 = 0;

    foreach ( var_2 in level.teamnamelist )
    {
        if ( level vehicle_collision_ignorefuturemultievent( var_2 ) )
            continue;

        var_3 = getroundswon( var_2 );

        if ( var_3 == level.winlimit - 1 )
        {
            if ( shouldplaywinbytwo() && istrue( game["_encstr_B2B214312A778FD0F6D16B51DDDED8DEC351A818C2C3"] ) )
                game["_encstr_B2B214312A778FD0F6D16B51DDDED8DEC351A818C2C3"] = 0;

            return 1;
        }
    }

    return 0;
}

wasonlyround()
{
    if ( level.playovertime )
        return 0;

    if ( !level.teambased )
        return 1;

    if ( isdefined( level.onlyroundoverride ) )
        return 0;

    if ( level.winlimit == 1 && hitwinlimit() )
        return 1;

    if ( level.roundlimit == 1 )
        return 1;

    return 0;
}

waslastround()
{
    if ( level.forcedend )
        return 1;

    if ( istrue( level.initcircuitbreakers ) )
        return 1;

    if ( wasonlyround() )
        return 1;

    if ( !level.teambased )
        return 1;

    if ( hitroundlimit() || hitwinlimit() )
        return !level.playovertime;

    return 0;
}

iswinbytworulegametype()
{
    switch ( getgametype() )
    {
        case "_encstr_B14F0606E93B7FC3":
        case "_encstr_AD0703D788":
        case "_encstr_BD07030251":
        case "_encstr_9DB606854E567385":
            return getdvarint( "_encstr_A61805573F9318" + getgametype() + "_encstr_95D311D71080DE904B951B15753DFA9A8838B3", 0 ) == 1;
    }

    return 0;
}

getmaxwinbytworounds()
{
    return getdvarint( "_encstr_A61805573F9318" + getgametype() + "_encstr_9F05139F0F6B3A9A18471B651CA0D8B13093D3CBAF", level.winlimit );
}

shouldplaywinbytwo()
{
    var_0 = game["_encstr_BD1B0AB298DBD25C53F9F7EB"]["_encstr_BC850785638DA59537"];
    var_1 = game["_encstr_BD1B0AB298DBD25C53F9F7EB"]["_encstr_BA840579D3F7F6"];
    return iswinbytworulegametype() && abs( var_0 - var_1 ) < 2 && game["_encstr_886315DEB3CAE4475AB6954AEDEACD19DCA01B16BCB232"] < getmaxwinbytworounds();
}

islastwinbytwo()
{
    return shouldplaywinbytwo() && game["_encstr_886315DEB3CAE4475AB6954AEDEACD19DCA01B16BCB232"] == getmaxwinbytworounds() - 1;
}

_id_1332B()
{
    var_0 = game["_encstr_BD1B0AB298DBD25C53F9F7EB"]["_encstr_BC850785638DA59537"];
    var_1 = game["_encstr_BD1B0AB298DBD25C53F9F7EB"]["_encstr_BA840579D3F7F6"];
    return abs( var_0 - var_1 ) < 2;
}

istimetobeatrulegametype()
{
    switch ( getgametype() )
    {
        case "_encstr_A9D008C185E5D8B7C28C":
        case "_encstr_B29B05BA531D81":
        case "_encstr_BA1904C7A174":
            return 1;
    }

    return 0;
}

intimetobeat()
{
    return isdefined( game["_encstr_A96D0726D4272B4372"] ) && game["_encstr_A96D0726D4272B4372"] == "_encstr_A9680A9359367BC919A8A290";
}

settimetobeat( var_0 )
{
    if ( !istimetobeatrulegametype() )
        return 0;

    var_1 = getsecondspassed();
    var_2 = scripts\mp\gamescore::_getteamscore( var_0 );

    if ( !istimetobeatvalid() || var_1 < game["_encstr_89C00B83B0F0FDD1380D17FF99"] && var_2 >= game["_encstr_97FD1053FB8B020CB071FFF7D8EFF36A4D05"] )
    {
        if ( game["_encstr_B1D40F332A0F051175EA6B5BE49350DFD7"] != "_encstr_AABA05236DC831" && game["_encstr_B1D40F332A0F051175EA6B5BE49350DFD7"] != var_0 )
            game["_encstr_A3900E9B4BE03511877E3F364D1F4AFC"] = game["_encstr_89C00B83B0F0FDD1380D17FF99"];

        game["_encstr_89C00B83B0F0FDD1380D17FF99"] = var_1;
        game["_encstr_B1D40F332A0F051175EA6B5BE49350DFD7"] = var_0;
        game["_encstr_97FD1053FB8B020CB071FFF7D8EFF36A4D05"] = var_2;
        return 1;
    }

    return 0;
}

istimetobeatvalid()
{
    return game["_encstr_89C00B83B0F0FDD1380D17FF99"] != 0;
}

shouldplaytimetobeatot()
{
    return istimetobeatvalid() && game["_encstr_886315DEB3CAE4475AB6954AEDEACD19DCA01B16BCB232"] == 1;
}

isscoretobeatrulegametype()
{
    switch ( getgametype() )
    {
        case "_encstr_A81F055330F3C8":
            return 1;
    }

    return 0;
}

setscoretobeat( var_0, var_1 )
{
    if ( !isscoretobeatrulegametype() )
        return 0;

    var_2 = game["_encstr_B1D40F332A0F051175EA6B5BE49350DFD7"] != "_encstr_AABA05236DC831" && var_1 == game["_encstr_97FD1053FB8B020CB071FFF7D8EFF36A4D05"];

    if ( var_1 >= game["_encstr_97FD1053FB8B020CB071FFF7D8EFF36A4D05"] )
    {
        if ( game["_encstr_B1D40F332A0F051175EA6B5BE49350DFD7"] != "_encstr_AABA05236DC831" && game["_encstr_B1D40F332A0F051175EA6B5BE49350DFD7"] != var_0 )
            game["_encstr_8037131574FAE3AF4F13380BD3AB813FF39F10918F"] = game["_encstr_97FD1053FB8B020CB071FFF7D8EFF36A4D05"];

        game["_encstr_B1D40F332A0F051175EA6B5BE49350DFD7"] = var_0;
        game["_encstr_97FD1053FB8B020CB071FFF7D8EFF36A4D05"] = var_1;
    }

    foreach ( var_4 in level.players )
    {
        var_4 setclientomnvar( "_encstr_8BF1197783CFEF105BBF1D6D09C0D169D8F3782789A07F7ED39055", scripts\engine\utility::ter_op( var_4.team == game["_encstr_B1D40F332A0F051175EA6B5BE49350DFD7"], game["_encstr_97FD1053FB8B020CB071FFF7D8EFF36A4D05"], game["_encstr_8037131574FAE3AF4F13380BD3AB813FF39F10918F"] ) );
        var_4 setclientomnvar( "_encstr_890416AED27DCAB959DA5ED73A4BDA95FA3AF67D989585D1", scripts\engine\utility::ter_op( var_4.team != game["_encstr_B1D40F332A0F051175EA6B5BE49350DFD7"], game["_encstr_97FD1053FB8B020CB071FFF7D8EFF36A4D05"], game["_encstr_8037131574FAE3AF4F13380BD3AB813FF39F10918F"] ) );
    }

    if ( var_2 )
        return "_encstr_8A190423A45D";
    else
        return game["_encstr_B1D40F332A0F051175EA6B5BE49350DFD7"];
}

shouldplayscoretobeatot()
{
    return isscoretobeatrulegametype() && game["_encstr_886315DEB3CAE4475AB6954AEDEACD19DCA01B16BCB232"] == 1;
}

isovertimesupportedgametype()
{
    if ( isgamebattlematch() )
        return 1;

    switch ( getgametype() )
    {
        case "_encstr_A9D008C185E5D8B7C28C":
        case "_encstr_881904634971":
        case "_encstr_88AB06125940BBF8":
        case "_encstr_A81F055330F3C8":
        case "_encstr_B29B05BA531D81":
        case "_encstr_BA1904C7A174":
            return 1;
        case "_encstr_9507035309":
        case "_encstr_B14F0606E93B7FC3":
        case "_encstr_AD0703D788":
        case "_encstr_BD07030251":
        case "_encstr_9DB606854E567385":
            return iswinbytworulegametype();
    }

    return 0;
}

getmaxovertimeroundsbygametype()
{
    if ( isgamebattlematch() )
        return -1;

    var_0 = 0;

    switch ( getgametype() )
    {
        case "_encstr_A9D008C185E5D8B7C28C":
        case "_encstr_88AB06125940BBF8":
        case "_encstr_B29B05BA531D81":
        case "_encstr_BA1904C7A174":
        case "_encstr_B14F0606E93B7FC3":
        case "_encstr_AD0703D788":
        case "_encstr_BD07030251":
            var_0 = 2;
            break;
        case "_encstr_881904634971":
        case "_encstr_9507035309":
            var_0 = 1;
            break;
    }

    if ( isanymlgmatch() && !istimetobeatrulegametype() )
        return -1;

    return var_0;
}

getwingamebytype()
{
    if ( !isdefined( level.wingamebytype ) )
    {
        if ( !isroundbased() || !isobjectivebased() || ismoddedroundgame() )
            level.wingamebytype = "_encstr_B4040B6BBF898046C247E5C3DF";
        else
            level.wingamebytype = "_encstr_BD1B0AB298DBD25C53F9F7EB";
    }

    return level.wingamebytype;
}

issimultaneouskillenabled()
{
    if ( !isdefined( level.simultaneouskillenabled ) )
        level.simultaneouskillenabled = getdvarint( "_encstr_AFED0B756FB96E09BE8B474361", 0 ) == 0;

    return level.simultaneouskillenabled;
}

cantiebysimultaneouskill()
{
    if ( !issimultaneouskillenabled() )
        return 0;

    var_0 = 0;

    switch ( getgametype() )
    {
        case "_encstr_8807031CC1":
        case "_encstr_A419049B62BB":
        case "_encstr_B31D06435BCB61E0":
        case "_encstr_8918049D5DDC":
        case "_encstr_875606482B58E505":
        case "_encstr_BD19047616EB":
            var_0 = 1;
    }

    return var_0;
}

shouldplayovertime()
{
    if ( !hitroundlimit() && !hitwinlimit() )
        return 0;

    if ( !isovertimesupportedgametype() )
        return 0;

    var_0 = allteamstied();

    if ( var_0 && inovertime() )
    {
        var_1 = getmaxovertimeroundsbygametype();
        var_0 = scripts\engine\utility::ter_op( var_1 == -1, 1, game["_encstr_886315DEB3CAE4475AB6954AEDEACD19DCA01B16BCB232"] < var_1 );
    }

    var_2 = shouldplaywinbytwo();
    var_3 = shouldplaytimetobeatot();
    var_4 = shouldplayscoretobeatot();
    return !level.forcedend && ( var_0 || var_2 || var_3 || var_4 );
}

resetscoreonroundstart()
{
    if ( istrue( level.resetscoreonroundstart ) )
        return 1;

    return ( getgametype() == "_encstr_BA1904C7A174" || getgametype() == "_encstr_88AB06125940BBF8" ) && !inovertime() && getwingamebytype() == "_encstr_BD1B0AB298DBD25C53F9F7EB";
}

canplayhalfwayvo()
{
    if ( !isdefined( level.didhalfscorevoboost ) )
        level.didhalfscorevoboost = 0;

    if ( level.didhalfscorevoboost )
        return 0;

    switch ( getgametype() )
    {
        case "_encstr_BC7205C8ABFDE7":
        case "_encstr_9B290667C6D043EF":
        case "_encstr_8807031CC1":
        case "_encstr_A419049B62BB":
        case "_encstr_B7D7054F3030F9":
        case "_encstr_BA07038803":
        case "_encstr_8C0D05A9215D20":
        case "_encstr_B31D06435BCB61E0":
        case "_encstr_9E91056EB77B0E":
        case "_encstr_B6EF0559D4F798":
        case "_encstr_9507035309":
        case "_encstr_B29B05BA531D81":
        case "_encstr_9318045AFDDD":
        case "_encstr_87E507D23766566CD1":
        case "_encstr_875606482B58E505":
        case "_encstr_BD19047616EB":
            return 1;
        case "_encstr_B1CF08BFE9A8A36F90B9":
        case "_encstr_8918049D5DDC":
        case "_encstr_BA1904C7A174":
        case "_encstr_B14F0606E93B7FC3":
        case "_encstr_AD0703D788":
        case "_encstr_BD07030251":
            return 0;
        default:
            return 0;
    }
}

hittimelimit()
{
    if ( scripts\mp\utility\dvars::getwatcheddvar( "_encstr_AA250A1D7CF2EB9071A740A0" ) <= 0 )
        return 0;

    var_0 = scripts\mp\gamelogic::gettimeremaining();

    if ( var_0 > 0 )
        return 0;

    return 1;
}

hitroundlimit()
{
    if ( level.roundlimit <= 0 )
        return 0;

    return game["_encstr_8AC30D9CDEBA73466E41B1585E568C"] >= level.roundlimit;
}

hitscorelimit()
{
    if ( isobjectivebased() )
        return 0;

    if ( level.roundscorelimit <= 0 )
        return 0;

    if ( level.teambased )
    {
        foreach ( var_1 in level.teamnamelist )
        {
            if ( game["_encstr_B4040B6BBF898046C247E5C3DF"][var_1] >= level.roundscorelimit )
                return 1;
        }
    }
    else
    {
        for ( var_3 = 0; var_3 < level.players.size; var_3++ )
        {
            var_4 = level.players[var_3];

            if ( isdefined( var_4.score ) && var_4.score >= level.roundscorelimit )
                return 1;
        }
    }

    return 0;
}

hitwinlimit()
{
    if ( level.winlimit <= 0 )
        return 0;

    if ( !level.teambased )
        return 1;

    foreach ( var_1 in level.teamnamelist )
    {
        if ( getroundswon( var_1 ) >= level.winlimit )
            return 1;
    }

    return 0;
}

getscorelimit()
{
    if ( isroundbased() )
    {
        if ( level.roundlimit )
            return level.roundlimit;
        else
            return level.winlimit;
    }
    else
        return level.roundscorelimit;
}

getroundswon( var_0 )
{
    return game["_encstr_BD1B0AB298DBD25C53F9F7EB"][var_0];
}

allteamstied()
{
    var_0 = getwingamebytype();
    var_1 = undefined;

    foreach ( var_3 in level.teamnamelist )
    {
        if ( !isdefined( var_1 ) )
        {
            var_1 = game[var_0][var_3];
            continue;
        }

        if ( var_1 != game[var_0][var_3] )
            return 0;
    }

    return 1;
}

isobjectivebased()
{
    return level.objectivebased;
}

gettimelimit()
{
    if ( inovertime() && ( !isdefined( game["_encstr_984B0F48FD26C0DA22476D435BDB13D8A5"] ) || !game["_encstr_984B0F48FD26C0DA22476D435BDB13D8A5"] ) )
    {
        if ( istrue( game["_encstr_89C00B83B0F0FDD1380D17FF99"] ) )
            return game["_encstr_89C00B83B0F0FDD1380D17FF99"];
        else
        {
            var_0 = getdvarfloat( "_encstr_A6E312286B07EA5BB86D8834C3A845A94B335361" );

            if ( var_0 > 0 )
                return var_0;
            else
                return scripts\mp\utility\dvars::getwatcheddvar( "_encstr_AA250A1D7CF2EB9071A740A0" );
        }
    }
    else if ( isdefined( level.extratime ) && level.extratime > 0 )
        return scripts\mp\utility\dvars::getwatcheddvar( "_encstr_AA250A1D7CF2EB9071A740A0" ) + level.extratime;
    else
        return scripts\mp\utility\dvars::getwatcheddvar( "_encstr_AA250A1D7CF2EB9071A740A0" );
}

gethalftime()
{
    if ( inovertime() )
        return 0;
    else if ( isdefined( game["_encstr_984B0F48FD26C0DA22476D435BDB13D8A5"] ) && game["_encstr_984B0F48FD26C0DA22476D435BDB13D8A5"] )
        return 0;
    else
        return scripts\mp\utility\dvars::getwatcheddvar( "_encstr_87DE09BA1109DB5B4B8B3D" );
}

inovertime()
{
    return isdefined( game["_encstr_A96D0726D4272B4372"] ) && game["_encstr_A96D0726D4272B4372"] == "_encstr_AA6D09DBD92B93E8D2D695";
}

gamehasstarted()
{
    if ( isdefined( level.gamehasstarted ) )
        return level.gamehasstarted;

    if ( level.teambased )
    {
        foreach ( var_1 in level.teamnamelist )
        {
            if ( scripts\mp\utility\teams::getteamdata( var_1, "_encstr_A9310B43529AEF43D72F68D514" ) )
                return 1;
        }

        return 0;
    }

    return level.maxplayercount > 1;
}

getlivingplayers( var_0 )
{
    var_1 = [];

    foreach ( var_3 in level.players )
    {
        if ( !isalive( var_3 ) )
            continue;

        if ( level.teambased && isdefined( var_0 ) )
        {
            if ( var_0 == var_3.pers["_encstr_89EF05D46BA8FD"] )
                var_1[var_1.size] = var_3;

            continue;
        }

        var_1[var_1.size] = var_3;
    }

    return var_1;
}

rankingenabled()
{
    if ( !isplayer( self ) )
        return 0;

    return level.rankedmatch && !self.usingonlinedataoffline;
}

onlinestatsenabled()
{
    if ( !isplayer( self ) )
        return 0;

    return level.onlinestatsenabled && !self.usingonlinedataoffline;
}

privatematch()
{
    return level.onlinegame && getdvarint( "_encstr_B3390BA3091FD489090E7A2219" );
}

lobbyteamselectenabled()
{
    return level.systemlink || privatematch() && getdvarint( "_encstr_9E900B251FFF3A23D044E91130", 0 ) || _func_426();
}

matchmakinggame()
{
    return level.matchmakingmatch;
}

getgametypenumlives()
{
    return scripts\mp\utility\dvars::getwatcheddvar( "_encstr_87AE09780B0509AAF3D7EE" );
}

getlastlivingplayer( var_0 )
{
    var_1 = undefined;

    foreach ( var_3 in level.players )
    {
        if ( isdefined( var_0 ) && var_3.team != var_0 )
            continue;

        if ( !var_3 scripts\cp_mp\utility\player_utility::_isalive() && !var_3 scripts\mp\playerlogic::mayspawn() )
            continue;

        if ( isdefined( var_3.switching_teams ) && var_3.switching_teams )
            continue;

        var_1 = var_3;
    }

    return var_1;
}

_id_13E13()
{
    var_0 = undefined;

    foreach ( var_2 in level.players )
    {
        if ( !var_2 scripts\cp_mp\utility\player_utility::_isalive() && !var_2 scripts\mp\playerlogic::mayspawn() )
            continue;

        if ( level.codcasterenabled )
        {
            if ( var_2 ismlgspectator() )
                continue;
        }

        if ( isdefined( var_0 ) )
            return undefined;
        else
            var_0 = var_2;
    }

    if ( isdefined( var_0 ) )
        return var_0;
    else
        return undefined;
}

getpotentiallivingplayers()
{
    var_0 = [];

    foreach ( var_2 in level.players )
    {
        if ( !var_2 scripts\cp_mp\utility\player_utility::_isalive() && !var_2 scripts\mp\playerlogic::mayspawn() )
            continue;

        if ( level.codcasterenabled )
        {
            if ( var_2 ismlgspectator() )
                continue;
        }

        var_0[var_0.size] = var_2;
    }

    return var_0;
}

denysystemicteamchoice()
{
    if ( !isbot( self ) && !initmaxspeedforpathlengthtable( self ) )
    {
        if ( isgamebattlematch() )
            return 1;

        if ( dotournamentendgame() )
            return 1;

        if ( level.codcasterenabled )
            return 0;
    }

    if ( getdvarint( "_encstr_A293143B10EDD1CF9043808BE9F9076277E0621268AB", 0 ) > 0 )
        return 1;

    return 0;
}

allowteamassignment()
{
    if ( getgametype() == "_encstr_9507034B25" || getgametype() == "_encstr_BA9E08864ABFF0971F0A" )
        return level.teambased;

    var_0 = doesmodesupportplayerteamchoice();
    return var_0;
}

doesmodesupportplayerteamchoice()
{
    if ( getgametype() == "_encstr_8918049D5DDC" || getgametype() == "_encstr_87E507D23766566CD1" )
        return 0;

    var_0 = int( tablelookup( "_encstr_A9071622D302B7DE735DC3C96019885DEA31AC3AAED122BD", 0, getgametype(), 4 ) );
    return var_0 > 0;
}

allowclasschoice()
{
    if ( getdvarint( "_encstr_A293143B10EDD1CF9043808BE9F9076277E0621268AB", 0 ) > 0 || skiploadout() )
        return 0;

    if ( isdefined( level.allowclasschoicefunc ) )
    {
        var_0 = self [[ level.allowclasschoicefunc ]]();

        if ( isdefined( var_0 ) )
            return var_0;
    }

    if ( scripts\mp\flags::gameflag( "_encstr_B87F0F4428EDB244C6889FF328BE123BA5" ) && isdefined( level.bypassclasschoicefunc ) )
        return 0;

    var_1 = int( tablelookup( "_encstr_A9071622D302B7DE735DC3C96019885DEA31AC3AAED122BD", 0, getgametype(), 5 ) );

    if ( !isai( self ) && istrue( level.denyclasschoice ) )
        return 0;

    return var_1;
}

skiploadout()
{
    if ( getgametype() == "_encstr_8807031CC1" )
        return istrue( level.aonrules );
    else if ( getgametype() == "_encstr_9DB606854E567385" )
        return isdefined( level.arenaloadouts ) && level.arenaloadouts != 1;

    return 0;
}

showfakeloadout()
{
    return 0;
}

setfakeloadoutweaponslot( var_0, var_1 )
{
    var_2 = scripts\mp\utility\weapon::getweaponrootname( var_0 );
    var_3 = [];

    if ( var_2 != "_encstr_8F610A500B9AD828F501AD93" )
        var_3 = getweaponattachments( var_0 );

    if ( isdefined( var_2 ) )
        var_4 = tablelookuprownum( "_encstr_AD2712B507E5E61DC23A373AB04C8D56C5D8379D", 4, var_2 );
    else
    {

    }

    for ( var_5 = 0; var_5 < 3; var_5++ )
    {
        var_6 = -1;

        if ( isdefined( var_3[var_5] ) )
        {
            if ( !scripts\mp\utility\weapon::isattachmentsniperscopedefault( var_0, var_3[var_5] ) )
                var_6 = tablelookuprownum( "_encstr_AF9F1761CA261343BC47A0F01FC558613B366E7967CEDF6B86", 4, var_3[var_5] );
        }
    }
}

setcommonrulesfrommatchrulesdata( var_0 )
{
    var_1 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_97580AC41D811F767F3072CB" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_A2040B015BF8B11A761F6F0B41", var_1 );
    var_2 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_9F4509781D1EAB321070FD" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_BEA80A3E038AC192FB7AD269", var_2 );
    var_3 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_AA250A1D7CF2EB9471A740A0" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_BA6F0B9FF3B2912B7C6C906853", var_3 );
    registertimelimitdvar( getgametype(), var_3 );
    var_4 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_95FB0B239728CACF7948BAE2F3" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_80520CD73EE93FE2B311FAB210B9", var_4 );
    registerscorelimitdvar( getgametype(), var_4 );
    var_5 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_88B209DD5A73132D6BB4A3" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_B88B0A9E0BC0B89C093217BD", var_5 );
    registerwinlimitdvar( getgametype(), var_5 );
    var_6 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_9EBD0B2D779BF8F0948448C0EB" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_BE630CF54EDB57CDC826A5D62DD1", var_6 );
    registerroundlimitdvar( getgametype(), var_6 );
    var_7 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_97460C239ABF50408A2F83A1232C" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_B6730D20E22F3B45879110F8FB1E01", var_7 );
    registerroundswitchdvar( getgametype(), var_7, 0, 9 );
    var_8 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_97B7103FA828AA7B594C255738DB025C9168" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_95D311D71080DE904B951B15753DFA9A8838B3", var_8 );
    registerwinbytwoenableddvar( getgametype(), var_8 );
    var_9 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_9CFD12E743E0067FB54B5A6091FB9B0540256C6B" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_9F05139F0F6B3A9A18471B651CA0D8B13093D3CBAF", var_9 );
    registerwinbytwomaxroundsdvar( getgametype(), var_9 );
    var_10 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_9531083D4FC7D9510F9E" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_821609B9E1100F21EF979F", var_10 );
    registerdogtagsenableddvar( getgametype(), var_10 );
    var_11 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_81F6152EDBFA176889F09043D2B7A36770C081D985F952" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_A32E16EB6E830BBBE628E4DEE82BC6D1A57BDC2AB4D62B9C", var_11 );
    var_12 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_87AE09780B0549AAF3D7EE" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_B1B70A71483D3F9DD875C5DB", var_12 );
    registernumlivesdvar( getgametype(), var_12 );
    var_13 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_A6BE0B088B080BAD1BCCD6D996" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_A8A90C37B6CD1702BD33E4C080F6", var_13 );
    registernumrevivesdvar( getgametype(), var_13 );
    setdynamicdvar( "_encstr_B66E159B369CAF83B1B0E52B277D5BC287D0B2851B1DD0", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_9C9F0A6B2C0F24590B3647A1" ) );
    setdynamicdvar( "_encstr_8F4F1BF346D2599F6A374B0B0321EBC0991D9B28AA2D60DD624B631377", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_BDB60C432B588D3AD04959ECCA73" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_8C3611D7821FB1E943B8D5FFA420C6B0C38B5F", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_BDB60C432B588D3AD04959ECCA73" ) );
    setdynamicdvar( "_encstr_9FB31EE68DC9AF0E362C975693F5232D6E16898D2BA657832B93A983E4A5DCE8", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_A4251379AC8BF0CEC29FB7F3E37A0ED920C240B093" ) );
    setdynamicdvar( "_encstr_A67F186007B3FFAA04EE5EA58E999184FE4E0560A539CF0FD264", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_BE860D5D345BAB290CCF39309756A3" ) );
    setdynamicdvar( "_encstr_BE73159FF75BD083E4D6BA313AEFD877E33357E997C205", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_B1510A89E11733AF7322E2DA" ) );
    var_14 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_B13810E2099EFBFA90FB2E2CC1703EC34580" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_89551111F10BFBA4BF786753D0F46D02F91524", var_14 );
    registerlaststandhealthdvar( var_14 );
    var_15 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_AD2516B1166EE8D4E8B0E63229ACCE96CE598459B08DD186" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_BAD7174863607F55A1EC0F05993E3B1653F3476B7F9F04B358", var_15 );
    registerlaststandrevivehealthdvar( var_15 );
    var_16 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_AAF40FFC53088BD7A5894AF23773678778" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_8BA610F5B1859BE8A64785CD4651A5AD95C9", var_16 );
    registerlaststandtimerdvar( var_16 );
    var_17 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_8C0615C60BCDD1A6A3C273C829ACECA53B562A5A5B5639" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_9D3C16997993632C37C0EFCB58CFF5FB7B8C9FC353235A52", var_17 );
    registerlaststandrevivetimerdvar( var_17 );
    var_18 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_8967165DEB83CB2ABBA798820F5BBCD3609945A3876D6BF3" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_BC7E175F40095B6B970D66DD7DFF331911C00B3F19E08DA2ED", var_18 );
    registerlaststandsuicidetimerdvar( var_18 );
    setdynamicdvar( "_encstr_BD241BCDC6C97DC1C6B0E52BE4EB2759CED2CE955D6E56BB2B85C1BDB9", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_AD33106368AD64E399855B45BCA187EA37A8" ) );
    level.matchrules_damagemultiplier = 0;
    setdynamicdvar( "_encstr_B6751336F35B7E57C6728049DB9E0BD34F8AB3AE45", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_B4B00A67B0DA83B49C969B5B" ) );
    setdynamicdvar( "_encstr_BE2516B7DF73F860013DC19EA2F8B82EEB3F21133B6B3708", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_95791493E77157CB13689268C861C7970841072FF5B9" ) );
    setdynamicdvar( "_encstr_ABE7165FDB2A491C2F72317E9A334110833B93E94CD6F051", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_80C00C809AC5CF4C8F5C018E29E7" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_984F0DE6D47970212AA7F399DF43FD", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_B7BE0C0FE828C49A7301AB98F713" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_B90C12F5B08DC6F6BB66E419DCE056D8D1B0E895", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_A274139B83951BE8C247CA9927C850C61BDBDD95C8" ) );
    setdynamicdvar( "_encstr_A285173B61366FCF10FB4D6FF33016D351D9500268037F8670", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_9D020E358D58CEEBEDCCFA9250311782" ) );
    setdynamicdvar( "_encstr_BC21121F77DB50386955B9F6BF5FA8F602B7B36D", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_80500EFA370907E2FB101B7290B79583" ) );
    setdynamicdvar( "_encstr_AD7018A7CF63E870310DF18EF219A03FBB8B6B014FE94B604FE2", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_87070FE3BA3B17308CF15943D36C10659F" ) );
    setdynamicdvar( "_encstr_95A01937D84ED7CE16D659D773C2D92185E424D23259A8E6596BF2", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_827211B1DEB5E0C2CDCD42B432B28A37B2B55E" ) );
    setdynamicdvar( "_encstr_893F1937B14E7DB385DA95D7E60BEC21162742968CCA28D2CD3BCD", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_A89C1103BF087AEFD61BF8120125E3F4C807AB" ) );
    setdynamicdvar( "_encstr_9BA71C4AF9D39E1FB7C3825F8B68A6C102D0DAD3E92F8BC0D967A2FF82A3", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_959B13192DCD5831B1566A0E58DD370D585BB29C0B" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_B41314BEC18D165E56E4E459E61C0BEEE6322B3658CB", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_AB410D3995E638C2DDCD885663C2F2" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_A1B61370028B0BB9B95BE82073C9734DC22F51E718", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_B45C129B03A03657C551310B39A4932768890109" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_939F12F5BB58EC5927566E07C2EE9B46951BC2CB", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_8FF51137E02395D133461A56ACFD685DC85887" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_AB8016AFBB0B9DCA4ECADCC12CEECDC895B12C5ED72C1B1D", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_878E14EEB0CEB24A59E63816EEB911AC63B0F21463A3" ) );
    setdynamicdvar( "_encstr_B77818E6369CEBE06358BC569CF533BD4E6C95C995371CB0DD37", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_BD6B0D67EFF3E67771BD6280530775" ) );
    level.matchrules_allowcustomclasses = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_8FC013F605AD657B0F573A7BBF57AD9BA237E3F9CB" );
    level.supportintel = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_97920BB01B1B7BDD94E6A3CA1B" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_9E5912EBC23663BDBBA54B361B6E3AE4B216B537", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_88C511995070F853173952341B4B1A75A3B368" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_88390C01E9F1727F2B2F3F9DABB3", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_B7DD0B167989A22F5748A3DFE0" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_A3CD0D2FDFE0DBBD8FC1034B68DDF2", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_AF1F0CF280390507BF75B8A58EC3" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_AF4C0F99FB0657B3B214FE0B25BAFB387C", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_8B8B0E1D223BEB4647AB6899AB0F1FCB" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_9F14141FD24530A003A929F362CF68C95B4AE3DB632A", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_9D4513DE873F203962AAA00B82858FBB8B35EFDAF3" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_9EAB172F5680BFFDA9C9020B48EBB56F9B3E9D8962CF7B4547", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_BDC9169CDEEACD9192598EC24BCD6AE893AC16D6A093DBD9" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_9CCC14982F62F3A3406B30B08F69384F9B520D1F44BB", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_B21A138CCA0B1DD025AC1D2C2DDC9A8E4E2BB06DB9" ) );
    setdynamicdvar( "_encstr_A69C1C4A267D69C789C027C7D8E1ABB333C9DAC698A5023BF3933F47809B", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_A3B1135E521B23A102C73F183A1F0103CEF22F0357" ) );
    setdynamicdvar( "_encstr_9C3819523E7561FFB1C83FCFBB8BB1DB7F431D0D9ED16B0559D06F", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_AAA1108FC07928E8B35175AA456DC2C1C020" ) );
    setdynamicdvar( "_encstr_B2751D2F27E629BFD8609F69DBABD0C2BEF5EF97A196A27168099722B1200D", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_AD221488430AD3533B49960D03EB7985B72A1990EBE7" ) );
    setdynamicdvar( "_encstr_B68F18D6B64BD78901EF78B18F4D23EB331240534D835734E7E3", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_8B110FB3D3D38D68D9C0CAE559F00570E7" ) );
    setdynamicdvar( "_encstr_BACC1EF8EF12B6974215F590EA2BE3FB66BB78A01BDDC979EABD781D44D22383", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_81F6152EDBFA176889F09043D2B7A36770C081D985F952" ) );
    setdynamicdvar( "_encstr_B9FE151ACF0A7192792F4D516CB749301123A9A8A9067B", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_8F3B0FEA930567DAA01BB69461D8E58FAB" ) );
    setdynamicdvar( "_encstr_BAC81C338E7347EFF34072E938EBA357EB61ADD69D3CCF7ABD386B42E009", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_AAAF13CAB32507BAC07BD6B45349CA23408B4212BB" ) );
    setdynamicdvar( "_encstr_8BE51E3F37D6198FE8708F1949F0C3B2A651EF639B7D734C209DC49E23301D7B", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_9CBF158113C32745B84F3EE05BBB9CDD016B4A2945F57D" ) );
    setdynamicdvar( "_encstr_93DB1ACD1B27EBB316B659EB23B437C2981BB214DCDCB7EA37B19593", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_ADBB11A9B2EFAF080D758BDD963548E047EAE3" ) );
    setdynamicdvar( "_encstr_B60C140BBE1A91DC62CF4B37377A04B8AD9754ED2564", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_94400BFA98276F23CD91DA507B" ) );
    setdynamicdvar( "_encstr_B1501306E3159FC7D1E25269D3783ACA35FB28CBB3", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_B3F20AD07A077328E7DB0387" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_97010FA17BE0115A5DB3D7C7ED88634638", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_A4A90E389CC28D1DA5C6AC49B75D9B32" ) );
    setdynamicdvar( "_encstr_93DB17CD1B27EBB316B659EB83B737E8D158B6568AF033D236", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_BD030E81DF535D51112DD12D90FEE899" ) );
    setdynamicdvar( "_encstr_B2A61B687F820627F28565609F3B7D88F49FB8C8932959C949AC697532", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_9F5712BD688B38C14FA388A02A9EB9D7CF1535AE" ) );
    setdynamicdvar( "_encstr_A1631AE636E4BE7616B62BAFB287CC2D6328B13AA59DB2155A5BACE4", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_AA491165C8B20340894F18F873C51F5BAA3766" ) );
    setdynamicdvar( "_encstr_ABA61F325E1501887008EF8788CE40CAAF6DB72E3153F8B819A0B347186118727D", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_8B731407BD6EA3E8C2D62BA80FCC5A8DAE2B2C1CEDE6" ) );
    level.crankedbombtimer = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_B166110693D0B6627D01CB076B96D9F9E8D9FA" );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_A1B6127006FB1B18BB5FE0A90FC5D139122DD56E", level.crankedbombtimer );
    scripts\mp\cranked::registercrankedtimerdvar( getgametype(), level.crankedbombtimer );
    setdynamicdvar( "_encstr_B32D125E321B711712BF118FC1BF4833A895A89C", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_B15E09F527799F5563F03B" ) );
    setdynamicdvar( "_encstr_9F5916B673DBFED746F22BC97B1E97D3CF1B37A1C507412B", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_BD110DE3F39E6B4138310D5DE8D895" ) );
    setdynamicdvar( "_encstr_BD081702B14887A27F1357C76F905AE9C0D93E4F2B704F4B4E", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_98120E30E579C39299387B0351FD0DEF" ) );

    if ( !isdefined( var_0 ) )
        setdynamicdvar( "_encstr_A821105780D3FFE3631FED69F41D9B91FB28", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_B14E0D8CF22377D571F293F8D3980A" ) );

    setdvar( "_encstr_98E50BD428A7B4A2933182949A", getdvarint( "_encstr_BC21121F77DB50386955B9F6BF5FA8F602B7B36D" ) == 1 );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_BA730F7D95CDCAD6E5882B0BE834C47B6C", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_9F3F0ECACDCA6BCB882B16A30D89DE6C" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_9F030F9F01684AB670A3D2E7FBF1C952B1", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_826F0E1CDE5AB9D19BA02BE4B4B4D8C6" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_93A310FAE0DBA5CD1D6EA0CAC92256B08ED0", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_82060F8A204B7AD4CB292773E161B9A321" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_B95C15AF38DB4BE68EE690598532E6D0F61D097BCDAEB9", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_94271407EDB4DCD1E68459B032CDA17B8E48BD37AEB9" ) );
    setdynamicdvar( "_encstr_A61805573F9318" + getgametype() + "_encstr_A8D511772F10EB250B6312F7ADFC1611697B8D", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_BC28101165309AA16F577D9A12F3744C6049" ) );
    setdynamicdvar( "_encstr_B92013DCC64EEB76C25B59BEC623363A57E62D9B3B", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_9BC30AB1461B3A5D739673B3" ) );
    setdynamicdvar( "_encstr_8AFE15FF7B8AE93D9F63B7593A5FECE0AFDF7B1DEC3660", "_encstr_A40101" );
    setdynamicdvar( "_encstr_891914CDD8E4AF2359EC28B1C2B1B211B7D619B15876", "_encstr_A40101" );

    if ( privatematch() || level.systemlink || isanymlgmatch() )
    {
        level.codcasterenabled = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_89B311D8B7321B0B6ED1B239A873C24CC6B2C8" );
        setdvar( "_encstr_A4CC0B0C50EFB8E1C2C017272B", level.codcasterenabled );
        setdynamicdvar( "_encstr_B6F618575FAE61F7802827A1C0682C7A0B97F397E5D599A1D831", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_B7480F5BC2D1D83435D12C398EA8D2B695" ) );
        setdynamicdvar( "_encstr_B9CD18A00AA2FFA9CF3DE5F01ACFD3558F9110C8F3FB5120975D", getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_97030FEA98D81E2ACE89DF9BA115A24530" ) );
    }
}

reinitializematchrulesonmigration()
{
    for (;;)
    {
        level waittill( "_encstr_A33F15D07BB93AEBB6B43B9C2C472D7BDC7D4C59765ADC" );
        [[ level.initializematchrules ]]();
    }
}

reinitializethermal( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( isdefined( var_0 ) )
        var_0 endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        level waittill( "_encstr_A33F15D07BB93AEBB6B43B9C2C472D7BDC7D4C59765ADC" );

        if ( isdefined( self.lastvisionsetthermal ) )
            self visionsetthermalforplayer( self.lastvisionsetthermal, 0 );
    }
}

getmatchrulesspecialclass( var_0, var_1 )
{
    var_2 = [];
    var_2["_encstr_A9651AE2C897BBF598D1103A83303EBBC3A5DBEB917E43AD20FD4C62"] = "_encstr_AABA05236DC831";
    var_2["_encstr_BDDB1C6590701C82D5812FCF97F0DA54285B58A66B70A19AA35BFFEBD106"] = "_encstr_AABA05236DC831";
    var_3 = [];
    var_2["_encstr_87C30FC410893345733089A330AB3E9362"] = getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_0, var_1, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 0, "_encstr_B92007DDCA2C0EF6DC" );
    var_2["_encstr_B44319C6DB5832DEAE3A289C965B2CC95E141DA32C36A1D65673A3"] = getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_0, var_1, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 0, "_encstr_986F10AA1851EE3FA011C5F6B5EFEF738BD0", 0, "_encstr_9C9A0B213BDBAAA648152B8E9B" );
    var_2["_encstr_A9651AE2C897BBF598D1103A83303EBBC3A5DBEB917E43AD20FD4C62"] = getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_0, var_1, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 0, "_encstr_986F10AA1851EE3FA011C5F6B5EFEF738BD0", 1, "_encstr_9C9A0B213BDBAAA648152B8E9B" );
    var_2["_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB"] = getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_0, var_1, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 0, "_encstr_9C90056E476317" );
    var_2["_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9"] = getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_0, var_1, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 0, "_encstr_9F50089A556B470601F8" );
    var_2["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"] = getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_0, var_1, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 1, "_encstr_B92007DDCA2C0EF6DC" );
    var_2["_encstr_9D6F1B6C48D16B2D1B48D18AC817252389AEF1395DDBC7F6C968BA3218"] = getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_0, var_1, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 1, "_encstr_986F10AA1851EE3FA011C5F6B5EFEF738BD0", 0, "_encstr_9C9A0B213BDBAAA648152B8E9B" );
    var_2["_encstr_BDDB1C6590701C82D5812FCF97F0DA54285B58A66B70A19AA35BFFEBD106"] = getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_0, var_1, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 1, "_encstr_986F10AA1851EE3FA011C5F6B5EFEF738BD0", 1, "_encstr_9C9A0B213BDBAAA648152B8E9B" );
    var_2["_encstr_A2EA151BD081D44253851297663F0A9C2980C73F48F807"] = getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_0, var_1, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 1, "_encstr_9C90056E476317" );
    var_2["_encstr_82B618ABEA2661705BBB2A415B6D7332AB2AD71F9D3880AE324D"] = getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_0, var_1, "_encstr_9E95066E81471B5F", "_encstr_A9BE0D77B22C83BDDC9A95D1AB38DC", 1, "_encstr_9F50089A556B470601F8" );
    var_2["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] = var_3;
    var_2["_encstr_BAE713C8CFE03C60079B6BE3E83B5FEC7AAAF917B3"] = scripts\mp\class::recipe_getkillstreak( var_0, var_1, 0 );
    var_2["_encstr_A1E71363923EA180A70CDA33FC2BCB59229AD0B0DF"] = scripts\mp\class::recipe_getkillstreak( var_0, var_1, 1 );
    var_2["_encstr_B9E71363DEC291F6ABD196961B63DCE8935616B6CC"] = scripts\mp\class::recipe_getkillstreak( var_0, var_1, 2 );
    return var_2;
}

isplayeroutsideofanybombsite( var_0 )
{
    if ( isdefined( level.objectives ) )
    {
        foreach ( var_2 in level.objectives )
        {
            if ( self istouching( var_2.noweapondropallowedtrigger ) )
                return 0;
        }
    }

    return 1;
}

gamehasneutralcrateowner( var_0 )
{
    switch ( var_0 )
    {
        case "_encstr_B620095BED4C089022D393":
        case "_encstr_A918056EBD8E33":
            return 1;
        default:
            return 0;
    }
}

isanymlgmatch()
{
    if ( isusingmatchrulesdata() )
    {
        if ( getdvarint( "_encstr_88BF0BAE498175BBC53C18C027" ) == 0 && getmatchrulesdata( "_encstr_9B221091C71101E3199FB30F8D89CB490539" ) == 1 )
            return 1;
    }

    return getdvarint( "_encstr_988A0B983D35A85AA8154A8A6A" ) || istrue( level.get_wave_max_count );
}

ismlgsystemlink()
{
    if ( level.systemlink && ( getdvarint( "_encstr_988A0B983D35A85AA8154A8A6A" ) || istrue( level.get_wave_max_count ) ) )
        return 1;

    return 0;
}

ismlgprivatematch()
{
    if ( privatematch() && ( getdvarint( "_encstr_988A0B983D35A85AA8154A8A6A" ) || istrue( level.get_wave_max_count ) ) )
        return 1;

    return 0;
}

ismlgmatch()
{
    if ( ismlgsystemlink() || ismlgprivatematch() )
        return 1;

    return 0;
}

setmlgannouncement( var_0, var_1, var_2, var_3 )
{
    if ( var_1 == "_encstr_BA840579D3F7F6" )
        var_0 = var_0 + 2000;
    else if ( var_1 == "_encstr_BC850785638DA59537" )
        var_0 = var_0 + 1000;

    if ( isdefined( var_2 ) )
        var_0 = var_0 + ( var_2 + 1 ) * 10000;

    if ( isdefined( var_3 ) )
    {
        if ( isnumber( var_3 ) )
            var_0 = var_0 + ( var_3 + 1 ) * 1000000;
        else
            scripts\engine\utility::error( "_encstr_B8C44840C3DF8979E8D34D1F8651DD055DC013DE9A63D0F0E94AD49993B790F6BB979B50032916220E67F306CD2E6FB905FDA94BE8F254530BEAE328A26A45B34496F1569C9118A1EF2E" + var_3 );
    }

    if ( isdefined( var_0 ) )
        setomnvar( "_encstr_B3B714AE4BF5ADC6CEAF0BB9B9BDAEE6D8595B59DC8E", var_0 );
}

ismoddedroundgame()
{
    if ( getgametype() == "_encstr_9318045AFDDD" || getgametype() == "_encstr_BA1904C7A174" || getgametype() == "_encstr_A81F055330F3C8" || getgametype() == "_encstr_88AB06125940BBF8" )
        return 1;

    return 0;
}

isusingdefaultclass( var_0, var_1 )
{
    var_2 = 0;

    if ( isdefined( var_1 ) )
    {
        if ( isusingmatchrulesdata() && getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_0, var_1, "_encstr_9E95066E81471B5F", "_encstr_A28F0613BEB3DAD7" ) )
            var_2 = 1;
    }
    else
    {
        for ( var_1 = 0; var_1 < 6; var_1++ )
        {
            if ( isusingmatchrulesdata() && getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", var_0, var_1, "_encstr_9E95066E81471B5F", "_encstr_A28F0613BEB3DAD7" ) )
            {
                var_2 = 1;
                break;
            }
        }
    }

    return var_2;
}

getmatchrulesdatawithteamandindex( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( var_1 == "_encstr_BA840579D3F7F6" )
        var_2 = var_2 + 6;

    if ( isdefined( var_6 ) )
        return getmatchrulesdata( var_0, var_2, var_3, var_4, var_5, var_6 );
    else if ( isdefined( var_5 ) )
        return getmatchrulesdata( var_0, var_2, var_3, var_4, var_5 );
    else
        return getmatchrulesdata( var_0, var_2, var_3, var_4 );
}

isspawnprotected()
{
    return gettime() < self.spawntime + level.killstreakspawnshielddelayms;
}

ismatchstartprotected()
{
    return isdefined( level.starttime ) && gettime() < level.starttime + level.equipmentmatchstartshieldms;
}

unset_relic_grounded()
{
    var_0 = getgametype() == "_encstr_9507034B25";
    var_1 = getgametype() == "_encstr_B31D06435BCB61E0";
    return var_0 || var_1;
}

getgametype()
{
    return level.gametype;
}

round_vehicle_logic()
{
    var_0 = getgametype();

    if ( var_0 == "_encstr_9507034B25" )
    {
        var_1 = getdvar( "_encstr_A10E10BABF1EB12D4B819F18E8488BAA02E5", "_encstr_A40101" );

        if ( var_1 != "_encstr_A40101" )
            return var_1;
    }

    return var_0;
}

usingfallback()
{
    var_0 = getgametype();
    var_1 = round_vehicle_logic();
    return var_0 != var_1;
}

validate_track()
{
    if ( round_vehicle_logic() == "_encstr_9507034B25" )
        return 1;
    else if ( round_vehicle_logic() == "_encstr_A6DD05926DD759" )
        return 1;

    return 0;
}

lpcfeaturegated()
{
    if ( getdvarint( "_encstr_9C2B18AB669BAF5717508AE2C96BCE33F75B12358FA12FDD39F0" ) == 1 )
        return 1;

    if ( getgametype() == "_encstr_BD19047616EB" || getgametype() == "_encstr_9507034B25" || getgametype() == "_encstr_B31D06435BCB61E0" || level.leanthread == 1 )
        return 1;

    return 0;
}

runleanthreadmode()
{
    if ( getdvarint( "_encstr_9C2B18AB669BAF5717508AE2C96BCE33F75B12358FA12FDD39F0" ) == 1 )
        return 1;

    if ( getgametype() == "_encstr_9507034B25" || level.leanthread == 1 )
        return 1;

    return 0;
}

issquadmode()
{
    return getdvarint( "_encstr_9B9B0AEB1946141C14F764CB", 0 ) > 1;
}

gamehasinfil()
{
    if ( !isdefined( game["_encstr_AD8F0610BAC7B3E8"] ) )
        return 0;

    var_0 = 1;

    foreach ( var_2 in level.teamnamelist )
    {
        if ( !isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_2] ) || !isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_2]["_encstr_94EC06631673B2B9"] ) )
        {
            var_0 = 0;
            break;
        }
    }

    return var_0;
}

teamhasinfil( var_0 )
{
    return gamehasinfil() && scripts\mp\utility\teams::isgameplayteam( var_0 ) && isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_94EC06631673B2B9"] );
}

iskillstreakdenied()
{
    return scripts\cp_mp\emp_debuff::is_empd() || isairdenied();
}

isairdenied()
{
    if ( self.team == "_encstr_A68C0A5803A5D151A2B310A6" )
        return 0;

    return 0;
}

getmaxoutofboundstime()
{
    var_0 = level.outofboundstime;

    if ( !isdefined( var_0 ) )
    {
        var_0 = max( 0, scripts\engine\utility::ter_op( matchmakinggame(), getdvarfloat( "_encstr_8F03141AEA2B1188C33B48B54BBFA318612BC3201205", 3 ), 3 ) );
        level.outofboundstime = var_0;
    }

    return var_0;
}

getmaxoutofboundscooldown()
{
    var_0 = level.outofboundscooldown;

    if ( !isdefined( var_0 ) )
    {
        var_0 = max( 0, getdvarfloat( "_encstr_8F7E189F9776B927E8B3E5B76D6065E2C50FD7776791D2EFD098", 3 ) );
        level.outofboundscooldown = var_0;
    }

    return var_0;
}

getmaxoutofboundsminefieldtime()
{
    var_0 = level.outofboundstimeminefield;

    if ( !isdefined( var_0 ) )
    {
        var_0 = max( 0, getdvarfloat( "_encstr_8A961DDCC6C9D7F6EA47E9CC48DEAE73916E8A4BDA959AA5E62B99D2568D91", 3 ) );
        level.outofboundstimeminefield = var_0;
    }

    return var_0;
}

getmaxoutofboundsrestrictedtime()
{
    level.outofboundstimerestricted = 5;
    return level.outofboundstimerestricted;
}

repair_grill_fixing_short_sfx()
{
    level._id_12162 = 5;
    return level._id_12162;
}

runbrgametypefunc()
{
    var_0 = self;

    if ( isdefined( var_0._id_120B4 ) )
        return var_0._id_120B4;

    return undefined;
}

repair_grill_stop_exit_foley_sfx()
{
    if ( !isdefined( level._id_12164 ) )
        level._id_12164 = getdvarint( "_encstr_81371CA316A229E6FB9F09331FC2B8104CE10BF97B0AA02FF3B7092BA77A", 30 );

    return level._id_12164;
}

repair_grill_start_enter_foley_sfx()
{
    if ( !isdefined( level._id_12163 ) )
        level._id_12163 = getdvarint( "_encstr_BC1A1B3FE8BBA7DAE5A8124EA3F1C221C1A1A3EFA8D3D1B367D55C4585", 10 );

    return level._id_12163;
}

updateobjectivetext()
{
    if ( self.pers["_encstr_89EF05D46BA8FD"] == "_encstr_A68C0A5803A5D151A2B310A6" )
        self setclientdvar( "_encstr_9BCF0B07A97F6829E9EF9D85FA", "_encstr_A40101" );
    else
    {
        if ( level.roundscorelimit > 0 && !isobjectivebased() )
        {
            if ( isdefined( getobjectivescoretext( self.pers["_encstr_89EF05D46BA8FD"] ) ) )
            {
                if ( level.splitscreen )
                {
                    self setclientdvar( "_encstr_9BCF0B07A97F6829E9EF9D85FA", getobjectivescoretext( self.pers["_encstr_89EF05D46BA8FD"] ) );
                    return;
                }

                self setclientdvar( "_encstr_9BCF0B07A97F6829E9EF9D85FA", getobjectivescoretext( self.pers["_encstr_89EF05D46BA8FD"] ), level.roundscorelimit );
                return;
                return;
            }

            return;
        }

        if ( isdefined( getobjectivetext( self.pers["_encstr_89EF05D46BA8FD"] ) ) )
            self setclientdvar( "_encstr_9BCF0B07A97F6829E9EF9D85FA", getobjectivetext( self.pers["_encstr_89EF05D46BA8FD"] ) );
    }
}

setobjectivetext( var_0, var_1 )
{
    game["_encstr_A9B10863D3ADDAF8974B"]["_encstr_A63C0B7B899A566C474B67B2F5" + var_0] = var_1;
}

setobjectivescoretext( var_0, var_1 )
{
    game["_encstr_A9B10863D3ADDAF8974B"]["_encstr_944D11EF4E30EFAE9920030AA9AFE68F6BA557" + var_0] = var_1;
}

setobjectivehinttext( var_0, var_1 )
{
    game["_encstr_A9B10863D3ADDAF8974B"]["_encstr_B26110D8129B9D303B49F5DB57E4B8D00B39" + var_0] = var_1;
}

getobjectivetext( var_0 )
{
    return game["_encstr_A9B10863D3ADDAF8974B"]["_encstr_A63C0B7B899A566C474B67B2F5" + var_0];
}

getobjectivescoretext( var_0 )
{
    return game["_encstr_A9B10863D3ADDAF8974B"]["_encstr_944D11EF4E30EFAE9920030AA9AFE68F6BA557" + var_0];
}

getobjectivehinttext( var_0 )
{
    return game["_encstr_A9B10863D3ADDAF8974B"]["_encstr_B26110D8129B9D303B49F5DB57E4B8D00B39" + var_0];
}

testgamemodestringlist( var_0, var_1 )
{
    if ( !isdefined( var_0 ) || var_0 == "_encstr_A40101" || !isdefined( var_1 ) || var_1 == "_encstr_A40101" )
        return 0;

    return issubstr( var_0, var_1 );
}

islaststandenabled()
{
    return isdefined( level.laststand ) && level.laststand == 1;
}

isteamreviveenabled()
{
    return isdefined( level.laststand ) && level.laststand == 2;
}

checkrealismhudsettings()
{
    if ( istrue( level.testrandomrealismclients ) )
    {
        if ( !isdefined( self.isrealismenabled ) )
        {
            if ( scripts\engine\utility::cointoss() )
            {
                self setclientomnvar( "_encstr_9D320F5D8197A33BAE3A4890C2C9F99BD3", 1 );
                self.isrealismenabled = 1;
            }
            else
            {
                self setclientomnvar( "_encstr_9D320F5D8197A33BAE3A4890C2C9F99BD3", 0 );
                self.isrealismenabled = 0;
            }
        }
    }
    else if ( scripts\cp_mp\utility\game_utility::isrealismenabled() )
        self setclientomnvar( "_encstr_9D320F5D8197A33BAE3A4890C2C9F99BD3", 1 );
    else
        self setclientomnvar( "_encstr_9D320F5D8197A33BAE3A4890C2C9F99BD3", 0 );
}

isdefending( var_0 )
{
    var_1 = 0;

    switch ( getgametype() )
    {
        case "_encstr_B9F906A857D2014D":
            if ( isdefined( level.cyberemp.carrier ) && self.team == level.cyberemp.ownerteam && self != level.cyberemp.carrier )
            {
                var_2 = distancesquared( level.cyberemp.carrier.origin, self.origin );
                var_3 = distancesquared( level.cyberemp.carrier.origin, var_0.origin );

                if ( var_2 < 90000 || var_3 < 90000 )
                {
                    var_1 = 1;
                    break;
                }
            }

            foreach ( var_5 in level.objectives )
            {
                if ( istrue( var_5.trigger.trigger_off ) )
                    continue;

                var_6 = var_5.ownerteam;

                if ( var_6 == self.team )
                {
                    var_2 = distancesquared( var_5.trigger.origin, self.origin );
                    var_3 = distancesquared( var_5.trigger.origin, var_0.origin );

                    if ( var_2 < 90000 || var_3 < 90000 )
                    {
                        var_1 = 1;
                        break;
                    }
                }
            }

            break;
        case "_encstr_9507035309":
        case "_encstr_AD0703D788":
        case "_encstr_BD07030251":
            if ( self.team != game["_encstr_95A70AA81FEE295D3A2F56DE"] )
                break;

            foreach ( var_9 in level.objectives )
            {
                var_10 = distancesquared( var_9.trigger.origin, var_0.origin );

                if ( var_10 < 90000 )
                {
                    var_1 = 1;
                    break;
                }
            }

            break;
        case "_encstr_9B290667C6D043EF":
        case "_encstr_8C0D05A9215D20":
        case "_encstr_B14F0606E93B7FC3":
        case "_encstr_9318045AFDDD":
        case "_encstr_BD19047616EB":
            foreach ( var_9 in level.objectives )
            {
                if ( self.team != var_9.ownerteam )
                    continue;

                var_13 = distancesquared( var_9.curorigin, self.origin );
                var_14 = distancesquared( var_9.curorigin, var_0.origin );

                if ( var_13 < 90000 || var_14 < 90000 )
                {
                    var_1 = 1;
                    break;
                }
            }

            break;
        case "_encstr_BC7205C8ABFDE7":
        case "_encstr_B7D7054F3030F9":
        case "_encstr_BA07038803":
            if ( isdefined( level.zone ) )
                var_1 = ispointinvolume( self.origin, level.zone.trigger ) || ispointinvolume( var_0.origin, level.zone.trigger );

            break;
    }

    return var_1;
}

turret_outline_watcher( var_0 )
{
    var_1 = 0;

    switch ( getgametype() )
    {
        case "_encstr_B9F906A857D2014D":
            if ( istrue( var_0.isbombcarrier ) )
            {
                var_1 = 1;
                break;
            }

            if ( isdefined( level.cyberemp.carrier ) && self.team == level.cyberemp.ownerteam && self != level.cyberemp.carrier )
            {
                var_2 = distancesquared( level.cyberemp.carrier.origin, self.origin );
                var_3 = distancesquared( level.cyberemp.carrier.origin, var_0.origin );

                if ( var_2 < 90000 || var_3 < 90000 )
                {
                    var_1 = 1;
                    break;
                }
            }

            foreach ( var_5 in level.objectives )
            {
                if ( istrue( var_5.trigger.trigger_off ) )
                    continue;

                var_6 = var_5.ownerteam;

                if ( var_6 != self.team )
                {
                    var_7 = distancesquared( var_5.trigger.origin, self.origin );
                    var_8 = distancesquared( var_5.trigger.origin, var_0.origin );

                    if ( var_7 < 90000 || var_8 < 90000 )
                    {
                        var_1 = 1;
                        break;
                    }
                }
            }

            break;
        case "_encstr_9507035309":
        case "_encstr_AD0703D788":
        case "_encstr_BD07030251":
            if ( self.team == game["_encstr_95A70AA81FEE295D3A2F56DE"] )
                break;

            foreach ( var_11 in level.objectives )
            {
                var_12 = distancesquared( var_11.trigger.origin, var_0.origin );

                if ( var_12 < 90000 )
                {
                    var_1 = 1;
                    break;
                }
            }

            break;
        case "_encstr_9B290667C6D043EF":
        case "_encstr_8C0D05A9215D20":
        case "_encstr_B14F0606E93B7FC3":
        case "_encstr_9318045AFDDD":
        case "_encstr_BD19047616EB":
            foreach ( var_11 in level.objectives )
            {
                if ( self.team == var_11.ownerteam )
                    continue;

                var_7 = distancesquared( var_11.curorigin, self.origin );
                var_8 = distancesquared( var_11.curorigin, var_0.origin );

                if ( var_7 < 90000 || var_8 < 90000 )
                {
                    var_1 = 1;
                    break;
                }
            }

            break;
        case "_encstr_BC7205C8ABFDE7":
        case "_encstr_B7D7054F3030F9":
        case "_encstr_BA07038803":
            if ( isdefined( level.zone ) )
                var_1 = ispointinvolume( self.origin, level.zone.trigger ) || ispointinvolume( var_0.origin, level.zone.trigger );

            break;
    }

    return var_1;
}

gametypesupportsbasejumping()
{
    switch ( getgametype() )
    {
        case "_encstr_A419049B62BB":
        case "_encstr_A2A6063A4ED2161B":
        case "_encstr_B31D06435BCB61E0":
        case "_encstr_B14F0606E93B7FC3":
        case "_encstr_9318045AFDDD":
        case "_encstr_87E507D23766566CD1":
        case "_encstr_9507034B25":
        case "_encstr_BD19047616EB":
            return 1;
        default:
            return 0;
    }
}

mapsupportsbasejumping()
{
    if ( scripts\cp_mp\utility\game_utility::unlink_on_ai_death() )
        return 1;

    switch ( level.mapname )
    {
        case "_encstr_8F640FD07B07C678F218BF9F0F5B1096F3":
        case "_encstr_A828101D4BB932AA0CFBE3EFCB3D52A7D033":
        case "_encstr_8F6510D07B074FE0B505AB85315F1080BF63":
        case "_encstr_B2060EAD0EEBD8852FF6B3564EAF9DEE":
        case "_encstr_821E0F154F9EFBB5B548CB42D889E1B7F3":
        case "_encstr_983F0AD60EBECC2C4E5BE619":
        case "_encstr_B9A10F3082FFB011593B531D6782E66AC9":
        case "_encstr_AF930F218A615DA0FA270848A30198876A":
        case "_encstr_A6341077402EAAEB6F61873EDB3BE27971B0":
        case "_encstr_95AC0D21E8E77355713A28D8D25511":
        case "_encstr_B9880C60CB570BDFDBEBF64807A3":
        case "_encstr_B3D20DBDF726539E25D0838F595753":
        case "_encstr_B7920F6F397892BF7008A36D43D0C7FAC4":
        case "_encstr_AA240B913AD1C3B379DB98C832":
        case "_encstr_B3A80F976B315198DBB2A37FE6B508EB5B":
            return 1;
        default:
            return 0;
    }
}

_id_119AC( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = scripts\mp\matchdata::gettimefrommatchstart( gettime() );

    if ( !isdefined( var_2 ) )
        return;

    var_6 = "_encstr_A40101";

    if ( isdefined( var_4 ) )
        var_6 = var_4;
    else
        var_6 = "_encstr_AABA05236DC831";

    if ( !isdefined( var_0 ) )
    {
        if ( isdefined( var_3 ) )
            getentitylessscriptablearray( "_encstr_AD62188C8DDE3BD795B3B2B93AAF5837377B5D37B195D656731D", [ "_encstr_8B1A161D2DD695EB6627F66BD7B5853A8D86D7373AC239E8", var_5, "_encstr_BA670DE12A73706825DB7B73C50D28", var_2, "_encstr_8B510BB5F343F267B184532DE2", var_6, "_encstr_B70C0C30081FEB857DE9C10741D8", "_encstr_AABA05236DC831", "_encstr_BE9C0FE3C8B0AB2F97C8327BA9A167B788", "_encstr_AABA05236DC831", "_encstr_A6B307823FFBFF2F73", var_3[0], "_encstr_BCB3079EBDE6B2F597", var_3[1], "_encstr_A2B307F8E7FD4B4073", var_3[2] ] );
        else
            getentitylessscriptablearray( "_encstr_AD62188C8DDE3BD795B3B2B93AAF5837377B5D37B195D656731D", [ "_encstr_8B1A161D2DD695EB6627F66BD7B5853A8D86D7373AC239E8", var_5, "_encstr_BA670DE12A73706825DB7B73C50D28", var_2, "_encstr_8B510BB5F343F267B184532DE2", var_6 ] );
    }
    else if ( isdefined( var_1 ) )
    {
        if ( isdefined( var_3 ) )
            getentitylessscriptablearray( "_encstr_AD62188C8DDE3BD795B3B2B93AAF5837377B5D37B195D656731D", [ "_encstr_AAB0079B102F47FF38", var_0, "_encstr_A25C0A8AC065AB27C39DC5EA", var_1, "_encstr_8B1A161D2DD695EB6627F66BD7B5853A8D86D7373AC239E8", var_5, "_encstr_BA670DE12A73706825DB7B73C50D28", var_2, "_encstr_8B510BB5F343F267B184532DE2", var_6, "_encstr_B70C0C30081FEB857DE9C10741D8", var_0.team, "_encstr_BE9C0FE3C8B0AB2F97C8327BA9A167B788", var_1.team, "_encstr_A6B307823FFBFF2F73", var_3[0], "_encstr_BCB3079EBDE6B2F597", var_3[1], "_encstr_A2B307F8E7FD4B4073", var_3[2] ] );
        else
            getentitylessscriptablearray( "_encstr_AD62188C8DDE3BD795B3B2B93AAF5837377B5D37B195D656731D", [ "_encstr_AAB0079B102F47FF38", var_0, "_encstr_A25C0A8AC065AB27C39DC5EA", var_1, "_encstr_8B1A161D2DD695EB6627F66BD7B5853A8D86D7373AC239E8", var_5, "_encstr_BA670DE12A73706825DB7B73C50D28", var_2, "_encstr_8B510BB5F343F267B184532DE2", var_6, "_encstr_B70C0C30081FEB857DE9C10741D8", var_0.team, "_encstr_BE9C0FE3C8B0AB2F97C8327BA9A167B788", var_1.team ] );
    }
    else if ( isdefined( var_3 ) )
        getentitylessscriptablearray( "_encstr_AD62188C8DDE3BD795B3B2B93AAF5837377B5D37B195D656731D", [ "_encstr_AAB0079B102F47FF38", var_0, "_encstr_8B1A161D2DD695EB6627F66BD7B5853A8D86D7373AC239E8", var_5, "_encstr_BA670DE12A73706825DB7B73C50D28", var_2, "_encstr_8B510BB5F343F267B184532DE2", var_6, "_encstr_B70C0C30081FEB857DE9C10741D8", var_0.team, "_encstr_BE9C0FE3C8B0AB2F97C8327BA9A167B788", "_encstr_AABA05236DC831", "_encstr_A6B307823FFBFF2F73", var_3[0], "_encstr_BCB3079EBDE6B2F597", var_3[1], "_encstr_A2B307F8E7FD4B4073", var_3[2] ] );
    else
        getentitylessscriptablearray( "_encstr_AD62188C8DDE3BD795B3B2B93AAF5837377B5D37B195D656731D", [ "_encstr_AAB0079B102F47FF38", var_0, "_encstr_8B1A161D2DD695EB6627F66BD7B5853A8D86D7373AC239E8", var_5, "_encstr_BA670DE12A73706825DB7B73C50D28", var_2, "_encstr_8B510BB5F343F267B184532DE2", var_6, "_encstr_B70C0C30081FEB857DE9C10741D8", var_0.team ] );
}

updatex1stashhud()
{
    return istrue( level.updatex1prematchloadoutarray );
}

unset_relic_landlocked()
{
    return istrue( level.unset_relic_laststandmelee ) || istrue( level.unset_relic_lfo ) || istrue( level.unset_relic_laststand );
}

vcloseangles()
{
    var_0 = 0;

    switch ( scripts\cp_mp\utility\game_utility::getmapname() )
    {
        case "_encstr_A828101D4BB932AA0CFBE3EFCB3D52A7D033":
        case "_encstr_8F6510D07B074FE0B505AB85315F1080BF63":
        case "_encstr_B2060EAD0EEBD8852FF6B3564EAF9DEE":
        case "_encstr_821E0F154F9EFBB5B548CB42D889E1B7F3":
        case "_encstr_B9880C60CB570BDFDBEBF64807A3":
        case "_encstr_B3D20DBDF726539E25D0838F595753":
        case "_encstr_B7920F6F397892BF7008A36D43D0C7FAC4":
        case "_encstr_AA240B913AD1C3B379DB98C832":
            return 1;
        default:
            return 0;
    }
}

get_allowed_vehicle_types_from_spawnpoint( var_0 )
{
    var_1 = 0;
    var_2 = 0;
    var_3 = scripts\cp_mp\utility\game_utility::getmapname();

    if ( ( getgametype() == "_encstr_BD19047616EB" || unset_relic_landlocked() ) && vcloseangles() || getdvarint( "_encstr_BEFB213FBB4A297C4F12115ECA1FAE902735BD932235302F77FBE9C112AF6568F67D01", 0 ) == 1 )
    {
        if ( var_3 != "_encstr_B3FB0A309BE727E0D4F143A9" )
        {
            if ( istrue( level._id_121C8 ) )
                var_1 = 1;

            if ( istrue( level._id_121C9 ) && !istrue( var_0.little_bird_mg_playerexitturret ) )
                var_2 = 1;
        }
    }

    if ( var_1 )
        var_0 skydive_cutautodeployoff();
    else
        var_0 getclientomnvar();

    if ( var_2 )
        var_0 skydive_cutparachuteoff();
    else
        var_0 skydive_cutautodeployon();
}

tv_station_intro_camera()
{
    return matchmakinggame() && getdvarint( "_encstr_9CB51883A7F2CF4F2CD9EBAF030A41012F378080056093ECEA37", 0 ) > 0;
}

usefloorrocks()
{
    return matchmakinggame() && getdvarint( "_encstr_9CB51883A7F2CF4F2CD9EBAF030A41012F378080056093ECEA37", 0 ) == 1;
}

handle_carry_special_item()
{
    if ( tv_station_intro_camera() )
    {
        switch ( getdvarint( "_encstr_9CB51883A7F2CF4F2CD9EBAF030A41012F378080056093ECEA37", 0 ) )
        {
            case 1:
                return 1;
            default:
                return 0;
        }
    }
    else if ( isdefined( level.set_systems_init_flag ) && level.set_systems_init_flag > 0 )
        return 1;

    return 0;
}

usequesttimer()
{
    return getdvarint( "_encstr_9547245B01560F2F0843EAFC5359722FFE1BB2D3EE23AF2530B7F7FD7BB8318FA8F01B2A5085", 0 ) != 0;
}

updatetextongamepadchange()
{
    switch ( getgametype() )
    {
        case "_encstr_B31D06435BCB61E0":
            return 0;
        case "_encstr_9507034B25":
            switch ( round_vehicle_logic() )
            {
                case "_encstr_A107034A75":
                case "_encstr_A9D008C185E5D8B7C28C":
                case "_encstr_9C8D0B4BABD087CAC90B93AA60":
                case "_encstr_AD1F058082CACF":
                case "_encstr_89E10946E1536E6DD6A2B0":
                case "_encstr_BE180432D63D":
                case "_encstr_B26E07FBDB98427952":
                    return 0;
            }
    }

    return 1;
}

_id_131A3( var_0, var_1 )
{
    if ( var_1 )
        var_0.c130 = 1;
    else
        var_0.c130 = undefined;
}

updatehistoryhud( var_0 )
{
    return istrue( var_0.c130 );
}
