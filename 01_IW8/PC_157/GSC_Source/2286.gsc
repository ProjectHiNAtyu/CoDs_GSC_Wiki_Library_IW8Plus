// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.archetypes = [];
    level.archetypeids = [];
    var_0 = 0;

    for (;;)
    {
        var_1 = tablelookupbyrow( "_encstr_884E16FA5BD87801E3288C3D426A68B3AF5385F5C0177E9B", var_0, 0 );

        if ( !isdefined( var_1 ) || var_1 == "_encstr_A40101" )
            break;

        var_1 = int( var_1 );
        var_2 = tablelookupbyrow( "_encstr_884E16FA5BD87801E3288C3D426A68B3AF5385F5C0177E9B", var_0, 1 );
        level.archetypes[var_1] = var_2;
        level.archetypeids[var_2] = var_1;
        var_0++;
    }
}

removearchetype( var_0 )
{
    if ( !isdefined( var_0 ) )
        return;

    var_1 = undefined;

    switch ( var_0 )
    {
        case "_encstr_A6B3120F05CFBC15435ADB2FF1F723E338B88B13":
            var_1 = scripts\mp\archetypes\archassault::removearchetype;
            break;
        default:
            return;
    }

    if ( isdefined( var_1 ) )
        self [[ var_1 ]]();
}

_allowbattleslide( var_0 )
{
    if ( var_0 )
        scripts\mp\utility\perk::giveperk( "_encstr_A2A01653E0AB86FF79793C399861A70BE198BAEBA86BBF07" );
    else
        self notify( "_encstr_AF4512E2D7C5B4F9457AD10C99110FA52D2061B1" );
}

getrigindexfromarchetyperef( var_0 )
{
    if ( !isdefined( var_0 ) || var_0 == "_encstr_AABA05236DC831" )
        return 0;

    for ( var_1 = 0; var_1 < level.archetypes.size; var_1++ )
    {
        if ( level.archetypes[var_1] == var_0 )
            return var_1;
    }

    return 0;
}
