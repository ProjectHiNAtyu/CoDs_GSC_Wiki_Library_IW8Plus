// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init_battlechatter()
{
    level._battlechatter = spawnstruct();
    level._battlechatter.fnevaluatemoveevent = ::evaluatemoveevent;
    level._battlechatter.fnevaluatereloadevent = ::evaluatereloadevent;
    level._battlechatter.fnaddthreatevent = ::addthreatevent;
    level._battlechatter.fnevaluateattackevent = ::evaluateattackevent;
    level._battlechatter.fnplaybattlechatter = ::playbattlechatter;
    level._battlechatter.players = [];
    level._battlechatter.ai = [];
    level._battlechatter.nextsaytimes = [];
    level.heightforhighcallout = 96.0;
    level.mindistancecallout = 10.0;
    level.maxdistancecallout = 45.0;
    anim.threatcallouts = [];
    anim.eventchance = [];
    anim.eventtypeminwait = [];
    anim.threatcallouts["_encstr_BA25082B3C0EDB37AC46"] = 25;
    anim.threatcallouts["_encstr_AD7F0C89FCF7881B836B03155F8A"] = 25;
    anim.threatcallouts["_encstr_9C610B8EF829BFEAFC1307674F"] = 25;
    anim.threatcallouts["_encstr_ABA411B65B4FC29730A08F9FB8CE53FA97E6BC"] = 20;
    anim.threatcallouts["_encstr_A47310D842011FF12F9D5FC15F8798FFF68A"] = 20;
    anim.threatcallouts["_encstr_B42A10322758F56F7B7F357899AF3110C64A"] = 20;
    anim.threatcallouts["_encstr_95B7159AC0379B0733C4151CF039FBE5F778E182B82FD4"] = 25;
    anim.threatcallouts["_encstr_82240C2CD2AF8D0B39C85A9BB036"] = 10;
    anim.threatcallouts["_encstr_AF7310D7AFF2A61054F1A0D8E629F0EB9AC3"] = 90;
    anim.threatcallouts["_encstr_BC7C10A9241E888DF3C1A0C82A973DB0358E"] = 90;
    anim.threatcallouts["_encstr_8B100C921236848040011B246F18"] = 100;
    anim.threatcallouts["_encstr_BC0E11ECB29B95C92DD8F58DEDB1B0A34BDEE6"] = 95;
    anim.eventchance["_encstr_98630AB5EDD9ACA8D9CA73A3"]["_encstr_A369084A7B952FBBC0D5"] = 70;
    anim.eventtypeminwait["_encstr_98630AB5EDD9ACA8D9CA73A3"] = [];
    anim.eventtypeminwait["_encstr_B6CB07FBF91E7241B8"] = [];
    anim.eventtypeminwait["_encstr_B6E507408AF3D0F005"] = [];
    anim.eventtypeminwait["_encstr_8072069A235DE7EA"] = [];
    anim.eventtypeminwait["_encstr_98630AB5EDD9ACA8D9CA73A3"]["_encstr_A369084A7B952FBBC0D5"] = 10000;
    anim.eventtypeminwait["_encstr_B6E507408AF3D0F005"]["_encstr_8F8B0AB0723DF701A35108F4"] = 20000;
    anim.eventtypeminwait["_encstr_B6E507408AF3D0F005"]["_encstr_949A07A9EDD3C7E25F"] = 9000;
    anim.eventtypeminwait["_encstr_B6E507408AF3D0F005"]["_encstr_894F098A68DFCDA7203067"] = 25000;
    anim.eventtypeminwait["_encstr_B6CB07FBF91E7241B8"]["_encstr_93F3094A31E7B73CF8BB1C"] = 7000;
    anim.eventtypeminwait["_encstr_B6CB07FBF91E7241B8"]["_encstr_B8BC08B94BD9868EAC32"] = 7000;
    anim.eventtypeminwait["_encstr_B6CB07FBF91E7241B8"]["_encstr_8C0C099B26DF4808EB1302"] = 7000;
    anim.eventtypeminwait["_encstr_8072069A235DE7EA"]["_encstr_A40B070BB18E96B7DC"] = 9000;
    anim.eventtypeminwait["_encstr_8072069A235DE7EA"]["_encstr_B9A2058748FB5D"] = 3000;
    anim._id_13B42 = 120000;
    bcs_setup_countryids();
    level.dialog_system = 1;
}

bcs_setup_countryids()
{
    if ( !isdefined( anim.usedids ) )
    {
        anim.usedids = [];
        anim.flavorburstvoices = [];
        anim.countryids = [];
        bcs_setup_voice( "_encstr_89390E4D58FC981D9010681B1197FAC7", "_encstr_A40703AA27", 6, 1 );
        bcs_setup_voice( "_encstr_98A814EB78F8C4FA957D1F435BC8921B18E12575B1A8", "_encstr_A40703AA27", 6, 1 );
        bcs_setup_voice( "_encstr_A65E14D3C558ABCA1928D3B1135DF873EC15F85F7A01", "_encstr_A40703AA27", 3, 1 );
        bcs_setup_voice( "_encstr_824D0747A003F4C255", "_encstr_BD07030A55", 5 );
        bcs_setup_voice( "_encstr_AAD90DBF18400422B1C69BD6AD6B9B", "_encstr_BD19047B86AB", 3, 1 );
        bcs_setup_voice( "_encstr_A87A1365800B14B15BFB85E2B5229B572F4D408935", "_encstr_A9E405AAD49A91", 1, 1 );
        bcs_setup_voice( "_encstr_B219046EC29B", "_encstr_BD19047B86AB", 3, 1 );
        bcs_setup_voice( "_encstr_888D0A5349DEF33718BBECED", "_encstr_A9E405AAD49A91", 1, 1 );
        bcs_setup_voice( "_encstr_811804D8E8B8", "_encstr_811804D9E9B9", 3, 1 );
        bcs_setup_voice( "_encstr_A9440AEC93672923B5E29828", "_encstr_9478059D274FFC", 1, 1 );

        switch ( getdvar( "_encstr_B9CE11280AE2FF89F722E6ED2DCB9151CC93F0" ) )
        {
            case "_encstr_A61904730372":
            case "_encstr_BA840579D3F7F6":
                bcs_setup_voice( "_encstr_BC01093FD893A1830BF98E", "_encstr_BD19047B86AB", 3 );
                bcs_setup_voice( "_encstr_89500F0A78FB4EC32131619E5D485FD50B", "_encstr_A9E405AAD49A91", 1 );
                bcs_setup_voice( "_encstr_B44A08E6952F8B3BB612", "_encstr_BD19047B86AB", 3 );
                break;
            default:
                bcs_setup_voice( "_encstr_BC01093FD893A1830BF98E", "_encstr_B60703D9C1", 3 );
                bcs_setup_voice( "_encstr_89500F0A78FB4EC32131619E5D485FD50B", "_encstr_8A1904F7AACC", 1 );
                bcs_setup_voice( "_encstr_B44A08E6952F8B3BB612", "_encstr_A107030FBB", 3 );
                break;
        }
    }
}

bcs_setup_voice( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_3 ) )
        var_3 = 0;

    anim.usedids[var_0] = [];

    for ( var_4 = 0; var_4 < var_2; var_4++ )
    {
        anim.usedids[var_0][var_4] = spawnstruct();
        anim.usedids[var_0][var_4].count = 0;
        anim.usedids[var_0][var_4].npcid = "_encstr_A40101" + ( var_4 + 1 );
    }

    anim.countryids[var_0] = var_1;
    anim.flavorburstvoices[var_0] = var_3;
}

battlechatterenabled()
{
    return istrue( level.dialog_system );
}

autoassignquest( var_0 )
{
    var_0.battlechatterallowed = 1;
    level._battlechatter.ai[level._battlechatter.ai.size] = var_0;
    var_0.battlechatter = spawnstruct();
    var_0.battlechatter.countryid = anim.countryids[var_0.voice];
    var_0 setnpcid();
    thread _id_12BE5( var_0 );
    var_0 thread _id_11E60();
}

_id_12BC1( var_0 )
{
    level._battlechatter.ai = scripts\engine\utility::array_remove( level._battlechatter.ai, var_0 );
    var_0 notify( "_encstr_95321B3645CD7B468F150ABF6A3F03EFEA8B7D08027B0ED0FE9BA8AA82" );
}

_id_12BE5( var_0 )
{
    var_0 waittill( "_encstr_A3750609A5E61883" );
    _id_12BC1( var_0 );
}

setnpcid()
{
    var_0 = anim.usedids[self.voice];
    var_1 = var_0.size;
    var_2 = randomintrange( 0, var_1 );
    var_3 = var_2;

    for ( var_4 = 0; var_4 <= var_1; var_4++ )
    {
        if ( var_0[( var_2 + var_4 ) % var_1].count < var_0[var_3].count )
            var_3 = ( var_2 + var_4 ) % var_1;
    }

    thread npcidtracker( var_3 );
    self.battlechatter.npcid = var_0[var_3].npcid;
}

npcidtracker( var_0 )
{
    var_1 = self.voice;
    anim.usedids[var_1][var_0].count++;
    scripts\engine\utility::waittill_either( "_encstr_A3750609A5E61883", "_encstr_95321B3645CD7B468F150ABF6A3F03EFEA8B7D08027B0ED0FE9BA8AA82" );

    if ( !battlechatterenabled() )
        return;

    anim.usedids[var_1][var_0].count--;
}

_id_11E60()
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_95321B3645CD7B468F150ABF6A3F03EFEA8B7D08027B0ED0FE9BA8AA82" );

    for (;;)
    {
        self waittill( "_encstr_80BF06CA78A2226B" );

        if ( isdefined( self.enemy ) && isalive( self.enemy ) )
            _encstr_80C92737B1272DC1E8E6E50BDCB4ADBC262CE81D36566CA1B08E8E59E47DDD278507C1B2C9B83BDC8D::addthreatevent( "_encstr_8C0C099B26DF4808EB1302", self.enemy );
    }
}

evaluatemoveevent( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_95321B3645CD7B468F150ABF6A3F03EFEA8B7D08027B0ED0FE9BA8AA82" );

    if ( !battlechatterenabled() || !isdefined( self.goalpos ) || !istrue( self.battlechatterallowed ) )
        return;

    if ( distancesquared( self.origin, self.goalpos ) < 22500 )
        return;

    if ( randomint( 100 ) < anim.eventchance["_encstr_98630AB5EDD9ACA8D9CA73A3"]["_encstr_A369084A7B952FBBC0D5"] )
        playorderevent( "_encstr_A40B070BB18E96B7DC", "_encstr_A369084A7B952FBBC0D5", anim.player );
    else
        playorderevent( "_encstr_B9A2058748FB5D", "_encstr_93EE0B80579E49272A8DFE77A3", anim.player );
}

addthreatevent( var_0, var_1, var_2 )
{
    if ( isplayer( var_1 ) || isdefined( var_1.aitype ) )
    {
        if ( isdefined( self._blackboard ) )
            self._blackboard.battlechatter_target = var_1;

        var_3 = threatinfantry( var_1, undefined );
    }
}

getthreatinfantrycallouttype( var_0 )
{
    var_1 = getdirectionfacingclock( self.angles, self.origin, var_0.origin );
    var_2 = var_1;
    var_3 = self;
    var_4 = getdistancemeters( var_3.origin, var_0.origin );
    self.possiblethreatcallouts = [];

    if ( isexposed( var_0 ) )
        addpossiblethreatcallout( "_encstr_BA25082B3C0EDB37AC46" );

    var_5 = 0;

    if ( var_0.origin[2] - var_3.origin[2] >= level.heightforhighcallout )
    {
        if ( addpossiblethreatcallout( "_encstr_95B7159AC0379B0733C4151CF039FBE5F778E182B82FD4" ) )
            var_5 = 1;
    }

    addpossiblethreatcallout( "_encstr_A47310D842011FF12F9D5FC15F8798FFF68A" );

    if ( !var_5 )
    {
        if ( var_2 == "_encstr_A20703E7F2" )
        {
            addpossiblethreatcallout( "_encstr_AD7F0C89FCF7881B836B03155F8A" );

            if ( var_4 > level.mindistancecallout && var_4 < level.maxdistancecallout )
                addpossiblethreatcallout( "_encstr_9C610B8EF829BFEAFC1307674F" );
        }

        addpossiblethreatcallout( "_encstr_ABA411B65B4FC29730A08F9FB8CE53FA97E6BC" );
        addpossiblethreatcallout( "_encstr_B42A10322758F56F7B7F357899AF3110C64A" );
        addpossiblethreatcallout( "_encstr_82240C2CD2AF8D0B39C85A9BB036" );
    }

    if ( !self.possiblethreatcallouts.size )
        return undefined;

    var_6 = getweightedchanceroll( self.possiblethreatcallouts, anim.threatcallouts );
    var_7 = spawnstruct();
    var_7.type = var_6;
    return var_7;
}

addpossiblethreatcallout( var_0 )
{
    var_1 = 0;

    if ( !callouttypewillrepeat( var_0 ) )
        var_1 = 1;

    if ( !var_1 )
        return var_1;

    self.possiblethreatcallouts[self.possiblethreatcallouts.size] = var_0;
    return var_1;
}

setlastcallouttype( var_0 )
{
    level._battlechatter.watch_for_player_going_belowmap_or_oob = var_0;
    level._battlechatter.watch_for_player_in_gulag = gettime();
}

callouttypewillrepeat( var_0 )
{
    if ( !isdefined( level._battlechatter.watch_for_player_going_belowmap_or_oob ) )
        return 0;

    if ( !isdefined( level._battlechatter.watch_for_player_in_gulag ) )
        return 0;

    var_1 = level._battlechatter.watch_for_player_going_belowmap_or_oob;
    var_2 = level._battlechatter.watch_for_player_in_gulag;
    var_3 = anim._id_13B42;

    if ( var_0 == var_1 && gettime() - var_2 < var_3 )
        return 1;

    return 0;
}

isexposed( var_0 )
{
    if ( distancesquared( self.origin, var_0.origin ) > 2250000 )
        return 0;

    var_1 = var_0 bcgetclaimednode();

    if ( !isdefined( var_1 ) )
        return 1;

    if ( !var_0 isnodecoverorconceal() )
        return 0;

    return 1;
}

threatinfantryexposed( var_0 )
{
    var_1 = [];
    var_1 = scripts\engine\utility::array_add( var_1, "_encstr_A3B405174FD9CB" );
    var_1 = scripts\engine\utility::array_add( var_1, "_encstr_B97109252BB257B0996D11" );
    var_2 = var_1[randomint( var_1.size )];
    addthreatexposedalias( var_2 );
}

addthreatexposedalias( var_0 )
{
    if ( var_0 == "_encstr_B62906822EF847A8" )
        var_0 = "_encstr_A2830FD6B79D56ADAC73D1AF9DC9DEBA38";

    var_1 = self.owner getbattlechatteralias( "_encstr_B3D409B5F3C3771A0B9841" + var_0 );
    self.soundaliases[self.soundaliases.size] = var_1;
    return 1;
}

addthreatobviousalias()
{
    var_0 = self.owner getbattlechatteralias( "_encstr_A2700FBD4E23CA39EB37EAC11CE4B2B96E" );
    self.soundaliases[self.soundaliases.size] = var_0;
    return 1;
}

addthreatdistancealias( var_0 )
{
    var_1 = self.owner getbattlechatteralias( "_encstr_879E0D663722DB0FA60B10EA382B74" ) + var_0;
    self.soundaliases[self.soundaliases.size] = var_1;
    return 1;
}

getdistancemeters( var_0, var_1 )
{
    var_2 = distance2d( var_0, var_1 );
    var_3 = 0.0254 * var_2;
    return var_3;
}

getdistancemetersnormalized( var_0, var_1 )
{
    var_2 = getdistancemeters( var_0, var_1 );

    if ( var_2 < 15.0 )
        return "_encstr_A607030FA8";
    else if ( var_2 < 25.0 )
        return "_encstr_9407030723";
    else if ( var_2 < 35.0 )
        return "_encstr_8A0703CC03";
    else if ( var_2 < 45.0 )
        return "_encstr_8707032BAF";
    else if ( var_2 < 55.0 )
        return "_encstr_9307036531";
    else if ( var_2 < 65.0 )
        return "_encstr_9C0703DAA7";
    else if ( var_2 < 75.0 )
        return "_encstr_B80703E603";
    else if ( var_2 < 85.0 )
        return "_encstr_810703F142";
    else if ( var_2 < 95.0 )
        return "_encstr_B207032706";
    else
        return "_encstr_BC18043672F3";
}

getrelativeangles( var_0 )
{
    var_1 = var_0.angles;

    if ( !isplayer( var_0 ) )
    {
        var_2 = var_0 bcgetclaimednode();

        if ( isdefined( var_2 ) )
            var_1 = var_2.angles;
    }

    return var_1;
}

bcgetclaimednode()
{
    if ( isplayer( self ) )
        return self.node;
    else
        return _encstr_B43220B9D8279638D19B97C2374BD6E557479663D28E5ED71BDEADB5BD9BB8ECE6D8::getclaimednode();
}

isnodecoverorconceal()
{
    var_0 = self.node;

    if ( !isdefined( var_0 ) )
        return 0;

    if ( issubstr( var_0.type, "_encstr_958E060D7BCE564E" ) || issubstr( var_0.type, "_encstr_AAF60845EF6BEECF7870" ) )
        return 1;

    return 0;
}

getdirectionfacingclock( var_0, var_1, var_2 )
{
    var_3 = anglestoforward( var_0 );
    var_4 = vectornormalize( var_3 );
    var_5 = vectortoangles( var_4 );
    var_6 = vectortoangles( var_2 - var_1 );
    var_7 = var_5[1] - var_6[1];
    var_7 = var_7 + 360;
    var_7 = int( var_7 ) % 360;

    if ( var_7 > 345 || var_7 < 15 )
        var_8 = "_encstr_A20703E7F2";
    else if ( var_7 < 45 )
        var_8 = "_encstr_AF4C02EA";
    else if ( var_7 < 75 )
        var_8 = "_encstr_9B4C028A";
    else if ( var_7 < 105 )
        var_8 = "_encstr_A94C0242";
    else if ( var_7 < 135 )
        var_8 = "_encstr_B94C02A9";
    else if ( var_7 < 165 )
        var_8 = "_encstr_BD4C02AB";
    else if ( var_7 < 195 )
        var_8 = "_encstr_8B4C02A3";
    else if ( var_7 < 225 )
        var_8 = "_encstr_A14C027A";
    else if ( var_7 < 255 )
        var_8 = "_encstr_AB4C02E0";
    else if ( var_7 < 285 )
        var_8 = "_encstr_AA4C024B";
    else if ( var_7 < 315 )
        var_8 = "_encstr_A607030FA8";
    else
        var_8 = "_encstr_BC07031A56";

    return var_8;
}

getdegreeselevation( var_0, var_1 )
{
    var_2 = var_1[2] - var_0[2];
    var_3 = distance2d( var_0, var_1 );
    var_4 = atan( var_2 / var_3 );

    if ( var_4 < 15 || var_4 > 65 )
        return var_4;
    else if ( var_4 < 25 )
        return 20;
    else if ( var_4 < 35 )
        return 30;
    else if ( var_4 < 45 )
        return 40;
    else if ( var_4 < 55 )
        return 50;
    else if ( var_4 < 65 )
        return 60;
}

addthreatcalloutalias( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = "_encstr_A40101";

    var_2 = self.owner getbattlechatteralias( "_encstr_9EA910045B23FF3E89A1625A20E1F5F79BA8" + var_0 ) + var_1;
    self.soundaliases[self.soundaliases.size] = var_2;
    return 1;
}

getdirectioncompass( var_0, var_1 )
{
    var_2 = vectortoangles( var_1 - var_0 );
    var_3 = var_2[1];
    var_4 = getnorthyaw();
    var_3 = var_3 - var_4;

    if ( var_3 < 0 )
        var_3 = var_3 + 360;
    else if ( var_3 > 360 )
        var_3 = var_3 - 360;

    if ( var_3 < 22.5 || var_3 > 337.5 )
        var_5 = "_encstr_807106ADD8A044AA";
    else if ( var_3 < 67.5 )
        var_5 = "_encstr_802B0A880A62E908D775AE25";
    else if ( var_3 < 112.5 )
        var_5 = "_encstr_80F605B73D8AF0";
    else if ( var_3 < 157.5 )
        var_5 = "_encstr_94E40A7FCFB76C205383578B";
    else if ( var_3 < 202.5 )
        var_5 = "_encstr_9B6006E6DEABA334";
    else if ( var_3 < 247.5 )
        var_5 = "_encstr_8F790A9B401563AC9003BBA4";
    else if ( var_3 < 292.5 )
        var_5 = "_encstr_BC6005560B9B1D";
    else if ( var_3 < 337.5 )
        var_5 = "_encstr_94960A4860B34D5243F25AEB";
    else
        var_5 = "_encstr_93690B9802CA07B32F81DEC165";

    return var_5;
}

normalizecompassdirection( var_0 )
{
    var_1 = undefined;

    switch ( var_0 )
    {
        case "_encstr_807106ADD8A044AA":
            var_1 = "_encstr_A64C02C0";
            break;
        case "_encstr_802B0A880A62E908D775AE25":
            var_1 = "_encstr_BC0703CD4F";
            break;
        case "_encstr_80F605B73D8AF0":
            var_1 = "_encstr_9E4C02CF";
            break;
        case "_encstr_94E40A7FCFB76C205383578B":
            var_1 = "_encstr_8A0703DC77";
            break;
        case "_encstr_9B6006E6DEABA334":
            var_1 = "_encstr_B84C021A";
            break;
        case "_encstr_8F790A9B401563AC9003BBA4":
            var_1 = "_encstr_B90703CDB2";
            break;
        case "_encstr_BC6005560B9B1D":
            var_1 = "_encstr_B34C0299";
            break;
        case "_encstr_94960A4860B34D5243F25AEB":
            var_1 = "_encstr_A3070302C8";
            break;
        case "_encstr_93690B9802CA07B32F81DEC165":
            var_1 = "_encstr_93690B9802CA07B32F81DEC165";
            break;
        default:
            return;
    }

    return var_1;
}

addthreatelevationalias( var_0 )
{
    var_1 = self.owner getbattlechatteralias( "_encstr_9CA40D0E982B6D9AF7BBE741E96570" ) + var_0;
    self.soundaliases[self.soundaliases.size] = var_1;
    return 1;
}

getweightedchanceroll( var_0, var_1 )
{
    var_2 = undefined;
    var_3 = -1;

    foreach ( var_5 in var_0 )
    {
        if ( var_1[var_5] <= 0 )
            continue;

        var_6 = randomint( var_1[var_5] );

        if ( isdefined( var_2 ) && var_1[var_2] >= 100 )
        {
            if ( var_1[var_5] < 100 )
                continue;
        }
        else
        {
            if ( var_1[var_5] >= 100 )
            {
                var_2 = var_5;
                var_3 = var_6;
                continue;
            }

            if ( var_6 > var_3 )
            {
                var_2 = var_5;
                var_3 = var_6;
            }
        }
    }

    return var_2;
}

threatinfantry( var_0, var_1 )
{
    self endon( "_encstr_B74C10D8C2B9D8B2C6806E38ACC2D6B4B9CE" );
    var_2 = createchatphrase();
    var_2.master = 1;
    var_2.threatent = var_0;
    var_3 = getthreatinfantrycallouttype( var_0 );

    if ( !isdefined( var_3 ) || isdefined( var_3 ) && !isdefined( var_3.type ) )
        return 0;

    var_4 = undefined;

    if ( isdefined( self.callout_type_override ) )
        var_4 = self.callout_type_override;
    else
        var_4 = var_3.type;

    switch ( var_4 )
    {
        case "_encstr_BA25082B3C0EDB37AC46":
            var_5 = self;
            var_2 threatinfantryexposed( var_0 );
            break;
        case "_encstr_9C610B8EF829BFEAFC1307674F":
            if ( isdefined( self._blackboard ) )
                self._blackboard.battlechatter_target = var_0;

            var_2 addthreatobviousalias();
            break;
        case "_encstr_AD7F0C89FCF7881B836B03155F8A":
            var_6 = self;
            var_7 = getdistancemetersnormalized( var_6.origin, var_0.origin );

            if ( isdefined( self._blackboard ) )
                self._blackboard.battlechatter_target = var_0;

            var_2 addthreatdistancealias( var_7 );
            break;
        case "_encstr_ABA411B65B4FC29730A08F9FB8CE53FA97E6BC":
            var_6 = self;
            var_8 = getrelativeangles( var_6 );
            var_9 = getdirectionfacingclock( var_8, var_6.origin, var_0.origin );
            var_2 addthreatcalloutalias( "_encstr_9B700DD87BE6D1161B8E36C6F6365B", var_9 );

            if ( isdefined( self._blackboard ) )
                self._blackboard.battlechatter_target = var_0;

            break;
        case "_encstr_A47310D842011FF12F9D5FC15F8798FFF68A":
            var_6 = self;
            var_8 = getrelativeangles( var_6 );
            var_9 = getdirectionfacingclock( var_8, var_6.origin, var_0.origin );
            var_2 addthreatcalloutalias( "_encstr_9B700DD87BE6D1161B8E36C6F6365B", var_9 );

            if ( isdefined( self._blackboard ) )
                self._blackboard.battlechatter_target = var_0;

            break;
        case "_encstr_B42A10322758F56F7B7F357899AF3110C64A":
            var_6 = self;
            var_8 = getrelativeangles( var_6 );
            var_9 = getdirectionfacingclock( var_8, var_6.origin, var_0.origin );
            var_2 addthreatcalloutalias( "_encstr_803E0C3571DBF9D3031248480A9C", var_9 );

            if ( isdefined( self._blackboard ) )
                self._blackboard.battlechatter_target = var_0;

            break;
        case "_encstr_95B7159AC0379B0733C4151CF039FBE5F778E182B82FD4":
            var_6 = self;
            var_8 = getrelativeangles( var_6 );
            var_9 = getdirectionfacingclock( var_8, var_6.origin, var_0.origin );
            var_10 = getdegreeselevation( var_6.origin, var_0.origin );

            if ( var_10 >= 20 && var_10 <= 60 )
            {
                var_2 addthreatcalloutalias( "_encstr_BEAB115BA1FB01128BDAC4283F43F75B413FB3", var_9 );
                var_2 addthreatelevationalias( var_10 );
            }
            else
                return 0;

            if ( isdefined( self._blackboard ) )
                self._blackboard.battlechatter_target = var_0;

            break;
        case "_encstr_82240C2CD2AF8D0B39C85A9BB036":
            var_6 = self;
            var_11 = getdirectioncompass( var_6.origin, var_0.origin );
            var_12 = normalizecompassdirection( var_11 );

            if ( var_12 == "_encstr_93690B9802CA07B32F81DEC165" )
                return 0;

            var_2 addthreatcalloutalias( "_encstr_B1430937B0F3A452157FCD", var_12 );

            if ( isdefined( self._blackboard ) )
                self._blackboard.battlechatter_target = var_0;

            break;
    }

    setlastcallouttype( var_3.type );
    var_5 = self;
    var_5.curevent = spawnstruct();
    var_5.curevent.eventaction = "_encstr_B6CB07FBF91E7241B8";
    var_5.curevent.eventtype = "_encstr_8C0C099B26DF4808EB1302";

    if ( isdefined( self._blackboard ) )
        self._blackboard.battlechatter_line_ok = 0;

    var_5 playphrase( var_2, self );

    if ( isdefined( self._blackboard ) )
    {
        self._blackboard.battlechatter_alias = undefined;
        self._blackboard.battlechatter_target = undefined;
    }

    return 1;
}

playbattlechatter( var_0 )
{

}

evaluatereloadevent()
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_95321B3645CD7B468F150ABF6A3F03EFEA8B7D08027B0ED0FE9BA8AA82" );

    if ( !battlechatterenabled() || !istrue( self.battlechatterallowed ) )
        return;

    thread playinformevent( "_encstr_8F8B0AB0723DF701A35108F4", "_encstr_889608EF71FB09582BD6" );
}

evaluateattackevent( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_95321B3645CD7B468F150ABF6A3F03EFEA8B7D08027B0ED0FE9BA8AA82" );

    if ( !battlechatterenabled() || !istrue( self.battlechatterallowed ) )
        return;

    var_1 = "_encstr_8978057DE339BF";

    switch ( var_0 )
    {
        case "_encstr_8978057DE339BF":
            var_1 = "_encstr_8978057DE339BF";
            break;
        case "_encstr_A28D080FA2D39DC7FAFA":
            var_1 = "_encstr_A28D080FA2D39DC7FAFA";
            break;
        case "_encstr_AA180449BD98":
            var_1 = "_encstr_884806F3801F6617";
            break;
        case "_encstr_BCA80EF087466097CAA3DF91EF026948":
            var_1 = "_encstr_AF2D07F8E23CA3E0E3";
            break;
        case "_encstr_8172057657DC9B":
            var_1 = "_encstr_A2180C67B1593FE8C24752F39DAB";
            break;
        case "_encstr_ABC808AA309FAAD7E0D5":
            var_1 = "_encstr_82CE0FF78F0A275846F998109A23105122";
            break;
        case "_encstr_9CA9060C2CC70B83":
            var_1 = "_encstr_8AEA0DBF4849189AADD8E79D3F7DF2";
            break;
        case "_encstr_8ACB0862588107A3B825":
            var_1 = "_encstr_8ACB0862588107A3B825";
            break;
    }

    thread playinformevent( var_1, "_encstr_949A07A9EDD3C7E25F" );
}

playinformevent( var_0, var_1 )
{
    var_2 = self;
    var_2 endon( "_encstr_A3750609A5E61883" );
    var_2 endon( "_encstr_95321B3645CD7B468F150ABF6A3F03EFEA8B7D08027B0ED0FE9BA8AA82" );
    var_3 = var_2 createchatphrase();
    var_3 addinformalias( var_0 );
    var_2.curevent = spawnstruct();
    var_2.curevent.eventaction = "_encstr_B6E507408AF3D0F005";
    var_2.curevent.eventtype = var_1;
    var_2 playphrase( var_3, self );
}

playorderevent( var_0, var_1, var_2 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_95321B3645CD7B468F150ABF6A3F03EFEA8B7D08027B0ED0FE9BA8AA82" );
    var_3 = self;
    var_3.curevent = spawnstruct();
    var_3.curevent.eventaction = "_encstr_8072069A235DE7EA";
    var_3.curevent.eventtype = var_0;

    switch ( var_0 )
    {
        case "_encstr_A40B070BB18E96B7DC":
            if ( isdefined( self._blackboard ) )
                self._blackboard.battlechatter_target = anim.player;

            _id_1213B( var_1, var_2 );
            break;
        case "_encstr_B9A2058748FB5D":
            _id_1213B( var_1, var_2 );
            break;
        case "_encstr_B3360903D8FBE85A6316F7":
            _id_1213B( var_1 );
            break;
    }

    if ( isdefined( self._blackboard ) )
    {
        self._blackboard.battlechatter_alias = undefined;
        self._blackboard.battlechatter_target = undefined;
    }

    self notify( "_encstr_A4650E32F673CA0837C12B0BD65ADCEC" );
}

_id_1213B( var_0, var_1 )
{
    var_2 = self;
    var_2 endon( "_encstr_A3750609A5E61883" );
    var_2 endon( "_encstr_95321B3645CD7B468F150ABF6A3F03EFEA8B7D08027B0ED0FE9BA8AA82" );
    var_3 = var_2 createchatphrase();
    var_3 addorderalias( "_encstr_A40B070BB18E96B7DC", var_0 );
    var_2 playphrase( var_3, self );
}

createchatphrase()
{
    var_0 = spawnstruct();
    var_0.owner = self;
    var_0.soundevents = [];
    var_0.soundaliases = [];
    var_0.responsealiases = [];
    var_0.master = 0;
    return var_0;
}

addinformalias( var_0, var_1, var_2 )
{
    if ( !isdefined( var_1 ) )
        var_1 = "_encstr_A40101";
    else
        var_1 = "_encstr_984C028E" + var_1;

    if ( !isdefined( var_2 ) )
        var_2 = "_encstr_A40101";
    else
        var_2 = "_encstr_984C028E" + var_2;

    if ( !issubstr( var_1, "_encstr_B92007DDCA2C0EF6DC" ) )
        var_0 = "_encstr_AA2108D86D9E80C6D277" + var_0;
    else
        var_0 = "_encstr_A40101";

    var_3 = self.owner getbattlechatteralias( var_0 + var_1 + var_2 );
    self.soundaliases[self.soundaliases.size] = var_3;
}

addorderalias( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = "_encstr_A40101";
    else
        var_1 = "_encstr_984C028E" + var_1;

    var_2 = self.owner getbattlechatteralias( "_encstr_8072069A235DE7EA" + var_1 );

    if ( !isdefined( var_2 ) )
        return 0;

    self.soundaliases[self.soundaliases.size] = var_2;
    return 1;
}

stop_speaking( var_0, var_1 )
{
    var_1 endon( "_encstr_A3750609A5E61883" );
    self waittill( "_encstr_A3750609A5E61883" );

    if ( isdefined( var_1 ) )
    {
        var_1 stopsounds();
        waitframe();

        if ( isdefined( var_1 ) )
        {
            var_1 notify( var_0 );
            var_1 delete();
        }
    }
}

isradioline( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = 0;

    if ( getsubstr( var_0, var_0.size - 2, var_0.size ) == "_encstr_9F0703A11B" )
        return 1;

    if ( issubstr( var_0, "_encstr_8C1A04294867" ) )
        return 1;

    if ( issubstr( var_0, "_encstr_8ACA0841990F0BF25077" ) )
        return scripts\engine\utility::ter_op( var_1, "_encstr_B424079FF6A868512E", 1 );

    if ( issubstr( var_0, "_encstr_B4CA086FF3B82DF206AE" ) )
        return scripts\engine\utility::ter_op( var_1, "_encstr_8B24078971D03477E0", 1 );

    if ( issubstr( var_0, "_encstr_95C508B7DE4B53923D29" ) )
        return scripts\engine\utility::ter_op( var_1, "_encstr_8C2807FA3957C6987D", 1 );

    if ( issubstr( var_0, "_encstr_B4C508874D9B71D2D31F" ) )
        return scripts\engine\utility::ter_op( var_1, "_encstr_9728075973B5B8457F", 1 );

    return 0;
}

dotypelimit( var_0, var_1 )
{
    if ( !isdefined( level._battlechatter.nextsaytimes[var_0] ) )
        level._battlechatter.nextsaytimes[var_0] = [];

    level._battlechatter.nextsaytimes[var_0][var_1] = gettime() + anim.eventtypeminwait[var_0][var_1];
}

cansay( var_0, var_1, var_2 )
{
    if ( !istrue( self.battlechatterallowed ) )
        return 0;

    if ( isdefined( level._battlechatter.nextsaytimes[var_0] ) && isdefined( level._battlechatter.nextsaytimes[var_0][var_1] ) && gettime() < level._battlechatter.nextsaytimes[var_0][var_1] )
        return 0;

    if ( issentient( self ) && self.ignoreall )
        return 0;

    if ( self isinscriptedstate() )
        return 0;

    return 1;
}

playphrase( var_0, var_1, var_2 )
{
    self endon( "_encstr_A3750609A5E61883" );
    var_3 = 0;

    if ( isdefined( var_2 ) )
        return var_3;

    if ( isdefined( self.battlechatter.isspeaking ) && self.battlechatter.isspeaking )
        return var_3;

    if ( !var_1 cansay( var_1.curevent.eventaction, var_1.curevent.eventtype ) )
        return var_3;

    var_1 thread _id_13164( var_1.curevent.eventaction, var_1.curevent.eventtype );

    for ( var_4 = 0; var_4 < var_0.soundaliases.size; var_4++ )
    {
        if ( !self.battlechatterallowed )
            continue;

        if ( !isdefined( self._animactive ) || isdefined( self._animactive ) && self._animactive > 0 )
            continue;

        if ( !soundexists( var_0.soundaliases[var_4] ) )
            continue;

        var_5 = gettime();

        if ( isradioline( var_0.soundaliases[var_4] ) )
        {
            var_6 = spawn( "_encstr_A3050EDF6FF5DC081CC1AFA37097B80B", self gettagorigin( "_encstr_A6DD0990781C98B7F7E2DC" ) );
            var_6 linkto( var_1 );
        }
        else
        {
            var_6 = spawn( "_encstr_A3050EDF6FF5DC081CC1AFA37097B80B", self gettagorigin( "_encstr_87DA078B11C012A35F" ) );
            var_6 linkto( var_1 );
        }

        thread stop_speaking( var_0.soundaliases[var_4], var_6 );
        self notify( var_0.soundaliases[var_4] + "_encstr_8B1F09BF5B8B578D93E1F9" );
        var_3 = 1;
        var_6 playsound( var_0.soundaliases[var_4] );
        wait( lookupsoundlength( var_0.soundaliases[var_4] ) / 1000 );
        self notify( var_0.soundaliases[var_4] );
        var_6 delete();
    }

    self notify( "_encstr_881010533DA140677BA34B5B93298967153B" );
    return var_3;
}

_id_13164( var_0, var_1 )
{
    self.battlechatter.isspeaking = 1;
    scripts\engine\utility::_id_143A5( "_encstr_881010533DA140677BA34B5B93298967153B", "_encstr_A3750609A5E61883" );

    if ( isdefined( self.battlechatter ) )
        self.battlechatter.isspeaking = 0;

    dotypelimit( var_0, var_1 );
}

getbcstate()
{
    return "_encstr_877C076CED5B1316D1";
}

bc_prefix( var_0 )
{
    if ( isdefined( var_0 ) && var_0 == "_encstr_B73407B68FAB1BAD91" )
        return tolower( "_encstr_B81C08D2E101BB95A701" + self.battlechatter.countryid + self.battlechatter.npcid + "_encstr_984C028E" );
    else if ( isdefined( var_0 ) && var_0 == "_encstr_8C2F0D2BC7C3EB0D6AB27569B45AED" )
        return tolower( "_encstr_A44407CB69C903A280" );
    else if ( getdvar( "_encstr_8C140E5B177639A7607066750888F1C3" ) != "_encstr_9819045FD029" )
    {
        if ( isarray( getdvar( "_encstr_8C140E5B177639A7607066750888F1C3" ) ) )
        {
            if ( isdefined( self.team ) && scripts\engine\utility::array_contains( getdvar( "_encstr_8C140E5B177639A7607066750888F1C3" ), self.team ) )
                return tolower( "_encstr_A95808AA28573D331078" + self.battlechatter.countryid + self.battlechatter.npcid + "_encstr_984C028E" );
        }
        else if ( isdefined( self.team ) && self.team == getdvar( "_encstr_8C140E5B177639A7607066750888F1C3" ) )
            return tolower( "_encstr_A95808AA28573D331078" + self.battlechatter.countryid + self.battlechatter.npcid + "_encstr_984C028E" );
        else
            return tolower( "_encstr_8A7B08C5808791C5DEF9" + self.battlechatter.countryid + self.battlechatter.npcid + "_encstr_984C028E" );
    }
    else
        return tolower( "_encstr_8A7B08C5808791C5DEF9" + self.battlechatter.countryid + self.battlechatter.npcid + "_encstr_984C028E" );
}

getbattlechatteralias( var_0 )
{
    var_1 = undefined;
    var_2 = bc_prefix();

    switch ( var_0 )
    {
        case "_encstr_A8B60BB220C95988580602E27F":
            var_1 = var_2 + "_encstr_AF151412ED339B8D8DD012C928F9479F68588EB1FE19";
            break;
        case "_encstr_88BB0D833F903E6FD51ECAC2E0A68F":
            var_1 = var_2 + getbcstate() + "_encstr_956B0FF716481B465B3079B218AFBEF7A6";
            break;
        case "_encstr_8B3C0FFB20581FD661794A826B810E8753":
            var_1 = var_2 + getbcstate() + "_encstr_ABF511FAC67B73B185A3BED8DB5B1C58CDE6FA";
            break;
        case "_encstr_ADDD0C67902093E211501F54AEC9":
            var_1 = var_2 + getbcstate() + "_encstr_A3E50EF698EFFEC73F33E9A8A77A08E0";
            break;
        case "_encstr_88E90C6F67F6273213E9FAD13FEE":
            var_1 = var_2 + getbcstate() + "_encstr_AAFE0E7D1B7BB9C685E8EB561BB2ECD7";
            break;
        case "_encstr_9F200C8188AB99C21C19DB114E61":
            var_1 = var_2 + getbcstate() + "_encstr_A6BF0D2EA718FBAE478BFFF89DC711";
            break;
        case "_encstr_88630DC67BDCC6161DAFC92DECD08E":
            var_1 = var_2 + getbcstate() + "_encstr_B6920EE91BC78D9F213D5F8A5B097BD3";
            break;
        case "_encstr_8FEF0E6CDBCD8D161DBE8D56E6D1CA39":
            var_1 = var_2 + getbcstate() + "_encstr_8F060F01CA25DD698F64B8AE4D8BB383CA";
            break;
        case "_encstr_8F630E118AC3C6787337899B229F1015":
            var_1 = var_2 + getbcstate() + "_encstr_81AC0F474078C65FCA6321233732674963";
            break;
        case "_encstr_879E0D663722DB0FA60B10EA382B74":
            var_1 = var_2 + "_encstr_A1A10EA7DF825D60136B9609D4EBA3AF";
            break;
        case "_encstr_9CA40D0E982B6D9AF7BBE741E96570":
            var_1 = var_2 + "_encstr_8CB70E8EAFD07BB0206BAF73CA878DDF";
            break;
        case "_encstr_8A45172E188084FA5609A7671784E2C5B04063B9B1D8577337":
            var_1 = var_2 + "_encstr_8A45172E188084FA5609A7671784E2C5B04063B9B1D8577337";
            break;
        case "_encstr_BC5E112DD863484FF7F241C8FA8A0BC0336D25":
            var_1 = var_2 + "_encstr_BC5E112DD863484FF7F241C8FA8A0BC0336D25";
            break;
        case "_encstr_A2CF1159F083DB37CA32D7894EACC2B65A733B":
            var_1 = var_2 + "_encstr_A2CF1159F083DB37CA32D7894EACC2B65A733B";
            break;
        case "_encstr_889511953CE0ED9B9532D7D6EDCECAB5B2DCD1":
            var_1 = var_2 + "_encstr_889511953CE0ED9B9532D7D6EDCECAB5B2DCD1";
            break;
        case "_encstr_A4B5179D097825CFB581E1CAC814AF1D78BD04DF5F306D1FE7":
            var_1 = var_2 + "_encstr_A4B5179D097825CFB581E1CAC814AF1D78BD04DF5F306D1FE7";
            break;
        case "_encstr_9D940D35A1D08D97EDE9998273352B":
            var_1 = var_2 + "_encstr_9D940D35A1D08D97EDE9998273352B";
            break;
        case "_encstr_8C9D0F5438DDE26AB0D9B7FB1088311AA3":
        case "_encstr_9E9B0CD180790F327359FAB3804F":
            var_1 = var_2 + "_encstr_8C9D0F5438DDE26AB0D9B7FB1088311AA3";
            break;
        case "_encstr_9BC118B4E699B79C6BF54B37C6BD5B96CDB3BE9DC9B2B9588C95":
            var_1 = var_2 + "_encstr_9BC118B4E699B79C6BF54B37C6BD5B96CDB3BE9DC9B2B9588C95";
            break;
        case "_encstr_9F4E1881D0295F4203297A52D8693F3FC3C92F13F8B0BB4CCB78":
        case "_encstr_A4601BB4E633DE9CD67D5B4BD81BCC2DE4D6EBA9AEECD92B9CE62CBA8E":
            var_1 = var_2 + "_encstr_9F4E1881D0295F4203297A52D8693F3FC3C92F13F8B0BB4CCB78";
            break;
        case "_encstr_B7870FDFA54482026B8E058DC0384CDA24":
            var_1 = var_2 + "_encstr_B7870FDFA54482026B8E058DC0384CDA24";
            break;
        case "_encstr_A3BF112D03057F6DD5570A90D20FF140305DB7":
            var_1 = var_2 + "_encstr_A3BF112D03057F6DD5570A90D20FF140305DB7";
            break;
        case "_encstr_A3E2130B10DA022EADFF8B4F7F7F63A2F6DE90AA87":
            var_1 = var_2 + "_encstr_A3E2130B10DA022EADFF8B4F7F7F63A2F6DE90AA87";
            break;
        case "_encstr_958D12B17B6C168EA5F6CD7D9C95CDE0B7DCDCAC":
            var_1 = var_2 + getbcstate() + "_encstr_98230F777B3A7ED8AC840820217220AE23";
            break;
        case "_encstr_A3740E1FB2A7908ECF9A4853C243C958":
            var_1 = var_2 + "_encstr_A3740E1FB2A7908ECF9A4853C243C958";
            break;
        case "_encstr_AA8611882E985AAA67622DDBFF53A528501A19":
            var_1 = var_2 + "_encstr_82E612ED9332CA4ED76BEDCEACAFD8F65B8985E8";
            break;
        case "_encstr_9C98142F23D9EAE27F153F96DF385090B67F3591FF6B":
            var_1 = var_2 + "_encstr_AA0E157B4E91B2C9D7B6DEB3B2D737B7CD6C7B6BC4B01D";
            break;
        case "_encstr_A2700FBD4E23CA39EB37EAC11CE4B2B96E":
            var_1 = var_2 + "_encstr_A2700FBD4E23CA39EB37EAC11CE4B2B96E";
            break;
        case "_encstr_BE7C124E56851B1D2DDECDBEC60B9BEAB01B3ACB":
            var_1 = var_2 + "_encstr_BE7C124E56851B1D2DDECDBEC60B9BEAB01B3ACB";
            break;
        case "_encstr_9E6517DA63A0766303502239D86827EB48C9456F85F8FAB7B5":
            var_1 = var_2 + "_encstr_9E6517DA63A0766303502239D86827EB48C9456F85F8FAB7B5";
            break;
        case "_encstr_BC3114BD3D8AD0F8F37391DE3AAFA2F1A6962D03B2F5":
            var_1 = var_2 + "_encstr_BC3114BD3D8AD0F8F37391DE3AAFA2F1A6962D03B2F5";
            break;
        case "_encstr_B98E17C5D5BBE30DF3381B282B1C0345CE73193FBCCD2AAACF":
            var_1 = var_2 + "_encstr_B98E17C5D5BBE30DF3381B282B1C0345CE73193FBCCD2AAACF";
            break;
        case "_encstr_AAA614985AD2F1F8A35395804CE303933E3379E0F26F":
            var_1 = var_2 + "_encstr_AAA614985AD2F1F8A35395804CE303933E3379E0F26F";
            break;
        case "_encstr_A32906470BEAB91D":
            var_1 = var_2 + "_encstr_A32906470BEAB91D";
            break;
        case "_encstr_BA8318EBF86095FADD5F5757118942DD386626B673E05103BD31":
            var_1 = var_2 + "_encstr_95110A70F709DBA34B3F6DF8";
            break;
        case "_encstr_B4BA18A3E8DE7FB650476369C978FDE705A66A7A33BD072DC039":
            var_1 = var_2 + "_encstr_B4460A36589C32D2CDB036D7";
            break;
        case "_encstr_981F1C216BEB7DD8AC0989C1ED6C70AD634F878FDB333780C41E5018D643":
            var_1 = var_2 + "_encstr_94430F31AAE36D58963CFFFF5CFD1BBA7F";
            break;
        case "_encstr_B4A9172554B3F3C13161F03FE0F108D0DDA9660AE9B9A12FF1":
            var_1 = var_2 + "_encstr_A8950923F1108B1BEBB9D9";
            break;
        case "_encstr_AF421BF453C6A57FCD71560E98303FA5AB41439B1A8982744E9BD0A8D8":
            var_1 = var_2 + "_encstr_AD280ED1164ECE59E8AF3636B76C6DF5";
            break;
        case "_encstr_BC9920EB78732552A1E08E0651A98AFD1B59634740099D4BE70195BECA2732B90148":
            var_1 = var_2 + "_encstr_B87313485622672A53B863B49FAF847FD8542FFBF9";
            break;
        default:
    }

    return var_1;
}
