// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    scripts\mp\killstreaks\killstreaks::registerkillstreak( "_encstr_BDBA05D35D0C2D", _calloutmarkerping_handleluinotify_acknowledged::tryusenukefromstruct );
    scripts\mp\killstreaks\killstreaks::registerkillstreak( "_encstr_BC13153D9504F0781F9A4811827B30F05D1BABB121ED50", _calloutmarkerping_handleluinotify_acknowledged::tryusenukefromstruct );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_BDBA05D35D0C2D", "_encstr_98EB283025965BB5A4BCFA031C0478400E800A606354BD2DA4E373E639A0A848032FFC0B8A5757D57AB7", ::_id_11EEA );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_BDBA05D35D0C2D", "_encstr_B8DB283B7FDF9BC34452B8387B1C8F90170F3723DCEBE039ED8858A0133D5B490B81C5AB2FDB0D7755A2", ::_id_11EEB );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_BDBA05D35D0C2D", "_encstr_9BD50D3B6391B2D9B158975751180D", ::nuke_delayendgame );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_BDBA05D35D0C2D", "_encstr_B490186BCCBF012D1F42C7A99ADF4BD91D35E9C979E28863578B", ::_id_11EDD );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_BDBA05D35D0C2D", "_encstr_809F08BB4AB66DB43103", ::nuke_cankill );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_BDBA05D35D0C2D", "_encstr_80AF0BCF28E80469A9C720DFB6", ::_id_11EEC );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_BDBA05D35D0C2D", "_encstr_B99517DAA5B1D814B12CBC95C95D4BD134058E1D2CB15B2B27", ::_id_11EED );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_BDBA05D35D0C2D", "_encstr_980315C8AC37E893B7CB50D83A4BECCAE94CD4AC36A3E6", ::nuke_destroyactiveobjects );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_BDBA05D35D0C2D", "_encstr_8F75122AFBA37938B7C3EB870D3E5B2C40F06065", ::nuke_isplayerinradzone );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_BDBA05D35D0C2D", "_encstr_88040D5325F0DB03C120303A882F04", ::_id_11EF7 );
}

_id_11EEA( var_0 )
{
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( var_0 );
}

_id_11EEB()
{
    return scripts\mp\hostmigration::waittillhostmigrationdone();
}

nuke_delayendgame( var_0, var_1 )
{
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_0 );

    if ( istrue( level._id_11BD4 ) )
        level thread scripts\mp\gamelogic::endgame( var_1, game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_ADE90ADA59E4B12FD7EEA5CD"], game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_A4720BB8824A1FF29F84584E73"], 1, 1 );
    else
        level thread scripts\mp\gamelogic::endgame( var_1, game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_B71309AE95A220B08F7887"], undefined, 1 );
}

_id_11EDD( var_0, var_1, var_2 )
{
    scripts\mp\rank::addteamrankxpmultiplier( var_0, var_1, var_2 );
}

nuke_cankill( var_0, var_1 )
{
    if ( istrue( level.blocknukekills ) )
        return 0;

    if ( !isdefined( level.nukeinfo ) )
        return 0;

    if ( istrue( var_1 ) )
        return 1;

    if ( level.teambased )
    {
        if ( isdefined( level.nukeinfo.team ) && var_0.team == level.nukeinfo.team )
            return 0;
    }
    else
    {
        var_2 = isdefined( level.nukeinfo.player ) && var_0 == level.nukeinfo.player;
        var_3 = isdefined( level.nukeinfo.player ) && isdefined( var_0.owner ) && var_0.owner == level.nukeinfo.player;

        if ( var_2 || var_3 )
            return 0;
    }

    return 1;
}

nuke_destroyactiveobjects( var_0 )
{
    var_1 = "_encstr_8C9408280B84AB8EDF70";
    var_2 = level.activekillstreaks;
    var_3 = [[ level.getactiveequipmentarray ]]();
    var_4 = undefined;

    if ( isdefined( var_2 ) && isdefined( var_3 ) )
        var_4 = scripts\engine\utility::array_combine_unique( var_2, var_3 );
    else if ( isdefined( var_2 ) )
        var_4 = var_2;
    else if ( isdefined( var_3 ) )
        var_4 = var_3;

    if ( isdefined( var_4 ) )
    {
        foreach ( var_6 in var_4 )
        {
            if ( isdefined( var_6 ) )
            {
                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_9DF8158CDB8816D62C76B2A2DBA55A8DB16EE893B22CD6" ) )
                    var_6 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_9DF8158CDB8816D62C76B2A2DBA55A8DB16EE893B22CD6" ) ]]( 10000, level.nukeinfo.player, level.nukeinfo.player, var_0, var_6.origin, "_encstr_A45C0E4B9FDF3165A3B93C4491BFA4A9", var_1 );
            }
        }
    }
}

nuke_isplayerinradzone( var_0, var_1, var_2 )
{
    var_3 = distance2dsquared( var_1, var_0.origin );
    return var_3 < var_2;
}

_id_11EEC( var_0 )
{
    if ( isplayer( var_0 ) )
    {
        var_1 = getcompleteweaponname( "_encstr_8C9408280B84AB8EDF70" );
        scripts\mp\damage::addattacker( var_0, level.nukeinfo.player, undefined, var_1, 0, undefined, undefined, undefined, undefined, undefined );
        var_2 = vectornormalize( var_0.origin + ( 0, 0, 1000 ) - level.nuke_inflictor.origin );
        var_0 thread scripts\mp\damage::finishplayerdamagewrapper( level.nuke_inflictor, level.nukeinfo.player, 999999, 0, "_encstr_A45C0E4B9FDF3165A3B93C4491BFA4A9", var_1, var_0.origin, var_2, "_encstr_AABA05236DC831", 0, 0, undefined, undefined );
    }
}

_id_11EED( var_0 )
{
    var_1 = level.nukeinfo.player;

    if ( level.teambased && var_0.team == var_1.team )
        var_1 = var_0;

    var_2 = getcompleteweaponname( "_encstr_8C9408280B84AB8EDF70" );
    var_0 dodamage( 999999, level.nuke_inflictor.origin, var_1, level.nuke_inflictor, "_encstr_A45C0E4B9FDF3165A3B93C4491BFA4A9", var_2, "_encstr_AABA05236DC831" );
}

_id_11EF7( var_0 )
{
    var_1 = "_encstr_A61805573F9318" + var_0 + "_encstr_BA6F0B9FF3B2912B5C6C906853";
    level.watchdvars[var_1].value = 0;
    level.overridewatchdvars[var_1] = 0;
    level.extratime = 0;
    return var_1;
}
