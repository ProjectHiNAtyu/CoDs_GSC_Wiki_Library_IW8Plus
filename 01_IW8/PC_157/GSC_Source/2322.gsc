// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

infil_add( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    if ( !scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AD8F0610BAC7B3E8", "_encstr_A8700F69DFFC713F522B1F7B0BDA73B093" ) )
        scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_AD8F0610BAC7B3E8", "_encstr_A8700F69DFFC713F522B1F7B0BDA73B093", ::get_all_infils );

    while ( !isdefined( level.teamnamelist ) )
        waitframe();

    if ( !isdefined( game["_encstr_AD8F0610BAC7B3E8"] ) )
    {
        foreach ( var_9 in level.teamnamelist )
            game["_encstr_AD8F0610BAC7B3E8"][var_9] = [];

        game["_encstr_AD8F0610BAC7B3E8"]["_encstr_BCEF069BAA83E54B"] = [];
    }

    if ( isdefined( scripts\cp_mp\utility\game_utility::getlocaleid() ) )
    {
        var_11 = get_all_infils( var_0 );

        foreach ( var_13 in var_11 )
        {
            if ( var_13.name == var_1 )
            {
                if ( isdefined( var_13.script_label ) && var_13.script_label == level.localeid )
                    break;
            }
        }
    }

    if ( isdefined( game["_encstr_AD8F0610BAC7B3E8"]["_encstr_BCEF069BAA83E54B"][var_0] ) && isdefined( game["_encstr_AD8F0610BAC7B3E8"]["_encstr_BCEF069BAA83E54B"][var_0][var_1] ) )
    {
        if ( isdefined( game["_encstr_AD8F0610BAC7B3E8"]["_encstr_BCEF069BAA83E54B"][var_0][var_1]["_encstr_B1D812A3482B1BFA974D271DB535F2D890D06B7F"] ) )
            self [[ game["_encstr_AD8F0610BAC7B3E8"]["_encstr_BCEF069BAA83E54B"][var_0][var_1]["_encstr_B1D812A3482B1BFA974D271DB535F2D890D06B7F"] ]]( var_0, var_1 );

        return;
    }

    game["_encstr_AD8F0610BAC7B3E8"]["_encstr_BCEF069BAA83E54B"][var_0][var_1] = [];
    game["_encstr_AD8F0610BAC7B3E8"]["_encstr_BCEF069BAA83E54B"][var_0][var_1]["_encstr_80DB0BAB932F7F3D517DCDAE0F"] = var_5;
    game["_encstr_AD8F0610BAC7B3E8"]["_encstr_BCEF069BAA83E54B"][var_0][var_1]["_encstr_8B950C3BF2B7932BBA7FD5FB6626"] = var_7;
    game["_encstr_AD8F0610BAC7B3E8"]["_encstr_BCEF069BAA83E54B"][var_0][var_1]["_encstr_821310B7C1C837A2ED85CF9B91984A556069"] = var_6;
    game["_encstr_AD8F0610BAC7B3E8"]["_encstr_BCEF069BAA83E54B"][var_0][var_1]["_encstr_9330069B55C93302"] = var_2;
    game["_encstr_AD8F0610BAC7B3E8"]["_encstr_BCEF069BAA83E54B"][var_0][var_1]["_encstr_9B7E0FE45617AE963959C87DB9560B3ACD"] = var_3;
    game["_encstr_AD8F0610BAC7B3E8"]["_encstr_BCEF069BAA83E54B"][var_0][var_1]["_encstr_934E0B2471AB909FFD0B101063"] = var_4;
}

infil_is_interactive()
{
    if ( !isdefined( level.interactiveinfil ) )
        level.interactiveinfil = getdvarint( "_encstr_8FEB166ED84E7D969BCCA5C6F5A5DC3A599C2CB13A4BB3B2", 0 ) == 1;

    return level.interactiveinfil;
}

infil_init()
{
    if ( level.rankedmatch && !isdedicatedserver() )
    {
        game["_encstr_AD8F0610BAC7B3E8"] = undefined;
        scripts\mp\flags::gameflagset( "_encstr_B3DB15B4CD9996B17DCD953AAEC1EB1BBDADE0C6CAA395" );
        return;
    }

    if ( game["_encstr_8AC30D9CDEBA73466E41B1585E568C"] > 0 || getdvarint( "_encstr_93BE10C6F7032FC63BEBF21E6CCDC484AB5B", 0 ) == 1 || getdvarint( "_encstr_B1501306E3159FC7D1E25269D3783ACA35FB28CBB3", 0 ) == 1 || scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" || getdvarint( "_encstr_B6F618575FAE61F7802827A1C0682C7A0BD7F397E5D59BA1D831" ) < 15 || scripts\mp\utility\game::getgametype() == "_encstr_A419049B62BB" && scripts\cp_mp\utility\game_utility::unlink_on_ai_death() )
    {
        game["_encstr_AD8F0610BAC7B3E8"] = undefined;
        level.requiredplayercount["_encstr_BC850785638DA59537"] = 0;
        level.requiredplayercount["_encstr_BA840579D3F7F6"] = 0;
        scripts\mp\flags::gameflagset( "_encstr_B3DB15B4CD9996B17DCD953AAEC1EB1BBDADE0C6CAA395" );
        return;
    }

    if ( !isdefined( level.prematchperiodend ) || level.prematchperiodend == 0 )
    {
        game["_encstr_AD8F0610BAC7B3E8"] = undefined;
        scripts\mp\flags::gameflagset( "_encstr_B3DB15B4CD9996B17DCD953AAEC1EB1BBDADE0C6CAA395" );
        return;
    }

    if ( istrue( level._id_133D5 ) )
    {
        game["_encstr_AD8F0610BAC7B3E8"] = undefined;
        scripts\mp\flags::gameflagset( "_encstr_B3DB15B4CD9996B17DCD953AAEC1EB1BBDADE0C6CAA395" );
        return;
    }

    while ( !isdefined( level.teamnamelist ) )
        waitframe();

    if ( scripts\mp\gamelogic::_id_1330A() )
        logstring( "_encstr_B3E838925D84966698A62372CC47800AC4248286A749158E80B12BCE56B1C547CA0BB5720BB5951396B98E01DDD0A5D859403396E6D2DCA1CA8C" );

    waitframe();
    scripts\mp\utility\disconnect_event_aggregator::registerondisconnecteventcallback( ::onplayerdisconnect );
    level.prematchallowfunc = ::infil_player_allow;
    var_0 = undefined;
    level.stop_station_closed_vo = 0;

    foreach ( var_2 in get_all_infils() )
    {
        var_3 = var_2.script_noteworthy;
        var_4 = var_2.name;

        if ( !var_2 infil_is_gamemode() )
            continue;

        if ( isdefined( scripts\cp_mp\utility\game_utility::getlocaleid() ) )
        {
            if ( var_2.name == var_4 )
            {
                if ( !isdefined( var_2.script_label ) || var_2.script_label != level.localeid )
                    continue;
            }
        }

        if ( var_2 infil_has_map_config() )
            infil_init_spawn_selection();

        var_5 = var_2.script_team;

        if ( var_2 infil_is_type( var_3 ) && var_2 infil_is_subtype( var_4 ) && scripts\mp\utility\teams::isgameplayteam( var_2.script_team ) )
        {
            level.stop_station_closed_vo++;
            var_6 = game["_encstr_AD8F0610BAC7B3E8"]["_encstr_BCEF069BAA83E54B"][var_3][var_4];
            var_7 = var_4;
            var_8 = var_4;

            if ( issubstr( var_8, "_encstr_B7BB0627C0ABC0BA" ) )
                var_8 = "_encstr_B7BB0627C0ABC0BA";

            if ( issubstr( var_8, "_encstr_8F1D0683982166E2" ) )
                var_8 = "_encstr_8F1D0683982166E2";

            if ( !isdefined( var_6 ) )
                var_6 = game["_encstr_AD8F0610BAC7B3E8"]["_encstr_BCEF069BAA83E54B"][var_3][var_8];

            var_9 = var_2 [[ var_6["_encstr_80DB0BAB932F7F3D517DCDAE0F"] ]]( var_2.script_team, var_2.target, var_8, var_7 );
            var_9.players = [];
            var_9.type = var_3;
            var_9._id_1214C = var_7;
            var_9.subtype = var_8;
            var_9.infillength = var_9 [[ var_6["_encstr_821310B7C1C837A2ED85CF9B91984A556069"] ]]( var_8 );

            if ( !isdefined( var_0 ) || var_0 < var_9.infillength )
                var_0 = var_9.infillength + 1.0;

            var_5 = var_2.script_team;
            game["_encstr_AD8F0610BAC7B3E8"][var_5]["_encstr_94EC06631673B2B9"][var_3][var_4] = var_9;
            register_infil_spots( var_5, var_9, var_6["_encstr_9330069B55C93302"], var_6["_encstr_9B7E0FE45617AE963959C87DB9560B3ACD"], var_6["_encstr_934E0B2471AB909FFD0B101063"], var_6["_encstr_8B950C3BF2B7932BBA7FD5FB6626"] );

            if ( var_2 infil_has_map_config() )
                scripts\mp\tac_ops_map::adddynamicspawnarea( "_encstr_9F4909D88AA9534813F9A1", var_9, var_5, var_2.script_label );
        }
    }

    if ( scripts\mp\utility\game::gamehasinfil() && isdefined( var_0 ) )
    {
        level thread onplayerspawned();
        level.prematchperiod = getdvarint( "_encstr_B4E91582EE85910F4118EFFFB0DBC19A73FF8F7A43D75A", 15 );
        level.matchcountdowntime = var_0 + 2.0;
        level.prematchperiodend = var_0 + 2.0;
        thread scripts\mp\gamelogic::matchstarttimer( "_encstr_81C0121FA023D3320706DB96EE097A96E9E9878B", level.prematchperiod + level.prematchperiodend );
        level thread infil_setup_ui();
        level thread infil_wait_for_players();
        level thread _id_14367();
        scripts\mp\flags::gameflagset( "_encstr_B87F0F4428EDB244C6889FF328BE123BA5" );
    }

    scripts\mp\flags::gameflagset( "_encstr_B3DB15B4CD9996B17DCD953AAEC1EB1BBDADE0C6CAA395" );
}

onplayerspawned()
{
    level endon( "_encstr_A20D0EF9B8412F9D3FE0337AF0B117D3" );

    for (;;)
    {
        level waittill( "_encstr_9E7F0F83E0068BA8D3374EA2490F65E339", var_0 );
        var_0 thread _id_1437E();
    }
}

_id_1437E()
{
    level endon( "_encstr_A20D0EF9B8412F9D3FE0337AF0B117D3" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( isdefined( self.team ) )
    {
        scripts\mp\flags::gameflagwait( "_encstr_B3DB15B4CD9996B17DCD953AAEC1EB1BBDADE0C6CAA395" );

        if ( scripts\mp\flags::gameflag( "_encstr_B87F0F4428EDB244C6889FF328BE123BA5" ) && !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        {
            var_0 = ( 0, 0, 0 );
            var_1 = 0;

            if ( isdefined( game["_encstr_AD8F0610BAC7B3E8"] ) && isdefined( game["_encstr_AD8F0610BAC7B3E8"][self.team] ) && isdefined( game["_encstr_AD8F0610BAC7B3E8"][self.team]["_encstr_94EC06631673B2B9"] ) )
            {
                foreach ( var_7, var_3 in game["_encstr_AD8F0610BAC7B3E8"][self.team]["_encstr_94EC06631673B2B9"] )
                {
                    foreach ( var_5 in var_3 )
                    {
                        var_0 = var_0 + var_5.origin;
                        var_1++;
                    }
                }
            }

            if ( var_1 > 0 )
                var_0 = var_0 / var_1;

            self predictstreampos( var_0 );
        }
    }

    while ( !istrue( self.pers["_encstr_B7A81327B422900707998A50A287C8187A3483D14D"] ) )
        waitframe();

    var_8 = get_spot_from_player( self, scripts\mp\utility\game::getotherteam( self.team )[0] );

    if ( isdefined( var_8 ) )
        player_free_spot( self, scripts\mp\utility\game::getotherteam( self.team )[0] );

    player_join_infil();
}

onjoinedteam( var_0 )
{
    if ( scripts\mp\flags::gameflag( "_encstr_B87F0F4428EDB244C6889FF328BE123BA5" ) && !scripts\mp\flags::gameflag( "_encstr_A20D0EF9B8412F9D3FE0337AF0B117D3" ) )
    {
        if ( isdefined( var_0.team ) && var_0.team == "_encstr_A68C0A5803A5D151A2B310A6" )
            var_0 thread infilspectatorview();
    }
}

infilspectatorview()
{
    self endon( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self notify( "_encstr_A3C9137F265BFB9ADF73B159BDCA40E0665968C97C" );
    self endon( "_encstr_A3C9137F265BFB9ADF73B159BDCA40E0665968C97C" );
    thread infil_scene_fade_in( 0.0, 0.55 );
}

onplayerdisconnect( var_0 )
{
    if ( !isdefined( var_0.infil ) )
        return;

    if ( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        return;

    player_free_spot( var_0, var_0.team );
}

onplayerchangeteams()
{
    level endon( "_encstr_8BF80EDBDA10705A600880871A60DF03" );
    self endon( "_encstr_AD571162494313EDC369036B80199FFB3950EB" );
    var_0 = self.team;
    scripts\engine\utility::_id_143A5( "_encstr_B2170C4AD884CDC823B9DB9D9F42", "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
    player_free_spot( self, var_0 );
}

get_all_infils( var_0 )
{
    if ( isdefined( var_0 ) )
        return scripts\engine\utility::getstructarray( var_0, "_encstr_A8ED125A5723AF9B405770989B255F1FF3897A60" );
    else
        return scripts\engine\utility::getstructarray( "_encstr_896209B583BEA537664B63", "_encstr_B8CE0BE43FC317DF690862BA48" );
}

infil_is_type( var_0 )
{
    return self.script_noteworthy == var_0;
}

infil_is_subtype( var_0 )
{
    return self.name == var_0;
}

infil_is_gamemode()
{
    if ( !isdefined( self.spawnflags ) || self.spawnflags == 0 )
        return 0;

    if ( !level.teambased )
        return 0;

    if ( self.spawnflags & 1 )
    {
        if ( level.gametype == "_encstr_BD07030251" && level.mapname == "_encstr_984D0DC87A37E8DD33B35F475B8A95" || level.gametype == "_encstr_BD07030251" && level.mapname == "_encstr_A4870E72AB086BF4A87FA1AC03B8FD17" || level.gametype == "_encstr_9507035309" && level.mapname == "_encstr_93670AB8D3011F93679BDBEE" )
            return 0;
        else
            return 1;
    }

    if ( self.spawnflags & 2 )
    {
        switch ( level.gametype )
        {
            case "_encstr_9B290667C6D043EF":
            case "_encstr_A419049B62BB":
            case "_encstr_BA65064753EA9D3B":
            case "_encstr_8C0D05A9215D20":
            case "_encstr_9E91056EB77B0E":
                return 1;
        }
    }

    if ( self.spawnflags & 4 )
    {
        switch ( level.gametype )
        {
            case "_encstr_9507035309":
            case "_encstr_AD0703D788":
            case "_encstr_BD07030251":
                if ( level.mapname == "_encstr_984D0DC87A37E8DD33B35F475B8A95" || level.mapname == "_encstr_A4870E72AB086BF4A87FA1AC03B8FD17" )
                    return 0;
                else
                    return 1;
        }
    }

    if ( self.spawnflags & 8 )
    {
        switch ( level.gametype )
        {
            case "_encstr_B14F0606E93B7FC3":
            case "_encstr_9318045AFDDD":
                return 1;
        }
    }

    if ( self.spawnflags & 16 )
    {
        switch ( level.gametype )
        {
            case "_encstr_BC7205C8ABFDE7":
            case "_encstr_B7D7054F3030F9":
            case "_encstr_BA07038803":
                return 1;
        }
    }

    if ( self.spawnflags & 32 )
    {
        switch ( level.gametype )
        {
            case "_encstr_BA1904C7A174":
                return 1;
        }
    }

    if ( self.spawnflags & 64 )
    {
        switch ( level.gametype )
        {
            case "_encstr_B9F906A857D2014D":
                return 1;
        }
    }

    if ( self.spawnflags & 128 )
    {
        switch ( level.gametype )
        {
            case "_encstr_881904634971":
            case "_encstr_BD19047616EB":
                return 1;
        }
    }

    return 0;
}

infil_has_map_config()
{
    return isdefined( self.script_label ) && level.gametype == "_encstr_B13E08F31858214D4BF3";
}

infil_init_spawn_selection()
{
    if ( level.gametype == "_encstr_B13E08F31858214D4BF3" && !isdefined( game["_encstr_AD8F0610BAC7B3E8"]["_encstr_9DA40B38CEE8612E52137D6B5F"] ) )
    {
        scripts\mp\tac_ops_map::init();
        scripts\mp\tac_ops_map::setactivemapconfig( "_encstr_9F4909D88AA9534813F9A1", "_encstr_BC850785638DA59537" );
        scripts\mp\tac_ops_map::setactivemapconfig( "_encstr_9F4909D88AA9534813F9A1", "_encstr_BA840579D3F7F6" );
        game["_encstr_AD8F0610BAC7B3E8"]["_encstr_9DA40B38CEE8612E52137D6B5F"] = 1;
    }
}

infil_player_allow( var_0, var_1 )
{
    if ( self ishost() && getdvarint( "_encstr_B47714A2CE6571E140A03F1351DBB09A1FDDAE1BA0CD" ) == 1 )
    {
        scripts\common\utility::allow_weapon( var_0 );
        return;
    }

    if ( !scripts\mp\utility\game::teamhasinfil( self.team ) && !istrue( var_1 ) )
    {
        scripts\mp\playerlogic::playerprematchallow( var_0 );
        return;
    }

    self allowmovement( var_0 );
    scripts\common\utility::allow_prone( var_0 );
    scripts\common\utility::allow_crouch( var_0 );
    scripts\common\utility::allow_jump( var_0 );
    scripts\common\utility::allow_fire( var_0 );
    scripts\common\utility::allow_ads( var_0 );
    scripts\common\utility::allow_sprint( var_0 );
    scripts\common\utility::allow_melee( var_0 );
    scripts\common\utility::allow_lean( var_0 );
    scripts\common\utility::allow_slide( var_0 );
    scripts\common\utility::allow_offhand_weapons( var_0 );
    scripts\common\utility::allow_weapon_switch( var_0 );
    scripts\common\utility::allow_usability( var_0 );
}

register_infil_spots( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( !isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"] ) )
        game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"] = [];

    var_6 = game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"].size;

    for ( var_7 = 0; var_7 < var_2; var_7++ )
    {
        var_8 = game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"].size;

        if ( isdefined( var_4 ) )
        {
            var_9 = 0;

            foreach ( var_15, var_11 in var_4 )
            {
                foreach ( var_13 in var_11 )
                {
                    if ( var_13 == var_8 - var_6 )
                    {
                        game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"][var_8]["_encstr_888C09632BD3D7F23891F9"] = var_15;
                        var_9 = 1;
                        break;
                    }
                }

                if ( var_9 )
                    break;
            }
        }
        else
            game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"][var_8]["_encstr_888C09632BD3D7F23891F9"] = -1;

        game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"][var_8]["_encstr_9318052B7FDE0C"] = var_7;
        game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"][var_8]["_encstr_AD8F0610BAC7B3E8"] = var_1;
        game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"][var_8]["_encstr_9BAA097EB163581D86D2B0"] = var_5;
    }

    if ( !istrue( level._id_12C49 ) )
        level.requiredplayercount[var_0] = level.requiredplayercount[var_0] + var_3;
}

player_on_spot( var_0, var_1 )
{
    if ( !isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_0.team]["_encstr_9C8A065327F0CBCA"] ) )
    {

    }

    if ( !isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_0.team]["_encstr_9C8A065327F0CBCA"][var_1] ) )
    {

    }

    if ( isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_0.team]["_encstr_9C8A065327F0CBCA"][var_1]["_encstr_AAB0079B102F47FF38"] ) )
    {

    }

    game["_encstr_AD8F0610BAC7B3E8"][var_0.team]["_encstr_9C8A065327F0CBCA"][var_1]["_encstr_AAB0079B102F47FF38"] = var_0;
    return game["_encstr_AD8F0610BAC7B3E8"][var_0.team]["_encstr_9C8A065327F0CBCA"][var_1];
}

player_free_spot( var_0, var_1 )
{
    var_0 setclientomnvar( "_encstr_A90F13C0CF376BB94A08FD7EE9A2F5F679BBC0A863", 0 );

    if ( !isdefined( var_1 ) )
        var_1 = var_0.team;

    if ( !isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_1]["_encstr_9C8A065327F0CBCA"] ) )
    {

    }

    foreach ( var_4, var_3 in game["_encstr_AD8F0610BAC7B3E8"][var_1]["_encstr_9C8A065327F0CBCA"] )
    {
        if ( is_spot_taken( var_1, var_4 ) && var_3["_encstr_AAB0079B102F47FF38"] == var_0 )
        {
            game["_encstr_AD8F0610BAC7B3E8"][var_1]["_encstr_9C8A065327F0CBCA"][var_4]["_encstr_AAB0079B102F47FF38"] = undefined;
            var_0 notify( "_encstr_AD571162494313EDC369036B80199FFB3950EB" );
            return;
        }
    }
}

get_player_at_spot( var_0, var_1 )
{
    return game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"][var_1]["_encstr_AAB0079B102F47FF38"];
}

get_spot_from_player( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = var_0.team;

    if ( !isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_1]["_encstr_9C8A065327F0CBCA"] ) )
        return undefined;

    foreach ( var_4, var_3 in game["_encstr_AD8F0610BAC7B3E8"][var_1]["_encstr_9C8A065327F0CBCA"] )
    {
        if ( isdefined( var_3["_encstr_AAB0079B102F47FF38"] ) && var_3["_encstr_AAB0079B102F47FF38"] == var_0 )
            return var_4;
    }

    return undefined;
}

is_spot_taken( var_0, var_1 )
{
    if ( !isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"] ) )
    {

    }

    if ( !isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"][var_1] ) )
    {

    }

    return isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"][var_1]["_encstr_AAB0079B102F47FF38"] );
}

get_spot_taken_count( var_0 )
{
    if ( !isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"] ) )
    {

    }

    var_1 = 0;

    foreach ( var_4, var_3 in game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"] )
    {
        if ( is_spot_taken( var_0, var_4 ) )
            var_1++;
    }

    return var_1;
}

get_spot_by_priority( var_0 )
{
    var_1 = [];

    foreach ( var_4, var_3 in game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"] )
    {
        if ( !is_spot_taken( var_0, var_4 ) )
            var_1[var_1.size] = var_4;
    }

    if ( var_1.size == 0 )
        return undefined;

    var_5 = getdvarint( "_encstr_89BA153B629BE04BDD26EBE97787683E77BA36A3EA2FAD", -1 );

    if ( scripts\engine\utility::array_contains( var_1, var_5 ) )
        return var_5;

    var_6 = [];
    var_7 = -1;

    foreach ( var_3 in var_1 )
    {
        var_9 = game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"][var_3]["_encstr_888C09632BD3D7F23891F9"];

        if ( var_6.size == 0 || var_9 < var_7 )
        {
            var_6 = [];
            var_6[var_6.size] = var_3;
            var_7 = var_9;
            continue;
        }

        if ( var_9 == var_7 )
            var_6[var_6.size] = var_3;
    }

    return var_6[randomint( var_6.size )];
}

get_spot_in_lane( var_0 )
{
    while ( !isdefined( self.forcedavailablespawnlocation ) )
        waitframe();

    var_1 = scripts\engine\utility::ter_op( var_0 == "_encstr_BC850785638DA59537", "_encstr_944C02E1", "_encstr_AA4C02E6" ) + getsubstr( self.forcedavailablespawnlocation, 5, 6 );
    var_2 = [];

    foreach ( var_5, var_4 in game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"] )
    {
        if ( issubstr( var_4["_encstr_AD8F0610BAC7B3E8"].lane, var_1 ) && !is_spot_taken( var_0, var_5 ) )
            var_2[var_2.size] = var_5;
    }

    if ( var_2.size == 0 )
        return undefined;

    var_6 = [];
    var_7 = -1;

    foreach ( var_4 in var_2 )
    {
        var_9 = game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"][var_4]["_encstr_888C09632BD3D7F23891F9"];

        if ( var_6.size == 0 || var_9 < var_7 )
        {
            var_6 = [];
            var_6[var_6.size] = var_4;
            var_7 = var_9;
            continue;
        }

        if ( var_9 == var_7 )
            var_6[var_6.size] = var_4;
    }

    return var_6[randomint( var_6.size )];
}

get_random_spot( var_0 )
{
    var_1 = [];

    foreach ( var_4, var_3 in game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"] )
    {
        if ( !is_spot_taken( var_0, var_4 ) )
            var_1[var_1.size] = var_4;
    }

    if ( var_1.size == 0 )
        return undefined;

    var_3 = scripts\engine\utility::random( var_1 );
    return var_3;
}

get_taken_spot_count( var_0 )
{
    if ( !isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"] ) )
        return 0;

    var_1 = 0;

    foreach ( var_4, var_3 in game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"] )
    {
        if ( is_spot_taken( var_0, var_4 ) )
            var_1++;
    }

    return var_1;
}

get_taken_spot_percent( var_0 )
{
    if ( !isdefined( game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"] ) )
        return 0;

    var_1 = 0;
    var_2 = 0;

    foreach ( var_5, var_4 in game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"] )
    {
        var_1++;

        if ( is_spot_taken( var_0, var_5 ) )
            var_2++;
    }

    return var_2 / var_1;
}

get_random_spot_in_infil( var_0, var_1 )
{
    var_2 = [];

    foreach ( var_5, var_4 in game["_encstr_AD8F0610BAC7B3E8"][var_0]["_encstr_9C8A065327F0CBCA"] )
    {
        if ( var_5["_encstr_AD8F0610BAC7B3E8"] != var_1 )
            continue;

        if ( !is_spot_taken( var_0, var_5 ) )
            var_2[var_2.size] = var_5;
    }

    if ( var_2.size == 0 )
        return undefined;

    var_4 = scripts\engine\utility::random( var_2 );
    return var_4;
}

infil_player_array_handler( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self.players = scripts\engine\utility::array_add( self.players, var_0 );
    var_0 waittill( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self.players = scripts\engine\utility::array_remove( self.players, var_0 );
}

player_join_infil()
{
    if ( scripts\mp\flags::gameflag( "_encstr_A20D0EF9B8412F9D3FE0337AF0B117D3" ) )
        return;

    if ( game["_encstr_AD8F0610BAC7B3E8"][self.team].size == 0 )
        return;

    if ( self ishost() && getdvarint( "_encstr_B47714A2CE6571E140A03F1351DBB09A1FDDAE1BA0CD" ) == 1 )
    {
        player_ai_fill();
        return;
    }

    var_0 = 0;
    var_1 = game["_encstr_AD8F0610BAC7B3E8"][self.team]["_encstr_9C8A065327F0CBCA"][0]["_encstr_888C09632BD3D7F23891F9"] != -1;

    if ( level.gametype == "_encstr_B13E08F31858214D4BF3" && isdefined( self.tacopsmapselectedarea.dynamicent ) )
        var_2 = get_random_spot_in_infil( self.team, self.tacopsmapselectedarea.dynamicent );
    else if ( var_0 )
        var_2 = get_spot_taken_count( self.team );
    else if ( var_1 )
        var_2 = get_spot_by_priority( self.team );
    else
        var_2 = get_random_spot( self.team );

    if ( !isdefined( var_2 ) )
        return;

    var_3 = player_on_spot( self, var_2 );
    var_3["_encstr_AD8F0610BAC7B3E8"] thread infil_player_array_handler( self );
    self notify( "_encstr_872C16DFF38982601299968240CF2537688727DBAA0CB065" );
    self.infil = var_3["_encstr_AD8F0610BAC7B3E8"];
    self thread [[ var_3["_encstr_9BAA097EB163581D86D2B0"] ]]( var_3["_encstr_AD8F0610BAC7B3E8"], var_3["_encstr_9318052B7FDE0C"] );
    self setclientomnvar( "_encstr_A90F13C0CF376BB94A08FD7EE9A2F5F679BBC0A863", 1 );
    thread onplayerchangeteams();
    thread headlessopindex();
    player_ai_fill();
}

headlessopindex()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level waittill( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    self setcinematicmotionoverride( "_encstr_B46114E1674A5953A1B133FAFB0977CBA82F6E4FFBB0" );
    self endon( "_encstr_A3750609A5E61883" );
    var_0 = 0;

    while ( !var_0 )
    {
        var_0 = self setdemeanorviewmodel( "_encstr_930E073E8FC00DDF69" );
        waitframe();
    }
}

blockswaploadouts()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self.delayswaploadout = 1;
    level waittill( "_encstr_8BF80EDBDA10705A600880871A60DF03" );
    self.delayswaploadout = 0;
}

player_ai_fill()
{

}

infil_setup_ui()
{
    setomnvar( "_encstr_A1D80C5DFBD1748B9810A22A7869", 3 );
    level waittill( "_encstr_A20D0EF9B8412F9D3FE0337AF0B117D3" );
    var_0 = getomnvar( "_encstr_AA4E1A9574D9EBA8579FD8907F8BE03FA3118017CDD291D029E33098" );
    setomnvar( "_encstr_AA4E1A9574D9EBA8579FD8907F8BE03FA3118017CDD291D029E33098", 1 );

    if ( !isdefined( level.bypassclasschoicefunc ) )
    {
        setomnvarforallclients( "_encstr_BA8510FBC22FF6101C3087E9474630B02FAB", 0 );
        level.bypassclasschoicefunc = undefined;
    }

    level thread infil_show_countdown();
    var_1 = getdvarint( "_encstr_AD550B6DD82130DBC7E1CBF331" );
    var_2 = getdvarint( "_encstr_88E60B315AD749117181B993EF" );
    var_3 = getdvarint( "_encstr_9F290B16075DB531C71F7F7DF9" );
    setdvar( "_encstr_AD550B6DD82130DBC7E1CBF331", 0 );
    setdvar( "_encstr_88E60B315AD749117181B993EF", 1 );
    setdvar( "_encstr_9F290B16075DB531C71F7F7DF9", 1 );
    level waittill( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    var_4 = scripts\mp\utility\player::alwaysshowminimap();

    foreach ( var_6 in level.players )
    {
        if ( var_4 )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AAB0079B102F47FF38", "_encstr_8BD40C1EC017432BEC5A88A1C2C2" ) )
                var_6 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AAB0079B102F47FF38", "_encstr_8BD40C1EC017432BEC5A88A1C2C2" ) ]]();

            continue;
        }

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AAB0079B102F47FF38", "_encstr_BCE10C090F91DDE52808E85DAE43" ) )
            var_6 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AAB0079B102F47FF38", "_encstr_BCE10C090F91DDE52808E85DAE43" ) ]]();
    }

    setomnvar( "_encstr_A1D80C5DFBD1748B9810A22A7869", -1 );
    setomnvar( "_encstr_AA4E1A9574D9EBA8579FD8907F8BE03FA3118017CDD291D029E33098", var_0 );
    setdvar( "_encstr_AD550B6DD82130DBC7E1CBF331", var_1 );
    setdvar( "_encstr_88E60B315AD749117181B993EF", var_2 );
    setdvar( "_encstr_9F290B16075DB531C71F7F7DF9", var_3 );
}

infil_show_countdown()
{
    wait( level.prematchperiodend - 5 );
    setomnvar( "_encstr_A1D80C5DFBD1748B9810A22A7869", 2 );
}

alwaysgamemodeclass()
{
    var_0 = self getclantag();

    if ( var_0 == "_encstr_A30703F071" )
        var_1 = "_encstr_B145092B9071A19311F59A";
    else if ( var_0 == "_encstr_BE1904A9D4A3" )
        var_1 = "_encstr_8245098269F44F93B031D2";
    else if ( var_0 == "_encstr_BC1904C3991D" )
        var_1 = "_encstr_AA4509CF79E0B19BF12976";
    else
    {
        var_2 = [];
        var_2[0] = "_encstr_B145092B9071A19311F59A";
        var_2[1] = "_encstr_8245098269F44F93B031D2";
        var_2[2] = "_encstr_AA4509CF79E0B19BF12976";
        var_1 = scripts\engine\utility::random( var_2 );
    }

    self.pers["_encstr_9E95066E81471B5F"] = var_1;
    self.pers["_encstr_9F690A0DBF9F69AE0A510886"] = "_encstr_A40101";
    self.class = self.pers["_encstr_9E95066E81471B5F"];
    self.lastclass = self.pers["_encstr_9F690A0DBF9F69AE0A510886"];
    return var_1;
}

#using_animtree("_encstr_93DC0DCD1B272D3847AF5BED23B2C6");

infil_player_rig( var_0, var_1, var_2 )
{
    self.animname = var_0;
    var_3 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
    var_3.player = self;
    self.player_rig = var_3;
    self.player_rig setmodel( var_1 );
    self.player_rig hide();
    self.player_rig.animname = var_0;
    self.player_rig useanimtree( #animtree );
    self.player_rig.weapon_state_func = scripts\mp\utility\infilexfil::handleweaponstatenotetrack;
    self.player_rig.cinematic_motion_override = scripts\mp\utility\infilexfil::handlecinematicmotionnotetrack;
    self.player_rig.dof_func = scripts\mp\utility\infilexfil::handledofnotetrack;
    self playerlinktodelta( self.player_rig, "_encstr_BA010BA012DFB703A379A39542", 1.0, 0, 0, 0, 0, 1 );

    if ( isdefined( var_2 ) && var_2 )
        self playersetgroundreferenceent( self.player_rig );

    self notify( "_encstr_9D920C22836881D766C97A33D1B5" );
    scripts\engine\utility::_id_143A5( "_encstr_BE840B5637BAB7AB0527C04BDF", "_encstr_AD571162494313EDC369036B80199FFB3950EB" );

    if ( isdefined( self ) )
    {
        if ( isdefined( var_2 ) && var_2 )
            self playersetgroundreferenceent( undefined );

        self unlink();
    }

    if ( isdefined( var_3 ) )
        var_3 delete();
}

infil_play_sound_func( var_0, var_1, var_2 )
{
    foreach ( var_4 in self.players )
        var_4 playsoundtoplayer( var_0, var_4 );
}

infil_wait_for_players()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_B8270A33F6E4D856AFACCD32" );
    level waittill( "_encstr_9F4C1B106A634788F7E3AD2FDA63562D8FF290F922FDD380B31C381CAE" );
    setomnvar( "_encstr_A1D80C5DFBD1748B9810A22A7869", 1 );
    wait 2.0;
    scripts\mp\flags::gameflagset( "_encstr_A20D0EF9B8412F9D3FE0337AF0B117D3" );

    if ( getdvarint( "_encstr_BD2A1D37D839AFB4DCCC5AD8EBA5DC1D2B9385D81DA5CECAEBCD1BED776BDB", 0 ) == 1 )
        level thread manageinteractiveslowmo();

    if ( getdvarint( "_encstr_87A61653E632B9F3AACB8BB9177346C0F6BB5EABCB896835", 0 ) == 1 )
    {
        foreach ( var_1 in level.players )
            iprintlnbold( "_encstr_B44D204FCD6640ABA5E6920ADE44BDE51F0447463D97B42D8DCE9A02F67603512691" );
    }
}

infil_scene_fade_in( var_0, var_1 )
{
    if ( scripts\mp\flags::gameflag( "_encstr_A20D0EF9B8412F9D3FE0337AF0B117D3" ) )
        return;

    self notify( "_encstr_984F142095765821E9EFEFFB8312E068096F297EFCD6" );
    self endon( "_encstr_984F142095765821E9EFEFFB8312E068096F297EFCD6" );
    self setclientomnvar( "_encstr_9C920EEB67072717935B23D9A21BD715", 1.0 );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    scripts\mp\flags::gameflagwait( "_encstr_A20D0EF9B8412F9D3FE0337AF0B117D3" );
    var_2 = gettime();
    var_3 = 1.0;

    while ( var_3 > 0.0 )
    {
        var_3 = var_3 - level.framedurationseconds;
        var_3 = max( var_3, 0.0 );
        self setclientomnvar( "_encstr_9C920EEB67072717935B23D9A21BD715", var_3 );
        waitframe();
    }
}

heli_path( var_0 )
{
    if ( !isdefined( var_0 ) )
        var_0 = self;

    var_0 endon( "_encstr_A3750609A5E61883" );

    if ( isdefined( var_0.hasstarted ) )
        return;
    else
        var_0.hasstarted = 1;

    var_0 scripts\engine\utility::script_delay();
    var_0 notify( "_encstr_B7B712508B96355BA79655DB918F80D33A22E010" );
    var_0 notify( "_encstr_AD2A12D8932173D1C1379B284EDAD399985F68F8" );
}

vehicle_paths_helicopter( var_0, var_1, var_2 )
{
    self notify( "_encstr_8FDE08F8DA5371B94BC8" );
    self endon( "_encstr_8FDE08F8DA5371B94BC8" );
    self endon( "_encstr_A3750609A5E61883" );

    if ( !isdefined( var_1 ) )
        var_1 = 0;

    if ( isdefined( var_0 ) )
        self.attachedpath = var_0;

    var_3 = self.attachedpath;
    self.currentnode = self.attachedpath;

    if ( !isdefined( var_3 ) )
        return;

    var_4 = var_3;

    if ( var_1 )
        self waittill( "_encstr_AD2A12D8932173D1C1379B284EDAD399985F68F8" );

    if ( isdefined( var_2 ) )
    {
        var_5 = spawnstruct();
        var_5.origin = ( self.origin[0], self.origin[1], self.origin[2] + var_2 );
        heli_wait_node( var_5, undefined );
    }

    var_6 = undefined;
    var_7 = var_3;
    var_8 = get_path_getfunc( var_3 );

    while ( isdefined( var_7 ) )
    {
        if ( isdefined( var_7.script_parameters ) )
            readnodeevents( var_7 );

        if ( isdefined( var_7.script_linkto ) )
            set_lookat_from_dest( var_7 );

        heli_wait_node( var_7, var_6, var_2 );

        if ( !isdefined( self ) )
            return;

        self.currentnode = var_7;
        var_7 notify( "_encstr_8B5C081B58E0B7A213E6", self );

        if ( isdefined( var_7.script_helimove ) )
        {
            self setyawspeedbyname( var_7.script_helimove );

            if ( var_7.script_helimove == "_encstr_982207054FFBF5F8AA" )
                self setmaxpitchroll( 25, 50 );
        }

        if ( !isdefined( self ) )
            return;

        if ( isdefined( var_7.script_team ) )
            self.script_team = var_7.script_team;

        if ( isdefined( var_7.script_unload ) )
        {
            self notify( "_encstr_B2A8075DB9C6BDB032" );
            scripts\engine\utility::waittill_notify_or_timeout( "_encstr_B78209C5982017FE69B0D2", self.unload_time );
        }

        if ( self vehicle_isphysveh() )
        {
            if ( isdefined( var_7.script_pathtype ) )
                self.veh_pathtype = var_7.script_pathtype;
        }

        if ( isdefined( var_7.script_flag_wait ) )
        {
            scripts\engine\utility::flag_wait( var_7.script_flag_wait );

            if ( isdefined( var_7.script_delay_post ) )
                wait( var_7.script_delay_post );

            self notify( "_encstr_8A910D8CACB12CCB7D382CE6E6B232" );
        }

        if ( isdefined( self.set_lookat_point ) )
        {
            self.set_lookat_point = undefined;
            self clearlookatent();
        }

        var_6 = var_7;

        if ( !isdefined( var_7.target ) )
            break;

        var_7 = [[ var_8 ]]( var_7.target );

        if ( !isdefined( var_7 ) )
        {
            var_7 = var_6;
            break;
        }
    }

    self notify( "_encstr_B926194E950BB1A156917D8C2F7358B64B1BAF83B01D86EBACB991" );

    if ( isdefined( self.script_vehicle_selfremove ) )
        self delete();
}

heli_wait_node( var_0, var_1, var_2 )
{
    self endon( "_encstr_8FDE08F8DA5371B94BC8" );

    if ( isdefined( var_0.script_unload ) || isdefined( var_0.script_land ) )
    {
        var_3 = 0;

        if ( isdefined( var_0.script_land ) )
        {
            scripts\engine\utility::ent_flag_set( "_encstr_BC9307A8DFFD1F1F88" );

            if ( isdefined( self.unload_land_offset ) )
                var_3 = self.unload_land_offset;
        }
        else if ( isdefined( var_0.script_unload ) && isdefined( self.unload_hover_offset ) )
            var_3 = self.unload_hover_offset;
        else if ( isdefined( var_0.script_unload ) && isdefined( self.unload_hover_offset_max ) )
        {
            var_4 = scripts\common\utility::groundpos( var_0.origin );
            var_3 = var_0.origin[2] - var_4[2];

            if ( var_3 >= self.unload_hover_offset_max )
                var_3 = self.unload_hover_offset_max;
            else if ( isdefined( self.unload_hover_land_height ) && var_3 < self.unload_hover_land_height )
                var_3 = self.unload_hover_land_height;
        }

        var_0.radius = 2;

        if ( isdefined( var_0.ground_pos ) )
            var_0.origin = var_0.ground_pos + ( 0, 0, var_3 );
        else
        {
            var_5 = scripts\common\utility::groundpos( var_0.origin ) + ( 0, 0, var_3 );

            if ( var_5[2] > var_0.origin[2] - 2000 )
                var_0.origin = scripts\common\utility::groundpos( var_0.origin ) + ( 0, 0, var_3 );
        }

        self sethoverparams( 0, 0, 0 );
    }

    if ( isdefined( var_1 ) )
    {
        var_6 = var_1.script_airresistance;
        var_7 = var_1.speed;
        var_8 = var_1.script_accel;
        var_9 = var_1.script_decel;
    }
    else
    {
        var_6 = undefined;
        var_7 = undefined;
        var_8 = undefined;
        var_9 = undefined;
    }

    var_10 = isdefined( var_0.script_stopnode ) && var_0.script_stopnode;
    var_11 = isdefined( var_0.script_unload );
    var_12 = isdefined( var_0.script_flag_wait ) && !scripts\engine\utility::flag( var_0.script_flag_wait );
    var_13 = !isdefined( var_0.target );
    var_14 = isdefined( var_0.script_delay );

    if ( isdefined( var_0.angles ) )
        var_15 = var_0.angles[1];
    else
        var_15 = 0;

    if ( self.health <= 0 )
        return;

    var_16 = var_0.origin;

    if ( isdefined( var_2 ) )
        var_16 = ( var_16[0], var_16[1], var_16[2] + var_2 );

    if ( isdefined( self.heliheightoverride ) )
        var_16 = ( var_16[0], var_16[1], self.heliheightoverride );

    self vehicle_helisetai( var_16, var_7, var_8, var_9, var_0.script_goalyaw, var_0.script_anglevehicle, var_15, var_6, var_14, var_10, var_11, var_12, var_13 );

    if ( isdefined( var_0.radius ) )
    {
        self setneargoalnotifydist( var_0.radius );
        scripts\engine\utility::_id_143A5( "_encstr_A4D10A68F227A6614FFF4B59", "_encstr_AA7205F03A9609" );
    }
    else
        self waittill( "_encstr_AA7205F03A9609" );

    if ( isdefined( var_0.script_firelink ) )
    {
        if ( !isdefined( level.helicopter_firelinkfunk ) )
        {

        }

        thread [[ level.helicopter_firelinkfunk ]]( var_0 );
    }

    var_0 scripts\engine\utility::script_delay();

    if ( isdefined( self.path_gobbler ) )
        scripts\engine\utility::deletestruct_ref( var_0 );

    self notify( "_encstr_A4EC0D077F22FD80BE8B71EBB68C40" );
}

get_path_getfunc( var_0 )
{
    var_1 = ::get_from_vehicle_node;

    if ( isdefined( var_0.target ) )
    {
        if ( isdefined( get_from_entity( var_0.target ) ) )
            var_1 = ::get_from_entity;

        if ( isdefined( get_from_spawnstruct( var_0.target ) ) )
            var_1 = ::get_from_spawnstruct;
    }

    return var_1;
}

get_from_vehicle_node( var_0 )
{
    return getvehiclenode( var_0, "_encstr_B8CE0BE43FC317DF690862BA48" );
}

get_from_spawnstruct( var_0 )
{
    return scripts\engine\utility::getstruct( var_0, "_encstr_B8CE0BE43FC317DF690862BA48" );
}

get_from_entity( var_0 )
{
    var_1 = getentarray( var_0, "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( isdefined( var_1 ) && var_1.size > 0 )
        return var_1[randomint( var_1.size )];

    return undefined;
}

set_lookat_from_dest( var_0 )
{
    var_1 = getent( var_0.script_linkto, "_encstr_8C9D10D2BEF5826893D99B9748283E4AB3C5" );

    if ( !isdefined( var_1 ) )
        return;

    self setlookatent( var_1 );
    self.set_lookat_point = 1;
}

parsehelipathlength()
{
    if ( !isdefined( self.path ) )
        return 0.0;

    if ( isdefined( self.pathduration ) )
        return self.pathduration;

    self.pathduration = 0.0;
    var_0 = self.path;
    var_1 = var_0.speed;

    for (;;)
    {
        if ( isdefined( var_0.script_unload ) )
            break;

        if ( !isdefined( var_0.target ) )
            break;

        var_2 = scripts\engine\utility::getstruct( var_0.target, "_encstr_B8CE0BE43FC317DF690862BA48" );

        if ( !isdefined( var_2 ) )
            break;

        var_3 = distance( var_0.origin, var_2.origin );

        if ( isdefined( var_0.speed ) )
            var_1 = var_0.speed;

        var_4 = 17.6;
        var_5 = 1.1;
        self.pathduration = self.pathduration + var_3 * var_5 / ( var_1 * var_4 );
        var_0 = var_2;
    }

    return self.pathduration;
}

readnodeevents( var_0 )
{
    var_1 = strtok( var_0.script_parameters, "_encstr_B44C02C9" );

    foreach ( var_3 in var_1 )
    {
        var_4 = strtok( var_3, "_encstr_8A4C02E8" );

        if ( !isdefined( var_4 ) )
            return;

        if ( var_4.size != 2 )
            return;

        thread processtimelineevent( var_4[0], float( var_4[1] ) );
    }
}

processtimelineevent( var_0, var_1 )
{
    if ( !isdefined( self.timelineevents ) )
        self.timelineevents = [];

    if ( var_1 > 0 )
        wait( var_1 );

    switch ( var_0 )
    {
        case "_encstr_A9940A2F316F6ABD29401D63":
            self.timelineevents["_encstr_A1490658729703A9"] = "_encstr_BE190436F6BB";

            foreach ( var_3 in self.infil.players )
                scripts\mp\utility\infilexfil::cam_shake_low( var_3 );

            break;
        case "_encstr_8F940A4AA35B2AC54ED02B23":
            self.timelineevents["_encstr_A1490658729703A9"] = "_encstr_9819045FD029";

            foreach ( var_3 in self.infil.players )
                scripts\mp\utility\infilexfil::cam_shake_off( var_3 );

            break;
        case "_encstr_A3150C90DBE71D4BB7B9E0E59A4F":
            self.infil notify( "_encstr_A3150C90DBE71D4BB7B9E0E59A4F" );
            break;
        case "_encstr_AD791AB2D92B731DF5B934BDDEA32DE6B3D5D23791F6BB7D7BC1B237":
            self.infil notify( "_encstr_AD791AB2D92B731DF5B934BDDEA32DE6B3D5D23791F6BB7D7BC1B237" );
            break;
        case "_encstr_8C551C202BB3925B56109080EA75125D57BF22186757435158D2F71A4FB4":
            self.infil notify( "_encstr_8C551C202BB3925B56109080EA75125D57BF22186757435158D2F71A4FB4" );
            break;
    }
}

manageinteractiveslowmo()
{
    if ( !isdefined( level.interactiveinfilstart ) || !isdefined( level.interactiveinfilwindow ) )
        return;

    wait( level.interactiveinfilstart );
    setslowmotion( 1, 0.5, 1 );
    wait( level.interactiveinfilwindow );
    setslowmotion( 0.5, 1, 0.5 );
}

_id_14367()
{
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    while ( level.stop_station_closed_vo != 0 )
        waitframe();

    setspeedthreshold();
}
