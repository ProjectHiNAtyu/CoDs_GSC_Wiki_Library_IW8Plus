// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( level.gametype != "_encstr_B13E08F31858214D4BF3" && getsubstr( scripts\mp\utility\game::getgametype(), 0, 3 ) != "_encstr_9F19040B72FF" )
        return;

    level.tacopsmap = spawnstruct();
    var_0 = level.tacopsmap;
    var_0.mapconfigs = [];
    var_0.activeconfigs = [];
    var_0.globalspawnareas = [];
    var_0.globalspawnareas["_encstr_BC850785638DA59537"] = [];
    var_0.globalspawnareas["_encstr_BA840579D3F7F6"] = [];
    setupconfigentities();
    level._effect["_encstr_BC8C0F6E4023DA5FA9C8D3AB584351B28D"] = loadfx( "_encstr_9BCE34EB333A17AAAF5B990D673702E120B01F07E871DF63D5139182C5538BABE8F9ABFF08C9DB5A19A5E97F3D5FA362D0A02213C822" );
    level._effect["_encstr_ADF6124C2FF2A30104F7A178AB30B8F72B5448D8"] = loadfx( "_encstr_94452E933ABBC048953A8B6755389839BEC348F9020330382F089BF774A719754B8BE0A01BAF50B049169BC72E4B9843" );
    level._effect["_encstr_9F9013C9EB9311C4CC35FF507D1B6F18F04BEBBA88"] = loadfx( "_encstr_95F42BB399879796EE9B5EAFE456B8AEB26E1DE65E6B0E5E9D331E7D235698BA3BAFBBC24EB92DDC3B8B3B66E1" );
}

createmapconfig( var_0, var_1 )
{
    var_2 = level.tacopsmap;
    var_2.mapconfigs[var_0] = var_1;
    var_1.ref = var_0;
    var_1.spawnareas = [];
    var_1.spawnareas["_encstr_BC850785638DA59537"] = [];
    var_1.spawnareas["_encstr_BA840579D3F7F6"] = [];
    var_1.mappositions = [];
    var_1.mappositions["_encstr_BC850785638DA59537"] = [];
    var_1.mappositions["_encstr_BA840579D3F7F6"] = [];
    return var_1;
}

mapconfigexists( var_0 )
{
    return isdefined( level.tacopsmap ) && isdefined( level.tacopsmap.mapconfigs[var_0] );
}

setactivemapconfig( var_0, var_1 )
{
    if ( !mapconfigexists( var_0 ) )
    {
        clearactivemapconfigs();
        return;
    }

    if ( isdefined( level.tacopsmap.activeconfigs[var_1] ) && level.tacopsmap.mapconfigs[var_0] == level.tacopsmap.activeconfigs[var_1] )
        return;

    level.tacopsmap.activeconfigs[var_1] = level.tacopsmap.mapconfigs[var_0];
    level notify( "_encstr_BE6614470B6CF5BD83DCFADA2CC17DB1865873B3B246" );
}

getactivemapconfig( var_0 )
{
    return level.tacopsmap.activeconfigs[self.team];
}

clearactivemapconfigs()
{
    level.tacopsmap.activeconfigs = [];
    level notify( "_encstr_A89C1414A378B1D7571B8952A1AFDF76D803B99A3328" );
}

setteammapposition( var_0, var_1, var_2 )
{
    if ( !mapconfigexists( var_0 ) )
        createmapconfig( var_0 );

    var_3 = level.tacopsmap.mapconfigs[var_0];
    var_3.mappositions[var_1] = var_2;
}

initspawnarea( var_0, var_1, var_2 )
{
    var_3 = tablelookuprownum( "_encstr_B74A1A5BE0BC1DB0367DED386EBEDAB0C1BEE607C2EEDCB917C66ED9", 0, var_2 );
    var_4 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_1.origin );
    var_4 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_1.anchorentity = var_4;
    var_1.typeid = var_3;
    var_1.typeref = var_2;
    var_1.team = var_0;
    var_1.enabled = 1;

    if ( isdefined( var_1.dynamicent ) )
        var_4 linkto( var_1.dynamicent );
    else if ( isdefined( var_1.target ) )
        var_1.areatriggers = getentarray( var_1.target, "_encstr_B8CE0BE43FC317DF690862BA48" );
}

addspawnareatoconfig( var_0, var_1, var_2, var_3 )
{
    if ( !mapconfigexists( var_0 ) )
        createmapconfig( var_0 );

    var_4 = level.tacopsmap.mapconfigs[var_0];
    initspawnarea( var_1, var_2, var_3 );
    var_4.spawnareas[var_1][var_4.spawnareas[var_1].size] = var_2;
}

addglobalspawnarea( var_0, var_1, var_2, var_3 )
{
    var_4 = level.tacopsmap;
    initspawnarea( var_1, var_2, var_3 );
    var_4.globalspawnareas[var_1][var_0] = var_2;
}

removeglobalspawnarea( var_0, var_1 )
{
    level.tacopsmap.globalspawnareas[var_1][var_0] = undefined;
    level notify( "_encstr_BE6614470B6CF5BD83DCFADA2CC17DB1865873B3B246" );
}

refreshplayerspawnareaomnvars()
{
    var_0 = level.tacopsmap.activeconfigs[self.team];

    if ( !isdefined( var_0 ) )
    {
        for ( var_1 = 0; var_1 < 8; var_1++ )
        {
            self setclientomnvar( "_encstr_B436152344410B45EB913F19F14C4DA85DDDDC375983CF" + var_1, undefined );
            self setclientomnvar( "_encstr_AFCB11ABD2D7477BB5FAE6072CBBB9EB4B8CEB" + var_1, -1 );
        }
    }

    var_2 = level.tacopsmap.globalspawnareas[self.team].size;
    var_3 = var_0.spawnareas[self.team].size + var_2;
    var_4 = 0;

    foreach ( var_6 in level.tacopsmap.globalspawnareas[self.team] )
    {
        self setclientomnvar( "_encstr_B436152344410B45EB913F19F14C4DA85DDDDC375983CF" + var_4, var_6.anchorentity );
        self setclientomnvar( "_encstr_AFCB11ABD2D7477BB5FAE6072CBBB9EB4B8CEB" + var_4, var_6.typeid );
        var_4++;
    }

    for ( var_1 = 0; var_1 < var_0.spawnareas[self.team].size; var_1++ )
    {
        var_8 = var_0.spawnareas[self.team][var_1];

        if ( istrue( var_8.enabled ) )
        {
            self setclientomnvar( "_encstr_B436152344410B45EB913F19F14C4DA85DDDDC375983CF" + var_4, var_8.anchorentity );
            self setclientomnvar( "_encstr_AFCB11ABD2D7477BB5FAE6072CBBB9EB4B8CEB" + var_4, var_8.typeid );
            var_4++;
        }
    }

    for ( var_1 = var_4; var_1 < 8; var_1++ )
    {
        self setclientomnvar( "_encstr_B436152344410B45EB913F19F14C4DA85DDDDC375983CF" + var_1, undefined );
        self setclientomnvar( "_encstr_AFCB11ABD2D7477BB5FAE6072CBBB9EB4B8CEB" + var_1, -1 );
    }
}

waitforspawnselection()
{
    if ( isai( self ) )
        return;

    var_0 = level.tacopsmap.activeconfigs[self.team];

    if ( !isdefined( var_0 ) )
        return;

    waitframe();
    runtacopsmap( var_0 );
}

runtacopsmap( var_0 )
{
    scripts\mp\utility\player::updatesessionstate( "_encstr_A68C0A5803A5D151A2B310A6" );
    scripts\mp\spectating::setdisabled();
    scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );

    if ( isdefined( self.lastdeathangles ) )
        self setplayerangles( self.lastdeathangles );

    wait 0.5;
    var_1 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self getvieworigin() );
    var_1 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_1.angles = self getplayerangles();
    self.tacopsmapcameraent = var_1;
    self.isusingtacopsmapcamera = 1;
    self cameralinkto( var_1, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", 1 );
    var_1 movecameratomappos( var_0.mappositions[self.team].origin, var_0.mappositions[self.team].angles, self );
    self setclientomnvar( "_encstr_889A14CBF03F2BC03FD91F177BE19B9108710D300AEA", 1 );
    refreshplayerspawnareaomnvars();
    self.deathspectatepos = var_0.mappositions[self.team].origin;
    self.deathspectateangles = var_0.mappositions[self.team].angles;
    showteamicons();
    var_2 = var_0;

    for (;;)
    {
        var_3 = watchendconditions();
        var_4 = 1;

        switch ( var_3 )
        {
            case "_encstr_9DA11B0BA7DFE94F2BB04F8F48430753BB49D746951322861678AFD370":
                thread clearselectedareaonspawn();
                thread runslamzoomonspawn();
                var_4 = 1;
                closetacopsmap();
                break;
            case "_encstr_BE6614470B6CF5BD83DCFADA2CC17DB1865873B3B246":
                self setclientomnvar( "_encstr_889A14CBF03F2BC03FD91F177BE19B9108710D300AEA", 0 );
                var_2 = level.tacopsmap.activeconfigs[self.team];
                var_1 movecameratomappos( var_2.mappositions[self.team].origin, var_2.mappositions[self.team].angles );
                self setclientomnvar( "_encstr_889A14CBF03F2BC03FD91F177BE19B9108710D300AEA", 1 );
                refreshplayerspawnareaomnvars();
                var_4 = 0;
                break;
            case "_encstr_A89C1414A378B1D7571B8952A1AFDF76D803B99A3328":
                var_4 = 1;
                closetacopsmap();
                stopcamera();
                break;
            case "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C":
                var_4 = 1;
                closetacopsmap();
                stopcamera();
                break;
            case "_encstr_AA4D17ED8EE26F20B80F41D82FD07E476A35EDE067CAD1A994":
                var_4 = 0;
                closetacopsmap();
                stopcamera();
                break;
            default:
                break;
        }

        if ( var_4 )
            return;
    }
}

watchendconditions()
{
    thread endconditionwatcher_gameended();
    thread endconditionwatcher_selectionmade();
    thread endconditionwatcher_mapcleared();
    thread endconditionwatcher_mapchanged();
    var_0 = scripts\engine\utility::_id_143B7( "_encstr_9DA11B0BA7DFE94F2BB04F8F48430753BB49D746951322861678AFD370", "_encstr_BE6614470B6CF5BD83DCFADA2CC17DB1865873B3B246", "_encstr_A89C1414A378B1D7571B8952A1AFDF76D803B99A3328", "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C", "_encstr_AA4D17ED8EE26F20B80F41D82FD07E476A35EDE067CAD1A994" );
    self notify( "_encstr_B7711A0B920FD07B6A03D7AB3657B98697FA81D0AB7F70C049E5BBB1" );
    return var_0;
}

endconditionwatcher_selectionmade()
{
    self endon( "_encstr_B7711A0B920FD07B6A03D7AB3657B98697FA81D0AB7F70C049E5BBB1" );
    self notify( "_encstr_A49C241DDE23DD67258280704A3D2D178F6C96032D938627CF6AE8C0B354F78857E1AD0DC8A6" );
    self endon( "_encstr_A49C241DDE23DD67258280704A3D2D178F6C96032D938627CF6AE8C0B354F78857E1AD0DC8A6" );

    for (;;)
    {
        self waittill( "_encstr_8AEB10D3C848069A99C3E7D8365383C61158", var_0, var_1 );

        if ( var_0 == "_encstr_BE081C0D59B7D69F5A7BA9C063369748EFC1960DB19F9BC3056250C02A8F" )
        {
            var_2 = undefined;
            var_3 = level.tacopsmap.activeconfigs[self.team];

            foreach ( var_5 in var_3.spawnareas[self.team] )
            {
                if ( var_1 == var_5.anchorentity getentitynumber() )
                {
                    var_2 = var_5;
                    break;
                }
            }

            if ( !isdefined( var_2 ) )
            {
                foreach ( var_5 in level.tacopsmap.globalspawnareas[self.team] )
                {
                    if ( var_1 == var_5.anchorentity getentitynumber() )
                    {
                        var_2 = var_5;
                        break;
                    }
                }
            }

            self.tacopsmapselectedarea = var_2;
            self notify( "_encstr_9DA11B0BA7DFE94F2BB04F8F48430753BB49D746951322861678AFD370" );
            break;
        }
    }
}

endconditionwatcher_gameended()
{
    self endon( "_encstr_B7711A0B920FD07B6A03D7AB3657B98697FA81D0AB7F70C049E5BBB1" );
    self notify( "_encstr_B4532013639A7E9886F7D8735C7F688C229397B1E7A33891A18D41AD855C785D0E0E" );
    self endon( "_encstr_B4532013639A7E9886F7D8735C7F688C229397B1E7A33891A18D41AD855C785D0E0E" );
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self notify( "_encstr_AA4D17ED8EE26F20B80F41D82FD07E476A35EDE067CAD1A994" );
}

endconditionwatcher_mapcleared()
{
    self endon( "_encstr_B7711A0B920FD07B6A03D7AB3657B98697FA81D0AB7F70C049E5BBB1" );
    self notify( "_encstr_B1CA2133A8B413F0DDA1A069F9673B79095D4810C7B3A18960809144AFB1A612FDF1EE" );
    self endon( "_encstr_B1CA2133A8B413F0DDA1A069F9673B79095D4810C7B3A18960809144AFB1A612FDF1EE" );
    level waittill( "_encstr_A89C1414A378B1D7571B8952A1AFDF76D803B99A3328" );
    self notify( "_encstr_A89C1414A378B1D7571B8952A1AFDF76D803B99A3328" );
}

endconditionwatcher_mapchanged()
{
    self endon( "_encstr_B7711A0B920FD07B6A03D7AB3657B98697FA81D0AB7F70C049E5BBB1" );
    self notify( "_encstr_9B992137F86C0338104B805B3330A003B9F8B80DA5B50FF7078336A827C5B1050AF8C1" );
    self endon( "_encstr_9B992137F86C0338104B805B3330A003B9F8B80DA5B50FF7078336A827C5B1050AF8C1" );
    level waittill( "_encstr_BE6614470B6CF5BD83DCFADA2CC17DB1865873B3B246" );
    self notify( "_encstr_BE6614470B6CF5BD83DCFADA2CC17DB1865873B3B246" );
}

showteamicons()
{
    if ( !isdefined( level.runtacopsshowteamicons ) )
        level.runtacopsshowteamicons = [];

    if ( scripts\mp\utility\teams::getteamdata( self.team, "_encstr_97580AC41D811F767F3072CB" ) )
    {
        var_0 = 0;
        level.runtacopsshowteamicons[scripts\mp\utility\player::getuniqueid()] = [];

        foreach ( var_2 in scripts\mp\utility\teams::getteamdata( self.team, "_encstr_8875080E3685E52B93B9" ) )
        {
            if ( var_2 == self )
                continue;

            var_3 = var_2.origin;
            var_4 = newclienthudelem( self );
            var_4.x = var_3[0];
            var_4.y = var_3[1];
            var_4.z = var_3[2] + 32;
            var_4.alpha = 1.0;
            var_4.archived = 0;
            var_4.showinkillcam = 0;

            if ( level.splitscreen )
                var_4 setshader( "_encstr_97031B6B59681F6BDEDF97939705734D38E622F4F0E0D4E220BDD39FFB", 10, 10 );
            else
                var_4 setshader( "_encstr_97031B6B59681F6BDEDF97939705734D38E622F4F0E0D4E220BDD39FFB", 5, 5 );

            var_4 setwaypoint( 0 );
            var_4 settargetent( var_2 );
            level.runtacopsshowteamicons[scripts\mp\utility\player::getuniqueid()][var_0] = var_4;
            var_0++;
        }
    }
}

cleanupteamicons()
{
    foreach ( var_1 in level.runtacopsshowteamicons[scripts\mp\utility\player::getuniqueid()] )
        var_1 destroy();

    level.runtacopsshowteamicons[scripts\mp\utility\player::getuniqueid()] = undefined;
}

closetacopsmap()
{
    self setclientomnvar( "_encstr_889A14CBF03F2BC03FD91F177BE19B9108710D300AEA", 0 );
    cleanupteamicons();
}

stopcamera()
{
    self cameraunlink();
    self.tacopsmapcameraent delete();
    self.tacopsmapcameraent = undefined;
    self.isusingtacopsmapcamera = undefined;
}

clearselectedareaonspawn()
{
    self waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
    self.tacopsmapselectedarea = undefined;
}

runslamzoomonspawn()
{
    self waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
    var_0 = self geteye();
    var_1 = self.angles;
    scripts\mp\utility\player::updatesessionstate( "_encstr_A68C0A5803A5D151A2B310A6" );
    self cameralinkto( self.tacopsmapcameraent, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", 1 );
    self visionsetnakedforplayer( "_encstr_BC5911336A3EB1074FFE895360F00D8BE0F0E2", 0.2 );
    self.tacopsmapcameraent moveto( var_0, 0.5 );
    self.tacopsmapcameraent rotateto( var_1, 0.5, 0.5 );
    wait 0.5;
    self visionsetnakedforplayer( "_encstr_A40101", 0 );
    thread playslamzoomflash();
    scripts\mp\utility\player::updatesessionstate( "_encstr_8F7508BB18675378EBC7" );
    stopcamera();
}

playslamzoomflash()
{
    var_0 = newclienthudelem( self );
    var_0.x = 0;
    var_0.y = 0;
    var_0.alignx = "_encstr_B1AD05C65666E8";
    var_0.aligny = "_encstr_B91904EC4718";
    var_0.sort = 1;
    var_0.horzalign = "_encstr_BC940BE9D5F91D47B0ABBD851E";
    var_0.vertalign = "_encstr_BC940BE9D5F91D47B0ABBD851E";
    var_0.alpha = 1;
    var_0.foreground = 1;
    var_0 setshader( "_encstr_948806DDD04BE895", 640, 480 );
    var_0 fadeovertime( 0.4 );
    var_0.alpha = 0.0;
    wait 0.4;
    var_0 destroy();
}

movecameratomappos( var_0, var_1, var_2 )
{
    var_3 = 1.0;
    var_4 = 1.0;
    self moveto( var_0, 1.0, 0.5, 0.5 );
    self rotateto( var_1, 1.0, 0.5, 0.5 );
    var_2 thread startoperatorsound();
    wait 1.1;
}

setupconfigentities()
{
    var_0 = scripts\engine\utility::getstructarray( "_encstr_9BB2134B0BCFD1BFF34EAF856FDBB7666FD0F21248", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_2 in var_0 )
    {
        var_3 = var_2.script_noteworthy;

        if ( var_3 == "_encstr_B22E0BA0B790039F1DEA70C3EA" )
            var_3 = "_encstr_AD61098EEDBE131BA5A33D";

        createmapconfig( var_3, var_2 );
        var_4 = scripts\engine\utility::getstructarray( var_2.target, "_encstr_B8CE0BE43FC317DF690862BA48" );

        foreach ( var_6 in var_4 )
        {
            switch ( var_6.script_label )
            {
                case "_encstr_875015693F713E08F14B504EF6CAE87F296F21D1BF7A86":
                    addspawnareatoconfig( var_3, "_encstr_BC850785638DA59537", var_6, var_6.script_noteworthy );
                    break;
                case "_encstr_A8A413E8DED7378385EEE6FA85932B58FAB0C35A37":
                    addspawnareatoconfig( var_3, "_encstr_BA840579D3F7F6", var_6, var_6.script_noteworthy );
                    break;
                case "_encstr_A91E112B10D73ED3D0E3353B9059AF45DB90E2":
                    setteammapposition( var_3, "_encstr_BC850785638DA59537", var_6 );
                    break;
                case "_encstr_A2500F13B8F8DF40288F2F1B43E0CF6B1F":
                    setteammapposition( var_3, "_encstr_BA840579D3F7F6", var_6 );
                    break;
            }
        }
    }
}

setupspawnareas()
{
    var_0 = level.tacopsmap;

    foreach ( var_2 in var_0.mapconfigs )
    {
        foreach ( var_4 in var_2.spawnareas )
        {
            foreach ( var_6 in var_4 )
            {
                var_6.spawnlist = [];

                foreach ( var_8 in level.spawnpoints )
                {
                    foreach ( var_10 in var_6.areatriggers )
                    {
                        if ( ispointinvolume( var_8.origin, var_10 ) )
                        {
                            var_6.spawnlist[var_8.index] = var_8;
                            break;
                        }
                    }
                }
            }
        }
    }
}

filterspawnpoints( var_0, var_1 )
{
    if ( isdefined( self.tacopsmapselectedarea ) )
    {
        var_2 = [];

        foreach ( var_4 in var_0 )
        {
            if ( isdefined( self.tacopsmapselectedarea.spawnlist ) && isdefined( self.tacopsmapselectedarea.spawnlist[var_4.index] ) )
                var_2[var_2.size] = var_4;
        }

        return var_2;
    }

    return var_0;
}

adddynamicspawnarea( var_0, var_1, var_2, var_3 )
{
    var_4 = spawnstruct();
    var_4.origin = var_1.origin;
    var_4.dynamicent = var_1;
    var_4.script_noteworthy = var_3;
    var_4.areatriggers = [];
    addspawnareatoconfig( var_0, var_2, var_4, var_3 );
}

startoperatorsound()
{
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( istrue( self.spawnselectionoperatorsound ) )
        return;

    var_0 = spawn( "_encstr_A3050EDF6FF5DC081CC1AFA37097B80B", ( 0, 0, 0 ) );
    var_0 showonlytoplayer( self );
    self setsoundsubmix( "_encstr_A65F14D4F7D2614A310EF7B9035BF8F66E17F84F9B81" );
    var_1 = scripts\mp\utility\teams::getteamvoiceinfix( self.team );
    var_2 = "_encstr_816908F24147D853E83E" + var_1 + "_encstr_A99F16D82A671806B2F39BE7F33AC720F846A091D394D83E";

    if ( soundexists( var_2 ) )
        var_0 playloopsound( var_2 );
    else
        var_0 playloopsound( "_encstr_98D81FF5FB97C333556F907BCFAAD7811B50827F213A956FFCB022F0214BBD633E" );

    self.spawnselectionoperatorsound = 1;
    self waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
    self clearsoundsubmix( "_encstr_A65F14D4F7D2614A310EF7B9035BF8F66E17F84F9B81" );
    var_0 stoploopsound( var_2 );
    var_0 delete();
    self.spawnselectionoperatorsound = 0;
}
