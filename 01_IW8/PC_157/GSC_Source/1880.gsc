// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    precachemodel( "_encstr_A99D259BEC67100912C7B9BDC75AC7E0CF0640B2198DD8358AE793DFBAB7AFC0865C88697BED88" );
    precachemodel( "_encstr_9D9E194BA2A72B54C8B8B7A768A62F72A94959851B0F529C1692EE" );
    precachemodel( "_encstr_A82E1C504A29E78BB762A7AC4D4FD38B4DA289E0027F69439FC897882FE3" );
    precachemodel( "_encstr_BE2117CB53A9787097D35B81365049A09971504A708520C2CA" );
    precachemodel( "_encstr_BDA31A93D811888B41632EC850D9C1081FB972BFF9A01957BE27EF10" );
    precachemodel( "_encstr_8C7F16405FC92D9F8C480B63B6D6F7A7A041C1DF1978E2CA" );
    precachemodel( "_encstr_A1F319E21B0194625C3933176F76AAD78818DCAF68F0700FB8DF53" );
    precachemodel( "_encstr_9D782CB3AA672158D760E92B9E3F217B7BF309DB12CF66B1ED46C523BBE75936FFDAA0200A5708200454DB57F0DA" );
    precachemodel( "_encstr_9BB52F255247DD502118CDEC201031421E047BBBECEFE3AFC732BA19F3EF013F07E01A8336505FF3EBC0A7E76FC3883816" );
    precachemodel( "_encstr_94F2215DD6F5B4E619EAE6A327B4B0C6EB1BA5760D3AD7C04C7D3957DCE695E4D783DA" );
    precachemodel( "_encstr_94DC24AB0AA18B6DAC9B0B3B33E3032B690BD812690BFF189A2FA32DC2D0822EE821F8709735" );
    precachemodel( "_encstr_A2FC1E68C23F97E1835788750FEB48BF64CB6130FB963D79AF4E84E01C071061" );
    precachemodel( "_encstr_8C7E2159ED10E1A309A8BA12B651D7A7C871F7CB21D07593A3E032A9FB3F1BDD19DF4E" );
    precachemodel( "_encstr_89B527284A672B69B7B460E6855773D78AB3C920A2FEBDA2DFDB7D536CBFF89FB94AE0F06A138F53BE" );
    precachemodel( "_encstr_B2772A2B3F6C8BBD29411D2218E0D462BE8B17EB97060269018997EC10C8063A80C9574F61B59978AA160D35" );
    precachemodel( "_encstr_A1B11FEC3BA752F5F0E793A07912DD49760145D0364F9F8D3177CB35D7AA26CF15" );
    precachemodel( "_encstr_8C9D2215BBDF926CF638BF9758683E2AD746DB8D9607CFD21E90E3AF5823D7A31B702585" );
    precachemodel( "_encstr_A1CD33518D9760232F7AA0F12247FBB8E73EECC0E6230B6752B260087ADD89964BCDE64547F7D3657D2AC8E1633345086752E047DD" );
    precachemodel( "_encstr_9BB936295547DD502118CD61A62B8012191E7F692FE3036FB302EB13F5C3B3CF43ABFA8507F07493E7D0AFE74B4B10181DF83F32D36F5068" );
    precachemodel( "_encstr_9C1C2BBD55572A9919B8D37708B141F2937887B94C49F3D783C8379F2B881489710D4EAFB8DF5BE589588FDB28" );
    precachemodel( "_encstr_88902EB5B2BE8D4B9D341DF56CACD2B1B4DC9DEBCC36BA7B27B237B1569BD1FA8EEA31CAAF9B1C2B2C27EB0EB5F5F6B9" );
    precachemodel( "_encstr_9DC3354BC76AA1C3601689678D4BFB79A393503FAF4F6BE7A70607F1B7DF28D7B010FFC39FF0B8AF494F92472A0AFF7B1AA12F8B995F2B" );
    precachemodel( "_encstr_BC173839890798ED772A2956D20FA330DB0AA3BF17EA08BE2FC3E03B0BFF514075604F3FD99328F6A78A7946879E8098CACDBBAD47FAD8D0F7F2" );
    precachemodel( "_encstr_8739372B59BE8DA5CE43E8F5D67BBADCA3B246FACA871DCAE4B4BD9CD75A9B19D5E6D14ED2581BD78DC29D5619EB068CEB9B83955827D70E5B" );
    precachemodel( "_encstr_94013A7FC0069C6237CB1BD9A1FF7B56CB78F30FA89ADCEA3553258A809B82E433200B3350110C716F7F2F4775CF9FFA1EB89317B8AB474B5B1835BD" );
    precachemodel( "_encstr_A3363E59567DC6B4D91AA3FAB5F6BACD47ACC8F52BE18E2BE496ED39BED2DCC8D5DCA3E4B485637DD8169D5619BE0619D77B73AF76E4ACB2B9BE4EE69CD7385B" );
    precachemodel( "_encstr_A8482C96FB327911F12BB079F71129811AE917A8D2BB5758A937D0D81F38C0C9A201B7A4EFA1D7038D4708898B4D" );
    precachemodel( "_encstr_A4622B31574BD81996B93BFAC658C48DCAF50EBD6E8ED7635A760D3AEB1CB78D2B7DDECDF59B0E951627AF0ED6" );
    precachemodel( "_encstr_B2453705DDC711199FFA704812752B69DF7F158D3CF7BB5B4222B09009CBF3C0DBD711709DB3A39B6F69A0E033E7A37E0B852878E57B0EF915" );
    precachemodel( "_encstr_AD1B3A6F9578A0091FC94BAB58D618108801152B98A5580BF21327DD8FCC3E99D9481057553A55EF63C1ED1A660FD95EB8ABC5D0759B0923C297F54E" );
    level._effect["_encstr_A8280EDB89801FDA0CFF57BBC1BF239D"] = loadfx( "_encstr_9CCA2C4B18AA8FC1372A3908013763A88B55119743F80ED773C22BC7A5859CF36140535408A0C0332D9D15A34408" );
    level._effect["_encstr_B4F718A61D100163E409199270B7DB47D1E1213FB9D8596A2DCB"] = loadfx( "_encstr_8B8E363D229B7D413FC2379027060B8FD57214B80BDBC0F311F120E0B293E458E05E53948144D851B27780557727285DB7FE07E2251EBB9B" );
    thread motiondetectors();
    script_model_anims();
}

#using_animtree("_encstr_93DC0DCD1B272D3847AF5BED23B2C6");

#using_animtree("_encstr_A40101");

#using_animtree("_encstr_A40101");

#using_animtree("_encstr_A40101");

#using_animtree("_encstr_A40101");

#using_animtree("_encstr_A40101");

script_model_anims()
{
    level.scr_animtree["_encstr_9BB90CA9537FDCF3A3E043ABA668"] = #animtree;
    level.scr_anim["_encstr_9BB90CA9537FDCF3A3E043ABA668"]["_encstr_8BF0090737992F105FA729"] = %_encstr_BE8A12BBB67D56B8FA33AB9BCA13DB1EBEC13639;
    level.scr_animname["_encstr_9BB90CA9537FDCF3A3E043ABA668"]["_encstr_8BF0090737992F105FA729"] = "_encstr_BE8A12BBB67D56B8FA33AB9BCA13DB1EBEC13639";
    level.scr_eventanim["_encstr_9BB90CA9537FDCF3A3E043ABA668"]["_encstr_8BF0090737992F105FA729"] = "_encstr_B35D0F59E2EB99BAB9CA987B0FFA8336E4";
    level.scr_anim["_encstr_9BB90CA9537FDCF3A3E043ABA668"]["_encstr_B9010C2D738EB239B0D88EAFDBCD"] = %_encstr_97461A83BA17D5E8893EBBAF25AE50236F435BAB32BF18E8517081A5;
    level.scr_animname["_encstr_9BB90CA9537FDCF3A3E043ABA668"]["_encstr_B9010C2D738EB239B0D88EAFDBCD"] = "_encstr_97461A83BA17D5E8893EBBAF25AE50236F435BAB32BF18E8517081A5";
    level.scr_eventanim["_encstr_9BB90CA9537FDCF3A3E043ABA668"]["_encstr_B9010C2D738EB239B0D88EAFDBCD"] = "_encstr_88DD17C7271FC2DDC398337F083E94BB1D30C1FD37F75B1CCB";
    level.scr_animtree["_encstr_BDC507523443D3FB90"] = #animtree;
    level.scr_anim["_encstr_BDC507523443D3FB90"]["_encstr_8BF0090737992F105FA729"] = %_encstr_AB5213BBB6F5B28BFA99AEE65613DBE1EB079CDE1C;
    level.scr_animname["_encstr_BDC507523443D3FB90"]["_encstr_8BF0090737992F105FA729"] = "_encstr_AB5213BBB6F5B28BFA99AEE65613DBE1EB079CDE1C";
    level.scr_anim["_encstr_BDC507523443D3FB90"]["_encstr_B9010C2D738EB239B0D88EAFDBCD"] = %_encstr_B8A41BEED6BE565CD799AEDCCA897B1EBEE8AE9CE6BEBD73AFE039ED0E;
    level.scr_animname["_encstr_BDC507523443D3FB90"]["_encstr_B9010C2D738EB239B0D88EAFDBCD"] = "_encstr_B8A41BEED6BE565CD799AEDCCA897B1EBEE8AE9CE6BEBD73AFE039ED0E";
    level.interactionanimlength = getanimlength( level.scr_anim["_encstr_9BB90CA9537FDCF3A3E043ABA668"]["_encstr_8BF0090737992F105FA729"] );
}

motiondetectors()
{
    wait 5;
    var_0 = getentarray( "_encstr_A3320A58A36FE3F7E243A1BD", "_encstr_A8ED125A5723AF9B405770989B255F1FF3897A60" );

    foreach ( var_2 in var_0 )
    {
        var_3 = var_2 scripts\engine\utility::get_target_array();
        var_2 thread motiondetectionproc( var_3 );
    }
}

lightonroutine( var_0, var_1 )
{
    wait( var_0 );

    if ( self.code_classname == "_encstr_8BA90608F481F0DB" )
    {
        if ( !isdefined( self.savedintensity ) )
            var_2 = 50;
        else
            var_2 = self.savedintensity;

        self setlightintensity( var_2 * 0.7 );
        thread scripts\engine\utility::play_sound_in_space( "_encstr_BD2111289BF999B3979B681FFFAA90234F7FF2", self.origin );
        wait 0.1;
        thread scripts\engine\utility::play_loop_sound_on_entity( "_encstr_9DFC16736B5999F8DFA44BA3018998CDF1AFFD8FF3A2D0F8" );
        self setlightintensity( var_2 * 0.1 );
        wait 0.05;
        self setlightintensity( var_2 * 0.4 );
        wait 0.1;
        self setlightintensity( var_2 * 0.2 );
        wait 0.15;
        self setlightintensity( var_2 );
    }
    else if ( self.code_classname == "_encstr_B4010B8B3E9AA0D7B37FC5D187" )
        self setscriptablepartstate( "_encstr_8BA90608F481F0DB", "_encstr_9C3509E0304C63739E60D5" );
}

lightoffroutine( var_0, var_1 )
{
    foreach ( var_3 in var_0 )
    {
        if ( var_3.code_classname == "_encstr_8BA90608F481F0DB" )
        {
            var_3 setlightintensity( 0 );
            var_3 thread scripts\engine\utility::play_sound_in_space( "_encstr_8A3D12B8B33FBCEB3FFB93130753781359589D3F", var_3.origin );
            var_3 notify( "_encstr_9C7D202F1B3AF7D2AB054B20EF6D88B8E2978F81B34328D0DEDB3618957720E88A5B" );
            continue;
        }

        if ( var_3.code_classname == "_encstr_B4010B8B3E9AA0D7B37FC5D187" )
            var_3 setscriptablepartstate( "_encstr_8BA90608F481F0DB", "_encstr_93CB0A1CDE7759C9EB7BCC33" );
    }
}

motiondetectionproc( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = spawnstruct();
    var_1.active = undefined;
    var_1.masterswitches = [];
    var_1.lights = [];
    var_1.models = [];
    var_1.nvglights = [];
    var_1.switchstatus = "_encstr_89B0075BB73A4B7BCD";
    var_1.lightson = 0;
    var_1.detection = 0;
    var_1.triggerblind = undefined;

    foreach ( var_3 in var_0 )
    {
        if ( var_3.code_classname == "_encstr_8BA90608F481F0DB" )
        {
            var_1.lights[var_1.lights.size] = var_3;
            continue;
        }

        if ( isdefined( var_3.script_noteworthy ) && var_3.script_noteworthy == "_encstr_B2C10D15BBE06317BEE7E30A2B1E1B" )
        {
            var_1.masterswitches[var_1.masterswitches.size] = var_3;
            continue;
        }

        if ( var_3.code_classname == "_encstr_93DC0DCD1B272D3847AF5BED23B2C6" && !isdefined( var_3.script_parameters ) )
        {
            var_1.models[var_1.models.size] = var_3;
            continue;
        }

        if ( var_3.code_classname == "_encstr_A3050EDF6FF5DC081CC1AFA37097B80B" )
        {
            var_1.nvglights[var_1.nvglights.size] = var_3;
            continue;
        }

        if ( isdefined( var_3.script_label ) && var_3.script_label == "_encstr_9E8410320AF0101A5BFB5A26942FF0973795" )
            var_1.triggerblind = var_3;
    }

    var_5 = getscriptablearray( self.target, "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_1.lights = scripts\engine\utility::array_combine( var_1.lights, var_5 );

    foreach ( var_7 in var_1.lights )
    {
        if ( var_7.code_classname == "_encstr_8BA90608F481F0DB" )
        {
            var_7.savedintensity = var_7 getlightintensity();
            var_7 setlightintensity( 0 );
            continue;
        }

        if ( var_7.code_classname == "_encstr_B4010B8B3E9AA0D7B37FC5D187" )
            var_7 setscriptablepartstate( "_encstr_8BA90608F481F0DB", "_encstr_93CB0A1CDE7759C9EB7BCC33" );
    }

    foreach ( var_10 in var_1.masterswitches )
        var_10 thread runlightswitch( self, var_1 );

    foreach ( var_13 in var_1.models )
        var_13.modelname = var_13.model;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_B9F906A857D2014D" )
    {
        if ( !isdefined( level.emplights ) )
            level.emplights = [];

        level.emplights = scripts\engine\utility::array_add( level.emplights, var_1 );

        if ( isdefined( level.emplightsoff ) )
            level thread [[ level.emplightsoff ]]();
    }

    thread onoffmodelswap( var_1.models, "_encstr_9819045FD029" );
    thread motiondetectionstatus( var_1 );

    for (;;)
    {
        if ( var_1.switchstatus == "_encstr_9707035F3B" )
        {
            self notify( "_encstr_9E7410706758792DBAA2C708A9877BDF5285" );

            if ( !var_1.lightson )
            {
                thread blindplayers( var_1 );

                foreach ( var_7 in var_1.lights )
                    var_7 thread lightonroutine( randomfloat( 0.2 ), var_1.nvglights );

                thread onoffmodelswap( var_1.models, "_encstr_9707035F3B" );
                var_1.lightson = 1;
            }
        }
        else if ( var_1.switchstatus == "_encstr_89B0075BB73A4B7BCD" )
        {
            if ( var_1.detection && !var_1.lightson )
            {
                thread blindplayers( var_1 );

                foreach ( var_7 in var_1.lights )
                {
                    var_7 thread lightonroutine( randomfloat( 0.2 ), var_1.nvglights );
                    var_1.lightson = 1;
                }

                thread onoffmodelswap( var_1.models, "_encstr_9707035F3B" );
                thread motiondetectioncooldown( var_1 );
            }
        }
        else if ( var_1.switchstatus == "_encstr_9819045FD029" )
        {
            if ( var_1.lightson )
            {
                level lightoffroutine( var_1.lights, var_1.nvglights );
                thread onoffmodelswap( var_1.models, "_encstr_9819045FD029" );
                var_1.lightson = 0;
            }

            if ( isdefined( self.script_parameters ) && self.script_parameters == "_encstr_89B0075BB73A4B7BCD" )
                var_1.switchstatus = "_encstr_89B0075BB73A4B7BCD";

            self notify( "_encstr_BCD50BD161DF40C53701ED29BA" );
        }

        wait 0.05;
    }
}

blindplayers( var_0 )
{
    if ( isdefined( var_0.triggerblind ) )
    {
        wait 0.4;

        foreach ( var_2 in level.players )
        {
            if ( !isdefined( var_2 ) || !scripts\mp\utility\player::isreallyalive( var_2 ) )
                continue;

            if ( var_2 istouching( var_0.triggerblind ) )
            {
                var_2 activatenightvisionblind();
                continue;
            }

            foreach ( var_4 in var_0.lights )
            {
                if ( distancesquared( var_4.origin, var_2.origin ) > 230400 )
                    continue;

                if ( !scripts\engine\utility::within_fov( var_2 geteye(), var_2 getplayerangles(), var_4.origin, 0.707106 ) )
                    continue;

                var_5 = scripts\engine\trace::ray_trace( var_2 geteye(), var_4.origin, undefined, scripts\engine\trace::create_default_contents( 1 ) );

                if ( distancesquared( var_5["_encstr_B7260923C89E8F3378E72E"], var_4.origin ) <= 324 )
                {
                    var_2 activatenightvisionblind();
                    break;
                }
            }
        }
    }
}

nameplatemanagement( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        if ( var_0.lightson == 0 )
        {
            foreach ( var_2 in level.players )
            {
                if ( var_2 istouching( self ) )
                    var_2 thread manageplayerindarkvolume( self, var_0 );
            }
        }

        wait 0.1;
    }
}

manageplayerindarkvolume( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( isdefined( self.indarkvolume ) )
        return;

    scripts\mp\utility\perk::giveperk( "_encstr_95E81258C39F0FE057B4E55BAF370BE3C73A5060" );
    self.indarkvolume = 1;

    while ( self istouching( var_0 ) && var_1.lightson == 0 )
        wait 0.1;

    scripts\mp\utility\perk::removeperk( "_encstr_95E81258C39F0FE057B4E55BAF370BE3C73A5060" );
    self.indarkvolume = undefined;
}

motiondetectionstatus( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        var_0.detection = 0;

        foreach ( var_2 in level.players )
        {
            if ( var_2 istouching( self ) )
            {
                if ( var_2 getstance() == "_encstr_B1AD06374716DC8C" && length2d( var_2 getvelocity() ) > 40 )
                {
                    var_0.detection = 1;
                    var_0.cooldown = 4;
                }

                if ( var_0.lightson )
                    var_2.inmotionlight = 1;
            }
        }

        wait 0.05;
    }
}

motiondetectioncooldown( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_BCD50BD161DF40C53701ED29BA" );
    self endon( "_encstr_9E7410706758792DBAA2C708A9877BDF5285" );

    if ( isdefined( self.script_parameters ) && self.script_parameters == "_encstr_89B0075BB73A4B7BCD" )
    {
        while ( var_0.cooldown > 0 )
        {
            wait 0.1;
            var_0.cooldown = var_0.cooldown - 0.1;
        }
    }

    var_0.switchstatus = "_encstr_9819045FD029";
}

runlightswitch( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_2 = createlightswitchtrigger( var_0, var_1 );

    if ( isdefined( var_2 ) )
        var_2 thread watchlightswitchuse( var_1 );
}

createlightswitchtrigger( var_0, var_1 )
{
    var_2 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self.origin, 40, 0, 60 );
    var_2 setmodel( "_encstr_A99D259BEC67100912C7B9BDC75AC7E0CF0640B2198DD8358AE793DFBAB7AFC0865C88697BED88" );
    var_2.angles = self.angles;

    if ( self.script_parameters == "_encstr_89B0075BB73A4B7BCD" )
        return;

    var_3 = scripts\engine\utility::get_target_array();

    foreach ( var_5 in var_3 )
    {
        if ( var_5.code_classname == "_encstr_A3050EDF6FF5DC081CC1AFA37097B80B" )
        {
            if ( isdefined( var_5.script_noteworthy ) && var_5.script_noteworthy == "_encstr_8FD10A5F02B78A414BD72A95" )
                var_2.scenenode = var_5;
            else
            {
                var_2.hintlightmodel = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_5.origin );
                var_2.hintlightmodel.angles = var_5.angles;
                var_2.hintlightmodel setmodel( var_5.script_noteworthy );
                var_2.hintlightmodel.modelname = var_5.script_noteworthy;
            }

            continue;
        }

        if ( var_5.code_classname == "_encstr_8BA90608F481F0DB" )
        {
            var_2.hintlight = var_5;
            continue;
        }
    }

    var_2 setuserange( 80 );
    var_2 sethintdisplayrange( 200 );
    var_2 setusefov( 120 );
    var_2 sethintdisplayfov( 120 );
    var_2 setcursorhint( "_encstr_98110C0B790BBF87AE11E9F1A8F5" );

    if ( !scripts\cp_mp\utility\game_utility::isrealismenabled() )
    {
        var_2 sethintstring( &"_encstr_AA7F101BA7EE68C754F0B3296A99530311D1" );
        var_2 sethinticon( "_encstr_BC2E1401D688DB8993301A7298D57C9721C9AF8278B2" );
    }

    if ( scripts\cp_mp\utility\game_utility::isnightmap() )
    {
        var_2 setusepriority( 0 );
        var_2 makeusable();
    }

    if ( isdefined( var_0.script_parameters ) && var_0.script_parameters == "_encstr_89B0075BB73A4B7BCD" )
        var_1.switchstatus = "_encstr_89B0075BB73A4B7BCD";
    else
        var_1.switchstatus = "_encstr_9819045FD029";

    foreach ( var_8 in level.players )
        var_2 enableplayeruse( var_8 );

    if ( isdefined( var_2.hintlightmodel ) && isdefined( var_2.hintlight ) )
    {
        var_2.hintlightcolor = var_2.hintlight getlightintensity();
        var_2 thread manageswitchhintlight( var_1 );
    }

    return var_2;
}

watchlightswitchuse( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        self waittill( "_encstr_8B5C081B58E0B7A213E6", var_1 );

        if ( !isplayer( var_1 ) )
            continue;

        if ( isdefined( var_0.switchstatus ) && var_0.switchstatus == "_encstr_9707035F3B" )
            playsoundatpos( self.origin, "_encstr_A29219DA88B79FD793459287E33E7BE75D88B37108ADD747E8379B" );
        else
            playsoundatpos( self.origin, "_encstr_889518B538BECCABCDB298F60FEBD8953BCAC9EBDE37AF7307B1" );

        thread swapswitchstatus( getanimlength( level.scr_anim["_encstr_9BB90CA9537FDCF3A3E043ABA668"]["_encstr_8BF0090737992F105FA729"] ) - 0.15, var_0 );
        var_2 = lightswitchinteraction( var_1, var_0 );

        if ( !var_2 )
            self notify( "_encstr_8FBB15A996704FE37F011323EF353952A5906181DC4F33" );
    }
}

swapswitchstatus( var_0, var_1 )
{
    self endon( "_encstr_8FBB15A996704FE37F011323EF353952A5906181DC4F33" );
    wait( var_0 );

    if ( var_1.switchstatus == "_encstr_89B0075BB73A4B7BCD" || var_1.switchstatus == "_encstr_9819045FD029" )
    {
        var_1.switchstatus = "_encstr_9707035F3B";
        self notify( "_encstr_9E7410706758792DBAA2C708A9877BDF5285" );
    }
    else
        var_1.switchstatus = "_encstr_9819045FD029";
}

manageswitchhintlight( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        if ( var_0.switchstatus == "_encstr_9707035F3B" )
        {
            self.hintlight setlightintensity( 0 );
            self.hintlightmodel setmodel( self.hintlightmodel.modelname );
        }
        else
        {
            self.hintlight setlightintensity( self.hintlightcolor );
            self.hintlightmodel setmodel( self.hintlightmodel.modelname + "_encstr_9E1A0461B765" );
        }

        waitframe();
    }
}

getlightswitchstatus( var_0 )
{
    foreach ( var_2 in var_0 )
    {
        if ( isdefined( var_2.switchstatus ) && var_2.switchstatus == "_encstr_9707035F3B" )
            return "_encstr_9707035F3B";
    }

    return "_encstr_89B0075BB73A4B7BCD";
}

onoffmodelswap( var_0, var_1 )
{
    foreach ( var_3 in var_0 )
    {
        if ( var_1 == "_encstr_9707035F3B" )
        {
            var_3 setmodel( var_3.modelname + "_encstr_9E1A0461B765" );
            continue;
        }

        var_3 setmodel( var_3.modelname );

        if ( isdefined( var_3.flare ) )
            var_3.flare delete();
    }
}

#using_animtree("_encstr_A40101");

lightswitchinteraction( var_0, var_1 )
{
    var_2 = scripts\engine\utility::ter_op( var_1.switchstatus == "_encstr_9707035F3B", "_encstr_8BF0090737992F105FA729", "_encstr_B9010C2D738EB239B0D88EAFDBCD" );
    var_3 = scripts\engine\utility::ter_op( var_1.switchstatus == "_encstr_9707035F3B", "_encstr_A16A0A8D5AEC34E8CDD77B73", "_encstr_BCD50BD161DF40C53701ED29BA" );
    level thread scripts\mp\battlechatter_mp::trysaylocalsound( var_0, var_3 );
    self.animname = "_encstr_BDC507523443D3FB90";
    self useanimtree( #animtree );
    self.scenenode thread scripts\common\anim::anim_single_solo( self, var_2 );
    var_4 = getanimlength( level.scr_anim["_encstr_9BB90CA9537FDCF3A3E043ABA668"][var_2] );
    wait( var_4 );
    setdvar( "_encstr_B66D0B72D413A75A39A6499AB4", 0 );
    self notify( "_encstr_B2901508FB3491DD22F61DABCDEABF99876F48D83FEC29" );
    return 1;
}

watchplayerdeath( var_0 )
{
    self endon( "_encstr_B2901508FB3491DD22F61DABCDEABF99876F48D83FEC29" );
    self.cancelinteraction = 0;

    for (;;)
    {
        if ( !isdefined( var_0 ) || !scripts\mp\utility\player::isreallyalive( var_0 ) )
        {
            self.cancelinteraction = 1;
            break;
        }

        waitframe();
    }
}

#using_animtree("_encstr_A40101");

create_player_rig( var_0, var_1, var_2 )
{
    if ( !isdefined( var_0 ) || isdefined( var_0.player_rig ) )
        return;

    var_0.animname = var_1;

    if ( !isdefined( var_2 ) )
        var_2 = "_encstr_9BC813A0B775E3D91265C55631FA13ABDDD7D0309A";

    var_0.player_rig = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0.origin );
    var_0.player_rig setmodel( var_2 );
    var_0.player_rig hide();
    var_0.player_rig.animname = var_1;
    var_0.player_rig useanimtree( #animtree );
    var_0 playerlinktodelta( var_0.player_rig, "_encstr_BA010BA012DFB703A379A39542", 1, 0, 0, 0, 0, 0, 0 );
    var_0 watch_remove_rig();
    remove_player_rig( var_0 );
}

remove_player_rig( var_0 )
{
    if ( !isdefined( var_0 ) || !isdefined( var_0.player_rig ) )
        return;

    var_0 unlink();
    var_1 = var_0 getdroptofloorposition( var_0.origin );

    if ( isdefined( var_1 ) )
        var_0 setorigin( var_1 );
    else
        var_0 setorigin( var_0.origin + ( 0, 0, 100 ) );

    var_0.player_rig delete();
    var_0.player_rig = undefined;
}

watch_remove_rig( var_0 )
{
    scripts\engine\utility::_id_143A5( "_encstr_BE840B5637BAB7AB0527C04BDF", "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
}
