// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

getbandagehealfractionbr()
{
    return 0.2;
}

getbandagehealtimebr()
{
    return 5;
}

getfirstaidhealtimebr()
{
    return 5;
}

getbandagetime( var_0 )
{
    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
    {
        var_1 = 1;

        if ( isdefined( self.br_armorlevel ) && self.br_armorlevel == 3 )
            var_1 = 0.75;

        if ( var_0 == "_encstr_98B10F423BADBF02D9ED515689408FF7D6" )
            return 5 * var_1;

        return 5 * var_1;
    }

    return 5;
}

usebandage( var_0, var_1 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( self.health == self.maxhealth )
    {
        self iprintlnbold( "_encstr_9BB81533506D5A79C07047AD2D68CA4203507DCBADE389" );
        return;
    }

    var_2 = "_encstr_871B0BC56165D8476FBA0E70D3";

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
        var_2 = "_encstr_B67D1088CFF235673FFD1EB2486EE70B4A49";

    self disableweaponswitch();
    self allowfire( 0 );
    self giveandfireoffhand( var_2 );
    wait 0.25;
    self.bandageactive = 1;
    self.healthregendisabled = 0;
    bandageheal( var_0 );
    wait 0.25;

    if ( self hasweapon( var_2 ) )
        scripts\cp_mp\utility\inventory_utility::getridofweapon( var_2 );

    self allowfire( 1 );
    self enableweaponswitch();
    var_1--;
    scripts\mp\equipment::setequipmentslotammo( "_encstr_A1B507EB87CA015BB8", var_1 );
    self.bandageactive = 0;
    self.healthregendisabled = 1;
}

bandageheal( var_0 )
{
    self endon( "_encstr_AAA809D88257F9319FAE71" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    thread _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::watchhealend();
    thread scripts\mp\healthoverlay::healhregenthink( var_0 );
    wait( getbandagetime( var_0 ) );
}

usequickslothealitem( var_0, var_1 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( istrue( self.usingascender ) )
        return;

    if ( istrue( self.inlaststand ) )
    {
        scripts\mp\hud_message::showerrormessage( "_encstr_B46C2070AF309BFE2911939C53A9F78FDB257978D6655FA1992BE78263B14C63F5FD" );
        return;
    }

    if ( var_0 == "_encstr_BC6E11CBC753B3884F4E5388F54AC0794ABBB3" )
        scripts\mp\equipment\armor_plate::demo_update_hint_logic( var_0, var_1 );

    if ( scripts\mp\equipment::getequipmentslotammo( "_encstr_A1B507EB87CA015BB8" ) == 0 )
    {
        var_2 = -1;
        var_3 = 0;

        foreach ( var_6, var_5 in self.br_inventory_slots )
        {
            if ( isdefined( var_5.scriptablename ) )
            {
                if ( var_5.scriptablename == level.br_pickups.br_equipnametoscriptable[var_0] )
                {
                    scripts\mp\equipment::setequipmentslotammo( "_encstr_A1B507EB87CA015BB8", var_5.count );
                    _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::removeitemfrominventory( var_6 );
                    var_3 = 1;
                    break;
                }
                else if ( var_5.itemtype == "_encstr_A1B507EB87CA015BB8" )
                    var_2 = var_6;
            }
        }

        if ( !var_3 && var_2 >= 0 )
        {
            scripts\mp\equipment::giveequipment( level.br_pickups.br_equipname[self.br_inventory_slots[var_2].scriptablename], "_encstr_A1B507EB87CA015BB8" );
            scripts\mp\equipment::setequipmentslotammo( "_encstr_A1B507EB87CA015BB8", self.br_inventory_slots[var_2].count );
            self.br_inventory_slots[var_2] = undefined;
        }
        else
            scripts\mp\equipment::takeequipment( "_encstr_A1B507EB87CA015BB8" );
    }
}
