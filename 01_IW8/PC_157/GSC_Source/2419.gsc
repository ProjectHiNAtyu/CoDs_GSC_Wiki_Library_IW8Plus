// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

setselfusable( var_0 )
{
    self makeusable();

    foreach ( var_2 in level.players )
    {
        if ( var_2 != var_0 )
        {
            self disableplayeruse( var_2 );
            continue;
        }

        self enableplayeruse( var_2 );
    }
}

setallunusable()
{
    foreach ( var_1 in level.players )
        self disableplayeruse( var_1 );
}

maketeamusable( var_0 )
{
    self makeusable();
    thread _updateteamusable( var_0 );
}

_updateteamusable( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        foreach ( var_2 in level.players )
        {
            if ( var_2.team == var_0 )
            {
                self enableplayeruse( var_2 );
                continue;
            }

            self disableplayeruse( var_2 );
        }

        level waittill( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
    }
}

makeenemyusable( var_0, var_1 )
{
    self makeusable();
    thread _updateenemyusable( var_0, var_1 );
}

_updateenemyusable( var_0, var_1 )
{
    self endon( "_encstr_A3750609A5E61883" );
    var_2 = var_0.team;

    for (;;)
    {
        if ( level.teambased )
        {
            foreach ( var_4 in level.players )
            {
                if ( istrue( var_1 ) )
                {
                    if ( var_4.team != var_2 || var_4 == var_0 )
                        self enableplayeruse( var_4 );
                    else
                        self disableplayeruse( var_4 );

                    continue;
                }

                if ( var_4.team != var_2 )
                {
                    self enableplayeruse( var_4 );
                    continue;
                }

                self disableplayeruse( var_4 );
            }
        }
        else
        {
            foreach ( var_4 in level.players )
            {
                if ( istrue( var_1 ) )
                {
                    self enableplayeruse( var_4 );
                    continue;
                }

                if ( var_4 != var_0 )
                {
                    self enableplayeruse( var_4 );
                    continue;
                }

                self disableplayeruse( var_4 );
            }
        }

        level waittill( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
    }
}

notusableforjoiningplayers( var_0 )
{
    self notify( "_encstr_A92D18CDF647AE372C898D2B4DBD2DE696B93B0E8DB0F2CA399B" );
    self endon( "_encstr_A3750609A5E61883" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A92D18CDF647AE372C898D2B4DBD2DE696B93B0E8DB0F2CA399B" );
    self endon( "_encstr_BAAF16C56BF0F7A78BB3023ABB6B33AFA9CD554383407DEF" );

    for (;;)
    {
        level waittill( "_encstr_9E7F0F83E0068BA8D3374EA2490F65E339", var_1 );

        if ( isdefined( var_1 ) && var_1 != var_0 )
            self disableplayeruse( var_1 );
    }
}

notusableafterownerchange( var_0, var_1 )
{
    self notify( "_encstr_AA551A06B7C833BFC73142DAB9AC7BEF500F979ECB80FE9BFFA80AC2" );
    self endon( "_encstr_A3750609A5E61883" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AA551A06B7C833BFC73142DAB9AC7BEF500F979ECB80FE9BFFA80AC2" );
    self endon( "_encstr_BAAF16C56BF0F7A78BB3023ABB6B33AFA9CD554383407DEF" );

    for (;;)
    {
        var_1 waittill( "_encstr_89420DD04B8385A0FE40E3C5775FD8" );
        self disableplayeruse( var_0 );
    }
}
