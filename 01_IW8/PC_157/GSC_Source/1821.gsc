// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.bounty_index = [];
    level._effect["_encstr_8A4D16D933E1BEADBDD7AD7BDC2BBCBEC658DC34AFAC0F1C"] = loadfx( "_encstr_B41F2F13F6835F23135F5F97C357471FE11BCB608E29A1EE85AF4B57605DB1F36A2A28E8591A30D088976F78FB38FE7043" );

    if ( 1 )
    {
        thread onplayerconnect();
        scripts\mp\utility\disconnect_event_aggregator::registerondisconnecteventcallback( ::onplayerdisconnect );
        scripts\mp\utility\join_team_aggregator::registeronplayerjointeamcallback( ::onplayerjoinedteam );
    }
}

onplayerconnect()
{
    for (;;)
    {
        level waittill( "_encstr_87940A7F075A88E8ABD37951", var_0 );
        var_0 bountyinit();
    }
}

bountyinit()
{
    if ( !isdefined( self.bountypoints ) )
    {
        playerregisterbountyindex();
        playerresetbountypoints();
        playerresetbountystreak();
    }
}

onplayerdisconnect( var_0 )
{
    if ( isdefined( var_0.bounty_index ) )
        level.bounty_index[var_0.bounty_index] = undefined;
}

onplayerjoinedspectators( var_0 )
{
    if ( 1 )
    {
        if ( isdefined( var_0.bounty_index ) )
        {
            var_0 playerresetbountypoints();
            var_0 playerresetbountystreak();
        }
    }
}

onplayerjoinedteam( var_0 )
{
    if ( 1 )
    {
        if ( isdefined( var_0.bounty_index ) )
        {
            var_0 playerresetbountypoints();
            var_0 playerresetbountystreak();
        }
    }
}

playerregisterbountyindex()
{
    for ( var_0 = 0; isdefined( level.bounty_index[var_0] ); var_0++ )
    {

    }

    level.bounty_index[var_0] = self;
    self.bounty_index = var_0;
}

playergetbountypoints()
{
    return self.bountypoints;
}

playersetbountypoints( var_0 )
{
    self.bountypoints = var_0;
    level.bounty_index[self.bounty_index] setbountycount( self.bountypoints );
}

playerresetbountypoints( var_0 )
{
    if ( !1 )
        return;

    if ( isdefined( var_0 ) )
        wait( var_0 );

    if ( isdefined( self ) )
        playersetbountypoints( 0 );
}

playerresetbountystreak( var_0 )
{
    if ( !1 )
        return;

    if ( isdefined( var_0 ) )
        wait( var_0 );

    if ( isdefined( self ) )
        self.bountystreak = 0;
}

bountyincreasestreak( var_0 )
{
    if ( !1 )
        return;

    if ( !isdefined( var_0 ) )
        var_0 = 1;

    self.bountystreak = self.bountystreak + var_0;
    bountyconvert();
}

bountyconvert()
{
    if ( !1 )
        return;

    var_0 = playergetbountypoints();
    var_1 = int( floor( self.bountystreak / 3 ) );

    if ( var_1 > var_0 && var_1 <= 5 )
        playersetbountypoints( var_1 );
}

bountycollect( var_0, var_1 )
{
    if ( !1 )
        return;

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_9CB51183EBE5F36721780BBBB13AE033039B42" ) )
    {
        if ( var_0 > 0 )
        {
            for ( var_2 = 0; var_2 < var_0; var_2++ )
            {
                thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_954C07E80AA3DD8BEF" );
                bountyincreasestreak();
                playfx( scripts\engine\utility::getfx( "_encstr_8A4D16D933E1BEADBDD7AD7BDC2BBCBEC658DC34AFAC0F1C" ), var_1 + ( 0, 0, 45 ) );
            }

            thread scripts\mp\hud_util::teamplayercardsplash( "_encstr_804E19EB370833A593D0994220BBDDEB02B0736FD9505F6E49A032", self );
        }
    }
}
