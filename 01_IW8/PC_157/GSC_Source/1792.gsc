// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

mortar_launcher_init()
{
    load_fx();
    var_0 = getentarray( "_encstr_AAEA0EC11BB09795397D5BEDC98E85E4", "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( isdefined( var_0 ) && var_0.size > 0 )
    {
        setupmortarmodelanimscripts();
        setupmortarplayeranimscripts();
    }
    else
        return;

    foreach ( var_2 in var_0 )
    {
        if ( istrue( level.ismp ) )
        {
            if ( !isdefined( scripts\cp_mp\utility\game_utility::getlocaleid() ) || isdefined( scripts\cp_mp\utility\game_utility::getlocaleid() ) && isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy != level.localeid )
            {
                var_2 delete();
                continue;
            }
        }

        var_2 thread mortar_test( var_2 );
    }
}

load_fx()
{
    level._effect["_encstr_B358110B5899B1FBD0E7222D90B8AF43CD1872"] = loadfx( "_encstr_A44C2AEC330F794BDDC1BC36599D56B1CBACB53158E6E6BCE5EC9987D7D6F69C470BE4F5669627AC5C9DCCE1" );
    level._effect["_encstr_9BBE11FD8B93B8704FBAA319A217F0667ADF51"] = loadfx( "_encstr_81DF2B2E7D038FDFF3D26753750B21712841090F048B5F237EC3D1E3D98DD55E40317B2133139FAB7DC2108A83" );
    level._effect["_encstr_B93C154033B1875385EBBBD8AB6948C050FB75CB2DAA55"] = loadfx( "_encstr_95D1370357A8AA63AB02B71F6F123762776F4A5B7D17F2294203093BDBDE7C50F84910306254485E792729E19BA2C6E0B79DDE29CDE6481CE3" );
}

#using_animtree("_encstr_93DC0DCD1B272D3847AF5BED23B2C6");

#using_animtree("_encstr_A40101");

setupmortarplayeranimscripts()
{
    level.scr_animtree["_encstr_AAEA0EC11BB09795397D5BEDC98E85E4"] = #animtree;
    level.scr_anim["_encstr_AAEA0EC11BB09795397D5BEDC98E85E4"]["_encstr_AD4D13D9546EF89DE3D1B0F82BD3477809B61355C5"] = %_encstr_8A351556D698EB3BB6F56BB74E472C4ED783B185972BC9;
    level.scr_animname["_encstr_AAEA0EC11BB09795397D5BEDC98E85E4"]["_encstr_AD4D13D9546EF89DE3D1B0F82BD3477809B61355C5"] = "_encstr_8A351556D698EB3BB6F56BB74E472C4ED783B185972BC9";
    level.scr_eventanim["_encstr_AAEA0EC11BB09795397D5BEDC98E85E4"]["_encstr_AD4D13D9546EF89DE3D1B0F82BD3477809B61355C5"] = "_encstr_AD4D13D9546EF89DE3D1B0F82BD3477809B61355C5";
    level.scr_viewmodelanim["_encstr_AAEA0EC11BB09795397D5BEDC98E85E4"]["_encstr_AD4D13D9546EF89DE3D1B0F82BD3477809B61355C5"] = "_encstr_8A351556D698EB3BB6F56BB74E472C4ED783B185972BC9";
}

#using_animtree("_encstr_A40101");

#using_animtree("_encstr_A40101");

setupmortarmodelanimscripts()
{
    level.scr_animtree["_encstr_95DF07D278E5E37FBB"] = #animtree;
    level.scr_model["_encstr_95DF07D278E5E37FBB"] = "_encstr_B8DF0F7DD09ADE7150B5D985B86E7516F3";
    level.scr_anim["_encstr_95DF07D278E5E37FBB"]["_encstr_AD4D13D9546EF89DE3D1B0F82BD3477809B61355C5"] = %_encstr_B6FD155F8AA268FB41B973FD103312628151976E4CC1BE;
    level.scr_animname["_encstr_95DF07D278E5E37FBB"]["_encstr_AD4D13D9546EF89DE3D1B0F82BD3477809B61355C5"] = "_encstr_B6FD155F8AA268FB41B973FD103312628151976E4CC1BE";
    level.scr_viewmodelanim["_encstr_95DF07D278E5E37FBB"]["_encstr_AD4D13D9546EF89DE3D1B0F82BD3477809B61355C5"] = "_encstr_B6FD155F8AA268FB41B973FD103312628151976E4CC1BE";
}

#using_animtree("_encstr_A40101");

create_player_rig( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_0 ) )
        return;

    var_0.animname = var_1;
    var_0 predictstreampos( var_0.origin );
    var_4 = spawn( "_encstr_BEFE0C06A30BE829D321D0703A2A", var_0.origin, 0, 0, var_0 );
    var_4.player = var_0;
    var_0.player_rig = var_4;
    var_0.player_rig hide();
    var_0.player_rig.animname = var_1;
    var_0.player_rig useanimtree( #animtree );
}

put_player_into_rig( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_6 scripts\common\utility::allow_ads( 0 );
    var_6 scripts\common\utility::allow_prone( 0 );
    var_6 scripts\common\utility::allow_crouch( 0 );
    var_6 scripts\common\utility::allow_weapon_switch( 0 );

    if ( var_1 > 0.0 )
    {
        var_6 playerlinktoblend( var_0, "_encstr_BA010BA012DFB703A379A39542", var_1, 0, 0 );
        wait( var_1 );
    }

    var_6 playerlinktodelta( var_0, "_encstr_BA010BA012DFB703A379A39542", 1, var_2, var_3, var_4, var_5, 1 );
}

take_player_out_of_rig( var_0 )
{
    var_0 scripts\common\utility::allow_weapon( 1, "_encstr_95DF07D278E5E37FBB" );
    var_0 scripts\common\utility::allow_ads( 1 );
    var_0 scripts\common\utility::allow_prone( 1 );
    var_0 scripts\common\utility::allow_crouch( 1 );
    var_0 scripts\common\utility::allow_weapon_switch( 1 );
    var_0 unlink();
    var_0.player_rig delete();
}

mortar_launch_player_effect( var_0, var_1 )
{
    if ( !istrue( level.ismp ) )
        var_1 playsound( "_encstr_9E161177568538BE6BDB933A2C93D7C6BDC291" );

    wait 2.2;
    var_0 playrumbleonentity( "_encstr_B63B0E230BD6C2B395F5C4578D362B8E" );
    earthquake( 0.24, 1, var_1.origin, 256 );
    var_1 hidepart( var_1.shell, "_encstr_B8DF0F7DD09ADE7150B5D985B86E7516F3" );
}

movemortar( var_0, var_1, var_2, var_3, var_4 )
{
    setdvarifuninitialized( "_encstr_946F1347C30261212FAB0B515317ECC01E4EFBF171", "_encstr_8F07037AFE" );

    if ( getdvarint( "_encstr_946F1347C30261212FAB0B515317ECC01E4EFBF171" ) )
    {
        var_0.origin = var_1;
        var_5 = getdvarint( "_encstr_889A08BDD77F8F49631A" );
        var_6 = distance( var_1, var_2 );
        var_7 = var_2 - var_1;
        var_8 = 0.5 * var_5 * squared( var_3 ) * -1;
        var_9 = ( var_7[0] / var_3, var_7[1] / var_3, ( var_7[2] - var_8 ) / var_3 );
        var_0 movegravity( var_9, var_3 );
        var_10 = gettime() + var_3 * 1000;

        while ( gettime() < var_10 )
        {
            var_0 anglemortar();
            waitframe();
        }
    }
    else
    {
        var_11 = 1200;

        if ( isdefined( var_4 ) )
            var_11 = var_4;

        var_12 = 1 / ( var_3 / 0.05 );
        var_13 = 0;

        while ( var_13 < 1 )
        {
            var_0.origin = scripts\engine\math::get_point_on_parabola( var_1, var_2, var_11, var_13 );
            var_0 anglemortar();
            var_13 = var_13 + var_12;
            wait 0.05;
        }

        var_0.origin = var_2;
    }
}

anglemortar()
{
    if ( !isdefined( self.prevorigin ) )
    {
        self.prevorigin = self.origin;
        self.roll = 0;
        return;
    }

    self.angles = vectortoangles( self.origin - self.prevorigin );
    self.prevorigin = self.origin;
}

#using_animtree("_encstr_A40101");

mortar_test( var_0 )
{
    if ( !istrue( level.ismp ) )
        var_0.interact = mortarlauncher_createhintobject( var_0.origin + ( 0, 0, 40 ), "_encstr_98110C0B790BBF87AE11E9F1A8F5", undefined, &"_encstr_B13622102F883BFB4187141FCDA1B57B5A25A8E994E4F7227285771FE5798FAFF45DF070", undefined, undefined, "_encstr_B7180526C81F4B", 50, 160, 32, 120 );
    else
        var_0.interact = mortarlauncher_createhintobject( var_0.origin + ( 0, 0, 40 ), "_encstr_98110C0B790BBF87AE11E9F1A8F5", undefined, &"_encstr_B69E1AA37BC99B310F1EFCF5B13F09A1011E1B67C71151717223652F", undefined, undefined, "_encstr_B7180526C81F4B", 256, 160, 128, 160 );

    var_0.flash = "_encstr_9D810C9A7DDC43B0331DD71DDEE0";
    var_0.shell = "_encstr_AA030FA6BE6BBD273A58C9BEDCA156B18D";
    var_0 hidepart( var_0.shell, "_encstr_B8DF0F7DD09ADE7150B5D985B86E7516F3" );
    var_0.animname = "_encstr_95DF07D278E5E37FBB";
    var_0 useanimtree( #animtree );
    var_0.og_angles = var_0.angles;

    for (;;)
    {
        var_0.interact makeusable();
        var_0.interact waittill( "_encstr_8B5C081B58E0B7A213E6", var_1 );
        var_1 scripts\common\utility::allow_usability( 0 );
        var_0.interact makeunusable();
        player_launch_mortar( var_1, var_0 );
        wait 5;
        var_0 rotateto( var_0.og_angles, 0.1 );
        wait 1;
    }
}

player_launch_mortar( var_0, var_1 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    var_0 setorigin( var_1.origin );
    var_0 setplayerangles( var_1.angles );
    var_0 create_player_rig( var_0, "_encstr_AAEA0EC11BB09795397D5BEDC98E85E4" );
    var_0.player_rig.angles = var_1.angles;
    put_player_into_rig( var_0.player_rig, 0.5, 0, 0, 0, 0, var_0 );
    var_0 scripts\common\utility::allow_weapon( 0, "_encstr_95DF07D278E5E37FBB" );
    var_2 = var_0 mortar_targetting( var_1 );

    if ( isdefined( var_2 ) )
    {
        var_0 playerlinktodelta( var_0.player_rig, "_encstr_BA010BA012DFB703A379A39542", 1, 0, 0, 0, 0, 1 );
        var_3 = vectortoangles( var_2 - var_1.origin );
        var_1.angles = ( 0, var_3[1], 0 );
        var_1 showpart( var_1.shell, "_encstr_B8DF0F7DD09ADE7150B5D985B86E7516F3" );
        var_0.player_rig show();
        var_1 scripts\engine\utility::delaythread( 2.25, ::launch_mortar, var_2, var_0 );
        thread mortar_launch_player_effect( var_0, var_1 );
        var_1 thread scripts\common\anim::anim_single( [ var_1, var_0.player_rig ], "_encstr_AD4D13D9546EF89DE3D1B0F82BD3477809B61355C5" );
        var_0.player_rig waittillmatch( "_encstr_B86B0C9B96739DB1AC401673B4B6", "_encstr_B41804CA7391" );
        var_1 notify( "_encstr_98F40D6082FABB4955E6CED8C28DC1" );
    }

    var_0 scripts\common\utility::allow_usability( 1 );
    var_1 hidepart( var_1.shell, "_encstr_B8DF0F7DD09ADE7150B5D985B86E7516F3" );
    take_player_out_of_rig( var_0 );

    if ( isdefined( var_1.previs_model ) )
        var_1.previs_model delete();
}

mortar_targetting( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    thread mortar_ondeathcleanup( var_0 );
    var_1 = undefined;
    self playerlinktodelta( self.player_rig, "_encstr_BA010BA012DFB703A379A39542", 0, 45, 45, 60, 60, 1 );

    if ( isdefined( var_0.previs_model ) )
        var_0.previs_model setscriptablepartstate( "_encstr_A9600763091EB77790", "_encstr_B30B07E216CBFFC4C2" );

    for (;;)
    {
        if ( self stancebuttonpressed() || self attackbuttonpressed() )
        {
            if ( self attackbuttonpressed() )
            {
                while ( self attackbuttonpressed() )
                    wait 0.05;

                return var_1;
            }

            while ( self stancebuttonpressed() )
                wait 0.05;

            return undefined;
        }

        var_2 = scripts\engine\trace::ray_trace( self geteye() + ( 0, 0, 128 ), self geteye() + anglestoforward( self getplayerangles() ) * 16000 );
        var_1 = getgroundposition( var_2["_encstr_B7260923C89E8F3378E72E"], 8, 0, 1500 );
        var_3 = vectortoangles( var_1 - var_0.origin );
        var_0.angles = ( 0, var_3[1], 0 );

        if ( !isdefined( var_0.previs_model ) )
        {
            var_0.previs_model = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_1 );
            var_0.previs_model setmodel( "_encstr_8B520EB182C27367D8093B233397EFDB" );
            var_0.previs_model.angles = ( -90, 0, 0 );
            var_0.previs_model setscriptablepartstate( "_encstr_A9600763091EB77790", "_encstr_B30B07E216CBFFC4C2" );

            foreach ( var_5 in level.players )
                var_0.previs_model hidefromplayer( var_5 );

            var_0.previs_model showtoplayer( self );
        }

        var_0.previs_model moveto( var_1 + ( 0, 0, 10 ), 0.1 );
        wait 0.05;
    }
}

mortar_ondeathcleanup( var_0 )
{
    var_0 endon( "_encstr_98F40D6082FABB4955E6CED8C28DC1" );
    self waittill( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( isdefined( var_0.previs_model ) )
        var_0.previs_model delete();
}

launch_mortar( var_0, var_1 )
{
    var_2 = self gettagorigin( "_encstr_9D810C9A7DDC43B0331DD71DDEE0" );
    var_3 = getgroundposition( self.origin + anglestoforward( self.angles ) * 8000, 8, 1000 );

    if ( isdefined( var_0 ) )
        var_3 = var_0;

    var_4 = scripts\engine\utility::spawn_tag_origin( self gettagorigin( "_encstr_9D810C9A7DDC43B0331DD71DDEE0" ), ( 0, 0, 0 ) );
    var_4 setmodel( "_encstr_94A028AD5FE890FB83C9E01BB838B2AE4301BA419B3B77C07DDF37F1DFDA40B062CF2127C82057891D28" );
    playfx( scripts\engine\utility::getfx( "_encstr_B358110B5899B1FBD0E7222D90B8AF43CD1872" ), self.origin + ( 0, 0, 3 ) + anglestoforward( self.angles ) * 8, anglestoforward( self.angles ) );

    if ( !istrue( level.ismp ) )
        playsoundatpos( self gettagorigin( "_encstr_9D810C9A7DDC43B0331DD71DDEE0" ), "_encstr_8B8D193F12FFAA7757281A58AF73C74FE1320A9DD7C1D0ED06F3F0" );
    else
        playsoundatpos( self gettagorigin( "_encstr_9D810C9A7DDC43B0331DD71DDEE0" ), "_encstr_8B8D193F12FFAA7757281A58AF73C74FE1320A9DD7C1D0ED06F3F0" );

    var_4 show();
    var_5 = 5;
    thread movemortar( var_4, var_2, var_3, var_5, 1200 );
    wait 0.1;
    playfxontag( scripts\engine\utility::getfx( "_encstr_9BBE11FD8B93B8704FBAA319A217F0667ADF51" ), var_4, "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );

    if ( !istrue( level.ismp ) )
        var_4 playloopsound( "_encstr_9CF91377FDCE10203F7233FB7AABF87825499FC970" );
    else
        var_4 playloopsound( "_encstr_9CF91377FDCE10203F7233FB7AABF87825499FC970" );

    wait( var_5 - 1.7 );

    if ( !istrue( level.ismp ) )
        var_4 playsound( "_encstr_8A6815BB95851CAFB5BD4E3A2CE4BEA5736CDBD6B4CDCE" );

    wait 1.7;
    stopfxontag( scripts\engine\utility::getfx( "_encstr_9BBE11FD8B93B8704FBAA319A217F0667ADF51" ), var_4, "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_4 stoploopsound();
    playfx( scripts\engine\utility::getfx( "_encstr_B93C154033B1875385EBBBD8AB6948C050FB75CB2DAA55" ), var_3 );
    earthquake( 0.25, 3, var_3, 2048 );

    if ( !istrue( level.ismp ) )
        playrumbleonposition( "_encstr_8801124327F6970CCF8803AA605742076886C4FD", var_3 );
    else
    {
        playrumbleonposition( "_encstr_B6D30F3B39CACDC24659EBE4EAAD263695", var_3 );
        playsoundatpos( var_3, "_encstr_80FA17B73D0ED0E0FFB273BB3AEBB820E080396FB43290B0BF" );
    }

    magicgrenademanual( "_encstr_B1EF0A6B0F938DB0B21160DB", var_3 + ( 0, 0, 5 ), ( 0, 0, 0 ), 0.05 );

    if ( !istrue( level.ismp ) )
        radiusdamage( var_3 + ( 0, 0, 5 ), 512, 250, 250, var_1, "_encstr_A45C0E4B9FDF3165A3B93C4491BFA4A9", "_encstr_BCAE08D8D0F5B607F538" );
    else
        radiusdamage( var_3 + ( 0, 0, 5 ), 512, 1000, 250, var_1, "_encstr_A45C0E4B9FDF3165A3B93C4491BFA4A9", "_encstr_BCAE08D8D0F5B607F538" );

    var_4 delete();
}

kill_mortar_target()
{
    self.previs_model setscriptablepartstate( "_encstr_A9600763091EB77790", "_encstr_9BA4080D39CFFB5AB7C1" );
}

mortarlauncher_createhintobject( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11 )
{
    var_12 = undefined;

    if ( isdefined( var_11 ) )
        var_12 = var_11;
    else
        var_12 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0 );

    var_12 makeusable();

    if ( isdefined( var_11 ) && isdefined( var_0 ) )
        var_12 sethinttag( var_0 );

    if ( isdefined( var_1 ) )
        var_12 setcursorhint( var_1 );
    else
        var_12 setcursorhint( "_encstr_939A0CEC70DBF521459F5B47F73D" );

    if ( isdefined( var_2 ) )
        var_12 sethinticon( var_2 );

    if ( isdefined( var_3 ) )
        var_12 sethintstring( var_3 );

    if ( isdefined( var_4 ) )
        var_12 setusepriority( var_4 );
    else
        var_12 setusepriority( 0 );

    if ( isdefined( var_5 ) )
        var_12 setuseholdduration( var_5 );
    else
        var_12 setuseholdduration( "_encstr_93370F8CAE27588ED27BB9FADC0DDB4EA3" );

    if ( isdefined( var_6 ) )
        var_12 sethintonobstruction( var_6 );
    else
        var_12 sethintonobstruction( "_encstr_BECC05FC5321BA" );

    if ( isdefined( var_7 ) )
        var_12 sethintdisplayrange( var_7 );
    else
        var_12 sethintdisplayrange( 200 );

    if ( isdefined( var_8 ) )
        var_12 sethintdisplayfov( var_8 );
    else
        var_12 sethintdisplayfov( 160 );

    if ( isdefined( var_9 ) )
        var_12 setuserange( var_9 );
    else
        var_12 setuserange( 50 );

    if ( isdefined( var_10 ) )
        var_12 setusefov( var_10 );
    else
        var_12 setusefov( 120 );

    if ( !isdefined( var_11 ) )
        return var_12;
}
