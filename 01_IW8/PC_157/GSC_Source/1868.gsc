// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    scripts\mp\playeractions::registeractionset( "_encstr_B1510A89E11733EF7322E2DA", [ "_encstr_ADE40AEADCC2312D1B2DD12F", "_encstr_A80F0EAFBBDF6B0710B68A93689853A2", "_encstr_BEF407B95DC1B227E6", "_encstr_8B0508CE95DC1DEAC92B", "_encstr_B6190C6DB4C68DB9A327CA0B6DDC", "_encstr_80071802C03DF46F28ED87A0FE9007FE7D40891B708B2A9FC04E", "_encstr_B6DF1A40EE158459DB3F6F6655E3F0530BB750A3D803BD59A010D6DF", "_encstr_A9AF10E0F285CA19B35C28B0BD4FC89D8822" ] );
    scripts\mp\playeractions::registeractionset( "_encstr_A21015FC3FE35B5A6970922A998F14F3B89E6C7A45C97F", [ "_encstr_ADE40AEADCC2312D1B2DD12F", "_encstr_A80F0EAFBBDF6B0710B68A93689853A2", "_encstr_8B0508CE95DC1DEAC92B", "_encstr_B6190C6DB4C68DB9A327CA0B6DDC", "_encstr_BEF407B95DC1B227E6", "_encstr_807805775B15A2", "_encstr_A8C706AFD3214275", "_encstr_80071802C03DF46F28ED87A0FE9007FE7D40891B708B2A9FC04E", "_encstr_B6DF1A40EE158459DB3F6F6655E3F0530BB750A3D803BD59A010D6DF" ] );
    scripts\mp\playeractions::registeractionset( "_encstr_8C6311D8C2CD3AE6470BCD46D7C9CA675ACE59", [ "_encstr_BD840F4B0BA8CFC87975FFFBD910C79DCB", "_encstr_ADE40AEADCC2312D1B2DD12F", "_encstr_A64D0743C1D1370153", "_encstr_807805775B15A2", "_encstr_A9AF10E0F285CA19B35C28B0BD4FC89D8822", "_encstr_80071802C03DF46F28ED87A0FE9007FE7D40891B708B2A9FC04E", "_encstr_B6DF1A40EE158459DB3F6F6655E3F0530BB750A3D803BD59A010D6DF", "_encstr_B6190C6DB4C68DB9A327CA0B6DDC", "_encstr_BEF407B95DC1B227E6", "_encstr_8B0508CE95DC1DEAC92B", "_encstr_B44E0B1B6B1A6858B7745B501A", "_encstr_9F100737E04EA5738E", "_encstr_A8C706AFD3214275" ] );
    level.laststandreviveents = [];

    if ( isusingmatchrulesdata() )
    {

    }
    else
    {
        scripts\mp\utility\game::registerlaststandhealthdvar( 50 );
        scripts\mp\utility\game::registerlaststandrevivehealthdvar( 30 );
        scripts\mp\utility\game::registerlaststandtimerdvar( 10 );
        scripts\mp\utility\game::registerlaststandinvulntimerdvar( 1 );
        scripts\mp\utility\game::registerlaststandsuicidetimerdvar( 5 );
        scripts\mp\utility\game::registerlaststandrevivetimerdvar( 10 );
        scripts\mp\utility\game::registerlaststandweapondvar( "_encstr_AF9310234B172F41E14FD8E8170D5BF7FAF2" );
        scripts\mp\utility\game::registerlaststandrevivedecayscaledvar( 0 );
        scripts\mp\utility\game::registerlaststandweapondelaydvar( 0 );
    }

    level.laststandhealth = scripts\mp\utility\dvars::respawn_players_into_plane( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_89551111F10BFBA4BF786753D0F46D02F91524", "_encstr_9BD51B676F9E51D0F8B9D0DF3389044AF6A97FF3D3C8AA90E8818D6368" );
    level.laststandrevivehealth = scripts\mp\utility\dvars::respawn_players_into_plane( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_BAD7174863607F55A1EC0F05993E3B1653F3476B7F9F04B358", "_encstr_976021CD6CC9F58336B0CBCA93EBB1C2B947A947C2CD1994CA9D5A3BCA12CA2C63D10D" );

    if ( level.laststandhealth > scripts\mp\tweakables::gettweakablevalue( "_encstr_AAB0079B102F47FF38", "_encstr_9C9F0A6B2C0F34590B3647A1" ) )
        level.laststandhealth = scripts\mp\tweakables::gettweakablevalue( "_encstr_AAB0079B102F47FF38", "_encstr_9C9F0A6B2C0F34590B3647A1" );

    if ( level.laststandrevivehealth > scripts\mp\tweakables::gettweakablevalue( "_encstr_AAB0079B102F47FF38", "_encstr_9C9F0A6B2C0F34590B3647A1" ) )
        level.laststandrevivehealth = scripts\mp\tweakables::gettweakablevalue( "_encstr_AAB0079B102F47FF38", "_encstr_9C9F0A6B2C0F34590B3647A1" );

    level.laststandinvulntime = scripts\mp\utility\dvars::respawn_locations( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_822A15D78DC2CD479AD185738C52DC67EAD89BA8A5DAAC", "_encstr_BC951F4BDEC5D14BC8C9B38502C788C713635E8B53E009F9120B6890983CC8E578" );
    level.watch_for_next_sniper = scripts\mp\utility\dvars::respawn_locations( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_B18D1B29506F2FFB7119996EC18147F3838B0220D9361FF0591F9164EB", "_encstr_945025BE97BBF603401B3B1DF8A87A99DE2B6923086D5A5B7733608CFB29A29E176AC68A27F967" );
    level.laststandrevivetimer = scripts\mp\utility\dvars::respawn_locations( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_9D3C16997993632C37C0EFCB58CFF5FB7B8C9FC353235A52", "_encstr_BA1D20878F7EB1305819707F53E964EA56099F1373A8CA2A48836C83A949B962259D" );
    level.laststandsuicidetimer = scripts\mp\utility\dvars::respawn_locations( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_BC7E175F40095B6B970D66DD7DFF331911C00B3F19E08DA2ED", "_encstr_895B219E4BE3C6D12D2A88607389B1594FE43695A16B695F53B220182ADF09906F9D2E" );
    level.laststandtimer = scripts\mp\utility\dvars::respawn_locations( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_8BA610F5B1859BE8A64785CD4651A5AD95C9", "_encstr_A90C1AF0E71A8E819A0EF3F5A2C1F13163D3694057AE21311235E506" );
    level.watch_for_payload_approach_cache_1 = scripts\mp\utility\dvars::respawn_index( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_BA1011D7C616E6D14DD12C3719AE56B083ED73", "_encstr_89BB1B3B629BE0C85D21CBFB5AC970B737ABB743AA13A5393739A1F77E" );
    level.watch_for_player_death = scripts\mp\utility\dvars::respawn_locations( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_87F816567A3F0E107ADC6345F45350DFA3A288BD72A34F20", "_encstr_B3032098BBADB9034B1B73C033B08D08AB73378BD6D8916171F973558E30BD9023C8" );
    setdvarifuninitialized( "_encstr_9D5223E63639EB381BB0BCB29CFA1B166EA3A98E85E61905631BCB22C92CD98A371689B195", 0 );
    setdvarifuninitialized( "_encstr_A23126CA23325969ED81474D1EBF19EFF81377833148C29FA2FB9FB5C8F93249387E0D1F0B4D7AB7", 0.3 );
    level thread laststandmonitor();
}

laststandthink()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    onenter();
    var_0 = scripts\engine\utility::_id_143B8( "_encstr_8A8118C616CD3AEBB93A2C7332BE1A56B0C6FA37BA6CB156B9CD", "_encstr_895913DD772F8B8FBB786753D0167A42CD9BA3176D", "_encstr_87A914B1B0DC1DEB371D2C378CBE4C6395B2C8B757E8", "_encstr_A3750609A5E61883", "_encstr_8A820B4696CDB1ED3737AC1B3A", "_encstr_896F17362CDCE87DE647C2B919FADCCAD833F5C9596796D956" );

    switch ( var_0 )
    {
        case "_encstr_895913DD772F8B8FBB786753D0167A42CD9BA3176D":
            onrevive();
            break;
        case "_encstr_896F17362CDCE87DE647C2B919FADCCAD833F5C9596796D956":
            onrevive( 1 );
            break;
        case "_encstr_87A914B1B0DC1DEB371D2C378CBE4C6395B2C8B757E8":
            onbleedout();
            break;
        case "_encstr_8A8118C616CD3AEBB93A2C7332BE1A56B0C6FA37BA6CB156B9CD":
            onrevive( 0, 1 );
            break;
        case "_encstr_A3750609A5E61883":
            if ( !( ( scripts\mp\utility\game::isteamreviveenabled() || scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" ) && scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) ) )
                ondeath();

            break;
        case "_encstr_8A820B4696CDB1ED3737AC1B3A":
            ondeath();
            break;
    }

    if ( isdefined( self ) )
        self setclientomnvar( "_encstr_94FC10DD3C91B33307E340D8EB43ABDBEAE7", 0 );
}

onenter()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );
    self notify( "_encstr_8BE0118D16E68ED7DC3AB0CDC8D7CD47589C3A" );
    self setclientomnvar( "_encstr_94FC10DD3C91B33307E340D8EB43ABDBEAE7", 1 );
    level thread scripts\mp\battlechatter_mp::trysaylocalsound( self, "_encstr_B9BE12078DC25E59C9F51BC26EE8BE9B1D0BB919", undefined, 0.25 );
    var_0 = level.laststandhealth;

    if ( level.gametype == "_encstr_9507034B25" )
        thread waittill_near_goal();

    self.health = var_0;
    thread makelaststandinvuln();
    scripts\mp\utility\perk::giveperk( "_encstr_9CD01D8E2A62F72D4993B8D877627837EA14109BC79AA1EB3847B0206FBD70" );
    scripts\mp\utility\perk::giveperk( "_encstr_BC8613CD83AC8DA5161B47CBBE4CD84B3732B2CBAC" );
    self.inlaststand = 1;
    self._id_125B9 = undefined;
    self.hasshownlaststandicon = 0;

    if ( isdefined( level.playerdatafield ) && [[ level.playerdatafield ]]() )
    {
        if ( isdefined( level.playercleanupinfilondisconnect ) )
            self [[ level.playercleanupinfilondisconnect ]]( 1 );
    }

    if ( level.gametype == "_encstr_9507034B25" && !istrue( self.shouldgetnewspawnpoint ) )
    {
        if ( isdefined( level.getinfectedairdropposition ) )
            [[ level.getinfectedairdropposition ]]();
    }

    self.laststandoldweaponobj = scripts\mp\utility\inventory::getlastweapon();

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
    {
        scripts\common\utility::allow_weapon_switch_clip( 0 );

        if ( !istrue( self.gulag ) )
        {
            self.watch_for_driver_death = gettime();
            self.get_tv_station_infil_rider_start_targetname = undefined;
            _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E05( "_encstr_9E92116D80F3095F73C7BB90023B65CDEB308B" );

            if ( !istrue( level._id_133D8 ) )
            {
                var_1 = _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::rotationrefsbyseatandweapon( self.team, self.squadindex );

                foreach ( var_3 in var_1 )
                {
                    if ( !isdefined( var_3 ) )
                        continue;

                    if ( var_3 != self )
                        var_3 thread scripts\mp\hud_message::showsplash( "_encstr_8A8E112693F5D1562CDAB6C2E895EB46ED77E6", undefined, self );
                }
            }
        }
    }

    var_5 = self getheldoffhand();

    if ( !nullweapon( var_5 ) )
    {
        var_6 = scripts\mp\equipment::getequipmentreffromweapon( var_5 );

        if ( isdefined( var_6 ) && scripts\mp\equipment::hasequipment( var_6 ) )
        {
            var_7 = scripts\mp\equipment::findequipmentslot( var_6 );

            if ( var_7 == "_encstr_987F080E394BDAC2E45E" || var_7 == "_encstr_B98F0AC7D5B99F4DDBA8353B" )
                thread scripts\mp\equipment\gas_grenade::gas_takeheldoffhand();
        }
    }

    var_8 = level.watch_for_payload_approach_cache_1;

    if ( isdefined( level.laststandweaponcallback ) && getdvarint( "_encstr_827525B9C6C9BEE0B185CBB239AFCA37B0891B2B4DB2C6DEE68C75D2CD2350E6C81496B9A3F68D", 0 ) )
        var_8 = self [[ level.laststandweaponcallback ]]();

    if ( !issameweapon( var_8 ) )
        var_8 = getcompleteweaponname( var_8 );

    if ( !istrue( self.usingascender ) )
        self stopanimscriptsceneevent();

    if ( self isviewmodelanimplaying() )
        self stopviewmodelanim();

    if ( istrue( self.killstreaklaststand ) && isdefined( level.killstreak_laststand_func ) )
        self [[ level.killstreak_laststand_func ]]();
    else
    {
        if ( isdefined( level.modeonlaststandfunc ) )
            self [[ level.modeonlaststandfunc ]]();

        if ( isdefined( level.weaponfixup ) )
            self thread [[ level.weaponfixup ]]();

        if ( isdefined( level.customlaststandactionset ) )
            self.laststandactionset = level.customlaststandactionset;
        else
            self.laststandactionset = "_encstr_B1510A89E11733EF7322E2DA";

        if ( isdefined( self.vehicle ) )
            self waittill( "_encstr_9D130DCE2B0DA5D8C695FA95C3B48E" );

        scripts\mp\playeractions::allowactionset( self.laststandactionset, 0 );
        thread setup_volumes( var_8 );

        if ( isdefined( level.battle_tracks_stopbattletrackstoalloccupants ) )
            self [[ level.battle_tracks_stopbattletrackstoalloccupants ]]();
        else
            addoverheadicon();

        var_9 = level.laststandsuicidetimer;
        scripts\cp_mp\utility\shellshock_utility::_shellshock( "_encstr_A3740E19A16218187FEB8950D2F7C9F0", "_encstr_B8BE07320B5B16ECAC", var_9, 0 );
        thread revivesetup( self );
        self.fastcrouchspeedmod = getdvarfloat( "_encstr_A17A2263396E274263AB091D65718D271633F99BC1C883F2B89B0DE41B90D74F3D08B282", 0 );
        scripts\cp\vehicles\vehicle_compass_cp::_id_138D5( "_encstr_93A7110BD85AD9ACD7CDDEE87D23F6BBCDCA32" );

        if ( isdefined( self.watch_for_attack ) && self.watch_for_attack scripts\mp\utility\perk::_hasperk( "_encstr_887E2526AF02B93168501D398F3EA0D1EF50FFFFCB1D011DF660E7E1509110813AB0F1FAA2FC41" ) )
            self.watch_for_attack scripts\mp\perks\perkfunctions::regendelayreduce_onkill();

        if ( scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" )
        {
            childthread stucktime( var_9 );
            return;
        }

        if ( isdefined( self.pers["_encstr_9B3E1132C34089A2791367430B8E38CEB02968"] ) )
        {
            var_10 = "_encstr_973C197BAE8E632DB9CABE9B7B23951CE8A1AF89C938B185E559C9" + self.pers["_encstr_9B3E1132C34089A2791367430B8E38CEB02968"];
            self.watch_for_molotov_ambush_and_spawners = scripts\mp\utility\outline::outlineenableforteam( self, self.team, var_10, "_encstr_B1510A89E11733EF7322E2DA" );
        }

        childthread dodamagewhiledown();
    }
}

waittill_near_goal()
{
    if ( !istrue( self.islaststandbleedoutdmg ) && !istrue( self.littlebirdsmg ) )
    {
        self.islaststandbleedoutdmg = 1;
        self stoplocalsound( "_encstr_BAC410EA011F63AC207FACBF07703947BD9B" );
        self playlocalsound( "_encstr_876A0FE125A741F37681B2A037CD4149F5" );
        self setsoundsubmix( "_encstr_BC6A0FBF0BC943BA93805FCFF2BBD18511", 0.2, 1 );
        self enableplayerbreathsystem( 0 );
        thread scripts\mp\healthoverlay::playerbreathingpainsound();
    }
}

setup_volumes( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    while ( isdefined( self.currentweapon ) && isdefined( self.currentweapon.basename ) && ( self.currentweapon.basename == "_encstr_9508164725094ACA49A3BDC61BA0DF32D5B9FB87DBB8D280" || self.currentweapon.basename == rpggetclosetoapc() ) )
        waitframe();

    waitframe();
    var_1 = getcompleteweaponname( "_encstr_A4FE1D20B7508EAF0BCD79F5E203979071CF50191FB48145C2B9E5083B5A15" );
    scripts\cp_mp\utility\inventory_utility::_giveweapon( var_1, undefined, undefined, 0 );
    thread scripts\cp_mp\utility\inventory_utility::_switchtoweapon( var_1 );
    wait 1.7;
    self notify( "_encstr_B7A21B1B1B424D019B336FC50B392CDB8F9BCBF870937B16873BC73712" );
    scripts\cp_mp\utility\inventory_utility::_takeweapon( var_1 );

    if ( !issameweapon( var_0 ) && ( var_0 == "_encstr_AABA05236DC831" || var_0 == "_encstr_AF9310234B172F41E14FD8E8170D5BF7FAF2" ) )
        givedefaultlaststandweapon();
    else
    {
        var_2 = level.watch_for_player_death;

        if ( var_2 > 0 )
            thread handlelaststandweapongivedelay( var_2, var_0 );
        else
            givelaststandweapon( var_0 );
    }
}

_id_13A34()
{
    var_0 = self;
    var_1 = getcompleteweaponname( "_encstr_A4FE1D20B7508EAF0BCD79F5E203979071CF50191FB48145C2B9E5083B5A15" );

    if ( var_0 hasweapon( var_1 ) )
        var_0 scripts\cp_mp\utility\inventory_utility::_takeweapon( var_1 );
}

handlelaststandweapongivedelay( var_0, var_1 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_895913DD772F8B8FBB786753D0167A42CD9BA3176D" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_2 = givedefaultlaststandweapon();

    if ( isnullweapon( var_2, var_1 ) )
        return;

    wait( var_0 );
    self notify( "_encstr_A89E1205BD40B1A7D4583BB280BD1F3FF02FAC9B" );
    scripts\cp_mp\utility\inventory_utility::_takeweapon( var_2 );
    givelaststandweapon( var_1 );
}

givedefaultlaststandweapon()
{
    var_0 = scripts\mp\utility\dvars::getwatcheddvar( "_encstr_8C041081EE8359C7DC27E8B0D7E55989AAD5" );

    if ( !isdefined( var_0 ) )
        var_0 = "_encstr_AF9310234B172F41E14FD8E8170D5BF7FAF2";

    var_1 = getcompleteweaponname( var_0 );
    scripts\cp_mp\utility\inventory_utility::_giveweapon( var_1, undefined, undefined, 1 );
    thread scripts\cp_mp\utility\inventory_utility::_switchtoweapon( var_1 );
    return var_1;
}

givelaststandweapon( var_0 )
{
    if ( !issameweapon( var_0 ) )
        var_0 = scripts\mp\class::buildweapon( var_0 );

    var_1 = createheadicon( var_0 );

    if ( !self hasweapon( var_1 ) )
        scripts\cp_mp\utility\inventory_utility::_giveweapon( var_0, undefined, undefined, 1 );

    thread scripts\cp_mp\utility\inventory_utility::_switchtoweapon( var_1 );
}

disableweaponsovertime( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\common\utility::allow_weapon( 0 );
    scripts\engine\utility::_id_143B9( var_0, "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    scripts\common\utility::allow_weapon( 1 );
}

switchtofists( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A89E1205BD40B1A7D4583BB280BD1F3FF02FAC9B" );

    while ( scripts\cp_mp\utility\inventory_utility::domonitoredweaponswitch( var_0, 1 ) == 0 )
        waitframe();
}

dodamagewhiledown()
{
    self endon( "_encstr_8B431263C2DC3A37D10B9B46AF272BD95A3B598C" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_874811F3DFFD1991DEFFD4932D7FA8592263B2" );
    var_0 = level.laststandhealth;
    var_1 = level.laststandtimer;

    if ( var_1 <= 0 )
    {
        onbleedout();
        return;
    }

    var_2 = float( var_0 ) / float( var_1 );

    if ( getdvarfloat( "_encstr_8B4A210BBE1A9157B2FF73435B6991B8B3D3B763A67E23131AE7A1790BF16EF0746E1B", 0 ) > 0 )
        var_2 = var_2 * getdvarfloat( "_encstr_8B4A210BBE1A9157B2FF73435B6991B8B3D3B763A67E23131AE7A1790BF16EF0746E1B", 0 );

    wait 1.0;
    var_3 = getcompleteweaponname( "_encstr_BC0D0C2DBB0E7D9DAE9BC6AC6EB9" );

    if ( !istrue( level.watch_for_objective_failed ) )
        thread suicidesetup();

    var_4 = 0.0;

    while ( self.health > 0 )
    {
        if ( self isinexecutionvictim() )
        {
            wait 1.0;
            continue;
        }

        if ( !istrue( scripts\mp\playerlogic::registerpuzzleinteractions() ) )
        {
            var_5 = int( var_4 + var_2 ) - int( var_4 );
            var_4 = var_4 + var_2;
            self.update_bomb_interaction_ent = 1;
            self dodamage( var_5, self.origin, self, undefined, "_encstr_A43E119D6859218C97A9F7EFD14F4F98831E53", var_3, "_encstr_AABA05236DC831" );
            self.update_bomb_interaction_ent = undefined;
        }

        if ( self.health <= 0 )
            onbleedout();

        wait 1.0;
    }
}

stucktime( var_0 )
{
    self.stuckinlaststand = 1;
    wait( var_0 );
    self.stuckinlaststand = 0;

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_A8B513B3E0C959C8470CD3E99707233353E38BC0F3" ) && getdvarint( "_encstr_BE73159FF75BD083E4D6BA313AEFD877E33357E997C205" ) != 1 )
        var_1 = level.laststandtimer;
    else
        var_1 = level.laststandtimer;

    if ( !isdefined( var_1 ) )
        var_1 = level.laststandtimer;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
    {

    }

    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" )
        var_1 = max( var_1 - level.laststandsuicidetimer, 1 );

    self.timeuntilbleedout = var_1;
    thread bleedoutthink();
    thread suicidesetup();
}

_id_13012( var_0 )
{
    if ( var_0 usinggamepad() )
        return var_0 calloutmarkerping_entityzoffset();
    else
        return var_0 istacmapactive();
}

_id_13014()
{
    var_0 = self;
    var_1 = var_0.owner;
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    var_1 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    var_1 endon( "_encstr_895913DD772F8B8FBB786753D0167A42CD9BA3176D" );
    var_2 = scripts\mp\utility\dvars::getwatcheddvar( "_encstr_8C0615C60BCDD1A6A3C273C829ACECA53B562A5A5B5639" ) * 1000;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" && var_1 scripts\mp\utility\perk::_hasperk( "_encstr_9F2F1BF6521A8F68218B90E05F7A43BF92BE6EFDEF832F330D8B70909F" ) )
        var_2 = var_2 * 0.75;

    var_0.usetime = var_2;

    if ( !isdefined( self.curprogress ) )
        self.curprogress = 0;

    for (;;)
    {
        if ( _id_13012( var_1 ) && !istrue( var_1.usedprops ) && var_1 isonground() )
        {
            var_0 notify( "_encstr_BA1D12878371221FA899B37CD33857CBD5231B13" );
            var_1 isholdingbreath( 1 );
            var_0 thread _id_13013();
        }

        waitframe();
    }
}

_id_13013()
{
    var_0 = self.owner;
    var_1 = self;
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    var_0 endon( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );
    var_1._id_1438A = 0;
    var_1 thread _id_13011();

    while ( scripts\mp\utility\player::isreallyalive( var_0 ) && _id_13012( var_0 ) && var_1.curprogress < var_1.usetime )
    {
        while ( !var_0 isonground() && _id_13012( var_0 ) && !istrue( var_0.usedprops ) )
            waitframe();

        if ( !_id_13012( var_0 ) )
            break;

        if ( var_0 isinexecutionvictim() )
            break;

        if ( !istrue( var_0.usedprops ) )
        {
            var_0 thread _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_12616( "_encstr_AB2C19B4DD07BE3BCA37D71C36CB27AF9BCAD833AFE456D9D2D9CA", 10 );

            if ( !istrue( var_0._id_138AD ) )
            {
                var_0 attach( "_encstr_8A6F1CEED6BECA5CAE96C1FAECB2CDEB9BA35A5BD75B7B3A0B5DBEC60D66", "_encstr_88D713DD1642E0FAB15275EB7AD78E7B778D827D28" );
                var_0._id_138AD = 1;
            }

            var_0.usedprops = 1;
            var_0 allowmovement( 0 );
        }

        if ( !isdefined( var_1.userate ) )
            var_1.userate = 0;

        if ( istrue( var_0.beingrevived ) )
        {
            var_0 setclientomnvar( "_encstr_82370C57A5EBB92B1B57C9B4DC9D", 6 );
            break;
        }

        if ( !var_0 isonground() )
            break;

        var_1.curprogress = var_1.curprogress + level.frameduration * var_1.userate;
        var_1.userate = 1;
        var_0 scripts\mp\gameobjects::updateuiprogress( var_1, 1 );

        if ( var_1.curprogress >= var_1.usetime )
        {
            var_0 stopgestureviewmodel( "_encstr_B4921B67CD7A592D5FC3A08B89BF5D10151FD7EB7C6711EE57CBB8B332" );
            wait 0.5;

            if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
                _encstr_890626F852FABB63A30BE831E0264973E59A7820FB57C7D0C312D83FC647500B0BA248E8766F3F91::dialog_grenade_missed( var_0 );

            var_0 playanim_aibegindismountturret( "_encstr_9DDE142F87F488BE2D30CBB7832D390F8B7666634043", var_0 );

            if ( isdefined( level._id_12C1F ) )
                var_0 [[ level._id_12C1F ]]();

            return;
        }

        waitframe();
    }

    if ( !istrue( var_0.beingrevived ) )
    {
        _encstr_97571CC31EE30FBA499B665A8327B7E7F8F54C512FA93F150D207EF2F097::_id_1401F( var_0, var_0, var_1.curprogress, 1 );
        var_1 thread decayreviveprogress();
    }

    var_0 notify( "_encstr_AF4414F35D48B0F745BF488AB93036B02A90038B1EC9" );
}

_id_13011()
{
    var_0 = self.owner;
    var_1 = self;
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 notify( "_encstr_980B1A9B593633F5C959D94BD956BED8D8AC2CCD5D0EFA6EE885931D" );
    var_0 endon( "_encstr_980B1A9B593633F5C959D94BD956BED8D8AC2CCD5D0EFA6EE885931D" );
    var_0 scripts\engine\utility::_id_143B5( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33", "_encstr_AF4414F35D48B0F745BF488AB93036B02A90038B1EC9", "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( !istrue( var_0.beingrevived ) )
        var_0 scripts\mp\gameobjects::updateuiprogress( var_1, 0 );

    var_0 allowmovement( 1 );

    if ( istrue( var_0._id_138AD ) )
    {
        var_0 detach( "_encstr_8A6F1CEED6BECA5CAE96C1FAECB2CDEB9BA35A5BD75B7B3A0B5DBEC60D66", "_encstr_88D713DD1642E0FAB15275EB7AD78E7B778D827D28" );
        var_0._id_138AD = 0;
    }

    var_0 stopgestureviewmodel( "_encstr_B4921B67CD7A592D5FC3A08B89BF5D10151FD7EB7C6711EE57CBB8B332" );
    var_0 isholdingbreath( 0 );
    var_0.usedprops = 0;
}

onexitcommon( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self.laststandactionset = undefined;
    thread clearlaststandinvuln();
    self.fastcrouchspeedmod = 0;
    scripts\mp\weapons::updatemovespeedscale();

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_9CD01D8E2A62F72D4993B8D877627837EA14109BC79AA1EB3847B0206FBD70" ) )
        scripts\mp\utility\perk::removeperk( "_encstr_9CD01D8E2A62F72D4993B8D877627837EA14109BC79AA1EB3847B0206FBD70" );

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_BC8613CD83AC8DA5161B47CBBE4CD84B3732B2CBAC" ) )
        scripts\mp\utility\perk::removeperk( "_encstr_BC8613CD83AC8DA5161B47CBBE4CD84B3732B2CBAC" );

    if ( isdefined( level.playerdatafield ) && [[ level.playerdatafield ]]() )
    {
        if ( isdefined( level.playercleanupinfilondisconnect ) )
            self [[ level.playercleanupinfilondisconnect ]]( 0 );

        if ( isdefined( level.playercleargulagomnvars ) )
            self [[ level.playercleargulagomnvars ]]( 0 );
    }

    var_1 = level.watch_for_payload_approach_cache_1;
    var_1 = getcompleteweaponname( var_1 );

    if ( self getcurrentprimaryweapon() != var_1 )
    {
        self notify( "_encstr_A89E1205BD40B1A7D4583BB280BD1F3FF02FAC9B" );
        scripts\cp_mp\utility\inventory_utility::abortmonitoredweaponswitch( var_1 );
    }
    else
        scripts\cp_mp\utility\inventory_utility::_takeweapon( var_1 );

    self notify( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );
    self.laststandoldweapon = undefined;

    if ( istrue( scripts\mp\playerlogic::registerpuzzleinteractions() ) )
        scripts\mp\playerlogic::_id_1312B( 0 );

    if ( level.gametype == "_encstr_9507034B25" )
    {
        _encstr_97571CC31EE30FBA499B665A8327B7E7F8F54C512FA93F150D207EF2F097::_id_1401F( self, self, 0, 1 );
        _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_1319C( 0 );
        self.disable_hotjoining_after_time = undefined;
    }

    scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );

    if ( isdefined( level._id_11C79 ) )
        self [[ level._id_11C79 ]]( var_0 );

    waittillframeend;
    self.inlaststand = 0;
}

onrevive( var_0, var_1 )
{
    var_2 = self.laststandoldweaponobj;
    scripts\common\utility::allow_vehicle_use( 1 );
    scripts\common\utility::allow_crate_use( 1 );
    scripts\common\utility::brjugg_droponplayerdeath( 1 );

    if ( getdvar( "_encstr_A10E10BABF1EB12D4B819F18E8488BAA02E5", "_encstr_A40101" ) == "_encstr_BE180432D63D" || getdvar( "_encstr_A10E10BABF1EB12D4B819F18E8488BAA02E5", "_encstr_A40101" ) == "_encstr_89E10946E1536E6DD6A2B0" || getdvar( "_encstr_A10E10BABF1EB12D4B819F18E8488BAA02E5", "_encstr_A40101" ) == "_encstr_AD1F058082CACF" )
        _encstr_A18624E0EFEA87BAA35A56BBFB0EBF36CA096B407105AFF796F09F4F7DAFB0DCE162357947B7::_id_12781( self, 1, 1 );

    if ( isdefined( self.laststandactionset ) )
        scripts\mp\playeractions::allowactionset( self.laststandactionset, 1 );

    onexitcommon( 1 );
    self laststandrevive();
    self notify( "_encstr_8B431263C2DC3A37D10B9B46AF272BD95A3B598C" );
    var_3 = level.watch_for_payload_approach_cache_1;

    if ( var_3 != "_encstr_AABA05236DC831" )
        thread scripts\cp_mp\utility\inventory_utility::domonitoredweaponswitch( var_2, 1 );

    if ( !istrue( var_1 ) )
    {
        var_4 = level.laststandrevivehealth;

        if ( !getdvarint( "_encstr_93CF276EB1C9F5E0C60B5ECAC9FA1BC26ED16AA30BB92329B2B3A5675929B2D10BD2DC4259851B47D0" ) || self.health < level.laststandrevivehealth )
            self.health = level.laststandrevivehealth;
    }
    else
        self.health = self.maxhealth;

    if ( game["_encstr_A9AD064B0D19E377"] == "_encstr_B9E70983DEE6D1760BB5CA" )
        scripts\mp\gamelogic::freezeplayerforroundend();

    scripts\mp\playerlogic::_id_1312B( 0 );

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" && !istrue( self.gulag ) )
    {
        scripts\common\utility::allow_weapon_switch_clip( 1 );

        if ( !istrue( level._id_133D8 ) )
        {
            var_5 = _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::rotationrefsbyseatandweapon( self.team, self.squadindex );

            foreach ( var_7 in var_5 )
            {
                if ( !isdefined( var_7 ) )
                    continue;

                if ( var_7 != self )
                    var_7 thread scripts\mp\hud_message::showsplash( "_encstr_BAAE14CA4D51B327071012DA5B6D976A28FD49468B70", undefined, self );
            }
        }
    }

    scripts\cp_mp\utility\shellshock_utility::_stopshellshock();

    if ( istrue( var_0 ) && istrue( level.allowselfrevive ) )
        allowselfrevive( 0 );

    self.watch_for_attack = undefined;
    self.watch_for_level_weapons_free = undefined;
    self.watch_for_player_enter_puddle_trigger = undefined;
    self.watch_for_driver_spawned = undefined;
    self.watch_for_damage = undefined;
    self.watch_for_damage_on_trap = undefined;
    self.watch_for_damage_on_turret = undefined;
}

onbleedout()
{
    if ( !isdefined( self ) )
        return;

    thread onexitcommon();
    dropcarryobject();

    if ( isdefined( self.watch_for_attack ) )
        self.watch_for_attack thread scripts\mp\rank::scoreeventpopup( "_encstr_A1BA0FAFC8E2E12ED7A0B8307283B0A361" );

    if ( level.gametype == "_encstr_9507034B25" )
    {
        if ( !istrue( level.gameended ) )
        {
            self.islaststandbleedoutdmg = 0;
            self clearsoundsubmix( "_encstr_BC6A0FBF0BC943BA93805FCFF2BBD18511" );
            self playlocalsound( "_encstr_9F101246CA2CD1436EEB46F67BC9D71995581DD0" );
            self enableplayerbreathsystem( 1 );
        }
    }

    scripts\mp\utility\damage::_suicide();
}

ondeath( var_0 )
{
    if ( !isdefined( self ) )
        return;

    if ( isdefined( var_0 ) && isdefined( self.watch_for_attack ) && istrue( self.watch_for_attack.inlaststand ) )
        self.watch_for_attack thread _id_1204F( var_0, self.watch_for_level_weapons_free, self.watch_for_player_enter_puddle_trigger );

    if ( istrue( self.usedprops ) )
        self notify( "_encstr_AF4414F35D48B0F745BF488AB93036B02A90038B1EC9" );

    if ( level.gametype == "_encstr_9507034B25" )
    {
        if ( !istrue( level.gameended ) )
        {
            self.islaststandbleedoutdmg = 0;
            self clearsoundsubmix( "_encstr_BC6A0FBF0BC943BA93805FCFF2BBD18511" );
            self playlocalsound( "_encstr_9F101246CA2CD1436EEB46F67BC9D71995581DD0" );
            self enableplayerbreathsystem( 1 );
        }
    }

    if ( isdefined( level.getinfilplayers ) )
        [[ level.getinfilplayers ]]( self, 1 );

    thread onexitcommon();
    dropcarryobject();
}

dropcarryobject()
{
    if ( isdefined( self.carryobject ) )
        self.carryobject thread scripts\mp\gameobjects::setdropped();
}

revivesetup( var_0 )
{
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 waittill( "_encstr_B7A21B1B1B424D019B336FC50B392CDB8F9BCBF870937B16873BC73712" );
    var_1 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0.origin );
    var_1 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_1 setcursorhint( "_encstr_939A0CEC70DBF521459F5B47F73D" );
    var_1 setusehideprogressbar( 1 );
    var_1 setuseholdduration( "_encstr_88C20E3998B33933533F7207B8280675" );
    var_1 sethintstring( &"_encstr_BA6518D4825E310A6AA84D2A822722AF2954B252B28AD7AA4DA2" );
    var_1 setusepriority( -2 );
    var_2 = var_0.team;
    var_1 linkto( var_0, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", ( 0, 0, 6 ), ( 0, 0, 0 ) );
    var_1.owner = var_0;
    var_1.inuse = 0;
    var_1.id = "_encstr_BC4312806793533F9396F08D618B6B5BE1A340C8";
    var_1.trigger = spawnstruct();
    var_1.trigger.owner = var_0;
    var_1.trigger.id = "_encstr_BC4312806793533F9396F08D618B6B5BE1A340C8";
    var_1.trigger.targetname = "_encstr_B2C90FDA156B07035369CBA330BFBFCF03";
    var_1 makeusable();
    var_1 thread trackteamchanges( var_2 );
    var_1 thread revivetriggerthink( var_2 );
    var_1 thread endreviveonownerdeathordisconnect();

    if ( getdvarint( "_encstr_AB6325FA8F1AF9C019F1D050058FB008CFD3C7DD7ED29AD505798E3C656B7D6FAF9AC9E79B25EB", 0 ) && getdvarint( "_encstr_827525B9C6C9BEE0B185CBB239AFCA37B0891B2B4DB2C6DEE68C75D2CD2350E6C81496B9A3F68D", 0 ) )
        var_0 thread _id_12FB4();

    var_0.laststandreviveent = var_1;
    level.laststandreviveents[var_1 getentitynumber()] = var_1;
    var_1 thread removereviveentfromlevelarrayondeath();
    var_0 thread _id_144D0();

    if ( var_0 _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::shouldgetnewspawnpoint() )
        var_0.laststandreviveent _id_13014();
}

_id_12FB4()
{
    var_0 = self;
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    var_0 endon( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = gettime();
    var_0 waittill( "_encstr_B14F1B0AE92953C371C1527ACB60CBA974C6AEC191E2D379E723326819", var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 );

    for (;;)
    {
        if ( var_9 )
        {
            var_0 waittill( "_encstr_B14F1B0AE92953C371C1527ACB60CBA974C6AEC191E2D379E723326819", var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 );
            continue;
        }

        break;
    }

    var_11 = var_2.watch_for_attack;

    if ( !isdefined( var_11 ) )
        var_11 = var_2;

    var_12 = isdefined( var_11 ) && var_11 != var_0;
    var_13 = var_9;
    var_14 = var_10 || isdefined( var_3 ) && var_3 getentitynumber() == worldentnumber();
    var_15 = gettime() - var_1;
    var_16 = float( var_15 / 1000.0 );

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
        _encstr_890626F852FABB63A30BE831E0264973E59A7820FB57C7D0C312D83FC647500B0BA248E8766F3F91::diablecachesaroundorigin( var_0, var_11, var_2, var_5, var_6, var_7, var_8, var_12, var_13, var_14, var_16 );

    var_0 playanim_aibegindismountturret( "_encstr_9D531CE65636CCAF9CB23BB49D2BD7F6CDFAB52DB1C6D7CDABD81BB2CD6E", var_0 );
    var_0 thread scripts\mp\hud_message::showsplash( "_encstr_9C270F4C39AFB92B8DED3723AFDD2D3746" );
    var_17 = scripts\mp\utility\teams::getteamdata( var_0.team, "_encstr_8875080E3685E52B93B9" );

    foreach ( var_19 in var_17 )
    {
        if ( var_19 != var_0 && isalive( var_19 ) )
            var_19 thread scripts\mp\hud_message::showsplash( "_encstr_A4FC1878A337EBAB4A0DF9F723629773758F8890439F434B6277", undefined, var_0 );
    }
}

_id_1204F( var_0, var_1, var_2 )
{
    var_3 = var_0.victim;
    var_4 = var_0.inflictor;
    var_5 = var_0.objweapon;
    var_6 = var_0.meansofdeath;
    var_7 = var_0.weaponfullstring;
    var_8 = var_0.attacker != self;
    var_9 = istrue( var_0.assistedsuicide );
    var_10 = undefined;

    if ( isdefined( var_2 ) )
        var_10 = createheadicon( var_2 );

    self notify( "_encstr_B14F1B0AE92953C371C1527ACB60CBA974C6AEC191E2D379E723326819", var_3, var_4, var_5, var_6, var_7, var_1, var_10, var_8, var_9 );
}

endreviveonownerdeathordisconnect()
{
    self endon( "_encstr_A3750609A5E61883" );
    self.owner scripts\engine\utility::_id_143A6( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3", "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33", "_encstr_8F68178D0B37D1FADCA3589BC87D1ACA2CB1FA16C6474BB395" );
    self delete();
}

removereviveentfromlevelarrayondeath()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = self getentitynumber();
    self waittill( "_encstr_A3750609A5E61883" );
    level.laststandreviveents[var_0] = undefined;
}

updateusablebyteam( var_0 )
{
    foreach ( var_2 in level.players )
    {
        if ( var_0 == var_2.team && var_2 != self.owner && !istrue( var_2 scripts\mp\utility\perk::_hasperk( "_encstr_9FD11C9B70A72BB04ECA33EB899E128C4783D81FFF4FDFE9A7B148B9F078" ) ) )
            self enableplayeruse( var_2 );
        else
            self disableplayeruse( var_2 );

        if ( istrue( var_2 scripts\mp\utility\perk::_hasperk( "_encstr_9FD11C9B70A72BB04ECA33EB899E128C4783D81FFF4FDFE9A7B148B9F078" ) ) )
            var_2.hiddenreviveents[self getentitynumber()] = self;
    }
}

trackteamchanges( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self.owner endon( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );

    for (;;)
    {
        updateusablebyteam( var_0 );
        level waittill( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
    }
}

revivetriggerthink( var_0 )
{
    self.owner endon( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );
    self.owner endon( "_encstr_8F68178D0B37D1FADCA3589BC87D1ACA2CB1FA16C6474BB395" );
    self.owner endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        self waittill( "_encstr_8B5C081B58E0B7A213E6", var_1 );

        if ( istrue( var_1.iszombie ) )
            continue;

        if ( var_1 _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_125EC() )
            continue;

        while ( !var_1 isonground() && var_1 usebuttonpressed() )
            waitframe();

        if ( istrue( var_1.tracking_max_health ) )
        {
            var_1 notify( "_encstr_AB9A1419CA07F866F317B39D377AAE59D3E6CDB1B76C" );

            while ( istrue( var_1.tracking_max_health ) && var_1 usebuttonpressed() )
                waitframe();
        }

        if ( !var_1 usebuttonpressed() )
            continue;

        self.owner scripts\mp\playerlogic::_id_1312B( 1 );
        var_2 = 0;
        self.owner notify( "_encstr_989416C3014E1B0CC839DB5743123320F1AD110B681E4A62" );
        self makeunusable();
        self.owner allowmovement( 0 );
        var_1 setlaststandselfreviving( 1 );
        var_1._id_12D1E = 1;
        self.reviver = var_1;
        thread useholdthink( var_1 );
        var_1 thread _id_139D5( self.owner );

        if ( level.gametype == "_encstr_9507034B25" )
            self.owner _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_1319C( 1 );

        var_3 = scripts\engine\utility::_id_143B5( "_encstr_80361895F27A97284FAB30F1CB9D2333B39F181ECBB2B7F13BFF", "_encstr_B76415AEE659EBD0EDD819FA4E959DB4CECAFA330B2D36", "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

        if ( var_3 == "_encstr_80361895F27A97284FAB30F1CB9D2333B39F181ECBB2B7F13BFF" )
            var_2 = 1;

        var_1 notify( "_encstr_8025161441932DD72CC950E012479B9E4BF5A41BB6772837" );
        self.owner scripts\mp\playerlogic::_id_1312B( 0 );
        var_2 = self.owner playanim_aibegindismountturret( var_3, var_1 );

        if ( var_2 )
            return;

        thread decayreviveprogress();
        self makeusable();
        updateusablebyteam( var_0 );
        waittillframeend;
        self.reviver = undefined;
    }
}

rpggetclosetoapc()
{
    if ( scripts\cp_mp\utility\game_utility::_id_140AA() )
        return "_encstr_89A11C9BF73162BD7721AAE1D24F9BD77BE5EFA07C79E907A5B9AF56DBDE";
    else
        return "_encstr_9C9218AB577B1315A23B08D9E3135313561B27E63DBB59C75A68";
}

_id_139D5( var_0 )
{
    var_1 = self;
    var_1 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( istrue( var_1._id_1438B ) )
        return;

    var_2 = getcompleteweaponname( rpggetclosetoapc() );
    var_3 = var_1 scripts\cp_mp\utility\killstreak_utility::createstreakinfo( "_encstr_A40101", var_1 );
    var_3._id_12D1D = var_2;

    for ( var_4 = 0; !var_4 || istrue( var_1.consecutive_kills ); var_1._id_1438B = 1 )
    {
        var_4 = var_1 scripts\cp_mp\killstreaks\killstreakdeploy::switchtodeployweapon( var_2, var_3, ::_id_13AB4, undefined, ::_id_1209F, undefined, ::_id_120A0, 0 );
        waitframe();
    }

    var_1.consecutive_kills = 1;
    var_1._id_1438B = 0;
    var_1 thread _id_144B4();
    var_1 thread _id_144D5( var_0 );
    var_1 thread _id_144D6( var_0 );
}

_id_1209F( var_0, var_1 )
{
    var_2 = self;
    var_2 disableweaponswitch();
}

_id_120A0( var_0, var_1 )
{
    var_2 = self;
    var_2 enableweaponswitch();
    var_2 notify( "_encstr_93681540824B0B1377B756CD69BFFEED74DA4BC0EA2759" );

    while ( isdefined( self.currentweapon ) && isdefined( self.currentweapon.basename ) && self.currentweapon.basename == rpggetclosetoapc() )
        waitframe();

    waitframe();
    var_2.consecutive_kills = 0;
}

_id_13AB4( var_0 )
{
    var_1 = self;
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( !istrue( var_1._id_12D1E ) )
        return;

    var_1 scripts\engine\utility::_id_143B5( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3", "_encstr_8025161441932DD72CC950E012479B9E4BF5A41BB6772837", "_encstr_8BE0118D16E68ED7DC3AB0CDC8D7CD47589C3A" );
}

_id_144B4()
{
    var_0 = self;
    var_0 endon( "_encstr_8025161441932DD72CC950E012479B9E4BF5A41BB6772837" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 waittill( "_encstr_A3750609A5E61883" );
    var_0 enableweaponswitch();
}

_id_144D5( var_0 )
{
    var_1 = self;
    var_1 endon( "_encstr_8025161441932DD72CC950E012479B9E4BF5A41BB6772837" );
    var_1 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isalive( var_0 ) )
        var_0 waittill( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    var_1 notify( "_encstr_8025161441932DD72CC950E012479B9E4BF5A41BB6772837" );
}

_id_144D6( var_0 )
{
    var_1 = self;
    var_1 endon( "_encstr_8025161441932DD72CC950E012479B9E4BF5A41BB6772837" );
    var_1 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 waittill( "_encstr_895913DD772F8B8FBB786753D0167A42CD9BA3176D" );
    var_1 notify( "_encstr_8025161441932DD72CC950E012479B9E4BF5A41BB6772837" );
}

_id_144D0()
{
    var_0 = self;

    if ( !isplayer( var_0 ) )
        return;

    if ( !scripts\mp\utility\game::unset_relic_grounded() )
        return;

    var_1 = getdvarint( "_encstr_BEC2296E3639EB2639BE1B16B9A3E61D16B946AFB0D81BDBBBB9EB0EE4F69B2BBEE84E85E6E65A1D4BBD73", 0 ) == 1;

    if ( !var_1 )
        return;

    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    var_0 endon( "_encstr_895913DD772F8B8FBB786753D0167A42CD9BA3176D" );

    if ( !isai( var_0 ) )
    {
        var_0 notifyonplayercommand( "_encstr_8CDB1480CB79D8D75AD6CB47759213C7B22738081714", "_encstr_983B0C3BF7B04EA3AE896AC2D370" );
        var_0 notifyonplayercommand( "_encstr_8CDB1480CB79D8D75AD6CB47759213C7B22738081714", "_encstr_B9F70AEA07DF6363E2452CB8" );
        var_0 notifyonplayercommand( "_encstr_8CDB1480CB79D8D75AD6CB47759213C7B22738081714", "_encstr_9B54077A803B1825A7" );
        var_0 notifyonplayercommand( "_encstr_8CDB1480CB79D8D75AD6CB47759213C7B22738081714", "_encstr_A8E308ACE6E82C73B1CA" );
        var_0 notifyonplayercommand( "_encstr_8CDB1480CB79D8D75AD6CB47759213C7B22738081714", "_encstr_9C680E37148560E4E31A2973C2FFAE50" );
        var_0 notifyonplayercommand( "_encstr_B8A115A33053150729DE101150B1C7D2F3484A1A6023CF", "_encstr_B49C0CE86F243E7891E52A80BC15" );
        var_0 notifyonplayercommand( "_encstr_B8A115A33053150729DE101150B1C7D2F3484A1A6023CF", "_encstr_9F700AB4D6B79DCA8C7BBBB9" );
        var_0 notifyonplayercommand( "_encstr_B8A115A33053150729DE101150B1C7D2F3484A1A6023CF", "_encstr_871207B4834E7B3756" );
        var_0 notifyonplayercommand( "_encstr_B8A115A33053150729DE101150B1C7D2F3484A1A6023CF", "_encstr_878B085AB98EB0CDD8CA" );
        var_0 notifyonplayercommand( "_encstr_B8A115A33053150729DE101150B1C7D2F3484A1A6023CF", "_encstr_BCFE0E35F160C7BF1181021BA8F5D77C" );
    }

    for (;;)
    {
        var_0 waittill( "_encstr_8CDB1480CB79D8D75AD6CB47759213C7B22738081714" );
        var_2 = gettime();
        var_0 waittill( "_encstr_B8A115A33053150729DE101150B1C7D2F3484A1A6023CF" );
        var_3 = gettime() - var_2;
        var_4 = 350;

        if ( var_3 < var_4 )
            _id_13BC9( var_0 );
    }
}

_id_13BC9( var_0 )
{
    var_0.changesleft = !istrue( var_0.changesleft );
    var_1 = istrue( var_0.changesleft );
    var_2 = scripts\engine\utility::ter_op( var_1, "_encstr_B11E247FC9A61271E7FBF5BFD71BD8B74FF9F3E319BF4D79A36C0FA12B3581AF169973670935", "_encstr_B3FB253499E7B60159C11DF7313571D81FA0AC9CF1BB7D79E4F603CF11AD81A097F8E764394703" );
    var_0 scripts\mp\hud_message::showerrormessage( var_2 );
}

playanim_aibegindismountturret( var_0, var_1 )
{
    var_2 = self;
    var_3 = 0;

    if ( !isdefined( var_2 ) || !isalive( var_2 ) )
        return 0;

    if ( var_0 == "_encstr_80361895F27A97284FAB30F1CB9D2333B39F181ECBB2B7F13BFF" || var_0 == "_encstr_9D531CE65636CCAF9CB23BB49D2BD7F6CDFAB52DB1C6D7CDABD81BB2CD6E" || var_0 == "_encstr_9DDE142F87F488BE2D30CBB7832D390F8B7666634043" )
        var_3 = 1;

    var_2.beingrevived = 0;
    var_2.usedprops = 0;

    if ( var_0 == "_encstr_9DDE142F87F488BE2D30CBB7832D390F8B7666634043" )
        var_2 buddyrevivingdoneanimevent();

    if ( level.gametype == "_encstr_9507034B25" )
    {
        self.watch_for_driver_death = undefined;
        var_2 _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_1319C( 0 );
        var_2 _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_131A6( 0 );
    }

    var_2 allowmovement( 1 );

    if ( var_3 )
    {
        var_2 scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
        var_2 notify( "_encstr_895913DD772F8B8FBB786753D0167A42CD9BA3176D" );
        self.fastcrouchspeedmod = 0;
        scripts\mp\weapons::updatemovespeedscale();

        if ( level.gametype == "_encstr_9507034B25" )
        {
            if ( !istrue( level.gameended ) )
            {
                var_2 _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_1319E( 0 );
                scripts\mp\events::revivedplayer( var_1, var_2 );
                scripts\cp\vehicles\vehicle_compass_cp::_id_12050( var_1, var_2 );
                var_2 scripts\cp\vehicles\vehicle_compass_cp::_id_1383B( "_encstr_93A7110BD85AD9ACD7CDDEE87D23F6BBCDCA32" );

                if ( var_1 != var_2 )
                    var_1 scripts\mp\utility\stats::incpersstat( "_encstr_9394086A1F5F5EAD9B93", 1 );

                var_2 _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E05( "_encstr_A6E2122868A3F99A1B53A301CDE072FBF83B6D43", var_1 );
                var_2.islaststandbleedoutdmg = 0;
                var_2 stoplocalsound( "_encstr_876A0FE125A741F37681B2A037CD4149F5" );

                if ( !istrue( var_2.deletequestcircle ) )
                {
                    var_2 playlocalsound( "_encstr_BAC410EA011F63AC207FACBF07703947BD9B" );
                    var_2 clearsoundsubmix( "_encstr_BC6A0FBF0BC943BA93805FCFF2BBD18511" );
                    var_2 playlocalsound( scripts\engine\utility::ter_op( scripts\mp\utility\player::isfemale(), "_encstr_BC1815EBD858A7DAE5B5560B2BFBD227A648FFAB2831C2", "_encstr_AA2011B96A9DF0C582AFCDD75F0A85E0240723" ) );
                    var_2 enableplayerbreathsystem( 1 );
                }
            }

            if ( !_encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::validtousesticker() && !istrue( var_2.deletequestcircle ) )
                playsoundatpos( var_2.origin, "_encstr_B83812899CF583C68597569CFA4ECA3BA5EC56C8" );

            if ( isdefined( self.watch_for_molotov_ambush_and_spawners ) )
            {
                scripts\mp\utility\outline::outlinedisable( self.watch_for_molotov_ambush_and_spawners, self );
                self.watch_for_molotov_ambush_and_spawners = undefined;
            }
        }

        var_4 = "_encstr_9C3D071B63023B26C3";

        if ( scripts\mp\utility\game::unset_relic_grounded() )
        {
            if ( istrue( self.changesleft ) )
                var_4 = "_encstr_9F24062875D5FD98";

            self.changesleft = undefined;
        }

        var_5 = var_2 setstance( var_4 );

        if ( !var_5 )
        {
            var_6 = var_4 == "_encstr_9C3D071B63023B26C3";
            var_5 = var_2 setstance( scripts\engine\utility::ter_op( var_6, "_encstr_9F24062875D5FD98", "_encstr_9C3D071B63023B26C3" ) );
        }
    }

    var_2 _id_13A34();
    var_2 thread has_filled_amped_bar();
    return var_3;
}

has_filled_amped_bar()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( level.gametype != "_encstr_9507034B25" )
        return;

    scripts\common\utility::allow_offhand_secondary_weapons( 0, "_encstr_AF7A142BB6F3BB27CCF2CD6109B3532398C3B8D9BFC2" );

    while ( self isthrowingbackgrenade() )
    {
        self._id_13B4F = 1;
        self giveandfireoffhand( "_encstr_ABB108EEA8EA22DED72B" );
        wait 1;
    }

    scripts\common\utility::allow_offhand_secondary_weapons( 1, "_encstr_AF7A142BB6F3BB27CCF2CD6109B3532398C3B8D9BFC2" );
}

decayreviveprogress()
{
    self.owner endon( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );
    self.owner endon( "_encstr_8F68178D0B37D1FADCA3589BC87D1ACA2CB1FA16C6474BB395" );
    self.owner endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_A1E316CB9B53413360B1E42756C98314AD18D123A033421B" );
    self endon( "_encstr_BA1D12878371221FA899B37CD33857CBD5231B13" );
    self endon( "_encstr_A3750609A5E61883" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = level.watch_for_next_sniper;

    if ( var_0 <= 0 )
        return;

    for (;;)
    {
        self.curprogress = self.curprogress - level.frameduration * var_0;

        if ( self.curprogress <= 0 )
        {
            self.curprogress = 0;
            return;
        }

        waitframe();
    }
}

useholdthink( var_0, var_1 )
{
    self.owner endon( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_2 = self.owner;
    var_3 = getdvarint( "_encstr_9D5223E63639EB381BB0BCB29CFA1B166EA3A98E85E61905631BCB22C92CD98A371689B195" );
    var_4 = spawn( "_encstr_A3050EDF6FF5DC081CC1AFA37097B80B", self.origin );
    var_4 hide();

    if ( !var_3 )
        var_0 scripts\mp\playeractions::allowactionset( "_encstr_8C6311D8C2CD3AE6470BCD46D7C9CA675ACE59", 0 );

    self notify( "_encstr_A1E316CB9B53413360B1E42756C98314AD18D123A033421B" );
    var_0 thread _id_13298();

    if ( var_3 )
        dragallyprototype( var_0, var_2 );

    if ( !isdefined( self.curprogress ) )
        self.curprogress = 0;

    self.inuse = 1;
    self.userate = 0;
    var_5 = 0;

    if ( isdefined( var_1 ) )
        self.usetime = var_1;
    else if ( var_0 scripts\mp\utility\perk::_hasperk( "_encstr_81C710288BCDA308A1521B816F6D7038B431" ) )
        self.usetime = scripts\mp\utility\dvars::getwatcheddvar( "_encstr_8C0615C60BCDD1A6A3C273C829ACECA53B562A5A5B5639" ) * 1000 * getdvarfloat( "_encstr_9D7E1B1C959C5BAFB659195AC6A495CEA5B35935C1569591A41647B4DB" );
    else
        self.usetime = scripts\mp\utility\dvars::getwatcheddvar( "_encstr_8C0615C60BCDD1A6A3C273C829ACECA53B562A5A5B5639" ) * 1000;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" && var_0 scripts\mp\utility\perk::_hasperk( "_encstr_9F2F1BF6521A8F68218B90E05F7A43BF92BE6EFDEF832F330D8B70909F" ) )
        self.usetime = self.usetime * 0.75;

    level thread scripts\mp\battlechatter_mp::trysaylocalsound( var_0, "_encstr_A4EE092557A37378B94D31" );
    thread useholdthinkcleanup( var_0, var_4 );
    thread useholdthinkloop( var_0 );
}

dragallyprototype( var_0, var_1 )
{
    var_2 = self;
    var_1 playerlinkto( var_0 );
    var_1 playerlinkedoffsetenable();
    var_1 allowmovement( 0 );
    var_0 setmovespeedscale( getdvarfloat( "_encstr_A23126CA23325969ED81474D1EBF19EFF81377833148C29FA2FB9FB5C8F93249387E0D1F0B4D7AB7" ) );
}

cleanupdragallyprototype( var_0, var_1 )
{
    var_1 unlink();
    var_1 allowmovement( 1 );
    var_0 setmovespeedscale( 1 );
}

useholdthinkcleanup( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    var_2 = getdvarint( "_encstr_9D5223E63639EB381BB0BCB29CFA1B166EA3A98E85E61905631BCB22C92CD98A371689B195" );
    var_3 = self.owner;
    var_4 = var_3 scripts\engine\utility::_id_143B6( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3", "_encstr_ABAD17ED2E39EF9457E03A81C8B10CF3508053654E814F1A57", "_encstr_AB9814FB8A3DA16B92DBB9C7530A23D0DB6901F1B46C", "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );
    self.inuse = 0;
    var_1 delete();
    var_0 setlaststandreviving();
    var_0 setlaststandselfreviving( 0 );
    var_0._id_12D1E = 0;

    if ( isdefined( var_0 ) )
        var_0 scripts\mp\gameobjects::updateuiprogress( self, 0 );

    if ( isdefined( var_3 ) )
        var_3 scripts\mp\gameobjects::updateuiprogress( self, 0 );

    if ( scripts\mp\utility\player::isreallyalive( var_0 ) )
    {
        if ( var_2 )
            cleanupdragallyprototype( var_0, var_3 );
        else
            var_0 scripts\mp\playeractions::allowactionset( "_encstr_8C6311D8C2CD3AE6470BCD46D7C9CA675ACE59", 1 );
    }

    var_0 notify( "_encstr_A19F1087FBE3C8F815EB504BD7C780185A5F" );

    if ( var_4 == "_encstr_ABAD17ED2E39EF9457E03A81C8B10CF3508053654E814F1A57" )
    {
        var_0 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_A4420893535BC433814A" );

        if ( istrue( level.allowselfrevive ) )
            var_0 allowselfrevive( 1 );

        var_3 thread scripts\mp\rank::scoreeventpopup( "_encstr_BA4208CD533B40849B5B" );
        var_3 thread scripts\mp\hud_message::showsplash( "_encstr_BA4208CD533B40849B5B", undefined, var_0 );
        var_3.inlaststand = 0;
        self notify( "_encstr_80361895F27A97284FAB30F1CB9D2333B39F181ECBB2B7F13BFF" );
        return;
    }
    else if ( var_4 == "_encstr_AB9814FB8A3DA16B92DBB9C7530A23D0DB6901F1B46C" )
        var_3 notify( "_encstr_989416C3014E1B0CC839DB5743123320F1AD110B681E4A62" );

    self notify( "_encstr_B76415AEE659EBD0EDD819FA4E959DB4CECAFA330B2D36" );
}

_id_13298()
{
    var_0 = spawn( "_encstr_A3050EDF6FF5DC081CC1AFA37097B80B", self.origin );
    var_0 linkto( self );
    var_0 playloopsound( "_encstr_A37D1259336F36209B69153B9A09787E2F591083" );
    self waittill( "_encstr_A19F1087FBE3C8F815EB504BD7C780185A5F" );
    playsoundatpos( self.origin, "_encstr_BA3C134C4EBE39B29DA5B3B2C97DBACDB2F559E646" );
    var_0 delete();
}

useholdthinkloop( var_0 )
{
    var_1 = self.owner;
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    var_1 endon( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );

    while ( scripts\mp\utility\player::isreallyalive( var_0 ) && var_0 usebuttonpressed() && !var_0 isinexecutionvictim() && self.curprogress < self.usetime && ( !isdefined( var_0.inlaststand ) || !var_0.inlaststand ) && distancesquared( var_0.origin, self.origin ) <= 65536 )
    {
        if ( istrue( var_0.tacopsmedicrole ) )
            return scripts\mp\utility\player::isreallyalive( var_0 );

        self.curprogress = self.curprogress + level.frameduration * self.userate;
        self.userate = 1;
        var_0 scripts\mp\gameobjects::updateuiprogress( self, 1 );

        if ( self.curprogress >= self.usetime )
        {
            var_1 notify( "_encstr_ABAD17ED2E39EF9457E03A81C8B10CF3508053654E814F1A57" );
            return;
        }

        waitframe();
    }

    var_1 notify( "_encstr_AB9814FB8A3DA16B92DBB9C7530A23D0DB6901F1B46C" );
    return;
}

suicidesetup()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    thread showsuicidehintstring();

    if ( !isbot( self ) )
        thread _id_13969();

    var_0 = 0;

    for (;;)
    {
        waitframe();

        if ( self stancebuttonpressed() && self isinexecutionvictim() == 0 && !scripts\mp\playerlogic::registerpuzzleinteractions() )
        {
            var_0 = var_0 + level.framedurationseconds;

            if ( var_0 >= 0.5 )
                break;
        }
        else
            var_0 = 0;
    }

    _id_1396A();
}

_id_13969()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self notifyonplayercommand( "_encstr_BDC21452B55372FB31596B7B90ABA38A21581FCD9CE5", "_encstr_B9F70AEA07DF6363E2452CB8" );
    self notifyonplayercommand( "_encstr_813612A3D3B1A0668A9F09156F33B6304CE1EB5B", "_encstr_9F700AB4D6B79DCA8C7BBBB9" );
    self notifyonplayercommand( "_encstr_BDC21452B55372FB31596B7B90ABA38A21581FCD9CE5", "_encstr_983B0C3BF7B04EA3AE896AC2D370" );
    self notifyonplayercommand( "_encstr_813612A3D3B1A0668A9F09156F33B6304CE1EB5B", "_encstr_B49C0CE86F243E7891E52A80BC15" );
    var_0 = gettime();
    var_1 = 0;
    var_2 = 0;
    var_3 = 500.0;
    var_4 = 0;

    while ( !var_4 && !var_1 )
    {
        var_1 = 0;

        if ( !var_2 )
            var_0 = gettime();

        var_5 = scripts\engine\utility::_id_143BD( 0.5, "_encstr_BDC21452B55372FB31596B7B90ABA38A21581FCD9CE5", "_encstr_813612A3D3B1A0668A9F09156F33B6304CE1EB5B", "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33", "_encstr_896F17362CDCE87DE647C2B919FADCCAD833F5C9596796D956", "_encstr_87A914B1B0DC1DEB371D2C378CBE4C6395B2C8B757E8" );

        switch ( var_5 )
        {
            case "_encstr_BDC21452B55372FB31596B7B90ABA38A21581FCD9CE5":
                var_0 = gettime();
                var_2 = 1;
                break;
            case "_encstr_813612A3D3B1A0668A9F09156F33B6304CE1EB5B":
            case "_encstr_945408D1B4B556B7BA3A":
                if ( var_2 && gettime() - var_0 >= var_3 )
                    var_1 = 1;

                var_2 = 0;
                break;
            default:
                var_4 = 1;
                break;
        }

        waitframe();
    }

    if ( var_1 )
        _id_1396A();

    self notifyonplayercommandremove( "_encstr_BDC21452B55372FB31596B7B90ABA38A21581FCD9CE5", "_encstr_B9F70AEA07DF6363E2452CB8" );
    self notifyonplayercommandremove( "_encstr_813612A3D3B1A0668A9F09156F33B6304CE1EB5B", "_encstr_9F700AB4D6B79DCA8C7BBBB9" );
    self notifyonplayercommandremove( "_encstr_BDC21452B55372FB31596B7B90ABA38A21581FCD9CE5", "_encstr_983B0C3BF7B04EA3AE896AC2D370" );
    self notifyonplayercommandremove( "_encstr_813612A3D3B1A0668A9F09156F33B6304CE1EB5B", "_encstr_B49C0CE86F243E7891E52A80BC15" );
}

_id_1396A()
{
    if ( istrue( self.allowselfrevive ) )
        self notify( "_encstr_896F17362CDCE87DE647C2B919FADCCAD833F5C9596796D956" );
    else
        self notify( "_encstr_87A914B1B0DC1DEB371D2C378CBE4C6395B2C8B757E8" );
}

showsuicidehintstring()
{
    if ( istrue( self.allowselfrevive ) )
        self forceusehinton( &"_encstr_A19111ADF782B0A0C677F7976FEEE8E409DF15" );
    else if ( level.gametype != "_encstr_9507034B25" )
        thread handlerevivemessage();

    scripts\engine\utility::waittill_any_ents( self, "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3", self, "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33", level, "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( !isdefined( self ) )
        return;

    scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
    self forceusehintoff();
}

handlerevivemessage()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );

    for (;;)
    {
        scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
        var_0 = 0;
        var_1 = scripts\mp\supers::getcurrentsuperref();

        if ( isdefined( var_1 ) && var_1 == "_encstr_87CB1520EBA20B8BB7BC67669C3F73CB8D62C943023EA1" && scripts\mp\supers::issuperready() )
            var_0 = 1;

        if ( istrue( scripts\mp\playerlogic::registerpuzzleinteractions() ) )
            scripts\mp\utility\lower_message::setlowermessageomnvar( 22 );
        else if ( istrue( self.laststandhealisactive ) )
            scripts\mp\utility\lower_message::setlowermessageomnvar( 23 );
        else if ( isdefined( self.timeuntilbleedout ) )
        {
            if ( var_0 )
                scripts\mp\utility\lower_message::setlowermessageomnvar( 19, int( gettime() + self.timeuntilbleedout * 1000 ) );
            else if ( scripts\mp\utility\game::getgametype() != "_encstr_8807031CC1" )
            {
                if ( self.pers["_encstr_A2AA0636969D2BE6"] == 0 && scripts\mp\utility\game::isteamreviveenabled() )
                    scripts\mp\utility\lower_message::setlowermessageomnvar( 5, int( gettime() + self.timeuntilbleedout * 1000 ) );
                else
                    scripts\mp\utility\lower_message::setlowermessageomnvar( 20, int( gettime() + self.timeuntilbleedout * 1000 ) );
            }
            else
                scripts\mp\utility\lower_message::setlowermessageomnvar( 21, int( gettime() + self.timeuntilbleedout * 1000 ) );
        }
        else if ( var_0 )
            scripts\mp\utility\lower_message::setlowermessageomnvar( 19 );
        else if ( self.pers["_encstr_A2AA0636969D2BE6"] == 0 && scripts\mp\utility\game::isteamreviveenabled() )
            scripts\mp\utility\lower_message::setlowermessageomnvar( 5 );
        else
            scripts\mp\utility\lower_message::setlowermessageomnvar( 20 );

        for (;;)
        {
            var_2 = scripts\engine\utility::_id_143B4( "_encstr_AFF20C03FD88D8CAEF6BA29031E8", "_encstr_989416C3014E1B0CC839DB5743123320F1AD110B681E4A62" );

            if ( var_2 == "_encstr_AFF20C03FD88D8CAEF6BA29031E8" && scripts\mp\supers::getcurrentsuperref() != "_encstr_87CB1520EBA20B8BB7BC67669C3F73CB8D62C943023EA1" )
                continue;
            else
                break;
        }
    }
}

bleedoutthink()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );
    self endon( "_encstr_8F68178D0B37D1FADCA3589BC87D1ACA2CB1FA16C6474BB395" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = self.timeuntilbleedout;

    if ( var_0 != 0 )
    {
        for (;;)
        {
            waitframe();

            if ( self isinexecutionvictim() )
                continue;

            if ( !istrue( scripts\mp\playerlogic::registerpuzzleinteractions() ) )
                var_0 = var_0 - level.framedurationseconds;

            if ( var_0 <= level.framedurationseconds )
            {
                self notify( "_encstr_87A914B1B0DC1DEB371D2C378CBE4C6395B2C8B757E8" );
                break;
            }

            self.timeuntilbleedout = var_0;
        }
    }
}

addoverheadicon()
{
    var_0 = self.origin;
    var_1 = newteamhudelem( self.team );
    var_1.x = var_0[0];
    var_1.y = var_0[1];
    var_1.z = var_0[2] + 32;
    var_1.alpha = 1.0;
    var_1.archived = 0;
    var_1.showinkillcam = 0;

    if ( level.splitscreen )
        var_1 setshader( "_encstr_9E05180DEA46EB27CA2C365ACD5BBE1ACA2CC8F593569DD2CEB2", 10, 10 );
    else
        var_1 setshader( "_encstr_9E05180DEA46EB27CA2C365ACD5BBE1ACA2CC8F593569DD2CEB2", 5, 5 );

    var_1 setwaypoint( 0 );
    var_1 settargetent( self );
    thread cleanupoverheadicon( var_1 );
}

cleanupoverheadicon( var_0 )
{
    self waittill( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );
    var_0 destroy();
}

showwaverespawnmessage()
{
    var_0 = getdvarint( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_939F12F5BB58EC5927566E07C2EE9B46951BC2CB" ) > 0;

    if ( !var_0 )
        return;

    self endon( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );

    for (;;)
    {
        self.respawntimerstarttime = gettime();
        var_0 = getdvarint( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_939F12F5BB58EC5927566E07C2EE9B46951BC2CB" ) > 0;

        if ( var_0 )
        {
            var_1 = scripts\mp\playerlogic::timeuntilwavespawn( 0.0 );
            scripts\mp\utility\lower_message::setlowermessageomnvar( 10, int( gettime() + var_1 * 1000 ) );
            wait( var_1 );
            scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
        }

        wait 2.0;
    }
}

allowselfrevive( var_0 )
{
    self.allowselfrevive = var_0;
    self setclientomnvar( "_encstr_A2910F5B40B7DA9770C4AF9A6D1B6F237B", var_0 );
}

laststandmonitor()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( istrue( level.watch_for_icbm_spawners ) )
        return;

    for (;;)
    {
        waitframe();

        if ( scripts\mp\utility\game::getgametypenumlives() == 0 && !istrue( level.disablespawning ) )
            continue;

        level thread laststandkillteamifdown();
    }
}

laststandkillteamifdown()
{
    foreach ( var_1 in level.teamnamelist )
    {
        var_2 = scripts\mp\utility\teams::getfriendlyplayers( var_1, 1 );
        var_3 = [];

        foreach ( var_5 in var_2 )
        {
            if ( istrue( var_5.inlaststand ) )
                var_3[var_3.size] = var_5;
        }

        if ( var_3.size > 0 && var_2.size <= var_3.size )
        {
            level.laststandrequiresmelee = 0;

            foreach ( var_5 in var_3 )
            {
                if ( !isdefined( var_5 ) )
                    continue;

                var_5 notify( "_encstr_87A914B1B0DC1DEB371D2C378CBE4C6395B2C8B757E8" );
            }
        }
    }
}

getclassiclaststandpistol()
{
    var_0 = self getweaponslistprimaries();

    foreach ( var_2 in var_0 )
    {
        var_3 = weaponclass( var_2 );

        if ( weaponclass( var_2 ) == "_encstr_8A94070E2DCD8E7BB1" )
            return var_2;
    }

    var_2 = scripts\mp\class::buildweapon( scripts\mp\utility\weapon::getweaponrootname( "_encstr_BDB31120D328E92F8A5FE7EF8B2256D2372D8B" ), [], "_encstr_AABA05236DC831", "_encstr_AABA05236DC831", -1 );
    return var_2;
}

makelaststandinvuln()
{
    var_0 = level.laststandinvulntime;
    clearlaststandinvuln();
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_9C9918235BF9AAE27F5523939BB15ED3B77D3C36DFCA2DABACDD" );
    scripts\cp_mp\utility\damage_utility::adddamagemodifier( "_encstr_9B9E12186AA2696E47E427A8CCCF90154BB39070", 0, 0, ::laststandinvulnignorefunc );
    scripts\engine\utility::waittill_notify_or_timeout( "_encstr_A3750609A5E61883", var_0 );
    thread clearlaststandinvuln();
}

clearlaststandinvuln()
{
    self notify( "_encstr_9C9918235BF9AAE27F5523939BB15ED3B77D3C36DFCA2DABACDD" );
    scripts\cp_mp\utility\damage_utility::removedamagemodifier( "_encstr_9B9E12186AA2696E47E427A8CCCF90154BB39070", 0 );
}

laststandinvulnignorefunc( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( var_4 == "_encstr_A43E119D6859218C97A9F7EFD14F4F98831E53" )
        return 1;

    return 0;
}

getdefaultlaststandtimervalue()
{
    return 10;
}

getdefaultlaststandrevivetimervalue()
{
    return 10;
}

getshellshockinterruptdelayms( var_0 )
{
    return var_0 * 1000;
}
