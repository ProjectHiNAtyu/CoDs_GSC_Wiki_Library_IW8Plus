// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.dronemissilespawnarray = getentarray( "_encstr_956613DA15081F8353F91AB3E0A37DCF2707515738", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_1 in level.dronemissilespawnarray )
        var_1.targetent = getent( var_1.target, "_encstr_B8CE0BE43FC317DF690862BA48" );
}

weapongivendronehive( var_0 )
{
    return 1;
}

tryusedronehive( var_0 )
{
    return usedronehive( self, var_0.lifeid, var_0 );
}

usedronehive( var_0, var_1, var_2 )
{
    if ( isdefined( self.underwater ) && self.underwater )
        return 0;

    var_3 = var_0 scripts\cp_mp\killstreaks\killstreakdeploy::streakdeploy_doweapontabletdeploy( var_2 );

    if ( !var_3 )
        return 0;

    var_0 scripts\common\utility::allow_weapon_switch( 0 );
    level thread monitordisownkillstreaks( var_0 );
    level thread monitorgameend( var_0 );
    level thread monitorobjectivecamera( var_0 );
    level thread rundronehive( var_0, var_1, var_2.streakname, var_2 );
    return 1;
}

watchhostmigrationstartedinit( var_0 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        level waittill( "_encstr_A33F15D07BB93AEBB6B43B9C2C472D7BDC7D4C59765ADC" );

        if ( isdefined( self ) )
        {
            var_0 thermalvisionon();
            continue;
        }

        var_0 setclientomnvar( "_encstr_B1C11453D16130963FE2B11B7A4BD86B0423A7E34C57", 2 );
    }
}

watchhostmigrationfinishedinit( var_0 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        level waittill( "_encstr_B6A51386ED9B1DF5DA9676938547D2B7DCD756DCC8" );

        if ( isdefined( self ) )
        {
            var_0 setclientomnvar( "_encstr_B1C11453D16130963FE2B11B7A4BD86B0423A7E34C57", 1 );
            var_0 setclientomnvar( "_encstr_93311A9D530E234213F0DA83C055712FA0C603097991E7C1D9C0B2FB", self.missilesleft );
            continue;
        }

        var_0 setclientomnvar( "_encstr_B1C11453D16130963FE2B11B7A4BD86B0423A7E34C57", 2 );
    }
}

watchclosetogoal( var_0 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = scripts\engine\trace::create_contents( 1, 1, 1, 1, 1, 1, 1 );

    while ( isdefined( self ) )
    {
        var_2 = scripts\engine\trace::ray_trace( self.origin, self.origin - ( 0, 0, 1000 ), level.characters, var_1 );

        if ( isdefined( var_2["_encstr_B7260923C89E8F3378E72E"] ) && distancesquared( self.origin, var_2["_encstr_B7260923C89E8F3378E72E"] ) < 5000 )
            break;

        waitframe();
    }

    self.streakinfo notify( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );
}

rundronehive( var_0, var_1, var_2, var_3 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_4 = "_encstr_889710CBB3D7293131921F181AE1919938FF";
    var_5 = "_encstr_BE5419C827F6B9CA7D34D29D2BD7E0E4DBD4591B8ED21BCA7DB61C";
    var_6 = "_encstr_B35E16DCEE2DD1B134BE98632C232BAFC6D02D1B46F5AD07";
    level thread scripts\mp\hud_util::teamplayercardsplash( var_4, var_0 );
    var_0 notifyonplayercommand( "_encstr_BE6411D62DDC372DD8B251164E9DACD1D4951D", "_encstr_9DE608483AFB1D28C673" );
    var_0 notifyonplayercommand( "_encstr_BE6411D62DDC372DD8B251164E9DACD1D4951D", "_encstr_B6D21A59B0E88EC236DAEBC2D62DD631BDFA16D8B1566E9B5A31C62B" );
    var_7 = getbestmissilespawnpoint( var_0, level.dronemissilespawnarray );
    var_8 = var_7.origin * ( 1, 1, 0 ) + ( 0, 0, level.mapcenter[2] + 10000 );
    var_9 = var_7.targetent.origin;
    var_10 = scripts\cp_mp\utility\weapon_utility::_magicbullet( getcompleteweaponname( var_5 ), var_8, var_9, var_0 );
    var_10 setcandamage( 1 );
    var_10 disablemissileboosting();
    var_10 setmissileminimapvisible( 1 );
    var_10.team = var_0.team;
    var_10.lifeid = var_1;
    var_10.type = "_encstr_A95307C9595BDE8ECA";
    var_10.owner = var_0;
    var_10.entitynumber = var_10 getentitynumber();
    var_10.streakinfo = var_3;
    var_10.weapon_name = "_encstr_BE5419C827F6B9CA7D34D29D2BD7E0E4DBD4591B8ED21BCA7DB61C";
    level.rockets[var_10.entitynumber] = var_10;
    level.remotemissileinprogress = 1;
    level thread monitordeath( var_10, 1 );
    level thread monitorboost( var_10 );
    missileeyes( var_0, var_10 );
    var_0 setclientomnvar( "_encstr_B1C11453D16130963FE2B11B7A4BD86B0423A7E34C57", 1 );
    var_10 thread watchhostmigrationstartedinit( var_0 );
    var_10 thread watchhostmigrationfinishedinit( var_0 );
    var_10 thread scripts\mp\utility\killstreak::watchsupertrophynotify( var_0 );
    var_0 scripts\common\utility::_id_13E0A( level._id_11B2A, var_2, var_10.origin );
    var_11 = 0;
    var_10.missilesleft = 2;
    var_12 = 2;
    var_0 setclientomnvar( "_encstr_93311A9D530E234213F0DA83C055712FA0C603097991E7C1D9C0B2FB", var_10.missilesleft );

    for (;;)
    {
        var_13 = var_10 scripts\engine\utility::_id_143AD( "_encstr_A3750609A5E61883", "_encstr_BE6411D62DDC372DD8B251164E9DACD1D4951D" );
        scripts\mp\hostmigration::waittillhostmigrationdone();

        if ( var_13 == "_encstr_A3750609A5E61883" )
            break;

        if ( !isdefined( var_10 ) )
            break;

        if ( istrue( var_10.unlimitedammo ) )
        {
            if ( istrue( var_10.lasttimefired ) )
            {
                if ( gettime() < var_10.lasttimefired + var_12 * 1000 && var_11 == 0 )
                    continue;
            }

            level thread firerapidmissiles( var_10, var_11, var_3, var_6 );
            var_11++;
            var_10.lasttimefired = gettime();
            var_10.missilesleft = 2 - var_11;
            var_14 = var_10.missilesleft;

            if ( var_10.missilesleft == 0 )
                var_14 = -1;

            var_0 setclientomnvar( "_encstr_93311A9D530E234213F0DA83C055712FA0C603097991E7C1D9C0B2FB", var_14 );

            if ( var_11 == 2 )
            {
                var_11 = 0;
                var_10.missilesleft = 2;
                var_0 thread resetmissiles( var_10, var_12 );
            }

            continue;
        }

        if ( var_11 < 2 )
        {
            if ( !istrue( var_10.singlefire ) )
            {
                level thread spawnswitchblade( var_10, var_11, var_3, var_6 );
                var_11++;
                var_10.missilesleft = 2 - var_11;
                var_0 setclientomnvar( "_encstr_93311A9D530E234213F0DA83C055712FA0C603097991E7C1D9C0B2FB", var_10.missilesleft );

                if ( var_11 == 2 )
                    var_10 enablemissileboosting();
            }
        }
    }

    level thread returnplayer( var_0 );
    scripts\mp\utility\print::printgameaction( "_encstr_893B1E42B8BD581610F0485E13D84AFDA58D844648579D52F873C38FEA6C8BD5", var_0 );
}

firerapidmissiles( var_0, var_1, var_2, var_3 )
{
    var_4 = var_1;

    for ( var_5 = 0; var_5 < 2; var_5++ )
    {
        level thread spawnswitchblade( var_0, var_4, var_2, var_3 );
        var_4++;

        if ( var_4 > 1 )
            var_4 = 0;

        wait 0.1;
    }
}

resetmissiles( var_0, var_1 )
{
    var_0 endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    wait( var_1 );
    self setclientomnvar( "_encstr_93311A9D530E234213F0DA83C055712FA0C603097991E7C1D9C0B2FB", var_0.missilesleft );
}

monitorlockedtarget()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A3750609A5E61883" );
    var_0 = [];
    var_1 = [];

    for (;;)
    {
        var_2 = [];
        var_0 = scripts\mp\utility\killstreak::getenemytargets();

        foreach ( var_4 in var_0 )
        {
            var_5 = self.owner worldpointinreticle_circle( var_4.origin, 65, 90 );

            if ( var_5 )
            {
                self.owner thread scripts\mp\utility\debug::drawline( self.origin, var_4.origin, 10, ( 0, 0, 1 ) );
                var_2[var_2.size] = var_4;
            }
        }

        if ( var_2.size )
        {
            var_1 = sortbydistance( var_2, self.origin );
            self.lasttargetlocked = var_1[0];
            scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 0.25 );
        }

        wait 0.05;
        scripts\mp\hostmigration::waittillhostmigrationdone();
    }
}

spawnswitchblade( var_0, var_1, var_2, var_3 )
{
    var_0.owner playlocalsound( "_encstr_AFC80F0BDA5BF6FA8D93C247ACFAD56E2B" );
    var_4 = var_0 gettagangles( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_5 = anglestoforward( var_4 );
    var_6 = anglestoright( var_4 );
    var_7 = ( 100, 100, 100 );
    var_8 = ( 15000, 15000, 15000 );

    if ( var_1 )
        var_7 = var_7 * -1;

    var_9 = scripts\engine\trace::_bullet_trace( var_0.origin, var_0.origin + var_5 * var_8, 0, var_0 );
    var_8 = var_8 * var_9["_encstr_B130095358E1B3930B687D"];
    var_10 = var_0.origin + var_6 * var_7;
    var_11 = var_0.origin + var_5 * var_8;
    var_12 = scripts\cp_mp\utility\weapon_utility::_magicbullet( getcompleteweaponname( var_3 ), var_10, var_11, var_0.owner );
    var_13 = var_0 getclosesttargetinview( var_0.owner, var_11 );

    if ( isdefined( var_13 ) )
        var_12 missile_settargetent( var_13 );

    var_12 setcandamage( 1 );
    var_12 setmissileminimapvisible( 1 );
    var_12.team = var_0.team;
    var_12.lifeid = var_0.lifeid;
    var_12.type = var_0.type;
    var_12.owner = var_0.owner;
    var_12.entitynumber = var_12 getentitynumber();
    var_12.streakinfo = var_2;
    var_12.weapon_name = "_encstr_B35E16DCEE2DD1B134BE98632C232BAFC6D02D1B46F5AD07";
    level.rockets[var_12.entitynumber] = var_12;
    level thread monitordeath( var_12, 0 );
}

getclosesttargetinview( var_0, var_1 )
{
    var_2 = scripts\mp\utility\killstreak::getenemytargets( var_0 );
    var_3 = undefined;
    var_4 = undefined;

    foreach ( var_6 in var_2 )
    {
        if ( !isdefined( var_6 ) || !scripts\mp\utility\player::isreallyalive( var_6 ) )
            continue;

        if ( istrue( var_6.trinityrocketlocked ) )
            continue;

        var_7 = distance2dsquared( var_6.origin, var_1 );

        if ( var_7 < 262144 && istrue( canseetarget( var_6 ) ) )
        {
            if ( !isdefined( var_4 ) || var_7 < var_4 )
            {
                var_3 = var_6;
                var_4 = var_7;
            }
        }
    }

    if ( isdefined( var_3 ) )
    {
        var_3.trinityrocketlocked = 1;
        var_3 thread watchtarget();
    }

    return var_3;
}

canseetarget( var_0 )
{
    var_1 = 0;
    var_2 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 1, 1, 0 );
    var_3 = [ var_0 gettagorigin( "_encstr_87DA078B11C012A35F" ), var_0 gettagorigin( "_encstr_8BE10B4DF5DA2C5A9B39B7EDE8" ), var_0 gettagorigin( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" ) ];

    for ( var_4 = 0; var_4 < var_3.size; var_4++ )
    {
        if ( !scripts\engine\trace::ray_trace_passed( self.origin, var_3[var_4], self, var_2 ) )
            continue;

        var_1 = 1;
        break;
    }

    return var_1;
}

watchtarget()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self waittill( "_encstr_A3750609A5E61883" );
    self.trinityrocketlocked = undefined;
}

looptriggeredeffect( var_0, var_1 )
{
    var_1 endon( "_encstr_A3750609A5E61883" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        triggerfx( var_0 );
        wait 0.25;
    }
}

getnextmissilespawnindex( var_0 )
{
    var_1 = var_0 + 1;

    if ( var_1 == level.dronemissilespawnarray.size )
        var_1 = 0;

    return var_1;
}

monitorboost( var_0 )
{
    var_0 endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        var_0.owner waittill( "_encstr_BE6411D62DDC372DD8B251164E9DACD1D4951D" );
        var_0 notify( "_encstr_BE6411D62DDC372DD8B251164E9DACD1D4951D" );
    }
}

getbestmissilespawnpoint( var_0, var_1 )
{
    var_2 = [];

    foreach ( var_4 in level.players )
    {
        if ( !scripts\mp\utility\player::isreallyalive( var_4 ) )
            continue;

        if ( var_4.team == var_0.team )
            continue;

        if ( var_4.team == "_encstr_A68C0A5803A5D151A2B310A6" )
            continue;

        var_2[var_2.size] = var_4;
    }

    if ( !var_2.size )
        return var_1[randomint( var_1.size )];

    var_6 = scripts\engine\utility::array_randomize( var_1 );
    var_7 = var_6[0];

    foreach ( var_9 in var_6 )
    {
        var_9.sightedenemies = 0;

        for ( var_10 = 0; var_10 < var_2.size; var_10++ )
        {
            var_11 = var_2[var_10];

            if ( !scripts\mp\utility\player::isreallyalive( var_11 ) )
            {
                var_2[var_10] = var_2[var_2.size - 1];
                var_2[var_2.size - 1] = undefined;
                var_10--;
                continue;
            }

            if ( scripts\engine\trace::_bullet_trace_passed( var_11.origin + ( 0, 0, 32 ), var_9.origin, 0, var_11 ) )
            {
                var_9.sightedenemies = var_9.sightedenemies + 1;
                return var_9;
            }

            wait 0.05;
            scripts\mp\hostmigration::waittillhostmigrationdone();
        }

        if ( var_9.sightedenemies == var_2.size )
            return var_9;

        if ( var_9.sightedenemies > var_7.sightedenemies )
            var_7 = var_9;
    }

    return var_7;
}

missileeyes( var_0, var_1 )
{
    var_2 = 0.5;
    var_0 scripts\mp\utility\player::_freezecontrols( 1 );
    var_0 cameralinkto( var_1, "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_0 controlslinkto( var_1 );
    var_0 thermalvisionon();
    var_0 setclientomnvar( "_encstr_AA4F159574D9FF084CAB88A8CB9DC13721DC05178DC3A1", 1 );
    var_0 setclientomnvar( "_encstr_A42D18CD082E5CE1F178A2E9364DE7A24FDF78C8B250272DC450", gettime() + int( 15000 ) );
    level thread unfreezecontrols( var_0, var_2 );
}

unfreezecontrols( var_0, var_1, var_2 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( var_1 - 0.35 );
    var_0 scripts\mp\utility\player::_freezecontrols( 0 );
}

monitordisownkillstreaks( var_0 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 endon( "_encstr_BD71104260D9D9A728C994AF5E531B9F7BF0" );
    var_0 childthread monitorownerstatus( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
    var_0 childthread monitorownerstatus( "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
}

monitorownerstatus( var_0 )
{
    self waittill( var_0 );
    level thread returnplayer( self );
}

monitorgameend( var_0 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 endon( "_encstr_BD71104260D9D9A728C994AF5E531B9F7BF0" );
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = 1;
    level thread returnplayer( var_0, 0, var_1 );
}

monitorobjectivecamera( var_0 )
{
    var_0 endon( "_encstr_BD71104260D9D9A728C994AF5E531B9F7BF0" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level waittill( "_encstr_BE2B0E673648972611B88BB221179E0F" );
    level thread returnplayer( var_0, 1 );
}

monitordeath( var_0, var_1 )
{
    var_0 waittill( "_encstr_A3750609A5E61883" );
    scripts\mp\hostmigration::waittillhostmigrationdone();

    if ( isdefined( var_0.targeffect ) )
        var_0.targeffect delete();

    if ( isdefined( var_0.entitynumber ) )
        level.rockets[var_0.entitynumber] = undefined;

    if ( var_1 )
        level.remotemissileinprogress = undefined;
}

returnplayer( var_0, var_1, var_2 )
{
    if ( !isdefined( var_0 ) )
        return;

    if ( !istrue( var_2 ) )
        self.streakinfo notify( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );

    var_0 setclientomnvar( "_encstr_B1C11453D16130963FE2B11B7A4BD86B0423A7E34C57", 2 );
    var_0 notify( "_encstr_BD71104260D9D9A728C994AF5E531B9F7BF0" );
    var_0 thermalvisionoff();
    var_0 controlsunlink();
    var_0 cameraunlink();
    var_0 setclientomnvar( "_encstr_B1C11453D16130963FE2B11B7A4BD86B0423A7E34C57", 0 );
    var_0 scripts\common\utility::allow_weapon_switch( 1 );
}

watchgastrigger( var_0, var_1 )
{
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        self waittill( "_encstr_8B5C081B58E0B7A213E6", var_2 );

        if ( !isplayer( var_2 ) )
            continue;

        if ( level.teambased && var_2.team == var_0.team && var_2 != var_0 )
            continue;

        if ( istrue( var_2.gettinggassed ) )
            continue;

        thread applygasdamageovertime( var_0, var_1, var_2 );
    }
}

applygasdamageovertime( var_0, var_1, var_2 )
{
    var_2 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_2.gettinggassed = 1;

    while ( var_2 istouching( self ) )
    {
        var_2 dodamage( 20, self.origin, var_0, self, "_encstr_A45C0E4B9FDF3165A3B93C4491BFA4A9", var_1 );
        var_3 = scripts\engine\utility::_id_143B9( 0.5, "_encstr_A3750609A5E61883" );

        if ( var_3 == "_encstr_A3750609A5E61883" )
            break;
    }

    if ( istrue( var_2.gettinggassed ) )
        var_2.gettinggassed = undefined;
}
