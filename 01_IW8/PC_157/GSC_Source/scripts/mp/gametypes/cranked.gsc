// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    if ( getdvar( "_encstr_9E700851BEE33DF1B547" ) == "_encstr_8A510E519897A1332E4A3898E243F5B9" )
        return;

    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    var_0[0] = scripts\mp\utility\game::getgametype();
    scripts\mp\gameobjects::main( var_0 );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( scripts\mp\utility\game::getgametype(), 0, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 10 );
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 100 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
    }

    level.teambased = getdvarint( "_encstr_9FDA16B38EA301270542E83461F990A93A174F7DB0576542", 1 ) == 1;
    level.onstartgametype = ::onstartgametype;
    level.onplayerconnect = ::onplayerconnect;
    level.getspawnpoint = ::getspawnpoint;
    level.onnormaldeath = ::onnormaldeath;

    if ( !level.teambased )
    {
        level.onplayerscore = ::onplayerscore;
        setdvar( "_encstr_955C1737C6E4BEC69316B9B62B19D7CD6CB79359D85A5B4BA3", getdvarint( "_encstr_B34E1BDC8DE4F58D4EC237B55646EBB9B1ED9395D8B4DAD247FA99990B", 60 ) );
        setteammode( "_encstr_B91804FE5590" );
    }

    game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_BA9E08864ABFF0971F0A";

    if ( getdvarint( "_encstr_B8020A9E9AA69A6292517AA0" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_891904A1D8BE" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];
    else if ( getdvarint( "_encstr_93570B93F4A9629272A825B426" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_889708C9D0E7EBE819D9" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];
    else if ( getdvarint( "_encstr_B4050C8B3E9A11DD626FD1CBDB5A" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_B81804D2C101" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];
    else if ( getdvarint( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_9EB909B928022745805102" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] + "_encstr_934305E6126268";

    game["_encstr_B8DA073D799798C7C7"]["_encstr_9E240C10CE33016D6AEA39B0F244"] = "_encstr_B8A90AD827B9B6AF434BCDD1";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9D800E9895D94B37AFD89C58DCD6958C"] = "_encstr_81320DFE6B504BE9A6F58FBB2F5DA2";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_87A712F1643668E87BC79FBFD332C671F4FF794B"] = "_encstr_9815093B6E98FF9981687B";
    game["_encstr_A9B10863D3ADDAF8974B"]["_encstr_B1EE0E6F6BE28E18A99D613EC48180C5"] = &"_encstr_8B180F530AF21929253545FA90313DA711";
}

onplayerconnect( var_0 )
{
    var_0 thread onplayerspawned();
}

onplayerspawned()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    for (;;)
        self waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_975918C31EE3D77E4590723AA8B1B9ABB8FD564CAEEB57C30FF0", 0 );
    scripts\mp\utility\game::registerroundswitchdvar( "_encstr_BA9E08864ABFF0971F0A", 0, 0, 9 );
    setdynamicdvar( "_encstr_AA1D178B3E9A115ED37FDDDF875A88A02F1390E165F9C8038B", 1 );
    scripts\mp\utility\game::registerroundlimitdvar( "_encstr_BA9E08864ABFF0971F0A", 1 );
    setdynamicdvar( "_encstr_9C3715523E7561FBD3A8131F90498FAB3BC01D4C91EB0B", 1 );
    scripts\mp\utility\game::registerwinlimitdvar( "_encstr_BA9E08864ABFF0971F0A", 1 );
    setdynamicdvar( "_encstr_A8FD15CD6C27FAB14E58E6B65991D70D0BC699E8D2D656", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_BA9E08864ABFF0971F0A", 0 );
    setdynamicdvar( "_encstr_806414F3D8256937FB1FC6CB2501FF6A8D209ACA08D3", 0 );
}

onstartgametype()
{
    setclientnamemode( "_encstr_95900C2EDBD01F99D6B1DFEB878D" );

    if ( !isdefined( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
        game["_encstr_A6D60EE09BF413B9945185CB4797C583"] = 0;

    if ( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] )
    {
        var_0 = game["_encstr_941C0A6AF345075ED05BEAD3"];
        var_1 = game["_encstr_95A70AA81FEE295D3A2F56DE"];
        game["_encstr_941C0A6AF345075ED05BEAD3"] = var_1;
        game["_encstr_95A70AA81FEE295D3A2F56DE"] = var_0;
    }

    var_2 = &"_encstr_B1660F0D95899DE0E55B9BAF1730E9D111";
    var_3 = &"_encstr_BA01157920948365435134856386AFD3CA99E191683A4B";
    var_4 = &"_encstr_BC1A14CFE1BCBDC8A9A39B47B677410107A14B5FF917";

    if ( !level.teambased )
    {
        var_2 = &"_encstr_AA3F0EE00A63E5D743C8D14141B5013C";
        var_3 = &"_encstr_8AE914F56D7165283D8353175F78A09531D77E4DC751";
        var_4 = &"_encstr_9EBF1357C3686DC98C8C2F45222F29B1D113D3CD33";
    }

    foreach ( var_6 in level.teamnamelist )
    {
        scripts\mp\utility\game::setobjectivetext( var_6, var_2 );

        if ( level.splitscreen )
            scripts\mp\utility\game::setobjectivescoretext( var_6, var_2 );
        else
            scripts\mp\utility\game::setobjectivescoretext( var_6, var_3 );

        scripts\mp\utility\game::setobjectivehinttext( var_6, var_4 );
    }

    initspawns();
    cranked();
}

initspawns()
{
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );

    if ( level.teambased )
    {
        scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_AA1608C17786F13312D3", "_encstr_A8E80F2F633A9549FE2228CDCB8CA0C052" );
        scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
        scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_B1090D98F3211171B757B62F41F7F8" );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_B1090D98F3211171B757B62F41F7F8" );
        scripts\mp\spawnlogic::registerspawnset( "_encstr_930E073E8FC00DDF69", "_encstr_B1090D98F3211171B757B62F41F7F8" );
        scripts\mp\spawnlogic::registerspawnset( "_encstr_A30C093385361B4CB06C6D", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997" );
    }
    else
    {
        scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_828B0BBCD23709257593B1A00A", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_89550C9DFF778ABD3E40236F4830" );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_89550C9DFF778ABD3E40236F4830" );
        scripts\mp\spawnlogic::registerspawnset( "_encstr_930E073E8FC00DDF69", "_encstr_89550C9DFF778ABD3E40236F4830" );
        scripts\mp\spawnlogic::registerspawnset( "_encstr_A30C093385361B4CB06C6D", "_encstr_98891618B3CF9DC071D37953FFE589DECF7AD0E05A8FCE28" );
    }

    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
}

getspawnpoint()
{
    if ( level.teambased )
    {
        var_0 = self.pers["_encstr_89EF05D46BA8FD"];

        if ( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] )
            var_0 = scripts\mp\utility\game::getotherteam( var_0 )[0];

        if ( scripts\mp\spawnlogic::shoulduseteamstartspawn() )
        {
            var_1 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_A9BD0ED638EBA391DAFACDC10BBB9BBE" + var_0 + "_encstr_A4810727CEFBF7F281" );
            var_2 = scripts\mp\spawnlogic::getspawnpoint_startspawn( var_1 );
        }
        else
            var_2 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, "_encstr_930E073E8FC00DDF69", "_encstr_A30C093385361B4CB06C6D" );
    }
    else if ( level.ingraceperiod )
    {
        var_1 = scripts\mp\spawnlogic::getteamspawnpoints( self.team );
        var_2 = scripts\mp\spawnlogic::getspawnpoint_random( var_1 );
    }
    else
        var_2 = scripts\mp\spawnlogic::getspawnpoint( self, "_encstr_AABA05236DC831", "_encstr_930E073E8FC00DDF69", "_encstr_A30C093385361B4CB06C6D" );

    return var_2;
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_0 cleanupcrankedtimer();
    var_6 = scripts\mp\rank::getscoreinfovalue( "_encstr_A88210D6A90F3D25F8D0E6E26BA7DD9D3623" );

    if ( isdefined( var_1.cranked ) )
    {
        var_6 = var_6 * 2;
        var_7 = "_encstr_B66A0D30CAEB61A9963A83E55B7F38";
        var_1 thread onkill( var_7 );
        var_1.pers["_encstr_AA560B03BB08757F4351126AFB"]++;
        var_1 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_AA560B03BB08757F4351126AFB", var_1.pers["_encstr_AA560B03BB08757F4351126AFB"] );
    }
    else if ( scripts\mp\utility\player::isreallyalive( var_1 ) )
        var_1 makecranked( "_encstr_9D800E9895D94B37AFD89C58DCD6958C" );

    if ( isdefined( var_0.attackers ) && !isdefined( level.assists_disabled ) )
    {
        foreach ( var_9 in var_0.attackers )
        {
            if ( !isdefined( scripts\mp\utility\damage::_validateattacker( var_9 ) ) )
                continue;

            if ( var_9 == var_1 )
                continue;

            if ( var_0 == var_9 )
                continue;

            if ( !isdefined( var_9.cranked ) )
                continue;

            var_9 thread onassist( "_encstr_AD300F52D8A764F7BB804B52A7C0AFAF21" );
        }
    }

    if ( level.teambased )
        level scripts\mp\gamescore::giveteamscoreforobjective( var_1.pers["_encstr_89EF05D46BA8FD"], var_6, 0 );
    else
    {
        var_11 = 0;

        foreach ( var_9 in level.players )
        {
            if ( isdefined( var_9.score ) && var_9.score > var_11 )
                var_11 = var_9.score;
        }
    }
}

cleanupcrankedtimer()
{
    self setclientomnvar( "_encstr_9B4C27CD7BCFFE9A58FB8FA004CE693508FEC7ABB120B205DEF81D0B97C0FB80434F12156B689505E0", 0 );
    self.cranked = undefined;
    self.cranked_end_time = undefined;
}

ontimelimit()
{
    var_0 = scripts\mp\gamescore::gethighestscoringteam();

    if ( game["_encstr_A96D0726D4272B4372"] == "_encstr_AA6D09DBD92B93E8D2D695" )
        var_0 = "_encstr_A1AB087390A396A22BC5";
    else if ( var_0 == "_encstr_8A190423A45D" )
        var_0 = "_encstr_AA6D09DBD92B93E8D2D695";

    thread scripts\mp\gamelogic::endgame( var_0, game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_A40B13A3B4AD56AFD896B5D28EF593AC0BC6A15632"] );
}

onplayerscore( var_0, var_1 )
{
    if ( var_0 != "_encstr_956D0BE65DC195C9BEB5A563B1" && issubstr( var_0, "_encstr_97D70583536853" ) )
    {
        var_2 = scripts\mp\rank::getscoreinfovalue( "_encstr_A88210D6A90F3D25F8D0E6E26BA7DD9D3623" );

        if ( isdefined( var_1.cranked ) )
            var_2 = var_2 * 2;

        return var_2;
    }

    return 0;
}

cranked()
{
    level.crankedbombtimer = 30;
}

makecranked( var_0 )
{
    scripts\mp\utility\dialog::leaderdialogonplayer( var_0 );
    thread scripts\mp\rank::scoreeventpopup( var_0 );
    setcrankedbombtimer( "_encstr_97D70583536853" );
    self.cranked = 1;
    scripts\mp\utility\perk::giveperk( "_encstr_B9FE151A83CF7E72792BC5D85FBB632B045BEBE0AF06AA" );
    scripts\mp\utility\perk::giveperk( "_encstr_9E29141ED83FC163EE7A60CB218203D88F7B2D16218F" );
    scripts\mp\utility\perk::giveperk( "_encstr_A14F1612C3E0AB520F61634F1FA49AF3D088CFDF38287EBA" );
    scripts\mp\utility\perk::giveperk( "_encstr_9F891DC3FB723B306010230B10A6F047D1239BE654E3A0BE9DF798061FE263" );
    scripts\mp\utility\perk::giveperk( "_encstr_821213B263400BF2EF8183AFFF813A52188BEC3D18" );
    scripts\mp\utility\perk::giveperk( "_encstr_B1AC14370756C62D581B1D97FA5CD5A5366DB9EEB007" );
    scripts\mp\utility\perk::giveperk( "_encstr_976D1292779B62317163BB9781EBE48A71029F4A" );
    self.movespeedscaler = 1.2;
    scripts\mp\weapons::updatemovespeedscale();
}

onkill( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    while ( !isdefined( self.pers ) )
        waitframe();

    thread scripts\mp\utility\points::giveunifiedpoints( var_0 );
    setcrankedbombtimer( "_encstr_97D70583536853" );
}

onassist( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    thread scripts\mp\rank::scoreeventpopup( var_0 );
    setcrankedbombtimer( "_encstr_A9BD0716B96E4BCDE8" );
}

watchbombtimer( var_0 )
{
    self notify( "_encstr_88CE0FDDB08E361A24DBD6314596B5B2C9" );
    self endon( "_encstr_88CE0FDDB08E361A24DBD6314596B5B2C9" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = 5;
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( var_0 - var_1 - 1 );
    scripts\mp\utility\dialog::leaderdialogonplayer( "_encstr_87A712F1643668E87BC79FBFD332C671F4FF794B" );
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 1.0 );

    while ( var_1 > 0 )
    {
        scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 1.0 );
        var_1--;
    }

    if ( isdefined( self ) && scripts\mp\utility\player::isreallyalive( self ) )
    {
        self playsound( "_encstr_A636183339C29D7D9D9C56E6852356F5CAE183B17DE8930BE6B9" );
        scripts\mp\utility\damage::_suicide();
        self setclientomnvar( "_encstr_9B4C27CD7BCFFE9A58FB8FA004CE693508FEC7ABB120B205DEF81D0B97C0FB80434F12156B689505E0", 0 );
    }
}

setcrankedbombtimer( var_0 )
{
    var_1 = level.crankedbombtimer;

    if ( var_0 == "_encstr_A9BD0716B96E4BCDE8" )
        var_1 = int( min( ( self.cranked_end_time - gettime() ) / 1000 + level.crankedbombtimer * 0.5, level.crankedbombtimer ) );

    var_2 = var_1 * 1000 + gettime();
    self setclientomnvar( "_encstr_9B4C27CD7BCFFE9A58FB8FA004CE693508FEC7ABB120B205DEF81D0B97C0FB80434F12156B689505E0", var_2 );
    self.cranked_end_time = var_2;
    thread watchcrankedhostmigration();
    thread watchbombtimer( var_1 );
    thread watchendgame();
}

watchcrankedhostmigration()
{
    self notify( "_encstr_A6911A3F1FD91B634726F0DB9349D073F8036C73994F7A02E97B4805" );
    self endon( "_encstr_A6911A3F1FD91B634726F0DB9349D073F8036C73994F7A02E97B4805" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level waittill( "_encstr_A33F15D07BB93AEBB6B43B9C2C472D7BDC7D4C59765ADC" );
    self setclientomnvar( "_encstr_B7061965C3E9CED3AFE89A62B1E883046BB3FAC74F181523CFA162", 1 );
    var_0 = scripts\mp\hostmigration::waittillhostmigrationdone();
    self setclientomnvar( "_encstr_B7061965C3E9CED3AFE89A62B1E883046BB3FAC74F181523CFA162", 0 );

    if ( var_0 > 0 )
        self setclientomnvar( "_encstr_9B4C27CD7BCFFE9A58FB8FA004CE693508FEC7ABB120B205DEF81D0B97C0FB80434F12156B689505E0", self.cranked_end_time + var_0 );
    else
        self setclientomnvar( "_encstr_9B4C27CD7BCFFE9A58FB8FA004CE693508FEC7ABB120B205DEF81D0B97C0FB80434F12156B689505E0", self.cranked_end_time );
}

watchendgame()
{
    self notify( "_encstr_87470D2BD2130EF8E7DE612FF9D5A8" );
    self endon( "_encstr_87470D2BD2130EF8E7DE612FF9D5A8" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    for (;;)
    {
        if ( game["_encstr_A9AD064B0D19E377"] == "_encstr_B9E70983DEE6D1760BB5CA" || level.gameended )
        {
            self setclientomnvar( "_encstr_9B4C27CD7BCFFE9A58FB8FA004CE693508FEC7ABB120B205DEF81D0B97C0FB80434F12156B689505E0", 0 );
            break;
        }

        wait 0.1;
    }
}
