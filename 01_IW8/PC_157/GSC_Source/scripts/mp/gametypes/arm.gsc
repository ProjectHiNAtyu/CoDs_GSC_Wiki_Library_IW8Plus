// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    if ( getdvar( "_encstr_9E700851BEE33DF1B547" ) == "_encstr_8A510E519897A1332E4A3898E243F5B9" )
        return;

    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    var_0[0] = scripts\mp\utility\game::getgametype();
    var_0[1] = "_encstr_A919048E91AD";
    scripts\mp\gameobjects::main( var_0 );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 300 );
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 2400 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
    }

    setdvar( "_encstr_A2811F37B19CF5EC2C6B95AFCDC1C2BB371B0BDA95E458D79927B7E63A36B4CD2B", 0 );
    setdvar( "_encstr_BD79152FA04A8F17E439C0C79F9C0B667C9064B7F02C62", 1 );
    setdvar( "_encstr_896F1BB96C9CBEC9EAE6D8955873D7DAC23CF5D1593686B9966C0B1B9B", 30 );
    setdvar( "_encstr_8FEF136ED84E7D161BD8BD77F5D9CA345AD88DB2B9", 1 );
    setdvar( "_encstr_A9380B98A96A96F4A951152D2D", 0 );
    setomnvar( "_encstr_B65111AFABD892056B8E478DE0B95EEAAFDFCF", 5 );
    updategametypedvars();
    level.scoreperplayer = undefined;
    level.teambased = 1;
    level.onstartgametype = ::onstartgametype;
    level.onplayerconnect = ::onplayerconnect;
    level.getspawnpoint = ::getspawnpoint;
    level.modeonspawnplayer = ::onspawnplayer;
    level.onplayerkilled = ::onplayerkilled;
    level.onrespawndelay = ::getrespawndelay;
    level.onnormaldeath = ::onnormaldeath;
    level.onobjectivecomplete = _encstr_AD711DA7CF63F3C8248AB8C87257B83F4A3F513B1BBA466A4CE5F8A85FD3A0::onflagcapture;
    level.updatefobspawnselection = ::updatefobspawnselection;
    level.lastcaptime = gettime();
    level.alliescapturing = [];
    level.axiscapturing = [];
    level.lastcaptureteam = undefined;
    level.previousclosespawnent = undefined;
    level.promode = 1;
    level._id_12C49 = 1;
    level.requiredplayercount["_encstr_BC850785638DA59537"] = 24;
    level.requiredplayercount["_encstr_BA840579D3F7F6"] = 24;
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_B7BC133FA808CDEB438FE7117C3D12853028C7AFA8";

    if ( getdvarint( "_encstr_B8020A9E9AA69A6292517AA0" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_891904A1D8BE" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];
    else if ( getdvarint( "_encstr_93570B93F4A9629272A825B426" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_889708C9D0E7EBE819D9" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];
    else if ( getdvarint( "_encstr_B4050C8B3E9A11DD626FD1CBDB5A" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_B81804D2C101" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];
    else if ( getdvarint( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_9EB909B928022745805102" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] + "_encstr_934305E6126268";

    game["_encstr_B8DA073D799798C7C7"]["_encstr_9E240C10CE33016D6AEA39B0F244"] = "_encstr_9D3410D687578319218A90704385E1DBC722";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B3420C3D576AC3C8736F09906BB2"] = "_encstr_9D3410D687578319218A90704385E1DBC722";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_82CF0EC793BAB0234DF2BB739D297055"] = "_encstr_82CF0EC793BAB0234DF2BB739D297055";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B4150DDE894DF5D816E0E85DE45923"] = "_encstr_B4150DDE894DF5D816E0E85DE45923";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9B270B734D912F6A23989229D8"] = "_encstr_9B270B734D912F6A23989229D8";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_97270B9B02A39BC5491A2FD8F1"] = "_encstr_97270B9B02A39BC5491A2FD8F1";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_94270B37ACB1EAC9D2E6D9AFB1"] = "_encstr_94270B37ACB1EAC9D2E6D9AFB1";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_A1270B9B5936BA394BB9B3D719"] = "_encstr_A1270B9B5936BA394BB9B3D719";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_8B270B82F1402D73FB95DF47FB"] = "_encstr_8B270B82F1402D73FB95DF47FB";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9B010A6BE98E8008E8A95961"] = "_encstr_9B010A6BE98E8008E8A95961";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_AD010AA0AF5B9BD57A3FB026"] = "_encstr_AD010AA0AF5B9BD57A3FB026";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_94010A27C08185D333CDD1D6"] = "_encstr_94010A27C08185D333CDD1D6";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_AA010A37CA1BD527B2197DC8"] = "_encstr_AA010A37CA1BD527B2197DC8";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_82010A3F3B5EBB9AC8510197"] = "_encstr_82010A3F3B5EBB9AC8510197";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_ADDC095B9083991237505E"] = "_encstr_ADDC095B9083991237505E";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_82DC09F83D8641927FE903"] = "_encstr_82DC09F83D8641927FE903";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_AADC09DB10031992B7D05E"] = "_encstr_AADC09DB10031992B7D05E";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B3DC0936EDCD96B99D7D91"] = "_encstr_B3DC0936EDCD96B99D7D91";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_A9DC097580F00182ECE7C7"] = "_encstr_A9DC097580F00182ECE7C7";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_A36807BA7B9F6B0F41"] = "_encstr_A36807BA7B9F6B0F41";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_88680789658B515ED2"] = "_encstr_88680789658B515ED2";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_876807E02FEF41687E"] = "_encstr_876807E02FEF41687E";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_A86807335ABBB5973B"] = "_encstr_A86807335ABBB5973B";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B8680763F69BD17DAC"] = "_encstr_B8680763F69BD17DAC";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_8FDE09E87A52797E1FCC91"] = "_encstr_A2C6143B85D659CDE8B0D1567D19BDDA36EDDCA5DCEC";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_BCCF0B9B32A76F6315371FFA9A"] = "_encstr_A3EB155C9147591FE312A838E93FEF9097315040E12341";
    level._effect["_encstr_9BB20F6B38F9D1CF5042AF9B6B3973E669"] = loadfx( "_encstr_A9162956EDE0ED5716992B13E1EEB3B20253E8F777C085673F9022DB804403A829177D5BEFE8CC27E829EA" );
    level._effect["_encstr_ADA412C69CA2D77A7BC061BBC8B7F5E7D8E85F5A"] = loadfx( "_encstr_AB2E2C3B990F5EFAE4565C5DB29B47B979DAE0FAB3C2D695E0B1C2E579B399F0F56EB5B6FA6E2DECE60BC6F5B39C" );
    level._effect["_encstr_A940187BD419198338F0D38750F6490223D652B9CE4952CD4178"] = loadfx( "_encstr_BE603067CC1EF22DEE1C7DD60EBCEC855B955BDE32B2E59DCCC3EBCDCD58D11B34AF85D826CC81AFD8C6DEAE2337C5B33387" );
    level._effect["_encstr_B9091AD9333CAF264EF5A5DC33D21BF5C61BF6D519BECD364EB7C68D"] = loadfx( "_encstr_A98D38B3CCC3F25ABBC1EBC44EF2CEC2DA2B07D8C2975ED2DC995AC6F2EC9987AF2627AF5ACD665AC6FA6CC6EDEA32D737C6C97B368DC53B66F0" );
    level._effect["_encstr_BE771B95E3FBD090FA59B8503FD9D86872372BE16F1381300B2F66A3F2"] = loadfx( "_encstr_877B39CECC1E7996DD83EBC4C9BCEC856BB207D8B0E5E52D9BCCB4D897CECCC3D789C9BED29BCC2D637D4DABDA0ED7B96BDEADACD706985CB3333C" );
    level._effect["_encstr_82BE1ABBB60277F232D1B328F84AE037308F19797F775823A92F8211"] = loadfx( "_encstr_977D38D933E1BC96DD83F513E4CBB3856BB2388D0B5E79B4739996B179CE99E1F5C44ED74BCD99D236BE35BAD6077D77A5DC1CF5C013E23BCC1E" );
    level._effect["_encstr_ADBE1AEB42C3B0088A4FDBDD9EB4807863EBAD9379A7D3C82277719D"] = loadfx( "_encstr_87913855233B2888BFC03E917ADFC0B7C2B7D199D7F3E0C0CE2FE068356E337399034D774FEA1C18144988434D30912C523FC1EF4297F0A83698" );
    level._effect["_encstr_A26618A07208A751EB779B3726EFD8DFB5AAF8D059A503095B64"] = loadfx( "_encstr_AD5E36F87B30E77BAF98CE4E8E2741D9286FEB2BDA41963310494C8430D840F82F55B6FF3B982114D85768B3C5B09E2880CFE8281D3C638B" );
    level._effect["_encstr_9B89187BC48827C9A2D7812833845191938288B83F04D3F948E5"] = loadfx( "_encstr_97813623C8F22F92E713C1861E6F4A29F848B333988A975A3DC4543DA8B512E846D82377608016026170DA32E06959B42808C343B23B4EDB" );
    level.nukeselectactive = getdvarint( "_encstr_827419B9C6C9BEC2C9B5FA37BAB5CAA9B2B1591BD1A0C6E896CE56", 0 );
    level.killstoearnnukeselect = getdvarint( "_encstr_A3B51E0BC63B0F368D08A9E24B992DE797B84591E6CD83FB4750511A50D32633", 7 );
    level.useobjectives = getdvarint( "_encstr_A23B16B9D8E4BE8539B5EBABCD95A7314D2B36E8B43BB2DC", 1 );
    level.userallypointvehicles = getdvarint( "_encstr_8A841B6EB14EFA1627ADD739B0B1D8F282F65AE61D65CAA1B4361BCADC", 1 );
    level.hideenemyhq = getdvarint( "_encstr_81D214070FFE31A1281879BCB0B0ED2858ABE7A7A1B7", 0 );
    level.hideenemyfobs = getdvarint( "_encstr_9E27161ECB6346732A6A398842C7235DBB75A993066F2D9F", 0 );
    level.disablelittlebirdrally = getdvarint( "_encstr_BD711F2308F5D98F4B49A79453B3575E6180581AD8814DD765A3728CE6992B6593", 1 );
    level.completelyremovelittlebird = getdvarint( "_encstr_BDFC232A9960AFFADE3BA75F1709B3C4B003277572D95DF2B81577FB63AD3B0C686D5C7A49", 0 );
    level.move_spawnpoints_to_valid_positions = getdvarint( "_encstr_B13A1B13491E5776A0E31F2D8D50FEC3CD040AEB33F9776640C55C1DE7", 0 );
    level.usec130spawn = getdvarint( "_encstr_AA4E1696F60B970952AFE9A0CF9D8583E7CA1E9FCEF3AD33", 0 );
    level.usec130spawnfirstonly = getdvarint( "_encstr_88031B53AE53674EF560F1CA7A8FD29FCB07DFF6A458AB92D159EA3210", 0 );
    level.c130movementmethod = getdvarint( "_encstr_B9C4131A0ADAD9725B203F48FF9BBFDF551BEBBAEF", 0 );
    level.c130flightdist = getdvarfloat( "_encstr_B45E179B2F783977CE50F13A3386EAA72083071869B1FC77F5", 4000 );
    level.c130distapart = getdvarfloat( "_encstr_A4F416CA5FA3699B1BD87747791E6F49CB7B23573B276D2D", 5000 );
    level.c130alignedtolocale = getdvarfloat( "_encstr_9CF31CBB26E3DF8FE65251D769DF12FD2CB3EFAE572189A89C48588BB925", 1 );
    level.dropbrloot = getdvarint( "_encstr_B88913B076B20980CAAF79D8DD302BCB9B6130976C", 0 );
    level.spawnselectionshowenemy = getdvarint( "_encstr_8FE61CAB1F48092FDFC1831A6FBDAB7F28A9390FAD198C17047D0A52B08B", 0 );
    level.spawnselectionshowfriendly = getdvarint( "_encstr_81841FCDD827AFE6E02CDDB9A9596395C6474BDBCDA90D7BEE19C9B42BCD3236CB", 0 );
    level.usesquadleader = getdvarint( "_encstr_AF7617F79F33B810527DC69BE22DC9E73BFF41013FAAFDC88A", 1 );
    level.spawnsquadleaderonly = getdvarint( "_encstr_B2D91D7B22DBA00B9A6D4717988668F0F7BB33A13A5BE548377DE577BEAD50", 0 );
    level.usestaticspawnselectioncamera = getdvarint( "_encstr_95541A6ED893FA85C9B5FADC1D0BE896C6A9C1C2DDDC1AB0DA95E485", 0 );
    level.useunifiedspawnselectioncameraheight = getdvarint( "_encstr_8F28210BBFE8A907BE2061ABAB1F675DC9239D65F52863F3EBB91AF231F3675410991C", 1 );
    level.forcetopickafob = getdvarint( "_encstr_AA851686A628F9B93D6221D9D742A668D90B33773874E890", 0 );
    level.maxhqtanks = getdvarint( "_encstr_89FB13ABF1A6DFFE386BE7AD0B10CCAFDD29F2925B", 2 );
    level._id_13A58 = getdvarint( "_encstr_B82718B936E4D71639ADEB3A589B5BA4CAB9E00BDDDC455AD659", 120 );
    level.c4_obj_and_progress_clear = getdvarint( "_encstr_98F9175B01560F2EE85BD7F179B83A2F7EDBF283C83D8F6578", 120 );
    level.longdialoguecooldown = getdvarint( "_encstr_81851DCDD827AFC2E4AD7DB1B79B3B11D21663DBECBAAC1ADEBDB1327BEE37", 1 );
    level._id_11BD2 = getdvarint( "_encstr_823E18F7C338A15F83A32110CFF0D28F9755119CA3CCDB350B2A", 1 );
    level._id_11BD3 = getdvarint( "_encstr_A286183B61366F4E88FB775DF3D096BFC5B8C20268049B8498C3", 30 );
    level._id_11F41 = getdvarint( "_encstr_80EE1C73F35E1977AD3D57861B15FD18529EA1DA51D10E8FA87B2F392F9A", 25 );
    level.loadout_updateclassdefault_weapons = getdvarint( "_encstr_9B491CCB7E7BF15EC0F7E7A8094B0976283FFB89AAD0123D19B0154FFFC1", 0 );
    level._id_12305 = getdvarint( "_encstr_B9BB1D376CE4D71C9527DCDECDC2D8725D5B95D0F66EE83D672B2727D219B2", 30 );
    level._id_13377 = getdvarint( "_encstr_9ECD16EB26DBEFD66DE8894328BF8B1B919F4D444F20771A", 1 );
    level._id_13375 = getdvarint( "_encstr_95941CAA19E02F7A5EBB279F9988437C3021A5FDF068CC623DFDC783F9AE", 1 );
    level._id_1369C = getdvarint( "_encstr_BC6A1E7A07DAEF2A929991D303F7DB4557BFE96ADFB0FC57285EB5A3D1AA308F", 120 );
    level._id_11AC5 = getdvarint( "_encstr_8CEB2357D33251176B4A7E2092C3D5684D09F1FD6DDA50F96FF313083A5B8388E7AC1F67F3", 1 );
    level.matchdata_logvictimkillevent = getdvarint( "_encstr_B9C0161A0ADAD9725B203F701A309D27404A64AA64201157", 0 );
    level.matchdata_logscoreevent = getdvarint( "_encstr_A9B21C63A2ADB919C3552828B8C8E89278A6EF4881B3DED99DB16AA7963F", 0 );
    level._id_1408C = getdvarint( "_encstr_A30516DF6FF551191A4DCFD3339571171087FBD7E2DB7903", 1 );

    if ( istrue( level._id_13377 ) )
    {
        level._id_13C4A = [];
        level._id_13C4A["_encstr_BA840579D3F7F6"] = [];
        level._id_13C4A["_encstr_BC850785638DA59537"] = [];
    }

    if ( istrue( level._id_13375 ) )
    {
        level._id_13C49 = [];
        level._id_13C49["_encstr_BA840579D3F7F6"] = [];
        level._id_13C49["_encstr_BC850785638DA59537"] = [];
        level._id_13C49["_encstr_9B770A4B68F1CDC76133659C"] = [];
    }

    if ( level.useobjectives || level.userallypointvehicles || level.usesquadspawnselection )
    {
        setdvar( "_encstr_AAF21BE3579341072F08FA41137E4702683B7F76CF1055F7C603324A18", 1 );
        setdvar( "_encstr_9BA71C4AF9D39E1FB7C3825F8B68A6C102D0DAD3E92F8BC0D967A2FF82A3", 0 );
        setdvar( "_encstr_A6771ADC369C7DCE0BD656FADCE02CDDB9B1B0B556C916AF9BB90BE0", 1 );
    }
    else
    {
        setdvar( "_encstr_AAF21BE3579341072F08FA41137E4702683B7F76CF1055F7C603324A18", 0 );
        setdvar( "_encstr_9BA71C4AF9D39E1FB7C3825F8B68A6C102D0DAD3E92F8BC0D967A2FF82A3", 1 );
        setdvar( "_encstr_A6771ADC369C7DCE0BD656FADCE02CDDB9B1B0B556C916AF9BB90BE0", 1 );
    }

    if ( level.dropbrloot )
        level.blockweapondrops = 1;

    if ( level.c130movementmethod == 1 )
    {
        level.c130pathkilltracker = [];
        level.c130pathkilltracker["_encstr_BA840579D3F7F6"] = 0;
        level.c130pathkilltracker["_encstr_BC850785638DA59537"] = 0;
    }

    level.modecontrolledvehiclespawningonly = 1;
    level.disableteamstartspawns = 1;
    level._id_1368D = ::_id_1368D;
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_A491156EC69CBE98E8DAF54FBDE69589A53359D12DB695", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_AB550D1AE890CF458378127B78F347" ) );
    setdynamicdvar( "_encstr_B89C18A3887559030BC9270AD090C796FBA85B5B6823C367AD25", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_A4CE10EA521B2D81CEE0616B0A37C1E3FF6A" ) );
    setdynamicdvar( "_encstr_B9AC1CCD364EEB2647D6EB3DDBE6B205C68E969D588E4BDEB922CA63852F", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_B34B147AED56109F729B83B5E72BC3F8FE8F01309699" ) );
    setdynamicdvar( "_encstr_9C901C6A4F5D771AF35FD90BD205D7104D49E7EEB7815BA76A575559E736", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_979F1493857391ED5B62EDB10B47B4F6737A9C23569C" ) );
    setdynamicdvar( "_encstr_8BC918BB0F58195BED7011FA79CDAF0B68DD2503A7081A3F9829", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_939C10162319D21D9667AC35C6DE9C96B9D9" ) );
    setdynamicdvar( "_encstr_81281243179D8EF37D629FB1B1032A236CA8C763", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_82FE0AEBC1553FAF59D36575" ) );
    setdynamicdvar( "_encstr_ABC3144BA7C370962CB5593BC261E8A2C0C912733562", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_9D210C2D459309DB3AF230881ACA" ) );
    setdynamicdvar( "_encstr_9EF213A2E962292E689B2F7BE3524871CEB829C5B3", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_822F0B5D6ECA211592D5B12B6E" ) );
    setdynamicdvar( "_encstr_BE16133BF60B3FA6D158D91398D3DB43616DBCA113", getmatchrulesdata( "_encstr_9785091D3F72ED9579C30B", "_encstr_A2A10B53E0A383E3DDFD24218B" ) );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_BD19047616EB", 0 );
}

onstartgametype()
{
    if ( !isdefined( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
        game["_encstr_A6D60EE09BF413B9945185CB4797C583"] = 0;

    setclientnamemode( "_encstr_95900C2EDBD01F99D6B1DFEB878D" );
    level.objectives = [];
    level.uncapturableobjectives = [];
    initspawns();
    seticonnames();
    level.usedomflag = 0;
    level.killstreakqueue = [];
    level.teamkillstreakqueue = [];
    level.teamkillstreakqueue["_encstr_BC850785638DA59537"] = [];
    level.teamkillstreakqueue["_encstr_BA840579D3F7F6"] = [];
    level.killstreaklist = [];
    level.killstreaklist[4] = [ "_encstr_B87010AA3BE80F83CFA7075A6D614F65EDBB", "_encstr_970316AA19E011BA56B9CF9BF70D134768A1293773C0CAE2" ];
    level.killstreaklist[3] = [ "_encstr_B7F514E0C9AC364BE65ADEB9BEB05A279BA327D2ADB2", "_encstr_B48810D6EA631D2DF5855AE4E61D932D5B95", "_encstr_A2C00813C958328DB297" ];
    level.killstreaklist[2] = [ "_encstr_8CE60CA3DE5BC2AFB98EC94B6D59", "_encstr_AF330F47C0F793D23B32CF4A6D0E7592DA", "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", "_encstr_ABFD089D57CD370DD21C" ];
    level.teamkillstreakqueue["_encstr_BC850785638DA59537"] = [ "_encstr_B87010AA3BE80F83CFA7075A6D614F65EDBB", "_encstr_B7F514E0C9AC364BE65ADEB9BEB05A279BA327D2ADB2", "_encstr_B87010AA3BE80F83CFA7075A6D614F65EDBB" ];
    level.teamkillstreakqueue["_encstr_BA840579D3F7F6"] = [ "_encstr_B87010AA3BE80F83CFA7075A6D614F65EDBB", "_encstr_B7F514E0C9AC364BE65ADEB9BEB05A279BA327D2ADB2", "_encstr_B87010AA3BE80F83CFA7075A6D614F65EDBB" ];
    level thread setupwaypointicons();
    debug_setupmatchdata();
    _id_1324D();
    calculatehqmidpoint();

    if ( istrue( level.useobjectives ) )
        setupobjectives();

    level thread runobjectives();

    if ( level.usec130spawn )
        level thread managec130spawns();

    if ( istrue( level.userallypointvehicles ) )
    {
        scripts\mp\rally_point::init();
        level thread init_rallyvehicles();
    }

    thread init_groundwarvehicles();
    level thread updatedomscores();
    scripts\mp\utility\dialog::initstatusdialog();

    if ( istrue( level._id_11BD2 ) )
        level thread _id_11EEE();

    monitordriverexitbutton();

    if ( istrue( level._id_1408C ) )
        scripts\cp_mp\vehicles\vehicle_compass::calloutmarkerping_init();

    scripts\cp_mp\parachute::initparachutedvars();
}

updategametypedvars()
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
    level.pausescoring = scripts\mp\utility\dvars::dvarintvalue( "_encstr_82FE0AEBC1553FAF59D36575", 1, 0, 1 );
    level.delayplayer = scripts\mp\utility\dvars::dvarintvalue( "_encstr_9D210C2D459309DB3AF230881ACA", 1, 0, 1 );
    level.spawndelay = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_A2A10B53E0A383E3DDFD24218B", 5, 0, 30 );
    level.usehqrules = 1;
    level.flagcapturetime = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_A6BB1009B968DFBE478AD4DB160751D26AAF", 30, 0, 30 );
    level.flagsrequiredtoscore = scripts\mp\utility\dvars::dvarintvalue( "_encstr_AAB015FA102F3F7A397BC9B51B40877BDDE82112D87ECF", 1, 1, 3 );
    level.pointsperflag = scripts\mp\utility\dvars::dvarintvalue( "_encstr_98150E28E078EB53AFC16A1319F94E97", 1, 1, 300 );
    level.flagneutralization = scripts\mp\utility\dvars::dvarintvalue( "_encstr_8A23138D6896BC27D09390DB7E19B96A87F3C7F7E8", 0, 0, 1 );
    level.precappoints = scripts\mp\utility\dvars::dvarintvalue( "_encstr_93730DC19CB268B00E41B75A9BA36E", 0, 0, 1 );
    level.capturedecay = scripts\mp\utility\dvars::dvarintvalue( "_encstr_8F940D4E2779DBD5EB80A32FD8E1A1", 1, 0, 1 );
    level.capturetype = scripts\mp\utility\dvars::dvarintvalue( "_encstr_B1B60CB2A9BF5BD39353F4D15190", 1, 0, 3 );
    level.numflagsscoreonkill = scripts\mp\utility\dvars::dvarintvalue( "_encstr_B2361496EDF09D581B8268FF86386E1815059B7020F9", 0, 0, 3 );
    level.objectivescaler = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_ABFA0A6FE25DC9D3F90853D3", 4, 1, 10 );

    if ( getdvarint( "_encstr_9539140BB1C67BDD7DD15685B6D7E09CDBF0D81AC2E8", 0 ) == 1 )
    {
        setdvar( "_encstr_BDF20B13A58A4129825A419A94", 1 );
        var_0 = 1000;
        var_1 = getdvarint( "_encstr_9E82198310850B98BBCFCD695A23E7FB1B62817B20793A2A41C182", 0 );

        if ( var_1 != 0 )
            var_0 = var_1;

        setdvar( "_encstr_97150B9C729AC46A35722AF48A", var_0 );
    }
}

seticonnames()
{
    level.iconcapture = "_encstr_B69A11DBA05BBA1FB0A0E4D7CE59AB43BBD062";
    level.iconneutral = "_encstr_B6B118EE58F207B7B4DC47EB1BC28347AE93B2B956D5D14E0BD8";
    level.icondefend = "_encstr_944B10F7CF52BBADA31823A97083A7A7E825";
    level.iconcontested = "_encstr_873B13BB58F20EBDD273E8F5367B37E82BB9472BC8";
    level.icondefending = "_encstr_9DE3132797E138B81B68C36FCB2D77234DF5E475E0";
    level.icontaking = "_encstr_A40710BBB02F07B7D2E6D1BE8E165B2D73CE";
    level.iconlosing = "_encstr_9302101F7763CF80699D83FE0547A88BAAC7";
}

monitordriverexitbutton()
{
    scripts\cp_mp\utility\game_utility::_id_12C10( "_encstr_9BEE0FB91575405DF7A9B880B18B98280F", "_encstr_B8CE0BE43FC317DF690862BA48" );
    scripts\cp_mp\utility\game_utility::_id_12C10( "_encstr_BE6A0F672B0D968D6359FAECEDB1D5B656", "_encstr_A8ED125A5723AF9B405770989B255F1FF3897A60" );
    scripts\cp_mp\utility\game_utility::_id_12C10( "_encstr_9B511A9B6848217A89E589FBD8A1D3FD3151776FB0E36C82E58B0F77", "_encstr_A8ED125A5723AF9B405770989B255F1FF3897A60" );
    scripts\cp_mp\utility\game_utility::_id_12C10( "_encstr_BEB4068F1B5BA3AB", "_encstr_A8ED125A5723AF9B405770989B255F1FF3897A60" );
    scripts\cp_mp\utility\game_utility::_id_12C10( "_encstr_A4840D7288910FB3B85DB9AA1340BF", "_encstr_A8ED125A5723AF9B405770989B255F1FF3897A60" );
    scripts\cp_mp\utility\game_utility::_id_12C10( "_encstr_BDEE109427E0A6D3B3E0F2E9EB988B1B38AB", "_encstr_B8CE0BE43FC317DF690862BA48" );
    scripts\cp_mp\utility\game_utility::_id_12C10( "_encstr_956314597F77F8B5E579E7D5235601EB221A3C640BF3", "_encstr_B8CE0BE43FC317DF690862BA48" );
    scripts\cp_mp\utility\game_utility::_id_12C10( "_encstr_98650FCD0D858CEDDDBE1363DE6CB65927", "_encstr_B8CE0BE43FC317DF690862BA48" );
    scripts\cp_mp\utility\game_utility::_id_12C11( "_encstr_9F0D1A46DEEDC9FA0E4E96377BB9D7D8951B1BBED6CA3A2C1BF5DA07", 1 );
    scripts\cp_mp\utility\game_utility::_id_12C11( "_encstr_9EF71930D29CF96627F1A908D11F8B6F86DAB80B3B3593F9AEB38F", 1 );
    scripts\cp_mp\utility\game_utility::_id_12C11( "_encstr_A49F189DDF0FFB076332B0F08A7D4FF38F76950117EF633F9ABF", 1 );
    scripts\cp_mp\utility\game_utility::_id_12C11( "_encstr_94291CD6ACAFCAB1CA361D39B48D8563EB4CBD3CEBB9A3E495598E7D0C4C", 1 );
    scripts\cp_mp\utility\game_utility::_id_12C0F( "_encstr_8BA90608F481F0DB" );
    scripts\cp_mp\utility\game_utility::_id_12C0F( "_encstr_AF8E1203C0C30F6ADAFD3753C00A3931079B50BB" );

    if ( isdefined( level.localeid ) && level.localeid == "_encstr_8934097830FBB305B537B2" )
        scripts\cp_mp\utility\game_utility::_id_12C10( "_encstr_8A3409C6F6D82C36B2F5C1", "_encstr_A8ED125A5723AF9B405770989B255F1FF3897A60" );

    var_0 = [];
    var_0[0] = ( -22592, 27367, 1000 );
    var_0[1] = ( -22592, 27303, -448 );
    var_0[2] = ( 7837, -9674, 1154 );
    var_0[3] = ( 7637, -9674, 1154 );
    var_0[4] = ( 7901, -9674, -270 );
    var_0[5] = ( 7701, -9674, -270 );
    var_0[6] = ( 10366, -11606, 66 );
    var_0[7] = ( 10366, -11813, 66 );
    var_0[6] = ( 10366, -11670, -270 );
    var_0[7] = ( 10366, -11877, -270 );
    var_0[8] = ( 7498, -11716, 66 );
    var_0[9] = ( 7498, -11652, -270 );
    var_0[10] = ( -1200, -18954, -242 );
    var_0[11] = ( -1215, -19016, 774 );
    var_1 = getentarray();

    foreach ( var_3 in var_1 )
    {
        if ( isdefined( var_3.model ) && var_3.model == "_encstr_8CB40B4BB398B1C0A81FDF6BEA" )
        {
            var_4 = 0;

            foreach ( var_6 in var_0 )
            {
                if ( var_4 )
                    break;

                if ( distancesquared( var_3.origin, var_6 ) < 144 )
                    var_4 = 1;
            }

            if ( var_4 )
                var_3 delete();
        }
    }
}

_id_12C14()
{
    wait 5;
    var_0 = [];
    var_0[0] = "_encstr_8B1213CB23522B9CD2F9593FF2F020A373F1C367B4";
    var_0[1] = "_encstr_A8FB1401893E406B57C2402E7A3795B8D7F2CFA73F25";
    var_0[2] = "_encstr_B25E0C772143F3C828E2C05A6B72";
    var_0[3] = "_encstr_94BE0EF3E99FBB4DB01A080E0A6AC587";
    var_0[4] = "_encstr_98FB0FAA415DE32FE81BEDE45BC02262DD";
    var_0[5] = "_encstr_B78E0EF21905AB67D0E73F37A9E2384A";
    var_0[6] = "_encstr_9BFB0FC378F91C2A6521D78B2F71A7F98B";
    var_0[7] = "_encstr_A11A09B5ED4086A347BD32";
    var_0[8] = "_encstr_8795086307EB8860FEC3";
    var_0[9] = "_encstr_BE9508C852FB75237E8A";
    var_0[10] = "_encstr_811A09800818A86B2A2266";
    var_0[11] = "_encstr_9F8E0E793ECB078F0D4F9087B46A9F5A";
    var_0[12] = "_encstr_820B110D207F0AC7A8087A6E72C2EAB79DC30E";
    var_0[13] = "_encstr_935E11CDEDCDA59D0DD1899107874C91E03CE0";
    var_0[14] = "_encstr_BA130FDAF6EA73470DB79337569CC4C8E0";
    var_0[15] = "_encstr_8AAF0A5B2C9BA38D2B919A8D";
    var_0[16] = "_encstr_82AF0AEFF7C5FB13C95F770E";
    var_0[17] = "_encstr_A19109A5D1888C325D8532";
    var_0[18] = "_encstr_AD9109BD736A13D110EACE";
    var_0[19] = "_encstr_AA3414CE9589CB95F8F93F01012C4864CFC3A822DF99";
    var_0[20] = "_encstr_B7BA146FA389C18B5794E3DDF95522991148CBEEAA4A";

    foreach ( var_2 in var_0 )
        scripts\cp_mp\utility\game_utility::_id_12C10( var_2, "_encstr_B8CE0BE43FC317DF690862BA48" );
}

debug_setupmatchdata()
{
    level.axishqname = "_encstr_9C6B0EAF178968E0DBB96932A2E73B99";
    level.allieshqname = "_encstr_A4B9109F170167BF36E602DAA89BAF9A11C3";
    level.startingfobnames_allies = [];
    level.startingfobnames_axis = [];
    level.startingfobnames_neutral = [ "_encstr_81790A9DBB7D99DE26D703C4", "_encstr_89790A7F4307BD776690917A", "_encstr_B6790AA097E134607EE0F3A7", "_encstr_9E790AD9EEF599DB13FA0C86", "_encstr_A4790A3BEEEB33DE31AF0CA6" ];
    level.defaultaxisspawn = "_encstr_9C6B0EAF178968E0DBB96932A2E72B98";
    level.defaultaxisspawncamera = "_encstr_9C6B0EAF178968E0DBB96932A2E72B98";
    level.defaultalliesspawn = "_encstr_A4B9109F170167BF36E602DAA89BAF9A1083";
    level.defaultalliesspawncamera = "_encstr_A4B9109F170167BF36E602DAA89BAF9A1083";
}

setupwaypointicons()
{
    while ( !isdefined( game["_encstr_BE9E10EBCBF0CBAA99F8324A08E166BBA8A5"] ) )
        waitframe();

    foreach ( var_2, var_1 in game["_encstr_BE9E10EBCBF0CBAA99F8324A08E166BBA8A5"].tabledatabyref )
    {
        level.waypointcolors[var_2 + "_encstr_95DC0AD75A9B1BDBB65ACD3B"] = "_encstr_9BA4080D39CFFB5AB7C1";
        level.waypointbgtype[var_2 + "_encstr_95DC0AD75A9B1BDBB65ACD3B"] = 1;
        level.waypointstring[var_2 + "_encstr_95DC0AD75A9B1BDBB65ACD3B"] = "_encstr_A40101";
        level.waypointshader[var_2 + "_encstr_95DC0AD75A9B1BDBB65ACD3B"] = var_1["_encstr_BE6C08435D1925C6DE9B"];
        level.waypointpulses[var_2 + "_encstr_95DC0AD75A9B1BDBB65ACD3B"] = 0;
        level.waypointcolors[var_2] = "_encstr_9BA4080D39CFFB5AB7C1";
        level.waypointbgtype[var_2] = 1;
        level.waypointstring[var_2] = "_encstr_B46420C52971DCAB34B570F85E18F3C529AF4F52B5C9965F470FC99165480F4EB9FF";
        level.waypointshader[var_2] = var_1["_encstr_BE6C08435D1925C6DE9B"];
    }
}

_id_1324D()
{
    level.gw_objstruct = spawnstruct();
    level.gw_objstruct.axishqloc = spawnstruct();
    level.gw_objstruct.axishqloc.trigger = scripts\cp_mp\utility\game_utility::getlocaleent( level.axishqname );

    if ( !isdefined( level.gw_objstruct.axishqloc ) )
    {

    }

    level.gw_objstruct.allieshqloc = spawnstruct();
    level.gw_objstruct.allieshqloc.trigger = scripts\cp_mp\utility\game_utility::getlocaleent( level.allieshqname );

    if ( !isdefined( level.gw_objstruct.allieshqloc ) )
        return;
}

setupobjectives()
{
    level.gw_objstruct.startingfobs_allies = [];
    level.gw_objstruct.startingfobs_axis = [];
    level.gw_objstruct.startingfobs_neutral = [];
    var_0 = [ "_encstr_B80703EB16", "_encstr_A40703FA31", "_encstr_950703BF07", "_encstr_8C0703F523", "_encstr_9E07038950" ];
    var_1 = 0;

    foreach ( var_3 in level.startingfobnames_allies )
    {
        var_4 = spawnstruct();
        var_4.name = var_3;
        var_4.trigger = scripts\cp_mp\utility\game_utility::getlocaleent( var_3 );
        var_4.trigger.objkey = var_0[var_1];
        var_1++;
        level.gw_objstruct.startingfobs_allies[level.gw_objstruct.startingfobs_allies.size] = var_4;
    }

    foreach ( var_3 in level.startingfobnames_axis )
    {
        var_4 = spawnstruct();
        var_4.name = var_3;
        var_4.trigger = scripts\cp_mp\utility\game_utility::getlocaleent( var_3 );
        var_4.trigger.objkey = var_0[var_1];
        var_1++;
        level.gw_objstruct.startingfobs_axis[level.gw_objstruct.startingfobs_axis.size] = var_4;
    }

    foreach ( var_3 in level.startingfobnames_neutral )
    {
        var_4 = spawnstruct();
        var_4.name = var_3;
        var_4.trigger = scripts\cp_mp\utility\game_utility::getlocaleent( var_3 );
        var_4.trigger.objkey = var_0[var_1];
        var_1++;
        level.gw_objstruct.startingfobs_neutral[level.gw_objstruct.startingfobs_neutral.size] = var_4;
    }
}

updatedomscores()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = undefined;
    var_1 = undefined;
    level waittill( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    level thread scripts\mp\spawnselection::_id_13FD9();

    while ( !level.gameended )
    {
        wait 10;
        scripts\mp\hostmigration::waittillhostmigrationdone();
        var_2 = getowneddomflags();

        if ( !isdefined( level.scoretick ) )
            level.scoretick = [];

        foreach ( var_4 in level.teamnamelist )
            level.scoretick[var_4] = 0;

        if ( var_2.size )
        {
            for ( var_6 = 1; var_6 < var_2.size; var_6++ )
            {
                var_7 = var_2[var_6];
                var_8 = gettime() - var_7.capturetime;

                for ( var_9 = var_6 - 1; var_9 >= 0 && var_8 > gettime() - var_2[var_9].capturetime; var_9-- )
                    var_2[var_9 + 1] = var_2[var_9];

                var_2[var_9 + 1] = var_7;
            }

            foreach ( var_7 in var_2 )
            {
                var_11 = var_7 scripts\mp\gameobjects::getownerteam();
                var_0 = getteamscore( var_11 );
                var_12 = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::getteamflagcount( var_11 );

                if ( var_12 >= level.flagsrequiredtoscore )
                    level.scoretick[var_11] = level.scoretick[var_11] + level.pointsperflag;
            }
        }

        updatescores();
    }
}

getowneddomflags()
{
    var_0 = [];

    foreach ( var_2 in level.objectives )
    {
        if ( var_2 scripts\mp\gameobjects::getownerteam() != "_encstr_9BA4080D39CFFB5AB7C1" && isdefined( var_2.capturetime ) )
            var_0[var_0.size] = var_2;
    }

    return var_0;
}

updatescores()
{
    var_0 = [];

    foreach ( var_2 in level.teamnamelist )
    {
        var_3 = game["_encstr_B4040B6BBF898046C247E5C3DF"][var_2] + level.scoretick[var_2];

        if ( var_3 >= level.roundscorelimit )
            var_0[var_0.size] = var_2;
    }

    if ( var_0.size == 1 )
        level.scoretick[var_0[0]] = level.roundscorelimit - game["_encstr_B4040B6BBF898046C247E5C3DF"][var_0[0]];

    var_5 = scripts\mp\gamescore::freight_lift_door_switch();

    foreach ( var_2 in level.teamnamelist )
    {
        if ( level.scoretick[var_2] > 0 )
            scripts\mp\gamescore::giveteamscoreforobjective( var_2, level.scoretick[var_2], 1, undefined, 1 );
    }

    var_8 = scripts\mp\gamescore::freight_lift_door_switch();

    if ( var_5 != var_8 )
        scripts\mp\gamescore::_id_12762( var_8, 1, var_5 );
}

runobjectives( var_0 )
{
    level.axisspawnareas = [ level.axishqname ];
    level.alliesspawnareas = [ level.allieshqname ];
    level.allfobs = [];

    if ( istrue( level.useobjectives ) )
    {
        foreach ( var_2 in level.gw_objstruct.startingfobs_axis )
        {
            var_3 = runobjflag( var_2.trigger, "_encstr_BA840579D3F7F6" );
            level.allfobs[level.allfobs.size] = var_2;
            level.axisspawnareas[level.axisspawnareas.size] = var_2.name;

            if ( isdefined( level.spawnselectionlocations[var_2.name]["_encstr_BA840579D3F7F6"].anchorentity ) )
                level.spawnselectionlocations[var_2.name]["_encstr_BA840579D3F7F6"].anchorentity.origin = var_2.trigger.origin + ( 0, 0, 100 );
        }

        foreach ( var_2 in level.gw_objstruct.startingfobs_allies )
        {
            var_3 = runobjflag( var_2.trigger, "_encstr_BC850785638DA59537" );
            level.allfobs[level.allfobs.size] = var_2;
            level.alliesspawnareas[level.alliesspawnareas.size] = var_2.name;

            if ( isdefined( level.spawnselectionlocations[var_2.name]["_encstr_BC850785638DA59537"].anchorentity ) )
                level.spawnselectionlocations[var_2.name]["_encstr_BC850785638DA59537"].anchorentity.origin = var_2.trigger.origin + ( 0, 0, 100 );
        }

        foreach ( var_2 in level.gw_objstruct.startingfobs_neutral )
        {
            var_3 = runobjflag( var_2.trigger, "_encstr_9BA4080D39CFFB5AB7C1" );
            level.allfobs[level.allfobs.size] = var_2;
        }

        foreach ( var_2 in level.allfobs )
        {
            var_2.trigger.gameobject.oncontested = ::objective_oncontested;
            var_2.trigger.gameobject.onuncontested = ::objective_onuncontested;
            var_2.trigger.gameobject.onuse = ::objective_onuse;
            var_2.trigger.gameobject.onbeginuse = ::objective_onusebegin;
            var_2.trigger.gameobject.onenduse = ::objective_onuseend;
            var_2.trigger.gameobject.onpinnedstate = ::objective_onpinnedstate;
            var_2.trigger.gameobject.onunpinnedstate = ::objective_onunpinnedstate;

            if ( istrue( level.playinggulagbink ) )
                var_2._id_136CD = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::_id_136CE;

            level.objectives[var_2.trigger.gameobject.objectivekey] = var_2.trigger.gameobject;
            level.spawnselectionlocations[var_2.name]["_encstr_BC850785638DA59537"].objectivekey = var_2.trigger.gameobject.objectivekey;
            level.spawnselectionlocations[var_2.name]["_encstr_BA840579D3F7F6"].objectivekey = var_2.trigger.gameobject.objectivekey;
        }
    }

    if ( level.usesquadspawnselection )
    {
        scripts\mp\spawnselection::setspawnlocations( level.axisspawnareas, "_encstr_BA840579D3F7F6" );
        scripts\mp\spawnselection::setspawnlocations( level.alliesspawnareas, "_encstr_BC850785638DA59537" );
        sethqmarkerobjective();

        while ( !isdefined( level.spawnselectionlocations ) )
            waitframe();

        waitframe();

        if ( isdefined( level.spawnselectionlocations[level.axishqname]["_encstr_BA840579D3F7F6"].anchorentity ) )
            level.spawnselectionlocations[level.axishqname]["_encstr_BA840579D3F7F6"].anchorentity.origin = level.gw_objstruct.axishqloc.trigger.origin;

        if ( isdefined( level.spawnselectionlocations[level.allieshqname]["_encstr_BC850785638DA59537"].anchorentity ) )
            level.spawnselectionlocations[level.allieshqname]["_encstr_BC850785638DA59537"].anchorentity.origin = level.gw_objstruct.allieshqloc.trigger.origin;
    }

    level thread objective_manageobjectivesintrovisibility();
    hackfixcameras();
    level thread brking_getspawnpoint();
}

brking_getspawnpoint()
{
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    foreach ( var_1 in level.allfobs )
        var_1.trigger.gameobject scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );
}

objective_manageobjectivesintrovisibility()
{
    wait 1;
    scripts\mp\objidpoolmanager::objective_playermask_hidefromall( level.gw_objstruct.axishqloc.marker.objidnum );
    scripts\mp\objidpoolmanager::objective_playermask_hidefromall( level.gw_objstruct.allieshqloc.marker.objidnum );
    scripts\mp\objidpoolmanager::objective_playermask_hidefromall( level.gw_objstruct.axishqloc.nuclear_core_on_chopper.objidnum );
    scripts\mp\objidpoolmanager::objective_playermask_hidefromall( level.gw_objstruct.allieshqloc.nuclear_core_on_chopper.objidnum );

    foreach ( var_1 in level.allfobs )
        scripts\mp\objidpoolmanager::objective_playermask_hidefromall( var_1.trigger.gameobject.objidnum );

    if ( isdefined( level.rallypointvehicles ) )
    {
        foreach ( var_4 in level.rallypointvehicles )
            scripts\mp\objidpoolmanager::objective_playermask_hidefromall( var_4.marker.objidnum );
    }

    while ( !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        waitframe();

    scripts\mp\objidpoolmanager::objective_teammask_addtomask( level.gw_objstruct.axishqloc.marker.objidnum, "_encstr_BA840579D3F7F6" );
    scripts\mp\objidpoolmanager::objective_teammask_addtomask( level.gw_objstruct.allieshqloc.marker.objidnum, "_encstr_BC850785638DA59537" );

    foreach ( var_1 in level.allfobs )
        scripts\mp\objidpoolmanager::objective_playermask_showtoall( var_1.trigger.gameobject.objidnum );

    if ( isdefined( level.rallypointvehicles ) )
    {
        foreach ( var_4 in level.rallypointvehicles )
        {
            if ( isdefined( var_4 ) )
                scripts\mp\objidpoolmanager::objective_teammask_addtomask( var_4.marker.objidnum, var_4.team );
        }
    }
}

hackfixcameras()
{
    if ( istrue( level.usestaticspawnselectioncamera ) )
        return;

    while ( !isdefined( level.spawncameras["_encstr_A4B9109F170167BF36E602DAA89BAF9A11C3"] ) )
        waitframe();

    var_0 = "_encstr_BC850785638DA59537";
    var_1 = level.spawnselectionteamforward[var_0];
    var_2 = [ "_encstr_A4B9109F170167BF36E602DAA89BAF9A11C3", "_encstr_81790A9DBB7D99DE26D703C4", "_encstr_89790A7F4307BD776690917A", "_encstr_B6790AA097E134607EE0F3A7", "_encstr_9E790AD9EEF599DB13FA0C86", "_encstr_A4790A3BEEEB33DE31AF0CA6" ];

    foreach ( var_4 in var_2 )
    {
        var_5 = level.spawnselectionlocations[var_4][var_0].anchorentity.origin;
        var_6 = var_5 + var_1 * -8500 + ( 0, 0, 7000 );
        var_7 = vectornormalize( var_5 - var_6 );
        var_8 = scripts\mp\utility\script::vectortoanglessafe( var_7, ( 0, 0, 1 ) );

        if ( istrue( level.useunifiedspawnselectioncameraheight ) )
        {
            var_9 = scripts\mp\spawnselection::getunifedspawnselectioncameraheight();
            var_6 = ( var_6[0], var_6[1], var_9 );
        }

        var_6 = var_6 + calculatecameraoffset( var_0, var_5 );
        level.spawncameras[var_4][var_0].origin = var_6;
        level.spawncameras[var_4][var_0].angles = var_8;
    }

    while ( !isdefined( level.spawncameras["_encstr_9C6B0EAF178968E0DBB96932A2E73B99"] ) )
        waitframe();

    var_0 = "_encstr_BA840579D3F7F6";
    var_1 = level.spawnselectionteamforward[var_0];
    var_2 = [ "_encstr_9C6B0EAF178968E0DBB96932A2E73B99", "_encstr_81790A9DBB7D99DE26D703C4", "_encstr_89790A7F4307BD776690917A", "_encstr_B6790AA097E134607EE0F3A7", "_encstr_9E790AD9EEF599DB13FA0C86", "_encstr_A4790A3BEEEB33DE31AF0CA6" ];

    foreach ( var_4 in var_2 )
    {
        var_5 = level.spawnselectionlocations[var_4][var_0].anchorentity.origin;
        var_6 = var_5 + var_1 * -8500 + ( 0, 0, 7000 );
        var_7 = vectornormalize( var_5 - var_6 );
        var_8 = scripts\mp\utility\script::vectortoanglessafe( var_7, ( 0, 0, 1 ) );

        if ( istrue( level.useunifiedspawnselectioncameraheight ) )
        {
            var_9 = scripts\mp\spawnselection::getunifedspawnselectioncameraheight();
            var_6 = ( var_6[0], var_6[1], var_9 );
        }

        var_6 = var_6 + calculatecameraoffset( var_0, var_5 );
        level.spawncameras[var_4][var_0].origin = var_6;
        level.spawncameras[var_4][var_0].angles = var_8;
    }
}

updatefobspawnselection()
{
    level.axisspawnareas = [ level.axishqname ];
    level.alliesspawnareas = [ level.allieshqname ];

    foreach ( var_1 in level.allfobs )
    {
        var_2 = var_1.trigger.gameobject;

        if ( var_2.ownerteam == "_encstr_BA840579D3F7F6" )
        {
            level.axisspawnareas[level.axisspawnareas.size] = var_1.name;

            if ( isdefined( level.spawnselectionlocations[var_1.name]["_encstr_BA840579D3F7F6"].anchorentity ) )
                level.spawnselectionlocations[var_1.name]["_encstr_BA840579D3F7F6"].anchorentity.origin = var_1.trigger.origin + ( 0, 0, 100 );

            continue;
        }

        if ( var_2.ownerteam == "_encstr_BC850785638DA59537" )
        {
            level.alliesspawnareas[level.alliesspawnareas.size] = var_1.name;

            if ( isdefined( level.spawnselectionlocations[var_1.name]["_encstr_BC850785638DA59537"].anchorentity ) )
                level.spawnselectionlocations[var_1.name]["_encstr_BC850785638DA59537"].anchorentity.origin = var_1.trigger.origin + ( 0, 0, 100 );
        }
    }

    scripts\mp\spawnselection::setspawnlocations( level.axisspawnareas, "_encstr_BA840579D3F7F6" );
    scripts\mp\spawnselection::setspawnlocations( level.alliesspawnareas, "_encstr_BC850785638DA59537" );
}

sethqmarkerobjective()
{
    var_0 = "_encstr_BC19047780DA";
    var_1 = level.gw_objstruct.axishqloc.trigger.origin;
    var_2 = scripts\mp\gameobjects::createobjidobject( var_1, "_encstr_9BA4080D39CFFB5AB7C1", ( 0, 0, 0 ), undefined, var_0, 0 );
    scripts\mp\objidpoolmanager::update_objective_ownerteam( var_2.objidnum, "_encstr_BA840579D3F7F6" );
    scripts\mp\objidpoolmanager::objective_teammask_addtomask( var_2.objidnum, "_encstr_BA840579D3F7F6" );
    scripts\mp\objidpoolmanager::objective_set_play_intro( var_2.objidnum, 0 );
    var_2.lockupdatingicons = 0;
    scripts\mp\objidpoolmanager::objective_pin_global( var_2.objidnum, 0 );
    scripts\mp\objidpoolmanager::update_objective_icon( var_2.objidnum, "_encstr_89F71A0AF1281B711073C1B01798453B580803D1F97EFF37F051DCB1" );
    scripts\mp\objidpoolmanager::update_objective_setbackground( var_2.objidnum, 6 );
    var_2.lockupdatingicons = 1;
    level.gw_objstruct.axishqloc.marker = var_2;
    level.uncapturableobjectives[level.uncapturableobjectives.size] = var_2;
    var_2 = scripts\mp\gameobjects::createobjidobject( var_1, "_encstr_9BA4080D39CFFB5AB7C1", ( 0, 0, 0 ), undefined, var_0, 0 );
    scripts\mp\objidpoolmanager::update_objective_ownerteam( var_2.objidnum, "_encstr_BA840579D3F7F6" );
    scripts\mp\objidpoolmanager::objective_teammask_addtomask( var_2.objidnum, "_encstr_BC850785638DA59537" );
    scripts\mp\objidpoolmanager::objective_set_play_intro( var_2.objidnum, 0 );
    var_2.lockupdatingicons = 0;
    scripts\mp\objidpoolmanager::objective_pin_global( var_2.objidnum, 0 );
    scripts\mp\objidpoolmanager::update_objective_icon( var_2.objidnum, "_encstr_87D0174B36EDE6BEBB85CBE0BD4BE647F586B8D7AC9B2BD65E" );
    scripts\mp\objidpoolmanager::update_objective_setbackground( var_2.objidnum, 7 );
    var_2.lockupdatingicons = 1;
    level.gw_objstruct.axishqloc.nuclear_core_on_chopper = var_2;
    level.uncapturableobjectives[level.uncapturableobjectives.size] = var_2;
    var_1 = level.gw_objstruct.allieshqloc.trigger.origin;
    var_2 = scripts\mp\gameobjects::createobjidobject( var_1, "_encstr_9BA4080D39CFFB5AB7C1", ( 0, 0, 0 ), undefined, var_0, 0 );
    scripts\mp\objidpoolmanager::update_objective_ownerteam( var_2.objidnum, "_encstr_BC850785638DA59537" );
    scripts\mp\objidpoolmanager::objective_teammask_addtomask( var_2.objidnum, "_encstr_BC850785638DA59537" );
    scripts\mp\objidpoolmanager::objective_set_play_intro( var_2.objidnum, 0 );
    var_2.lockupdatingicons = 0;
    scripts\mp\objidpoolmanager::objective_pin_global( var_2.objidnum, 0 );
    scripts\mp\objidpoolmanager::update_objective_icon( var_2.objidnum, "_encstr_89F71A0AF1281B711073C1B01798453B580803D1F97EFF37F051DCB1" );
    scripts\mp\objidpoolmanager::update_objective_setbackground( var_2.objidnum, 6 );
    var_2.lockupdatingicons = 1;
    level.gw_objstruct.allieshqloc.marker = var_2;
    level.uncapturableobjectives[level.uncapturableobjectives.size] = var_2;
    var_2 = scripts\mp\gameobjects::createobjidobject( var_1, "_encstr_9BA4080D39CFFB5AB7C1", ( 0, 0, 0 ), undefined, var_0, 0 );
    scripts\mp\objidpoolmanager::update_objective_ownerteam( var_2.objidnum, "_encstr_BC850785638DA59537" );
    scripts\mp\objidpoolmanager::objective_teammask_addtomask( var_2.objidnum, "_encstr_BA840579D3F7F6" );
    scripts\mp\objidpoolmanager::objective_set_play_intro( var_2.objidnum, 0 );
    var_2.lockupdatingicons = 0;
    scripts\mp\objidpoolmanager::objective_pin_global( var_2.objidnum, 0 );
    scripts\mp\objidpoolmanager::update_objective_icon( var_2.objidnum, "_encstr_87D0174B36EDE6BEBB85CBE0BD4BE647F586B8D7AC9B2BD65E" );
    scripts\mp\objidpoolmanager::update_objective_setbackground( var_2.objidnum, 7 );
    var_2.lockupdatingicons = 1;
    level.gw_objstruct.allieshqloc.nuclear_core_on_chopper = var_2;
    level.uncapturableobjectives[level.uncapturableobjectives.size] = var_2;
    level.spawnselectionteamforward = [];
    level.spawnselectionteamforward["_encstr_BC850785638DA59537"] = vectornormalize( level.gw_objstruct.axishqloc.trigger.origin - level.gw_objstruct.allieshqloc.trigger.origin );
    level.spawnselectionteamforward["_encstr_BA840579D3F7F6"] = vectornormalize( level.gw_objstruct.allieshqloc.trigger.origin - level.gw_objstruct.axishqloc.trigger.origin );
}

spawnselection_showenemyhq()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( self.team == "_encstr_BC850785638DA59537" )
    {
        scripts\mp\objidpoolmanager::objective_playermask_addshowplayer( level.gw_objstruct.allieshqloc.marker.objidnum, self );
        scripts\mp\objidpoolmanager::objective_playermask_addshowplayer( level.gw_objstruct.axishqloc.nuclear_core_on_chopper.objidnum, self );
    }
    else
    {
        scripts\mp\objidpoolmanager::objective_playermask_addshowplayer( level.gw_objstruct.allieshqloc.nuclear_core_on_chopper.objidnum, self );
        scripts\mp\objidpoolmanager::objective_playermask_addshowplayer( level.gw_objstruct.axishqloc.marker.objidnum, self );
    }

    while ( self.inspawnselection )
        waitframe();

    if ( self.team == "_encstr_BA840579D3F7F6" )
        scripts\mp\objidpoolmanager::objective_playermask_hidefrom( level.gw_objstruct.allieshqloc.nuclear_core_on_chopper.objidnum, self );
    else
        scripts\mp\objidpoolmanager::objective_playermask_hidefrom( level.gw_objstruct.axishqloc.nuclear_core_on_chopper.objidnum, self );
}

objective_oncontested()
{
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_oncontested();

    if ( !istrue( self.updatedoncontestedspawnselection ) )
    {
        updatefobspawnselection();
        self.updatedoncontestedspawnselection = 1;
    }
}

objective_onuncontested( var_0 )
{
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onuncontested( var_0 );

    if ( istrue( self.updatedoncontestedspawnselection ) )
    {
        updatefobspawnselection();
        self.updatedoncontestedspawnselection = 0;
    }
}

objective_onusebegin( var_0 )
{
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onusebegin( var_0 );
    updatefobspawnselection();
}

objective_onuseend( var_0, var_1, var_2 )
{
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onuseend( var_0, var_1, var_2 );
    updatefobspawnselection();
}

objective_onuse( var_0 )
{
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onuse( var_0 );
    updatefobspawnselection();
}

objective_onuseupdate( var_0, var_1, var_2, var_3 )
{

}

objective_onpinnedstate( var_0 )
{
    updatefobspawnselection();
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onunpinnedstate( var_0 );
}

objective_onunpinnedstate( var_0 )
{
    updatefobspawnselection();
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onunpinnedstate( var_0 );
}

dommainloop()
{

}

runobjflag( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    while ( !isdefined( level.spawnselectionlocations ) )
        waitframe();

    var_0.script_label = var_0.objkey;
    var_2 = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::setupobjective( var_0, undefined, undefined, undefined, 0 );
    var_2.origin = var_0.origin;
    var_2 scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
    var_2.didstatusnotify = 0;
    var_2 scripts\mp\gameobjects::setownerteam( var_1 );
    var_3 = "_encstr_BC19047780DA";

    if ( var_1 != "_encstr_9BA4080D39CFFB5AB7C1" )
    {
        if ( level.hideenemyfobs )
            var_3 = "_encstr_B9FC095F8BCCFF02D92B43";

        var_2.capturetime = gettime();
    }

    var_2 scripts\mp\gameobjects::setvisibleteam( var_3 );
    return var_2;
}

dropcrate( var_0, var_1, var_2 )
{
    var_3 = scripts\cp_mp\killstreaks\airdrop::droparmcratefromscriptedheli( var_2, var_0, var_1.origin, ( 0, randomint( 360 ), 0 ), undefined );
    return var_3;
}

docratedropsmoke( var_0, var_1, var_2 )
{
    var_3 = var_1.origin + ( 0, 0, 2000 );
    var_4 = scripts\common\utility::groundpos( var_3, ( 0, 0, 1 ) );
    var_1.vfxent = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_4 );
    var_1.vfxent setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_1.vfxent.angles = ( 0, 0, 0 );
    var_1.vfxent playloopsound( "_encstr_B6CC1B13303A1F7AC91B311B8173374F607BC7CDC8574BCF88087915CB" );
    wait 1;
    playfxontag( scripts\engine\utility::getfx( "_encstr_ADA412C69CA2D77A7BC061BBC8B7F5E7D8E85F5A" ), var_1.vfxent, "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );

    if ( isdefined( var_0 ) )
        var_0 scripts\engine\utility::_id_143B9( var_2, "_encstr_87590E602B99638DB13FC2784B48F32D" );
    else
        wait( var_2 );

    stopfxontag( scripts\engine\utility::getfx( "_encstr_ADA412C69CA2D77A7BC061BBC8B7F5E7D8E85F5A" ), var_1.vfxent, "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_1.vfxent delete();
}

addkillstreakstoqueue( var_0 )
{
    level.killstreaklist[var_0] = scripts\engine\utility::array_randomize( level.killstreaklist[var_0] );

    foreach ( var_2 in level.killstreaklist[var_0] )
        level.killstreakqueue[level.killstreakqueue.size] = var_2;
}

dropdefconkillstreaks( var_0 )
{
    level.activezone.airdroplocations[var_0] = scripts\engine\utility::array_randomize( level.activezone.airdroplocations[var_0] );

    for ( var_1 = 0; var_1 < 3; var_1++ )
    {
        var_2 = level.activezone.airdroplocations[var_0][var_1];

        if ( isdefined( var_2 ) )
        {
            var_2.isinside = 0;
            level thread runkillstreakreward( var_2.origin, var_0 );
            wait( randomfloatrange( 1.5, 2.5 ) );
        }
    }
}

registervaliddroplocations()
{
    scripts\cp_mp\killstreaks\airdrop::initplundercratedata();
    level.validdroplocationstruct = spawnstruct();
    level.validdroplocationstruct.clusters = scripts\engine\utility::getstructarray( "_encstr_8AE112ABA8D030608BFC8645DD992AFA5CD82357", "_encstr_A8ED125A5723AF9B405770989B255F1FF3897A60" );
    var_0 = scripts\engine\utility::getstructarray( "_encstr_B33F1039BA18C8C067489CE5D7A06950A0B5", "_encstr_A8ED125A5723AF9B405770989B255F1FF3897A60" );

    foreach ( var_2 in var_0 )
    {
        var_2.inuse = 0;

        foreach ( var_4 in level.validdroplocationstruct.clusters )
        {
            if ( var_2.target == var_4.targetname )
            {
                if ( !isdefined( var_4.droplocations ) )
                    var_4.droplocations = [];

                var_4.droplocations[var_4.droplocations.size] = var_2;
                continue;
            }
        }
    }

    level.nextkillstreakgoal = 100;

    if ( 0 )
        thread debug_testcratedroplocationpicker();
}

debug_testcratedroplocationpicker()
{
    for (;;)
    {
        choosecratelocation();
        wait 1;
    }
}

checkkillstreakcratedrop( var_0 )
{
    if ( game["_encstr_B4040B6BBF898046C247E5C3DF"][var_0] >= level.nextkillstreakgoal )
    {
        level.nextkillstreakgoal = level.nextkillstreakgoal + 100;
        dropkillstreakcrates( 2 );
    }
}

dropkillstreakcrates( var_0 )
{
    var_1 = undefined;

    foreach ( var_3 in level.players )
    {
        if ( isdefined( var_3 ) )
        {
            var_1 = var_3;
            break;
        }
    }

    for ( var_5 = 0; var_5 < var_0; var_5++ )
    {
        var_6 = choosecratelocation();
        thread runkillstreakreward( var_6, var_1, getkillstreak( 1 ) );
        wait 5;
    }
}

choosecratelocation()
{
    var_0 = randomfloatrange( 0, 1.0 );
    var_1 = vectorlerp( level.c130pathstruct_a.startpt, level.c130pathstruct_a.endpt, var_0 );
    var_2 = vectorlerp( level.c130pathstruct_b.endpt, level.c130pathstruct_b.startpt, var_0 );
    var_3 = vectorlerp( var_1, var_2, 0.5 );
    var_4 = scripts\engine\trace::ray_trace( var_3, var_3 - ( 0, 0, 100000 ) );
    var_3 = var_4["_encstr_B7260923C89E8F3378E72E"];
    var_5 = findclosestdroplocation( var_3 );

    if ( 0 )
    {
        debugsphereonlocation( var_1, ( 0, 0, 1 ), 100 );
        debugsphereonlocation( var_2, ( 0, 0, 1 ), 100 );
        debugsphereonlocation( var_3, ( 1, 0, 0 ), 100 );
        debugsphereonlocation( var_5.origin, ( 0, 1, 0 ), 100 );
        thread scripts\mp\utility\debug::drawline( var_3, var_5.origin, 3, ( 0, 1, 0 ) );
    }

    return var_5;
}

findclosestdroplocation( var_0 )
{
    var_1 = spawnstruct();
    var_1.origin = var_0;
    var_2 = var_1 scripts\engine\utility::array_sort_with_func( level.validdroplocationstruct.clusters, ::sortlocationsbydistance );

    foreach ( var_4 in var_2 )
    {
        var_5 = scripts\engine\utility::array_randomize( var_4.droplocations );

        if ( 0 )
            return var_5[0];
        else
        {
            foreach ( var_7 in var_5 )
            {
                if ( !var_7.inuse )
                {
                    var_7.inuse = 1;
                    return var_7;
                }
            }
        }
    }

    return undefined;
}

choosenukecratelocation()
{
    var_0 = randomfloatrange( level.mapsafecorners[1][0], level.mapsafecorners[0][0] );
    var_1 = randomfloatrange( level.mapsafecorners[1][1], level.mapsafecorners[0][1] );
    var_2 = ( var_0, var_1, 100000 );
    var_3 = scripts\engine\trace::ray_trace( var_2, var_2 - ( 0, 0, 100000 ) );
    var_2 = var_3["_encstr_B7260923C89E8F3378E72E"];
    var_4 = findclosestdroplocation( var_2 );

    if ( 0 )
    {
        debugsphereonlocation( var_2, ( 1, 0, 0 ), 100 );
        debugsphereonlocation( var_4.origin, ( 0, 1, 0 ), 100 );
        thread scripts\mp\utility\debug::drawline( var_2, var_4.origin, 3, ( 0, 1, 0 ) );
    }

    return var_4;
}

runkillstreakreward( var_0, var_1, var_2 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_3 = undefined;
    var_4 = scripts\mp\gameobjects::createobjidobject( var_0.origin, "_encstr_9BA4080D39CFFB5AB7C1", ( 0, 0, 72 ), undefined, "_encstr_BC19047780DA" );
    var_4.origin = var_0.origin;
    var_4.angles = var_0.angles;
    thread docratedropsmoke( undefined, var_0, 16 );
    var_4.iconname = "_encstr_95DC0AD75A9B1BDBB65ACD3B";
    var_4.lockupdatingicons = 0;
    var_4 scripts\mp\gameobjects::setobjectivestatusicons( var_2 );
    var_4.lockupdatingicons = 1;
    wait 4;
    var_3 = scripts\cp_mp\killstreaks\airdrop::droparmcratefromscriptedheli( var_1.team, var_2, var_0.origin, ( 0, randomint( 360 ), 0 ), undefined );
    var_3.skipminimapicon = 1;
    var_3.nevertimeout = 0;
    var_3.waitforobjectiveactivate = 1;
    var_3.killminimapicon = 0;
    var_3.disallowheadiconid = 1;
    var_3.isarmcrate = 1;
    var_3 waittill( "_encstr_87590E602B99638DB13FC2784B48F32D" );
    var_4.useobj = var_3;
    var_4.origin = var_3.origin;
    var_5 = 0;
    var_6 = 0.1;
    wait 1;
    var_3 notify( "_encstr_8BCA13A70D98975FEDF083BA1E4F870B68DD2124AB" );
    scripts\mp\objidpoolmanager::update_objective_onentity( var_4.objidnum, var_3 );
    scripts\mp\objidpoolmanager::update_objective_setzoffset( var_4.objidnum, 72 );
    var_4.iconname = "_encstr_A40101";
    var_4.lockupdatingicons = 0;
    var_4 scripts\mp\gameobjects::setobjectivestatusicons( var_2 );
    var_4.lockupdatingicons = 1;
    objective_setlabel( var_4.objidnum, "_encstr_A40101" );
    var_3 waittill( "_encstr_A3750609A5E61883" );
    var_4 scripts\mp\gameobjects::setvisibleteam( "_encstr_AABA05236DC831" );
    var_4 scripts\mp\gameobjects::releaseid();
    var_4.visibleteam = "_encstr_AABA05236DC831";
}

getkillstreak( var_0 )
{
    if ( !isdefined( level.killstreaktierlist ) )
        processkillstreaksintotiers();

    level.killstreaktierlist[var_0] = scripts\engine\utility::array_randomize( level.killstreaktierlist[var_0] );
    return level.killstreaktierlist[var_0][0];
}

processkillstreaksintotiers()
{
    level.killstreaktierlist = [];
    level.killstreaktierlist[3] = [ "_encstr_B87010AA3BE80F83CFA7075A6D614F65EDBB", "_encstr_970316AA19E011BA56B9CF9BF70D134768A1293773C0CAE2", "_encstr_B61904AEB067" ];
    level.killstreaktierlist[2] = [ "_encstr_B7F514E0C9AC364BE65ADEB9BEB05A279BA327D2ADB2", "_encstr_B48810D6EA631D2DF5855AE4E61D932D5B95", "_encstr_A2C00813C958328DB297" ];
    level.killstreaktierlist[1] = [ "_encstr_8CE60CA3DE5BC2AFB98EC94B6D59", "_encstr_B61904AEB067", "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", "_encstr_B26111DBB297152BF150C9CF7BE2B050139BD3" ];
    level.killstreaktierlist[0] = [ "_encstr_B61904AEB067" ];
}

br_getrewardicon( var_0 )
{
    return level.killstreakglobals.streaktable.tabledatabyref[var_0]["_encstr_BE6C08435D1925C6DE9B"];
}

_id_11EEE()
{
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    if ( istrue( level.useobjectives ) )
        level thread _id_11EEF();
}

_id_11EEF()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_9D1D1BF8630A29E0787F905B57E8C81975C8BDA28B5FC2BB70B3E80F23" );

    for (;;)
    {
        if ( freeze_bomb_case_timer( "_encstr_BA840579D3F7F6" ) == level.objectives.size )
            level thread _id_11EF6( "_encstr_BA840579D3F7F6" );
        else if ( freeze_bomb_case_timer( "_encstr_BC850785638DA59537" ) == level.objectives.size )
            level thread _id_11EF6( "_encstr_BC850785638DA59537" );

        waitframe();
    }
}

_id_11EF6( var_0 )
{
    level notify( "_encstr_9D1D1BF8630A29E0787F905B57E8C81975C8BDA28B5FC2BB70B3E80F23" );
    level endon( "_encstr_983D17D6ACE46C2FEB59DC32B49B76D7E89CD2CE76564ECA8C" );
    setomnvar( "_encstr_95C3169D530E674203298A32D0633D1F03CB1E076591AF4D", scripts\engine\utility::ter_op( var_0 == "_encstr_BA840579D3F7F6", 1, 2 ) );
    _calloutmarkerping_handleluinotify_added::_id_13191( "_encstr_B20B0DAE2DEBDCD56D56FA462C3A85", 9, 2, 1 );
    _calloutmarkerping_handleluinotify_added::_id_13191( "_encstr_B20B0DAE2DEBDCD56D56FA462C3A85", 0, 9, level._id_11BD3 );
    _calloutmarkerping_handleluinotify_added::_id_13191( "_encstr_B20B0DAE2DEBDCD56D56FA462C3A85", 11, 1, 1 );
    var_1 = 0;
    var_2 = gettime();
    var_3 = level._id_11BD3 * 1000 + var_2;
    setomnvar( "_encstr_ADA519C51B4613FB77B061DAF0B1B9D778715441AEA97F051590AB", level._id_11BD3 * 1000 + var_2 );

    while ( freeze_bomb_case_timer( var_0 ) == level.objectives.size )
    {
        waitframe();

        if ( gettime() > var_3 )
        {
            _id_11EF9( var_0 );
            level notify( "_encstr_983D17D6ACE46C2FEB59DC32B49B76D7E89CD2CE76564ECA8C" );
        }
    }

    _calloutmarkerping_handleluinotify_added::_id_13191( "_encstr_B20B0DAE2DEBDCD56D56FA462C3A85", 11, 1, 0 );
    level thread _id_11EEF();
}

_id_11EF9( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level._id_11BD4 = 1;
    level.blocknukekills = 1;

    foreach ( var_2 in level.objectives )
        var_2 scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );

    _calloutmarkerping_handleluinotify_added::_id_13191( "_encstr_B20B0DAE2DEBDCD56D56FA462C3A85", 11, 1, 0 );

    foreach ( var_5 in level.players )
    {
        if ( isdefined( var_5 ) && !isbot( var_5 ) && istrue( var_5.inspawnselection ) )
        {
            if ( isdefined( var_5._id_12135 ) )
            {
                var_5 clearsoundsubmix( "_encstr_A65F14D4F7D2614A310EF7B9035BF8F66E17F84F9B81" );
                var_5._id_12135 stoploopsound( var_5._id_12136 );
                var_5._id_12135 delete();
                var_5._id_12135 = undefined;
                var_5._id_12136 = undefined;
            }
        }
    }

    if ( isdefined( level.teamdata[var_0]["_encstr_A31C0D41AACF5C484A3493BB25AAB0"][0] ) )
    {
        var_7 = level.teamdata[var_0]["_encstr_A31C0D41AACF5C484A3493BB25AAB0"][0];
        var_7 _calloutmarkerping_handleluinotify_acknowledged::tryusenuke();
    }
    else
        level thread scripts\mp\gamelogic::endgame( var_0, game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_ADE90ADA59E4B12FD7EEA5CD"], game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_A4720BB8824A1FF29F84584E73"], 0, 1 );
}

nukeselectgimmewatcher( var_0 )
{
    if ( !istrue( var_0.hasnukeselectks ) )
    {
        var_1 = var_0.killcountthislife % level.killstoearnnukeselect;

        if ( var_1 >= 0 && var_0.killcountthislife >= level.killstoearnnukeselect )
        {
            var_0.hasnukeselectks = 1;
            var_0 thread scripts\mp\killstreaks\killstreaks::givekillstreak( "_encstr_BC13153D9504F0781F9A4811827B30F05D1BABB121ED50", 0, 0, var_0 );
            var_0 scripts\mp\hud_message::showkillstreaksplash( "_encstr_BC13153D9504F0781F9A4811827B30F05D1BABB121ED50", undefined, 1 );
        }
    }
}

initspawns( var_0 )
{
    level.gamemodestartspawnpointnames = [];

    if ( istrue( var_0 ) )
    {
        var_1 = "_encstr_A49D1919C0CF595769F348D8AB7D4FD1BB7493853B270369CE8B60";
        var_2 = "_encstr_983317825BF8C783998F70196FF841279390FB2983C597BA98";
        var_3 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_A1AE1DEDB7A9A274F0C7B9E0F462BF8910C05998BE4F3E01BE754B28E7ED41" );

        if ( var_3.size > 0 )
            var_1 = "_encstr_A1AE1DEDB7A9A274F0C7B9E0F462BF8910C05998BE4F3E01BE754B28E7ED41";

        var_4 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_B6541B218A615F63D74FF878B70EBE8BBB74A6A022AB1B8BC4E7E810C3" );

        if ( var_4.size > 0 )
            var_2 = "_encstr_B6541B218A615F63D74FF878B70EBE8BBB74A6A022AB1B8BC4E7E810C3";
    }
    else
    {
        var_1 = "_encstr_A49D1919C0CF595769F348D8AB7D4FD1BB7493853B270369CE8B60";
        var_2 = "_encstr_983317825BF8C783998F70196FF841279390FB2983C597BA98";
    }

    level.gamemodestartspawnpointnames["_encstr_BC850785638DA59537"] = var_1;
    level.gamemodestartspawnpointnames["_encstr_BA840579D3F7F6"] = var_2;
    level.gamemodespawnpointnames = [];
    level.gamemodespawnpointnames["_encstr_BC850785638DA59537"] = "_encstr_B1090D98F3211171B757B62F41F7F8";
    level.gamemodespawnpointnames["_encstr_BA840579D3F7F6"] = "_encstr_B1090D98F3211171B757B62F41F7F8";
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );

    if ( scripts\cp_mp\utility\game_utility::getmapname() == "_encstr_B3FB0A309BE727E0D4F143A9" )
        scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_88B00F1D9C7B5DCD23AB0BE4A815139E4D", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );
    else if ( scripts\cp_mp\utility\game_utility::islargemap() )
        scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_B2CC0A2FF83748652B2F0E1A", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );
    else
        scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_AA1608C17786F13312D3", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );

    scripts\mp\spawnlogic::addstartspawnpoints( var_1 );
    scripts\mp\spawnlogic::addstartspawnpoints( var_2 );
    scripts\mp\spawnlogic::addspawnpoints( game["_encstr_941C0A6AF345075ED05BEAD3"], var_1 );
    scripts\mp\spawnlogic::addspawnpoints( game["_encstr_95A70AA81FEE295D3A2F56DE"], var_2 );
    var_5 = scripts\mp\spawnlogic::getspawnpointarray( var_1 );
    var_6 = scripts\mp\spawnlogic::getspawnpointarray( var_2 );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_9303101723E2CE585F5E839B464B688D6B97", var_5 );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", var_6 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_B1090D98F3211171B757B62F41F7F8" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_B1090D98F3211171B757B62F41F7F8" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
    var_7 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_B1090D98F3211171B757B62F41F7F8" );
    var_8 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_930E073E8FC00DDF69", var_7 );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_A30C093385361B4CB06C6D", var_8 );
    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
    level.spawnpoints = var_7;
}

calculatespawndisttozones( var_0 )
{
    var_0.scriptdata.distsqtokothzones = [];

    foreach ( var_2 in level.objectives )
    {
        var_3 = getpathdist( var_0.origin, var_2.origin, 5000 );

        if ( var_3 < 0 )
            var_3 = scripts\engine\utility::distance_2d_squared( var_0.origin, var_2.origin );
        else
            var_3 = var_3 * var_3;

        var_0.scriptdata.distsqtokothzones[var_2 getentitynumber()] = var_3;

        if ( var_3 > var_2.furthestspawndistsq )
            var_2.furthestspawndistsq = var_3;
    }
}

getspawnpoint()
{
    var_0 = self.pers["_encstr_89EF05D46BA8FD"];

    if ( scripts\mp\spawnlogic::shoulduseteamstartspawn() )
    {
        if ( var_0 == game["_encstr_941C0A6AF345075ED05BEAD3"] )
        {
            scripts\mp\spawnlogic::activatespawnset( "_encstr_9303101723E2CE585F5E839B464B688D6B97", 1 );
            var_1 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_9303101723E2CE585F5E839B464B688D6B97" );
        }
        else
        {
            scripts\mp\spawnlogic::activatespawnset( "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", 1 );
            var_1 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23" );
        }
    }
    else
    {
        scripts\mp\spawnlogic::activatespawnset( "_encstr_930E073E8FC00DDF69", 1 );
        var_1 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_A30C093385361B4CB06C6D" );
    }

    if ( istrue( level.usesquadspawn ) && istrue( self.squadspawnconfirmed ) )
    {
        var_2 = self getspectatingplayer();

        if ( isdefined( var_2 ) && isdefined( self.squadindex ) && self.team == var_2.team && self.squadindex == var_2.squadindex )
            var_1 = scripts\mp\spawnscoring::findteammatebuddyspawn( var_2 );
    }

    return var_1;
}

onspawnplayer()
{
    self.forcespawnnearteammates = undefined;
    thread updatematchstatushintonspawn();
    scripts\mp\menus::updatesquadomnvars( self.team, self.squadindex );
}

updatematchstatushintonspawn()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( level.nukeprogress ) )
        self setclientomnvar( "_encstr_AD061ACF50F64D32C19E2CE9FEB94A1CDB18EF03F808AC19E9A5305B", 28 );
    else
        self setclientomnvar( "_encstr_AD061ACF50F64D32C19E2CE9FEB94A1CDB18EF03F808AC19E9A5305B", 27 );
}

onplayerkilled( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    scripts\mp\menus::updatesquadomnvars( self.team, self.squadindex );
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::awardgenericmedals( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 );

    if ( level.nukeselectactive && isplayer( var_1 ) && var_3 != "_encstr_97590CFD0825D7720BD1A018A1F3" )
    {
        if ( !isdefined( var_1.killcountthislife ) )
            var_1.killcountthislife = 0;

        if ( !istrue( var_1.hasnukeselectks ) )
            var_1.killcountthislife++;

        nukeselectgimmewatcher( var_1 );
    }

    if ( !isdefined( level.c130pathkilltracker ) || level.c130movementmethod != 1 )
        return;

    level.c130pathkilltracker[self.team] = level.c130pathkilltracker[self.team] + 1;
}

managedroppedents( var_0 )
{
    if ( !isdefined( level.br_droppedloot ) )
        level.br_droppedloot = [];

    if ( level.br_droppedloot.size > 64 )
    {
        for ( var_1 = 0; var_1 < 16; var_1++ )
        {
            if ( isdefined( level.br_droppedloot[var_1] ) )
            {
                level.br_droppedloot[var_1] delete();
                level.br_droppedloot[var_1] = undefined;
            }
        }

        var_2 = [];

        for ( var_1 = 16; var_1 < level.br_droppedloot.size; var_1++ )
            var_2[var_1 - 16] = level.br_droppedloot[var_1];

        level.br_droppedloot = var_2;
    }

    foreach ( var_4 in var_0 )
        level.br_droppedloot[level.br_droppedloot.size] = var_4;

    if ( !isdefined( level.br_pickups.droppeditems ) )
        level.br_pickups.droppeditems = [];

    if ( level.br_pickups.droppeditems.size > 64 )
    {
        for ( var_1 = 0; var_1 < 16; var_1++ )
        {
            if ( isdefined( level.br_pickups.droppeditems[var_1] ) )
            {
                level.br_pickups.droppeditems[var_1] delete();
                level.br_pickups.droppeditems[var_1] = undefined;
            }
        }

        var_2 = [];

        for ( var_1 = 16; var_1 < level.br_pickups.droppeditems.size; var_1++ )
            var_2[var_1 - 16] = level.br_pickups.droppeditems[var_1];

        level.br_pickups.droppeditems = var_2;
    }
}

onplayerconnect( var_0 )
{
    if ( isdefined( level.rallypointvehicles ) )
        thread scripts\mp\rally_point::rallypoint_showtoplayer( var_0 );

    if ( istrue( level._id_1408C ) )
        var_0 scripts\cp\vehicles\little_bird_mg_cp::calloutmarkerping_initplayer();

    scripts\mp\utility\disconnect_event_aggregator::registerondisconnecteventcallback( ::onplayerdisconnect );
}

onplayerdisconnect( var_0 )
{
    thread scripts\mp\spawnselection::_id_12ACB( var_0.team, var_0.squadindex );
}

updategamemodespawncamera()
{
    var_0 = "_encstr_B7320975DFB65F7A3E963B";

    if ( isdefined( level.activezone ) )
        var_0 = level.activezone.zonetrigger.script_label;

    scripts\mp\spawncamera::setgamemodecamera( "_encstr_BC850785638DA59537", level.spawncameras[var_0]["_encstr_BC850785638DA59537"] );
    scripts\mp\spawncamera::setgamemodecamera( "_encstr_BA840579D3F7F6", level.spawncameras[var_0]["_encstr_BA840579D3F7F6"] );
}

debugdrawtocameras()
{
    for (;;)
    {
        wait 0.25;

        if ( !isdefined( level.players[0] ) )
            continue;

        foreach ( var_5, var_1 in level.spawncameras )
        {
            foreach ( var_4, var_3 in var_1 )
            {
                thread scripts\mp\utility\debug::drawangles( var_3.origin, var_3.angles, 0.25, 50 );
                thread scripts\mp\utility\debug::drawsphere( var_3.origin, 50.0, 0.25, scripts\engine\utility::ter_op( var_4 == "_encstr_BC850785638DA59537", ( 0, 0, 1 ), ( 1, 0, 0 ) ) );
            }
        }
    }
}

onplayerspawned( var_0 )
{
    for (;;)
        var_0 waittill( "_encstr_983508635BE787C548A1" );
}

getownerteamplayer( var_0 )
{
    var_1 = undefined;

    foreach ( var_3 in level.players )
    {
        if ( var_3.team == var_0 )
        {
            var_1 = var_3;
            break;
        }
    }

    return var_1;
}

getrespawndelay()
{
    self.spawncameraskipthermal = 0;
    return undefined;
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::oncommonnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 );
}

initspecatatorcameras()
{
    level.spectatorcameras = [];
    level.currentspectatorcamref = "_encstr_AD8E0640AA42DF23";
    var_0 = scripts\engine\utility::getstructarray( "_encstr_9BB2134B0BCFD1BFF34EAF856FDBB7666FD0F21248", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_2 in var_0 )
    {
        var_3 = var_2.script_noteworthy;
        var_4 = scripts\engine\utility::getstructarray( var_2.target, "_encstr_B8CE0BE43FC317DF690862BA48" );

        foreach ( var_6 in var_4 )
        {
            switch ( var_6.script_label )
            {
                case "_encstr_A91E112B10D73ED3D0E3353B9059AF45DB90E2":
                    setteammapposition( var_3, "_encstr_BC850785638DA59537", var_6 );
                    break;
                case "_encstr_A2500F13B8F8DF40288F2F1B43E0CF6B1F":
                    setteammapposition( var_3, "_encstr_BA840579D3F7F6", var_6 );
                    break;
            }
        }
    }
}

setteammapposition( var_0, var_1, var_2 )
{
    if ( !isdefined( level.spectatorcameras[var_0] ) )
        level.spectatorcameras[var_0] = [];

    level.spectatorcameras[var_0][var_1] = var_2;
}

applythermal()
{
    self visionsetthermalforplayer( "_encstr_950A15032508FBD74981BAC6F9C8E5815481EFF397A103" );
    self thermalvisionon();
}

removethermal()
{
    self thermalvisionoff();
}

startspectatorview()
{
    if ( scripts\mp\utility\game::isteamreviveenabled() )
        return;

    waitframe();
    scripts\mp\utility\player::updatesessionstate( "_encstr_A68C0A5803A5D151A2B310A6" );
    scripts\mp\spectating::setdisabled();

    if ( isdefined( self.lastdeathangles ) )
        self setplayerangles( self.lastdeathangles );

    wait 0.1;
    scripts\mp\utility\player::setdof_default();
    var_0 = 0;
    var_1 = undefined;
    var_2 = ( 0, 0, 0 );
    var_3 = 1000;
    var_4 = self.origin + ( 0, 0, var_3 );
    var_5 = self.angles;
    self.deathspectatepos = var_4;
    self.deathspectateangles = var_5;
    var_6 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self getvieworigin() );
    var_6 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_6.angles = var_5;
    self.spectatorcament = var_6;
    self.isusingtacopsmapcamera = 1;
    self cameralinkto( var_6, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", 1 );
    thread dohalfwayflash();
    var_6 movecameratomappos( self, var_4, var_5 );
}

dohalfwayflash()
{
    wait 0.4;
    thread playslamzoomflash();
    applythermal();
}

endspectatorview()
{
    if ( !isdefined( self.spectatorcament ) )
        return;

    removethermal();
    thread runslamzoomonspawn();
}

movecameratomappos( var_0, var_1, var_2 )
{
    var_0 endon( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
    var_3 = 1.0;
    var_4 = 1.0;
    self moveto( var_1, 2.0, 1.0, 1.0 );
    var_0 playlocalsound( "_encstr_806717B61C7D6CDA8CEB6C85DA59C985AF9EBDDBADD7DEAE47" );
    var_0 setclienttriggeraudiozonepartialwithfade( "_encstr_B9230ADCE02CEEE6BED858DA", 0.5, "_encstr_971904B5B43C" );
    self rotateto( var_2, 2.0, 1.0, 1.0 );
    wait 1.1;
    var_5 = anglestoforward( var_2 ) * 300;
    var_5 = var_5 * ( 1, 1, 0 );

    if ( isdefined( var_0 ) && isdefined( var_0.spectatorcament ) )
    {
        self moveto( var_1 + var_5, 15.0, 1.0, 1.0 );
        var_0 earthquakeforplayer( 0.03, 15.0, var_1 + var_5, 1000 );
    }
}

runslamzoomonspawn()
{
    self waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
    var_0 = self geteye();
    var_1 = self.angles;
    scripts\mp\utility\player::updatesessionstate( "_encstr_A68C0A5803A5D151A2B310A6" );
    self cameralinkto( self.spectatorcament, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", 1 );
    self visionsetnakedforplayer( "_encstr_BC5911336A3EB1074FFE895360F00D8BE0F0E2", 0.2 );
    self.spectatorcament moveto( var_0, 0.5 );
    self playlocalsound( "_encstr_AF9D1661CA211760ACBFA0B81FC5DB4B89F0E8F865D9CBC8" );
    self clearclienttriggeraudiozone( 0.5 );
    self.spectatorcament rotateto( var_1, 0.5, 0.5 );
    wait 0.5;

    if ( !isdefined( self ) )
        return;

    self visionsetnakedforplayer( "_encstr_A40101", 0 );
    thread playslamzoomflash();
    scripts\mp\utility\player::updatesessionstate( "_encstr_8F7508BB18675378EBC7" );
    self cameraunlink();
    self.spectatorcament delete();
}

playslamzoomflash()
{
    var_0 = newclienthudelem( self );
    var_0.x = 0;
    var_0.y = 0;
    var_0.alignx = "_encstr_B1AD05C65666E8";
    var_0.aligny = "_encstr_B91904EC4718";
    var_0.sort = 1;
    var_0.horzalign = "_encstr_BC940BE9D5F91D47B0ABBD851E";
    var_0.vertalign = "_encstr_BC940BE9D5F91D47B0ABBD851E";
    var_0.alpha = 1;
    var_0.foreground = 1;
    var_0 setshader( "_encstr_948806DDD04BE895", 640, 480 );
    var_0 fadeovertime( 0.4 );
    var_0.alpha = 0.0;
    wait 0.4;
    var_0 destroy();
}

arm_playstatusdialog( var_0, var_1 )
{
    var_2 = "_encstr_AF820DC0E39F60B3906785467BB59F" + var_0;
    var_2 = tolower( var_2 );
    var_3 = undefined;

    if ( var_1 == "_encstr_890F0AFA201B339B4388AA43" )
    {
        var_4 = scripts\mp\utility\teams::getteamdata( "_encstr_BA840579D3F7F6", "_encstr_8875080E3685E52B93B9" );
        var_5 = scripts\mp\utility\teams::getteamdata( "_encstr_BC850785638DA59537", "_encstr_8875080E3685E52B93B9" );
        var_3 = scripts\engine\utility::array_combine( var_4, var_5 );
    }
    else if ( var_1 == "_encstr_BA840579D3F7F6" || var_1 == "_encstr_BC850785638DA59537" )
        var_3 = scripts\mp\utility\teams::getteamdata( var_1, "_encstr_8875080E3685E52B93B9" );

    foreach ( var_7 in var_3 )
    {
        if ( !isbot( var_7 ) )
            var_7 arm_leaderdialogonplayer_internal( var_2, var_0 );
    }
}

arm_playstatusdialogonplayer( var_0 )
{
    var_1 = "_encstr_A21317F1CA5188B1C0D8238E63ECE10A558BC5B5FA5067AAC8" + var_0;
    var_1 = tolower( var_1 );
    arm_leaderdialogonplayer_internal( var_1, var_0 );
}

arm_leaderdialogonplayer_internal( var_0, var_1 )
{
    if ( isdefined( self.playerlastdialogstatus ) )
    {
        var_2 = 5000;

        if ( gettime() < self.playerlastdialogstatus["_encstr_81EF05232C5D4D"] + var_2 && self.playerlastdialogstatus["_encstr_B8DA073D799798C7C7"] == var_1 )
            return;

        self.playerlastdialogstatus["_encstr_81EF05232C5D4D"] = gettime();
        self.playerlastdialogstatus["_encstr_B8DA073D799798C7C7"] = var_1;
    }

    if ( soundexists( var_0 ) )
        self queuedialogforplayer( var_0, var_1, 2 );
}

managec130spawns()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = 6000;
    var_1 = 12000;
    var_2 = 20000;
    var_3 = 1;
    var_4 = ( 0, 0, 6000 );
    level.timebetweenc130passes = 0;
    level.flighttime = 20;
    level.spawnc130 = [];

    foreach ( var_6 in level.teamnamelist )
        level.spawnc130[var_6] = undefined;

    c130_pickrandomflightpath();
    level.spawnc130["_encstr_BA840579D3F7F6"] = createc130( "_encstr_BA840579D3F7F6", level.c130pathstruct_a.startpt + var_4 );
    level.spawnc130["_encstr_BC850785638DA59537"] = createc130( "_encstr_BC850785638DA59537", level.c130pathstruct_b.startpt + var_4 );

    while ( !isdefined( level.spawnselectionlocations ) )
        waitframe();

    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    for (;;)
    {
        if ( !isdefined( level.timeuntilnextc130 ) )
            level.timeuntilnextc130 = [];

        if ( !isdefined( level.timeuntilnextc130["_encstr_BA840579D3F7F6"] ) )
            level.timeuntilnextc130["_encstr_BA840579D3F7F6"] = 0;

        if ( !isdefined( level.timeuntilnextc130["_encstr_BC850785638DA59537"] ) )
            level.timeuntilnextc130["_encstr_BC850785638DA59537"] = 0;

        var_8 = gettime() + ( level.flighttime + level.timebetweenc130passes ) * 1000;
        level.timeuntilnextc130["_encstr_BA840579D3F7F6"] = var_8;
        level.timeuntilnextc130["_encstr_BC850785638DA59537"] = var_8;

        if ( 0 )
        {
            thread scripts\mp\utility\debug::drawline( level.c130pathstruct_a.startpt, level.c130pathstruct_a.endpt, 1000, ( 1, 0, 0 ) );
            thread scripts\mp\utility\debug::drawline( level.c130pathstruct_b.startpt, level.c130pathstruct_b.endpt, 1000, ( 0, 0, 1 ) );
        }

        if ( var_3 )
        {
            level.spawnc130["_encstr_BA840579D3F7F6"] thread handlec130motion( level.c130pathstruct_a.startpt + var_4, level.c130pathstruct_a.endpt + var_4, level.flighttime, "_encstr_BA840579D3F7F6" );
            level.spawnc130["_encstr_BC850785638DA59537"] thread handlec130motion( level.c130pathstruct_b.startpt + var_4, level.c130pathstruct_b.endpt + var_4, level.flighttime, "_encstr_BC850785638DA59537" );
        }
        else
        {
            level.spawnc130["_encstr_BA840579D3F7F6"] thread handlec130motion( level.c130pathstruct_a.startpt, level.c130pathstruct_a.endpt, level.flighttime, "_encstr_BA840579D3F7F6" );
            level.spawnc130["_encstr_BC850785638DA59537"] thread handlec130motion( level.c130pathstruct_b.startpt, level.c130pathstruct_b.endpt, level.flighttime, "_encstr_BC850785638DA59537" );
        }

        level.c130firstpassstarted = 1;
        level scripts\engine\utility::waittill_all_in_array( [ "_encstr_AAF518D3F30A9AE7A789EB3256766F8568216D6CE3C11683C3E3", "_encstr_88B61AB6BACE2FBF4321D8C4A9CAC885D3DA92A4DA99539478072D73" ] );
        c130_fightpathmove();
        var_9 = level.c130pathstruct_a.startpt;
        level.c130pathstruct_a.startpt = level.c130pathstruct_a.endpt;
        level.c130pathstruct_a.endpt = var_9;
        var_9 = level.c130pathstruct_b.startpt;
        level.c130pathstruct_b.startpt = level.c130pathstruct_b.endpt;
        level.c130pathstruct_b.endpt = var_9;
        var_3 = 0;

        if ( istrue( level.usec130spawnfirstonly ) )
        {
            level.usec130spawn = 0;
            break;
        }
    }

    scripts\mp\spawnselection::removedynamicspawnarea( "_encstr_BA840579D3F7F6", "_encstr_93140DA5C8725320E10F8168AE5353" );
    scripts\mp\spawnselection::removedynamicspawnarea( "_encstr_BC850785638DA59537", "_encstr_93140DA5C8725320E10F8168AE5353" );
    scripts\mp\spawnselection::removespawnlocation( "_encstr_93140DA5C8725320E10F8168AE5353", "_encstr_BA840579D3F7F6" );
    scripts\mp\spawnselection::removespawnlocation( "_encstr_93140DA5C8725320E10F8168AE5353", "_encstr_BC850785638DA59537" );
    level.spawnc130["_encstr_BA840579D3F7F6"] delete();
    level.spawnc130["_encstr_BC850785638DA59537"] delete();
}

createc130( var_0, var_1 )
{
    var_2 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_1 );
    var_2 setmodel( "_encstr_9EF71930D29CF96627F1A908D11F8B6F86DAB80B3B3593F9AEB38F" );
    var_2 setcandamage( 0 );
    var_2.maxhealth = 100000;
    var_2.health = var_2.maxhealth;
    var_2.playeroffsets = [ ( 32, 30, 0 ), ( -32, 30, 0 ), ( 0, 30, 0 ), ( 16, 30, 0 ), ( -16, 30, 0 ) ];
    var_2.currentplayeroffset = 0;
    var_2.respawnqueue = [];
    var_2.players = [];
    var_2.team = var_0;
    var_2 playloopsound( "_encstr_BCD910D2EE1CEBB5DCF516D8C4CC03EBB138" );
    var_2 thread _encstr_821221B201F8016365BFEEFFA1A05A4178A9EBB8DBE8C36EB69527CF4B96F7F680F3A6::gunship_spawnvfx();
    return var_2;
}

handlec130motion( var_0, var_1, var_2, var_3 )
{
    var_4 = vectornormalize( var_1 - var_0 );
    var_5 = distance( var_1, var_0 );
    var_6 = var_0 + var_4 * var_5 * 0.425;
    var_7 = var_0 + var_4 * var_5 * 0.55;
    var_8 = var_2 * 0.3;
    var_9 = var_2 * 0.6;
    var_10 = var_2 * 0.1;
    self.canjoin = 1;
    self.canparachute = 0;
    var_11 = vectornormalize( var_1 - var_0 );
    self.angles = vectortoangles( var_11 );
    self.origin = var_0;
    gatherc130playerstospawn();
    self moveto( var_1, var_8 + var_9 + var_10, var_8 * 0.25 );
    wait( var_8 );
    self.canparachute = 1;

    foreach ( var_13 in self.players )
        var_13 notify( "_encstr_8F870D5BABA867A75A4EA6C16BC3A0" );

    wait( var_9 );
    self.canjoin = 0;
    self.canparachute = 0;

    foreach ( var_13 in self.players )
        var_13 notify( "_encstr_AA160FA0678C30676294760A619AC3F3B8" );

    wait( var_10 );
    level notify( "_encstr_BE9714BF3AD388492177D3CC702F026D0378BFEB60B6" + var_3 );
}

gatherc130playerstospawn()
{
    self.players = scripts\engine\utility::array_combine( self.players, self.respawnqueue );
    self.respawnqueue = [];
    var_0 = 1400;
    var_1 = ( 30, 0, 0 );
    var_2 = anglestoforward( var_1 ) * var_0 * -1;
    var_3 = self gettagorigin( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" ) + var_2;
    var_4 = self.angles;

    foreach ( var_6 in self.players )
    {
        if ( !isdefined( var_6 ) )
            continue;

        var_6.forcespawncameraorg = var_3;
        var_6.forcespawncameraang = var_4;
        var_6 notify( "_encstr_B8210BE349F33AE983C1617DEB" );
    }
}

removefromspawnselectionaftertime( var_0 )
{
    wait( var_0 );
    removefromspawnselection();
}

removefromspawnselection()
{
    scripts\mp\spawnselection::removedynamicspawnarea( self.team, "_encstr_93140DA5C8725320E10F8168AE5353" );
    scripts\mp\spawnselection::removespawnlocation( "_encstr_93140DA5C8725320E10F8168AE5353", self.team );
}

spawnplayertoc130()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( !isdefined( level.spawnc130[self.team] ) )
        return;

    self waittill( "_encstr_803D12B66097FBC5C91220586ADA93B6CF1CB125" );
    var_0 = level.spawnc130[self.team];
    var_0.respawnqueue[var_0.respawnqueue.size] = self;

    if ( istrue( var_0.canjoin ) )
        var_0 gatherc130playerstospawn();

    if ( istrue( self.inspawncamera ) )
        self waittill( "_encstr_8CFB163738C27737BE362CB5569CC2EBB1BDAD831B95A32B" );
    else
        self waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );

    scripts\common\utility::allow_killstreaks( 0 );
    self disableusability();
    self disableoffhandweapons();
    self allowmelee( 0 );
    self allowads( 0 );
    self allowfire( 0 );
    self setcandamage( 0 );
    thread jumplistener( var_0, 0 );
    self.br_infil_type = "_encstr_B491056F996A22";

    if ( !isbot( self ) )
        thread _encstr_821221B201F8016365BFEEFFA1A05A4178A9EBB8DBE8C36EB69527CF4B96F7F680F3A6::orbitcam( var_0 );
}

jumplistener( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self notify( "_encstr_8CB30FE263E092A323F3E3FA780D03DCAA" );
    self endon( "_encstr_8CB30FE263E092A323F3E3FA780D03DCAA" );

    if ( isdefined( self.parachute ) )
        self.parachute delete();

    scripts\mp\utility\game::_id_131A3( self, 1 );
    thread listenjump( var_0, var_1 );
    thread listenkick( var_0, var_1 );
}

listenkick( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_8B7D08BE1ACF92E53D69" );
    self notify( "_encstr_88550D39A33E2B77B05C40237A118A" );
    self endon( "_encstr_88550D39A33E2B77B05C40237A118A" );
    self waittill( "_encstr_AA160FA0678C30676294760A619AC3F3B8" );
    self cameradefault();
    self unlink();
    wait 0.1;

    if ( self.sessionstate == "_encstr_A68C0A5803A5D151A2B310A6" )
        return;

    var_2 = var_0 _encstr_81E0282B77A3C9BB93886757606E61F7095B1488020F568FAAD3F6EB7ACD54D69813BBF02B17A2B7BAA8::calctrailpoint();
    thread parachute( var_0, var_1 );
    self notify( "_encstr_8B7D08BE1ACF92E53D69" );
    self notify( "_encstr_98690F2BB8C70A6F61B76DA756E85F140B" );
}

listenjump( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_8B7D08BE1ACF92E53D69" );
    self notify( "_encstr_BE3D0D62881E7BF7C02DB5A5319AAC" );
    self endon( "_encstr_BE3D0D62881E7BF7C02DB5A5319AAC" );
    self notifyonplayercommand( "_encstr_980C0F1B5183D887A41320D0A9BE131B4A", "_encstr_A44609F657CA42130156DF" );

    for (;;)
    {
        var_2 = scripts\engine\utility::waittill_either( "_encstr_980C0F1B5183D887A41320D0A9BE131B4A", "_encstr_8F870D5BABA867A75A4EA6C16BC3A0" );

        if ( isdefined( var_2 ) && var_2 == "_encstr_8F870D5BABA867A75A4EA6C16BC3A0" )
            self iprintlnbold( "_encstr_9F5A19C0B621475AC12923BAE01953FF310F797A478973E341B86E" );
        else if ( !istrue( var_0.canparachute ) )
            self iprintlnbold( "_encstr_A95B10E4ED8E02ED672BC902A343590805F4" );
        else
            break;

        if ( self.sessionstate == "_encstr_A68C0A5803A5D151A2B310A6" )
            return;
    }

    self cameradefault();
    self unlink();
    wait 0.1;
    thread parachute( var_0, var_1 );
    self notify( "_encstr_8B7D08BE1ACF92E53D69" );
    self notify( "_encstr_98690F2BB8C70A6F61B76DA756E85F140B" );
}

parachute( var_0, var_1 )
{
    self endon( "_encstr_8CB30FE263E092A323F3E3FA780D03DCAA" );
    self notify( "_encstr_9D200C2741EB09EF34639868CE1C" );
    self endon( "_encstr_9D200C2741EB09EF34639868CE1C" );

    if ( self.team == "_encstr_BA840579D3F7F6" )
        var_2 = level.c130pathstruct_b.midpt;
    else
        var_2 = level.c130pathstruct_a.midpt;

    var_3 = vectornormalize( var_2 - var_0.origin );
    var_0.players = scripts\engine\utility::array_remove( var_0.players, self );

    if ( isdefined( var_0.playeroffsets ) && isdefined( var_0.currentplayeroffset ) )
    {
        var_4 = var_0.playeroffsets[var_0.currentplayeroffset];
        self setorigin( var_0.origin + var_4, 1, 1 );
        var_0.currentplayeroffset++;

        if ( var_0.currentplayeroffset == var_0.playeroffsets.size )
            var_0.currentplayeroffset = 0;
    }
    else
    {
        var_5 = anglestoforward( var_0.angles ) * var_0.br_vieworigin;
        self setorigin( var_0.origin + var_5, 1, 1 );
    }

    waitframe();
    self playershow();
    self.plotarmor = 0;
    scripts\mp\utility\game::_id_131A3( self, 0 );
    self setplayerangles( vectortoangles( var_3 ) );
    thread scripts\cp_mp\parachute::startfreefall( 5.0, 0 );
}

debug_randomflightpathstest()
{
    wait 10;

    for (;;)
    {
        c130_pickrandomflightpath();
        level.c130pathstruct_a.startpt = level.c130pathstruct_a.startpt - ( 0, 0, 10000 );
        level.c130pathstruct_a.endpt = level.c130pathstruct_a.endpt - ( 0, 0, 10000 );
        level.c130pathstruct_b.startpt = level.c130pathstruct_b.startpt - ( 0, 0, 10000 );
        level.c130pathstruct_b.endpt = level.c130pathstruct_b.endpt - ( 0, 0, 10000 );
        thread scripts\mp\utility\debug::drawline( level.c130pathstruct_a.startpt, level.c130pathstruct_a.endpt, 1, ( 1, 0, 1 ) );
        thread scripts\mp\utility\debug::drawline( level.c130pathstruct_b.startpt, level.c130pathstruct_b.endpt, 1, ( 1, 0, 1 ) );
        wait 1;
    }
}

c130_pickrandomflightpath()
{
    if ( istrue( level.c130alignedtolocale ) && istrue( level.useobjectives ) )
    {
        var_0 = ( level.gw_objstruct.axishqloc.trigger.origin + level.gw_objstruct.allieshqloc.trigger.origin ) * 0.5;
        var_1 = vectortoangles( level.gw_objstruct.axishqloc.trigger.origin - level.gw_objstruct.allieshqloc.trigger.origin );
        var_2 = var_1[1];

        if ( 0 )
            debugsphereonlocation( var_0, ( 0, 1, 0 ), 100000 );
    }
    else
    {
        var_0 = ( level.mapsafecorners[0] + level.mapsafecorners[1] ) * 0.5;
        var_2 = randomfloatrange( 0, 359 );
    }

    var_3 = makec130pathparamsstruct( var_0, var_2 - 90 );
    level.c130pathstruct_a = _encstr_821221B201F8016365BFEEFFA1A05A4178A9EBB8DBE8C36EB69527CF4B96F7F680F3A6::makepathstruct( var_3 );
    var_3.randomangle = var_3.randomangle + 180;
    level.c130pathstruct_b = _encstr_821221B201F8016365BFEEFFA1A05A4178A9EBB8DBE8C36EB69527CF4B96F7F680F3A6::makepathstruct( var_3 );
    var_4 = 0.2;
    var_5 = 0;
    var_6 = 0;

    if ( istrue( level.c130spacing_usebigmapsettings ) )
    {
        var_4 = 0.1;
        var_5 = randomfloatrange( -5000.0, 5000 );
        var_6 = randomfloatrange( -5000.0, 5000 );
    }

    var_7 = anglestoright( level.c130pathstruct_a.angle );
    level.c130pathstruct_a.startpt = var_7 * level.c130distapart + level.c130pathstruct_a.startpt;
    level.c130pathstruct_a.endpt = var_7 * level.c130distapart + level.c130pathstruct_a.endpt;
    var_7 = anglestoright( level.c130pathstruct_b.angle );
    level.c130pathstruct_b.startpt = var_7 * level.c130distapart + level.c130pathstruct_b.startpt;
    level.c130pathstruct_b.endpt = var_7 * level.c130distapart + level.c130pathstruct_b.endpt;
    var_8 = ( var_5, var_6, 0 );
    level.c130pathstruct_a.startpt = level.c130pathstruct_a.startpt + var_8;
    level.c130pathstruct_a.endpt = level.c130pathstruct_a.endpt + var_8;
    level.c130pathstruct_a.midpt = vectorlerp( level.c130pathstruct_a.startpt, level.c130pathstruct_a.endpt, 0.5 );
    level.c130pathstruct_b.startpt = level.c130pathstruct_b.startpt + var_8;
    level.c130pathstruct_b.endpt = level.c130pathstruct_b.endpt + var_8;
    level.c130pathstruct_b.midpt = vectorlerp( level.c130pathstruct_b.startpt, level.c130pathstruct_b.endpt, 0.5 );
    level.battlecenter = vectorlerp( level.c130pathstruct_a.midpt, level.c130pathstruct_b.midpt, 0.5 );
    level.c130minpathmovementinterval = vectorlerp( level.c130pathstruct_a.startpt, level.c130pathstruct_b.endpt, var_4 );
    level.c130minpathmovementinterval = level.c130minpathmovementinterval - level.c130pathstruct_a.startpt;
    level.c130minpathmovementinterval = vectornormalize( level.c130minpathmovementinterval ) * level.c130distapart / 10;
    level.c130minpathmovementinterval = ( level.c130minpathmovementinterval[0], level.c130minpathmovementinterval[1], 0 );
}

makec130pathparamsstruct( var_0, var_1 )
{
    var_2 = 6.28318;
    var_3 = var_1;
    var_4 = 180;
    var_5 = level.c130flightdist;
    var_6 = spawnstruct();
    var_6.r = var_5;
    var_6.randomangle = var_3;
    var_6.endangleoffset = var_4;
    var_6.centerpt = var_0;
    return var_6;
}

c130_fightpathmove()
{
    if ( 0 )
        level.c130movementmethod = 2;

    if ( level.c130movementmethod == 0 )
        return;
    else if ( level.c130movementmethod == 1 )
    {
        if ( 0 )
        {
            level.c130pathkilltracker["_encstr_BA840579D3F7F6"] = 1;
            level.c130pathkilltracker["_encstr_BC850785638DA59537"] = 0;
        }

        if ( level.c130pathkilltracker["_encstr_BA840579D3F7F6"] > level.c130pathkilltracker["_encstr_BC850785638DA59537"] )
        {
            if ( arenextpathsinsafebounds( level.c130minpathmovementinterval ) )
            {
                level.c130pathstruct_a.startpt = level.c130pathstruct_a.startpt + level.c130minpathmovementinterval;
                level.c130pathstruct_a.endpt = level.c130pathstruct_a.endpt + level.c130minpathmovementinterval;
                level.c130pathstruct_b.startpt = level.c130pathstruct_b.startpt + level.c130minpathmovementinterval;
                level.c130pathstruct_b.endpt = level.c130pathstruct_b.endpt + level.c130minpathmovementinterval;
            }
        }
        else if ( arenextpathsinsafebounds( level.c130minpathmovementinterval * -1.0 ) )
        {
            level.c130pathstruct_a.startpt = level.c130pathstruct_a.startpt - level.c130minpathmovementinterval;
            level.c130pathstruct_a.endpt = level.c130pathstruct_a.endpt - level.c130minpathmovementinterval;
            level.c130pathstruct_b.startpt = level.c130pathstruct_b.startpt - level.c130minpathmovementinterval;
            level.c130pathstruct_b.endpt = level.c130pathstruct_b.endpt - level.c130minpathmovementinterval;
        }

        level.c130pathstruct_a.midpt = vectorlerp( level.c130pathstruct_a.startpt, level.c130pathstruct_a.endpt, 0.5 );
        level.c130pathstruct_b.midpt = vectorlerp( level.c130pathstruct_b.startpt, level.c130pathstruct_b.endpt, 0.5 );
        level.c130pathkilltracker["_encstr_BA840579D3F7F6"] = 0;
        level.c130pathkilltracker["_encstr_BC850785638DA59537"] = 0;
    }
    else if ( level.c130movementmethod == 2 )
    {
        var_0 = ( 0, 0, 0 );
        var_1 = ( 0, 0, 0 );
        var_2 = 0;
        var_3 = 0;

        foreach ( var_5 in level.players )
        {
            if ( isalive( var_5 ) )
            {
                if ( var_5.team == "_encstr_BA840579D3F7F6" )
                {
                    var_0 = var_0 + var_5.origin;
                    var_2++;
                    continue;
                }

                if ( var_5.team == "_encstr_BC850785638DA59537" )
                {
                    var_1 = var_1 + var_5.origin;
                    var_3++;
                }
            }
        }

        if ( var_2 == 0 || var_3 == 0 )
            return;

        var_7 = var_0 / var_2;
        var_8 = var_1 / var_3;
        var_9 = vectorlerp( var_7, var_8, 0.5 );
        level.c130minpathmovementinterval = vectorlerp( level.battlecenter, var_9, 0.5 );
        level.c130minpathmovementinterval = level.c130minpathmovementinterval - level.battlecenter;
        var_10 = distance2d( level.battlecenter, var_9 );
        level.c130minpathmovementinterval = vectornormalize( level.c130minpathmovementinterval ) * var_10 / 4;
        level.c130minpathmovementinterval = ( level.c130minpathmovementinterval[0], level.c130minpathmovementinterval[1], 0 );

        if ( arenextpathsinsafebounds( level.c130minpathmovementinterval ) )
        {
            level.c130pathstruct_a.startpt = level.c130pathstruct_a.startpt + level.c130minpathmovementinterval;
            level.c130pathstruct_a.endpt = level.c130pathstruct_a.endpt + level.c130minpathmovementinterval;
            level.c130pathstruct_a.midpt = vectorlerp( level.c130pathstruct_a.startpt, level.c130pathstruct_a.endpt, 0.5 );
            level.c130pathstruct_b.startpt = level.c130pathstruct_b.startpt + level.c130minpathmovementinterval;
            level.c130pathstruct_b.endpt = level.c130pathstruct_b.endpt + level.c130minpathmovementinterval;
            level.c130pathstruct_b.midpt = vectorlerp( level.c130pathstruct_b.startpt, level.c130pathstruct_b.endpt, 0.5 );

            if ( 0 )
            {
                debugsphereonlocation( level.battlecenter, ( 1, 0, 0 ), 700 );
                debugsphereonlocation( var_9, ( 0, 1, 0 ), 700 );
            }

            level.battlecenter = level.battlecenter + level.c130minpathmovementinterval;
        }
    }
}

arenextpathsinsafebounds( var_0 )
{
    return ispointinsafebounds( level.c130pathstruct_a.startpt + var_0 ) && ispointinsafebounds( level.c130pathstruct_a.endpt + var_0 ) && ispointinsafebounds( level.c130pathstruct_b.startpt + var_0 ) && ispointinsafebounds( level.c130pathstruct_b.endpt + var_0 );
}

ispointinsafebounds( var_0 )
{
    return var_0[0] < level.mapsafecorners[0][0] && var_0[0] > level.mapsafecorners[1][0] && var_0[1] < level.mapsafecorners[0][1] && var_0[1] > level.mapsafecorners[1][1];
}

registervehicletype( var_0, var_1, var_2 )
{
    var_3 = spawnstruct();
    var_3.refname = var_0;
    var_3.spawncallback = var_2;
    var_3.vehiclespawns = [[ var_1 ]]();

    if ( !isdefined( level.vehicleinfo ) )
        level.vehicleinfo = [];

    level.vehicleinfo[var_0] = var_3;
}

init_groundwarvehicles()
{
    level.ignorevehicletypeinstancelimit = 1;
    registervehicletype( "_encstr_81D70A1B037642AEF0D9F6BD", scripts\cp_mp\vehicles\technical::technical_getspawnstructscallback, ::vehiclespawn_truck );
    registervehicletype( "_encstr_BC8F0CED4311BB6CA9F19BBFB0A1", scripts\cp_mp\vehicles\little_bird::little_bird_getspawnstructscallback, ::vehiclespawn_littlebird );
    registervehicletype( "_encstr_A4E90F635A473A63B2BEC4D2E48CBEAD9D", _calloutmarkerping_poolidisdanger::x1stash_detectplayers, ::_id_14266 );
    registervehicletype( "_encstr_8BE6087F2FD7198BE893", scripts\cp_mp\vehicles\cop_car::cop_car_getspawnstructscallback, ::vehiclespawn_copcar );
    registervehicletype( "_encstr_A219044B93BB", scripts\cp_mp\vehicles\atv::atv_getspawnstructscallback, ::vehiclespawn_atv );
    registervehicletype( "_encstr_93120C26CEB35F60D753E8D8E70B", scripts\cp_mp\vehicles\cargo_truck::cargo_truck_getspawnstructscallback, ::vehiclespawn_cargotruck );
    registervehicletype( "_encstr_A1CD07D38757E319A8", scripts\cp_mp\vehicles\hoopty::hoopty_getspawnstructscallback, ::vehiclespawn_hoopty );
    registervehicletype( "_encstr_AAAA0DD8226FF768989F5155DD46C8", scripts\cp_mp\vehicles\hoopty_truck::hoopty_truck_getspawnstructscallback, ::vehiclespawn_hooptytruck );
    registervehicletype( "_encstr_B6DE05E0ED1382", scripts\cp_mp\vehicles\jeep::jeep_getspawnstructscallback, ::vehiclespawn_jeep );
    registervehicletype( "_encstr_ADDA105BE0A397A247C59A5620C72B570BF0", scripts\cp_mp\vehicles\large_transport::large_transport_getspawnstructscallback, ::vehiclespawn_largetransport );
    registervehicletype( "_encstr_9C60118D79F0B99B717F6B7B6BA8A3F87B2343", scripts\cp_mp\vehicles\med_transport::med_transport_getspawnstructscallback, ::vehiclespawn_medtransport );
    registervehicletype( "_encstr_8BD60D9FC127C05BAA49605883063F", scripts\cp_mp\vehicles\pickup_truck::pickup_truck_getspawnstructscallback, ::vehiclespawn_pickuptruck );
    registervehicletype( "_encstr_BC120A09810621EE6FAB69F3", scripts\cp_mp\vehicles\tac_rover::tac_rover_getspawnstructscallback, ::vehiclespawn_tacrover );
    registervehicletype( "_encstr_A1190473C198", scripts\cp_mp\vehicles\van::van_getspawnstructscallback, ::vehiclespawn_van );
    registervehicletype( "_encstr_A6390B63B4CEA1D17D1D16E6AD", scripts\cp_mp\vehicles\light_tank::light_tank_getspawnstructscallback, ::vehiclespawn_tank );
    level.vehiclespawnlocs = [];
    level.tankspawnlocs_axis = [];
    level.tankspawnlocs_allies = [];

    foreach ( var_1 in level.vehicleinfo )
    {
        if ( var_1.refname == "_encstr_A6390B63B4CEA1D17D1D16E6AD" && level.mapname == "_encstr_B7920F6F397892BF7008A36D43D0C7FAC4" && level.localeid == "_encstr_8934097830FBB305B537B2" )
        {
            var_2 = [];
            var_3 = [];
            var_2[0] = ( 17465, -21971, -150 );
            var_3[0] = ( 10, 90, 0 );
            var_2[1] = ( 16460, -22045, -150 );
            var_3[1] = ( 358, 26, 0 );
            var_4 = 0;
            var_5 = [];
            var_6 = [];
            var_5[0] = ( 19430, -2396, -380 );
            var_6[0] = ( 7, 315, 0 );
            var_5[1] = ( 21100, -2356, -380 );
            var_6[1] = ( 7, 219, 0 );
            var_7 = 0;

            foreach ( var_9 in var_1.vehiclespawns )
            {
                if ( isdefined( var_9.script_noteworthy ) && var_9.script_noteworthy == "_encstr_8934097830FBB305B537B2" )
                {
                    if ( isdefined( var_9.script_team ) && var_9.script_team == "_encstr_BA840579D3F7F6" )
                    {
                        var_9.origin = var_2[var_4];
                        var_9.angles = var_3[var_4];
                        var_4++;
                        continue;
                    }

                    if ( isdefined( var_9.script_team ) && var_9.script_team == "_encstr_BC850785638DA59537" )
                    {
                        var_9.origin = var_5[var_7];
                        var_9.angles = var_6[var_7];
                        var_7++;
                    }
                }
            }
        }

        if ( var_1.refname == "_encstr_A219044B93BB" )
        {
            if ( level.mapname == "_encstr_B3D20DBDF726539E25D0838F595753" && level.localeid == "_encstr_A6340973B8A9A90A1B7890" )
            {
                var_11 = [];
                var_12 = [];
                var_11[0] = ( 46022, 1039, 56 );
                var_12[0] = ( 7, 289, 0 );
                var_11[1] = ( 47881, -1404, 115 );
                var_12[1] = ( 8, 294, 0 );
                var_11[2] = ( 47970, -22545, -320 );
                var_12[2] = ( 9, 105, 0 );

                for ( var_13 = 0; var_13 < var_11.size; var_13++ )
                {
                    var_14 = spawnstruct();
                    var_14.origin = var_11[var_13];
                    var_14.angles = var_12[var_13];
                    var_14.script_noteworthy = "_encstr_A6340973B8A9A90A1B7890";
                    var_14.targetname = "_encstr_BE7E0A8FA8C34F23F9AFFBB5";
                    var_14.vehicletype = "_encstr_BC9812BF98112E3297E04A44DB97EAEBFB590703";
                    var_1.vehiclespawns[var_1.vehiclespawns.size] = var_14;
                }

                foreach ( var_9 in var_1.vehiclespawns )
                {
                    if ( distancesquared( var_9.origin, ( 53109, -8400, -710 ) ) < 16384 )
                    {
                        var_9.origin = ( 46868, -457, 18 );
                        var_9.angles = ( 11, 252, 0 );
                        continue;
                    }

                    if ( distancesquared( var_9.origin, ( 48215, -1671, 56 ) ) < 16384 )
                    {
                        var_9.origin = ( 47906, -676, 55 );
                        var_9.angles = ( 11, 309, 0 );
                    }
                }
            }
            else if ( level.mapname == "_encstr_B7920F6F397892BF7008A36D43D0C7FAC4" && level.localeid == "_encstr_8934097830FBB305B537B2" )
            {
                var_11 = [];
                var_12 = [];
                var_11[0] = ( 17806, -20823, -110 );
                var_12[0] = ( 11, 358, 0 );
                var_11[1] = ( 16109, -24057, -144 );
                var_12[1] = ( 1, 90, 0 );
                var_11[2] = ( 18227, -704, -448 );
                var_12[2] = ( 7, 266, 0 );
                var_11[3] = ( 19180, 332, -447 );
                var_12[3] = ( 6, 298, 0 );

                for ( var_13 = 0; var_13 < var_11.size; var_13++ )
                {
                    var_14 = spawnstruct();
                    var_14.origin = var_11[var_13];
                    var_14.angles = var_12[var_13];
                    var_14.script_noteworthy = "_encstr_8934097830FBB305B537B2";
                    var_14.targetname = "_encstr_BE7E0A8FA8C34F23F9AFFBB5";
                    var_14.vehicletype = "_encstr_BC9812BF98112E3297E04A44DB97EAEBFB590703";
                    var_1.vehiclespawns[var_1.vehiclespawns.size] = var_14;
                }

                foreach ( var_9 in var_1.vehiclespawns )
                {
                    if ( distancesquared( var_9.origin, ( 18368, -21157, -107 ) ) < 16384 )
                    {
                        var_9.origin = ( 16572, -19828, 86 );
                        var_9.angles = ( 2, 55, 0 );
                        continue;
                    }

                    if ( distancesquared( var_9.origin, ( 19526, -15475, -97 ) ) < 16384 )
                    {
                        var_9.origin = ( 19177, -15490, -116 );
                        var_9.angles = ( 2, 64, 0 );
                    }
                }
            }
        }

        if ( var_1.refname == "_encstr_BC120A09810621EE6FAB69F3" )
        {
            if ( level.mapname == "_encstr_B3D20DBDF726539E25D0838F595753" && level.localeid == "_encstr_A6340973B8A9A90A1B7890" )
            {
                var_11 = [];
                var_12 = [];
                var_11[0] = ( 48384, -1703, 70 );
                var_12[0] = ( 7, 260, 0 );
                var_11[1] = ( 50216, -22058, -336 );
                var_12[1] = ( 5, 84, 0 );

                for ( var_13 = 0; var_13 < var_11.size; var_13++ )
                {
                    var_14 = spawnstruct();
                    var_14.origin = var_11[var_13];
                    var_14.angles = var_12[var_13];
                    var_14.script_noteworthy = "_encstr_A6340973B8A9A90A1B7890";
                    var_14.targetname = "_encstr_AD910FFB73BAD350887FEE1647701ADFF8";
                    var_14.vehicletype = "_encstr_BD4912FBAB988D8A606F0B634B1632FB10963542";
                    var_1.vehiclespawns[var_1.vehiclespawns.size] = var_14;
                }
            }
            else if ( level.mapname == "_encstr_B7920F6F397892BF7008A36D43D0C7FAC4" && level.localeid == "_encstr_8934097830FBB305B537B2" )
            {
                var_11 = [];
                var_12 = [];
                var_11[0] = ( 21969, -11928, -156 );
                var_12[0] = ( 7, 269, 0 );
                var_11[1] = ( 16413, -22817, -144 );
                var_12[1] = ( 7, 85, 0 );

                for ( var_13 = 0; var_13 < var_11.size; var_13++ )
                {
                    var_14 = spawnstruct();
                    var_14.origin = var_11[var_13];
                    var_14.angles = var_12[var_13];
                    var_14.script_noteworthy = "_encstr_8934097830FBB305B537B2";
                    var_14.targetname = "_encstr_AD910FFB73BAD350887FEE1647701ADFF8";
                    var_14.vehicletype = "_encstr_BD4912FBAB988D8A606F0B634B1632FB10963542";
                    var_1.vehiclespawns[var_1.vehiclespawns.size] = var_14;
                }
            }
        }

        if ( var_1.refname == "_encstr_93120C26CEB35F60D753E8D8E70B" && level.mapname == "_encstr_B7920F6F397892BF7008A36D43D0C7FAC4" && level.localeid == "_encstr_8934097830FBB305B537B2" )
        {
            foreach ( var_9 in var_1.vehiclespawns )
            {
                if ( distancesquared( var_9.origin, ( 20559, -24015, -105 ) ) < 16384 )
                {
                    var_9.origin = ( 18119, -21282, -118 );
                    var_9.angles = ( 6, 55, 0 );
                }
            }
        }

        foreach ( var_9 in var_1.vehiclespawns )
        {
            if ( isdefined( scripts\cp_mp\utility\game_utility::getlocaleid() ) && isdefined( var_9.script_noteworthy ) && var_9.script_noteworthy == level.localeid )
            {
                if ( var_1.refname == "_encstr_A6390B63B4CEA1D17D1D16E6AD" )
                {
                    if ( isdefined( var_9.script_team ) && var_9.script_team == "_encstr_BA840579D3F7F6" )
                    {
                        var_22 = level.tankspawnlocs_axis.size;
                        level.tankspawnlocs_axis[var_22] = var_9;
                        level.tankspawnlocs_axis[var_22].refname = var_1.refname;
                    }
                    else if ( isdefined( var_9.script_team ) && var_9.script_team == "_encstr_BC850785638DA59537" )
                    {
                        var_22 = level.tankspawnlocs_allies.size;
                        level.tankspawnlocs_allies[var_22] = var_9;
                        level.tankspawnlocs_allies[var_22].refname = var_1.refname;
                    }

                    continue;
                }

                if ( istrue( level.matchdata_logvictimkillevent ) && var_1.refname == "_encstr_B6DE05E0ED1382" || istrue( level.matchdata_logscoreevent ) && var_1.refname == "_encstr_93120C26CEB35F60D753E8D8E70B" )
                    continue;
                else
                {
                    var_22 = level.vehiclespawnlocs.size;
                    level.vehiclespawnlocs[var_22] = var_9;
                    level.vehiclespawnlocs[var_22].refname = var_1.refname;
                }
            }
        }
    }

    if ( 0 )
    {
        foreach ( var_26 in level.vehiclespawnlocs )
            thread scripts\mp\utility\debug::drawline( var_26.origin, var_26.origin + ( 0, 0, 1500 ), 1000, ( 1, 0, 0 ) );
    }

    level.vehiclespawnlocs = scripts\engine\utility::array_randomize( level.vehiclespawnlocs );
    var_28 = level._id_11F41;

    if ( !isdefined( level._id_11F41 ) )
        var_28 = 25;

    if ( 0 )
    {
        for ( var_13 = 0; var_13 < var_28; var_13++ )
        {
            var_26 = level.vehiclespawnlocs[var_13];
            thread scripts\mp\utility\debug::drawline( var_26.origin + ( 0, 0, 1500 ), var_26.origin + ( 0, 0, 2500 ), 1000, ( 0, 1, 0 ) );
        }
    }

    for ( var_13 = 0; var_13 < var_28; var_13++ )
    {
        var_26 = level.vehiclespawnlocs[var_13];

        if ( isdefined( var_26 ) )
        {
            var_1 = level.vehicleinfo[var_26.refname];
            [[ var_1.spawncallback ]]( var_26 );
        }
    }

    scripts\mp\flags::gameflagwait( "_encstr_A275138393956BC2E836D0FA36DE5DE61D19BDDDDC" );
    level.numhqtanks_axis = 0;
    level.numhqtanks_allies = 0;
    thread vehiclespawn_hqtanks( level.tankspawnlocs_axis );
    thread vehiclespawn_hqtanks( level.tankspawnlocs_allies );
}

vehiclespawn_hqtanks( var_0 )
{
    foreach ( var_2 in var_0 )
    {
        var_3 = level.vehicleinfo[var_2.refname];
        [[ var_3.spawncallback ]]( var_2 );
        wait( randomfloatrange( 2.0, 3.0 ) );
    }
}

vehiclespawn_truck( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_81D70A1B037642AEF0D9F6BD", var_2, var_1 );
}

vehiclespawn_littlebird( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_BC8F0CED4311BB6CA9F19BBFB0A1", var_2, var_1 );
}

_id_14266( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_A4E90F635A473A63B2BEC4D2E48CBEAD9D", var_2, var_1 );
}

vehiclespawn_copcar( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_8BE6087F2FD7198BE893", var_2, var_1 );
}

vehiclespawn_atv( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_A219044B93BB", var_2, var_1 );
}

vehiclespawn_cargotruck( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_93120C26CEB35F60D753E8D8E70B", var_2, var_1 );
}

vehiclespawn_hoopty( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_A1CD07D38757E319A8", var_2, var_1 );
}

vehiclespawn_hooptytruck( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_AAAA0DD8226FF768989F5155DD46C8", var_2, var_1 );
}

vehiclespawn_jeep( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_B6DE05E0ED1382", var_2, var_1 );
}

vehiclespawn_largetransport( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_ADDA105BE0A397A247C59A5620C72B570BF0", var_2, var_1 );
}

vehiclespawn_medtransport( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_9C60118D79F0B99B717F6B7B6BA8A3F87B2343", var_2, var_1 );
}

vehiclespawn_pickuptruck( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_8BD60D9FC127C05BAA49605883063F", var_2, var_1 );
}

vehiclespawn_tacrover( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_BC120A09810621EE6FAB69F3", var_2, var_1 );
}

vehiclespawn_van( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_A1190473C198", var_2, var_1 );
}

vehiclespawn_tank( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    var_2.spawnmethod = "_encstr_899A1BA807D2117D629228CF6B9981B83B9F8850B7960E3B5A7A3F4407";

    if ( isdefined( var_0.script_team ) && var_0.script_team == "_encstr_BA840579D3F7F6" )
    {
        if ( level.numhqtanks_axis >= level.maxhqtanks )
            return;

        var_2.usealtmodel = 1;
        var_2.team = "_encstr_BA840579D3F7F6";
        level.numhqtanks_axis++;
    }
    else
    {
        if ( level.numhqtanks_allies >= level.maxhqtanks )
            return;

        var_2.team = "_encstr_BC850785638DA59537";
        level.numhqtanks_allies++;
    }

    var_3 = scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_A6390B63B4CEA1D17D1D16E6AD", var_2, var_1 );

    if ( istrue( level._id_13377 ) )
        _id_1413B( var_3, var_3.team );

    return var_3;
}

_id_1413B( var_0, var_1 )
{
    wait 1;
    var_2 = scripts\mp\gameobjects::createobjidobject( var_0.origin, var_1, ( 0, 0, 0 ), undefined, 0, 0 );
    scripts\mp\objidpoolmanager::update_objective_ownerteam( var_2.objidnum, var_1 );
    scripts\mp\objidpoolmanager::objective_playermask_hidefromall( var_2.objidnum );
    scripts\mp\objidpoolmanager::objective_set_play_intro( var_2.objidnum, 0 );
    var_2.lockupdatingicons = 0;
    scripts\mp\objidpoolmanager::objective_pin_global( var_2.objidnum, 0 );
    scripts\mp\objidpoolmanager::update_objective_icon( var_2.objidnum, "_encstr_977C25A51BBDB9F55B96E64BDA58387D1339B08C6359CBAF9B1C16DD73EBDC95C6CA6C1D4BEDB9" );
    scripts\mp\objidpoolmanager::update_objective_setbackground( var_2.objidnum, 1 );
    scripts\mp\objidpoolmanager::update_objective_onentity( var_2.objidnum, var_0 );
    var_2.lockupdatingicons = 1;

    foreach ( var_4 in level.players )
    {
        if ( isdefined( var_4 ) && isdefined( var_4.team ) && var_4.team == var_1 && istrue( var_4.inspawnselection ) )
            scripts\mp\objidpoolmanager::objective_playermask_addshowplayer( var_2.objidnum, var_4 );
    }

    var_0._id_1369D = var_2;
    thread _id_14228( var_0 );
    level._id_13C4A[var_1][level._id_13C4A[var_1].size] = var_0;
}

_id_14228( var_0 )
{
    var_1 = var_0._id_1369D.objidnum;
    var_2 = var_0.team;
    var_0 waittill( "_encstr_A3750609A5E61883" );
    scripts\mp\objidpoolmanager::returnobjectiveid( var_1 );
    level._id_13C4A[var_2] = scripts\engine\utility::array_remove( level._id_13C4A[var_2], var_0 );
}

_id_1420E()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    foreach ( var_1 in level._id_13C4A[self.team] )
        scripts\mp\objidpoolmanager::objective_playermask_addshowplayer( var_1._id_1369D.objidnum, self );

    while ( self.inspawnselection )
        waitframe();

    foreach ( var_1 in level._id_13C4A["_encstr_BA840579D3F7F6"] )
        scripts\mp\objidpoolmanager::objective_playermask_hidefrom( var_1._id_1369D.objidnum, self );

    foreach ( var_1 in level._id_13C4A["_encstr_BC850785638DA59537"] )
        scripts\mp\objidpoolmanager::objective_playermask_hidefrom( var_1._id_1369D.objidnum, self );
}

vehiclespawn_getspawndata( var_0 )
{
    var_1 = spawnstruct();
    var_1.origin = var_0.origin;
    var_1.angles = var_0.angles;
    var_1.spawntype = "_encstr_A6BE0A2DE30957B0F745E4DD";
    var_1.showheadicon = 1;
    return var_1;
}

droptank_playincomingdialog( var_0 )
{
    var_1 = var_0.team;
    var_2 = "_encstr_A2C00813C958328DB297";

    if ( level.teambased )
    {
        if ( isdefined( level.killstreakactivatedtime[var_2] ) )
        {
            if ( isdefined( level.killstreakactivatedtime[var_2][var_1] ) )
            {
                if ( gettime() < level.killstreakactivatedtime[var_2][var_1] )
                    return;
            }
        }

        level.killstreakactivatedtime[var_2][var_1] = gettime() + scripts\mp\utility\dialog::getkillstreakdialogcooldown() * 1000;
    }

    scripts\mp\utility\dialog::leaderdialog( var_1 + "_encstr_BABC0B59BC7502FD50801B5741" + var_2 + "_encstr_ABFF097D96CD26EDEA9B32", var_1, "_encstr_A6C61022F12B1047BB8B98B07219338B6764" );
}

_id_1413A( var_0, var_1 )
{
    wait 1;
    var_2 = scripts\mp\gameobjects::createobjidobject( var_0.origin, var_1, ( 0, 0, 0 ), undefined, 0, 0 );
    scripts\mp\objidpoolmanager::update_objective_ownerteam( var_2.objidnum, var_1 );
    scripts\mp\objidpoolmanager::objective_playermask_hidefromall( var_2.objidnum );
    scripts\mp\objidpoolmanager::objective_set_play_intro( var_2.objidnum, 0 );
    var_2.lockupdatingicons = 0;
    scripts\mp\objidpoolmanager::objective_pin_global( var_2.objidnum, 0 );
    scripts\mp\objidpoolmanager::update_objective_icon( var_2.objidnum, "_encstr_A6A01FCC26477AFF08E00B1FA8E1A811294B1303198B720133B0D70F78D964BA8F" );
    scripts\mp\objidpoolmanager::update_objective_setbackground( var_2.objidnum, 1 );
    scripts\mp\objidpoolmanager::update_objective_onentity( var_2.objidnum, var_0 );
    var_2.lockupdatingicons = 1;

    foreach ( var_4 in level.players )
    {
        if ( isdefined( var_4 ) && istrue( var_4.inspawnselection ) )
            scripts\mp\objidpoolmanager::objective_playermask_addshowplayer( var_2.objidnum, var_4 );
    }

    var_0._id_1369D = var_2;
    thread _id_14227( var_0 );
    level._id_13C49["_encstr_9B770A4B68F1CDC76133659C"][level._id_13C49["_encstr_9B770A4B68F1CDC76133659C"].size] = var_0;
}

_id_14227( var_0 )
{
    var_1 = var_0._id_1369D.objidnum;
    var_0 waittill( "_encstr_A3750609A5E61883" );
    scripts\mp\objidpoolmanager::returnobjectiveid( var_1 );
    var_2 = var_0.watch_for_player_entered_trap_room;

    if ( !isdefined( var_0.watch_for_player_entered_trap_room ) )
        var_2 = "_encstr_9B770A4B68F1CDC76133659C";

    level._id_13C49[var_2] = scripts\engine\utility::array_remove( level._id_13C49[var_2], var_0 );
}

_id_1420F()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    foreach ( var_1 in level._id_13C49[self.team] )
        scripts\mp\objidpoolmanager::objective_playermask_addshowplayer( var_1._id_1369D.objidnum, self );

    foreach ( var_1 in level._id_13C49["_encstr_9B770A4B68F1CDC76133659C"] )
        scripts\mp\objidpoolmanager::objective_playermask_addshowplayer( var_1._id_1369D.objidnum, self );

    while ( self.inspawnselection )
        waitframe();

    foreach ( var_1 in level._id_13C49["_encstr_BA840579D3F7F6"] )
        scripts\mp\objidpoolmanager::objective_playermask_hidefrom( var_1._id_1369D.objidnum, self );

    foreach ( var_1 in level._id_13C49["_encstr_BC850785638DA59537"] )
        scripts\mp\objidpoolmanager::objective_playermask_hidefrom( var_1._id_1369D.objidnum, self );

    foreach ( var_1 in level._id_13C49["_encstr_9B770A4B68F1CDC76133659C"] )
        scripts\mp\objidpoolmanager::objective_playermask_hidefrom( var_1._id_1369D.objidnum, self );
}

_id_141FF( var_0 )
{
    if ( isdefined( self.watch_for_player_entered_trap_room ) )
        level._id_13C49[self.watch_for_player_entered_trap_room] = scripts\engine\utility::array_remove( level._id_13C49[self.watch_for_player_entered_trap_room], self );
    else
        level._id_13C49["_encstr_9B770A4B68F1CDC76133659C"] = scripts\engine\utility::array_remove( level._id_13C49["_encstr_9B770A4B68F1CDC76133659C"], self );

    self.watch_for_player_entered_trap_room = var_0;
    level._id_13C49[var_0][level._id_13C49[var_0].size] = self;
    scripts\mp\objidpoolmanager::update_objective_icon( self._id_1369D.objidnum, "_encstr_9D9D284CA6C7FA7F88608B9F28612891A9CB9383990BF281B330578FD859E74A775E5F3DF5AFCBD93888" );

    foreach ( var_2 in level.players )
    {
        scripts\mp\objidpoolmanager::objective_playermask_hidefrom( self._id_1369D.objidnum, var_2 );

        if ( isdefined( var_2 ) && isdefined( var_2.team ) && var_2.team == var_0 && istrue( var_2.inspawnselection ) )
        {
            scripts\mp\objidpoolmanager::objective_playermask_addshowplayer( self._id_1369D.objidnum, var_2 );
            continue;
        }

        scripts\mp\objidpoolmanager::objective_playermask_hidefrom( self._id_1369D.objidnum, var_2 );
    }
}

init_rallyvehicles()
{
    while ( !isdefined( level.spawnselectionlocations ) )
        waitframe();

    waitframe();
    level.rallypointvehicles = [];
    var_0 = scripts\engine\utility::getstructarray( "_encstr_A6F2140581C5B86B933AE870F3FB2D889C16BB9F292D", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_2 in var_0 )
    {
        if ( isdefined( scripts\cp_mp\utility\game_utility::getlocaleid() ) && isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy != level.localeid )
            continue;

        var_3 = scripts\engine\utility::ter_op( var_2.script_team == "_encstr_BA840579D3F7F6", "_encstr_BA840579D3F7F6", "_encstr_BC850785638DA59537" );
        var_4 = getrallyvehiclespawndata( var_2, var_3 );
        var_5 = spawnstruct();
        var_6 = scripts\mp\vehicles\technical_mp::technical_mp_spawncallback( var_4, var_5 );

        if ( isdefined( var_6 ) )
        {
            level.rallypointvehicles[level.rallypointvehicles.size] = var_6;
            continue;
        }
    }

    var_0 = scripts\engine\utility::getstructarray( "_encstr_8CA915220F1902B1C7A87F5B487C694BF1116FD6E38D3A", "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( !istrue( level.disablelittlebirdrally ) )
    {
        foreach ( var_2 in var_0 )
        {
            if ( isdefined( scripts\cp_mp\utility\game_utility::getlocaleid() ) && isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy != level.localeid )
                continue;

            var_3 = scripts\engine\utility::ter_op( var_2.script_team == "_encstr_BA840579D3F7F6", "_encstr_BA840579D3F7F6", "_encstr_BC850785638DA59537" );
            var_4 = getrallyvehiclespawndata( var_2, var_3 );
            var_5 = spawnstruct();

            if ( level.move_spawnpoints_to_valid_positions )
                var_6 = _x1opsnpcwaittilluse::xyvelscale_low( var_4, var_5 );
            else
                var_6 = scripts\mp\vehicles\little_bird_mp::little_bird_mp_spawncallback( var_4, var_5 );

            if ( isdefined( var_6 ) )
            {
                level.rallypointvehicles[level.rallypointvehicles.size] = var_6;
                continue;
            }
        }
    }
    else if ( !istrue( level.completelyremovelittlebird ) )
    {
        if ( level.localeid == "_encstr_8934097830FBB305B537B2" && level.mapname == "_encstr_B7920F6F397892BF7008A36D43D0C7FAC4" && istrue( level._id_11AC5 ) )
        {
            var_10 = [];
            var_10[0] = ( 23718, -4470, -350 );
            var_10[1] = ( 25046, -17463, -50 );
            var_10[2] = ( 19627, -17495, 50 );
            var_10[3] = ( 23478, -7635, -250 );
            var_11 = [];
            var_11[0] = ( 6, 316, 0 );
            var_11[1] = ( 8, 225, 0 );
            var_11[2] = ( 10, 47, 0 );
            var_11[3] = ( 11, 176, 0 );

            foreach ( var_13, var_2 in var_0 )
            {
                var_2.origin = var_10[var_13];
                var_2.angles = var_11[var_13];
            }
        }

        foreach ( var_2 in var_0 )
        {
            if ( isdefined( scripts\cp_mp\utility\game_utility::getlocaleid() ) && isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy != level.localeid )
                continue;

            if ( !isdefined( var_2.angles ) )
                var_2.angles = ( 0, randomfloat( 360 ), 0 );

            var_4 = vehiclespawn_getspawndata( var_2 );

            if ( level.move_spawnpoints_to_valid_positions )
                var_6 = scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_A4E90F635A473A63B2BEC4D2E48CBEAD9D", var_4, undefined );
            else
                var_6 = scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_BC8F0CED4311BB6CA9F19BBFB0A1", var_4, undefined );

            level thread _id_1413A( var_6, "_encstr_9BA4080D39CFFB5AB7C1" );
        }
    }

    var_0 = scripts\engine\utility::getstructarray( "_encstr_985B0ED38113801268678FE86B678F31", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_2 in var_0 )
    {
        if ( isdefined( scripts\cp_mp\utility\game_utility::getlocaleid() ) && isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy != level.localeid )
            continue;

        var_3 = scripts\engine\utility::ter_op( var_2.script_team == "_encstr_BA840579D3F7F6", "_encstr_BA840579D3F7F6", "_encstr_BC850785638DA59537" );
        var_4 = getrallyvehiclespawndata( var_2, var_3 );

        if ( var_3 == "_encstr_BC850785638DA59537" )
            var_4.usealtmodel = 1;

        var_5 = spawnstruct();
        var_6 = scripts\mp\vehicles\apc_rus_mp::apc_rus_mp_spawncallback( var_4, var_5 );

        if ( isdefined( var_6 ) )
        {
            level.rallypointvehicles[level.rallypointvehicles.size] = var_6;
            continue;
        }
    }

    foreach ( var_19 in level.teamnamelist )
    {
        while ( !isdefined( level.availablespawnlocations[var_19][0] ) )
            waitframe();
    }

    var_21 = 0;
    var_22 = 0;
    var_23 = 0;
    var_24 = 0;
    var_25 = 0;
    var_26 = 0;
    var_27 = "_encstr_9F74163BBB7D6759A1A58D8D95F547CA6CD073A58D161BAF";
    var_28 = "_encstr_BAA017844F47F38B5CDA483832B9A1A843D4990DB247BBC1C9";
    var_29 = "_encstr_9F7B10EC777D6756864B1B1B59D70B076CD7";

    foreach ( var_6 in level.rallypointvehicles )
    {
        var_4 = scripts\cp_mp\vehicles\vehicle_tracking::getvehiclespawndata( var_6 );

        if ( !isdefined( var_4.rallypointhealth ) )
            var_4.rallypointhealth = var_6.health;
        else
            var_6.health = var_4.rallypointhealth;

        var_13 = 0;
        var_31 = undefined;

        if ( var_6.team == "_encstr_BA840579D3F7F6" )
        {
            if ( var_6.vehiclename == "_encstr_81D70A1B037642AEF0D9F6BD" )
            {
                var_21++;

                if ( var_21 <= 8 )
                    var_4.ref = var_27 + var_21;
                else
                {

                }
            }
            else if ( var_6.vehiclename == "_encstr_BC8F0CED4311BB6CA9F19BBFB0A1" || var_6.vehiclename == "_encstr_A4E90F635A473A63B2BEC4D2E48CBEAD9D" )
            {
                var_22++;

                if ( var_22 <= 2 )
                    var_4.ref = var_28 + var_22;
                else
                {

                }
            }
            else if ( var_6.vehiclename == "_encstr_AB510CB03836AF93ABCD6ED21673" )
            {
                var_23++;

                if ( var_23 <= 2 )
                    var_4.ref = var_29 + var_23;
                else
                {

                }
            }
        }
        else if ( var_6.vehiclename == "_encstr_81D70A1B037642AEF0D9F6BD" )
        {
            var_24++;

            if ( var_24 <= 8 )
                var_4.ref = var_27 + var_24;
            else
            {

            }
        }
        else if ( var_6.vehiclename == "_encstr_BC8F0CED4311BB6CA9F19BBFB0A1" || var_6.vehiclename == "_encstr_A4E90F635A473A63B2BEC4D2E48CBEAD9D" )
        {
            var_25++;

            if ( var_25 <= 2 )
                var_4.ref = var_28 + var_25;
            else
            {

            }
        }
        else if ( var_6.vehiclename == "_encstr_AB510CB03836AF93ABCD6ED21673" )
        {
            var_26++;

            if ( var_26 <= 2 )
                var_4.ref = var_29 + var_26;
            else
            {

            }
        }

        if ( istrue( level.userallypointvehicles ) && level.userallypointvehicles != 2 )
            watchvehicleforrallypointactivation( var_6 );
    }
}

watchvehicleforrallypointactivation( var_0 )
{
    scripts\mp\rally_point::rallypointvehicle_activate( var_0 );
}

getrallyvehiclespawndata( var_0, var_1 )
{
    var_2 = spawnstruct();
    var_2.origin = var_0.origin;
    var_2.angles = var_0.angles;
    var_2.spawntype = "_encstr_A6BE0A2DE30957B0F745E4DD";
    var_2.cannotbesuspended = 1;
    var_2.team = var_1;
    return var_2;
}

arm_initoutofbounds()
{
    level.outofboundstriggers = [];
    var_0 = getentarray( "_encstr_89720CA7D53A9E6621F657CD91E6", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_2 in var_0 )
    {
        if ( isdefined( scripts\cp_mp\utility\game_utility::getlocaleid() ) && isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == level.localeid && scripts\mp\utility\game_utility_mp::_id_11C8A( var_2 ) )
        {
            level.outofboundstriggers[level.outofboundstriggers.size] = var_2;
            continue;
        }

        var_2 delete();
    }
}

debugprint( var_0 )
{
    if ( 0 )
        return;
}

isobjectivecontested( var_0 )
{
    if ( var_0.ownerteam == "_encstr_BA840579D3F7F6" )
        return var_0.numtouching["_encstr_BC850785638DA59537"] > 0;
    else if ( var_0.ownerteam == "_encstr_BC850785638DA59537" )
        return var_0.numtouching["_encstr_BA840579D3F7F6"] > 0;
}

freeze_bomb_case_timer( var_0 )
{
    var_1 = 0;

    foreach ( var_3 in level.objectives )
    {
        if ( var_3.ownerteam == var_0 )
            var_1++;
    }

    return var_1;
}

createhintobject( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11 )
{
    var_12 = undefined;

    if ( isdefined( var_11 ) )
        var_12 = var_11;
    else
        var_12 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0 );

    var_12 makeusable();

    if ( isdefined( var_11 ) && isdefined( var_0 ) )
        var_12 sethinttag( var_0 );

    if ( isdefined( var_1 ) )
        var_12 setcursorhint( var_1 );
    else
        var_12 setcursorhint( "_encstr_939A0CEC70DBF521459F5B47F73D" );

    if ( isdefined( var_2 ) )
        var_12 sethinticon( var_2 );

    if ( isdefined( var_3 ) )
        var_12 sethintstring( var_3 );

    if ( isdefined( var_4 ) )
        var_12 setusepriority( var_4 );
    else
        var_12 setusepriority( 0 );

    if ( isdefined( var_5 ) )
        var_12 setuseholdduration( var_5 );
    else
        var_12 setuseholdduration( "_encstr_93370F8CAE27588ED27BB9FADC0DDB4EA3" );

    if ( isdefined( var_6 ) )
        var_12 sethintonobstruction( var_6 );
    else
        var_12 sethintonobstruction( "_encstr_BECC05FC5321BA" );

    if ( isdefined( var_7 ) )
        var_12 sethintdisplayrange( var_7 );
    else
        var_12 sethintdisplayrange( 200 );

    if ( isdefined( var_8 ) )
        var_12 sethintdisplayfov( var_8 );
    else
        var_12 sethintdisplayfov( 160 );

    if ( isdefined( var_9 ) )
        var_12 setuserange( var_9 );
    else
        var_12 setuserange( 50 );

    if ( isdefined( var_10 ) )
        var_12 setusefov( var_10 );
    else
        var_12 setusefov( 120 );

    if ( !isdefined( var_11 ) )
        return var_12;
}

calculatefrontline()
{
    if ( level.mapname == "_encstr_A4E60C6B1CF5B093B6BEE8CAE68E" )
    {
        level.c130frontlinepos = ( 0, 375, 0 );
        level.c130frontlinevec = ( 0, 1, 0 );
        level.axisfrontlinevec = ( -1, 0, 0 );
        level.alliesfrontlinevec = ( 1, 0, 0 );
    }
    else
    {
        level.c130frontlinepos = ( 5100, -1615, 0 );
        level.c130frontlinevec = ( 1, 0, 0 );
        level.axisfrontlinevec = ( 0, -1, 0 );
        level.alliesfrontlinevec = ( 0, 1, 0 );
    }
}

getexfilstructs()
{
    var_0 = scripts\engine\utility::getstructarray( "_encstr_9B6517C2D2932339DE07C4DEB10B1DD27B37BE8563B1A559B9", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_1 = scripts\engine\utility::getstructarray( "_encstr_B4741526CB65C2FA6010AB1FB099B45A07D0215E2BFB0B", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_2 = scripts\engine\utility::array_combine( var_0, var_1 );
    var_3 = scripts\engine\utility::getclosest( level.lane_1_obj_struct.currentobjective.gameobject.origin, var_2 );
    var_4 = scripts\engine\utility::getclosest( level.lane_2_obj_struct.currentobjective.gameobject.origin, var_2 );
    var_5 = scripts\engine\utility::getclosest( level.lane_3_obj_struct.currentobjective.gameobject.origin, var_2 );
    level.armexfilcount = 3;
    return [ var_3, var_4, var_5 ];
}

onexfilfinish( var_0 )
{

}

onexfilkilled( var_0 )
{
    level.armexfilcount--;

    if ( level.armexfilcount == 0 )
        thread scripts\mp\gamelogic::endgame( var_0, game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_97CA113A0B4ED995E8AF192BE64739BDE5B246"] );
}

sortlocationsbydistance( var_0, var_1 )
{
    return distancesquared( var_0.origin, self.origin ) < distancesquared( var_1.origin, self.origin );
}

calculatedroplocationnearlocation( var_0, var_1, var_2 )
{
    var_3 = var_0.origin;
    var_4 = undefined;
    var_5 = undefined;
    var_6 = randomint( 2 );
    var_7 = scripts\engine\utility::ter_op( var_6, -1.0, 1.0 );

    if ( var_7 > 0 )
    {
        var_4 = randomfloatrange( var_3[0] + var_1 * var_7, var_3[0] + var_2 * var_7 );

        if ( var_4 >= level.br_level.br_corners[0][0] )
            var_4 = level.br_level.br_corners[0][0] - 250;
    }
    else
    {
        var_4 = randomfloatrange( var_3[0] + var_2 * var_7, var_3[0] + var_1 * var_7 );

        if ( var_4 <= level.br_level.br_corners[1][0] )
            var_4 = level.br_level.br_corners[1][0] + 250;
    }

    var_6 = randomint( 2 );
    var_7 = scripts\engine\utility::ter_op( var_6, -1.0, 1.0 );

    if ( var_7 > 0 )
    {
        var_5 = randomfloatrange( var_3[1] + var_1 * var_7, var_3[1] + var_2 * var_7 );

        if ( var_5 >= level.br_level.br_corners[0][1] )
            var_5 = level.br_level.br_corners[0][1] - 250;
    }
    else
    {
        var_5 = randomfloatrange( var_3[1] + var_2 * var_7, var_3[1] + var_1 * var_7 );

        if ( var_5 >= level.br_level.br_corners[1][1] )
            var_5 = level.br_level.br_corners[1][1] + 250;
    }

    var_8 = spawnstruct();
    var_8.origin = ( var_4, var_5, var_3[2] );
    return var_8;
}

debugsphereonlocation( var_0, var_1, var_2 )
{

}

getmissedinfilcamerapositions( var_0 )
{
    var_1 = spawnstruct();
    var_1.startorigin = undefined;
    var_1.endpos = undefined;

    if ( level.mapname == "_encstr_B3A80F976B315198DBB2A37FE6B508EB5B" )
    {
        switch ( level.localeid )
        {
            case "_encstr_8A3409C6F6D82C36B2F5C1":
            case "_encstr_8934097830FBB305B537B2":
                if ( var_0 == "_encstr_BA840579D3F7F6" )
                {
                    var_1.startorigin = ( 2094, -1804, 2763 );
                    var_1.startangles = ( 54, 40, 0 );
                    var_1.endorigin = ( 2094, -1804, 2763 );
                    var_1.endangles = ( 54, 40, 0 );
                }
                else
                {
                    var_1.startorigin = ( 2315, 1956, 2763 );
                    var_1.startangles = ( 54, 296, 0 );
                    var_1.endorigin = ( 2094, -1804, 2763 );
                    var_1.endangles = ( 54, 40, 0 );
                }

                break;
            default:
                var_1.startorigin = ( 0, 0, 0 );
                var_1.startangles = ( 0, 0, 0 );
                var_1.endorigin = ( 0, 0, 0 );
                var_1.endangles = ( 0, 0, 0 );
                break;
        }
    }
    else
    {
        switch ( level.localeid )
        {
            case "_encstr_A83409096FE267B885318B":
                if ( var_0 == "_encstr_BA840579D3F7F6" )
                {
                    var_1.startorigin = ( 38864, -14018, -396 );
                    var_1.startangles = ( 3, 250, 0 );
                    var_1.endorigin = ( 38473, -14077, 401 );
                    var_1.endangles = ( 15, 252, 0 );
                }
                else
                {
                    var_1.startorigin = ( 30526, -38262, -483 );
                    var_1.startangles = ( 0, 72, 0 );
                    var_1.endorigin = ( 30024, -38403, 560 );
                    var_1.endangles = ( 19, 67, 0 );
                }

                break;
            case "_encstr_8934097830FBB305B537B2":
                if ( var_0 == "_encstr_BA840579D3F7F6" )
                {
                    var_1.startorigin = ( 16977, -23256, 169 );
                    var_1.startangles = ( 9, 69, 0 );
                    var_1.endorigin = ( 16899, -23467, 683 );
                    var_1.endangles = ( 15, 68, 0 );
                }
                else
                {
                    var_1.startorigin = ( 18607, 1423, -355 );
                    var_1.startangles = ( 8, 289, 0 );
                    var_1.endorigin = ( 18100, 1083, 503 );
                    var_1.endangles = ( 22, 302, 0 );
                }

                break;
            case "_encstr_8A3409C6F6D82C36B2F5C1":
                if ( var_0 == "_encstr_BA840579D3F7F6" )
                {
                    var_1.startorigin = ( 18672, -26836, -129 );
                    var_1.startangles = ( 359, 76, 0 );
                    var_1.endorigin = ( 18518, -26909, 314 );
                    var_1.endangles = ( 14, 69, 0 );
                }
                else
                {
                    var_1.startorigin = ( 18607, 1423, -355 );
                    var_1.startangles = ( 8, 289, 0 );
                    var_1.endorigin = ( 18100, 1083, 503 );
                    var_1.endangles = ( 22, 302, 0 );
                }

                break;
            case "_encstr_A19F0AB9DF52D70815A15B43":
            case "_encstr_8134093DC83841DAA5AFDE":
                if ( var_0 == "_encstr_BA840579D3F7F6" )
                {
                    var_1.startorigin = ( 24893, 28349, 1408 );
                    var_1.startangles = ( 15, 54, 0 );
                    var_1.endorigin = ( 25613, 29274, 1255 );
                    var_1.endangles = ( 19, 53, 0 );
                }
                else
                {
                    var_1.startorigin = ( 39490, 48919, 2302 );
                    var_1.startangles = ( 17, 235, 0 );
                    var_1.endorigin = ( 39254, 48584, 1542 );
                    var_1.endangles = ( 18, 245, 0 );
                }

                break;
            case "_encstr_A6340973B8A9A90A1B7890":
                if ( var_0 == "_encstr_BA840579D3F7F6" )
                {
                    var_1.startorigin = ( 48331, -24822, 514 );
                    var_1.startangles = ( 12, 77, 0 );
                    var_1.endorigin = ( 48424, -24421, -240 );
                    var_1.endangles = ( 2, 77, 0 );
                }
                else
                {
                    var_1.startorigin = ( 46188, 2520, 49 );
                    var_1.startangles = ( 7, 295, 0 );
                    var_1.endorigin = ( 46571, 2664, 526 );
                    var_1.endangles = ( 16, 276, 0 );
                }

                break;
            case "_encstr_BD9F0AB1F63658362BBE9803":
                if ( var_0 == "_encstr_BA840579D3F7F6" )
                {
                    var_1.startorigin = ( -11083, 22197, 381 );
                    var_1.startangles = ( 10, 181, 0 );
                    var_1.endorigin = ( -12112, 23761, 381 );
                    var_1.endangles = ( 11, 201, 0 );
                }
                else
                {
                    var_1.startorigin = ( -31134, 11924, -116 );
                    var_1.startangles = ( 0, 36, 0 );
                    var_1.endorigin = ( -31134, 11924, 434 );
                    var_1.endangles = ( 11, 36, 0 );
                }

                break;
            case "_encstr_B99F0A1045C3A891FACFDBAF":
                if ( var_0 == "_encstr_BA840579D3F7F6" )
                {
                    var_1.startorigin = ( 9215, 984, 325 );
                    var_1.startangles = ( 357, 186, 0 );
                    var_1.endorigin = ( 9107, 628, 1144 );
                    var_1.endangles = ( 19, 182, 0 );
                }
                else
                {
                    var_1.startorigin = ( -5351, 641, 408 );
                    var_1.startangles = ( 2, 352, 0 );
                    var_1.endorigin = ( -5282, 996, 1103 );
                    var_1.endangles = ( 11, 347, 0 );
                }

                break;
            case "_encstr_809F0AB4AABB41F523CFB63A":
                if ( var_0 == "_encstr_BA840579D3F7F6" )
                {
                    var_1.startorigin = ( -22847, -28632, 34 );
                    var_1.startangles = ( 12, 42, 0 );
                    var_1.endorigin = ( -22694, -28429, 356 );
                    var_1.endangles = ( 12, 40, 0 );
                }
                else
                {
                    var_1.startorigin = ( -8084, -20649, 72 );
                    var_1.startangles = ( 10, 185, 0 );
                    var_1.endorigin = ( -9092, -20635, 224 );
                    var_1.endangles = ( 12, 184, 0 );
                }

                break;
            default:
                var_1.startorigin = ( 0, 0, 0 );
                var_1.startangles = ( 0, 0, 0 );
                var_1.endorigin = ( 0, 0, 0 );
                var_1.endangles = ( 0, 0, 0 );
                break;
        }
    }

    return var_1;
}

calculatehqmidpoint()
{
    level.hqmidpoint = ( level.gw_objstruct.axishqloc.trigger.origin + level.gw_objstruct.allieshqloc.trigger.origin ) * 0.5;
    level.hqvecttomid_allies = level.gw_objstruct.axishqloc.trigger.origin - level.hqmidpoint;
    level.hqvecttomid_axis = level.gw_objstruct.allieshqloc.trigger.origin - level.hqmidpoint;
    level.hqdisttomid = length( level.hqvecttomid_axis );
}

calculatecameraoffset( var_0, var_1 )
{
    switch ( level.mapname )
    {
        case "_encstr_AA240B913AD1C3B379DB98C832":
            var_2 = 0.25;
            var_3 = 0.35;
            break;
        case "_encstr_983F0AD60EBECC2C4E5BE619":
            var_2 = 0.25;
            var_3 = 0.8;
            break;
        case "_encstr_B3FB0A309BE727E0D4F143A9":
            var_2 = 0.5;
            var_3 = 0.3;
            break;
        default:
            var_2 = 0.0;
            var_3 = 0.0;
            break;
    }

    var_4 = distance( var_1, level.hqmidpoint );

    if ( var_4 < 2048 )
        return ( 0, 0, 0 );

    if ( var_0 == "_encstr_BA840579D3F7F6" )
    {
        var_5 = distance( level.gw_objstruct.axishqloc.trigger.origin, var_1 );
        var_6 = level.hqvecttomid_axis;
    }
    else
    {
        var_5 = distance( level.gw_objstruct.allieshqloc.trigger.origin, var_1 );
        var_6 = level.hqvecttomid_allies;
    }

    if ( var_5 < 2048 )
        return var_6 * var_2;

    if ( var_5 > level.hqdisttomid )
    {
        if ( var_0 == "_encstr_BA840579D3F7F6" )
            var_5 = distance( level.gw_objstruct.allieshqloc.trigger.origin, var_1 );
        else
            var_5 = distance( level.gw_objstruct.axishqloc.trigger.origin, var_1 );

        var_7 = 100 - var_5 * 100 / level.hqdisttomid;
        var_8 = var_6 * var_3 * -1.0 * ( var_7 / 100 );
        return var_8;
    }
    else
    {
        var_7 = 100 - var_5 * 100 / level.hqdisttomid;
        var_8 = var_6 * var_2 * ( var_7 / 100 );
        return var_8;
    }
}

_id_1368D()
{
    if ( isdefined( self.selectedspawnarea ) && issubstr( self.selectedspawnarea, "_encstr_BA0703A843" ) )
        return 1;

    return 0;
}
