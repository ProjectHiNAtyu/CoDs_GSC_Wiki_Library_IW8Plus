// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    if ( getdvar( "_encstr_9E700851BEE33DF1B547" ) == "_encstr_8A510E519897A1332E4A3898E243F5B9" )
        return;

    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    var_0[0] = scripts\mp\utility\game::getgametype();
    scripts\mp\gameobjects::main( var_0 );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( scripts\mp\utility\game::getgametype(), 0, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 600 );
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 65 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerdogtagsenableddvar( scripts\mp\utility\game::getgametype(), 1 );
    }

    updategametypedvars();
    level.teambased = 1;
    level.onstartgametype = ::onstartgametype;
    level.getspawnpoint = ::getspawnpoint;
    level.onnormaldeath = ::onnormaldeath;
    level.modeonspawnplayer = ::onspawnplayer;
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_82F717CFD11881493A7FC95F93BB52A5BE885039DC63315172";

    if ( getdvarint( "_encstr_B8020A9E9AA69A6292517AA0" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_891904A1D8BE" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];

    game["_encstr_B8DA073D799798C7C7"]["_encstr_A1B206E238A5E3F5"] = "_encstr_8956145E7017FBA43E80475B909167F2ED9BA215EDB9";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9E240C10CE33016D6AEA39B0F244"] = "_encstr_8956145E7017FBA43E80475B909167F2ED9BA215EDB9";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B3420C3D576AC3C8736F09906BB2"] = "_encstr_8956145E7017FBA43E80475B909167F2ED9BA215EDB9";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_A1BA0FAFC8E2E12ED7A0B8307283B0A361"] = "_encstr_A1BA0FAFC8E2E12ED7A0B8307283B0A361";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B8FD0A886FA64B7FFBEE1C1E"] = "_encstr_B8FD0A886FA64B7FFBEE1C1E";
    level.conf_fx["_encstr_AAE007D90BB9A5E61A"] = loadfx( "_encstr_97531F35435B48F8877259185C7D98970293B73FBF5227C8AC0183C8C54F10DBCB" );
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_B72A1ABEDE23BF91974BD8191BBFE865EB42A7CDF26897F846AF60B0", getmatchrulesdata( "_encstr_94F009D8DEE6334458E8C2", "_encstr_9B5711D79F5738112201208028FDEDF1EF2AD1" ) );
    setdynamicdvar( "_encstr_9B97176F907A1FB9306361F70130404DACC021A1B2D9357B67", getmatchrulesdata( "_encstr_94F009D8DEE6334458E8C2", "_encstr_AB030E38ED4BB91DE641AC9388CA732F" ) );
    setdynamicdvar( "_encstr_BCC61D979F6EA1333088A7E1406874CA46192B47031AA8E773911CB2B8D084", getmatchrulesdata( "_encstr_94F009D8DEE6334458E8C2", "_encstr_A10B1428C3F89917136A62F950614F48BE202352D532" ) );
    setdynamicdvar( "_encstr_807D12325E15019B1070936F58095C5AA1E33D2F", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_9E91056EB77B0E", 0 );
    setdynamicdvar( "_encstr_81441183A855792748A8FECFBF33CF3D87686A", 0 );
}

onstartgametype()
{
    setclientnamemode( "_encstr_95900C2EDBD01F99D6B1DFEB878D" );

    if ( !isdefined( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
        game["_encstr_A6D60EE09BF413B9945185CB4797C583"] = 0;

    if ( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] )
    {
        var_0 = game["_encstr_941C0A6AF345075ED05BEAD3"];
        var_1 = game["_encstr_95A70AA81FEE295D3A2F56DE"];
        game["_encstr_941C0A6AF345075ED05BEAD3"] = var_1;
        game["_encstr_95A70AA81FEE295D3A2F56DE"] = var_0;
    }

    foreach ( var_3 in level.teamnamelist )
    {
        scripts\mp\utility\game::setobjectivetext( var_3, &"_encstr_97221069308493757361049513F63DFFFD18" );

        if ( level.splitscreen )
            scripts\mp\utility\game::setobjectivescoretext( var_3, &"_encstr_97221069308493757361049513F63DFFFD18" );
        else
            scripts\mp\utility\game::setobjectivescoretext( var_3, &"_encstr_B6E01644CA4DCF7B33747D7D4EAF75D7A32B39B6D604267D" );

        scripts\mp\utility\game::setobjectivehinttext( var_3, &"_encstr_984715D34894A81AA894658A4DE5349E72C8EB42A47251" );
    }

    initspawns();
    level.dogtagallyonusecb = ::dogtagallyonusecb;
    level.dogtagenemyonusecb = ::dogtagenemyonusecb;
}

initspawns()
{
    scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_AA1608C17786F13312D3", "_encstr_A8E80F2F633A9549FE2228CDCB8CA0C052" );
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    scripts\mp\spawnlogic::addspawnpoints( game["_encstr_941C0A6AF345075ED05BEAD3"], "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    scripts\mp\spawnlogic::addspawnpoints( game["_encstr_95A70AA81FEE295D3A2F56DE"], "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    var_0 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    var_1 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_9303101723E2CE585F5E839B464B688D6B97", var_0 );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", var_1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_B1090D98F3211171B757B62F41F7F8" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_B1090D98F3211171B757B62F41F7F8" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
    var_2 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_B1090D98F3211171B757B62F41F7F8" );
    var_3 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_930E073E8FC00DDF69", var_2 );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_A30C093385361B4CB06C6D", var_3 );
    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
}

updategametypedvars()
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
    level.scoreconfirm = scripts\mp\utility\dvars::dvarintvalue( "_encstr_9B5711D79F5738112201208028FDEDF1EF2AD1", 1, 0, 25 );
    level.scoredeny = scripts\mp\utility\dvars::dvarintvalue( "_encstr_AB030E38ED4BB91DE641AC9388CA732F", 0, 0, 25 );
    level.vocalloutstring = scripts\mp\utility\dvars::dvarintvalue( "_encstr_A10B1428C3F89917136A62F950614F48BE202352D532", 0, 0, 1 );
}

getspawnpoint()
{
    var_0 = self.pers["_encstr_89EF05D46BA8FD"];

    if ( scripts\mp\spawnlogic::shoulduseteamstartspawn() )
    {
        if ( var_0 == game["_encstr_941C0A6AF345075ED05BEAD3"] )
        {
            scripts\mp\spawnlogic::activatespawnset( "_encstr_9303101723E2CE585F5E839B464B688D6B97", 1 );
            var_1 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_9303101723E2CE585F5E839B464B688D6B97" );
        }
        else
        {
            scripts\mp\spawnlogic::activatespawnset( "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", 1 );
            var_1 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23" );
        }
    }
    else
        var_1 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, "_encstr_930E073E8FC00DDF69", "_encstr_A30C093385361B4CB06C6D" );

    return var_1;
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::oncommonnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 );
}

onspawnplayer()
{
    self setclientomnvar( "_encstr_AD061ACF50F64D32C19E2CE9FEB94A1CDB18EF03F808AC19E9A5305B", 33 );
}

dogtagallyonusecb( var_0 )
{
    if ( isplayer( var_0 ) )
    {
        var_0 scripts\mp\utility\stats::setextrascore1( var_0.pers["_encstr_954E074A20D55C9771"] );
        var_0 scripts\mp\gamescore::giveteamscoreforobjective( var_0.pers["_encstr_89EF05D46BA8FD"], level.scoredeny, 0 );
    }
}

dogtagenemyonusecb( var_0 )
{
    if ( isplayer( var_0 ) )
    {
        var_0 scripts\mp\utility\dialog::leaderdialogonplayer( "_encstr_A1BA0FAFC8E2E12ED7A0B8307283B0A361", undefined, undefined, undefined, 4 );
        var_0 scripts\mp\utility\stats::setextrascore0( var_0.pers["_encstr_930E0A338F20CFFF66C83A32"] );

        if ( istrue( level.vocalloutstring ) )
        {
            if ( !var_0 scripts\mp\utility\perk::_hasperk( "_encstr_B4F424AE0A42D72069B35838978BF8117A72A5B6277A8FAE44A7F9705FD7D34B535B1EB5BE72" ) )
                var_0 scripts\mp\killstreaks\killstreaks::givestreakpoints( "_encstr_9EEB08EFAF2B15984A67", 1, 0 );
            else
                var_0 scripts\mp\killstreaks\killstreaks::givestreakpoints( "_encstr_9EEB08EFAF2B15984A67", 1, 150 );
        }
    }

    var_0 scripts\mp\gamescore::giveteamscoreforobjective( var_0.pers["_encstr_89EF05D46BA8FD"], level.scoreconfirm, 0 );
}
