// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    var_0 = spawnstruct();
    var_0._id_140CF = ::_id_140CF;
    var_0.weight = getdvarfloat( "_encstr_9DFC1A4F278BAFA0CA69CB610183A84003D3EBD58FA1DC50F97FB05B", 1.0 );
    var_0._id_14382 = ::_id_14382;
    var_0.attackerswaittime = ::attackerswaittime;
    var_0._id_11B78 = getdvarint( "_encstr_AAA41D903A92AF59D37F1F9D67CF40877A73A893936113F1135725833DFFEB", 1 );
    var_0.guard_door_clip = _encstr_AABE29576EC6B050735F77CF1048B717235F431361220B27536397F30F76A840C21F1B3D9DAC0336276B5E::relic_squadlink_init_vfx( "_encstr_939A0989625FE7588FA22F", "_encstr_A2F6273B613760313E3122BE567186524AAFA1BF074EA00A9812691622DE4158E1AE7AAA3DB1A9B9C3" );
    var_1 = scripts\engine\utility::ter_op( _encstr_AABE29576EC6B050735F77CF1048B717235F431361220B27536397F30F76A840C21F1B3D9DAC0336276B5E::_id_11E05(), 120.0, 0 );
    var_2 = getdvarint( "_encstr_97181CCDB139D7899CD70E56D71B347B831C95E4DCF5635ACCB23A2D6BAC", var_1 );
    var_0.sol_5_6_pool = var_2;
    _encstr_AABE29576EC6B050735F77CF1048B717235F431361220B27536397F30F76A840C21F1B3D9DAC0336276B5E::_id_12B35( 1, var_0 );
    game["_encstr_B8DA073D799798C7C7"]["_encstr_80E41D38AEC463D2C6D756672BB9A39BFA1B437BC1C1CA3937F5B91D16391D"] = "_encstr_BA0724900BF0FD4F5E1EAA63A120F3F2C1AF2D1899E8C0CF76D0020B2B8D93AA6957A491F590";
}

_id_140CF()
{
    var_0 = scripts\mp\utility\game::round_vehicle_logic() == "_encstr_BE180432D63D" || scripts\mp\utility\game::round_vehicle_logic() == "_encstr_89E10946E1536E6DD6A2B0" || scripts\mp\utility\game::round_vehicle_logic() == "_encstr_AD1F058082CACF";
    return !var_0;
}

_id_14382()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_894314512A8386183577C1F3721DB05E9F820B194243" );
    var_0 = forest_combat();
    wait( var_0 );
}

attackerswaittime()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = getdvarint( "_encstr_889319CDB1E4EB13C9AF1C56EB6CD0BD38E0954EE6AFB17B573747", 5 );
    level forest_fire_setup( var_0 );
    _encstr_AABE29576EC6B050735F77CF1048B717235F431361220B27536397F30F76A840C21F1B3D9DAC0336276B5E::_id_13371( "_encstr_9355159827AF832BFAC686F638E0ACE437F5E68E0B93A3" );
    _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::brleaderdialog( "_encstr_80E41D38AEC463D2C6D756672BB9A39BFA1B437BC1C1CA3937F5B91D16391D" );
    setomnvar( "_encstr_828C1D25C9DFAB433672F0D89A4B2B202B57A19356EFF0B39A6930602222D3", 1 );
    thread _id_13622( var_0 );
    var_1 = 10.0;
    thread _encstr_AABE29576EC6B050735F77CF1048B717235F431361220B27536397F30F76A840C21F1B3D9DAC0336276B5E::_encstr_B8D312272B9B951DB5B4CD965BC207835D8D9B59( var_1 );
    _id_14404( var_1 );
}

forest_combat()
{
    var_0 = getdvarfloat( "_encstr_8A4A21CDB1C9BE4CC9D70E2BBE1B34DEE01C5939B9EB6E1DB0E4E847B4B6B2EB6B5ADC", 555.0 );
    var_1 = getdvarfloat( "_encstr_804A21A388755903CBD00815C831F39DD9A84A2B60570A1381AEF41CFB988F293BC823", 765.0 );

    if ( var_1 > var_0 )
        return randomfloatrange( var_0, var_1 );
    else
        return var_0;
}

_id_14404( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( var_0 ) )
        wait( var_0 );

    for (;;)
    {
        var_1 = level._id_119E7;

        if ( !isdefined( var_1 ) )
            break;

        var_1 = scripts\engine\utility::array_removeundefined( var_1 );

        if ( var_1.size == 0 )
            break;

        wait 1.0;
    }
}

_id_13622( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = undefined;
    var_2 = undefined;

    if ( isdefined( level.br_circle ) && isdefined( level.br_circle.safecircleent ) )
    {
        var_1 = _encstr_8A18233F26D6B373C5535613B3D5AABF583020D08BFDCE86F68B4649324ABAB809C65856C7::getsafecircleorigin();
        var_2 = _encstr_8A18233F26D6B373C5535613B3D5AABF583020D08BFDCE86F68B4649324ABAB809C65856C7::getsafecircleradius();
    }
    else
    {
        level.binoculars_checkexpirationtimer = 35;
        level._id_12946 = 1;
        level.fly_over_path = 0;
        level thread _encstr_A2492BA3CB101C08B5538E9960B05AF7752874B9432F4B02B952682D25AA266D574710E02139A3784BEE18DB92::_id_1325B();
    }

    _encstr_8936284EF93A709710F81A5D08D76AE3218D9410E3F5160F5903B7E99AED0BD3B8DF43EAEB15C2C75B4E::init();
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_8A480F89397DD8EDBD1D6C43DE8338CAE4", "_encstr_A6FD17C177CDB0AEABF2F3FBBA2B78B025F34553F437F1FEA7", ::_id_1200F );

    if ( !isdefined( level._id_1229F ) )
    {
        var_3 = _encstr_8936284EF93A709710F81A5D08D76AE3218D9410E3F5160F5903B7E99AED0BD3B8DF43EAEB15C2C75B4E::_id_11A0C( var_1, var_2 );
        _encstr_8936284EF93A709710F81A5D08D76AE3218D9410E3F5160F5903B7E99AED0BD3B8DF43EAEB15C2C75B4E::_id_11A0D( var_3 );
    }

    var_4 = getdvarint( "_encstr_89221BCDB127AF894ED73895D73686F6C138564E6EEBD696E6464BB9E8", 6000 );

    if ( level.mapname == "_encstr_A6341077402EAAEB6F61873EDB3BE27971B0" )
        var_4 = 1000;

    for ( var_5 = 0; var_5 < var_0; var_5++ )
    {
        var_6 = undefined;

        if ( isdefined( level._id_1229F ) )
            var_6 = level._id_1229F[var_5];
        else
        {
            var_7 = var_5 % 4 + 1;
            var_6 = _encstr_8936284EF93A709710F81A5D08D76AE3218D9410E3F5160F5903B7E99AED0BD3B8DF43EAEB15C2C75B4E::_id_11A07( level._id_119E6["_encstr_A41406409B96193E" + var_7], var_4 );
        }

        var_8 = _encstr_8936284EF93A709710F81A5D08D76AE3218D9410E3F5160F5903B7E99AED0BD3B8DF43EAEB15C2C75B4E::_id_11A18( var_6, "_encstr_B6881AB85A14AF79BB4F1F175D8BA6BF3B7383E883AB77D36757A90F" );

        if ( isdefined( var_8 ) )
        {
            if ( isdefined( level._id_1229D ) )
                var_8.lootfunc = level._id_1229D;
            else
                var_8.lootfunc = ::dropcrate;

            if ( !getdvarint( "_encstr_8AA71AA802AA87718B1777E53FE7785F929B8028FB09338BCB51F6EA", 0 ) )
            {
                var_8.frontturret._id_13E86 = 1;
                var_8.frontturret makeunusable();
                var_8.rearturret._id_13E86 = 1;
                var_8.rearturret makeunusable();
            }

            var_8.flaresreservecount = getdvarint( "_encstr_87461AABF20B10A82AEF496BC756C0C0AB5BE1731B67349086BA7B7F", 0 );
            var_8.health = getdvarint( "_encstr_803C1AB673DBFEDD82D1A818C99E81B0AB0835AEDBC7C02BAECA8078", 5000 );
            var_8.maxhealth = getdvarint( "_encstr_803C1AB673DBFEDD82D1A818C99E81B0AB0835AEDBC7C02BAECA8078", 5000 );

            if ( _encstr_AABE29576EC6B050735F77CF1048B717235F431361220B27536397F30F76A840C21F1B3D9DAC0336276B5E::unset_relic_healthpacks() )
                var_8.lifetime = _encstr_8A18233F26D6B373C5535613B3D5AABF583020D08BFDCE86F68B4649324ABAB809C65856C7::inithelirepository();
            else if ( self.sol_5_6_pool )
                var_8.lifetime = self.sol_5_6_pool;

            if ( getdvarint( "_encstr_8AA71AA802AA87718B1777E53FE7785F929B8028FB09338BCB51F6EA", 0 ) != 0 )
                var_9 = "_encstr_B68B23D53499B36B3FD3C0B1F75923FB429D4D488CF26F50D7FB20D8E74F99094A8247EDA2";
            else
                var_9 = "_encstr_B9B5297B2D80872AC1853A0F836872CF3558F341E8665765E9ED2F2B97717E6368F31B6A13D0375BC0CD4C";

            scripts\mp\objidpoolmanager::update_objective_icon( var_8.objectiveiconid, var_9 );
        }

        wait 1;
    }

    var_10 = getdvarfloat( "_encstr_80C92D37B127EB89E4BE0E2BBEB10DBD070EE0593937EB8DB44E6C1BCA7D9116B5169DB27DCDA358C91DEB474BB5CA", 10.0 );
    level.delay_turn_on_headlights = gettime() + int( var_10 * 1000.0 );
}

dropcrate()
{
    scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_deregisterinstance( self );
    var_0 = _encstr_8936284EF93A709710F81A5D08D76AE3218D9410E3F5160F5903B7E99AED0BD3B8DF43EAEB15C2C75B4E::_id_11A06( self.origin + ( 0, 0, 500 ) );

    if ( isdefined( var_0 ) )
    {
        var_1 = scripts\cp_mp\killstreaks\airdrop::missionid( self.origin, var_0 );
        var_2 = scripts\cp_mp\killstreaks\airdrop::gettriggerobject( var_1 );
        var_2._id_140A0 = 10;

        if ( !isdefined( level.delay_turn_off_tum_display ) )
            level.delay_turn_off_tum_display = [];

        level.delay_turn_off_tum_display[level.delay_turn_off_tum_display.size] = var_1;
    }
}

_id_1200F( var_0 )
{
    self.itemsdropped = 0;

    if ( !isdefined( level.delay_turn_off_red_lights_along_track ) )
        level.delay_turn_off_red_lights_along_track = 0;
    else
        level.delay_turn_off_red_lights_along_track = ( level.delay_turn_off_red_lights_along_track + 1 ) % 10;

    var_1 = verifybunkercode( "_encstr_9B951101771156A89FEAF3A9924738162A9B93", level.delay_turn_off_red_lights_along_track );

    if ( isdefined( var_1 ) )
        var_1 = _encstr_A38826AFC76BFBD02C8280C06AAFB0277227292323A2BE6252DAB6F855C7606EEA97E993C2EA06F8::_id_11A1A( var_1, var_0 );

    if ( isdefined( var_1 ) && var_0 scripts\mp\utility\perk::_hasperk( "_encstr_B12525DC072BC62D166347CBEB9893BE59873A39C27DB6D21B63B9A39C952CD6FAC6432C378DB2" ) )
        var_1 = _encstr_A38826AFC76BFBD02C8280C06AAFB0277227292323A2BE6252DAB6F855C7606EEA97E993C2EA06F8::_id_11A1D( var_1, var_0 );

    if ( isdefined( var_1 ) )
        var_2 = _encstr_A38826AFC76BFBD02C8280C06AAFB0277227292323A2BE6252DAB6F855C7606EEA97E993C2EA06F8::_id_11A02( var_1 );

    if ( !isdefined( var_0._id_11A01 ) )
        var_0._id_11A01 = 1;
    else
        var_0._id_11A01++;

    var_0 scripts\mp\utility\stats::setextrascore1( var_0._id_11A01 );
    var_0 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_9F6119B5A3317078B0A99956399A70112D4B410ED71E7F0F9B58C0" );
}

dangercircletick( var_0, var_1 )
{
    if ( !isdefined( level.delay_turn_on_headlights ) || gettime() < level.delay_turn_on_headlights )
        return;

    var_2 = getdvarfloat( "_encstr_A645268BD186BF5E586FA88557E8E4B72F2B62633BC8F7D4307FBC8DBF386EE7DF61FA3963BBBF8C", 500.0 );
    var_3 = 240.0;
    var_4 = level._id_119E7;

    if ( isdefined( var_4 ) )
    {
        var_4 = scripts\engine\utility::array_removeundefined( var_4 );

        foreach ( var_6 in var_4 )
        {
            var_7 = 0;
            var_8 = var_6.origin;
            var_9 = distance2d( var_0, var_8 );

            if ( var_9 + var_3 > var_1 )
                var_7 = 1;

            if ( var_7 )
            {
                var_10 = var_6.health;
                var_11 = var_6.maxhealth;
                var_6 dodamage( var_2, var_8, undefined, undefined, "_encstr_A43E119D6859218C97A9F7EFD14F4F98831E53", "_encstr_9812113CE798CF17ADB90AA2B8E70D9F16DE92" );
            }
        }
    }

    var_13 = getdvarfloat( "_encstr_ADF427CD36E4AF13E47DC6A59C1B63597D7B13A6B2B1D1AFB1B159C29B5D83FAE84393953786F68D32", 2400.0 );
    var_14 = level.delay_turn_off_tum_display;

    if ( isdefined( var_14 ) )
    {
        var_14 = scripts\engine\utility::array_removeundefined( var_14 );

        foreach ( var_16 in var_14 )
        {
            var_17 = distance2dsquared( var_16.origin, var_0 );
            var_18 = max( 0, var_1 + var_13 );

            if ( var_17 > var_18 * var_18 )
                var_16 thread scripts\cp_mp\killstreaks\airdrop::destroycrate();
        }
    }
}

forest_fire_setup( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( !isdefined( level.br_circle ) || !isdefined( level.br_circle.safecircleent ) )
        return;

    var_1 = _encstr_8A18233F26D6B373C5535613B3D5AABF583020D08BFDCE86F68B4649324ABAB809C65856C7::getsafecircleorigin();
    var_2 = _encstr_8A18233F26D6B373C5535613B3D5AABF583020D08BFDCE86F68B4649324ABAB809C65856C7::getsafecircleradius();
    var_3 = 0.3;
    var_4 = 0.8;
    var_5 = var_2 * var_3;
    var_6 = var_2 * var_4;
    [var_8, var_9] = play_tape_machine_animation( var_1, var_5, var_6 );

    if ( var_8 == var_9 )
        return;

    if ( var_8 != 0.0 || var_9 != 360.0 )
    {
        var_8 = var_8 + 20.0;
        var_9 = var_9 - 20.0;

        if ( var_9 <= var_8 )
            return;
    }
    else
    {
        var_10 = randomfloatrange( 0.0, 360.0 );
        var_8 = var_8 + var_10;
        var_9 = var_9 + var_10;
    }

    var_11 = ( var_9 - var_8 ) / max( 1.0, var_0 - 1 );
    level._id_1229F = [];

    for ( var_12 = 0; var_12 < var_0; var_12++ )
    {
        var_13 = var_8 + var_11 * var_12;
        var_14 = anglestoforward( ( 0.0, var_13, 0.0 ) );

        if ( var_6 > var_5 )
            var_15 = randomfloatrange( var_5, var_6 );
        else
            var_15 = var_6;

        var_16 = var_1 + var_14 * var_15;

        if ( isscriptabledefined() )
            var_16 = getclosestpointonnavmesh( var_16 );

        var_17 = spawnstruct();
        var_17.origin = var_16;
        level._id_1229F[var_12] = var_17;
    }
}

play_tape_machine_animation( var_0, var_1, var_2 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_3 = level.mapcenter - var_0;
    var_3 = ( var_3[0], var_3[1], 0.0 );
    var_3 = vectornormalize( var_3 );
    var_4 = vectortoyaw( var_3 );
    var_5 = var_0 + var_3 * var_1;
    var_6 = var_0 + var_3 * var_2;
    var_7 = !scripts\mp\outofbounds::ispointinoutofbounds( var_5 ) && !scripts\mp\outofbounds::ispointinoutofbounds( var_6 );

    if ( !var_7 )
        return [ 0.0, 0.0 ];

    var_8 = 45.0;
    var_9 = 45.0;
    var_10 = var_4;
    var_11 = var_4 + var_8;
    var_12 = var_4;
    var_13 = var_4 - var_9;
    var_14 = 0;
    var_15 = 180 / int( var_8 );
    var_16 = 0;
    var_17 = 1.0;

    for (;;)
    {
        if ( var_8 >= var_17 )
        {
            var_18 = anglestoforward( ( 0.0, var_11, 0.0 ) );
            var_19 = var_0 + var_18 * var_1;
            var_20 = var_0 + var_18 * var_2;
            var_21 = !scripts\mp\outofbounds::ispointinoutofbounds( var_19 ) && !scripts\mp\outofbounds::ispointinoutofbounds( var_20 );

            if ( var_21 )
            {
                var_10 = var_11;
                var_11 = var_10 + var_8;
            }
            else
            {
                var_16 = 1;
                var_8 = var_8 * 0.5;
                var_11 = var_10 + var_8;
            }
        }

        if ( var_9 >= var_17 )
        {
            var_22 = anglestoforward( ( 0.0, var_13, 0.0 ) );
            var_23 = var_0 + var_22 * var_1;
            var_24 = var_0 + var_22 * var_2;
            var_25 = !scripts\mp\outofbounds::ispointinoutofbounds( var_23 ) && !scripts\mp\outofbounds::ispointinoutofbounds( var_24 );

            if ( var_25 )
            {
                var_12 = var_13;
                var_13 = var_12 - var_9;
            }
            else
            {
                var_16 = 1;
                var_9 = var_9 * 0.5;
                var_13 = var_12 - var_9;
            }
        }

        if ( !var_16 )
        {
            var_14++;

            if ( var_14 >= var_15 )
                return [ 0.0, 360.0 ];
        }

        if ( var_8 < var_17 && var_9 < var_17 )
            return [ var_12, var_10 ];

        waitframe();
    }
}
