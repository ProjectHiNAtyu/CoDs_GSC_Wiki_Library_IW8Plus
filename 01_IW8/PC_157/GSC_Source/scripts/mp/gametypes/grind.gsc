// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    var_0[0] = scripts\mp\utility\game::getgametype();
    var_0[1] = "_encstr_9318045AFDDD";
    scripts\mp\gameobjects::main( var_0 );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( scripts\mp\utility\game::getgametype(), 0, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 600 );
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 85 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
    }

    updategametypedvars();
    level.dogtagsplayer = [];
    _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::init();
    level.teambased = 1;
    level.onstartgametype = ::onstartgametype;
    level.onplayerconnect = ::onplayerconnect;
    level.getspawnpoint = ::getspawnpoint;
    level.onnormaldeath = ::onnormaldeath;
    level.modeonspawnplayer = ::onspawnplayer;
    level.modeonsuicidedeath = ::onsuicidedeath;
    level.conf_fx["_encstr_AAE007D90BB9A5E61A"] = loadfx( "_encstr_97531F35435B48F8877259185C7D98970293B73FBF5227C8AC0183C8C54F10DBCB" );
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_AF150F07EFF0CF4BA3C812C908CD44AB89";

    if ( getdvarint( "_encstr_B8020A9E9AA69A6292517AA0" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_891904A1D8BE" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];
    else if ( getdvarint( "_encstr_93570B93F4A9629272A825B426" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_889708C9D0E7EBE819D9" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];

    game["_encstr_B8DA073D799798C7C7"]["_encstr_A1B206E238A5E3F5"] = "_encstr_B62F0C161A50F683CF5ABAF4901D";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9E240C10CE33016D6AEA39B0F244"] = "_encstr_B62F0C161A50F683CF5ABAF4901D";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B3420C3D576AC3C8736F09906BB2"] = "_encstr_B62F0C161A50F683CF5ABAF4901D";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B2250F5246DB60DCE15B3721EB68FD10D1"] = "_encstr_B2250F5246DB60DCE15B3721EB68FD10D1";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_A3250F7693D2B919EBB2B92C4C8D2BFA98"] = "_encstr_A3250F7693D2B919EBB2B92C4C8D2BFA98";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_98FE10B973F778689124EBD7498670B587FA"] = "_encstr_98FE10B973F778689124EBD7498670B587FA";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9DFE1067633A9890E7A7E8A38E828845F19B"] = "_encstr_9DFE1067633A9890E7A7E8A38E828845F19B";
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_AAC113878F7EB127A818B53FF613691A5A4977777B", getmatchrulesdata( "_encstr_9BE00A27E2318303E9FB431A", "_encstr_95BD09FA9318CBBBC90BA2" ) );
    setdynamicdvar( "_encstr_AFF51303F698098FC20712B8562EAFB6BA669A7312", getmatchrulesdata( "_encstr_9BE00A27E2318303E9FB431A", "_encstr_98CF090E27452AF2890827" ) );
    setdynamicdvar( "_encstr_B9901ADC8DC9BED9C92D37917D890BB9B50D2C1C8EBA932B45A5DA95", getmatchrulesdata( "_encstr_9BE00A27E2318303E9FB431A", "_encstr_A8511031C2E6B66885C18EAB93592A4BDAAC" ) );
    setdynamicdvar( "_encstr_A1D416CB06FBCF774DE87AD271452ED3306D2943AF414BBF", getmatchrulesdata( "_encstr_9BE00A27E2318303E9FB431A", "_encstr_98500C41567E48358AEFEBF58B12" ) );
    setdynamicdvar( "_encstr_AAAE1AABF1A6DF7F3863D6A477C08653428D82131976EB37215BD7BB", getmatchrulesdata( "_encstr_9BE00A27E2318303E9FB431A", "_encstr_BC30109D39CD086DEF731179EAB73D0B2783" ) );
    setdynamicdvar( "_encstr_95AE1A06669B0759C20FD0B8EFEA51ADD247F38E7E32D9418C67C0B8", getmatchrulesdata( "_encstr_9BE00A27E2318303E9FB431A", "_encstr_8A301026169B6D22B4370B318D568A2D5B2B" ) );
    setdynamicdvar( "_encstr_8A0518FF3F6BC157C6DA6B1427B26B976713BB3E2A884B059C4D", getmatchrulesdata( "_encstr_9BE00A27E2318303E9FB431A", "_encstr_94630E134AA721CD56159C64E1A04B44" ) );
    setdynamicdvar( "_encstr_801A1ACDD8E4F5EC93B4E691BE5BCAD95809B09BB6127BDC5DB9966A", getmatchrulesdata( "_encstr_9BE00A27E2318303E9FB431A", "_encstr_93121021CFE253C5E93B2061D70EFBAF88FA" ) );
    setdynamicdvar( "_encstr_A67E146007B3FF6F1AECC5A4184A3145F2861F20B5C8", getmatchrulesdata( "_encstr_9BE00A27E2318303E9FB431A", "_encstr_95EB0EB5CA3B58120BDC6D12BDCD5737" ) );
    setdynamicdvar( "_encstr_8C5313D3F80509479B7BA6A418A0278D45D8FA8A60", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_9B290667C6D043EF", 0 );
    setdynamicdvar( "_encstr_B78F1203590E47E7D09B3E3CDFE8EA3F3970EAEA", 0 );
}

onstartgametype()
{
    setclientnamemode( "_encstr_95900C2EDBD01F99D6B1DFEB878D" );

    if ( !isdefined( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
        game["_encstr_A6D60EE09BF413B9945185CB4797C583"] = 0;

    scripts\mp\utility\game::setobjectivetext( "_encstr_BC850785638DA59537", &"_encstr_B1660F0D95899DE0E55B9BAF1730E9D111" );
    scripts\mp\utility\game::setobjectivetext( "_encstr_BA840579D3F7F6", &"_encstr_B1660F0D95899DE0E55B9BAF1730E9D111" );

    if ( level.splitscreen )
    {
        scripts\mp\utility\game::setobjectivescoretext( "_encstr_BC850785638DA59537", &"_encstr_B1660F0D95899DE0E55B9BAF1730E9D111" );
        scripts\mp\utility\game::setobjectivescoretext( "_encstr_BA840579D3F7F6", &"_encstr_B1660F0D95899DE0E55B9BAF1730E9D111" );
    }
    else
    {
        scripts\mp\utility\game::setobjectivescoretext( "_encstr_BC850785638DA59537", &"_encstr_BA01157920948365435134856386AFD3CA99E191683A4B" );
        scripts\mp\utility\game::setobjectivescoretext( "_encstr_BA840579D3F7F6", &"_encstr_BA01157920948365435134856386AFD3CA99E191683A4B" );
    }

    scripts\mp\utility\game::setobjectivehinttext( "_encstr_BC850785638DA59537", &"_encstr_BC1A14CFE1BCBDC8A9A39B47B677410107A14B5FF917" );
    scripts\mp\utility\game::setobjectivehinttext( "_encstr_BA840579D3F7F6", &"_encstr_BC1A14CFE1BCBDC8A9A39B47B677410107A14B5FF917" );
    initspawns();
    createtags();
    level.dogtagallyonusecb = ::dogtagallyonusecb;
    setupwaypointicons();
    thread createzones();
    level thread removetagsongameended();
}

updategametypedvars()
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
    level.banktime = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_95BD09FA9318CBBBC90BA2", 2, 0, 10 );
    level.bankrate = scripts\mp\utility\dvars::dvarintvalue( "_encstr_98CF090E27452AF2890827", 1, 1, 10 );
    level.bankcapturetime = scripts\mp\utility\dvars::dvarintvalue( "_encstr_A8511031C2E6B66885C18EAB93592A4BDAAC", 0, 0, 10 );
    level.bankdisable = scripts\mp\utility\dvars::dvarintvalue( "_encstr_98500C41567E48358AEFEBF58B12", 1, 0, 1 );
    level.bankdisabletags = scripts\mp\utility\dvars::dvarintvalue( "_encstr_BC30109D39CD086DEF731179EAB73D0B2783", 0, 0, 50 );
    level.bankdisabletime = scripts\mp\utility\dvars::dvarintvalue( "_encstr_8A301026169B6D22B4370B318D568A2D5B2B", 0, 0, 120 );
    level.megabanklimit = scripts\mp\utility\dvars::dvarintvalue( "_encstr_94630E134AA721CD56159C64E1A04B44", 5, 5, 15 );
    level.megabankbonusks = scripts\mp\utility\dvars::dvarintvalue( "_encstr_93121021CFE253C5E93B2061D70EFBAF88FA", 1, 0, 10 );
    level.megabankbonus = scripts\mp\utility\dvars::dvarintvalue( "_encstr_95EB0EB5CA3B58120BDC6D12BDCD5737", 150, 0, 750 );
    var_0 = scripts\mp\utility\dvars::getwatcheddvar( "_encstr_95FB0B239728CACF6948BAE2F3" );

    if ( var_0 == 0 && level.bankdisabletags == 0 )
        level.bankdisable = 0;
    else if ( level.bankdisabletags == 0 && var_0 > 0 )
        level.bankdisabletags = int( var_0 );
}

onspawnplayer()
{
    self setclientomnvar( "_encstr_AD061ACF50F64D32C19E2CE9FEB94A1CDB18EF03F808AC19E9A5305B", 34 );

    if ( isdefined( self.tagscarried ) )
        self setclientomnvar( "_encstr_B2730E373370AAAA98CDDF693BA0C7A3", self.tagscarried );
}

onsuicidedeath( var_0 )
{
    self setclientomnvar( "_encstr_B2730E373370AAAA98CDDF693BA0C7A3", 0 );
    level thread droptags( var_0 );
}

createtags()
{
    level.dogtags = [];

    for ( var_0 = 0; var_0 < 50; var_0++ )
    {
        var_1 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );

        if ( istrue( level.setplayerselfrevivingextrainfo ) )
            var_1 setmodel( "_encstr_800B2022B829B43BC9E6A18FF5502FBB5BB04B9918A36DA7C05893A31518CB8921B2" );
        else
            var_1 setmodel( "_encstr_B4DB152DB0729B887ACACA51C4AA80D571A78BE8474BB8" );

        var_1 scriptmodelplayanim( "_encstr_815B0F9B83B17530374B7189B90B833B7A" );

        if ( istrue( level.setplayerselfrevivingextrainfo ) )
        {

        }
        else
            var_1 setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_BECC05FC5321BA", 0 );

        var_1 setasgametypeobjective();
        var_2 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", ( 0, 0, 0 ), 0, 32, 32 );
        var_2.targetname = "_encstr_A6980F1D9CB4D976B227AF237BD9D12C3B";
        var_2 hide();
        var_3 = spawnstruct();
        var_3.type = "_encstr_A2C00AABCD59A74C35566C1D";
        var_3.curorigin = var_2.origin;
        var_3.entnum = var_2 getentitynumber();
        var_3.lastusedtime = 0;
        var_3.visuals = var_1;
        var_3.offset3d = ( 0, 0, 16 );
        var_3.trigger = var_2;
        var_3.trigger enablelinkto();
        var_3.triggertype = "_encstr_82650A035028B05A0B63C3B8";
        var_3 scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
        level.dogtags[level.dogtags.size] = var_3;
    }
}

gettag()
{
    var_0 = level.dogtags[0];
    var_1 = gettime();

    foreach ( var_3 in level.dogtags )
    {
        if ( !isdefined( var_3.lastusedtime ) )
            continue;

        if ( var_3.interactteam == "_encstr_AABA05236DC831" )
        {
            var_0 = var_3;
            break;
        }

        if ( var_3.lastusedtime < var_1 )
        {
            var_1 = var_3.lastusedtime;
            var_0 = var_3;
        }
    }

    var_0 notify( "_encstr_80F2062328E7A72B" );
    var_0 scripts\mp\gameobjects::initializetagpathvariables();
    var_0.lastusedtime = gettime();
    return var_0;
}

spawntag( var_0 )
{
    var_1 = var_0.origin;
    var_2 = var_0.team;
    var_3 = var_1 + ( 0, 0, 14 );
    var_4 = 35;
    var_5 = var_0 getstance();

    if ( var_5 == "_encstr_9F24062875D5FD98" )
        var_4 = 14;

    if ( var_5 == "_encstr_9C3D071B63023B26C3" )
        var_4 = 25;

    var_6 = var_1 + ( 0, 0, var_4 );
    var_7 = ( 0, randomfloat( 360 ), 0 );
    var_8 = anglestoforward( var_7 );
    var_9 = randomfloatrange( 30, 150 );
    var_10 = 0.5;
    var_11 = var_3 + var_9 * var_8;
    var_12 = playerphysicstrace( var_3, var_11 );
    var_13 = gettag();
    var_13.curorigin = var_6;
    var_13.trigger.origin = var_6;
    var_13.visuals.origin = var_6;
    var_13.team = var_0.team;
    var_13.visuals.team = var_13.team;
    var_13.interactteam = "_encstr_BC19047780DA";
    var_13.trigger show();
    var_13.trigger linkto( var_13.visuals, "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );

    if ( istrue( level.setplayerselfrevivingextrainfo ) )
        playsoundatpos( var_3, "_encstr_BE091C81484750935D8A482082F7ABCB27FF950FB72F1EC182C2C899FA4B" );
    else
        playsoundatpos( var_3, "_encstr_949214A01BE09F9B93C89C7093E75010B04151033780" );

    var_13 thread tagmoveto( var_2, var_6, var_12, var_10 );
    return var_13;
}

tagmoveto( var_0, var_1, var_2, var_3 )
{
    scripts\mp\gameobjects::allowuse( "_encstr_BC19047780DA" );
    self.visuals thread showtoteam( self, scripts\mp\utility\game::getotherteam( var_0 )[0] );
    self.visuals setasgametypeobjective();
    var_4 = getdvarint( "_encstr_889A08BDD77F8F49631A" );
    var_5 = distance( var_1, var_2 );
    var_6 = var_2 - var_1;
    var_7 = 0.5 * var_4 * squared( var_3 ) * -1;
    var_8 = ( var_6[0] / var_3, var_6[1] / var_3, ( var_6[2] - var_7 ) / var_3 );
    self.visuals movegravity( var_8, var_3 );
    self.curorigin = var_2;
}

showtoteam( var_0, var_1 )
{
    var_0 endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_80F2062328E7A72B" );

    if ( istrue( level.setplayerselfrevivingextrainfo ) )
        return;

    self setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_B7180526C81F4B", 0 );
    return;
}

monitortaguse( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_AAE208912BB195E85932" );
    var_0 endon( "_encstr_80F2062328E7A72B" );

    for (;;)
    {
        var_0.trigger waittill( "_encstr_8B5C081B58E0B7A213E6", var_1 );

        if ( !scripts\mp\utility\player::isreallyalive( var_1 ) )
            continue;

        if ( var_1 scripts\mp\utility\player::isusingremote() || isdefined( var_1.spawningafterremotedeath ) )
            continue;

        if ( isdefined( var_1.classname ) && var_1.classname == "_encstr_AB440F9BD8932D071DAFB3CA435A3663B2" )
            continue;

        if ( isagent( var_1 ) && isdefined( var_1.owner ) )
            var_1 = var_1.owner;

        if ( istrue( level.setplayerselfrevivingextrainfo ) )
        {
            if ( isdefined( var_1 ) && var_1.team == var_0.team )
            {
                playfx( level.conf_fx["_encstr_AAE007D90BB9A5E61A"], var_0.trigger.origin );
                playfx( level.spawnoffsettacinsertmax["_encstr_A2930D6B0BD55CCFF058989F701903"], var_0.trigger.origin + ( 0, 0, 45 ) );
            }
            else
            {
                playfx( level.conf_fx["_encstr_AAE007D90BB9A5E61A"], var_0.trigger.origin );
                playfx( level.spawnoffsettacinsertmax["_encstr_B2930DF0C72E10DFB2F913A4C15ADD"], var_0.trigger.origin + ( 0, 0, 45 ) );
            }
        }
        else
            var_0.visuals setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_BECC05FC5321BA", 0 );

        var_0.trigger hide();
        var_0.curorigin = ( 0, 0, 1000 );
        var_0.trigger.origin = ( 0, 0, 1000 );
        var_0.visuals.origin = ( 0, 0, 1000 );
        var_0 scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
        var_1 playersettagcount( var_1.tagscarried + 1 );
        var_1 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_B4590E235A1A9FD030D2E36ABFCBFB7D" );

        if ( istrue( level.setplayerselfrevivingextrainfo ) )
            var_1 playsound( "_encstr_AD4D1EE348E1689B9BE271F8EA9B4378858F2973C752815FF70A48A3F3A78B18" );
        else
            var_1 playsound( "_encstr_81161673D87198A63F72016E3BCFD270D51FD1F3732440EF" );

        if ( isdefined( level.supportcranked ) && level.supportcranked )
        {
            if ( isdefined( var_1.cranked ) && var_1.cranked )
                var_1 scripts\mp\cranked::setcrankedplayerbombtimer( "_encstr_97D70583536853" );
            else
                var_1 scripts\mp\cranked::oncranked( undefined, var_1 );
        }

        break;
    }
}

onplayerconnect( var_0 )
{
    var_0.isscoring = 0;
    var_0 thread monitorjointeam();
}

playersettagcount( var_0 )
{
    self.tagscarried = var_0;
    self.game_extrainfo = var_0;

    if ( var_0 > 999 )
        var_0 = 999;

    self setclientomnvar( "_encstr_B2730E373370AAAA98CDDF693BA0C7A3", var_0 );
}

monitorjointeam()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    for (;;)
    {
        scripts\engine\utility::_id_143A5( "_encstr_B2170C4AD884CDC823B9DB9D9F42", "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
        playersettagcount( 0 );
    }
}

hidehudelementongameend( var_0 )
{
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( var_0 ) )
        var_0.alpha = 0;
}

createzones()
{
    var_0 = getentarray( "_encstr_937F0F9F1DB06593A880E22A09159F9D20", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_2 in var_0 )
    {
        var_3 = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::setupobjective( var_2, 1, 1 );
        var_3 thread runzonethink();
        level.objectives[var_3.objectivekey] = var_3;
    }

    if ( level.mapname == "_encstr_ABD70CF89341513127CC92B7AE5F" )
    {
        var_5 = spawnstruct();
        var_5.origin = ( 1416, 1368, 300 );
        var_5.angles = ( 0, 0, 0 );
        var_5.script_label = "_encstr_AA4C02E6";
        var_3 = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::setupobjective( var_5, 1, 1 );
        var_3 thread runzonethink();
        level.objectives[var_3.objectivekey] = var_3;
    }

    if ( !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        level scripts\engine\utility::_id_143A5( "_encstr_989F0E38272BD6161DB143F532BDDC2B", "_encstr_8B5511DC1D16398EAF5BF68CACBECDB21DAB07" );

    foreach ( var_3 in level.objectives )
    {
        var_7 = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::getreservedobjid( var_3.objectivekey );
        var_3 scripts\mp\gameobjects::requestid( 1, 1, var_7 );
        var_3 scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
        var_3 _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::_id_1317D();
        var_3 _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::setneutral();
    }
}

isinzone( var_0, var_1 )
{
    if ( scripts\mp\utility\player::isreallyalive( var_0 ) && var_0 istouching( var_1.trigger ) && var_1.ownerteam == var_0.team )
        return 1;

    return 0;
}

runzonethink()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A2030D0A5BA8A039FD251F2F672DB3" + self.objectivekey );

    for (;;)
    {
        self.trigger waittill( "_encstr_8B5C081B58E0B7A213E6", var_0 );

        if ( self.disabled )
            continue;

        if ( self.stalemate )
            continue;

        if ( isagent( var_0 ) )
            continue;

        if ( !isplayer( var_0 ) )
            continue;

        if ( var_0.isscoring )
            continue;

        var_0.isscoring = 1;
        level thread processscoring( var_0, self );
    }
}

removetagsongameended()
{
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    foreach ( var_1 in level.players )
    {
        if ( !isdefined( var_1 ) )
            continue;

        if ( !isdefined( var_1.tagscarried ) )
            continue;

        var_1.tagscarried = 0;
    }
}

processscoring( var_0, var_1 )
{
    while ( var_0.tagscarried && isinzone( var_0, var_1 ) && !var_1.stalemate && !var_1.disabled )
    {
        if ( var_0.tagscarried >= level.megabanklimit )
        {
            var_0 playsoundtoplayer( "_encstr_B7571C79F199789238A8D007A9E0BF873067A8FEF03B67F3A1D89EFA578F", var_0 );
            scoreamount( var_0, level.megabanklimit, var_1 );
            var_2 = scripts\mp\rank::getscoreinfovalue( "_encstr_979C0AA3853B7D6ED87B4EB2" );
            var_2 = var_2 * level.megabanklimit;

            if ( !var_0 scripts\mp\utility\perk::_hasperk( "_encstr_B4F424AE0A42D72069B35838978BF8117A72A5B6277A8FAE44A7F9705FD7D34B535B1EB5BE72" ) )
                var_0 scripts\mp\killstreaks\killstreaks::givestreakpoints( "_encstr_9EEB08EFAF2B15984A67", level.megabankbonusks );

            var_0 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_8AF80A25CD4F92D7C198230F", undefined, var_2 + level.megabankbonus );
            var_0 scripts\mp\utility\stats::incpersstat( "_encstr_94C60F3303BAE20F0BA0488D278A93806D", 1 );
        }
        else
        {
            var_0 playsoundtoplayer( "_encstr_9DFB16AD1CBE76272DE632FA1DB7DAACB9EBC40B376DCA46", var_0 );
            var_3 = level.bankrate;

            if ( var_3 > var_0.tagscarried )
                var_3 = var_0.tagscarried;

            scoreamount( var_0, var_3, var_1 );

            for ( var_4 = 0; var_4 < var_3; var_4++ )
                var_0 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_979C0AA3853B7D6ED87B4EB2" );
        }

        if ( isdefined( level.supportcranked ) && level.supportcranked && isdefined( var_0.cranked ) && var_0.cranked )
            var_0 scripts\mp\cranked::setcrankedplayerbombtimer( "_encstr_97D70583536853" );

        wait( level.banktime );
    }

    var_1 _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::setneutralicons();
    var_0.isscoring = 0;
}

scoreamount( var_0, var_1, var_2 )
{
    var_0 playersettagcount( var_0.tagscarried - var_1 );
    scripts\mp\gamescore::giveteamscoreforobjective( var_0.team, var_1, 0 );
    var_0 scripts\mp\utility\stats::incpersstat( "_encstr_930E0A338F20CFFF66C83A32", var_1 );
    var_0 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_930E0A338F20CFFF66C83A32", var_0.pers["_encstr_930E0A338F20CFFF66C83A32"] );
    var_0 scripts\mp\utility\stats::setextrascore0( var_0.pers["_encstr_930E0A338F20CFFF66C83A32"] );

    if ( level.bankdisable )
    {
        var_2.tagsdeposited = var_2.tagsdeposited + var_1;

        if ( var_2.tagsdeposited >= level.bankdisabletags )
        {
            var_2 scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
            var_2 thread _id_1439D();
            var_2.disabled = 1;
            var_2.scriptable setscriptablepartstate( "_encstr_8B7905BF04379F", "_encstr_9819045FD029" );
            var_2.scriptable setscriptablepartstate( "_encstr_890C06E82D185FD7", "_encstr_9819045FD029" );

            if ( isdefined( var_2.objectivekey ) )
            {
                foreach ( var_4 in level.teamnamelist )
                    scripts\mp\utility\dialog::statusdialog( "_encstr_B3B10F7C9A107DBD67BC6763297DD5F52F" + var_2.objectivekey, var_4 );
            }

            if ( level.bankdisabletime == 0 )
                return;

            var_2 thread waitthenenablezone();
            return;
        }
    }
}

_id_1439D()
{
    foreach ( var_1 in level.players )
        scripts\mp\objidpoolmanager::objective_unpin_player( self.objidnum, var_1 );

    waitframe();
    scripts\mp\gameobjects::setvisibleteam( "_encstr_AABA05236DC831" );
}

waitthenenablezone()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    wait( level.bankdisabletime );
    self.disabled = 0;
    self.scriptable setscriptablepartstate( "_encstr_8B7905BF04379F", "_encstr_9BC505B4461BB2" );
    scripts\mp\gameobjects::allowuse( "_encstr_BC19047780DA" );
    scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );

    if ( isdefined( self.objectivekey ) )
    {
        foreach ( var_1 in level.teamnamelist )
            scripts\mp\utility\dialog::statusdialog( "_encstr_AAD10EECE45ACD327D59730B89D82BBE" + self.objectivekey, var_1 );
    }
}

initspawns()
{
    scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_AA1608C17786F13312D3", "_encstr_A8E80F2F633A9549FE2228CDCB8CA0C052" );
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    scripts\mp\spawnlogic::addspawnpoints( game["_encstr_941C0A6AF345075ED05BEAD3"], "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    scripts\mp\spawnlogic::addspawnpoints( game["_encstr_95A70AA81FEE295D3A2F56DE"], "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    var_0 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    var_1 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_9303101723E2CE585F5E839B464B688D6B97", var_0 );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", var_1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_B1090D98F3211171B757B62F41F7F8" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_B1090D98F3211171B757B62F41F7F8" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
    var_2 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_B1090D98F3211171B757B62F41F7F8" );
    var_3 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_930E073E8FC00DDF69", var_2 );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_A30C093385361B4CB06C6D", var_3 );
    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
}

getspawnpoint()
{
    var_0 = self.pers["_encstr_89EF05D46BA8FD"];

    if ( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] )
        var_0 = scripts\mp\utility\game::getotherteam( var_0 )[0];

    if ( scripts\mp\spawnlogic::shoulduseteamstartspawn() )
    {
        var_1 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_A9BD0ED638EBA391DAFACDC10BBB9BBE" + var_0 + "_encstr_A4810727CEFBF7F281" );
        var_2 = scripts\mp\spawnlogic::getspawnpoint_startspawn( var_1 );
    }
    else
        var_2 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, "_encstr_930E073E8FC00DDF69", "_encstr_A30C093385361B4CB06C6D" );

    return var_2;
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::oncommonnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 );
    level thread droptags( var_0, var_1 );
}

droptags( var_0, var_1 )
{
    if ( isagent( var_0 ) )
        return;

    if ( var_0.tagscarried > 49 )
        var_2 = 49;
    else if ( var_0.tagscarried > 0 )
        var_2 = var_0.tagscarried + 1;
    else
        var_2 = 1;

    if ( istrue( level.setplayerselfrevivingextrainfo ) && !isdefined( level.player_current_primary_is_rpg ) )
    {
        level.player_current_primary_is_rpg = 1;
        var_2 = 4;
    }

    for ( var_3 = 0; var_3 < var_2; var_3++ )
    {
        var_4 = spawntag( var_0 );
        var_4.team = var_0.team;
        var_4.victim = var_0;
        var_4.attacker = var_1;
        level notify( "_encstr_8F1E10E5E23FE6AB42A16F9F70C14F76974A", var_4 );
        level thread monitortaguse( var_4 );
    }

    var_5 = var_0.tagscarried - var_2;
    var_5 = int( max( 0, var_5 ) );
    var_0 playersettagcount( var_5 );
}

dogtagallyonusecb( var_0 )
{
    if ( isplayer( var_0 ) )
        var_0 scripts\mp\utility\stats::setextrascore1( var_0.pers["_encstr_954E074A20D55C9771"] );
}

setupwaypointicons()
{
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_8137102396A950604A5B014F73123840776E", 0, "_encstr_9BA4080D39CFFB5AB7C1", "_encstr_A8E81D33EB590BC1FFEE6C6501AF99D191AEBFB56BA14671DE7456BDBE58B9", "_encstr_9EF51424E97FA0617083B72B22926E2348302FCD3662", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_953710BB859783BDA5B9477D3158DCDAD7C4", 0, "_encstr_9BA4080D39CFFB5AB7C1", "_encstr_A8E81D33EB590BC1FFEE6C6501AF99D191AEBFB56BA14671DE7456BDBE58B9", "_encstr_98F5144042BDF88E5F21D1FBDF81D5013EBF224B0E99", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_BACF17D8E7195387C2D57D90EA1AFF5B6143D02153D7092F6A", 2, "_encstr_80BF06CA78A2226B", "_encstr_B3732025D32FF0AD8FE90FF9AF58B8FD53EFC9CE9CD0179F818B2B107FA94639D772", "_encstr_9EF51424E97FA0617083B72B22926E2348302FCD3662", 1 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_93CF17EEB0E507DE96731DBECD1BDBE42DB9ECFA33BD2BAF31", 2, "_encstr_80BF06CA78A2226B", "_encstr_B3732025D32FF0AD8FE90FF9AF58B8FD53EFC9CE9CD0179F818B2B107FA94639D772", "_encstr_98F5144042BDF88E5F21D1FBDF81D5013EBF224B0E99", 1 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_A97D1A13E1CBB8320B6563D747267AF238A88F91F9B079AAD019C727", 2, "_encstr_B9FC095F8BCCFF02D92B43", "_encstr_B3732025D32FF0AD8FE90FF9AF58B8FD53EFC9CE9CD0179F818B2B107FA94639D772", "_encstr_9EF51424E97FA0617083B72B22926E2348302FCD3662", 1 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_8B7D1AFB095788E83955D15FABA2D858183887395C1320EDC6ABBFA9", 2, "_encstr_B9FC095F8BCCFF02D92B43", "_encstr_B3732025D32FF0AD8FE90FF9AF58B8FD53EFC9CE9CD0179F818B2B107FA94639D772", "_encstr_98F5144042BDF88E5F21D1FBDF81D5013EBF224B0E99", 1 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_984115772CF20EED2D9BE8AFB1DBE61DCADCE8CA46F52C", 0, "_encstr_B3B5086C7BE68E56E63A", "_encstr_A8A8222588D8871EACD5ED5951E8AB102BB6ADDDC401A37CC89911EB613D6F697D15376F", "_encstr_9EF51424E97FA0617083B72B22926E2348302FCD3662", 1 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_9E41150FE8D970EDE1B074877F7FDD89FF668355388791", 0, "_encstr_B3B5086C7BE68E56E63A", "_encstr_A8A8222588D8871EACD5ED5951E8AB102BB6ADDDC401A37CC89911EB613D6F697D15376F", "_encstr_98F5144042BDF88E5F21D1FBDF81D5013EBF224B0E99", 1 );
}

removepoint()
{
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        if ( getdvar( "_encstr_8AFE15FF7B8AE93D9F63B7593A5FECE0AFDF7B1DEC3660", "_encstr_A40101" ) != "_encstr_A40101" )
        {
            var_0 = getdvar( "_encstr_8AFE15FF7B8AE93D9F63B7593A5FECE0AFDF7B1DEC3660", "_encstr_A40101" );

            foreach ( var_2 in level.objectives )
            {
                if ( isdefined( var_2.objectivekey ) && var_2.objectivekey == var_0 )
                {
                    var_2 notify( "_encstr_A2030D0A5BA8A039FD251F2F672DB3" + var_2.objectivekey );
                    var_2 scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
                    var_2.trigger = undefined;
                    var_2 notify( "_encstr_AAE208912BB195E85932" );
                    var_2.visibleteam = "_encstr_AABA05236DC831";
                    var_2 scripts\mp\gameobjects::setobjectivestatusicons( undefined, undefined );
                    var_3 = [];

                    foreach ( var_5 in level.objectives )
                    {
                        if ( var_5.objectivekey != var_0 )
                            var_3[var_5.objectivekey] = var_5;
                    }

                    level.objectives = var_3;
                    break;
                }
            }

            setdynamicdvar( "_encstr_8AFE15FF7B8AE93D9F63B7593A5FECE0AFDF7B1DEC3660", "_encstr_A40101" );
        }

        wait 1;
    }
}

placepoint()
{
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        if ( getdvar( "_encstr_891914CDD8E4AF2359EC28B1C2B1B211B7D619B15876", "_encstr_A40101" ) != "_encstr_A40101" )
        {
            var_0 = getdvar( "_encstr_891914CDD8E4AF2359EC28B1C2B1B211B7D619B15876", "_encstr_A40101" );
            var_1 = undefined;
            var_2 = getentarray( "_encstr_937F0F9F1DB06593A880E22A09159F9D20", "_encstr_B8CE0BE43FC317DF690862BA48" );

            foreach ( var_4 in var_2 )
            {
                if ( "_encstr_984C028E" + var_4.script_label == var_0 )
                    var_1 = var_4;
            }

            var_1.origin = level.players[0].origin;
            var_1.ownerteam = "_encstr_9BA4080D39CFFB5AB7C1";
            var_6 = var_1.origin + ( 0, 0, 32 );
            var_7 = var_1.origin + ( 0, 0, -32 );
            var_8 = scripts\engine\trace::ray_trace( var_6, var_7, undefined, scripts\engine\trace::create_default_contents( 1 ) );
            var_1.origin = var_8["_encstr_B7260923C89E8F3378E72E"];
            var_1.upangles = vectortoangles( var_8["_encstr_930E073E8FC00DDF69"] );
            var_1.forward = anglestoforward( var_1.upangles );
            var_1.right = anglestoright( var_1.upangles );
            var_9[0] = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_1.origin );
            var_9[0].angles = var_1.angles;
            var_10 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", var_1.origin, 0, 90, 128 );
            var_10.script_label = var_1.script_label;
            var_1 = var_10;
            var_11 = scripts\mp\gameobjects::createuseobject( "_encstr_9BA4080D39CFFB5AB7C1", var_1, var_9, ( 0, 0, 100 ) );

            if ( isdefined( var_1.objectivekey ) )
                var_11.objectivekey = var_1.objectivekey;
            else
                var_11.objectivekey = var_11 scripts\mp\gameobjects::getlabel();

            if ( isdefined( var_1.iconname ) )
                var_11.iconname = var_1.iconname;
            else
                var_11.iconname = var_11 scripts\mp\gameobjects::getlabel();

            var_11 thread runzonethink();
            var_11 scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );
            var_11 scripts\mp\gameobjects::setusetime( level.bankcapturetime );
            var_11 scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_944B10F7CF52BBADA31823A97083A7A7E825", "_encstr_9E010EEEC2970EF6D2CD3AD78958DCDA" );
            var_11 scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
            var_11 scripts\mp\gameobjects::cancontestclaim( 1 );
            var_11.onuse = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::zone_onuse;
            var_11.onbeginuse = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::zone_onusebegin;
            var_11.onunoccupied = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::zone_onunoccupied;
            var_11.oncontested = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::zone_oncontested;
            var_11.onuncontested = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::zone_onuncontested;
            var_11.claimgracetime = level.bankcapturetime * 1000;
            var_6 = var_11.visuals[0].origin + ( 0, 0, 32 );
            var_7 = var_11.visuals[0].origin + ( 0, 0, -32 );
            var_12 = scripts\engine\trace::create_contents( 1, 1, 1, 1, 0, 1, 1 );
            var_13 = [];
            var_8 = scripts\engine\trace::ray_trace( var_6, var_7, var_13, var_12 );
            var_11.baseeffectpos = var_8["_encstr_B7260923C89E8F3378E72E"];
            var_14 = vectortoangles( var_8["_encstr_930E073E8FC00DDF69"] );
            var_14 = -1 * var_14;
            var_11.baseeffectforward = anglestoforward( var_14 );
            var_11 _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::setneutral();
            level.objectives[var_11.objectivekey] = var_11;
            setdynamicdvar( "_encstr_891914CDD8E4AF2359EC28B1C2B1B211B7D619B15876", "_encstr_A40101" );
        }

        wait 1;
    }
}
