// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

delete_objective_on_death_safe()
{
    level.br_pickups = spawnstruct();
    level.forcegivesuper = ::forcegivesuper;
    level.showuseresultsfeedback = ::showuseresultsfeedback;
    level._id_12C1F = ::_id_12C1F;
    level.plunderrepositoryrestricted = ::plunderrepositoryref;
    level.plunderrepositories = ::plunderrankupdate;
    level._encstr_A92410D916E65BC29B5BC223B946956385BC = getdvarint( "_encstr_876D1627A3224104075989105237C4893E3CAFF14D0D0853", 1 );
    level._encstr_BA9513B3586EDA85B96D53ABB6C14B733B6ED6B483 = getdvarint( "_encstr_B79519171FEE21B7A02EE6AD20D8EF794A9BD79393186A7BA8F0DA", 1 );
    initarrays();
    toppercentagetoadjusteconomy();
}

initarrays()
{
    level.brloottablename = getdvar( "_encstr_81340AB24C496DF8BEB3273F", "_encstr_8001266DE17A1DB7B89BEE0263A0D31768AB0DE471D2A56F5073E1BACBEDCF41901B96636D48AA43" );

    if ( !isdefined( level.br_pickups ) )
        level.br_pickups = spawnstruct();

    level.br_pickups.init_relic_ammo_drain = [];
    level.br_pickups._encstr_ADBE196B7297A8A84F74C5DF8A32606747EAC1B14ACB5658E643F7 = [];
    level.br_pickups.modetype = [];
    _id_12B33( "_encstr_BD71153280C9D5B78B509D815DF0131177A0AB5A708F8C", ::plundermusicfirst );
    _id_12B33( "_encstr_81E81D133936F6DEA3AFB25C575AE0BE7616CDAD85DCD67D19EAC98598D82B", ::plundermusicfirst );
    level.br_pickups.br_equipname = [];
    level.br_pickups.stackable = [];
    level.br_pickups.maxcounts = [];
    level.br_pickups.counts = [];
    level.br_pickups.br_itemtype = [];
    level.br_pickups.br_itemrow = [];
    level.br_pickups.delay_hide_player_clip = [];
    level.br_pickups.br_equipnametoscriptable = [];
    level.br_pickups.br_weapontoscriptable = [];
    level.br_pickups.br_pickupsfx = [];
    level.br_pickups.br_killstreakreference = [];
    level.br_pickups.br_killstreaktoscriptable = [];
    level.br_pickups.br_superreference = [];
    level.br_pickups.delay_delete_rpg_missile = [];
    level.br_pickups._id_13F09 = [];
    level.br_pickups.delay_give_lethal_grenade = [];
    level.br_pickups.br_allguns = [];
    level.br_pickups.br_lootguns = [];
    level.br_pickups.delay_safe_spawn_chopper_boss = [];
    level.br_pickups.br_crateguns = [];
    level.br_pickups.br_crateitems = [];
    level.br_pickups.br_gulagpickups = [];
    level.br_pickups.delay_push_player_clear_door_way = [];
    level.br_pickups.deletesoundents = [];
    level.br_lootiteminfo = [];
    level.br_weaponsprimary = [];
    level.br_weaponssecondary = [];
    level.br_throwables = [];
    level.br_usables = [];
    var_0 = [];
    var_1 = 0;
    var_2 = "_encstr_BE4C0207";

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
    {
        var_3 = tablelookupgetnumrows( level.brloottablename );

        for ( var_4 = 0; var_4 < var_3; var_4++ )
        {
            var_5 = tablelookupbyrow( level.brloottablename, var_4, 0 );

            if ( !isdefined( var_5 ) )
                continue;

            if ( var_5 == "_encstr_B8C505C0A3D713" )
            {
                var_6 = tablelookupbyrow( level.brloottablename, var_4, 2 );

                if ( !isdefined( var_6 ) )
                    continue;

                if ( var_6 == "_encstr_B92007DDCA2C0EF6DC" )
                {
                    var_7 = tablelookupbyrow( level.brloottablename, var_4, 1 );
                    var_8 = tablelookupbyrow( level.brloottablename, var_4, 3 );
                    var_9 = tablelookupbyrow( level.brloottablename, var_4, 5 );
                    var_10 = tablelookupbyrow( level.brloottablename, var_4, 15 );

                    if ( isdefined( var_9 ) && var_9.size > 0 )
                    {
                        var_11 = int( var_9 );
                        var_12 = tablelookup( "_encstr_BC791491279DE0A8E762012BEAABA8B0F7938D07C303", 0, var_11, 1 );

                        if ( var_12 == "_encstr_A40101" )
                        {
                            scripts\mp\utility\script::laststand_dogtags( "_encstr_B6A22EC6ED7B1D948802E67BD102CCB7EA9B4640D27304EECAB0837BCDF5D219CD7136DC3B80D210C6DBEDE894441D04" + var_9 + "_encstr_9CA109012DCD109C7BBB02" + var_4 + "_encstr_A4850DA6699E17F5B251A1AA09F0EE" + level.brloottablename );
                            continue;
                        }

                        var_13 = tablelookup( "_encstr_BC791491279DE0A8E762012BEAABA8B0F7938D07C303", 0, var_11, 6 );
                        var_14 = scripts\mp\utility\weapon::getweaponvarianttablename( var_12 );
                        var_15 = int( tablelookup( var_14, 1, var_13, 0 ) );
                        var_16 = tablelookupbyrow( level.brloottablename, var_4, 10 );
                        var_17 = [];
                        var_18 = [];

                        if ( isdefined( var_16 ) && var_16.size )
                            var_17 = strtok( var_16, var_2 );

                        if ( isdefined( var_17 ) )
                        {
                            foreach ( var_20 in var_17 )
                            {
                                var_21 = strtok( var_20, "_encstr_B64C02F0" );

                                if ( var_21.size > 1 )
                                {
                                    var_18[var_21[0]] = int( var_21[1] );
                                    continue;
                                }

                                var_18[var_21[0]] = 0;
                            }
                        }

                        var_23 = var_12;
                        var_24 = undefined;

                        if ( getdvarint( "_encstr_BE8413D6B64BD72912275828936780FF525F58540F", 0 ) )
                            var_24 = "_encstr_BCC809D79BE1A20FC26366";

                        var_25 = undefined;

                        if ( !isdefined( var_18 ) )
                            var_25 = scripts\mp\class::fixcollision( var_12, var_24, undefined, var_15 );
                        else
                            var_25 = scripts\mp\class::buildweapon_attachmentidmap( var_12, var_18, var_24, undefined, var_15 );

                        var_26 = createheadicon( var_25 );
                    }
                    else
                    {
                        var_23 = tablelookupbyrow( level.brloottablename, var_4, 8 );
                        var_16 = tablelookupbyrow( level.brloottablename, var_4, 10 );
                        var_17 = [];

                        if ( isdefined( var_16 ) && var_16.size )
                            var_17 = strtok( var_16, var_2 );

                        if ( getdvarint( "_encstr_BE8413D6B64BD72912275828936780FF525F58540F", 0 ) )
                            var_25 = scripts\mp\class::buildweapon( var_23, var_17, "_encstr_BCC809D79BE1A20FC26366", "_encstr_AABA05236DC831", -1 );
                        else
                            var_25 = scripts\mp\class::buildweapon( var_23, var_17, "_encstr_AABA05236DC831", "_encstr_AABA05236DC831", -1 );

                        var_26 = createheadicon( var_25 );
                    }

                    var_38 = int( var_8 );
                    level.br_pickups.br_itemrow[var_7] = int( var_4 );
                    level.br_pickups.br_itemtype[var_7] = var_6;
                    level.br_pickups.br_pickupsfx[var_7] = var_10;
                    level.br_pickups.delay_hide_player_clip[var_7] = var_38;
                    level.br_pickups.br_lootguns[level.br_pickups.br_lootguns.size] = var_7;

                    if ( !isdefined( level.br_pickups.delay_safe_spawn_chopper_boss[var_38] ) )
                        level.br_pickups.delay_safe_spawn_chopper_boss[var_38] = [];

                    level.br_pickups.delay_safe_spawn_chopper_boss[var_38][level.br_pickups.delay_safe_spawn_chopper_boss[var_38].size] = var_7;
                    level.br_lootiteminfo[var_7] = spawnstruct();
                    level.br_lootiteminfo[var_7].baseweapon = var_23;
                    level.br_lootiteminfo[var_7].playerstartbesttimeupdate = var_26;
                    level.br_lootiteminfo[var_7].playerstartjailsetcontrols = var_25;

                    if ( var_38 != 10 )
                        level.br_pickups.br_weapontoscriptable[var_26] = var_7;
                }
                else
                {
                    var_7 = tablelookupbyrow( level.brloottablename, var_4, 1 );
                    level.br_pickups.br_itemrow[var_7] = int( var_4 );
                    var_39 = tablelookupbyrow( level.brloottablename, var_4, 8 );

                    if ( isdefined( var_39 ) && var_39.size > 0 )
                    {
                        var_39 = tolower( var_39 );
                        level.br_pickups.br_equipname[var_7] = var_39;
                        level.br_pickups.br_equipnametoscriptable[var_39] = var_7;
                    }

                    level.br_pickups.delay_delete_rpg_missile[var_7] = int( tablelookupbyrow( level.brloottablename, var_4, 24 ) );
                    var_40 = tablelookupbyrow( level.brloottablename, var_4, 16 );

                    if ( var_40 != "_encstr_A40101" )
                    {
                        switch ( var_40 )
                        {
                            case "_encstr_AF4C02EA":
                                if ( isdefined( var_39 ) && var_39.size > 0 )
                                    level.equipment.table[var_39].defaultslot = "_encstr_987F080E394BDAC2E45E";

                                level.br_throwables[level.br_throwables.size] = var_7;
                                break;
                            case "_encstr_9B4C028A":
                                if ( isdefined( var_39 ) && var_39.size > 0 )
                                    level.equipment.table[var_39].defaultslot = "_encstr_B98F0AC7D5B99F4DDBA8353B";

                                level.br_usables[level.br_usables.size] = var_7;
                                break;
                            case "_encstr_A94C0242":
                                if ( isdefined( var_39 ) && var_39.size > 0 )
                                    level.equipment.table[var_39].defaultslot = "_encstr_A1B507EB87CA015BB8";

                                break;
                            case "_encstr_B94C02A9":
                                if ( isdefined( var_39 ) && var_39.size > 0 )
                                    level.equipment.table[var_39].defaultslot = "_encstr_BEB4068F1B5BA3AB";

                                break;
                            default:
                                break;
                        }
                    }

                    if ( var_6 == "_encstr_B6CE0B0BB00A031B7B88355740" || var_6 == "_encstr_BEEC12D827ECF09F33F2D5EF8CB99DD84CD37078" )
                    {
                        var_41 = tablelookupbyrow( level.brloottablename, var_4, 19 );
                        level.br_pickups.br_killstreakreference[var_7] = var_41;
                        level.br_pickups.br_killstreaktoscriptable[var_41] = var_7;
                    }
                    else if ( var_6 == "_encstr_BEB4068F1B5BA3AB" || var_6 == "_encstr_B4DD0DAA33B39DB899CD08E2D2AA38" )
                    {
                        var_42 = tablelookupbyrow( level.brloottablename, var_4, 19 );
                        level.br_pickups.br_superreference[var_7] = var_42;
                    }
                    else if ( var_6 == "_encstr_9C1607D0071420D7AA" || var_6 == "_encstr_952F0E10E70460ABA28960F85F1BEF2B" )
                        level.br_pickups.delay_push_player_clear_door_way[level.br_pickups.delay_push_player_clear_door_way.size] = var_7;
                    else if ( var_6 == "_encstr_94C2099887BA24607BE134" || var_6 == "_encstr_87A410B36623E0F37AD781DFD3824D18F7BA" )
                        level.br_pickups.deletesoundents[level.br_pickups.deletesoundents.size] = var_7;

                    var_43 = int( tablelookupbyrow( level.brloottablename, var_4, 4 ) );
                    var_44 = int( tablelookupbyrow( level.brloottablename, var_4, 18 ) );

                    if ( var_6 == "_encstr_A4830519C1D8CF" )
                        level.br_ammo_max[var_7] = var_44;

                    level.br_pickups.maxcounts[var_7] = var_44;
                    level.br_pickups.stackable[var_7] = var_44 > 1;
                    level.br_pickups.counts[var_7] = var_43;
                    var_6 = tolower( var_6 );
                    level.br_pickups.br_itemtype[var_7] = var_6;
                    level.br_pickups.br_pickupsfx[var_7] = tablelookupbyrow( level.brloottablename, var_4, 15 );
                    var_45 = tablelookupbyrow( level.brloottablename, var_4, 3 );
                    level.br_pickups.delay_hide_player_clip[var_7] = int( var_45 );
                }

                var_46 = tablelookupbyrow( level.brloottablename, var_4, 6 );
                var_46 = strtok( var_46, "_encstr_B64C0222" );
                level.br_pickups.delay_give_lethal_grenade[var_7] = scripts\engine\utility::array_contains( var_46, "_encstr_A1D208D6B7DF73F647D0" );
                continue;
            }

            if ( var_5 == "_encstr_8B9E06135641BB3F" )
            {
                var_7 = tablelookupbyrow( level.brloottablename, var_4, 1 );
                var_47 = int( tablelookupbyrow( level.brloottablename, var_4, 2 ) );

                if ( var_47 > 0 )
                {
                    if ( isdefined( level.br_lootiteminfo[var_7] ) && isdefined( level.br_lootiteminfo[var_7].baseweapon ) )
                    {
                        for ( var_48 = 0; var_48 < var_47; var_48++ )
                        {
                            level.br_pickups.br_crateguns[level.br_pickups.br_crateguns.size] = var_7;
                            level.br_pickups.br_allguns[level.br_pickups.br_allguns.size] = var_7;
                        }
                    }
                    else
                    {
                        for ( var_48 = 0; var_48 < var_47; var_48++ )
                            level.br_pickups.br_crateitems[level.br_pickups.br_crateitems.size] = var_7;
                    }
                }

                continue;
            }

            if ( var_5 == "_encstr_AD220628430DDBF1" )
            {
                var_7 = tablelookupbyrow( level.brloottablename, var_4, 1 );
                var_49 = tablelookupbyrow( level.brloottablename, var_4, 2 );

                if ( !isdefined( level.br_pickups.br_gulagpickups[var_49] ) )
                    level.br_pickups.br_gulagpickups[var_49] = [];

                var_50 = level.br_pickups.br_gulagpickups[var_49].size;
                level.br_pickups.br_gulagpickups[var_49][var_50] = var_7;
            }
        }

        _id_12183( "_encstr_BD71153280C9D5B78B509D815DF0131177A0AB5A708F8C", getdvarint( "_encstr_BACB16338E7347AED5D1520A8893A63F8878A0DD17185374", 108 ) );
        _id_12183( "_encstr_81E81D133936F6DEA3AFB25C575AE0BE7616CDAD85DCD67D19EAC98598D82B", getdvarint( "_encstr_AFCE1EEEEB53AFE59BAF3AE60B88191F70D0086F891C4DB2C98D1B40DA2E89E8", 216 ) );
        _id_12183( "_encstr_95C1138ADE685F053129CB02B059FFE783C805037B", 8 );
    }

    setdvarifuninitialized( "_encstr_AF7B1C5736D3DE05CA11D97B68F67BE0D9A4D018915566355BE3DBCFFBE0", 0 );
    level.br_pickups.br_pickupdenyammonoroom = "_encstr_AFE018210B670DE5C9668981CDE18155BE8729B18FFFC7E7901D";
    level.br_pickups.br_pickupdenyequipnoroom = "_encstr_A9F019A0F12FFE238EFD0905E3374F3793796919A95761EB64D02D";
    level.br_pickups.br_pickupdenyalreadyhaveweapon = "_encstr_89E11FD9D03ECD2D59E1B1A9A9655D26CBADD0AB472FB4F53768B16131CC7BDF27";
    level.br_pickups.br_pickupdenyarmornotbetter = "_encstr_8BFB1C7CF8429569391951A3184137C5DFE9ABC89E9559C11D3541195D0F";
    level.br_pickups.br_pickupdenyalreadyhaveks = "_encstr_8A8B23D482F20925EB96A498984D8A25A814B4F588549395AF50134A5482882BBE12059515";
    level.br_pickups.br_pickupdenyalreadyhavetoken = "_encstr_8B95289C314F0EB9F169859F49ADD970DF08F705889BDB995C798D83AF429136C370AFECF1B318C1271E";
    level.br_pickups.delete_fan_blades = "_encstr_8FD92B65BAD9F14379D3B62CAF64DD928779A17721BF991161DFF72F9E3F9751FF217501CFD17CB5AF2C7B6DA9";
    level.br_pickups.delete_furthest_respawn_enemy = "_encstr_BCB81CC8A0EF8E1A11D75565040AB947056311995761397727F97ECFAB79";
    level.br_pickups.delete_ents_to_clean_up = "_encstr_BC502B6980AF9D7D097099C9E8559BF82F746EF5296BA61FA4D851D1E13AD14DD3E510F74F772DF959207929F8";
    level.br_pickups.delete_intro_lights = "_encstr_B23831B57F61959F676081AF977CF54AD28D91D7059F979F67C31361FB69C6B3A3937B7FE81FAD1D370986033E81834181B5E9";
    level.br_pickups.delete_headicon = "_encstr_87A027ED4931B8C3A9D898D83DEC4546316D08F755215097490FE1F9C967017C41F727C6818FACBD64";
    level.br_pickups.delete_headicon_on_death = "_encstr_A299281BC371A619CFC4544DFEF5E958D9DB7BA10FD917293DAE9C4657A99931A06BFF2FF31057B905B2";
    level.br_pickups.delete_light = "_encstr_9BDE1E0D6A7733DB31999038AC5BF7FF3D1FA44909DF06FAE9535101443B2B09";
    level.br_pickups.delete_exfil_ai_structs = "_encstr_A29E23B0E1DFCE13BEEB0607978437DDA1F1C818E11171D354C61B6D37EEF39E23F1217119";
    level.br_pickups.delete_me = "_encstr_AD4C28A368E1210657B0D4FD18375592CA9C6B2DE4DFE9C87368AC8501EB1BC9D43CF78D4DB6D9BB6F10";
    level.br_pickups.delete_laser_entities = "_encstr_8C23201BC3314517752F3860142E2E0C01378F876FF19D1B90C791583DAF9F3229A9";
    level.br_pickups.delete_keypad_display_models = "_encstr_AA29228274E0B9774C5B2109D7A3E54D996F0C309B28EBFC1F1F19399F9A051340449535";
    level.br_pickups.delete_enemies_if_reaching_max_ai = "_encstr_B90E30D428EB2425FA299CD1509A54CB0526A4150A88CAF509A0AC15F5A9282AD029281392D4A8BE097A39AA9AAF9245A8A6";
    level.br_pickups.delete_elevator = "_encstr_A6D925E0FFD9FDA6F7241DF7C9F8ADB0B951CA9BDF9989898C8114504629D0B07D8109313FD742";
    level.br_pickups.delete_ent = "_encstr_B9F71FD9F3EFE50D51CCB02CD6A8FB801B6FA9312B4D1E4198E73A287DC0A33454";
    level.br_pickups.delete_entarray = "_encstr_A3B41F355F9E7BFAD729B82041DB679675A84EA47FA5EB710F09A0D9C98BEBF76C";
    level.br_pickups.delete_objective_on_death = "_encstr_A377275B9069A99ECF386C7580BFDD0A7319CDA16D03F9449330647D8933E5215DAF5D33D97DE10E17";
    level.br_pickups.delete_name_fx = "_encstr_A3AC26D414F58494FAA4C9D1506A15F28229A9F494BE4A27D4A22551F5A4397D414A3DD149514D4D";
    level.br_pickups.br_dropoffsets = [ ( 24, 24, 6 ), ( -24, -24, 6 ), ( 24, -24, 6 ), ( -24, 24, 6 ), ( 48, 0, 6 ), ( -48, 0, 6 ), ( 0, -48, 6 ), ( 0, 48, 6 ), ( 72, 0, 6 ), ( -72, 0, 6 ), ( 0, -72, 6 ), ( 0, 72, 6 ), ( 72, -72, 6 ), ( -72, 72, 6 ), ( -72, -72, 6 ), ( 72, 72, 6 ) ];
    level.br_pickups._id_12CB7 = getdvarint( "_encstr_8B9E1503DE2317FE85A1731AD8D976FFD8A88C8762690B", 1 );
    level.br_pickups._id_12CB5 = getdvarint( "_encstr_BEB91B8F7A7BD7EBD5C7AA076BDAAFBB069620A07AE5307F4F07C21AF7", 0 );
    level.br_pickups.modifydamagetohunter = getdvarint( "_encstr_9C5E1E721E5541DAF3395B1BA0EBAFCBE9A5FE6CF781FAF31B51037FE8605D43", 0 );
    scripts\engine\scriptable::scriptable_addusedcallback( ::lootused );
    scripts\engine\scriptable::_id_12F57( ::lootused );
}

_id_12183( var_0, var_1 )
{
    if ( isdefined( level.br_pickups.counts[var_0] ) && isdefined( var_1 ) )
        level.br_pickups.counts[var_0] = var_1;
}

remove_roof_nodes( var_0, var_1, var_2, var_3 )
{
    var_4 = spawnstruct();
    var_4.origin = var_0;

    if ( isdefined( var_1 ) )
        var_4.angles = var_1;
    else
        var_4.angles = ( 0, 0, 0 );

    if ( isdefined( var_2 ) )
        var_4._id_12223 = var_2;
    else
        var_4._id_12223 = 0;

    var_4.set_force_aitype_armored = var_3;
    return var_4;
}

getitemdroporiginandangles( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    var_8 = 1;
    var_9 = 1;
    var_10 = getdvarint( "_encstr_8A3F1459F33FBCE83DF5F6F32A57FE5759399B3EABD1", 0 );
    var_11 = 14;
    var_12 = 50.0;
    var_13 = 40.0;
    var_14 = -5.0;
    var_15 = 5.0;
    var_16 = 10.0;
    var_17 = 360.0 / var_11;
    var_18 = -5.0;
    var_19 = 5.0;
    var_20 = 40.0;
    var_21 = 20.0;
    var_22 = 60.0;
    var_23 = -6.0;
    var_24 = 16.0;
    var_25 = -18.0;
    var_26 = 0;
    var_27 = 0;
    var_28 = undefined;
    var_29 = var_24;

    if ( !isdefined( var_2 ) )
        var_2 = ( 0, 0, 0 );

    if ( isdefined( var_6 ) )
        var_29 = var_6;

    var_30 = int( var_0.ml_p3_to_safehouse_transition / var_11 );
    var_31 = var_0.ml_p3_to_safehouse_transition - var_30 * var_11;
    var_32 = var_2[1] + ( var_31 * var_17 + var_30 * var_16 ) + randomfloatrange( var_18, var_19 );
    var_33 = var_12 + var_30 * var_13 + randomfloatrange( var_14, var_15 );

    if ( isdefined( var_4 ) )
        var_32 = var_2[1] + var_4;

    if ( isdefined( var_5 ) )
        var_33 = var_5;

    var_34 = ( 0.0, var_32, 0.0 );
    var_35 = anglestoforward( var_34 );
    var_36 = var_1 + var_35 * var_33;

    if ( var_9 )
    {
        var_37 = scripts\engine\utility::array_combine( tablesort( var_36, 500, 500 ), level._id_1403D );

        if ( isdefined( var_3 ) )
            var_37[var_37.size] = var_3;

        var_38 = var_1 + ( 0.0, 0.0, var_21 );
        var_39 = var_36 + ( 0.0, 0.0, var_21 );
        var_40 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 1, 1, 1, 0, 1 );
        var_41 = scripts\engine\trace::ray_trace( var_38, var_39, var_37, var_40 );

        if ( var_41["_encstr_B130095358E1B3930B687D"] < 1.0 )
        {
            var_36 = var_41["_encstr_B7260923C89E8F3378E72E"];
            var_36 = var_36 + var_35 * var_25;
        }
        else
            var_36 = var_39;

        var_38 = var_36;
        var_39 = var_36 + ( 0.0, 0.0, var_22 );
        var_41 = scripts\engine\trace::ray_trace( var_38, var_39, var_37, var_40 );

        if ( var_41["_encstr_B130095358E1B3930B687D"] < 1.0 )
            var_36 = var_41["_encstr_B7260923C89E8F3378E72E"] + ( 0.0, 0.0, var_23 );
        else
            var_36 = var_39;

        var_41 = undefined;

        if ( istrue( var_7 ) )
            var_41 = _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::modifytriggerlocation( var_36, 0.0, undefined, undefined, var_37 );
        else
        {
            var_38 = var_36;
            var_42 = -1 * getdvarfloat( "_encstr_A8E01589CEBEAD0B3C98BDF6474427BD0E84564BD9A1A3", 2000.0 );
            var_39 = var_36 + ( 0.0, 0.0, var_42 );
            var_41 = scripts\engine\trace::ray_trace( var_38, var_39, var_37, var_40 );
        }

        if ( var_41["_encstr_B130095358E1B3930B687D"] < 1.0 )
        {
            var_36 = var_41["_encstr_B7260923C89E8F3378E72E"] + ( 0.0, 0.0, var_29 );
            var_28 = var_41["_encstr_B60E07C9FD1C2055E3"];
        }
        else
        {
            var_36 = ( 0, 0, 0 );
            var_26 = 1;
        }
    }
    else
        var_36 = var_36 + ( 0, 0, var_29 );

    if ( var_8 && !var_26 )
    {
        var_43 = scripts\engine\utility::ter_op( isdefined( self.intro_heli_add_player ), self.intro_heli_add_player, var_20 );
        var_27 = getscriptablereservedremaining( var_1 + ( 0, 0, var_43 ), var_36 );
    }

    var_0.ml_p3_to_safehouse_transition++;
    return remove_roof_nodes( var_36, var_34, var_27, var_28 );
}

relics_monitor_on_player( var_0 )
{
    if ( isdefined( var_0 ) && isdefined( level.br_lootiteminfo[var_0] ) && isdefined( level.br_lootiteminfo[var_0].playerstartjailsetcontrols ) )
        return level.br_lootiteminfo[var_0].playerstartjailsetcontrols;

    return undefined;
}

relic_vampire_globalfunc( var_0 )
{
    if ( isdefined( var_0 ) && isdefined( var_0.scriptablename ) )
        return relics_monitor_on_player( var_0.scriptablename );

    return undefined;
}

respawnplayer( var_0 )
{
    if ( isdefined( var_0 ) && isdefined( var_0.scriptablename ) && isdefined( level.br_pickups.delay_hide_player_clip[var_0.scriptablename] ) )
        return level.br_pickups.delay_hide_player_clip[var_0.scriptablename];

    return undefined;
}

getgulagpickupsforclass( var_0 )
{
    var_1 = [ "_encstr_AABA05236DC831" ];

    if ( isdefined( var_0 ) && isdefined( level.br_pickups.br_gulagpickups[var_0] ) )
        var_1 = level.br_pickups.br_gulagpickups[var_0];

    return var_1;
}

_id_119ED( var_0 )
{
    return var_0.count >> 0 & 2047;
}

_id_119EF( var_0 )
{
    return var_0.count >> 11 & 2047;
}

_id_119EE( var_0 )
{
    return var_0.count >> 22 & 31;
}

_id_119F5( var_0, var_1, var_2, var_3 )
{
    var_4 = 0;
    var_4 = var_4 + ( ( var_1 & 2047 ) << 0 );

    if ( isdefined( var_2 ) )
        var_4 = var_4 + ( ( var_2 & 2047 ) << 11 );

    if ( isdefined( var_3 ) )
        var_4 = var_4 + ( ( var_3 & 31 ) << 22 );

    var_0.count = var_4;
}

_id_11A48( var_0 )
{
    if ( var_0.type == "_encstr_BCB90F3A820F0295B340394DA349508DA2" || var_0.type == "_encstr_B94D1205B26938B77BEB89D1521FD0283C37AFEF" || var_0.type == "_encstr_A136162A7EAECF66DDA0BA3208C95F87016FA3AF99B0332F" )
        return 1;

    if ( istrue( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E05( "_encstr_9DD90F2A9037FBB7B365B4810C7817025B", var_0 ) ) )
        return 1;

    if ( istrue( var_0._id_11A48 ) )
        return 1;

    return 0;
}

lootused( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( var_0 ) )
        return;

    if ( istrue( var_3 _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E05( "_encstr_A3BB15230B0B2743124F13F0132C3018D821B9D17BDBEF", var_0 ) ) || istrue( level.stop_end_breach_fx ) )
        return;

    if ( var_0 getscriptableisloot() && !_id_11A48( var_0 ) )
    {
        var_5 = spawnstruct();
        var_5.scriptablename = var_0.type;
        var_5.origin = var_0.origin;
        var_5.count = _id_119ED( var_0 );
        var_5.impulsefx = _id_119EF( var_0 );
        var_5.impactfunc_fire = _id_119EE( var_0 );
        var_5.tracknonoobplayerlocation = var_0;
        var_5.customweaponname = var_0.customweaponname;
        var_5.maxcount = level.br_pickups.maxcounts[var_5.scriptablename];
        var_5.stackable = level.br_pickups.stackable[var_5.scriptablename];

        if ( !var_5.count && isdefined( level.br_pickups.counts[var_5.scriptablename] ) )
            var_5.count = level.br_pickups.counts[var_5.scriptablename];

        var_5.isweaponfromcrate = var_0.isweaponfromcrate;
        var_5.turretsactive = var_4;
        var_6 = var_3 cantakepickup( var_5 );

        if ( var_6 == 1 )
        {
            var_7 = var_3 onusecompleted( var_5, undefined, var_4 );

            if ( isdefined( var_0 ) && var_7 )
                _id_119F5( var_0, var_5.count, var_5.impulsefx, var_5.impactfunc_fire );

            if ( !isdefined( var_0 ) || var_7 )
                return;

            _id_11A21( var_0 );
        }
        else
        {
            var_8 = 1;
            var_9 = level.br_pickups.delay_delete_rpg_missile[var_5.scriptablename];

            if ( var_4 && istrue( var_9 ) && var_2 == "_encstr_BE8B08B3B4CD963163B2" )
                var_8 = 0;

            if ( istrue( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E06( "_encstr_827E13705AB411FF5F63B2B5683B81F35F72686832", var_5.scriptablename, var_4, var_2 ) ) )
                var_8 = 0;

            if ( var_6 == 17 || var_6 == 21 )
                var_8 = 0;

            if ( var_8 )
            {
                if ( var_6 == 3 )
                    var_3 playlocalsound( "_encstr_AA070FDDCAB038EB0BB5D6DBD733BAB11B" );
                else
                    var_3 playlocalsound( "_encstr_B9A80F8927EB0E9636B6AE38D746B2B9F2" );

                var_3 showuseresultsfeedback( var_6 );
            }
        }
    }
}

update_gamebattles_char_loc( var_0, var_1 )
{
    var_2 = var_0.type == "_encstr_A4D90E79134F1950FD54A7D76926B055" || var_0.type == "_encstr_A122133610976190D05DB7C6C35020F047715B3737" || var_0.type == "_encstr_9ED017FAAE7E5BD763186A5208AB81FBD098544F4EC157DC7B";

    if ( var_2 )
        return var_1;

    if ( var_0.type == "_encstr_BE7B144C27B17BDB8EBEACE6C60B83CAAF9CB02396BD" || var_0.type == "_encstr_93BC0E4EB3B7DFCF22EC357BAA0E4345" || var_0.type == "_encstr_BA5615F623910B726697EF9BA587BA4EE9A96D3FF8B0D5" || var_0.type == "_encstr_B7D60E5DD869EB7D2D30553306DBC928" || var_0.type == "_encstr_B83615899CF50B27B5F6271D932CD2377DCAE6CE9637B2" || var_0.type == "_encstr_95390B13C9F5A3C985B57785BC" )
        return 0;

    return 1;
}

_id_11A21( var_0, var_1 )
{
    if ( var_0 getscriptableislinked() )
        return;

    if ( !isdefined( var_1 ) )
        var_1 = var_0.type;

    if ( usb( var_0.type ) )
    {
        if ( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
            level notify( "_encstr_82EC198E16263656E80D5A19957DB6A58D8DEBD82C3636F65D47AF" + var_0.origin );

        _encstr_A83527375FF36358943A0858E22728AFFAAFA1ABAB2A36DADA520ED34B55D05D71772933B3C6F4F0F3::_id_1207A( var_0 );
    }

    if ( var_0 getscriptableisreserved() && !istrue( var_0.keepinmap ) )
    {
        lastunrulyscore( var_0 );
        var_0 freescriptable();
    }
    else
        var_0 setscriptablepartstate( var_1, "_encstr_9EDF0778AA2789E9F3" );
}

br_forcegivecustompickupitem( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( istrue( var_5 ) )
    {
        var_0 minsteps( var_1, var_3, var_4, var_5 );
        return 1;
    }

    var_6 = spawnstruct();
    var_6.scriptablename = var_1;
    var_6.origin = var_0.origin;
    var_6.count = 0;
    var_6.maxcount = level.br_pickups.maxcounts[var_6.scriptablename];
    var_6.stackable = level.br_pickups.stackable[var_6.scriptablename];

    if ( isdefined( var_3 ) )
        var_6.count = var_3;

    if ( !var_6.count && isdefined( level.br_pickups.counts[var_6.scriptablename] ) )
        var_6.count = level.br_pickups.counts[var_6.scriptablename];

    var_7 = var_0 cantakepickup( var_6 );

    if ( var_7 == 1 )
    {
        var_0 onusecompleted( var_6, var_2, undefined, var_4 );
        return 1;
    }

    return 0;
}

resetplayerinventorywithdelay( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    wait( var_0 );
    resetplayerinventory( var_1 );
}

resetplayerinventory( var_0 )
{
    var_1 = scripts\mp\utility\game::round_vehicle_logic() == "_encstr_9C8D0B4BABD087CAC90B93AA60";
    self.br_inventory_slots = [];

    if ( !_encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::unset_relic_aggressive_melee( "_encstr_9BB6062FDE751D33" ) )
        _encstr_BD96220B5106E75AE8B7770D890AA70F2109F353DB5537C530DD0F0965F06D1BF8E11B7A::disable_map_ammo_munitions();

    disable_near_snake_cam_after_open();

    if ( isdefined( self.streakdata ) && !var_1 && !istrue( level._id_133D7 ) )
        scripts\mp\killstreaks\killstreaks::clearkillstreaks();

    if ( !level.allowsupers )
        _id_12C81();

    if ( !istrue( var_0 ) )
    {
        _encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::stripweaponsfromplayer();
        scripts\mp\equipment::takeequipment( "_encstr_987F080E394BDAC2E45E" );
        scripts\mp\equipment::takeequipment( "_encstr_B98F0AC7D5B99F4DDBA8353B" );
        scripts\mp\weapons::_id_1316B( getcompleteweaponname( "_encstr_9B660D018F3841EE3A23DBEE3639F0" ) );
    }

    if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::shouldgetnewspawnpoint() )
        _id_12C1F();
}

_id_12C81()
{
    scripts\mp\supers::clearsuper();
    self setclientomnvar( "_encstr_B67F169311A1F0DDA3D2B65B5ACF8220C775BF1794961815", 0 );
    self setclientomnvar( "_encstr_A20B12C524899FDB70FFF0A1933AD0FF034FBE4E", 0 );
}

resetdefaultweaponammo( var_0 )
{
    var_1 = self getweaponslistall();

    for ( var_2 = 0; var_2 < var_1.size; var_2++ )
    {
        var_3 = var_1[var_2];
        var_4 = 0;

        if ( var_3.inventorytype == "_encstr_987F080E394BDAC2E45E" )
        {
            if ( isdefined( var_0 ) )
            {
                var_5 = var_3.clipsize;
                var_4 = var_5 * ( var_0 - 1 );
            }
            else if ( level.magcount > 0 )
            {
                var_5 = var_3.clipsize;
                var_4 = var_5 * ( level.magcount - 1 );
            }
            else
                var_5 = 0;

            self setweaponammoclip( var_3, var_5 );
        }
    }
}

initplayer( var_0 )
{
    _encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::br_ammo_player_clear();
    resetplayerinventory( var_0 );
}

spawndebugpickupfromdevgui( var_0 )
{
    foreach ( var_2 in level.players )
    {
        if ( !isbot( var_2 ) && isalive( var_2 ) )
        {
            var_3 = var_2.origin + anglestoforward( var_2.angles ) * 100 + ( 0, 0, 12 );
            var_4 = 0;

            if ( isdefined( level.br_pickups.counts[var_0] ) )
                var_4 = level.br_pickups.counts[var_0];

            var_5 = remove_roof_nodes( var_3 );
            var_6 = spawnpickup( var_0, var_5, var_4 );

            if ( isdefined( var_6 ) )
            {
                var_7 = scripts\engine\trace::create_contents( 0, 1, 0, 0, 0, 1, 1, 0, 0 );
                var_8 = [ var_6 ];
                var_9 = var_6.origin + ( 0, 0, 50 );
                var_10 = var_9 + ( 0, 0, -200 );
                var_11 = scripts\engine\trace::ray_trace( var_9, var_10, var_8, var_7 );

                if ( isdefined( var_11["_encstr_B60E07C9FD1C2055E3"] ) && isdefined( var_11["_encstr_B60E07C9FD1C2055E3"].targetname ) && var_11["_encstr_B60E07C9FD1C2055E3"].targetname == "_encstr_AA4C09ED4AC203CD971F68" )
                {
                    var_12 = var_11["_encstr_B60E07C9FD1C2055E3"];
                    var_13 = rotatevectorinverted( var_6.origin - var_12.origin, var_12.angles );
                    var_14 = combineangles( invertangles( var_12.angles ), var_6.angles );
                    var_6 scriptableclearparententity( var_12, var_13, var_14 );
                }
            }
        }
    }
}

isweaponpickup( var_0 )
{
    return isdefined( level.br_pickups.br_itemtype[var_0] ) && level.br_pickups.br_itemtype[var_0] == "_encstr_B92007DDCA2C0EF6DC";
}

isweaponpickupitem( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    if ( isdefined( var_0.weapon ) )
        return istrue( var_0.weapon.iscustomweapon );
    else if ( isdefined( var_0.scriptablename ) )
        return isweaponpickup( var_0.scriptablename );

    return 0;
}

takearmorpickup( var_0 )
{
    var_1 = level.br_pickups.br_equipname[var_0.scriptablename];
    var_2 = _encstr_BD96220B5106E75AE8B7770D890AA70F2109F353DB5537C530DD0F0965F06D1BF8E11B7A::isarmorbetterthanequipped( var_1 );

    if ( var_2 )
        tryequiparmor( var_0 );
}

takeequipmentpickup( var_0, var_1 )
{
    var_2 = level.br_pickups.br_equipname[var_0.scriptablename];
    var_3 = level.equipment.table[var_2].defaultslot;
    var_4 = 0;

    if ( pickupissameasequipmentslot( var_2, var_3 ) )
    {
        if ( equipmentslothasroom( var_2, var_3 ) )
        {
            if ( var_3 != "_encstr_A1B507EB87CA015BB8" )
                scripts\mp\damagefeedback::hudicontype( "_encstr_88DB0806A61FB2C5ADC8" );

            var_5 = scripts\mp\equipment::getequipmentslotammo( var_3 );
            var_6 = scripts\mp\equipment::getequipmentmaxammo( var_2 );

            if ( var_5 + var_0.count > var_6 )
            {
                var_7 = var_6 - var_5;
                scripts\mp\equipment::setequipmentammo( var_2, var_6 );
                var_0.count = var_0.count - var_7;
                var_4 = 1;
            }
            else
                scripts\mp\equipment::incrementequipmentslotammo( var_3, var_0.count );
        }
        else if ( !getdvarint( "_encstr_81DF142B77A3FFF353E9265F4F77407C0D4D140D8208", 1 ) )
            trypickupitem( var_0.scriptablename, var_0.count );
    }
    else if ( !isdefined( self.equipment[var_3] ) || scripts\mp\equipment::getequipmentslotammo( var_3 ) == 0 )
    {
        scripts\mp\equipment::giveequipment( var_2, var_3 );
        scripts\mp\equipment::setequipmentammo( var_2, var_0.count );
    }
    else if ( !getdvarint( "_encstr_81DF142B77A3FFF353E9265F4F77407C0D4D140D8208", 1 ) )
    {
        var_8 = 1;

        if ( isdefined( var_0.count ) )
            var_8 = var_0.count;

        trypickupitem( var_0.scriptablename, var_8 );
    }
    else
    {
        var_9 = test_ai_anim();
        dropequipmentinslot( var_9, var_3, var_1 );
        scripts\mp\equipment::giveequipment( var_2, var_3 );
        scripts\mp\equipment::setequipmentammo( var_2, var_0.count );
    }

    return var_4;
}

dropequipmentinslot( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\mp\equipment::getequipmentslotammo( var_1 );

    if ( isdefined( var_3 ) )
        var_4 = var_3;

    var_5 = scripts\engine\utility::array_find( level.br_pickups.br_equipname, self.equipment[var_1] );

    if ( isdefined( var_5 ) )
    {
        var_6 = undefined;

        if ( istrue( var_2 ) )
            var_6 = _encstr_BA9929DB6F38F4738DD3361ADB4877AE68DB5449A178BAC6BEEB49C2A3B19FA290C7F3D10760C4FAD4E382::removefromdismembermentlist();

        var_7 = getitemdroporiginandangles( var_0, self.origin, self.angles, self, var_6 );
        var_8 = 0;
        var_9 = spawnpickup( var_5, var_7, var_4, 1 );

        if ( isdefined( var_9 ) )
            var_9 modeloadoutupdateammo( self, var_5 );
    }
}

modeloadoutupdateammo( var_0, var_1 )
{
    var_2 = self;

    if ( var_1 == "_encstr_B63E1D91BB5BFD6D5BE17040E5EAD8D21B29773D44021D9B9797B8DAE30D5B" )
    {
        var_2.owner = var_0;
        var_0.modespawnclient = var_2;
    }
}

pickupissameasequipmentslot( var_0, var_1 )
{
    if ( isdefined( self.equipment[var_1] ) && self.equipment[var_1] == var_0 )
        return 1;

    return 0;
}

equipmentslothasroom( var_0, var_1 )
{
    if ( scripts\mp\equipment::getequipmentslotammo( var_1 ) < scripts\mp\equipment::getequipmentmaxammo( var_0 ) )
        return 1;

    return 0;
}

takerespawntokenpickup( var_0 )
{
    if ( !_id_12CB6() && !_encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::hasrespawntoken() )
    {
        addrespawntoken();
        return 1;
    }

    return 0;
}

addrespawntoken( var_0 )
{
    var_1 = self;
    var_1.hasrespawntoken = 1;
    var_1 _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_1315B( 1 );

    if ( !istrue( var_0 ) )
        var_1 thread scripts\mp\hud_message::showsplash( "_encstr_A1841868ABC7EBFFBF9AB28F83CF99B5AA09CAC97103EF7F1DE0" );
}

removerespawntoken()
{
    var_0 = self;
    var_0.hasrespawntoken = 0;
    var_0 _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_1315B( 0 );
}

_id_13A39( var_0 )
{
    if ( !_encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::shouldgetnewspawnpoint() )
    {
        bdroppingshield();
        return 1;
    }

    return 0;
}

bdroppingshield( var_0 )
{
    var_1 = self;
    var_1.shouldgetnewspawnpoint = 1;
    var_1 _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_1315C( 1 );

    if ( !istrue( var_0 ) )
        var_1 thread scripts\mp\hud_message::showsplash( "_encstr_A2181C4D539EBEB8E27ED1138B0BF24623FEC9F83C054A9EB25F3062A333" );

    var_2 = level.maxteamsize == 1;

    if ( var_2 && !var_1 scripts\mp\utility\perk::_hasperk( "_encstr_9EAA160357C1E73CA33813DBB9D974EF9BB0948C65E96384" ) )
        var_1 scripts\mp\utility\perk::giveperk( "_encstr_9EAA160357C1E73CA33813DBB9D974EF9BB0948C65E96384" );
}

_id_12C1F()
{
    var_0 = self;
    var_0.shouldgetnewspawnpoint = 0;
    var_0 _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_1315C( 0 );
    var_1 = level.maxteamsize == 1;

    if ( var_1 && var_0 scripts\mp\utility\perk::_hasperk( "_encstr_9EAA160357C1E73CA33813DBB9D974EF9BB0948C65E96384" ) )
        var_0 scripts\mp\utility\perk::removeperk( "_encstr_9EAA160357C1E73CA33813DBB9D974EF9BB0948C65E96384" );
}

_id_12CB6()
{
    return getdvarint( "_encstr_9FFD1C7FA8FBE79A256896CDE957E2736310E7F74B902FE353961A8440CD", 0 ) || !istrue( level.br_pickups._id_12CB7 ) || istrue( level.br_pickups._id_12CB5 ) && isdefined( level.gulag ) && istrue( level.gulag.shutdown );
}

battle_tracks_tryplayingbattletrackswhenstandingonvehicle( var_0 )
{
    var_1 = self;
    self playsoundtoplayer( "_encstr_B2D319D0E31111614FBDE8D591332AAF05DA40E8A97253F907B5EF", self );
    var_1.should_use_velo_forward = 1;
    var_1 setclientomnvar( "_encstr_B38B165796D789397DA185CDFA83B116A356AF837BEA8DA1", 1 );
    var_1 _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::updatebrscoreboardstat( "_encstr_94F40E1AC23728C658E8CA82F6BAB186", 1 );

    if ( !istrue( var_0 ) )
        var_1 thread scripts\mp\hud_message::showsplash( "_encstr_A634164B502EB80A13ED8731D727537310D1FBEF406DF593" );
}

_id_12C16()
{
    var_0 = self;
    var_0 setclientomnvar( "_encstr_B38B165796D789397DA185CDFA83B116A356AF837BEA8DA1", 0 );
    var_0 _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::updatebrscoreboardstat( "_encstr_94F40E1AC23728C658E8CA82F6BAB186", 0 );
    var_0.should_use_velo_forward = 0;
}

play_hud_reminder_vo()
{
    var_0 = self;
    var_1 = spawnstruct();
    var_1.scriptablename = "_encstr_93A813FA2690BFB58BC67986B50A93F14031D1AB0B";
    var_1.nvgvisionsetoverride = level.br_pickups.br_equipname[var_1.scriptablename];
    var_1.origin = self.origin;
    var_1.maxcount = scripts\mp\equipment::getequipmentmaxammo( var_1.nvgvisionsetoverride );
    var_1.count = var_1.maxcount;
    var_1.stackable = level.br_pickups.stackable[var_1.scriptablename];
    var_0 takeequipmentpickup( var_1 );
}

_id_13A2F( var_0 )
{
    if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::should_damage_pavelow_boss() )
    {
        var_1 = test_ai_anim();
        var_2 = undefined;
        var_3 = getitemdroporiginandangles( var_1, self.origin, self.angles, self, var_2 );
        spawnpickup( self.armorylights, var_3, 1, 1 );
    }

    battle_tracks_getbattletracksid( var_0.scriptablename );
}

battle_tracks_getbattletracksid( var_0 )
{
    var_1 = self;
    var_1.armorylights = var_0;
    var_2 = int( tablelookup( "_encstr_8C1A150A58874E1BE176A3DD16CBE75643E022B658D783", 1, var_0, 0 ) );
    var_1 _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::updatebrscoreboardstat( "_encstr_9E3812BE9D372C21D3F4D5E7A3D9A6BB4BF05035", var_2 );
    var_1 _encstr_A6AC29C710437913F1A6ED750F1F3A39C85853772019BB2E353EC96E798171CD50F86F67E871E9460756CE::_id_11FF9( var_0 );
}

_id_12BFC()
{
    var_0 = self;

    if ( !getdvarint( "_encstr_B23D20CB91C67F9E98AF7A55F5686783EEAC8230391B37967031424DA3F02C5B1D41", 0 ) )
    {

    }

    var_0 _encstr_A6AC29C710437913F1A6ED750F1F3A39C85853772019BB2E353EC96E798171CD50F86F67E871E9460756CE::_id_1207D( var_0.armorylights );
    var_0.armorylights = undefined;
    var_0 _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::updatebrscoreboardstat( "_encstr_9E3812BE9D372C21D3F4D5E7A3D9A6BB4BF05035", 0 );
}

_id_13A33( var_0 )
{
    var_1 = var_0.scriptablename;

    if ( var_1 == "_encstr_97771751434168D07B6130AF5EB508EF8706FB6B8C08DAD3D4" )
        return;
}

takequestitem( var_0 )
{
    var_1 = var_0.scriptablename;

    if ( var_1 == "_encstr_8C371523235DBF684301C1A2B890DC18CE81B7BEB25522" )
        var_0 _encstr_9EC72B78D27A3BE3238B68B160A6C9F3651AF8A07BD74750439258331A3F3391CE839009036B931373E65CAE23::_id_14654( self );
}

battle_tracks_togglethink( var_0 )
{
    var_1 = self;
    var_2 = scripts\mp\perks\perks::hudcost( var_0.scriptablename );
    self playsoundtoplayer( "_encstr_B2D319D0E31111614FBDE8D591332AAF05DA40E8A97253F907B5EF", self );

    if ( isdefined( var_2 ) && var_2 != "_encstr_A40101" )
        var_1 scripts\mp\perks\perks::battle_tracks_tryinittogglestate( var_2 );
}

bearsetup( var_0 )
{
    var_1 = self;
    self playsoundtoplayer( "_encstr_B2D319D0E31111614FBDE8D591332AAF05DA40E8A97253F907B5EF", self );
    var_1.should_enter_combat_after_checking_decoy_grenade = 1;
    var_1 scripts\mp\perks\perks::bears();

    if ( !istrue( var_0 ) )
        var_1 thread scripts\mp\hud_message::showsplash( "_encstr_890F16EBAF391FD44BE0EA43C8DF4ADF739A7F7248200F1A" );
}

_id_12C26()
{
    var_0 = self;
    var_0.should_enter_combat_after_checking_decoy_grenade = 0;
    var_0 scripts\mp\perks\perks::_id_12C25();
}

playerpackdataintogulagomnvar( var_0, var_1, var_2, var_3 )
{
    self notify( "_encstr_89AE22D8B0371B2B8D7DB0368DFAD62DC636E6D127CA585BD7915938C6DBBC6B2B9BE8B9" );

    if ( istrue( var_3 ) )
    {
        var_4 = test_ai_anim();
        missing_window_blockers( var_4, var_2, var_3, var_0 );
        return;
    }

    if ( istrue( var_1 ) )
    {
        var_4 = test_ai_anim();
        missing_window_blockers( var_4, var_2 );
    }
    else
        scripts\mp\killstreaks\killstreaks::clearkillstreaks();

    scripts\mp\killstreaks\killstreaks::awardkillstreak( var_0, "_encstr_93610627DB28CDDB", undefined, undefined, undefined, 1 );
}

takekillstreakpickup( var_0, var_1 )
{
    if ( isdefined( var_0 ) && isdefined( var_0.tracknonoobplayerlocation ) && isdefined( var_0.tracknonoobplayerlocation.spawnprojectile ) )
        self.spawnx1stashlootcache = var_0.tracknonoobplayerlocation.spawnprojectile;

    send_notify_after_player_tac_vis( var_0.scriptablename, var_1 );
}

send_notify_after_player_tac_vis( var_0, var_1 )
{
    var_2 = level.br_pickups.br_killstreakreference[var_0];

    if ( unset_relic_dogtags( var_2 ) )
        playerkilledspawn( var_2 );
    else
        playerpackdataintogulagomnvar( var_2, 1, var_1 );
}

should_do_vo_call()
{
    if ( isdefined( self.streakdata ) && isdefined( self.streakdata.streaks ) && self.streakdata.streaks.size > 0 )
        return isdefined( self.streakdata.streaks[1] );

    return 0;
}

haskillstreak( var_0 )
{
    return should_do_vo_call() && self.streakdata.streaks[1].streakname == var_0;
}

show_getcash_hint()
{
    return haskillstreak( "_encstr_8B770E56E10E63EDE696B3ACEBC4DBEE" );
}

unset_relic_dogtags( var_0 )
{
    var_1 = 0;

    switch ( var_0 )
    {
        case "_encstr_AA820C47809B9A5345E7BAF8E778":
            var_1 = 1;
            break;
    }

    return var_1;
}

playerkilledspawn( var_0 )
{
    var_1 = scripts\mp\killstreaks\killstreaks::getkillstreaksetupinfo( var_0 );

    if ( isdefined( var_1 ) && isdefined( var_1.linkedtotag ) )
        self [[ var_1.linkedtotag ]]();
}

forceusekillstreak( var_0 )
{
    if ( should_do_vo_call() )
        scripts\mp\killstreaks\killstreaks::removekillstreak( 1 );

    scripts\mp\killstreaks\killstreaks::awardkillstreak( var_0, "_encstr_93610627DB28CDDB", undefined, undefined, undefined, 1 );
    var_1 = scripts\mp\killstreaks\killstreaks::getkillstreakinslot( 1 );
    var_2 = scripts\mp\killstreaks\killstreaks::triggerkillstreak( var_1, 1 );

    if ( !var_2 )
        scripts\mp\killstreaks\killstreaks::removekillstreak( 1 );

    return var_2;
}

_givebrsuper( var_0, var_1, var_2 )
{
    if ( level.allowsupers )
    {
        scripts\mp\perks\perkpackage::_id_12300( var_1 );
        var_2 = scripts\mp\supers::getcurrentsuperpoints() >= scripts\mp\supers::getsuperpointsneeded();
    }
    else
    {
        scripts\mp\perks\perkpackage::perkpackage_giveimmediate( var_1 );
        self setclientomnvar( "_encstr_B67F169311A1F0DDA3D2B65B5ACF8220C775BF1794961815", 3 );
        self setclientomnvar( "_encstr_BE5517EA96F5C1CAC9B5BE1C0BD8D6C2D9CAD79BAEE059E4C4", scripts\mp\supers::getsuperid( var_1 ) );
        self setclientomnvar( "_encstr_A20B12C524899FDB70FFF0A1933AD0FF034FBE4E", 1 );
    }

    if ( isdefined( var_0 ) )
    {
        scripts\mp\equipment::giveequipment( var_0, "_encstr_BEB4068F1B5BA3AB" );
        scripts\mp\equipment::setequipmentammo( var_0, var_2 );

        if ( istrue( self.issuperdisabled ) )
            self.loadoutextraperksfromgamemode = var_2;
    }
}

takesuperpickup( var_0, var_1 )
{
    var_2 = level.br_pickups.br_equipname[var_0.scriptablename];
    var_3 = level.br_pickups.br_superreference[var_0.scriptablename];

    if ( isdefined( self.equipment["_encstr_BEB4068F1B5BA3AB"] ) && ( scripts\mp\equipment::getequipmentslotammo( "_encstr_BEB4068F1B5BA3AB" ) > 0 || mortar_add_fov_user_scale() ) )
    {
        var_4 = test_ai_anim();
        dropequipmentinslot( var_4, "_encstr_BEB4068F1B5BA3AB", var_1 );
    }

    _givebrsuper( var_2, var_3, var_0.count );

    if ( level.allowsupers )
        scripts\mp\supers::givesuperpoints( scripts\mp\supers::getsuperpointsneeded() );
}

mortar_add_fov_user_scale()
{
    if ( istrue( self.unmark_on_death ) )
    {
        if ( isdefined( self.super ) && !self.super.usepercent )
            return 1;
    }

    return 0;
}

forcegivesuper( var_0, var_1, var_2, var_3 )
{
    var_4 = undefined;

    foreach ( var_7, var_6 in level.br_pickups.br_superreference )
    {
        if ( var_6 == var_0 )
        {
            var_4 = var_7;
            break;
        }
    }

    var_8 = undefined;

    if ( isdefined( var_4 ) )
    {
        var_8 = level.br_pickups.br_equipname[var_4];

        if ( istrue( var_3 ) )
        {
            var_9 = test_ai_anim();
            mintokensdropondeath( var_9, var_2, var_3, var_8 );
            return;
        }

        if ( istrue( var_1 ) )
        {
            if ( isdefined( self.equipment["_encstr_BEB4068F1B5BA3AB"] ) && scripts\mp\equipment::getequipmentslotammo( "_encstr_BEB4068F1B5BA3AB" ) > 0 )
            {
                var_9 = test_ai_anim();
                dropequipmentinslot( var_9, "_encstr_BEB4068F1B5BA3AB", var_2 );
            }
        }
    }

    _givebrsuper( var_8, var_0, 1 );
}

takegasmask( var_0, var_1 )
{
    if ( scripts\cp_mp\gasmask::hasgasmask( self ) )
    {
        var_2 = undefined;

        if ( istrue( var_1 ) )
            var_2 = _encstr_BA9929DB6F38F4738DD3361ADB4877AE68DB5449A178BAC6BEEB49C2A3B19FA290C7F3D10760C4FAD4E382::removefromdismembermentlist();

        var_3 = test_ai_anim();
        var_4 = getitemdroporiginandangles( var_3, self.origin, self.angles, self, var_2 );
        spawnpickup( self.plundersilentcountdownendtime, var_4, int( self.gasmaskhealth ), 1 );
    }

    scripts\cp_mp\gasmask::init( var_0.count, var_0.scriptablename );
    _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_encstr_806A17B959D10DC26EEC2CCDDA58CDADB21ED19C2C5ADCCCF6( 1 );
}

plunderrepositoryref( var_0 )
{
    if ( !isdefined( self.plunderrepositorywidget ) )
        self.plunderrepositorywidget = [];

    if ( isdefined( self.plunderrepositorywidget[var_0] ) )
        return;

    self.plunderrepositorywidget[var_0] = 1;
    thread ai_push_forward_watcher();
}

plunderrankupdate( var_0 )
{
    if ( !isdefined( self.plunderrepositorywidget ) )
        self.plunderrepositorywidget = [];

    if ( !isdefined( self.plunderrepositorywidget[var_0] ) )
        return;

    self.plunderrepositorywidget[var_0] = undefined;
    thread ai_push_forward_watcher();
}

ai_push_forward_watcher()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( istrue( self.gasmaskswapinprogress ) )
    {
        scripts\engine\utility::waittill_notify_or_timeout( "_encstr_BD0A1707F14087027F2F6FC7571C8AE07919BD0D4B50454B45", 2.0 );
        waitframe();
    }

    self notify( "_encstr_9B151377EEFB6482A3B221E7E227C17F0DCAD51FB1" );
    self endon( "_encstr_9B151377EEFB6482A3B221E7E227C17F0DCAD51FB1" );
    waittillframeend;

    if ( istrue( self.gasmaskequipped ) && ( !isdefined( self.plunderrepositorywidget ) || !self.plunderrepositorywidget.size ) )
        thread _id_12C05();
    else if ( !istrue( self.gasmaskequipped ) && isdefined( self.plunderrepositorywidget ) && self.plunderrepositorywidget.size )
        thread numkilled();
}

ks_circlecount( var_0 )
{
    var_1 = 0;
    var_1 = var_1 | var_0 isreloading();
    var_1 = var_1 | var_0 isthrowinggrenade();

    if ( level._encstr_A92410D916E65BC29B5BC223B946956385BC != 0 )
        var_1 = var_1 | var_0 scripts\mp\utility\player::isplayerads();

    return var_1;
}

get_area_clear_alias()
{
    var_0 = 0;
    var_1 = self;
    var_0 = var_0 | var_1 scripts\cp_mp\utility\player_utility::isinvehicle( 1 );
    var_0 = var_0 | var_1 isinfreefall();
    var_0 = var_0 | var_1 isparachuting();
    var_0 = var_0 | var_1 sendclientmatchdataforclient();

    if ( level._encstr_BA9513B3586EDA85B96D53ABB6C14B733B6ED6B483 != 0 )
        var_0 = var_0 | var_1 isjumping();

    return !var_0;
}

numkilled()
{
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self playsoundtoplayer( "_encstr_9E1A132E8E07CAA1AB31675F7880A7F2CDB0322576", self );
    self.gasmaskswapinprogress = 1;
    thread kiosksetupfiresaleforplayer( 0.2 );
    var_0 = self getgestureanimlength( "_encstr_A4DD16D962FF80407E47C3D35727F85EA71A91C32AF7C010" );

    if ( get_area_clear_alias() )
        thread _id_12735( "_encstr_9D4F18D2771CEBB359B9AF381BCB9CF5EC0BB9AD8537DA7D7B9B", var_0 );

    self setclientomnvar( "_encstr_88B00CD55AFAD92C9BAF6BC2E6DA", 2 );
    wait( var_0 );
    self.gasmaskswapinprogress = 0;
    self notify( "_encstr_BD0A1707F14087027F2F6FC7571C8AE07919BD0D4B50454B45" );
    self.gasmaskequipped = 1;
    scripts\cp_mp\killstreaks\white_phosphorus::enableloopingcoughaudiosupression();

    if ( isdefined( self.operatorcustomization.gender ) && self.operatorcustomization.gender == "_encstr_BD290799CAB585B156" )
        self _meth_87A9( "_encstr_9E6C0F54BED33BF1AB7F31F02FDD8941DA" );
    else
        self _meth_87A9( "_encstr_B14F0D0CE11757CB9382F14AC3680A" );

    if ( isdefined( self.gasmaskhealth ) && self.gasmaskhealth <= 0 )
        disable_near_snake_cam_after_open();
}

_id_12735( var_0, var_1 )
{
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    var_2 = getcompleteweaponname( var_0 );
    self giveandfireoffhand( var_2 );

    while ( get_area_clear_alias() && var_1 > 0 )
    {
        if ( var_1 > 1 )
        {
            var_3 = 1;
            var_1 = var_1 - 1;
        }
        else
        {
            var_3 = var_1;
            var_1 = 0;
        }

        wait( var_3 );
    }

    if ( self hasweapon( var_2 ) )
        self takeweapon( var_2 );
}

_id_12C05()
{
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( !istrue( self.gasmaskequipped ) )
        return;

    self playsoundtoplayer( "_encstr_B47514E6463FF2E9E3692F2730D89F3A15D4211A21CD", self );
    var_0 = self getgestureanimlength( "_encstr_9E4717CECA37BED60BB35B167DCE2CB9EBDA2C9B6DD7DE6666" );
    thread knock_player_forward( 1.3 );

    if ( get_area_clear_alias() )
        thread _id_12735( "_encstr_9CFA194BEF98693C1FB3967BAA876EB1E751C7CB613280680FFA49", var_0 );

    self.gasmaskswapinprogress = 1;
    self setclientomnvar( "_encstr_88B00CD55AFAD92C9BAF6BC2E6DA", 1 );
    wait( var_0 );
    self.gasmaskswapinprogress = 0;
    self setclientomnvar( "_encstr_88B00CD55AFAD92C9BAF6BC2E6DA", 0 );
    self notify( "_encstr_BD0A1707F14087027F2F6FC7571C8AE07919BD0D4B50454B45" );
    scripts\cp_mp\killstreaks\white_phosphorus::disableloopingcoughaudiosupression();

    if ( isdefined( self.operatorcustomization.gender ) && self.operatorcustomization.gender == "_encstr_BD290799CAB585B156" )
        self _meth_87A9( "_encstr_BD290799CAB585B156" );
    else
        self _meth_87A9( "_encstr_A40101" );

    if ( !isdefined( self.gasmaskhealth ) || self.gasmaskhealth <= 0 )
        handleweaponreloadammodrop();
}

disable_near_snake_cam_after_open()
{
    if ( !istrue( self.gasmaskequipped ) )
        return;

    self playsoundtoplayer( "_encstr_BED6164EEE67AA818B11477F98604712D58F9684C06152DA", self );
    thread kothlaststarttime( 0.6 );

    if ( isdefined( self.operatorcustomization.gender ) && self.operatorcustomization.gender == "_encstr_BD290799CAB585B156" )
        self _meth_87A9( "_encstr_BD290799CAB585B156" );
    else
        self _meth_87A9( "_encstr_A40101" );

    self playsoundtoplayer( "_encstr_A3D619A3CB2884509F9031501F7741803B7AB87D89A552978B73BB", self );
    handleweaponreloadammodrop();
    var_0 = self getgestureanimlength( "_encstr_8A9519ECACCDEB6B85B3ADC2BEB3B06EEBAD856EB6FA4C27ACB0AD" );
    thread _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_12616( "_encstr_87491BB0DC5B27F199FB59932459181E4232036113F31C1628EA9FA192", var_0 );
    self.gasmaskswapinprogress = 1;
    self setclientomnvar( "_encstr_88B00CD55AFAD92C9BAF6BC2E6DA", 3 );
    wait( var_0 );
    self.gasmaskswapinprogress = 0;
    self notify( "_encstr_BD0A1707F14087027F2F6FC7571C8AE07919BD0D4B50454B45" );
}

kiosksetupfiresaleforplayer( var_0 )
{
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( isdefined( var_0 ) && var_0 > 0.0 )
        wait( var_0 );

    self attach( "_encstr_975F1F0431B847223BDBB36B4FD3CAB488FB714FA9E83F9A87C7A78F370951EAF8", "_encstr_87DA078B11C012A35F" );
}

knock_player_forward( var_0 )
{
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( isdefined( var_0 ) && var_0 > 0.0 )
        wait( var_0 );

    if ( self.gasmaskequipped )
    {
        self detach( "_encstr_975F1F0431B847223BDBB36B4FD3CAB488FB714FA9E83F9A87C7A78F370951EAF8", "_encstr_87DA078B11C012A35F" );
        self.gasmaskequipped = 0;
    }
}

kothlaststarttime( var_0 )
{
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( isdefined( var_0 ) && var_0 > 0.1 )
        wait( var_0 - 0.1 );

    playfxontag( scripts\engine\utility::getfx( "_encstr_82DF1383B438FF77210FBF693B5BCFD7EB75FA7E98" ), self, "_encstr_9D8C101DB0CE7DEE95581CBDE6FAB195CC47" );
    wait 0.1;

    if ( self.gasmaskequipped )
    {
        self detach( "_encstr_975F1F0431B847223BDBB36B4FD3CAB488FB714FA9E83F9A87C7A78F370951EAF8", "_encstr_87DA078B11C012A35F" );
        self.gasmaskequipped = 0;
    }
}

canholdammobox( var_0 )
{
    if ( !isdefined( self.br_ammo[var_0] ) )
        return 1;

    return !_encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::br_ammo_type_player_full( self, var_0 );
}

isvest( var_0 )
{
    return isdefined( level.br_pickups.br_itemtype[var_0] ) && level.br_pickups.br_itemtype[var_0] == "_encstr_9BB6062FDE751D33" && issubstr( var_0, "_encstr_B30105B0BDAF0B" );
}

isgasmask( var_0 )
{
    return isdefined( level.br_pickups.br_itemtype[var_0] ) && level.br_pickups.br_itemtype[var_0] == "_encstr_BE71053B5958C9" && issubstr( var_0, "_encstr_80EA0832F1DE8877AF3B" );
}

usereload( var_0 )
{
    return isdefined( level.br_pickups.br_itemtype[var_0] ) && level.br_pickups.br_itemtype[var_0] == "_encstr_98AE0B231BA5974428F1594BA9" && issubstr( var_0, "_encstr_935711DC07B21B4B0BD896373ABE4CDEE657E6" );
}

isplunder( var_0 )
{
    return isdefined( level.br_pickups.br_itemtype[var_0] ) && level.br_pickups.br_itemtype[var_0] == "_encstr_82A20840E2BF75A1914A";
}

usb( var_0 )
{
    return isdefined( level.br_pickups.br_itemtype[var_0] ) && level.br_pickups.br_itemtype[var_0] == "_encstr_ABDB07FDA943401BCB";
}

uniquelootitemlookup( var_0 )
{
    return isdefined( level.br_pickups.br_itemtype[var_0] ) && level.br_pickups.br_itemtype[var_0] == "_encstr_AB8D11670809DBEB638DE79D60111297730B87";
}

usablecarriables( var_0 )
{
    return isdefined( level.br_pickups.br_itemtype[var_0] ) && level.br_pickups.br_itemtype[var_0] == "_encstr_97DE0FA23D9F832B7FA54972986B5BF056";
}

isperkpointpickup( var_0 )
{
    return isdefined( level.br_pickups.br_itemtype[var_0] ) && level.br_pickups.br_itemtype[var_0] == "_encstr_BC430A607792B0392294F085";
}

istokenpickup( var_0 )
{
    return isdefined( level.br_pickups.br_itemtype[var_0] ) && level.br_pickups.br_itemtype[var_0] == "_encstr_B67D0638F7A2B5E0";
}

use_milcrate( var_0 )
{
    return isdefined( level.br_pickups.br_itemtype[var_0] ) && level.br_pickups.br_itemtype[var_0] == "_encstr_B495074DCD3BE8A40F";
}

iskillstreak( var_0 )
{
    return isdefined( level.br_pickups.br_itemtype[var_0] ) && ( level.br_pickups.br_itemtype[var_0] == "_encstr_B6CE0B0BB00A031B7B88355740" || level.br_pickups.br_itemtype[var_0] == "_encstr_BEEC12D827ECF09F33F2D5EF8CB99DD84CD37078" );
}

issuperpickup( var_0 )
{
    return !update_operator_east_char_loc( var_0 ) && ( isdefined( level.br_pickups.br_itemtype[var_0] ) && ( level.br_pickups.br_itemtype[var_0] == "_encstr_BEB4068F1B5BA3AB" || level.br_pickups.br_itemtype[var_0] == "_encstr_B4DD0DAA33B39DB899CD08E2D2AA38" ) );
}

isplunderextract( var_0 )
{
    return var_0 == "_encstr_9337174C4EC6DBEDE8FAC1635DCD19AC93BE95C3E893C26CE8";
}

updatecollectionui( var_0 )
{
    return var_0 == "_encstr_95C1138ADE685F053129CB02B059FFE783C805037B";
}

turn_on_red_lights_along_track( var_0 )
{
    return issubstr( var_0, "_encstr_A6C60C27FB1731477A59A8B0E3D7" );
}

update_operator_east_char_loc( var_0 )
{
    return var_0 == "_encstr_A4D90E79134F1950FD54A7D76926B055" || usb( var_0 );
}

update_player_about_remaining_enemies( var_0 )
{
    return isdefined( level.br_pickups.br_itemtype[var_0] ) && level.br_pickups.br_itemtype[var_0] == "_encstr_BC2B0A075628F786B1182B12";
}

_encstr_9DEF0CBA439B8B2B10993C29B948( var_0 )
{
    return isdefined( level.br_pickups.br_itemtype[var_0] ) && level.br_pickups.br_itemtype[var_0] == "_encstr_9D8F065A37E8958D";
}

cantakepickup( var_0 )
{
    if ( self isskydiving() )
        return 9;

    var_1 = _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E05( "_encstr_B60312D858CD5185D656284BD8D6AB8331DB7B1D", var_0 );

    if ( isdefined( var_1 ) )
        return var_1;

    if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::isammo( var_0.scriptablename ) )
    {
        if ( istrue( self.isjuggernaut ) && !scripts\mp\juggernaut::vehicle_damage_setdeathcallback() )
            return 16;

        if ( !canholdammobox( var_0.scriptablename ) )
            return 3;
        else
            return 1;
    }

    if ( isweaponpickupitem( var_0 ) )
    {
        if ( istrue( self.isjuggernaut ) && !scripts\mp\juggernaut::vehicle_damage_setdeathcallback() )
            return 16;

        if ( istrue( self.tracking_max_health ) )
            return 13;

        if ( scripts\cp_mp\utility\player_utility::isinvehicle() )
            return 17;

        if ( _debug_rooftop_activesat::closedangles() )
            return 21;

        return 1;
    }

    if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::isequipment( var_0.scriptablename ) )
    {
        if ( istrue( self.isjuggernaut ) )
            return 16;

        if ( var_0.scriptablename == "_encstr_B63E1D91BB5BFD6D5BE17040E5EAD8D21B29773D44021D9B9797B8DAE30D5B" )
        {
            if ( self != var_0.tracknonoobplayerlocation.owner )
                return 20;
            else
                self.modespawnclient = undefined;
        }

        var_2 = level.br_pickups.br_equipname[var_0.scriptablename];
        var_3 = level.equipment.table[var_2].defaultslot;
        var_4 = istrue( var_0.turretsactive );
        var_5 = 1;

        if ( isdefined( var_0.count ) )
            var_5 = var_0.count;

        if ( var_4 && ( var_3 == "_encstr_987F080E394BDAC2E45E" || var_3 == "_encstr_B98F0AC7D5B99F4DDBA8353B" ) )
        {
            if ( isdefined( self.equipment[var_3] ) && pickupissameasequipmentslot( var_2, var_3 ) && equipmentslothasroom( var_2, var_3 ) )
                return 1;

            return 12;
        }

        if ( !isdefined( self.equipment[var_3] ) || scripts\mp\equipment::getequipmentslotammo( var_3 ) == 0 )
            return 1;

        if ( pickupissameasequipmentslot( var_2, var_3 ) )
        {
            if ( equipmentslothasroom( var_2, var_3 ) )
                return 1;
            else if ( getdvarint( "_encstr_81DF142B77A3FFF353E9265F4F77407C0D4D140D8208", 1 ) )
                return 4;
        }

        if ( getdvarint( "_encstr_81DF142B77A3FFF353E9265F4F77407C0D4D140D8208", 1 ) )
            return 1;

        if ( !canslotitem( var_0.scriptablename, var_5 ) )
            return 4;
        else
            return 1;
    }

    if ( isplunder( var_0.scriptablename ) )
    {
        if ( isdefined( level.br_plunder ) && isdefined( level.br_plunder._id_127BF ) && self.plundercount >= level.br_plunder._id_127BF )
            return 11;

        return 1;
    }

    if ( isgasmask( var_0.scriptablename ) )
    {
        if ( istrue( self.isjuggernaut ) )
            return 16;

        return 1;
    }

    if ( usb( var_0.scriptablename ) )
    {
        if ( var_0.scriptablename == "_encstr_815B1F858B82F030248111E8331D83B60A1351033BABC6184B23BEE3DEC2D865B3" || var_0.scriptablename == "_encstr_B7AA2B05B2A5C0B76359E910C31F47E03C36A1F3500B905F5783461B6AEB712B13AF1B73E373601E97BB194023" )
            return 1;
        else if ( istrue( level.questinfo._id_132E8 ) && scripts\engine\utility::array_contains( level.questinfo._id_13745, self.team + self.squadindex ) || scripts\engine\utility::array_contains( level.questinfo.teamsonquests, self.team ) )
            return 10;
        else
        {
            logstring( "_encstr_944E1BAFBB59738322710B9E08B5FBD85F5FE85F28791EC732F9208D71" + gettime() + "_encstr_97CA0A16018E5985DA104F01" + self.team + "_encstr_A61F18DCFF834B3D0BB892D84059B5471F302B19ED69A31673F2" + istrue( level.questinfo._id_132E8 ) + "_encstr_B683102158AAF8D5EF2274980AD70B2A5130" + scripts\engine\utility::ter_op( isdefined( self.squadindex ), self.squadindex, -1 ) );
            return 1;
        }
    }

    if ( isperkpointpickup( var_0.scriptablename ) )
    {
        if ( istrue( self.isjuggernaut ) )
            return 16;

        var_6 = scripts\mp\perks\perks::hudcost( var_0.scriptablename );

        if ( !getdvarint( "_encstr_B72E22BEDE23BFF39D3BB0191BBFE865EB49BDC5729A9B5941DBD840BFC98DA9A2EBA5C5", 0 ) && scripts\mp\utility\perk::_hasperk( var_6 ) )
            return 27;

        return 1;
    }

    if ( istokenpickup( var_0.scriptablename ) )
    {
        if ( istrue( self.isjuggernaut ) )
            return 16;

        if ( var_0.scriptablename == "_encstr_9FDD1591CA42801709A16BB7A37B8FAF8A082B67E00F6E" )
        {
            if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::hasrespawntoken() )
                return 8;
            else
                return 1;
        }

        return 1;
    }

    if ( use_milcrate( var_0.scriptablename ) )
    {
        if ( istrue( self.isjuggernaut ) )
            return 16;

        if ( var_0.scriptablename == "_encstr_A1AF13E2B6652278659FBFC079E2BFEB318359B3B5" )
        {
            if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::shouldgetnewspawnpoint() )
                return 14;
            else
                return 1;
        }

        return 1;
    }

    if ( iskillstreak( var_0.scriptablename ) )
    {
        var_7 = level.br_pickups.br_killstreakreference[var_0.scriptablename];

        if ( var_0.scriptablename == "_encstr_98FB184A2359CFADD83FFBE053B8F43FF1F8D3B3EE2697A5F88F" && _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::shouldlink() )
            return 18;

        if ( istrue( self.isjuggernaut ) )
            return 16;

        if ( unset_relic_dogtags( var_7 ) )
        {
            if ( var_7 == "_encstr_AA820C47809B9A5345E7BAF8E778" )
            {
                if ( !isdefined( level._id_13ACA[self.team] ) )
                    level._id_13ACA[self.team] = 0;

                var_8 = level._id_13ACA[self.team] + level.br_circle.circleindex + 1;

                if ( var_8 >= level.gulag_tutorial_vo.size )
                    return 19;
            }

            return 1;
        }

        if ( scripts\mp\utility\weapon::iskillstreakweapon( self getcurrentweapon() ) )
            return 7;

        if ( isdefined( self.streakdata ) && isdefined( self.streakdata.streaks ) && self.streakdata.streaks.size > 0 && self.streakdata.streaks[1].streakname == level.br_pickups.br_killstreakreference[var_0.scriptablename] )
            return 7;
        else
            return 1;
    }

    if ( issuperpickup( var_0.scriptablename ) )
    {
        if ( istrue( self.isjuggernaut ) )
            return 16;

        if ( scripts\mp\supers::issuperinuse() )
            return 4;

        return 1;
    }

    if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::isarmor( var_0.scriptablename ) )
    {
        if ( istrue( self.isjuggernaut ) )
            return 16;

        if ( _encstr_BD96220B5106E75AE8B7770D890AA70F2109F353DB5537C530DD0F0965F06D1BF8E11B7A::isarmorbetterthanequipped( level.br_pickups.br_equipname[var_0.scriptablename] ) )
            return 1;
        else
            return 6;
    }

    if ( updatecollectionui( var_0.scriptablename ) )
    {
        if ( istrue( self.isjuggernaut ) )
            return 16;

        if ( getdvarint( "_encstr_94EA179B3693AFB2DC5813B19528F6571B43A495D82F1BB195", 0 ) == 1 )
        {
            if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::should_use_velo_forward() )
            {
                var_9 = scripts\engine\utility::ter_op( isdefined( self.equipment["_encstr_A1B507EB87CA015BB8"] ), scripts\mp\equipment::getequipmentslotammo( "_encstr_A1B507EB87CA015BB8" ), 0 );
                var_10 = scripts\mp\equipment::getequipmentmaxammo( level.br_pickups.br_equipname["_encstr_93A813FA2690BFB58BC67986B50A93F14031D1AB0B"] );
                var_11 = var_0.tracknonoobplayerlocation.count;

                if ( var_9 >= var_10 )
                    return 4;
                else if ( var_11 <= 0 )
                    return 26;
                else
                {
                    thread playerplaypickupanim( var_0 );
                    play_hit_marker_to_player( var_0, 0 );
                    return 25;
                }
            }
            else
                return 1;
        }

        if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::should_use_velo_forward() )
            return 15;
        else
            return 1;
    }

    if ( turn_on_red_lights_along_track( var_0.scriptablename ) )
        return 1;

    if ( usablecarriables( var_0.scriptablename ) )
    {
        if ( isdefined( var_0.tracknonoobplayerlocation.team ) && self.team == var_0.tracknonoobplayerlocation.team )
            return 1;
        else
            return 4;
    }

    if ( usereload( var_0.scriptablename ) )
    {
        if ( istrue( self.isjuggernaut ) )
            return 16;

        if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::shouldlink() )
            return 18;

        return 1;
    }

    if ( var_0.scriptablename == "_encstr_A4AA14319CD8BDDBD1BE2CB5B6DBD7B34E95CD0B8C56" )
    {
        if ( istrue( self.isjuggernaut ) )
            return 16;

        var_12 = scripts\mp\equipment::getequipmentslotammo( "_encstr_987F080E394BDAC2E45E" );
        var_13 = scripts\mp\equipment::getequipmentslotammo( "_encstr_B98F0AC7D5B99F4DDBA8353B" );

        if ( isdefined( var_12 ) && var_12 < 2 || isdefined( var_13 ) && var_13 < 2 )
            return 1;
        else
            return 3;
    }

    if ( var_0.scriptablename == "_encstr_9DAC0E61478C501BA297681EEE9A7139" )
        return 1;

    if ( update_player_about_remaining_enemies( var_0.scriptablename ) || _encstr_9DEF0CBA439B8B2B10993C29B948( var_0.scriptablename ) )
        return 1;

    return 2;
}

unlocked_armory( var_0 )
{
    if ( scripts\mp\weapons::isfistweapon( var_0 ) || scripts\mp\utility\weapon::unset_relic_mythic( var_0 ) || scripts\mp\utility\weapon::update_health_bar_to_player( var_0 ) )
        return 0;

    return 1;
}

uavfastsweepid( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    switch ( var_0 )
    {
        case "_encstr_8A81172627B1B7ED3AAF8E0BB1E85A36B0C6FA46B2CEB436B2":
        case "_encstr_9D2417F122ACB8708BAF298397C3C50B6B3CDE290818383D83":
        case "_encstr_8C371523235DBF684301C1A2B890DC18CE81B7BEB25522":
        case "_encstr_B63E1D91BB5BFD6D5BE17040E5EAD8D21B29773D44021D9B9797B8DAE30D5B":
            return 1;
        default:
            return 0;
    }
}

spawnpickup( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    if ( !isdefined( var_1 ) )
        return;

    if ( var_1.origin == ( 0, 0, 0 ) )
        return;

    var_8 = 0;
    var_9 = undefined;

    if ( isdefined( level.br_pickups.br_weapontoscriptable[var_0] ) )
        var_9 = level.br_pickups.br_weapontoscriptable[var_0];
    else if ( _encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::vandalize_attack_max_cooldown( var_4 ) )
    {
        var_10 = undefined;

        if ( getsubstr( var_4.basename, 0, 3 ) == "_encstr_B219046E68FA" )
            var_10 = getsubstr( var_4.basename, 3, 5 );
        else
            var_10 = getsubstr( var_4.basename, 4, 6 );

        if ( var_10 == "_encstr_BE0703815F" )
            var_10 = "_encstr_870703207A";

        if ( var_10 == "_encstr_9807036B9C" )
            var_10 = "_encstr_A90703C332";

        if ( var_10 != "_encstr_9307033D9B" && var_10 != "_encstr_A80703E2DA" && var_10 != "_encstr_AF07038EB8" && var_10 != "_encstr_9407031388" && var_10 != "_encstr_A30703F270" && var_10 != "_encstr_870703207A" && var_10 != "_encstr_8807031CC1" && var_10 != "_encstr_A90703C332" && var_10 != "_encstr_8F070398EA" && var_10 != "_encstr_B10703A812" )
            return;

        var_8 = 1;
        var_9 = "_encstr_899D1759AB3C423DFD778B30C11BDDCBDFE707486D62EBF729" + var_10;
    }
    else if ( unlocked_armory( var_0 ) )
        var_9 = var_0;

    if ( !isdefined( var_9 ) )
        return;

    if ( var_9 == "_encstr_98A421984E1BBD7B3AAFEECA0B0EB7DCAFB6CA7D9CA5B71DE686D2B28D19D7951C96B1" || var_9 == "_encstr_9BF3212E5293C8F733C180685A4ABFA007FB8D08D55F36155CFA104B12A527191399BE" || _encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::vandalize_attack_max_cooldown( var_4 ) && scripts\mp\riotshield::isriotshield( var_4 ) )
        var_1.angles = ( var_1.angles[0] - 90, var_1.angles[1], var_1.angles[2] );

    heardparachuteoverheadtime();

    if ( var_8 )
    {
        var_11 = getnodecount( var_9, var_1.origin, var_1.angles, var_1._id_12223, var_4 );

        if ( isdefined( var_11 ) )
            var_11.customweaponname = createheadicon( var_4 );
    }
    else
        var_11 = easepower( var_9, var_1.origin, var_1.angles, var_1._id_12223 );

    if ( !isdefined( var_11 ) )
        return;

    if ( isdefined( var_1.set_force_aitype_armored ) )
    {
        var_12 = rotatevectorinverted( var_1.origin - var_1.set_force_aitype_armored.origin, var_1.set_force_aitype_armored.angles );
        var_13 = combineangles( invertangles( var_1.set_force_aitype_armored.angles ), var_1.angles );
        var_11 scriptableclearparententity( var_1.set_force_aitype_armored, var_12, var_13 );
        var_11.set_force_aitype_armored = var_1.set_force_aitype_armored;
    }

    _id_12B3A( var_11 );

    if ( isdefined( var_2 ) )
        _id_119F5( var_11, var_2, var_6, var_7 );
    else
        _id_119F5( var_11, 0 );

    if ( !isdefined( var_5 ) )
        var_5 = 1;

    if ( !istrue( level.br_pickups.delay_delete_rpg_missile[var_9] ) )
        var_5 = 1;

    if ( uavfastsweepid( var_0 ) )
        var_11.init_weapon_placements = 1;

    if ( !getdvarint( "_encstr_AF7B1C5736D3DE05CA11D97B68F67BE0D9A4D018915566355BE3DBCFFBE0" ) )
    {
        if ( istrue( var_3 ) )
        {
            if ( var_5 )
                var_11 setscriptablepartstate( var_9, "_encstr_80C6084639F60EC1CAC8" );
            else
                var_11 setscriptablepartstate( var_9, "_encstr_94F00E19E4F6380759C89C7B14BA3AF6" );
        }
    }

    var_14 = level.br_pickups.init_relic_ammo_drain[var_9];

    if ( isdefined( var_14 ) )
        var_11 [[ var_14 ]]();

    return var_11;
}

_id_12B33( var_0, var_1 )
{
    level.br_pickups.init_relic_ammo_drain[var_0] = var_1;
}

_encstr_BE322693B2B3B49B47AC4E1C9636AD5D0E9C2BADDEEC593266B739B907B08DCA36581B63C4588DAD( var_0 )
{
    level.br_pickups._encstr_ADBE196B7297A8A84F74C5DF8A32606747EAC1B14ACB5658E643F7 = scripts\engine\utility::array_add( level.br_pickups._encstr_ADBE196B7297A8A84F74C5DF8A32606747EAC1B14ACB5658E643F7, var_0 );
}

showuseresultsfeedback( var_0 )
{
    switch ( var_0 )
    {
        case 5:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.br_pickupdenyalreadyhaveweapon );
            return;
        case 3:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.br_pickupdenyammonoroom );
            return;
        case 4:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.br_pickupdenyequipnoroom );
            return;
        case 6:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.br_pickupdenyarmornotbetter );
            return;
        case 7:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.br_pickupdenyalreadyhaveks );
            return;
        case 8:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.br_pickupdenyalreadyhavetoken );
            return;
        case 14:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_fan_blades );
            return;
        case 9:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_light );
            return;
        case 10:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_exfil_ai_structs );
            return;
        case 11:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_me );
            return;
        case 13:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_name_fx );
            return;
        case 15:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_ents_to_clean_up );
            return;
        case 24:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_intro_lights );
            return;
        case 26:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_headicon );
            return;
        case 25:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_headicon_on_death );
            return;
        case 16:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_laser_entities );
            return;
        case 23:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_keypad_display_models );
            return;
        case 18:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_enemies_if_reaching_max_ai );
            return;
        case 27:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_elevator );
            return;
        case 19:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_ent );
            return;
        case 20:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_entarray );
            return;
        case 22:
            scripts\mp\hud_message::showerrormessage( level.br_pickups.delete_objective_on_death );
            return;
        case 2:
            break;
    }
}

_removecashstateforplayer( var_0, var_1 )
{
    var_0 notify( "_encstr_A941107A550FBA841EE087C750F65F229375" );
    var_0 endon( "_encstr_A941107A550FBA841EE087C750F65F229375" );
    wait( var_1 );
    var_0.br_cash_count = undefined;
    var_0.br_cash_time = undefined;
}

getcashsoundaliasforplayer( var_0, var_1 )
{
    var_2 = "_encstr_ADAE0F222B40F31258747BC0210F49DF68";
    var_3 = 5000.0;
    var_4 = var_3 / 1000.0;
    var_5 = gettime();

    if ( isplayer( var_0 ) )
    {
        if ( !isdefined( var_0.br_cash_count ) )
            var_0.br_cash_count = 0;

        if ( !isdefined( var_0.br_cash_time ) )
            var_0.br_cash_time = var_5;

        var_6 = var_5 - var_0.br_cash_time;
        var_0.br_cash_time = var_5;

        if ( var_6 < var_3 )
            var_0.br_cash_count = var_0.br_cash_count + 1;

        var_0 thread _removecashstateforplayer( var_0, var_4 );

        switch ( var_1 )
        {
            case "_encstr_97201F13330DC7F0F377170135F3D9ABF28990909BA46F4B4373908935CF40174A":
            case "_encstr_9B201FB1CD11E8D71511B045BB86D35B124F7EE10E40172B0882AFB82D37A68716":
            case "_encstr_B8B01D8BE5C90A975006FAC57BB8A4E29E2707FF8F63B15360A8B50D7059B9":
            default:
                switch ( var_0.br_cash_count )
                {
                    case 1:
                    case 0:
                        var_2 = "_encstr_9E5B12A07BEFA37B92442DB7514AB30B3037BAA2";
                        break;
                    case 2:
                        var_2 = "_encstr_8C5B128E2EA71B494970E7FBB9213953A1D08212";
                        break;
                    case 3:
                        var_2 = "_encstr_9C5B1236960FB3D1D1981F13218991CBD9B82AFA";
                        break;
                    case 4:
                        var_2 = "_encstr_815B12858BB17F4B338CF36BB91B88361AD7D9A1";
                        break;
                    case 5:
                    default:
                        var_2 = "_encstr_B85B12C4C9D7C15A6CB5BA1CBE6C58CDD07D0CA9";
                        break;
                }

                break;
            case "_encstr_B9611B8927D8B77B477DE0D8ABCDC8ACC9FA1B589B43AF932C2756D74C":
            case "_encstr_94201F7673491898FBC1F3E2857D119A13078A2737E8F027F68FA86BA89F8887BF":
                switch ( var_0.br_cash_count )
                {
                    case 1:
                    case 0:
                        var_2 = "_encstr_A9D416083BC9C108A75B8D0717DF718F6C71F888F211B9CB";
                        break;
                    case 2:
                        var_2 = "_encstr_8BD41696DAD7A3636E0A684821062B9BA34FA99D242F631D";
                        break;
                    case 3:
                        var_2 = "_encstr_AFD41662D0FF229F599A5D50B861872A39211AEA88278ABE";
                        break;
                    case 4:
                        var_2 = "_encstr_94D416314EAFC12DB16DD51CEB362CE686BE6BCA19EB181A";
                        break;
                    case 5:
                    default:
                        var_2 = "_encstr_ADD416BAABB94A502FE8BD1A4F1640B7C3AFF9E814BEC88A";
                        break;
                }

                break;
            case "_encstr_BDF81BC493B1DBDB8EFAC1365D7346B29C7DD8B09BD0FACAE05A36BEC8":
            case "_encstr_9FF81BEE421A0738A4B740D867C6115BA3A1D6E79AB29FA18847D0495E":
            case "_encstr_BE611B264E1BF6EDE8AFC1C6AEB98C959C7DD8C2B934EB9C2C93AC7D46":
                switch ( var_0.br_cash_count )
                {
                    case 1:
                    case 0:
                        var_2 = "_encstr_814C163276A68B1C8760632BD9DF56CFF848B4BA044E5232";
                        break;
                    case 2:
                        var_2 = "_encstr_B84C165E8B39B02A06677F63273E920B28B655A2C1E138D7";
                        break;
                    case 3:
                        var_2 = "_encstr_A84C16963A5141B0FB3F2083071349BFCAE91926D70989B3";
                        break;
                    case 4:
                        var_2 = "_encstr_954C16E8DB29E128877BAD2777BF11AF4C911010E271D94B";
                        break;
                    case 5:
                    default:
                        var_2 = "_encstr_A44C16C493EB834B8D5BD538D7D816CD1AEBB139D9BE609A";
                        break;
                }

                break;
            case "_encstr_A94F20899C1BDEEDE8FAE0B15773192BE4EB3616DC1AD71B599DCA732385E4E5EB26":
                switch ( var_0.br_cash_count )
                {
                    case 1:
                    case 0:
                        var_2 = "_encstr_A305179B2BAF9A110BCC9B83B693F87FD0F7DE83A21F3EB9B3";
                        break;
                    case 2:
                        var_2 = "_encstr_B60517989CEBC1A5C6B6BA83D7C60B9BA1D7B31BE4CEAF0664";
                        break;
                    case 3:
                        var_2 = "_encstr_8905174CE47DE0A5D8D65D1CAF1BC2CD43AF67B19C9D7DC0CC";
                        break;
                    case 4:
                        var_2 = "_encstr_B40517A97AB7685BC257EBE96F2A97A8289993E0E2F759AF8F";
                        break;
                    case 5:
                    default:
                        var_2 = "_encstr_80051762E5F91AAFBE784B23C686C79218D70EE47D9069127D";
                        break;
                }

                break;
        }
    }

    return var_2;
}

onusecompleted( var_0, var_1, var_2, var_3 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_4 = 0;

    if ( !isdefined( var_0.count ) )
        var_0.count = 0;

    if ( !istrue( var_1 ) )
    {
        var_5 = "_encstr_AA9A124C9CBEE0D236B5EAC1D7EC59DCB29C966C";
        var_6 = undefined;

        if ( isdefined( var_0.scriptablename ) )
        {
            if ( isplunder( var_0.scriptablename ) )
                var_5 = getcashsoundaliasforplayer( self, var_0.scriptablename );
            else if ( isdefined( level.br_pickups.br_pickupsfx[var_0.scriptablename] ) && level.br_pickups.br_pickupsfx[var_0.scriptablename].size > 0 )
                var_5 = level.br_pickups.br_pickupsfx[var_0.scriptablename];
            else if ( isweaponpickupitem( var_0 ) )
                var_5 = "_encstr_BA130FC427BE83968DB5AB38F5DD9585C1";
            else
                var_5 = "_encstr_95C00F8ADE0E23841F889BC34173FD2F60";

            if ( isplunder( var_0.scriptablename ) )
                var_6 = "_encstr_ADA40BD296466BBD4BE8D2DA10";
            else if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::isammo( var_0.scriptablename ) )
                var_6 = "_encstr_88DB0806A61FB2C5ADC8";
            else if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::isarmorplate( var_0.scriptablename ) )
                var_6 = "_encstr_9F58093E626F39FD45D2B8";
        }

        self playsoundtoplayer( var_5, self );
        var_7 = var_5 + "_encstr_9D1A04BECF8F";

        if ( soundexists( var_7 ) )
            self playsoundtoteam( var_7, self.team, self, self );

        if ( isdefined( var_6 ) )
            scripts\mp\damagefeedback::hudicontype( var_6 );

        if ( !istrue( var_2 ) )
            thread playerplaypickupanim( var_0 );
    }

    level notify( "_encstr_98A71D1C2DD8AD2B32BA0EEE2B2C38DE37AFD6A51BB1AFD8C2C6D8B7AE1DD7" + var_0.scriptablename + var_0.origin );

    if ( isplunder( var_0.scriptablename ) )
        self notify( "_encstr_ABFA1A1F925160EFE8A857F04B2CED4F6C9B7F552F317C9BF6F56B42" );
    else if ( isweaponpickupitem( var_0 ) )
        self notify( "_encstr_B7FA196B7081CF2F43F323539DA9CF12D350B202395FC70F7BE826" );
    else
        self notify( "_encstr_82D013FF8FDA2CD9587459501F34F05FE2535B7BCF" + var_0.scriptablename );

    if ( istrue( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E05( "_encstr_AF520FDBCDAAE6AC1ABDD6C1C62BE8568C", var_0 ) ) )
    {
        if ( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::tutorial_showtext( "_encstr_B7B80B68DA141BDF7F83525588" ) )
            var_4 = _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E05( "_encstr_B7B80B68DA141BDF7F83525588", var_0 );
    }
    else if ( isweaponpickupitem( var_0 ) )
    {
        scripts\mp\javelin::vehicle_damage_deregistervisualpercentcallback();
        generatespawnpoint();
        _encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::takeweaponpickup( var_0 );
        var_8 = respawnplayer( var_0 );
        var_9 = 0;

        if ( isdefined( var_8 ) )
            var_9 = 1 << var_8;

        scripts\cp\vehicles\vehicle_compass_cp::_id_1205F( "_encstr_B92007DDCA2C0EF6DC", var_9 );
        var_10 = isdefined( var_0.scriptablename ) && var_0.scriptablename == "_encstr_A9FF1CDDE3B9FFF863213398A2C8B7D3D78329C7B80193EADF4E089124CF";

        if ( var_10 )
            _id_11AAC();
    }
    else if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::isammo( var_0.scriptablename ) )
        var_4 = _encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::takeammopickup( var_0 );
    else if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::isequipment( var_0.scriptablename ) )
    {
        var_4 = takeequipmentpickup( var_0, var_3 );
        var_11 = 0;

        if ( level.br_pickups.br_itemtype[var_0.scriptablename] == "_encstr_9C1607D0071420D7AA" )
            var_11 = 1;
        else if ( level.br_pickups.br_itemtype[var_0.scriptablename] == "_encstr_94C2099887BA24607BE134" )
            var_11 = 2;
        else if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::isarmorplate( var_0.scriptablename ) )
            var_11 = 4;
        else if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::ishealitem( var_0.scriptablename ) )
            var_11 = 8;

        scripts\cp\vehicles\vehicle_compass_cp::_id_1205F( "_encstr_BE8F0A2BB8D596386BB273A3", var_11 );
    }
    else if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::isarmor( var_0.scriptablename ) )
        takearmorpickup( var_0 );
    else if ( var_0.scriptablename == "_encstr_9DAC0E61478C501BA297681EEE9A7139" && isdefined( level.givetagsfromcache ) )
        self [[ level.givetagsfromcache ]]();
    else if ( isplunder( var_0.scriptablename ) )
    {
        _encstr_A18624E0EFEA87BAA35A56BBFB0EBF36CA096B407105AFF796F09F4F7DAFB0DCE162357947B7::takeplunderpickup( var_0 );
        scripts\cp\vehicles\vehicle_compass_cp::_id_1205F( "_encstr_82A20840E2BF75A1914A", var_0.count );
    }
    else if ( istokenpickup( var_0.scriptablename ) )
        takerespawntokenpickup( var_0 );
    else if ( use_milcrate( var_0.scriptablename ) )
        _id_13A39( var_0 );
    else if ( isperkpointpickup( var_0.scriptablename ) )
        battle_tracks_togglethink( var_0 );
    else if ( iskillstreak( var_0.scriptablename ) )
    {
        if ( var_0.scriptablename == "_encstr_98FB184A2359CFADD83FFBE053B8F43FF1F8D3B3EE2697A5F88F" )
            bearsetup();
        else
        {
            takekillstreakpickup( var_0, var_3 );

            if ( isdefined( var_0.tracknonoobplayerlocation ) && isdefined( var_0.tracknonoobplayerlocation._id_11A40 ) && issubstr( var_0.tracknonoobplayerlocation._id_11A40, "_encstr_A63A061BB0C6A195" ) || istrue( var_3 ) )
                scripts\cp\vehicles\vehicle_compass_cp::_id_1205F( "_encstr_B6CE0B0BB00A031B7B88355740", 0 );
        }
    }
    else if ( issuperpickup( var_0.scriptablename ) )
    {
        takesuperpickup( var_0, var_3 );
        scripts\cp\vehicles\vehicle_compass_cp::_id_1205F( "_encstr_BE8F0A2BB8D596386BB273A3", 16 );
    }
    else if ( isgasmask( var_0.scriptablename ) )
        takegasmask( var_0, var_3 );
    else if ( usb( var_0.scriptablename ) )
        _encstr_A83527375FF36358943A0858E22728AFFAAFA1ABAB2A36DADA520ED34B55D05D71772933B3C6F4F0F3::_id_13A38( var_0.tracknonoobplayerlocation );
    else if ( updatecollectionui( var_0.scriptablename ) )
    {
        if ( getdvarint( "_encstr_94EA179B3693AFB2DC5813B19528F6571B43A495D82F1BB195", 0 ) == 1 )
        {
            if ( !_encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::should_use_velo_forward() )
            {
                battle_tracks_tryplayingbattletrackswhenstandingonvehicle();
                play_hit_marker_to_player( var_0, 1 );
            }
        }
        else
        {
            battle_tracks_tryplayingbattletrackswhenstandingonvehicle();
            play_hud_reminder_vo();
        }
    }
    else if ( var_0.scriptablename == "_encstr_A4AA14319CD8BDDBD1BE2CB5B6DBD7B34E95CD0B8C56" )
        takegenericgrenadepickup( var_0 );
    else if ( turn_on_red_lights_along_track( var_0.scriptablename ) )
        _id_13A2F( var_0 );
    else if ( uniquelootitemlookup( var_0.scriptablename ) )
        _id_13A33( var_0 );
    else if ( usablecarriables( var_0.scriptablename ) )
        takequestitem( var_0 );
    else if ( usereload( var_0.scriptablename ) )
        bearsetup();
    else if ( update_player_about_remaining_enemies( var_0.scriptablename ) )
    {
        if ( var_0.scriptablename == "_encstr_BE7B144C27B17BDB8EBEACE6C60B83CAAF9CB02396BD" )
        {
            if ( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::tutorial_showtext( "_encstr_8C9613DE9B285A366DEA075187CC4B634A58912DF6" ) && isdefined( var_0.tracknonoobplayerlocation ) )
                var_0.tracknonoobplayerlocation thread _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E05( "_encstr_8C9613DE9B285A366DEA075187CC4B634A58912DF6", self );
            else
                var_0 thread _encstr_B2032CDC3693B4E0E86EBCADC1BCCE0BDA59E8BCC1566E5E9839FA0BB13AF5B5F68C95EB9537C6161C2B719DE636::obj_heli_assault3_fob( self );
        }
        else if ( var_0.scriptablename == "_encstr_8A81172627B1B7ED3AAF8E0BB1E85A36B0C6FA46B2CEB436B2" )
            thread _encstr_A9AF2E63A2ADDA3BDB4B10603768701E90A7E3AA18BB5ED0DED347EF1633BD84A0EFE9266E452BFB5A68C94B2EB00732::_id_13A1E( self );
        else if ( var_0.scriptablename == "_encstr_950F1868B31498AF2BB1E9E5D502E7A3416F98E82BB59173C2E2" )
            var_0 thread _encstr_8F2330A28235202B13231FA3708F6F79B75A65F3BBC7336E1AFBB7B3E5A295B680C1A3F3A8DE0EDBA2C5BA75C53ACDC14B0A::_encstr_93730FC15AB16DBA0ECDB19C590BAD5927( self );
    }
    else
    {
        var_12 = 1;

        if ( isdefined( var_0.count ) )
            var_12 = var_0.count;

        trypickupitem( var_0.scriptablename, var_12 );
    }

    var_12 = 1;

    if ( isdefined( var_0.count ) )
        var_12 = var_0.count;

    if ( isdefined( var_0.tracknonoobplayerlocation ) && isdefined( var_0.tracknonoobplayerlocation._id_13F0A ) )
        _id_128B5( var_0.tracknonoobplayerlocation._id_13F0A, self );

    _encstr_890626F852FABB63A30BE831E0264973E59A7820FB57C7D0C312D83FC647500B0BA248E8766F3F91::branalytics_lootpickup( self, var_0.scriptablename, var_12 );
    return var_4;
}

playerplaypickupanim( var_0 )
{
    self notify( "_encstr_95AE1587A5AA4B19C2EBC09077D850B7D20B7F97BD82DB" );
    self endon( "_encstr_95AE1587A5AA4B19C2EBC09077D850B7D20B7F97BD82DB" );
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( isweaponpickupitem( var_0 ) || !_encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_12518() )
        return;

    if ( istrue( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E05( "_encstr_A3E21306B02AF331AFCF8B8B7757778313F970B185", var_0 ) ) )
        return;

    var_1 = getcompleteweaponname( "_encstr_B12119EFF04A0F2293E6B1724173ABC728C87F0319FB612AE7FD42" );

    if ( self hasweapon( var_1 ) )
    {
        if ( self isgestureplaying( "_encstr_9C0F122DDDC1EB9D2BCDEB38A5B1B6ABE07D3127" ) )
            self stopgestureviewmodel( "_encstr_9C0F122DDDC1EB9D2BCDEB38A5B1B6ABE07D3127", 0, 1 );

        self takeweapon( var_1 );
        waitframe();
    }

    _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_12616( "_encstr_B12119EFF04A0F2293E6B1724173ABC728C87F0319FB612AE7FD42", 1.17 );
}

test_ai_anim()
{
    var_0 = spawnstruct();
    var_0.ml_p3_to_safehouse_transition = 0;
    return var_0;
}

droponplayerdeath( var_0 )
{
    if ( istrue( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E05( "_encstr_B149128CE4DEE09EB9A0B10BCB2B9344AC58A343", var_0 ) ) )
        return;

    if ( istrue( level.usegulag ) && ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::isplayeringulag() || _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_1443C() ) )
        return;

    var_1 = test_ai_anim();
    _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E05( "_encstr_8C1B15CAF811C71B20FF8FD687281FD04BE0200248D904", var_1, var_0 );

    if ( scripts\mp\utility\killstreak::isjuggernaut() )
        _encstr_979028B9D89C4BC1473779DA1C97CE856B59A3F2C1599B5E269CF5A9AEECB3AF36DEB6B67BE6B8B3E636::droponplayerdeath( var_1 );

    var_2 = _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E05( "_encstr_A6F616A33F341B78D007B17FCB11F78D779F08F308F538C2" );
    minplunderextractions( var_1 );

    if ( !istrue( level._id_133EA ) && !istrue( var_2 ) )
        missiontime( var_1 );

    if ( !istrue( level._id_133CD ) )
        mintokensdropondeath( var_1 );

    if ( getdvarint( "_encstr_881B1C734EB3876E1511A2FBA829AA0389ADED0BC798D3FADBA0DA529079", 1 ) == 1 || !istrue( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::should_use_velo_forward() ) )
        missedinfilplayerhandler( var_1 );

    _encstr_A18624E0EFEA87BAA35A56BBFB0EBF36CA096B407105AFF796F09F4F7DAFB0DCE162357947B7::playerdropplunderondeath( var_1, var_0 );
    missed_shots( var_1 );

    if ( !istrue( level._id_133D7 ) && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_9C8D0B4BABD087CAC90B93AA60" )
        missing_window_blockers( var_1 );

    if ( !istrue( level._id_133E6 ) )
        mix_loot_pickups( var_1 );

    missions_clearinappropriaterewards( var_1 );
    missionparticipation( var_1 );
    minigun_turret_info( var_1 );
    modifycrushdamage( var_1 );
    mlgmodifyheadshotdamage( var_1 );
    modifydamagetoprop();
    _encstr_886F13235518ABDBB8D3CFD628500222E5A59FA7D3( var_1 );
    var_0 = self.lastkilledby;

    if ( isdefined( var_0 ) )
        minshotstostage2acc( var_1, var_0 );
}

minplunderextractions( var_0 )
{
    foreach ( var_2 in level.br_ammo_types )
    {
        if ( self.br_ammo[var_2] > 0 && isdefined( level.br_pickups.br_itemrow[var_2] ) )
        {
            var_3 = var_2;
            var_4 = getitemdroporiginandangles( var_0, self.origin, self.angles, self );
            spawnpickup( var_3, var_4, self.br_ammo[var_2], 1 );
        }
    }
}

missiontime( var_0 )
{
    foreach ( var_2 in self.equippedweapons )
    {
        if ( _id_132F9( var_2, self ) )
            ml_p1_func( var_2, var_0 );
    }
}

ml_p1_func( var_0, var_1 )
{
    var_2 = undefined;
    var_3 = 1;
    var_4 = 0;
    var_5 = 0;

    if ( isdefined( var_0 ) )
    {
        if ( issameweapon( var_0 ) )
        {
            var_2 = var_0;
            var_3 = self getweaponammoclip( var_2 );
            var_4 = self getweaponammoclip( var_2, "_encstr_B1AD05C65666E8" );

            if ( var_2.hasalternate )
            {
                var_6 = var_2 getaltweapon();

                if ( !_encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::debug_spawn_crate_on_train( var_2, var_6 ) )
                    var_5 = self getweaponammoclip( var_6 );
            }
        }
        else if ( isstring( var_0 ) )
        {
            var_2 = relicsquadlink( var_0 );

            if ( isdefined( var_2 ) )
                var_3 = var_2.clipsize;
            else if ( isdefined( level.br_ammo_clipsize[var_0] ) )
                var_3 = level.br_ammo_clipsize[var_0];
        }
    }

    if ( !isdefined( var_2 ) )
        return;

    var_7 = getitemdroporiginandangles( var_1, self.origin, self.angles, self );
    var_8 = _encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::weaponspawn( var_2, self, var_7, 0, 1 );

    if ( isdefined( var_8 ) )
        _id_119F5( var_8, var_3, var_4, var_5 );

    return var_8;
}

relicsquadlink( var_0 )
{
    var_1 = undefined;

    if ( !isdefined( level.br_lootiteminfo ) && !isdefined( level.br_lootiteminfo[var_0] ) )
        return;

    return level.br_lootiteminfo[var_0].playerstartjailsetcontrols;
}

_id_132F9( var_0, var_1 )
{
    var_2 = scripts\mp\utility\weapon::getweaponrootname( var_0.basename );

    if ( var_2 == "_encstr_9BED0AA307609154C76BDB23" || var_2 == "_encstr_93200ED2DD83FA6DDC2DCC596E1D0B89" || var_2 == "_encstr_BC0D0C2DBB0E7D9DAE9BC6AC6EB9" )
        return 0;

    if ( var_2 == "_encstr_9CFD10FB7769CB572D4E9A9391FD47098019" )
        return 0;

    if ( !issameweapon( var_0 ) )
        return 0;

    if ( var_0.inventorytype != "_encstr_987F080E394BDAC2E45E" )
        return 0;

    if ( var_1 _encstr_8B4D2A0BBE1A205733B7DF53536E14B8AD9753C2E275B8A06AABC75B4B83E6F07B2BBE5BCBDD40C5C6D7975F::operatorsfxalias( var_0 ) )
        return 0;

    return 1;
}

mintokensdropondeath( var_0, var_1, var_2, var_3 )
{
    var_4 = istrue( var_2 ) && isdefined( var_3 );

    if ( var_4 )
    {
        var_5 = scripts\engine\utility::array_find( level.br_pickups.br_equipname, var_3 );

        if ( isdefined( var_5 ) )
        {
            var_6 = undefined;

            if ( istrue( var_1 ) )
                var_6 = _encstr_BA9929DB6F38F4738DD3361ADB4877AE68DB5449A178BAC6BEEB49C2A3B19FA290C7F3D10760C4FAD4E382::removefromdismembermentlist();

            var_7 = getitemdroporiginandangles( var_0, self.origin, self.angles, self, var_6 );
            spawnpickup( var_5, var_7, 1, 1 );
        }

        return;
    }

    if ( isdefined( self.equipment["_encstr_987F080E394BDAC2E45E"] ) )
    {
        var_8 = scripts\mp\equipment::getequipmentslotammo( "_encstr_987F080E394BDAC2E45E" );

        if ( var_8 > 0 )
        {
            var_9 = scripts\engine\utility::array_find( level.br_pickups.br_equipname, self.equipment["_encstr_987F080E394BDAC2E45E"] );

            if ( isdefined( var_9 ) )
            {
                var_7 = getitemdroporiginandangles( var_0, self.origin, self.angles, self );
                spawnpickup( var_9, var_7, var_8, 1 );
            }
        }
    }

    if ( isdefined( self.equipment["_encstr_B98F0AC7D5B99F4DDBA8353B"] ) )
    {
        var_8 = scripts\mp\equipment::getequipmentslotammo( "_encstr_B98F0AC7D5B99F4DDBA8353B" );

        if ( var_8 > 0 )
        {
            var_9 = scripts\engine\utility::array_find( level.br_pickups.br_equipname, self.equipment["_encstr_B98F0AC7D5B99F4DDBA8353B"] );

            if ( isdefined( var_9 ) )
            {
                var_7 = getitemdroporiginandangles( var_0, self.origin, self.angles, self );
                var_10 = spawnpickup( var_9, var_7, var_8, 1 );

                if ( isdefined( var_10 ) )
                    var_10 modeloadoutupdateammo( self, var_9 );
            }
        }
    }
}

mix_loot_pickups( var_0, var_1, var_2, var_3 )
{
    var_4 = istrue( var_2 ) && isdefined( var_3 );

    if ( var_4 )
    {
        var_5 = scripts\engine\utility::array_find( level.br_pickups.br_equipname, var_3 );

        if ( isdefined( var_5 ) )
        {
            var_6 = undefined;

            if ( istrue( var_1 ) )
                var_6 = _encstr_BA9929DB6F38F4738DD3361ADB4877AE68DB5449A178BAC6BEEB49C2A3B19FA290C7F3D10760C4FAD4E382::removefromdismembermentlist();

            [var_8, var_9, var_10] = getitemdroporiginandangles( var_0, self.origin, self.angles, self, var_6 );
            spawnpickup( var_5, var_8, var_9, 1, 1, var_10 );
        }

        return;
    }

    if ( isdefined( self.equipment["_encstr_BEB4068F1B5BA3AB"] ) )
    {
        var_11 = int( max( scripts\mp\equipment::getequipmentslotammo( "_encstr_BEB4068F1B5BA3AB" ), _encstr_97571CC31EE30FBA499B665A8327B7E7F8F54C512FA93F150D207EF2F097::roundnumber() ) );

        if ( var_11 > 0 )
        {
            var_3 = scripts\mp\supers::getcurrentsuperref();

            if ( isdefined( var_3 ) && var_3 == "_encstr_A1440DFB33226FB2B73A235103077D" )
            {
                if ( !istrue( level.brjuggsettings ) )
                    return;
            }

            dropequipmentinslot( var_0, "_encstr_BEB4068F1B5BA3AB", var_1, var_11 );
        }
    }
}

missionparticipation( var_0 )
{
    if ( isdefined( self.override_supply_drop_vfx ) && isdefined( self.overridefieldupgrade2 ) )
    {
        var_1 = getitemdroporiginandangles( var_0, self.origin, self.angles, self );
        var_2 = spawnpickup( self.override_supply_drop_vfx, var_1, 1, 1 );

        if ( isdefined( var_2 ) )
            var_2 _encstr_9E3834FA960EAC8313FAF0B7B0102CAF05107029F87828C618D841C28AE3DFA34A2D786C4E2760BB6DC71AEBBE13E87707C0AED708F7::controlslinked( self.overridefieldupgrade2 );
    }
}

missedinfilplayerhandler( var_0 )
{
    var_1 = 0;
    var_2 = undefined;

    if ( isdefined( self.equipment["_encstr_A1B507EB87CA015BB8"] ) )
    {
        var_2 = level.br_pickups.br_equipnametoscriptable[self.equipment["_encstr_A1B507EB87CA015BB8"]];
        var_1 = scripts\mp\equipment::getequipmentslotammo( "_encstr_A1B507EB87CA015BB8" );
    }
    else if ( istrue( level.playerismatchedplayerready ) )
    {
        var_2 = level.br_pickups.br_equipnametoscriptable["_encstr_BC6E11CBC753B3884F4E5388F54AC0794ABBB3"];
        var_1 = level.playerismatchedplayerready;
    }

    if ( istrue( level._id_11BF1 ) && var_1 < level._id_11BF1 )
    {
        var_1 = level._id_11BF1;

        if ( !isdefined( var_2 ) )
            var_2 = level.br_pickups.br_equipnametoscriptable["_encstr_BC6E11CBC753B3884F4E5388F54AC0794ABBB3"];
    }

    if ( var_1 > 0 && isdefined( var_2 ) )
    {
        if ( var_1 > level.br_pickups.maxcounts[var_2] )
        {
            var_1 = var_1 - level.br_pickups.maxcounts[var_2];
            var_3 = getitemdroporiginandangles( var_0, self.origin, self.angles, self );
            spawnpickup( var_2, var_3, level.br_pickups.maxcounts[var_2], 1 );
        }

        var_3 = getitemdroporiginandangles( var_0, self.origin, self.angles, self );
        spawnpickup( var_2, var_3, var_1, 1 );
    }
}

missed_shots( var_0 )
{
    if ( scripts\cp_mp\gasmask::hasgasmask( self ) )
    {
        var_1 = getitemdroporiginandangles( var_0, self.origin, self.angles, self );
        var_2 = spawnpickup( self.plundersilentcountdownendtime, var_1, int( self.gasmaskhealth ), 1 );

        if ( isdefined( var_2 ) )
            var_2.plunderpads = self.plunderpads;

        hangar_doors_opening_quadrace();
    }
}

missing_window_blockers( var_0, var_1, var_2, var_3 )
{
    var_4 = _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E07( "_encstr_8FC111B7826DA2284BAFBC78BC2F4BE3E213E0", var_0, var_1, var_2, var_3 );

    if ( istrue( var_4 ) )
        return;

    var_5 = istrue( var_2 ) && isdefined( var_3 );

    if ( var_5 )
    {
        var_6 = undefined;

        if ( istrue( var_1 ) )
            var_6 = _encstr_BA9929DB6F38F4738DD3361ADB4877AE68DB5449A178BAC6BEEB49C2A3B19FA290C7F3D10760C4FAD4E382::removefromdismembermentlist();

        var_7 = getitemdroporiginandangles( var_0, self.origin, self.angles, self, var_6 );
        spawnpickup( level.br_pickups.br_killstreaktoscriptable[var_3], var_7 );
        return;
    }

    if ( should_do_vo_call() )
    {
        var_6 = undefined;

        if ( istrue( var_1 ) )
            var_6 = _encstr_BA9929DB6F38F4738DD3361ADB4877AE68DB5449A178BAC6BEEB49C2A3B19FA290C7F3D10760C4FAD4E382::removefromdismembermentlist();

        var_7 = getitemdroporiginandangles( var_0, self.origin, self.angles, self, var_6 );
        var_8 = spawnpickup( level.br_pickups.br_killstreaktoscriptable[self.streakdata.streaks[1].streakname], var_7 );

        if ( show_getcash_hint() && isdefined( self.spawnx1stashlootcache ) )
        {
            var_8.spawnprojectile = self.spawnx1stashlootcache;
            self.spawnx1stashlootcache = undefined;
        }

        scripts\mp\killstreaks\killstreaks::removekillstreak( 1 );
    }
}

minshotstostage2acc( var_0, var_1 )
{
    if ( var_1 scripts\mp\utility\perk::_hasperk( "_encstr_8A111BB938CAC64B2CC64797F513C9F558B5ADED9BD885B356E6CECA4E" ) )
    {
        var_2 = _encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::br_ammo_type_for_weapon( var_1.currentweapon );
        var_3 = getitemdroporiginandangles( var_0, self.origin, self.angles, self );
        var_3.scavengerammo = 1;
        spawnpickup( var_2, var_3, var_1.currentweapon.startammo, 1 );
    }

    if ( var_1 scripts\mp\utility\perk::_hasperk( "_encstr_B23E1CCBF34D8F5C0BC96C599720A237E72BA272DB1E379650337E4F8BC8" ) )
    {
        var_3 = getitemdroporiginandangles( var_0, self.origin, self.angles, self );
        spawnpickup( "_encstr_8A3F0C3DF30DBF6631E790512C55", var_3, 1, 1 );
    }

    if ( var_1 scripts\mp\utility\perk::_hasperk( "_encstr_B2801C9A4B6823AA87E9FBC7A73E23A78071D7E4C19BEB6264838B87CBDE" ) )
    {
        var_3 = getitemdroporiginandangles( var_0, self.origin, self.angles, self );
        spawnpickup( "_encstr_98AA0A279820C3EB08233F03", var_3, 1, 1 );
    }

    if ( var_1 scripts\mp\utility\perk::_hasperk( "_encstr_B1BF1ECD1CCA6C2D58D88EE5EB8927D7E036AB374695C9DC6C8567ACCD3B959C" ) )
        _encstr_A18624E0EFEA87BAA35A56BBFB0EBF36CA096B407105AFF796F09F4F7DAFB0DCE162357947B7::dropplunderbyrarity( 50, var_0 );
}

missions_clearinappropriaterewards( var_0 )
{
    if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::should_use_velo_forward() )
    {
        var_1 = getitemdroporiginandangles( var_0, self.origin, self.angles, self );
        var_2 = scripts\mp\equipment::getequipmentslotammo( "_encstr_A1B507EB87CA015BB8" );
        spawnpickup( "_encstr_95C1138ADE685F053129CB02B059FFE783C805037B", var_1, var_2 );
        _id_12C16();
    }
}

play_hit_marker_to_player( var_0, var_1 )
{
    var_2 = var_0.tracknonoobplayerlocation;

    if ( !isdefined( var_2 ) )
        var_2 = var_0;

    var_3 = 0;

    if ( isdefined( scripts\mp\equipment::getequipmentslotammo( "_encstr_A1B507EB87CA015BB8" ) ) )
        var_3 = scripts\mp\equipment::getequipmentslotammo( "_encstr_A1B507EB87CA015BB8" );
    else
    {
        br_forcegivecustompickupitem( self, "_encstr_93A813FA2690BFB58BC67986B50A93F14031D1AB0B", 1, 0, 0 );
        scripts\mp\equipment::setequipmentslotammo( "_encstr_A1B507EB87CA015BB8", 0 );
        var_3 = scripts\mp\equipment::getequipmentslotammo( "_encstr_A1B507EB87CA015BB8" );
    }

    if ( var_2.count > 0 && var_3 < scripts\mp\equipment::getequipmentmaxammo( "_encstr_BC6E11CBC753B3884F4E5388F54AC0794ABBB3" ) )
    {
        if ( var_2.count + var_3 <= scripts\mp\equipment::getequipmentmaxammo( "_encstr_BC6E11CBC753B3884F4E5388F54AC0794ABBB3" ) )
        {
            scripts\mp\equipment::incrementequipmentslotammo( "_encstr_A1B507EB87CA015BB8", var_2.count );

            if ( !var_1 )
                var_2.count = 0;
        }
        else
        {
            var_4 = var_2.count + var_3 - scripts\mp\equipment::getequipmentmaxammo( level.br_pickups.br_equipname["_encstr_93A813FA2690BFB58BC67986B50A93F14031D1AB0B"] );
            var_5 = scripts\mp\equipment::getequipmentmaxammo( level.br_pickups.br_equipname["_encstr_93A813FA2690BFB58BC67986B50A93F14031D1AB0B"] ) - var_3;
            scripts\mp\equipment::incrementequipmentslotammo( "_encstr_A1B507EB87CA015BB8", var_5 );

            if ( var_1 )
            {
                if ( getdvarint( "_encstr_BC8014EF386B776AD580221773B1431177E81F7B90A3", 1 ) == 1 )
                {
                    var_6 = test_ai_anim();
                    var_7 = getitemdroporiginandangles( var_6, self.origin, self.angles, self );
                    spawnpickup( "_encstr_93A813FA2690BFB58BC67986B50A93F14031D1AB0B", var_7, var_4, 1 );
                }
            }
            else
                var_2.count = var_2.count - var_5;
        }
    }
}

minigun_turret_info( var_0 )
{
    if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::should_damage_pavelow_boss() )
    {
        var_1 = getitemdroporiginandangles( var_0, self.origin, self.angles, self );
        spawnpickup( self.armorylights, var_1 );
        _id_12BFC();
    }
}

mix( var_0 )
{
    if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::shouldgetnewspawnpoint() )
    {
        var_1 = getitemdroporiginandangles( var_0, self.origin, self.angles, self );
        spawnpickup( "_encstr_A1AF13E2B6652278659FBFC079E2BFEB318359B3B5", var_1 );
        _id_12C1F();
    }
}

minsteps( var_0, var_1, var_2, var_3 )
{
    var_4 = istrue( var_3 ) && isdefined( var_0 );

    if ( var_4 )
    {
        var_5 = undefined;

        if ( istrue( var_2 ) )
            var_5 = _encstr_BA9929DB6F38F4738DD3361ADB4877AE68DB5449A178BAC6BEEB49C2A3B19FA290C7F3D10760C4FAD4E382::removefromdismembermentlist();

        var_6 = test_ai_anim();
        var_7 = getitemdroporiginandangles( var_6, self.origin, self.angles, self, var_5 );
        spawnpickup( var_0, var_7, var_1 );
    }
}

modifycrushdamage( var_0 )
{
    if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::shouldlink() )
    {
        if ( level.br_pickups.modifydamagetohunter )
        {
            var_1 = getitemdroporiginandangles( var_0, self.origin, self.angles, self );
            spawnpickup( "_encstr_98FB184A2359CFADD83FFBE053B8F43FF1F8D3B3EE2697A5F88F", var_1 );
        }

        _id_12C26();
    }
}

mlgmodifyheadshotdamage( var_0 )
{
    if ( isdefined( level.obit_activation ) && isdefined( level.obit_activation.radio ) && isdefined( level.obit_activation.radio.owner ) && level.obit_activation.radio.owner == self )
        thread _encstr_B2032CDC3693B4E0E86EBCADC1BCCE0BDA59E8BCC1566E5E9839FA0BB13AF5B5F68C95EB9537C6161C2B719DE636::mlgmodifyheadshotdamage( var_0 );
    else
        thread _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E05( "_encstr_B1BD11BD9B884EED1C8A0F992DB12558C8B47B", var_0 );
}

modifydamagetoprop()
{
    if ( isdefined( level._id_12CE8 ) && isdefined( level._id_12CE8._id_13A17 ) && isdefined( level._id_12CE8._id_13A17.owner ) && level._id_12CE8._id_13A17.owner == self )
        thread _encstr_A9AF2E63A2ADDA3BDB4B10603768701E90A7E3AA18BB5ED0DED347EF1633BD84A0EFE9266E452BFB5A68C94B2EB00732::modifydamagetoprop();
}

_encstr_886F13235518ABDBB8D3CFD628500222E5A59FA7D3( var_0 )
{
    if ( isdefined( level._id_11E18 ) && isdefined( level._id_11E18._id_12F3F ) && isdefined( level._id_11E18._id_12F3F.owner ) && level._id_11E18._id_12F3F.owner == self )
        thread _encstr_8F2330A28235202B13231FA3708F6F79B75A65F3BBC7336E1AFBB7B3E5A295B680C1A3F3A8DE0EDBA2C5BA75C53ACDC14B0A::_encstr_A6DE0DADEB2FE89AF9728801CBE852( var_0 );
}

ispickupstackable( var_0 )
{
    return istrue( level.br_pickups.stackable[var_0] );
}

isitemslotopen()
{
    for ( var_0 = 0; var_0 < 8; var_0++ )
    {
        if ( !isdefined( self.br_inventory_slots[var_0] ) )
            return 1;
    }

    return 0;
}

isitemfull( var_0, var_1 )
{
    return var_1 + var_0.count > var_0.maxcount;
}

canstackpickup( var_0, var_1 )
{
    foreach ( var_3 in self.br_inventory_slots )
    {
        if ( isdefined( var_3.scriptablename ) && var_3.scriptablename == var_0 )
        {
            if ( !isitemfull( var_3, var_1 ) )
                return 1;
        }
    }

    return 0;
}

canslotitem( var_0, var_1 )
{
    if ( ispickupstackable( var_0 ) )
    {
        if ( canstackpickup( var_0, var_1 ) )
            return 1;
    }

    return isitemslotopen();
}

getfirstopenslot()
{
    for ( var_0 = 0; var_0 < 8; var_0++ )
    {
        if ( !isdefined( self.br_inventory_slots[var_0] ) )
            return var_0;
    }

    return -1;
}

pickupitemintoinventory( var_0 )
{
    if ( ispickupstackable( var_0.scriptablename ) )
    {
        if ( canstackpickup( var_0.scriptablename, var_0.count ) )
        {
            foreach ( var_3, var_2 in self.br_inventory_slots )
            {
                if ( isdefined( var_2.scriptablename ) && var_2.scriptablename == var_0.scriptablename )
                {
                    if ( !isitemfull( var_2, var_0.count ) )
                    {
                        var_2.count = var_2.count + var_0.count;
                        var_2.count = int( min( var_2.count, var_0.maxcount ) );
                        return;
                    }
                }
            }
        }
    }

    var_4 = getfirstopenslot();

    if ( var_4 == -1 )
        return;

    self.br_inventory_slots[var_4] = var_0;
}

dropitemfrominventory( var_0 )
{
    if ( isdefined( self.br_inventory_slots[var_0] ) )
    {
        var_1 = self.br_inventory_slots[var_0];
        var_2 = remove_roof_nodes( self.origin + level.br_pickups.br_dropoffsets[0], self.angles );
        var_3 = spawnpickup( var_1.scriptablename, var_2, var_1.count );

        if ( isdefined( var_1.armorhealth ) )
            var_3.armorhealth = var_1.armorhealth;
        else if ( isdefined( var_1.helmethealth ) )
            var_3.helmethealth = var_1.helmethealth;
        else if ( isdefined( var_1.gasmaskhealth ) )
            var_3.gasmaskhealth = var_1.gasmaskhealth;

        _encstr_890626F852FABB63A30BE831E0264973E59A7820FB57C7D0C312D83FC647500B0BA248E8766F3F91::branalytics_lootdrop( self, var_1.scriptablename );
        _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::removeitemfrominventory( var_0 );
    }
}

useitemfrominventory( var_0 )
{
    if ( isdefined( self.br_inventory_slots[var_0] ) )
        tryuseitemfrominventory( self.br_inventory_slots[var_0], var_0 );
    else
    {

    }
}

_id_126E1( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self notify( "_encstr_A3641289ABF3C8C0032F9688D7F9C0AF8B7B0701" );

    if ( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::unset_relic_aggressive_melee( "_encstr_9BB6062FDE751D33" ) )
        return;

    if ( !isalive( self ) || scripts\mp\utility\player::isusingremote() || istrue( self.isdeploying ) || self.br_armorhealth >= self.br_maxarmorhealth )
        return;

    var_1 = self.equipment["_encstr_A1B507EB87CA015BB8"];
    var_2 = scripts\mp\equipment::getequipmentslotammo( "_encstr_A1B507EB87CA015BB8" );
    var_3 = self.br_maxarmorhealth;
    var_4 = 1;

    if ( isdefined( var_3 ) && var_0 )
        var_4 = var_3;

    if ( istrue( self.tracking_max_health ) )
    {
        if ( isdefined( self.cam ) && get_axis_vehicles() )
            self.cam = self.cam + var_4;
    }
    else
    {
        self.cam = var_4;

        if ( isdefined( var_1 ) && isdefined( var_2 ) && var_2 > 0 )
            thread scripts\mp\equipment\bandage::usequickslothealitem( var_1, var_2 );
    }
}

get_axis_vehicles()
{
    return !scripts\engine\utility::is_player_gamepad_enabled();
}

takegenericgrenadepickup( var_0 )
{
    var_1 = scripts\mp\equipment::getequipmentslotammo( "_encstr_987F080E394BDAC2E45E" );

    if ( isdefined( var_1 ) && var_1 < 2 )
        scripts\mp\equipment::incrementequipmentslotammo( "_encstr_987F080E394BDAC2E45E" );

    var_1 = scripts\mp\equipment::getequipmentslotammo( "_encstr_B98F0AC7D5B99F4DDBA8353B" );

    if ( isdefined( var_1 ) && var_1 < 2 )
        scripts\mp\equipment::incrementequipmentslotammo( "_encstr_B98F0AC7D5B99F4DDBA8353B" );
}

trypickupitemfroment( var_0 )
{
    if ( canslotitem( var_0.scriptablename, var_0.count ) )
        pickupitemintoinventory( var_0 );
    else
    {
        self iprintlnbold( "_encstr_A83D15E8F729BDEF7860AEB03B0A107894C2B5D4C703AB" );
        self playlocalsound( "_encstr_B9A80F8927EB0E9636B6AE38D746B2B9F2" );
    }
}

trypickupitem( var_0, var_1 )
{
    if ( !isdefined( var_0 ) || !isdefined( level.br_pickups.maxcounts[var_0] ) || !isdefined( level.br_pickups.stackable[var_0] ) )
        return;

    var_2 = spawnstruct();
    var_2.scriptablename = var_0;
    var_2.count = var_1;
    var_2.maxcount = level.br_pickups.maxcounts[var_0];
    var_2.stackable = level.br_pickups.stackable[var_0];
    var_2.itemtype = level.br_pickups.br_itemtype[var_0];

    if ( canslotitem( var_2.scriptablename, var_2.count ) )
        pickupitemintoinventory( var_2 );
    else
    {
        self iprintlnbold( "_encstr_A83D15E8F729BDEF7860AEB03B0A107894C2B5D4C703AB" );
        self playlocalsound( "_encstr_B9A80F8927EB0E9636B6AE38D746B2B9F2" );
    }
}

tryequipmentfrominventory( var_0, var_1 )
{
    var_2 = level.br_pickups.br_equipname[var_0.scriptablename];
    var_3 = level.equipment.table[var_2].defaultslot;

    if ( isdefined( self.equipment[var_3] ) && self.equipment[var_3] == var_2 )
    {
        if ( equipmentslothasroom( var_2, var_3 ) )
        {
            scripts\mp\equipment::incrementequipmentslotammo( var_3, level.br_pickups.counts[var_0.scriptablename] );
            self.br_inventory_slots[var_1] = undefined;
        }
    }
    else if ( !isdefined( self.equipment[var_3] ) || scripts\mp\equipment::getequipmentslotammo( var_3 ) == 0 )
    {
        scripts\mp\equipment::giveequipment( var_2, var_3 );
        scripts\mp\equipment::setequipmentslotammo( var_3, var_0.count );
        self.br_inventory_slots[var_1] = undefined;
    }
    else
    {
        var_4 = self.equipment[var_3];
        var_5 = scripts\mp\equipment::getequipmentslotammo( var_3 );
        scripts\mp\equipment::giveequipment( var_2, var_3 );
        scripts\mp\equipment::setequipmentslotammo( var_3, var_0.count );
        self.br_inventory_slots[var_1] = undefined;
        var_6 = level.br_pickups.br_equipnametoscriptable[var_4];
        trypickupitem( var_6, var_5 );
    }
}

droparmor( var_0, var_1 )
{
    var_2 = remove_roof_nodes( self.origin + level.br_pickups.br_dropoffsets[0], self.angles );
    var_3 = spawnpickup( var_0, var_2 );
    var_3.count = 1;
    var_3.helmethealth = 0;
    var_3.armorhealth = 0;
    var_3.gasmaskhealth = 0;

    if ( issubstr( var_0, "_encstr_A8CC07EAC159C72FD8" ) )
    {
        var_3.helmethealth = var_1;

        if ( var_0 == "_encstr_8FE11698AB954F784BFF1796D57F8367FCA26078722BF73B" )
            scripts\mp\utility\perk::removeperk( "_encstr_AAC01A87A9F5722930B83378F6887CABD85F1B57572BBB0C6880EE47" );
    }

    _encstr_890626F852FABB63A30BE831E0264973E59A7820FB57C7D0C312D83FC647500B0BA248E8766F3F91::branalytics_lootdrop( self, var_0 );
}

trydroparmorfornewarmor( var_0 )
{
    if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::ishelmet( var_0 ) )
    {
        if ( isdefined( self.br_helmetlevel ) )
        {
            var_1 = _encstr_BD96220B5106E75AE8B7770D890AA70F2109F353DB5537C530DD0F0965F06D1BF8E11B7A::helmetitemtypeforlevel( self.br_helmetlevel );

            if ( isdefined( var_1 ) )
                droparmor( var_1, self.br_helmethealth );
        }
    }
}

tryequiparmor( var_0, var_1 )
{
    if ( isdefined( var_1 ) )
        self.br_inventory_slots[var_1] = undefined;

    trydroparmorfornewarmor( var_0.scriptablename );

    if ( var_0.scriptablename == "_encstr_93E1164C9C36B7F6A3EB2C936BB7C97D34CAD8B556E8FA89" )
        _encstr_BD96220B5106E75AE8B7770D890AA70F2109F353DB5537C530DD0F0965F06D1BF8E11B7A::takehelmet( var_0, 1 );
    else if ( var_0.scriptablename == "_encstr_B4E116EA228417D883869A7279987A47BB1DF85A9D4C6642" )
        _encstr_BD96220B5106E75AE8B7770D890AA70F2109F353DB5537C530DD0F0965F06D1BF8E11B7A::takehelmet( var_0, 2 );
    else if ( var_0.scriptablename == "_encstr_8FE11698AB954F784BFF1796D57F8367FCA26078722BF73B" )
        _encstr_BD96220B5106E75AE8B7770D890AA70F2109F353DB5537C530DD0F0965F06D1BF8E11B7A::takehelmet( var_0, 3 );
}

tryuseitemfrominventory( var_0, var_1 )
{
    if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::isequipment( var_0.scriptablename ) )
        tryequipmentfrominventory( var_0, var_1 );
}

initpickupusability()
{
    scripts\common\interactive::interactive_addusedcallback( ::brpickupsusecallback, "_encstr_AD990B959BA16F1003BCC37BA2" );
}

brpickupsusecallback( var_0, var_1 )
{
    var_2 = var_1 cantakepickup( var_0 );
    var_1 showuseresultsfeedback( var_2 );

    if ( var_2 != 1 )
        return;

    var_1 onusecompleted( var_0 );
    lastunrulyscore( var_0 );

    if ( var_0 isscriptable() )
        var_0 freescriptable();
    else
        var_0 delete();
}

setup_train_array( var_0, var_1 )
{
    if ( isdefined( self.equipment[var_1] ) && scripts\mp\equipment::getequipmentslotammo( var_1 ) > 0 )
    {
        var_2 = test_ai_anim();
        dropequipmentinslot( var_2, var_1 );
    }

    scripts\mp\equipment::giveequipment( var_0, var_1 );
    scripts\mp\equipment::setequipmentammo( var_0, 1 );
}

_id_1398A( var_0 )
{
    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" && !level.allowsupers )
        var_0 scripts\mp\equipment::takeequipment( "_encstr_BEB4068F1B5BA3AB" );
}

hangar_doors_opening_quadrace()
{
    if ( istrue( self.gasmaskequipped ) )
    {
        self detach( "_encstr_975F1F0431B847223BDBB36B4FD3CAB488FB714FA9E83F9A87C7A78F370951EAF8", "_encstr_87DA078B11C012A35F" );
        self.gasmaskequipped = 0;
    }

    self.gasmaskswapinprogress = 0;
    handleweaponreloadammodrop();
}

handleweaponreloadammodrop()
{
    self.plunderpads = undefined;
    self.gasmaskhealth = undefined;
    self.plunderrepositorywidget = undefined;
    self.plundermusicthird = 0;
    self setclientomnvar( "_encstr_88B00CD55AFAD92C9BAF6BC2E6DA", 0 );
    self setclientomnvar( "_encstr_B15C14ED237E33D74BA08922E08B0C8BD69E4C714683", 0 );
    self setclientomnvar( "_encstr_8CE412ABD2D7CEB0B9AD859B6DD7322CB658B3AC", 0 );
    _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_encstr_806A17B959D10DC26EEC2CCDDA58CDADB21ED19C2C5ADCCCF6( 0 );
}

riotshieldtaken( var_0 )
{
    var_1 = "_encstr_93A813FA2690BFB58BC67986B50A93F14031D1AB0B";
    var_2 = level.br_pickups.br_equipname[var_1];
    var_3 = level.equipment.table[var_2].defaultslot;

    if ( isdefined( self.equipment[var_3] ) )
    {
        var_4 = scripts\mp\equipment::getequipmentslotammo( var_3 );

        if ( var_4 > 0 )
        {
            if ( istrue( var_0 ) )
                return var_4;
            else
                return 1;
        }
    }

    return 0;
}

riotshieldswitchaway( var_0, var_1 )
{
    var_2 = self.br_ammo[var_0];
    var_3 = level.br_ammo_clipsize[var_0];

    if ( !isdefined( var_2 ) || !isdefined( var_3 ) )
        return 0;

    if ( istrue( var_1 ) )
        return int( var_2 );

    return int( min( var_3, var_2 ) );
}

risk_currentflagstier( var_0 )
{
    var_1 = 5;

    if ( istrue( var_0 ) )
        return int( self.plundercount );

    return int( min( self.plundercount, var_1 ) );
}

riotshieldswitchawaytimer( var_0 )
{
    switch ( var_0 )
    {
        case 5:
            return "_encstr_A9DA10F62308079265E7D7FF9B80D917A243";
        case 7:
            return "_encstr_A3D9107A2E98AFD5E1F9EA22803F012E9B33";
        case 9:
            return "_encstr_A6D112C2ABD1573550476165CB60F1E627214AAA";
        case 6:
            return "_encstr_81DA10269C367BBD47EB166BB6EDD7622376";
        case 8:
            return "_encstr_A389138D838AF8282C8949C02DEF71AE523F171B33";
        default:
    }
}

risk_currentlocsinuse( var_0 )
{
    var_1 = self.lastdroppableweaponobj;
    var_2 = createheadicon( var_1 );
    return var_2;
}

risk_currentflagsactive( var_0, var_1 )
{
    var_2 = 1;
    var_3 = 0;
    var_4 = 0;
    var_5 = 0;
    var_6 = undefined;

    switch ( var_0 )
    {
        case 3:
            var_3 = int( self.gasmaskhealth );
            var_2 = scripts\cp_mp\gasmask::hasgasmask( self ) && !istrue( self.plundermusicthird );
            break;
        case 4:
            var_3 = riotshieldtaken( var_1 );
            var_2 = var_3 > 0;
            break;
        case 9:
        case 8:
        case 7:
        case 6:
        case 5:
            var_7 = riotshieldswitchawaytimer( var_0 );
            var_3 = riotshieldswitchaway( var_7, var_1 );
            var_2 = var_3 > 0;
            break;
        case 0:
            if ( istrue( self.iszombie ) )
            {
                var_2 = 0;
                break;
            }

            var_3 = risk_currentflagstier( var_1 );
            var_2 = var_3 > 0;
            break;
        case 1:
            var_3 = scripts\engine\utility::ter_op( istrue( self.hasrespawntoken ), 1, 0 );
            var_2 = var_3 > 0;
            break;
        case 2:
            var_3 = scripts\engine\utility::ter_op( istrue( self.shouldgetnewspawnpoint ), 1, 0 );
            var_2 = var_3 > 0;
            break;
        case 10:
            var_8 = self.lastdroppableweaponobj;

            if ( !isdefined( var_8 ) || nullweapon( var_8 ) || !self hasweapon( var_8 ) || var_8 == getcompleteweaponname( "_encstr_9B660D018F3841EE3A23DBEE3639F0" ) || self isskydiving() || istrue( self.usingascender ) )
                var_2 = 0;
            else
            {
                var_3 = self getweaponammoclip( var_8 );
                var_4 = self getweaponammoclip( var_8, "_encstr_B1AD05C65666E8" );

                if ( var_8.hasalternate )
                {
                    var_9 = var_8 getaltweapon();

                    if ( !_encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::debug_spawn_crate_on_train( var_8, var_9 ) )
                        var_5 = self getweaponammoclip( var_9 );
                }

                var_6 = var_8;
            }

            break;
        default:
            var_2 = 0;
            break;
    }

    return [ var_2, var_3, var_4, var_5, var_6 ];
}

_id_12993( var_0, var_1 )
{
    var_2 = "_encstr_93A813FA2690BFB58BC67986B50A93F14031D1AB0B";
    var_3 = level.br_pickups.br_equipname[var_2];
    var_4 = level.equipment.table[var_3].defaultslot;
    scripts\mp\equipment::decrementequipmentslotammo( var_4, var_1 );

    if ( istrue( self.tracking_max_health ) )
    {
        var_5 = scripts\mp\equipment::getcurrentequipment( var_4 );
        var_6 = scripts\mp\equipment::getequipmentammo( var_5 );

        if ( var_6 < 1 )
            self notify( "_encstr_AB9A1419CA07F866F317B39D377AAE59D3E6CDB1B76C" );
    }
}

_id_12992( var_0, var_1 )
{
    var_2 = riotshieldswitchawaytimer( var_0 );
    _encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::br_ammo_take_type( self, var_2, var_1 );
}

_id_12995( var_0, var_1 )
{
    _encstr_A18624E0EFEA87BAA35A56BBFB0EBF36CA096B407105AFF796F09F4F7DAFB0DCE162357947B7::_id_1261E( var_1 );
}

_id_12996( var_0, var_1 )
{
    removerespawntoken();
}

_id_12997( var_0, var_1 )
{
    _id_12C1F();
}

_id_12998( var_0, var_1 )
{
    var_2 = self.lastdroppableweaponobj;
    var_3 = getcompleteweaponname( "_encstr_9B660D018F3841EE3A23DBEE3639F0" );
    var_4 = var_3;
    var_5 = self getweaponslistprimaries();

    foreach ( var_7 in var_5 )
    {
        if ( var_7.inventorytype != "_encstr_987F080E394BDAC2E45E" )
            continue;

        if ( var_7 != var_3 && var_7 != var_2 && !scripts\mp\utility\weapon::update_health_bar_to_player( var_7 ) )
        {
            var_4 = var_7;
            break;
        }
    }

    if ( !scripts\mp\riotshield::isriotshield( var_2 ) )
    {
        var_9 = self getweaponammostock( var_2 );
        var_10 = _encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::br_ammo_type_for_weapon( var_2 );

        if ( isdefined( var_10 ) )
            self.br_ammo[var_10] = var_9;
    }

    if ( scripts\mp\utility\weapon::update_health_on_spawn( var_2 ) )
        self notify( "_encstr_A86D10091AE708B7C20B1F73175A73E89575" );

    scripts\cp_mp\utility\inventory_utility::_takeweapon( var_2 );
    _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_1264D();

    if ( !self hasweapon( var_3 ) )
        self giveweapon( var_3 );

    _encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::br_ammo_update_weapons( self );
    self switchtoweaponimmediate( var_4 );
    scripts\mp\javelin::vehicle_damage_deregistervisualpercentcallback();
    generatespawnpoint();
}

_id_12994( var_0, var_1 )
{
    switch ( var_0 )
    {
        case 3:
            if ( !istrue( self.plundermusicthird ) )
            {
                self.plundermusicthird = 1;
                thread _id_12C05();
            }

            break;
        case 4:
            _id_12993( var_0, var_1 );
            break;
        case 9:
        case 8:
        case 7:
        case 6:
        case 5:
            _id_12992( var_0, var_1 );
            break;
        case 0:
            _id_12995( var_0, var_1 );
            break;
        case 1:
            _id_12996( var_0, var_1 );
            break;
        case 2:
            _id_12997( var_0, var_1 );
            break;
        case 10:
            _id_12998( var_0, var_1 );
            break;
        default:
            return;
    }
}

_id_1298E( var_0, var_1 )
{
    switch ( var_0 )
    {
        case 3:
            return self.plundersilentcountdownendtime;
        case 4:
            return "_encstr_93A813FA2690BFB58BC67986B50A93F14031D1AB0B";
        case 9:
        case 8:
        case 7:
        case 6:
        case 5:
            return riotshieldswitchawaytimer( var_0 );
        case 0:
            for ( var_2 = level.br_plunder._id_12954.size - 1; var_2 >= 0; var_2-- )
            {
                if ( var_1 > level.br_plunder._id_12954[var_2] )
                    return level.br_plunder.names[var_2];
            }

            return level.br_plunder.names[0];
        case 2:
            return "_encstr_A1AF13E2B6652278659FBFC079E2BFEB318359B3B5";
        case 1:
            return "_encstr_9FDD1591CA42801709A16BB7A37B8FAF8A082B67E00F6E";
        case 10:
            return risk_currentlocsinuse( var_0 );
        default:
    }
}

_id_1298C()
{
    var_0 = 120;
    self notify( "_encstr_88B116C55D4BD86D22397BE0861B59C2B9D5C13416C686B2" );
    self endon( "_encstr_88B116C55D4BD86D22397BE0861B59C2B9D5C13416C686B2" );
    wait( var_0 );
    self._id_12989 = undefined;
}

_id_12986( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( self._id_12989 ) )
        self._id_12989 = [];

    var_5 = spawnstruct();
    var_5.vehicle_collision_updateinstanceend = var_0;
    var_5.slot = var_1;
    var_5.ent = var_2;
    var_5.moderemovefromteamlives = var_3;
    var_5.minigun_wait_between_shots = var_4;
    var_5._id_1260B = self.origin;
    var_5._id_126F7 = self.angles[1];
    self._id_12989[self._id_12989.size] = var_5;
    thread _id_1298C();
}

_id_1298B( var_0 )
{
    var_1 = 60.0;
    var_2 = squared( var_1 );
    var_3 = 45.0;
    var_4 = distancesquared( self.origin, var_0._id_1260B );

    if ( var_4 > var_2 )
        return 0;

    var_5 = abs( self.angles[1] - var_0._id_126F7 );

    if ( var_5 > var_3 )
        return 0;

    return 1;
}

_id_1298D( var_0 )
{
    if ( !isdefined( self._id_12989 ) )
        return;

    foreach ( var_2 in self._id_12989 )
    {
        if ( isdefined( var_2.ent ) && var_2.vehicle_collision_updateinstanceend == var_0 )
        {
            if ( !_id_1298B( var_2 ) )
                continue;

            return var_2;
        }
    }
}

_id_1298A()
{
    if ( !isdefined( self._id_12989 ) )
        return 0;

    var_0 = [];

    foreach ( var_2 in self._id_12989 )
    {
        if ( isdefined( var_2.ent ) )
        {
            if ( !_id_1298B( var_2 ) )
                continue;

            var_0[var_2.slot] = 1;
        }
    }

    var_4 = undefined;
    var_5 = 0;
    var_6 = 0;
    var_7 = [ 0, 13, 1 ];

    for (;;)
    {
        var_4 = var_6 * 14 + var_7[var_5];

        if ( !istrue( var_0[var_4] ) )
            break;

        var_5++;

        if ( var_5 >= var_7.size )
        {
            var_5 = 0;
            var_6++;
        }
    }

    return var_4;
}

_id_12991( var_0, var_1, var_2 )
{
    var_3 = undefined;

    switch ( var_0 )
    {
        case 3:
            var_3 = "_encstr_B1021E5E020F58A5E3D2F8306A3A43565BAA50CF57D78199CF9910B0D39405A9";
            break;
        case 4:
            var_3 = "_encstr_B14E188EF24F47D53362E2DBDF98CBA937DAA8F95666CBF5DFE3";
            break;
        case 9:
        case 8:
        case 7:
        case 6:
        case 5:
            var_3 = "_encstr_A99817A6C0A93115FBF79A1DD7D347AEF3F5C8EA8EAE18C1C8";
            break;
        case 0:
            if ( var_2 == "_encstr_9B201FB1CD11E8D71511B045BB86D35B124F7EE10E40172B0882AFB82D37A68716" )
                var_3 = "_encstr_AFD31D62D0FF6483FB9D4654A043E72121483ABB51799DA79075556A508B7F";
            else if ( var_2 == "_encstr_97201F13330DC7F0F377170135F3D9ABF28990909BA46F4B4373908935CF40174A" )
                var_3 = "_encstr_AFD31D62D0FF6483FB9D4654A043E72121483ABB51799DA79075556A508B7F";
            else if ( var_2 == "_encstr_94201F7673491898FBC1F3E2857D119A13078A2737E8F027F68FA86BA89F8887BF" )
                var_3 = "_encstr_AFD31D62D0FF6483FB9D4654A043E72121483ABB51799DA79075556A508B7F";
            else if ( var_2 == "_encstr_B9611B8927D8B77B477DE0D8ABCDC8ACC9FA1B589B43AF932C2756D74C" )
                var_3 = "_encstr_8AFA1EE6463F12E643B82373D0FBB93911DE2D1AB8C9FA25A858076339709D52";
            else if ( var_2 == "_encstr_BE611B264E1BF6EDE8AFC1C6AEB98C959C7DD8C2B934EB9C2C93AC7D46" )
                var_3 = "_encstr_8AFA1EE6463F12E643B82373D0FBB93911DE2D1AB8C9FA25A858076339709D52";
            else if ( var_2 == "_encstr_9FF81BEE421A0738A4B740D867C6115BA3A1D6E79AB29FA18847D0495E" )
                var_3 = "_encstr_9CFA1E5DEA41D8B853D2B0FB9AABEBB12742FFF15FF2B87D0BDA2923A18B2638";
            else if ( var_2 == "_encstr_BDF81BC493B1DBDB8EFAC1365D7346B29C7DD8B09BD0FACAE05A36BEC8" )
                var_3 = "_encstr_9CFA1E5DEA41D8B853D2B0FB9AABEBB12742FFF15FF2B87D0BDA2923A18B2638";
            else if ( var_2 == "_encstr_A94F20899C1BDEEDE8FAE0B15773192BE4EB3616DC1AD71B599DCA732385E4E5EB26" )
                var_3 = "_encstr_A305249B2BAFDC161E4FADC3B08238CF51ADC7F3E9DA58330D123F46E71A30B593FE3133DBDF";
            else
                var_3 = "_encstr_AFD31D62D0FF6483FB9D4654A043E72121483ABB51799DA79075556A508B7F";

            break;
        case 1:
            break;
        case 2:
            var_3 = "_encstr_B1021E5E020F58A5E3D2F8306A3A43565BAA50CF57D78199CF9910B0D39405A9";
            break;
        case 10:
            var_3 = "_encstr_AB3217BE9E89A276C5D3266BE056D0D7594217B78067A7335B";
            break;
        default:
    }

    if ( isdefined( var_3 ) )
        playsoundatpos( var_1, var_3 );
}

_id_12987( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = _id_1298D( var_0 );

    if ( isdefined( var_5 ) )
    {
        var_6 = var_5.ent;
        var_7 = var_5.moderemovefromteamlives;
        var_8 = var_5.minigun_wait_between_shots;
        var_9 = _id_119ED( var_6 );
        var_10 = _id_119EF( var_6 );
        var_11 = _id_119EE( var_6 );

        if ( !ispickupstackable( var_5.ent.type ) && !issubstr( var_5.ent.type, "_encstr_B9DF064676D12883" ) )
            return 0;

        var_12 = undefined;

        if ( isdefined( var_6.set_force_aitype_armored ) )
            var_12 = var_6.set_force_aitype_armored;

        var_13 = var_9 + var_1;
        var_14 = var_10 + var_2;
        var_15 = var_11 + var_3;
        var_16 = _id_1298E( var_0, var_13 );
        var_17 = getscriptablereservedremaining( var_7 + ( 0, 0, 12 ), var_7 );
        var_18 = remove_roof_nodes( var_7, var_8, var_17, var_12 );
        var_19 = spawnpickup( var_16, var_18, var_13, 1, var_4, 0, var_14, var_15 );
        _encstr_890626F852FABB63A30BE831E0264973E59A7820FB57C7D0C312D83FC647500B0BA248E8766F3F91::branalytics_lootdrop( self, var_16, undefined, var_1 );

        if ( isdefined( var_4 ) )
            level._id_120AD _calloutmarkerping_handleluinotify_acknowledgedcancel::from( var_19, self, var_4 );

        _id_12991( var_0, var_7, var_16 );
        var_5.ent = var_19;
        thread _id_1298C();
        lastunrulyscore( var_6 );

        if ( isent( var_6 ) )
            var_6 delete();
        else
            var_6 freescriptable();

        return 1;
    }

    return 0;
}

_id_12990( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = _id_1298E( var_0, var_1 );

    if ( !isdefined( var_5 ) )
        return;

    var_6 = _id_1298A();
    var_7 = test_ai_anim();
    var_7.ml_p3_to_safehouse_transition = var_6;
    var_8 = getitemdroporiginandangles( var_7, self.origin, self.angles, self );
    var_9 = isgasmask( var_5 );
    var_10 = _encstr_8B4D2A0BBE1A205733B7DF53536E14B8AD9753C2E275B8A06AABC75B4B83E6F07B2BBE5BCBDD40C5C6D7975F::operatorsfxalias( var_4 );
    var_11 = get_base_focus_fire_multipler( var_4 );

    if ( !var_10 && var_11 )
    {
        if ( var_9 && istrue( self.gasmaskswapinprogress ) )
        {
            scripts\engine\utility::waittill_notify_or_timeout( "_encstr_BD0A1707F14087027F2F6FC7571C8AE07919BD0D4B50454B45", 2.0 );
            waitframe();
        }

        var_12 = spawnpickup( var_5, var_8, var_1, 1, var_4, 0, var_2, var_3 );

        if ( var_9 && isdefined( var_12 ) )
            var_12.plunderpads = self.plunderpads;

        _id_12986( var_0, var_6, var_12, var_8.origin, var_8.angles );
        _encstr_890626F852FABB63A30BE831E0264973E59A7820FB57C7D0C312D83FC647500B0BA248E8766F3F91::branalytics_lootdrop( self, var_5, undefined, var_1 );

        if ( isdefined( var_4 ) )
            level._id_120AD _calloutmarkerping_handleluinotify_acknowledgedcancel::from( var_12, self, var_4 );
    }

    _id_12991( var_0, var_8.origin, var_5 );

    if ( var_9 )
        hangar_doors_opening_quadrace();
}

get_base_focus_fire_multipler( var_0 )
{
    if ( scripts\mp\utility\weapon::unset_jugg_ignoreall_after_notify( var_0 ) )
        return 0;

    return 1;
}

_id_1298F( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_A3750609A5E61883" );
    setuproundstarthud( var_0 );
    [var_2, var_3, var_4, var_5, var_6] = risk_currentflagsactive( var_0 );

    if ( !var_2 )
        return;

    _id_12994( var_0, var_3 );
    scripts\mp\class::disableclassswapallowed();
    var_7 = _id_12987( var_0, var_3, var_4, var_5, var_6 );

    if ( var_7 )
        return;

    _id_12990( var_0, var_3, var_4, var_5, var_6 );
}

_id_12988( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_A3750609A5E61883" );
    setuproundstarthud( var_0 );
    var_1 = 1;
    [var_3, var_4, var_5, var_6, var_7] = risk_currentflagsactive( var_0, 1 );

    if ( !var_3 )
        return;

    _id_12994( var_0, var_4 );
    scripts\mp\class::disableclassswapallowed();
    var_8 = _id_12987( var_0, var_4, var_5, var_6, var_7 );

    if ( !var_8 )
        _id_12990( var_0, var_4, var_5, var_6, var_7 );

    if ( isdefined( level._id_1207B ) )
        [[ level._id_1207B ]]( self );
}

gethighestscore( var_0 )
{
    switch ( var_0 )
    {
        case 9:
        case 8:
        case 7:
        case 6:
        case 5:
            return 1;
        default:
            return 0;
    }
}

setuproundstarthud( var_0 )
{
    if ( gethighestscore( var_0 ) )
    {
        var_1 = undefined;

        while ( self isreloading() )
        {
            if ( !istrue( var_1 ) )
            {
                var_1 = 1;
                self disableautoreload();
            }

            self cancelreload();
            waitframe();
        }

        if ( istrue( var_1 ) )
            self enableautoreload();

        waitframe();
    }
}

dangercircletick( var_0, var_1 )
{
    if ( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::unset_relic_aggressive_melee( "_encstr_BAAD05805F8F53" ) )
        return;

    var_2 = var_1 * var_1;
    var_3 = level.br_circle.circleindex;

    if ( var_3 > level.br_circle.damagetick.size - 1 )
        var_3 = level.br_circle.damagetick.size - 1;

    var_4 = level.br_circle.damagetick[var_3];

    if ( isdefined( level.circledamagemultiplier ) )
        var_4 = var_4 * level.circledamagemultiplier;

    level.br_pickups.modetype = scripts\engine\utility::array_removeundefined( level.br_pickups.modetype );

    for ( var_5 = level.br_pickups.modetype.size - 1; var_5 >= 0; var_5-- )
    {
        var_6 = level.br_pickups.modetype[var_5];

        if ( distance2dsquared( var_6.origin, var_0 ) > var_2 )
        {
            var_7 = var_6.count;
            var_8 = int( var_7 - var_4 );

            if ( var_8 <= 0 )
            {
                var_6 setscriptablepartstate( var_6.type, "_encstr_A3750609A5E61883" );
                var_6 lastgunkilltime( 1.0 );
                level thread lastunruly( var_5 );
            }
            else
            {
                if ( var_6 scripts\cp_mp\gasmask::lights_setup_plane( var_7, var_8 ) )
                    var_6 setscriptablepartstate( var_6.type, "_encstr_B8BE07320B5B16ECAC" );

                _id_119F5( var_6, var_8 );
            }
        }
    }
}

plundermusicfirst()
{
    level.br_pickups.modetype[level.br_pickups.modetype.size] = self;
}

lastunruly( var_0 )
{
    waittillframeend;

    if ( isdefined( level.br_pickups.modetype ) )
        level.br_pickups.modetype[var_0] = undefined;
}

toppercentagetoadjusteconomy()
{
    var_0 = level.br_pickups;
    var_0.scriptables = [];
    var_0._id_12F7C = 0;
    var_0._id_12F7A = 0;
    var_0._id_12F7B = removestuckenemyondeathordisconnect();
    var_0._id_12F79 = getdvarint( "_encstr_BDDC29A211E8275256D7A3FF97F26B40B9799AACEB70A18AA14BA75FE1AD128660A31E36C33060D10B6DE7", 10 );
}

removestuckenemyondeathordisconnect()
{
    var_0 = _func_0434();
    var_1 = getdvarint( "_encstr_BDA61553D95A39BB8337A110B8C4FF10BBABC3EBFB20C8", 0 );

    if ( var_1 > 0 && var_1 < var_0 )
        var_2 = var_1;
    else
    {
        var_3 = getdvarint( "_encstr_8F750A487CB303696FA1EF97", 150 );
        var_4 = getdvarint( "_encstr_930F192397C081D3668EAA8290BDEF82C87BB1BD0D0155F701C3F2", 5 );
        var_2 = var_3 * var_4;
    }

    if ( var_2 > var_0 )
        var_2 = int( var_0 / 2 );

    return var_2;
}

_id_12B3A( var_0 )
{
    var_1 = level.br_pickups._id_12F7A;
    var_0.embassy_main = var_1;
    level.br_pickups.scriptables[var_1] = var_0;
    level.br_pickups._id_12F7A++;
}

lastunrulyscore( var_0 )
{
    level.br_pickups.scriptables[var_0.embassy_main] = undefined;
    var_0.embassy_main = undefined;
}

heardparachuteoverheadtime()
{
    var_0 = level.br_pickups;

    if ( var_0.scriptables.size < var_0._id_12F7B && enabledismembermenttag() > 0 )
        return;

    var_1 = 0;

    for ( var_2 = var_0._id_12F7C; var_2 < var_0._id_12F7A; var_2++ )
    {
        if ( var_1 == var_0._id_12F79 )
            break;

        var_3 = var_0.scriptables[var_2];

        if ( isdefined( var_3 ) )
        {
            if ( istrue( var_3.init_weapon_placements ) )
                continue;

            foreach ( var_5 in level.br_pickups._encstr_ADBE196B7297A8A84F74C5DF8A32606747EAC1B14ACB5658E643F7 )
                var_3 [[ var_5 ]]();

            var_0.scriptables[var_2] = undefined;

            if ( isent( var_3 ) )
                var_3 delete();
            else
                var_3 freescriptable();

            var_1++;
        }
        else
            var_0.scriptables[var_2] = undefined;

        var_0._id_12F7C++;
    }
}

lastgoodjobplayer()
{
    lastunrulyscore( self );

    if ( isent( self ) )
        self delete();
    else
        self freescriptable();
}

lastgunkilltime( var_0 )
{
    thread lastheatupdate( var_0 );
}

lastheatupdate( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    wait( var_0 );

    if ( isdefined( self ) )
        lastgoodjobplayer();
}

_id_12B3F( var_0, var_1 )
{
    while ( !isdefined( level.br_pickups ) )
        waitframe();

    level.br_pickups._id_13F09["_encstr_B11F109F386021039379BDB54D13CBFD0849" + var_0] = var_1;
}

_id_128B5( var_0, var_1 )
{
    if ( isdefined( [[ level.br_pickups._id_13F09[var_0] ]]( var_1 ) ) )
        return;
    else
    {

    }
}

_id_11AAC()
{
    thread _id_14484();
    thread _id_144EF();
    thread _id_144E7();
}

calculateaveragevelocities()
{
    self.playerstreakspeedscale = scripts\mp\juggernaut::jugg_getmovespeedscalar();
    scripts\mp\weapons::updatemovespeedscale();
    scripts\mp\playeractions::allowactionset( "_encstr_B72C09345EB2CBB48D6FD0", 0 );

    if ( !istrue( level.loadout_updateammo ) )
    {
        scripts\common\utility::allow_mount_top( 0, "_encstr_B72C09345EB2CBB48D6FD0" );
        scripts\common\utility::allow_mount_side( 0, "_encstr_B72C09345EB2CBB48D6FD0" );
    }
}

_id_12C12()
{
    self.playerstreakspeedscale = undefined;
    scripts\mp\weapons::updatemovespeedscale();
    scripts\mp\playeractions::allowactionset( "_encstr_B72C09345EB2CBB48D6FD0", 1 );

    if ( !istrue( level.loadout_updateammo ) )
    {
        scripts\common\utility::allow_mount_top( 1, "_encstr_B72C09345EB2CBB48D6FD0" );
        scripts\common\utility::allow_mount_side( 1, "_encstr_B72C09345EB2CBB48D6FD0" );
    }
}

_id_14484()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A86D10091AE708B7C20B1F73175A73E89575" );
    self endon( "_encstr_9B0211FAEB8C10B050BDA8757CD99F738972FB" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        self waittill( "_encstr_88EA14CDDD4B8EB1D0B219D7D1BDD7B596CD969DABB9" );
        calculateaveragevelocities();
    }
}

_id_144EF()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_9B0211FAEB8C10B050BDA8757CD99F738972FB" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        var_0 = scripts\engine\utility::_id_143B5( "_encstr_BAE016CDBB2DD1D80D56237D66E47BB6AFDA4BDCD29D5773", "_encstr_A86D10091AE708B7C20B1F73175A73E89575", "_encstr_A3750609A5E61883" );

        if ( isdefined( var_0 ) )
        {
            _id_12C12();

            if ( var_0 == "_encstr_A86D10091AE708B7C20B1F73175A73E89575" || var_0 == "_encstr_A3750609A5E61883" )
                break;
        }
    }
}

_id_144E7()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A86D10091AE708B7C20B1F73175A73E89575" );
    self endon( "_encstr_9B0211FAEB8C10B050BDA8757CD99F738972FB" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = 0;

    for (;;)
    {
        if ( !scripts\mp\utility\weapon::update_health_on_spawn( self getcurrentweapon() ) )
        {
            if ( istrue( var_0 ) )
            {
                var_0 = 0;
                self notify( "_encstr_BAE016CDBB2DD1D80D56237D66E47BB6AFDA4BDCD29D5773" );
            }
        }
        else if ( !istrue( var_0 ) )
        {
            var_0 = 1;
            self notify( "_encstr_88EA14CDDD4B8EB1D0B219D7D1BDD7B596CD969DABB9" );
        }

        waitframe();
    }
}

make_chair_ai_spawner( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    if ( !isdefined( self.streakdata ) )
        return 0;

    if ( !isdefined( self.streakdata.streaks ) || !isdefined( self.streakdata.streaks[1] ) )
        return 0;

    var_1 = self.streakdata.streaks[1];

    if ( !isdefined( var_0.streakname ) || !isdefined( var_1.streakname ) || var_0.streakname != var_1.streakname )
        return 0;

    if ( !isdefined( var_0.id ) || !isdefined( var_1.uniqueid ) || var_0.id != var_1.uniqueid )
        return 0;

    return 1;
}

addspawnlocation()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self notify( "_encstr_9BAA117EB16BB913C510D8C07A5ECD912F7CEE" );
    self endon( "_encstr_9BAA117EB16BB913C510D8C07A5ECD912F7CEE" );
    self notify( "_encstr_B7C41077F801B8C205ED31B6C5E7F977E933" );
    wait 0.5;
    self notify( "_encstr_B7C41077F801B8C205ED31B6C5E7F977E933" );
}

generatespawnpoint()
{
    thread addspawnlocation();
}
