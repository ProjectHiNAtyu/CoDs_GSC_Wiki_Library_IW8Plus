// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    if ( getdvar( "_encstr_9E700851BEE33DF1B547" ) == "_encstr_8A510E519897A1332E4A3898E243F5B9" )
        return;

    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    var_0 = [];
    scripts\mp\gameobjects::main( var_0 );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 65 );
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 10 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
        level.matchrules_randomize = 0;
    }

    setplayerloadout();
    setteammode( "_encstr_B91804FE5590" );
    level.teambased = 0;
    level.overridecrateusetime = 500;
    level.onplayerscore = ::onplayerscore;
    level.onprecachegametype = ::onprecachegametype;
    level.onstartgametype = ::onstartgametype;
    level.getspawnpoint = ::getspawnpoint;
    level.modeonspawnplayer = ::onspawnplayer;
    level.onnormaldeath = ::onnormaldeath;
    level.cratekill = ::cratekill;
    level.pickupweaponhandler = ::pickupweaponhandler;
    level.iconvisall = ::iconvisall;
    level.objvisall = ::objvisall;
    level.supportintel = 0;
    level.supportnuke = 0;
    level.vehicleoverride = "_encstr_8A7E16C696D13A8DB2312D9332BE9B56BA47931636EBB607";
    level.usedlocations = [];
    level.emptylocations = 1;
    level.assists_disabled = 1;
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_812707584FA5EBEF75";

    if ( getdvarint( "_encstr_B8020A9E9AA69A6292517AA0" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_891904A1D8BE" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];

    game["_encstr_B8DA073D799798C7C7"]["_encstr_9E240C10CE33016D6AEA39B0F244"] = "_encstr_88690A0665FB755ED80FD038";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B3420C3D576AC3C8736F09906BB2"] = "_encstr_88690A0665FB755ED80FD038";
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_88A7197EAB0326370D9BD0119267CBFEAF428F7505F72847F32278", getmatchrulesdata( "_encstr_A2D00CDCDEA399648CA011858E2C", "_encstr_9F4D0C605B2669298FFD2025C663" ) );
    setdynamicdvar( "_encstr_BC5C1C26C36B4E4F75F38839AA4F2306777AA71D5DD7F3ADDE4AC86002E3", getmatchrulesdata( "_encstr_A2D00CDCDEA399648CA011858E2C", "_encstr_9D0C0F12B0E3038FFDB5664141ED374D21" ) );
    setdynamicdvar( "_encstr_946C1847C302612E2FCB499612F3EFA99E4AEBF16DEBA8792F83", getmatchrulesdata( "_encstr_A2D00CDCDEA399648CA011858E2C", "_encstr_A9450F6E92676B23FFD38080494CFB81F3" ) );
    setdynamicdvar( "_encstr_A3CD1803DE2317BABFF832B970F5765F5BB08D86E54817C55BD0", 1 );
    scripts\mp\utility\game::registerroundlimitdvar( "_encstr_B620095BED4C089022D393", 1 );
    setdynamicdvar( "_encstr_AA4116FE2B83A6B78D1B509112E74B7E7FD988F9894728F1", 1 );
    scripts\mp\utility\game::registerwinlimitdvar( "_encstr_B620095BED4C089022D393", 1 );
    setdynamicdvar( "_encstr_B8761670D6225F4B3F2D6687BBA5067FD85639FCA01BCB4F", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_B620095BED4C089022D393", 0 );
    setdynamicdvar( "_encstr_817915CD1BC97DE6F61D667D6699C27D0EC9BDB6B791AC", 0 );
}

onprecachegametype()
{
    level._effect["_encstr_A64D126340C73301735966B8A3D32D991D0678C8"] = loadfx( "_encstr_95F42BB399879796EE9B5EAFE456B8AEB26E1DE65E6B0E5E9D331E7D235698BA3BAFBBC24EB92DDC3B8B3B66E1" );
    level._effect["_encstr_8C14181F037C2AA9A0566EB4099BE471458DE78B8791E276C09B"] = loadfx( "_encstr_95F42BB399879796EE9B5EAFE456B8AEB26E1DE65E6B0E5E9D331E7D235698BA3BAFBBC24EB92DDC3B8B3B66E1" );
}

onstartgametype()
{
    setclientnamemode( "_encstr_95900C2EDBD01F99D6B1DFEB878D" );
    var_0 = &"_encstr_AA3F0EE00A63E5D743C8D14141B5013C";
    var_1 = &"_encstr_8AE914F56D7165283D8353175F78A09531D77E4DC751";
    var_2 = &"_encstr_9EBF1357C3686DC98C8C2F45222F29B1D113D3CD33";

    foreach ( var_4 in level.teamnamelist )
    {
        scripts\mp\utility\game::setobjectivetext( var_4, var_0 );

        if ( level.splitscreen )
            scripts\mp\utility\game::setobjectivescoretext( var_4, var_0 );
        else
            scripts\mp\utility\game::setobjectivescoretext( var_4, var_1 );

        scripts\mp\utility\game::setobjectivehinttext( var_4, var_2 );
    }

    initspawns();
    level thread sotf();
}

initspawns()
{
    scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_828B0BBCD23709257593B1A00A", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_89550C9DFF778ABD3E40236F4830" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_89550C9DFF778ABD3E40236F4830" );
    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
}

setplayerloadout()
{
    definechestweapons();
    var_0 = getrandomweapon( level.pistolarray );
    var_1 = scripts\mp\utility\weapon::getweaponrootname( var_0["_encstr_81BA051A9AA88B"] );
    var_2 = tablelookup( "_encstr_958813DB70356040238A0F71C20B08C07AB64F9F1E", 2, var_1, 0 );
    setomnvar( "_encstr_A4620FBA96FAE6DB4799FA83D2DCE8EDD8", int( var_2 ) );
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_87C30FC410893345733089A330AB3E9362"] = "_encstr_AABA05236DC831";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_B44319C6DB5832DEAE3A289C965B2CC95E141DA32C36A1D65673A3"] = "_encstr_AABA05236DC831";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_A9651AE2C897BBF598D1103A83303EBBC3A5DBEB917E43AD20FD4C62"] = "_encstr_AABA05236DC831";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB"] = "_encstr_AABA05236DC831";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9"] = "_encstr_AABA05236DC831";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"] = var_0["_encstr_81BA051A9AA88B"];
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_9D6F1B6C48D16B2D1B48D18AC817252389AEF1395DDBC7F6C968BA3218"] = "_encstr_AABA05236DC831";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_BDDB1C6590701C82D5812FCF97F0DA54285B58A66B70A19AA35BFFEBD106"] = "_encstr_AABA05236DC831";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_A2EA151BD081D44253851297663F0A9C2980C73F48F807"] = "_encstr_AABA05236DC831";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_82B618ABEA2661705BBB2A415B6D7332AB2AD71F9D3880AE324D"] = "_encstr_AABA05236DC831";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_82BC113DBF214C223588A5A7604A835348E395"] = "_encstr_89F511713BBB2818C13559D05DB9E85501B7F1";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_9DC30F4BDF0AB9AF800C8C5E8D086A4DB2"] = "_encstr_970B114D33923EC8CF4FD30935D9E07D295F19";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_A31B12E09AEF5518032CF7A1326F20AA4393FB49"] = "_encstr_973508BF93EFFBC363B3";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_BAE713C8CFE03C60079B6BE3E83B5FEC7AAAF917B3"] = "_encstr_AABA05236DC831";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_A1E71363923EA180A70CDA33FC2BCB59229AD0B0DF"] = "_encstr_AABA05236DC831";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_B9E71363DEC291F6ABD196961B63DCE8935616B6CC"] = "_encstr_AABA05236DC831";
    level.sotf_loadouts["_encstr_BA840579D3F7F6"]["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] = [ "_encstr_ABC6174BF8B3AED741511421E0C887B5EF3823C36035E4131B", "_encstr_81D117CDC159D84B58B1D1F2AFAC1E3A39B0F5465616C8C6BC" ];
    level.sotf_loadouts["_encstr_BC850785638DA59537"] = level.sotf_loadouts["_encstr_BA840579D3F7F6"];
}

getspawnpoint()
{
    var_0 = scripts\mp\spawnlogic::getteamspawnpoints( self.team );

    if ( level.ingraceperiod )
        var_1 = scripts\mp\spawnlogic::getspawnpoint_random( var_0 );
    else
        var_1 = undefined;

    return var_1;
}

onspawnplayer()
{
    self.pers["_encstr_9E95066E81471B5F"] = "_encstr_87AC099DB05B59ADF619AC";
    self.pers["_encstr_9F690A0DBF9F69AE0A510886"] = "_encstr_A40101";
    self.class = self.pers["_encstr_9E95066E81471B5F"];
    self.lastclass = self.pers["_encstr_9F690A0DBF9F69AE0A510886"];
    self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] = level.sotf_loadouts[self.pers["_encstr_89EF05D46BA8FD"]];
    level notify( "_encstr_9FF61466059B153EA07BC87027DA7677832EDC601F72", self );

    if ( !isdefined( self.eventvalue ) )
    {
        self.eventvalue = scripts\mp\rank::getscoreinfovalue( "_encstr_97D70583536853" );
        scripts\mp\utility\stats::setextrascore0( self.eventvalue );
    }

    self.oldprimarygun = undefined;
    self.newprimarygun = undefined;
    thread waitloadoutdone();
}

waitloadoutdone()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self waittill( "_encstr_B8030CCE4B3B2B627B8523DEBAD1" );
    var_0 = self getcurrentweapon();
    self setweaponammostock( var_0, 0 );
    self.oldprimarygun = var_0;
    thread pickupweaponhandler();
}

onplayerscore( var_0, var_1 )
{
    var_1.assists = var_1 scripts\mp\utility\stats::getpersstat( "_encstr_8FF20E5B902097A21FC5D2132EEB3A53" );

    if ( var_0 != "_encstr_956D0BE65DC195C9BEB5A563B1" && issubstr( var_0, "_encstr_97D70583536853" ) )
    {
        var_2 = scripts\mp\rank::getscoreinfovalue( "_encstr_A88210D6A90F3D25F8D0E6E26BA7DD9D3623" );
        return var_2;
    }

    return 0;
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::oncommonnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 );
    var_1 perkwatcher();
    var_6 = 0;

    foreach ( var_8 in level.players )
    {
        if ( isdefined( var_8.score ) && var_8.score > var_6 )
            var_6 = var_8.score;
    }
}

sotf()
{
    level thread startspawnchest();
}

startspawnchest()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 = getdvarint( "_encstr_88A7197EAB0326370D9BD0119267CBFEAF428F7505F72847F32278", 3 );
    var_1 = getdvarint( "_encstr_946C1847C302612E2FCB499612F3EFA99E4AEBF16DEBA8792F83", 30 );
    level waittill( "_encstr_9FF61466059B153EA07BC87027DA7677832EDC601F72", var_2 );

    for (;;)
    {
        if ( !isalive( var_2 ) )
        {
            var_2 = findnewowner( level.players );

            if ( !isdefined( var_2 ) )
                continue;
        }
        else
        {
            while ( isalive( var_2 ) )
            {
                if ( level.emptylocations )
                {
                    for ( var_3 = 0; var_3 < var_0; var_3++ )
                        level thread spawnchests( var_2 );

                    level thread showcratesplash( "_encstr_820E15376F93E421837AC17BA77BE9ABCAB79783CF9A3C" );
                    wait( var_1 );
                    continue;
                }

                waitframe();
            }
        }
    }
}

showcratesplash( var_0 )
{
    foreach ( var_2 in level.players )
        var_2 thread scripts\mp\hud_message::showsplash( var_0 );
}

findnewowner( var_0 )
{
    foreach ( var_2 in var_0 )
    {
        if ( isalive( var_2 ) )
            return var_2;
    }

    level waittill( "_encstr_9FF61466059B153EA07BC87027DA7677832EDC601F72", var_4 );
    return var_4;
}

spawnchests( var_0 )
{
    var_1 = scripts\engine\utility::getstructarray( "_encstr_9F82166EB70B115F3E6AD86043D9FF2BB73778671F275841", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_2 = getrandompoint( var_1 );

    if ( isdefined( var_2 ) )
        playfxatpoint( var_2 );
}

playfxatpoint( var_0 )
{
    var_1 = var_0 + ( 0, 0, 30 );
    var_2 = var_0 + ( 0, 0, -1000 );
    var_3 = scripts\engine\trace::ray_trace( var_1, var_2, undefined, scripts\engine\trace::create_default_contents( 1 ) );
    var_4 = var_3["_encstr_B7260923C89E8F3378E72E"] + ( 0, 0, 1 );
    var_5 = var_3["_encstr_B60E07C9FD1C2055E3"];

    if ( isdefined( var_5 ) )
    {
        for ( var_6 = var_5 getlinkedparent(); isdefined( var_6 ); var_6 = var_5 getlinkedparent() )
            var_5 = var_6;
    }

    if ( isdefined( var_5 ) )
    {
        var_7 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_4 );
        var_7 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
        var_7.angles = ( 90, randomintrange( -180, 179 ), 0 );
        var_7 linkto( var_5 );
        thread playlinkedsmokeeffect( scripts\engine\utility::getfx( "_encstr_8C14181F037C2AA9A0566EB4099BE471458DE78B8791E276C09B" ), var_7 );
    }
    else
        playfx( scripts\engine\utility::getfx( "_encstr_A64D126340C73301735966B8A3D32D991D0678C8" ), var_4 );
}

playlinkedsmokeeffect( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    wait 0.05;
    playfxontag( var_0, var_1, "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    wait 6;
    stopfxontag( var_0, var_1, "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    wait 0.05;
    var_1 delete();
}

getcenterpoint( var_0 )
{
    var_1 = undefined;
    var_2 = undefined;

    foreach ( var_4 in var_0 )
    {
        var_5 = distance2dsquared( level.mapcenter, var_4.origin );

        if ( !isdefined( var_1 ) || var_5 < var_2 )
        {
            var_1 = var_4;
            var_2 = var_5;
        }
    }

    level.usedlocations[level.usedlocations.size] = var_1.origin;
    return var_1.origin;
}

getrandompoint( var_0 )
{
    var_1 = [];

    for ( var_2 = 0; var_2 < var_0.size; var_2++ )
    {
        var_3 = 0;

        if ( isdefined( level.usedlocations ) && level.usedlocations.size > 0 )
        {
            foreach ( var_5 in level.usedlocations )
            {
                if ( var_0[var_2].origin == var_5 )
                {
                    var_3 = 1;
                    break;
                }
            }

            if ( var_3 )
                continue;

            var_1[var_1.size] = var_0[var_2].origin;
            continue;
        }

        var_1[var_1.size] = var_0[var_2].origin;
    }

    if ( var_1.size > 0 )
    {
        var_7 = randomint( var_1.size );
        var_8 = var_1[var_7];
        level.usedlocations[level.usedlocations.size] = var_8;
        return var_8;
    }

    level.emptylocations = 0;
    return undefined;
}

definechestweapons()
{
    var_0 = [];
    var_1 = [];

    for ( var_2 = 0; tablelookupbyrow( "_encstr_958813DB70356040238A0F71C20B08C07AB64F9F1E", var_2, 0 ) != "_encstr_A40101"; var_2++ )
    {
        var_3 = tablelookupbyrow( "_encstr_958813DB70356040238A0F71C20B08C07AB64F9F1E", var_2, 2 );
        var_4 = tablelookupbyrow( "_encstr_958813DB70356040238A0F71C20B08C07AB64F9F1E", var_2, 1 );
        var_5 = isselectableweapon( var_3 );

        if ( isdefined( var_4 ) && var_5 && var_4 == "_encstr_97C90EBB2B2C1CBDDCAF1C4BE647B7B1" )
        {
            var_6 = 30;
            var_0[var_0.size]["_encstr_81BA051A9AA88B"] = var_3;
            var_0[var_0.size - 1]["_encstr_8BDE07EE56D2EC1A1D"] = var_6;
            continue;
        }

        if ( isdefined( var_4 ) && var_5 && ( var_4 == "_encstr_8FE60FAF13D0C25FD006C37AE835877B40" || var_4 == "_encstr_A6710B7FC30B12AF20F613FAD9" || var_4 == "_encstr_BA250FBBB22C1CF6CDF50B6E372CD5D88E" || var_4 == "_encstr_AD6510EEACC283DBB9FA3A85B13A5AB1B063" || var_4 == "_encstr_AABE0E47EF4F93A830EFCFC309E7BF9E" || var_4 == "_encstr_A9710B24C527AB77354198A8EB" || var_4 == "_encstr_AF710B0B50BB6ACFA0C80C35FC" || var_4 == "_encstr_B7BF127F8889D85A6D18A25A780DB2937340ABBF" ) )
        {
            var_6 = 0;

            switch ( var_4 )
            {
                case "_encstr_8FE60FAF13D0C25FD006C37AE835877B40":
                    var_6 = 35;
                    break;
                case "_encstr_BA250FBBB22C1CF6CDF50B6E372CD5D88E":
                case "_encstr_A6710B7FC30B12AF20F613FAD9":
                case "_encstr_AD6510EEACC283DBB9FA3A85B13A5AB1B063":
                    var_6 = 25;
                    break;
                case "_encstr_A9710B24C527AB77354198A8EB":
                case "_encstr_AABE0E47EF4F93A830EFCFC309E7BF9E":
                    var_6 = 15;
                    break;
                case "_encstr_AF710B0B50BB6ACFA0C80C35FC":
                    var_6 = 10;
                    break;
                case "_encstr_B7BF127F8889D85A6D18A25A780DB2937340ABBF":
                    var_6 = 30;
                    break;
            }

            var_1[var_1.size]["_encstr_81BA051A9AA88B"] = var_3 + "_encstr_B61A04EBB607";
            var_1[var_1.size - 1]["_encstr_B62906822EF847A8"] = var_4;
            var_1[var_1.size - 1]["_encstr_8BDE07EE56D2EC1A1D"] = var_6;
            continue;
        }

        continue;
    }

    var_1 = sortbyweight( var_1 );
    level.pistolarray = var_0;
    level.weaponarray = var_1;
}

sotfcratethink( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_B117130B3A8B51507373BFD3E7C98F9832FB784EDB" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( game["_encstr_A9B10863D3ADDAF8974B"][self.cratetype + "_encstr_BCA906F60449501D"] ) )
        var_1 = game["_encstr_A9B10863D3ADDAF8974B"][self.cratetype + "_encstr_BCA906F60449501D"];
    else
        var_1 = &"_encstr_98E712D42897748A157D5A529813A6A229542896";

    var_2 = "_encstr_8B7A0C7C0B0F96F03863E5F369D2";
    scripts\cp_mp\killstreaks\airdrop::cratesetupforuse( var_1, var_2 );
    thread scripts\cp_mp\killstreaks\airdrop::crateallcapturethink();
    childthread cratewatcher( 60 );
    childthread playerjoinwatcher();
    var_3 = 0;
    var_4 = getdvarint( "_encstr_BC5C1C26C36B4E4F75F38839AA4F2306777AA71D5DD7F3ADDE4AC86002E3", 1 );

    for (;;)
    {
        self waittill( "_encstr_9CCF09866E33D9835AB738", var_5 );
        var_5 playlocalsound( "_encstr_AFC80F0BDA5BF6FA8D93C247ACFAD56E2B" );
        var_6 = getrandomweapon( level.weaponarray );
        var_6 = getrandomattachments( var_6 );

        if ( isstring( var_6 ) )
            var_6 = asmdevgetallstates( var_6 );

        var_7 = var_5.lastdroppableweaponobj;
        var_8 = var_5 getammocount( var_7 );

        if ( var_6 == var_7 )
        {
            var_5 givestartammo( var_6 );
            var_5 setweaponammostock( var_6, var_8 );
        }
        else
        {
            if ( isdefined( var_7 ) && !nullweapon( var_7 ) )
            {
                var_9 = var_5 dropitem( var_7 );

                if ( isdefined( var_9 ) && var_8 > 0 )
                    var_9.targetname = "_encstr_A3580F88A8B0D79B791DD11355BBE04FB3";
            }

            var_5 giveweapon( var_6, 0, 0, 0, 1 );
            var_5 setweaponammostock( var_6, 0 );
            var_5 scripts\cp_mp\utility\inventory_utility::_switchtoweaponimmediate( var_6 );

            if ( var_5 getweaponammoclip( var_6 ) == 1 )
                var_5 setweaponammostock( var_6, 1 );

            var_5.oldprimarygun = var_6;
        }

        var_3++;
        var_4 = var_4 - 1;

        if ( var_4 > 0 )
        {
            if ( isdefined( self.crateiconid ) )
            {
                scripts\cp_mp\entityheadicons::setheadicon_deleteicon( self.crateiconid );
                self.crateiconid = undefined;
            }

            var_10 = thread scripts\cp_mp\entityheadicons::setheadicon_singleimage( level.players, "_encstr_93510D2674BF93D5F16B7850129939" + var_4 + "_encstr_AFD8064E3EC4AB1D", 24 );
            self.crateheadicon = "_encstr_93510D2674BF93D5F16B7850129939" + var_4 + "_encstr_AFD8064E3EC4AB1D";
            self.crateiconid = var_10;
        }

        if ( self.cratetype == "_encstr_BDB30C63D56420B86BB7EBD187A2" && var_3 == getdvarint( "_encstr_BC5C1C26C36B4E4F75F38839AA4F2306777AA71D5DD7F3ADDE4AC86002E3", 1 ) )
            scripts\cp_mp\killstreaks\airdrop::deletecrateold();
    }
}

cratewatcher( var_0 )
{
    wait( var_0 );

    while ( isdefined( self.inuse ) && self.inuse )
        waitframe();

    scripts\cp_mp\killstreaks\airdrop::deletecrateold();
}

playerjoinwatcher()
{
    for (;;)
    {
        level waittill( "_encstr_87940A7F075A88E8ABD37951", var_0 );

        if ( !isdefined( var_0 ) )
            continue;

        if ( isdefined( self.crateiconid ) )
            scripts\cp_mp\entityheadicons::_id_1315D( self.crateiconid, var_0 );
    }
}

cratekill( var_0 )
{
    for ( var_1 = 0; var_1 < level.usedlocations.size; var_1++ )
    {
        if ( var_0 != level.usedlocations[var_1] )
            continue;

        level.usedlocations = scripts\engine\utility::array_remove( level.usedlocations, var_0 );
    }

    level.emptylocations = 1;
}

isselectableweapon( var_0 )
{
    var_1 = tablelookup( "_encstr_958813DB70356040238A0F71C20B08C07AB64F9F1E", 2, var_0, 3 );
    var_2 = tablelookup( "_encstr_958813DB70356040238A0F71C20B08C07AB64F9F1E", 2, var_0, 4 );

    if ( var_1 == "_encstr_87EF0559D9AB8B" && ( var_2 == "_encstr_A40101" || getdvarint( var_2, 0 ) == 1 ) )
        return 1;

    return 0;
}

getrandomweapon( var_0 )
{
    var_1 = setbucketval( var_0 );
    var_2 = randomint( level.weaponmaxval["_encstr_9E19046A0D63"] );
    var_3 = undefined;

    for ( var_4 = 0; var_4 < var_1.size; var_4++ )
    {
        if ( !var_1[var_4]["_encstr_8BDE07EE56D2EC1A1D"] )
            continue;

        if ( var_1[var_4]["_encstr_8BDE07EE56D2EC1A1D"] > var_2 )
        {
            var_3 = var_1[var_4];
            break;
        }
    }

    return var_3;
}

getrandomattachments( var_0 )
{
    var_1 = [];
    var_2 = [];
    var_3 = [];
    var_4 = scripts\mp\utility\weapon::getweaponrootname( var_0["_encstr_81BA051A9AA88B"] );
    var_5 = scripts\mp\utility\weapon::register_wave_spawner( var_4 );

    if ( var_5.size > 0 )
    {
        var_6 = randomint( 5 );

        for ( var_7 = 0; var_7 < var_6; var_7++ )
        {
            var_1 = getvalidattachments( var_0, var_2, var_5 );

            if ( var_1.size == 0 )
                break;

            var_8 = randomint( var_1.size );
            var_2[var_2.size] = var_1[var_8];
            var_9 = scripts\mp\utility\weapon::attachmentmap_tounique( var_1[var_8], var_4 );
            var_3[var_3.size] = var_9;
        }

        var_10 = scripts\mp\utility\weapon::getweapongroup( var_0["_encstr_81BA051A9AA88B"] );

        if ( var_10 == "_encstr_A9710B24C527AB77354198A8EB" || var_10 == "_encstr_AABE0E47EF4F93A830EFCFC309E7BF9E" || var_4 == "_encstr_8F1B0EAFB0CB4F52C1AEFB7787A14F6A" )
        {
            var_11 = 0;

            foreach ( var_13 in var_2 )
            {
                if ( scripts\mp\utility\weapon::getattachmenttype( var_13 ) == "_encstr_B61F057B6E5158" )
                {
                    var_11 = 1;
                    break;
                }
            }

            if ( !var_11 )
            {
                var_15 = strtok( var_4, "_encstr_984C028E" )[1];
                var_3[var_3.size] = var_15 + "_encstr_BDFB06E61BBD1C59";
            }
        }

        if ( var_3.size > 0 )
        {
            var_3 = scripts\engine\utility::alphabetize( var_3 );

            foreach ( var_17 in var_3 )
                var_0["_encstr_81BA051A9AA88B"] = var_0["_encstr_81BA051A9AA88B"] + "_encstr_984C028E" + var_17;
        }
    }

    return var_0["_encstr_81BA051A9AA88B"];
}

getvalidattachments( var_0, var_1, var_2 )
{
    var_3 = [];
    var_4 = scripts\mp\weapons::safechecknum( var_0["_encstr_81BA051A9AA88B"] );

    foreach ( var_6 in var_2 )
    {
        if ( var_6 == "_encstr_89070358A2" || var_6 == "_encstr_A85B083786B7E8ECAEB9" )
            continue;

        var_7 = attachmentcheck( var_4, var_6, var_1 );

        if ( !var_7 )
            continue;

        var_3[var_3.size] = var_6;
    }

    return var_3;
}

attachmentcheck( var_0, var_1, var_2 )
{
    for ( var_3 = 0; var_3 < var_2.size; var_3++ )
    {
        if ( var_1 == var_2[var_3] || !scripts\mp\utility\weapon::attachmentscompatible( var_0, var_1, var_2[var_3] ) )
            return 0;
    }

    return 1;
}

checkscopes( var_0 )
{
    foreach ( var_2 in var_0 )
    {
        if ( var_2 == "_encstr_AFCA08A3D059276B8563" || var_2 == "_encstr_AAEB08D99EB936BD3895" || var_2 == "_encstr_8C830551F748EF" || var_2 == "_encstr_B2B00A909B078028F4CF7171" )
            return 1;
    }

    return 0;
}

pickupweaponhandler()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        waitframe();
        var_0 = self getweaponslistprimaries();

        if ( var_0.size > 1 )
        {
            var_1 = self.oldprimarygun;

            foreach ( var_3 in var_0 )
            {
                if ( var_3 == var_1 )
                {
                    var_4 = self getammocount( var_3 );
                    var_5 = self dropitem( var_3 );

                    if ( isdefined( var_5 ) && var_4 > 0 )
                        var_5.targetname = "_encstr_A3580F88A8B0D79B791DD11355BBE04FB3";

                    break;
                }
            }

            var_0 = scripts\engine\utility::array_remove( var_0, var_1 );
            self.oldprimarygun = var_0[0];
        }
    }
}

loginckillchain()
{
    self.pers["_encstr_AA560B03BB08757F4351126AFB"]++;
    scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_AA560B03BB08757F4351126AFB", self.pers["_encstr_AA560B03BB08757F4351126AFB"] );
}

perkwatcher()
{
    if ( level.allowperks )
    {
        switch ( self.streakpoints )
        {
            case 2:
                scripts\mp\utility\perk::giveperk( "_encstr_9F891DC3FB723B306010230B10A6F047D1239BE654E3A0BE9DF798061FE263" );
                thread scripts\mp\hud_message::showsplash( "_encstr_BD4C223AEBC8834A67091B27079CB2EB281372C260485C334D2F6F636BBEFB0FA8F8EB4F", self.streakpoints );
                thread loginckillchain();
                break;
            case 3:
                scripts\mp\utility\perk::giveperk( "_encstr_94C9162F219AE69F03F8E0EA38AA91906BEB586BB0AF930B" );
                thread scripts\mp\hud_message::showsplash( "_encstr_8BAC1BF0B2C1A878BE795359F7D1BC8F5BCBB0809B87F42C68AB2F6DA1", self.streakpoints );
                thread loginckillchain();
                break;
            case 4:
                scripts\mp\utility\perk::giveperk( "_encstr_976D1292779B62317163BB9781EBE48A71029F4A" );
                thread scripts\mp\hud_message::showsplash( "_encstr_888617DBE35D7FACF0D97C69A7B833BF713832536E2E17A3E0", self.streakpoints );
                thread loginckillchain();
                break;
            case 5:
                scripts\mp\utility\perk::giveperk( "_encstr_8934169BD3FDB744B1FBA080DF33EF7058952C215BA931F3" );
                thread scripts\mp\hud_message::showsplash( "_encstr_B4AA1BA652C2FFC01BAD485F86FE49405520EC8A6B8183EA87B63009E6", self.streakpoints );
                thread loginckillchain();
                break;
            case 6:
                scripts\mp\utility\perk::giveperk( "_encstr_BA62123783CA8D4B2CD8D1BCBE32B2B03256CB59" );
                thread scripts\mp\hud_message::showsplash( "_encstr_9D711773C75177AC3388A34B2901E7372925F11DC83BFF33D5", self.streakpoints );
                thread loginckillchain();
                break;
        }
    }
}

iconvisall( var_0, var_1 )
{
    var_2 = var_0 thread scripts\cp_mp\entityheadicons::setheadicon_singleimage( level.players, var_1, 24, 1 );
    self.crateheadicon = var_1;
    self.crateiconid = var_2;
}

objvisall( var_0 )
{
    scripts\mp\objidpoolmanager::objective_playermask_showtoall( var_0 );
}

setbucketval( var_0 )
{
    level.weaponmaxval["_encstr_9E19046A0D63"] = 0;
    var_1 = var_0;

    for ( var_2 = 0; var_2 < var_1.size; var_2++ )
    {
        if ( !var_1[var_2]["_encstr_8BDE07EE56D2EC1A1D"] )
            continue;

        level.weaponmaxval["_encstr_9E19046A0D63"] = level.weaponmaxval["_encstr_9E19046A0D63"] + var_1[var_2]["_encstr_8BDE07EE56D2EC1A1D"];
        var_1[var_2]["_encstr_8BDE07EE56D2EC1A1D"] = level.weaponmaxval["_encstr_9E19046A0D63"];
    }

    return var_1;
}

sortbyweight( var_0 )
{
    var_1 = [];
    var_2 = [];

    for ( var_3 = 1; var_3 < var_0.size; var_3++ )
    {
        var_4 = var_0[var_3]["_encstr_8BDE07EE56D2EC1A1D"];
        var_1 = var_0[var_3];

        for ( var_5 = var_3 - 1; var_5 >= 0 && is_weight_a_less_than_b( var_0[var_5]["_encstr_8BDE07EE56D2EC1A1D"], var_4 ); var_5-- )
        {
            var_2 = var_0[var_5];
            var_0[var_5] = var_1;
            var_0[var_5 + 1] = var_2;
        }
    }

    return var_0;
}

is_weight_a_less_than_b( var_0, var_1 )
{
    return var_0 < var_1;
}
