// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.dogtags = [];
    level.dogtagallyonusecb = _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::dogtagcommonallyonusecb;
    level.dogtagenemyonusecb = _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::dogtagcommonenemyonusecb;
    level.conf_fx["_encstr_AAE007D90BB9A5E61A"] = loadfx( "_encstr_97531F35435B48F8877259185C7D98970293B73FBF5227C8AC0183C8C54F10DBCB" );
    level.conf_fx["_encstr_BCF40BEC2CB95A9B43BECEDEE6"] = loadfx( "_encstr_B3C22B75031B08E8DFA05E10DAFFE0572297CBFFA312C0D8E6884629058BE9155AF737496FDABA9828F56B01E8" );
    level.spawnoffsettacinsertmax["_encstr_A2930D6B0BD55CCFF058989F701903"] = loadfx( "_encstr_B65E3ADD56305293FF9FFEA003465CE88DAD6377FCDF0A64D3B3F608FA6381E0A3058BFD5F04A038FF5A2B738363CDA9BF8A1B53062F60732203E1FA" );
    level.spawnoffsettacinsertmax["_encstr_B2930DF0C72E10DFB2F913A4C15ADD"] = loadfx( "_encstr_A63A37B333F0BCA5DD0EF5D6C1797616DA956BBD91CA79B3663CBE8658B11BDBBB59ACE6D7B536FA36581C3A572756EB95B959DA5E17ECCCC3" );

    if ( istrue( level.playinggulagbink ) )
        level._id_136CD = ::_id_136CC;

    level.numlifelimited = scripts\mp\utility\game::getgametypenumlives();
}

shouldspawntags( var_0 )
{
    if ( isdefined( self.switching_teams ) )
        return 0;

    if ( isdefined( var_0 ) && var_0 == self )
        return 0;

    if ( level.teambased && isdefined( var_0 ) && isdefined( var_0.team ) && var_0.team == self.team )
        return 0;

    if ( isdefined( var_0 ) && !isdefined( var_0.team ) && ( var_0.classname == "_encstr_B6FE0D1B7B1274BF45F2173C282B43" || var_0.classname == "_encstr_B74E0BBBF6393646B93885BBE6" ) )
        return 0;

    return 1;
}

spawndogtags( var_0, var_1, var_2, var_3 )
{
    var_4 = 1;

    if ( istrue( level.numlifelimited ) )
    {
        var_4 = var_0 shouldspawntags( var_1 );

        if ( var_4 )
            var_4 = var_4 && !scripts\mp\utility\player::isreallyalive( var_0 );

        if ( var_4 )
            var_4 = var_4 && !var_0 scripts\mp\playerlogic::mayspawn();
    }

    if ( !var_4 )
        return;

    if ( isagent( var_0 ) )
        return;

    if ( isagent( var_1 ) )
        var_1 = var_1.owner;

    var_5 = 14;
    var_6 = ( 0, 0, 0 );
    var_7 = var_0.angles;

    if ( var_0 scripts\mp\gameobjects::touchingarbitraryuptrigger() )
    {
        var_7 = var_0 getworldupreferenceangles();
        var_6 = anglestoup( var_7 );

        if ( var_6[2] < 0 )
            var_5 = -14;
    }

    if ( isdefined( level.dogtags[var_0.guid] ) )
    {
        if ( istrue( level.playinggulagbink ) )
            playfx( level.conf_fx["_encstr_BCF40BEC2CB95A9B43BECEDEE6"], level.dogtags[var_0.guid].curorigin );
        else if ( istrue( level.setplayerselfrevivingextrainfo ) )
            playfx( level.spawnoffsettacinsertmax["_encstr_A2930D6B0BD55CCFF058989F701903"], level.dogtags[var_0.guid].curorigin );
        else
            playfx( level.conf_fx["_encstr_AAE007D90BB9A5E61A"], level.dogtags[var_0.guid].curorigin );

        level.dogtags[var_0.guid] resettags();
        level.dogtags[var_0.guid].visuals[0].angles = ( 0, 0, 0 );
        level.dogtags[var_0.guid].visuals[1].angles = ( 0, 0, 0 );
    }
    else
    {
        if ( istrue( level.setplayerselfrevivingextrainfo ) )
        {
            var_8[0] = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
            var_8[0] setmodel( "_encstr_800B2022B829B43BC9E6A18FF5502FBB5BB04B9918A36DA7C05893A31518CB8921B2" );
            var_8[1] = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
            var_8[1] setmodel( "_encstr_880B2015C3F8D773ABF0CBA1689FEFFB31BC73AFEB630FFE4D8153FA98C1E59FC33F" );
        }
        else
        {
            var_8[0] = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
            var_8[0] setmodel( "_encstr_81CD1CB5A51B5AA358C9E5BE32EDD93AB0B337F5967770F5B739B09BB359" );
            var_8[1] = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
            var_8[1] setmodel( "_encstr_A2FD1A48B23DFBA3B74A83E834E7899926FA9B512A13911E834C8DFD" );
        }

        if ( level.numlifelimited )
        {
            var_8[0] setclientowner( var_0 );
            var_8[1] setclientowner( var_0 );
        }

        var_8[0] setasgametypeobjective();
        var_8[1] setasgametypeobjective();
        var_9 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", ( 0, 0, 0 ), 0, 32, 32 );

        if ( var_0 scripts\mp\gameobjects::touchingarbitraryuptrigger() )
        {
            if ( var_6[2] < 0 )
            {
                var_8[0].angles = var_7;
                var_8[1].angles = var_7;
            }
        }

        var_10 = "_encstr_BC19047780DA";
        var_11 = 0;
        level.dogtags[var_0.guid] = scripts\mp\gameobjects::createuseobject( var_10, var_9, var_8, ( 0, 0, 16 ) );
        level.dogtags[var_0.guid].onuse = ::onuse;
        level.dogtags[var_0.guid] scripts\mp\gameobjects::setusetime( var_11 );
        level.dogtags[var_0.guid].victim = var_0;
        level.dogtags[var_0.guid].victimteam = var_0.team;
        level thread clearonvictimdisconnect( var_0 );
        var_0 thread tagteamupdater( level.dogtags[var_0.guid] );
    }

    var_12 = var_0.origin + ( 0, 0, var_5 );
    level.dogtags[var_0.guid].curorigin = var_12;
    level.dogtags[var_0.guid].trigger.origin = var_12;
    level.dogtags[var_0.guid].visuals[0].origin = var_12;
    level.dogtags[var_0.guid].visuals[1].origin = var_12;
    level.dogtags[var_0.guid] scripts\mp\gameobjects::initializetagpathvariables();
    level.dogtags[var_0.guid] scripts\mp\gameobjects::allowuse( "_encstr_BC19047780DA" );
    level.dogtags[var_0.guid].visuals[0] showtoteam( level.dogtags[var_0.guid], var_1.team );
    level.dogtags[var_0.guid].visuals[1] showtoteam( level.dogtags[var_0.guid], var_0.team );
    level.dogtags[var_0.guid].attacker = var_1;
    level.dogtags[var_0.guid].attackerteam = var_1.team;
    level.dogtags[var_0.guid].ownerteam = var_0.team;

    if ( isdefined( level.dogtags[var_0.guid].objidnum ) )
    {
        if ( level.dogtags[var_0.guid].objidnum != -1 )
        {
            var_13 = level.dogtags[var_0.guid].objidnum;
            scripts\mp\objidpoolmanager::update_objective_state( var_13, "_encstr_A65A0856F3802ACA0D6B" );
            scripts\mp\objidpoolmanager::update_objective_position( var_13, var_0.origin + ( 0, 0, 36 ) );
            scripts\mp\objidpoolmanager::update_objective_setbackground( var_13, 1 );
            scripts\mp\objidpoolmanager::objective_set_play_intro( level.dogtags[var_0.guid].objidnum, 0 );
            scripts\mp\objidpoolmanager::objective_set_play_outro( level.dogtags[var_0.guid].objidnum, 0 );

            if ( istrue( level.setplayerselfrevivingextrainfo ) )
                level.dogtags[var_0.guid] scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_9E641ADF6B60B20F03708339596877EB08DF536FA7083BCBB94EDAF3", "_encstr_886E176F7313ABC7E8508B59097B1723E787F757FFB2A38CA8" );
            else
                level.dogtags[var_0.guid] scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_8A701AEE16F2E0DB2DE6D1FA8CB7EC8E0B3BDCD7999C4BB27319D8F2", "_encstr_BACD11D8E7195387C2D57D902FDAEF9B696770" );

            level.dogtags[var_0.guid] scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
        }
    }

    if ( istrue( level.setplayerselfrevivingextrainfo ) )
        playsoundatpos( var_12, "_encstr_BE091C81484750935D8A482082F7ABCB27FF950FB72F1EC182C2C899FA4B" );
    else
        playsoundatpos( var_12, "_encstr_8C87195DD1C9EC9F09C87AA29054D7E2E027DCD9074039932EC043" );

    level notify( var_2, level.dogtags[var_0.guid] );
    var_0.tagavailable = 1;
    level.dogtags[var_0.guid].visuals[0] scriptmodelplayanim( "_encstr_815B0F9B83B17530374B7189B90B833B7A" );
    level.dogtags[var_0.guid].visuals[1] scriptmodelplayanim( "_encstr_815B0F9B83B17530374B7189B90B833B7A" );

    if ( level.numlifelimited )
        var_0.statusicon = "_encstr_B269121A5D46FADC3A583ABA6EBE32F69DA30BB3";
}

resettags()
{
    self.attacker = undefined;
    self notify( "_encstr_80F2062328E7A72B" );
    self.visuals[0] hide();
    self.visuals[1] hide();
    self.visuals[0] dontinterpolate();
    self.visuals[1] dontinterpolate();
    self.curorigin = ( 0, 0, 1000 );
    self.trigger.origin = ( 0, 0, 1000 );
    self.visuals[0].origin = ( 0, 0, 1000 );
    self.visuals[1].origin = ( 0, 0, 1000 );
    scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );

    if ( self.objidnum != -1 )
        scripts\mp\objidpoolmanager::update_objective_state( self.objidnum, "_encstr_936705F0224D13" );
}

removetags( var_0, var_1, var_2 )
{
    if ( isdefined( level.dogtags[var_0] ) )
    {
        level.dogtags[var_0] scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );

        if ( istrue( var_1 ) && isdefined( level.dogtags[var_0].attacker ) )
            level.dogtags[var_0].attacker thread scripts\mp\rank::scoreeventpopup( "_encstr_9F380C87DBC073C72BAA6BB1CFA9" );

        if ( istrue( level.playinggulagbink ) )
        {
            if ( isdefined( level._id_136CD ) )
                level [[ level._id_136CD ]]( level.dogtags[var_0], var_2 );
        }
        else if ( istrue( level.setplayerselfrevivingextrainfo ) )
        {
            if ( isdefined( var_2 ) && var_2.team == level.dogtags[var_0].ownerteam )
            {
                playfx( level.conf_fx["_encstr_AAE007D90BB9A5E61A"], level.dogtags[var_0].curorigin );
                playfx( level.spawnoffsettacinsertmax["_encstr_A2930D6B0BD55CCFF058989F701903"], level.dogtags[var_0].curorigin + ( 0, 0, 45 ) );
            }
            else
            {
                playfx( level.conf_fx["_encstr_AAE007D90BB9A5E61A"], level.dogtags[var_0].curorigin );
                playfx( level.spawnoffsettacinsertmax["_encstr_B2930DF0C72E10DFB2F913A4C15ADD"], level.dogtags[var_0].curorigin + ( 0, 0, 45 ) );
            }
        }
        else
            playfx( level.conf_fx["_encstr_AAE007D90BB9A5E61A"], level.dogtags[var_0].curorigin );

        level.dogtags[var_0] notify( "_encstr_80F2062328E7A72B" );
        waitframe();

        if ( isdefined( level.dogtags[var_0] ) )
        {
            level.dogtags[var_0] notify( "_encstr_A3750609A5E61883" );

            for ( var_3 = 0; var_3 < level.dogtags[var_0].visuals.size; var_3++ )
                level.dogtags[var_0].visuals[var_3] delete();

            if ( !isdefined( level.dogtags[var_0].skipminimapids ) )
                level.dogtags[var_0] thread scripts\mp\gameobjects::deleteuseobject();

            level.dogtags[var_0] = undefined;
        }
    }
}

_id_136CC( var_0, var_1 )
{
    var_2 = 20;
    var_3 = 600;
    var_4 = var_0.curorigin + ( 0, 0, var_2 );
    var_5 = var_0.curorigin + ( 0, 0, var_3 );
    var_6 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 1, 1 );
    var_7 = [];
    var_7[var_7.size] = var_0.visuals[0];
    var_7[var_7.size] = var_0.visuals[1];

    if ( isplayer( var_1 ) )
        var_7[var_7.size] = var_1;

    var_8 = scripts\engine\trace::ray_trace( var_4, var_5, var_7, var_6, 0 );

    if ( isplayer( var_8["_encstr_B60E07C9FD1C2055E3"] ) )
        var_8["_encstr_B60E07C9FD1C2055E3"] = undefined;

    if ( isdefined( var_8["_encstr_B60E07C9FD1C2055E3"] ) && isdefined( var_8["_encstr_B60E07C9FD1C2055E3"].code_classname ) && var_8["_encstr_B60E07C9FD1C2055E3"].code_classname == "_encstr_AB440F9BD8932D071DAFB3CA435A3663B2" )
    {
        var_7[var_7.size] = var_8["_encstr_B60E07C9FD1C2055E3"];
        var_8 = scripts\engine\trace::ray_trace( var_4, var_5, var_7, var_6, 0 );
    }

    if ( var_8["_encstr_B130095358E1B3930B687D"] != 1 )
        playfx( level.conf_fx["_encstr_BCF40BEC2CB95A9B43BECEDEE6"], var_0.curorigin );
    else
    {
        playfx( level.conf_fx["_encstr_BCF40BEC2CB95A9B43BECEDEE6"], var_0.curorigin );
        playfx( level.select_stairway_spawners["_encstr_B7BA0E3FD8CBF7CA638EE71B783D5283"], var_0.curorigin );
        level thread _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::_id_14397( var_0.curorigin );
    }
}

onplayerjoinedteam( var_0 )
{
    if ( !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        return;

    foreach ( var_2 in level.dogtags )
    {
        if ( isdefined( var_2.attackerteam ) )
        {
            if ( var_0.team == var_2.attackerteam )
                var_2.visuals[0] showtoplayer( var_0 );

            if ( var_0.team == "_encstr_A68C0A5803A5D151A2B310A6" && var_2.attackerteam == "_encstr_BC850785638DA59537" )
                var_2.visuals[0] showtoplayer( var_0 );
        }

        if ( isdefined( var_2.ownerteam ) )
        {
            if ( var_0.team == var_2.ownerteam )
                var_2.visuals[1] showtoplayer( var_0 );

            if ( var_0.team == "_encstr_A68C0A5803A5D151A2B310A6" && var_2.ownerteam == "_encstr_BC850785638DA59537" )
                var_2.visuals[1] showtoplayer( var_0 );
        }
    }
}

showtoteam( var_0, var_1 )
{
    self hide();

    foreach ( var_3 in level.players )
    {
        if ( var_3.team == var_1 )
            self showtoplayer( var_3 );

        if ( var_3.team == "_encstr_A68C0A5803A5D151A2B310A6" && var_1 == "_encstr_BC850785638DA59537" )
            self showtoplayer( var_3 );
    }
}

playercanusetags( var_0 )
{
    return 1;
}

onuse( var_0 )
{
    if ( !playercanusetags( var_0 ) )
        return;

    if ( isdefined( var_0.owner ) )
        var_0 = var_0.owner;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9E91056EB77B0E" )
        var_0 thread watchrapidtagpickup();

    if ( var_0.pers["_encstr_89EF05D46BA8FD"] == self.victimteam )
    {
        if ( istrue( level.setplayerselfrevivingextrainfo ) )
            self.trigger playsound( "_encstr_8CFD1C4251CFE72031DA3F28664A681AE1EFED727F3BE812580E1BA968D0" );
        else
            self.trigger playsound( "_encstr_AA8719892F41BAB101722EF8D35624D028F9196119F2618862364A" );

        var_0 scripts\mp\utility\stats::incpersstat( "_encstr_954E074A20D55C9771", 1 );
        var_0 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_954E074A20D55C9771", var_0.pers["_encstr_954E074A20D55C9771"] );

        if ( level.numlifelimited && scripts\mp\utility\game::getgametype() != "_encstr_9DB606854E567385" )
            lifelimitedallyonuse( var_0 );
        else
            allyonuse( var_0 );

        if ( isdefined( level.dogtagallyonusecb ) && !level.gameended )
            self thread [[ level.dogtagallyonusecb ]]( var_0 );
    }
    else
    {
        if ( istrue( level.setplayerselfrevivingextrainfo ) )
            self.trigger playsound( "_encstr_AD4D1EE348E1689B9BE271F8EA9B4378858F2973C752815FF70A48A3F3A78B18" );
        else
            self.trigger playsound( "_encstr_95521BDA88B7DCA770C19387E8196F226B59D392488799FB08BE9395FF" );

        if ( scripts\mp\utility\game::getgametype() != "_encstr_9B290667C6D043EF" && scripts\mp\utility\game::getgametype() != "_encstr_8C0D05A9215D20" )
        {
            var_0 scripts\mp\utility\stats::incpersstat( "_encstr_930E0A338F20CFFF66C83A32", 1 );
            var_0 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_930E0A338F20CFFF66C83A32", var_0.pers["_encstr_930E0A338F20CFFF66C83A32"] );
        }

        if ( level.numlifelimited && scripts\mp\utility\game::getgametype() != "_encstr_9DB606854E567385" )
            lifelimitedenemyonuse( var_0 );
        else
            enemyonuse( var_0 );

        if ( isdefined( level.dogtagenemyonusecb ) && !level.gameended )
            self thread [[ level.dogtagenemyonusecb ]]( var_0 );

        var_0 scripts\cp\vehicles\vehicle_compass_cp::_id_12003();
    }

    self.victim notify( "_encstr_B4640CFC4BB0595B253052CB198D" );
    thread removetags( self.victim.guid, undefined, var_0 );
}

watchrapidtagpickup()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self notify( "_encstr_B381168BB2E52E9091577B737FC16182FB3FB90FDDE8F9DE" );
    self endon( "_encstr_B381168BB2E52E9091577B737FC16182FB3FB90FDDE8F9DE" );

    if ( !isdefined( self.recenttagcount ) )
        self.recenttagcount = 1;
    else
    {
        self.recenttagcount++;

        if ( self.recenttagcount == 3 )
            thread scripts\mp\awards::givemidmatchaward( "_encstr_AA430F8D38F0B5397207C77E17A582EFE0" );
    }

    wait 3.0;
    self.recenttagcount = 0;
}

tagteamupdater( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        self waittill( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
        thread removetags( self.guid, 1 );
    }
}

clearonvictimdisconnect( var_0 )
{
    var_0 notify( "_encstr_A291183A68C35ECB14C0A6816E5B6FE539E8A3B208BDD5AF4935" );
    var_0 endon( "_encstr_A291183A68C35ECB14C0A6816E5B6FE539E8A3B208BDD5AF4935" );
    var_0 endon( "_encstr_B4640CFC4BB0595B253052CB198D" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = var_0.guid;
    var_0 waittill( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    thread removetags( var_1, 1 );
}

ontagpickupevent( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    while ( !isdefined( self.pers ) )
        waitframe();

    thread scripts\mp\utility\points::giveunifiedpoints( var_0 );
}

lifelimitedallyonuse( var_0 )
{
    var_0.pers["_encstr_9394086A1F5F5EAD9B93"]++;
    var_0 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9394086A1F5F5EAD9B93", var_0.pers["_encstr_9394086A1F5F5EAD9B93"] );
    var_1 = [];
    var_1[var_1.size] = self.victim;
    scripts\mp\hud_message::notifyteam( "_encstr_9BF112A6525F09F135A3C1D01A8A8141A7E62595", "_encstr_8A9D13CD397D2B37596BBCBE4E59DC072CBB37AC91", self.victim );

    if ( isdefined( self.victim ) )
    {
        self.victim thread scripts\mp\hud_message::showsplash( "_encstr_A4C50D4370C7A287707B496FD659BC" );
        level notify( "_encstr_89C21442D361E8523F7B17B3CF5E0A23C019FB8DA9D0", self.victim );
        self.victim scripts\mp\utility\dialog::leaderdialogonplayer( "_encstr_BA4208CD533B40849B5B" );

        if ( !level.gameended )
            self.victim thread respawn();

        self.victim.tagavailable = undefined;
        self.victim.statusicon = "_encstr_A40101";
    }

    if ( isdefined( self.attacker ) )
        self.attacker thread scripts\mp\rank::scoreeventpopup( "_encstr_9F380C87DBC073C72BAA6BB1CFA9" );

    var_0 thread ontagpickupevent( "_encstr_9F380C87DBC073C72BAA6BB1CFA9" );

    if ( !isdefined( var_0.rescuedplayers ) )
        var_0.rescuedplayers = [];

    var_0.rescuedplayers[self.victim.guid] = 1;
}

lifelimitedenemyonuse( var_0 )
{
    if ( isdefined( self.victim ) )
    {
        self.victim thread scripts\mp\hud_message::showsplash( "_encstr_89360E4EDB711099F808289D198C4AE9" );
        level notify( "_encstr_B37F15CB8370EA10085B2FFEB1A36C620F3F1827DC4061", self.victim );
    }

    var_1 = [];
    var_1[var_1.size] = self.victim;
    scripts\mp\hud_message::notifyteam( "_encstr_9E3113F34696FF6DA9A0910A309B6597E8A77C9DD5", "_encstr_987D147FEA41B8B81F52529E3AD3E320645EE3F965F7", self.victim );

    if ( isdefined( self.victim ) )
    {
        if ( !level.gameended )
        {
            self.victim scripts\mp\utility\lower_message::setlowermessageomnvar( 2 );
            self.victim thread scripts\mp\playerlogic::removespawnmessageshortly( 3.0 );
        }

        self.victim.tagavailable = undefined;
        self.victim.statusicon = "_encstr_8A281064C54971FB03984B77305EA49A1BD5";
    }

    if ( self.attacker != var_0 )
        self.attacker thread ontagpickupevent( "_encstr_A1BA0FAFC8E2E12ED7A0B8307283B0A361" );

    var_0 thread ontagpickupevent( "_encstr_A1BA0FAFC8E2E12ED7A0B8307283B0A361" );
    var_0 scripts\mp\utility\dialog::leaderdialogonplayer( "_encstr_A1BA0FAFC8E2E12ED7A0B8307283B0A361" );
}

respawn()
{
    scripts\mp\playerlogic::incrementalivecount( self.team );
    self.alreadyaddedtoalivecount = 1;
    thread scripts\mp\playerlogic::waittillcanspawnclient();
}

allyonuse( var_0 )
{
    if ( self.victim == var_0 )
    {
        var_0 thread scripts\mp\rank::scoreeventpopup( "_encstr_BA810EEBD9C8AFCB550913770384E2CC" );
        var_0 thread scripts\mp\awards::givemidmatchaward( "_encstr_B27E111DA86025C982F7579FF738F18CE03112" );
    }
    else if ( issubstr( scripts\mp\utility\game::getgametype(), "_encstr_9E91056EB77B0E" ) )
        var_0 ontagpickupevent( "_encstr_9F380C87DBC073C72BAA6BB1CFA9" );
    else if ( scripts\mp\utility\game::getgametype() != "_encstr_9B290667C6D043EF" )
        var_0 ontagpickupevent( "_encstr_93780B638F8A4F0A55B06F0554" );
    else
    {
        var_0 ontagpickupevent( "_encstr_B4590E235A1A9FD030D2E36ABFCBFB7D" );
        var_0 playersettagcount( var_0.tagscarried + 1 );
    }

    if ( isdefined( self.attacker ) )
        self.attacker thread scripts\mp\rank::scoreeventpopup( "_encstr_93780B638F8A4F0A55B06F0554" );

    if ( isdefined( level.supportcranked ) && level.supportcranked )
    {
        if ( isdefined( var_0.cranked ) && var_0.cranked )
            var_0 scripts\mp\cranked::setcrankedplayerbombtimer( "_encstr_88840D8AA35B676DD8D9714FF128F7" );
        else
            var_0 scripts\mp\cranked::oncranked( undefined, var_0 );
    }
}

enemyonuse( var_0 )
{
    if ( issubstr( scripts\mp\utility\game::getgametype(), "_encstr_9E91056EB77B0E" ) )
        var_0 ontagpickupevent( "_encstr_A1BA0FAFC8E2E12ED7A0B8307283B0A361" );
    else
        var_0 ontagpickupevent( "_encstr_B4590E235A1A9FD030D2E36ABFCBFB7D" );

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9B290667C6D043EF" )
        var_0 playersettagcount( var_0.tagscarried + 1 );

    if ( self.attacker != var_0 )
    {
        if ( scripts\mp\utility\game::getgametype() == "_encstr_9B290667C6D043EF" )
            self.attacker thread ontagpickupevent( "_encstr_81D516572D7322A4417932FC31E0ECBAD3DF93E7F7AA5B88" );
        else
            self.attacker thread ontagpickupevent( "_encstr_9BD713076F08C2D2D039159FF0B8375BFB879FF7F1" );
    }

    if ( isdefined( level.supportcranked ) && level.supportcranked )
    {
        if ( isdefined( var_0.cranked ) && var_0.cranked )
            var_0 scripts\mp\cranked::setcrankedplayerbombtimer( "_encstr_97D70583536853" );
        else
            var_0 scripts\mp\cranked::oncranked( undefined, var_0 );

        if ( var_0 != self.attacker && isdefined( self.attacker.cranked ) && self.attacker.cranked )
            self.attacker scripts\mp\cranked::setcrankedplayerbombtimer( "_encstr_97D70583536853" );
    }
}

playersettagcount( var_0 )
{
    self.tagscarried = var_0;
    self.game_extrainfo = var_0;

    if ( var_0 > 999 )
        var_0 = 999;

    self setclientomnvar( "_encstr_B2730E373370AAAA98CDDF693BA0C7A3", var_0 );
}
