// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    var_0 = getdvarint( "_encstr_BE9C0BCC55174365D31941E829" ) && !getdvarint( "_encstr_B3390BA3091FD489090E7A2219" );

    if ( var_0 )
        level.unset_relic_laststandmelee = getdvarint( "_encstr_B7921B171FEE21B9B809E76E2359FFABC89BDBC3AF9F3B4180119F761B", 0 );

    var_1[0] = scripts\mp\utility\game::getgametype();
    var_1[var_1.size] = "_encstr_BC7205C8ABFDE7";

    if ( istrue( level.unset_relic_laststandmelee ) )
        var_1[var_1.size] = "_encstr_BD19047616EB";

    scripts\mp\gameobjects::main( var_1 );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 600 );
        scripts\mp\utility\dvars::setoverridewatchdvar( "_encstr_95FB0B239728CACF6948BAE2F3", 0 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
    }

    updategametypedvars();
    level.packclientmatchdata = 0;
    level.packedbits = getdvarint( "_encstr_B1B91DB3E9BEF7D4E055C5CB5941DB776941099AD09E8B0F6067FDEF0FE8E2", 20 );
    level.ignorekdrstats = 1;
    level.didhalfscorevoboost = 0;
    thread waitthensetstatgroupreadonly();
    level.teambased = 1;
    level.supportintel = 0;
    level.disableforfeit = 1;
    level.nobuddyspawns = 1;
    level.onstartgametype = ::onstartgametype;
    level.onplayerconnect = ::onplayerconnect;
    level.modeonspawnplayer = ::onspawnplayer;
    level.getspawnpoint = ::getspawnpoint;
    level.onplayerkilled = ::onplayerkilled;
    level.onnormaldeath = ::onnormaldeath;
    level.ondeadevent = ::ondeadevent;
    level.ontimelimit = ::ontimelimit;
    level.bypassclasschoicefunc = ::alwaysgamemodeclass;
    level.battle_tracks_stopbattletracksforplayer = ::steam_fx_off;
    level.playgotinfectedsoundcount = ::playgotinfectedsoundcount;

    if ( istrue( level.setplayerselfrevivingextrainfo ) )
        level.modifyplayerdamage = scripts\mp\damage::gamemodemodifyplayerdamage;

    level.disablecopycatloadout = 1;
    setomnvar( "_encstr_80D613D5A5D7AD5A631B8DC2B5AFD8DE0E97D8B047", 0 );
    level.steam_damaged = getdvarint( "_encstr_BD6B1322E3F3E94790BEE71879A775438FA850DCDA", 0 );
    level.steam_damage_players = getdvarint( "_encstr_B9F617283FC2467B4207253E9B89B9482BCF28488F57380DBA", 0 );
    level._id_12052 = getdvarint( "_encstr_BD3721AFC76BE01836C7C9016BDFF0A062171D1B23D3B37051DA729813CD50E66A8BF3", 0 );

    if ( level.unset_relic_laststandmelee )
    {
        var_2 = scripts\cp_mp\utility\game_utility::getmapname();

        switch ( var_2 )
        {
            case "_encstr_A828101D4BB932AA0CFBE3EFCB3D52A7D033":
            case "_encstr_8F6510D07B074FE0B505AB85315F1080BF63":
            case "_encstr_B2060EAD0EEBD8852FF6B3564EAF9DEE":
            case "_encstr_821E0F154F9EFBB5B548CB42D889E1B7F3":
            case "_encstr_983F0AD60EBECC2C4E5BE619":
            case "_encstr_B9880C60CB570BDFDBEBF64807A3":
            case "_encstr_B3D20DBDF726539E25D0838F595753":
            case "_encstr_B7920F6F397892BF7008A36D43D0C7FAC4":
            case "_encstr_AA240B913AD1C3B379DB98C832":
                scripts\cp_mp\parachute::initparachutedvars();
                break;
            default:
                break;
        }

        if ( !isdefined( scripts\cp_mp\utility\game_utility::getlocaleid() ) )
        {
            switch ( var_2 )
            {
                case "_encstr_B7920F6F397892BF7008A36D43D0C7FAC4":
                    setdvar( "_encstr_A9940D2F27E629B4A8A19EA519E1E4", 6 );
                    break;
                case "_encstr_AA240B913AD1C3B379DB98C832":
                    setdvar( "_encstr_A9940D2F27E629B4A8A19EA519E1E4", 5 );
                    break;
                case "_encstr_983F0AD60EBECC2C4E5BE619":
                case "_encstr_B3D20DBDF726539E25D0838F595753":
                    setdvar( "_encstr_A9940D2F27E629B4A8A19EA519E1E4", 9 );
                    break;
                case "_encstr_B9880C60CB570BDFDBEBF64807A3":
                    setdvar( "_encstr_A9940D2F27E629B4A8A19EA519E1E4", 3 );
                    break;
                case "_encstr_821E0F154F9EFBB5B548CB42D889E1B7F3":
                    setdvar( "_encstr_A9940D2F27E629B4A8A19EA519E1E4", 4 );
                    break;
                case "_encstr_B3FB0A309BE727E0D4F143A9":
                    setdvar( "_encstr_A9940D2F27E629B4A8A19EA519E1E4", 17 );
                    break;
                case "_encstr_8F6510D07B074FE0B505AB85315F1080BF63":
                    setdvar( "_encstr_A9940D2F27E629B4A8A19EA519E1E4", 18 );
                    break;
                case "_encstr_B2060EAD0EEBD8852FF6B3564EAF9DEE":
                    setdvar( "_encstr_A9940D2F27E629B4A8A19EA519E1E4", 10 );
                    break;
                case "_encstr_A828101D4BB932AA0CFBE3EFCB3D52A7D033":
                    setdvar( "_encstr_A9940D2F27E629B4A8A19EA519E1E4", 19 );
                    break;
                default:
                    setdvar( "_encstr_A9940D2F27E629B4A8A19EA519E1E4", 0 );
            }
        }

        var_3 = 5000;

        if ( scripts\cp_mp\utility\game_utility::unlink_on_ai_death() )
            var_3 = 5000;
        else
        {
            switch ( var_2 )
            {
                case "_encstr_821E0F154F9EFBB5B548CB42D889E1B7F3":
                case "_encstr_983F0AD60EBECC2C4E5BE619":
                case "_encstr_B9880C60CB570BDFDBEBF64807A3":
                case "_encstr_B3D20DBDF726539E25D0838F595753":
                case "_encstr_B7920F6F397892BF7008A36D43D0C7FAC4":
                case "_encstr_AA240B913AD1C3B379DB98C832":
                    var_3 = 5000;
                    break;
                default:
                    var_3 = 5000;
            }
        }

        level.steam_fx_on = var_3;
        level.brmini_playerwelcomesplashes = getdvarint( "_encstr_AFBA233FA1026FCCA05D1D101BEFF36894D751974B41D204588F91C3F371E2D23EE2D7485B", 0 );
        level._id_133F8 = getdvarint( "_encstr_9F79276E36C9F596E6332BD81DD79BB62F11D2B3CAD3CD2AC2D852CDDC954E4728C6C2C6B2D656CD47", 1 );
        level.brking_initfeatures = getdvarint( "_encstr_A45F2437B35231737BDA19C1E3E73FE06D07B7EF5378314B3382D50BCB33E7A84663312BD427", 0 );
        level._id_122FF = ::_id_122FF;
        level._id_13A06 = ::_id_13A06;
    }

    game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_9F2B12FC169A83CB39FB18D18776C1CBC2FB65F5";

    if ( getdvarint( "_encstr_B8020A9E9AA69A6292517AA0" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_891904A1D8BE" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];

    game["_encstr_B8DA073D799798C7C7"]["_encstr_A1B206E238A5E3F5"] = "_encstr_A9CE0F89BDBDE63ABE2DDC66591BA35991";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9E240C10CE33016D6AEA39B0F244"] = "_encstr_A9CE0F89BDBDE63ABE2DDC66591BA35991";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B3420C3D576AC3C8736F09906BB2"] = "_encstr_A9CE0F89BDBDE63ABE2DDC66591BA35991";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_ADBA0F08C2BBAD1B0B75C1BF9EB4706E1B"] = "_encstr_ADBA0F08C2BBAD1B0B75C1BF9EB4706E1B";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9F51148057687B031B183992C87BFD7F66C6130F7691"] = "_encstr_9CA2188C900BE5BAABFFDC06EB67A00ABB0B3B309510AB8A1D80";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_8CB8174CB3C0FFBB305FAF752B84ABBD65B9F3290766AD806A"] = "_encstr_941F1AB4F05D1D19FB1071D10B6310AAB3FF2B381DABEB67F6812943";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_8C6D135A9B66CAD8E85619BEC62C9B3AC2635AB356"] = "_encstr_8C6D135A9B66CAD8E85619BEC62C9B3AC2635AB356";
}

waitthensetstatgroupreadonly()
{
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    wait 1;

    if ( isdefined( level.playerstats ) )
    {
        scripts\mp\playerstats_interface::makeplayerstatgroupreadonly( "_encstr_B31904673AAB" );
        scripts\mp\playerstats_interface::makeplayerstatgroupreadonly( "_encstr_9E6807D8F69BCD599B" );
        scripts\mp\playerstats_interface::makeplayerstatgroupreadonly( "_encstr_9EFF08203FF61C4FBB5A" );
    }
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_9ECD1EEB26DBEFD455B02A42C8DFCD9F908B4E79C5C05FDD23E8E23A48D14793", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_A45D130DA59581F067FB988162BFB8B02F0BB1835C" ) );
    setdynamicdvar( "_encstr_B82821B936E4D79637CCACB11DD7BBCAC238DE73D4EA279D969DED39822796DA85392F", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_B9DD16EEAC2C38B7DC35BA39CEA5D9B739A04E2DDA2C3997" ) );
    setdynamicdvar( "_encstr_BAD123F8EF12B68BB2D7F58E2BD9CFB9693B90A887CDEB7DEAFBF80ECA522F20DE0378C0D7", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_95E41878929E29206B8B65DE865FCBCF82191050AAF549B963B9" ) );
    setdynamicdvar( "_encstr_97D51A9B56AB9F8405E09AF2180FBD0F034B110CE693E38BD358229B", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_A1100F7DB31DC22BAA82BB808B280B6882" ) );
    setdynamicdvar( "_encstr_A2F21C7FB743A9E063336FA6C387A37002BB8036411BF6E3C2F0B1731028", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_A28E1129B1DF1BE78ABAF46998B256D8B31042" ) );
    setdynamicdvar( "_encstr_BC8119EF386B77BAED04679E75E7530573A053E710839662E5A8AA", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_9F7D0E6E57C1562735AB939D5A9D7B27" ) );
    setdynamicdvar( "_encstr_B7B81C50FA526FF86386555E8C7F63F33A62D0C933EA65B06BA7E6DD6797", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_8799116BD390AFB2913DB30B27F388AB190C10" ) );
    setdynamicdvar( "_encstr_AD741FFB4EEA612B42337B7F13396CC891E2E0D07C2E60D54A4309257F22BFB831", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_8B2014EF3ACE13B71564B81E833063F9DEF8FDAB9391" ) );
    setdynamicdvar( "_encstr_9DD521AA19E02FFA50ADCFDFA190434D10032575F4B8DEF23E912FDFF7A01A84C8EBD8", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_980616BB59B038F6B952B9339536E8D4CA6CEDCD192C932F" ) );
    setdynamicdvar( "_encstr_8F6218134AB3D838F50EAB9F2491589DF3922978706B8C804EF4", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_9F040D532BE55AB9B0E45D2719B0D4" ) );
    setdynamicdvar( "_encstr_A8051A06A30B2E1B55B2F0F8AB21E921975C83F639DB544D3FEAC848", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_8BF50F7387B76BC85EAF19FB0D382B4730" ) );
    setdynamicdvar( "_encstr_8FDE2010BA122FB823C6151ECCBF2313BEF37860B0AD9BD3D7E9A99FA24FA8E3A2CB", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_A8A01517AB687AD7585C9A12032327B5392DB1853B9840" ) );
    setdynamicdvar( "_encstr_BA5A22378D27F596CD335636E8EBEEAC2C0EDBDC92DCB4D15AC2C635AC8D7B739158275E", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_951117C0EF197BAF8A3468E353D2FBA0738718885BB4914D03" ) );
    setdynamicdvar( "_encstr_B32817CB7726F7CF482ECB177329BBEB1B2D28C425A195F733", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_B9070CCDBA38B22729E699CA1BE8" ) );
    setdynamicdvar( "_encstr_BA7C1A2A461D0969C838879780C64B13B1EDF22CB86DE2AB5351D79F", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_8BAE0FB3D3F7A793D95AB3A857DB09B048" ) );
    setdynamicdvar( "_encstr_A4C822CDB193D7D27399B21BE8D7D273CC95B11D8A3C1D4E162AD2DAAC0A5927D2961BC6", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_B94017B8408D6F4F4337B870AB98C148B8DFBADD63E85B5863" ) );
    setdynamicdvar( "_encstr_A6C01EB9B127EB5ACDCC56B13AEBCDBA27EC96CEED270AB1D2B395A98D7BC9B2", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_95C5139B5DAB3B8435A8EBD0D8633B0FE7CE1F12FD" ) );
    setdynamicdvar( "_encstr_AFD01DEEEB53AFF35A961A66EBA90B13B84409AB8702DE02CA861A715AED0D", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_9418124BD3465BDC384FEAF36FC8225FFDC82252" ) );
    setdynamicdvar( "_encstr_BC8320EF386B77BAED04679E75E7530533383F73C083B3C2D7266F5AD565D9D1B9A8", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_8FC11572432A239ADB3F7A9FB35F8BBFB11BC3DFD122EF" ) );
    setdynamicdvar( "_encstr_BE461D6EC64EF54B73CCACB1A3F5A57399CA1B47A98EE4B20BAD48F6E65DE6", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_971B12A53733598D1DD48E27590BB5127B9BD5E6" ) );
    setdynamicdvar( "_encstr_A62021835EA397BC3DE882FA6007F71BB9B6140DF388AB47CF508A8209752ED750AD72", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_BE3B1637481F76F1D5C3482A273A75A72751CB970A330A4E" ) );
    setdynamicdvar( "_encstr_B88516B076B209C0D683F7E0D128897B573D50BF48D075C7", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_9D500BCAE6B04C365928B437D9" ) );
    setdynamicdvar( "_encstr_9CD91B66832B0E3B7592D0184BC1EF2DE32D7DC23733172312DBF8B0C2", getmatchrulesdata( "_encstr_828E0B2BCE3B096FB3F0B060DA", "_encstr_A2DB10A7EB0C626471CC8503249988FA640D" ) );
    setdynamicdvar( "_encstr_A821105780D3FFE3631FED69F41D9B91FB28", 0 );
    setdynamicdvar( "_encstr_89DF13C6E34B6E5B15F2B0B8EB612183678540357D", 0 );
}

onstartgametype()
{
    setclientnamemode( "_encstr_95900C2EDBD01F99D6B1DFEB878D" );

    foreach ( var_1 in level.teamnamelist )
    {
        scripts\mp\utility\game::setobjectivetext( var_1, &"_encstr_B69E12A733989D591C1C9FF5B25F31A0F0B73769" );

        if ( level.splitscreen )
            scripts\mp\utility\game::setobjectivescoretext( var_1, &"_encstr_B69E12A733989D591C1C9FF5B25F31A0F0B73769" );
        else
            scripts\mp\utility\game::setobjectivescoretext( var_1, &"_encstr_B25E18C77DD2A0B349CC4B87A7BAF148BC1B8F23DFE608678155" );

        scripts\mp\utility\game::setobjectivehinttext( var_1, &"_encstr_975417FF8EE4BF7609D1F1D819273C5B9DE57B7CB80CD74D61" );
    }

    initspawns();
    level.quickmessagetoall = 1;
    level.blockweapondrops = 1;
    level.infect_allowsuicide = 0;
    level.infect_skipsounds = 0;
    level._id_12738 = 0;
    level.infect_chosefirstinfected = 0;
    level.infect_choosingfirstinfected = 0;
    level.infect_awardedfinalsurvivor = 0;
    level.infect_countdowninprogress = 0;
    level.infect_teamscores["_encstr_BA840579D3F7F6"] = 0;
    level.infect_teamscores["_encstr_BC850785638DA59537"] = 0;
    level.infect_players = [];
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_BD2710D9CAA1A58DC6B27D1BDEAD07586EE6", "_encstr_A62618BFFBAAE5630CFED9B7DCE3D0967257793FB3C2A7E025CA", ::_id_14124 );

    if ( istrue( level.unset_relic_laststandmelee ) )
    {
        _encstr_8CD91D80976A38F14BDA6841F21617E1AD27A358431533172282B1F80F8B67::monitordriverexitbutton();
        thread superselectonunset();
        thread _id_119D8();
    }

    if ( scripts\mp\utility\game::matchmakinggame() )
    {
        level.droptime = getdvarint( "_encstr_B93F146828A5875BC5BBFFC8CB694090A88BBBD1800A", 30 );

        if ( level.droptime > 0 )
            level thread _id_129FB();
    }
}

updategametypedvars()
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
    level.numinitialinfected = scripts\mp\utility\dvars::dvarintvalue( "_encstr_A45D130DA59581F067FB988162BFB8B02F0BB1835C", 1, 1, 9 );
    level.survivorprimaryweapon = getdvar( "_encstr_B82821B936E4D79637CCACB11DD7BBCAC238DE73D4EA279D969DED39822796DA85392F", "_encstr_9F5D13F9348AF75A5181539A089395A2D33F4765CF" );
    level.survivorsecondaryweapon = getdvar( "_encstr_BAD123F8EF12B68BB2D7F58E2BD9CFB9693B90A887CDEB7DEAFBF80ECA522F20DE0378C0D7", "_encstr_BDB31120D328E92F8A5FE7EF8B2256D2372D8B" );
    level.survivorlethal = getdvar( "_encstr_97D51A9B56AB9F8405E09AF2180FBD0F034B110CE693E38BD358229B", "_encstr_93A70F2BE25DA50ED76CD8C2E56BF639AC" );
    level.survivortactical = getdvar( "_encstr_A2F21C7FB743A9E063336FA6C387A37002BB8036411BF6E3C2F0B1731028", "_encstr_A30B11B2680B841B3E7EA7AE06036F4A5B7B8A" );
    level.survivorsuper = getdvar( "_encstr_BC8119EF386B77BAED04679E75E7530573A053E710839662E5A8AA", "_encstr_9F3A10E7E343579DC7BB57BB41A7D830AA03" );
    level._id_139BD = getdvar( "_encstr_B7B81C50FA526FF86386555E8C7F63F33A62D0C933EA65B06BA7E6DD6797", "_encstr_AABA05236DC831" );
    level.infectedprimaryweapon = getdvar( "_encstr_AD741FFB4EEA612B42337B7F13396CC891E2E0D07C2E60D54A4309257F22BFB831", "_encstr_BED80DB4BB83AFD6379633CAEBB6E0" );
    level.infectedsecondaryweapon = getdvar( "_encstr_9DD521AA19E02FFA50ADCFDFA190434D10032575F4B8DEF23E912FDFF7A01A84C8EBD8", "_encstr_9B660D018F3841EE3A23DBEE3639F0" );
    level.initialprimaryweapon = getdvar( "_encstr_8FDE2010BA122FB823C6151ECCBF2313BEF37860B0AD9BD3D7E9A99FA24FA8E3A2CB", "_encstr_9F5D13F9348AF75A5181539A089395A2D33F4765CF" );
    level.initialsecondaryweapon = getdvar( "_encstr_BA5A22378D27F596CD335636E8EBEEAC2C0EDBDC92DCB4D15AC2C635AC8D7B739158275E", "_encstr_BDB31120D328E92F8A5FE7EF8B2256D2372D8B" );
    level.infectedlethal = getdvar( "_encstr_8F6218134AB3D838F50EAB9F2491589DF3922978706B8C804EF4", "_encstr_9E2115CAB8BAB4077D8E0D93BDBBA5DCECD7B6CD4B99B2" );
    level.infectedtactical = getdvar( "_encstr_A8051A06A30B2E1B55B2F0F8AB21E921975C83F639DB544D3FEAC848", "_encstr_807E112733EB73A8A93322B141D446233D8243" );
    level.infectedsuper = getdvar( "_encstr_B32817CB7726F7CF482ECB177329BBEB1B2D28C425A195F733", "_encstr_A86C12EBDBF8A0B6610B6B6B238B73B0857591A1" );
    level.steam_dmg_trigger_think = getdvar( "_encstr_BA7C1A2A461D0969C838879780C64B13B1EDF22CB86DE2AB5351D79F", scripts\engine\utility::ter_op( level.unset_relic_laststandmelee, "_encstr_BD1811F295D1624AD6E0CFDFA1481E4B43AEBB", "_encstr_AABA05236DC831" ) );
    level.infectextratimeperkill = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_B94017B8408D6F4F4337B870AB98C148B8DFBADD63E85B5863", 30, 0, 60 );
    level.survivoralivescore = scripts\mp\utility\dvars::dvarintvalue( "_encstr_95C5139B5DAB3B8435A8EBD0D8633B0FE7CE1F12FD", 25, 0, 100 );
    level.survivorscoretime = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_9418124BD3465BDC384FEAF36FC8225FFDC82252", 30, 0, 60 );
    level.survivorscorepertick = scripts\mp\utility\dvars::dvarintvalue( "_encstr_8FC11572432A239ADB3F7A9FB35F8BBFB11BC3DFD122EF", 50, 0, 100 );
    level.infectstreakbonus = scripts\mp\utility\dvars::dvarintvalue( "_encstr_971B12A53733598D1DD48E27590BB5127B9BD5E6", 50, 0, 100 );
    level.enableinfectedtracker = scripts\mp\utility\dvars::dvarintvalue( "_encstr_BE3B1637481F76F1D5C3482A273A75A72751CB970A330A4E", 0, 0, 1 );
    level.enableping = scripts\mp\utility\dvars::dvarintvalue( "_encstr_9D500BCAE6B04C365928B437D9", 0, 0, 1 );
    level.givetkontispawn = scripts\mp\utility\dvars::dvarintvalue( "_encstr_A2DB10A7EB0C626471CC8503249988FA640D", 0, 0, 1 );
    level.stealth_broken_music = getdvarint( "_encstr_989B1C171FEE21B9B809E76E2359F16A4CBBEF83C598FA7D68B71E75DB50", 150 );
    level.stealth_broken_music_index = getdvarint( "_encstr_8BE6233F37D6198190118F164B41D942A443F7BBDDF0D255909F83DA019337BA96C1873F1D", 0 );
    level.stealth_enabled = getdvarint( "_encstr_B37F27CB92E621B070D42F767BD76912230FB973EA1075AF9F1943F8818E2438A9DB27542AD628F8CB", 0 );
    level.play_player_approach = getdvarint( "_encstr_87CC1D9B364EF5D237992BC6D1FA6696E61636D4AE9D4B67DB27687BAB73E8", 1 );
    level.steam_point_think = getdvarint( "_encstr_B80A226E36E4AFB473335936A37D37CA8E94581985C9A73727D5D64D5D27CEB467DBE4CD", 8 );
    level._id_139BC = [];
    var_0 = getdvar( "_encstr_B25A22373FCE01999829870E4339CBFBA67D27ABBF76095C8051BE145C28E5437EFB9B7F", "_encstr_A40101" );

    if ( var_0 != "_encstr_A40101" )
        level._id_139BC = strtok( var_0, "_encstr_B44C02C9" );

    var_1 = scripts\cp_mp\utility\game_utility::getmapname();

    if ( issubstr( var_1, "_encstr_871606B583EB6BAF" ) && var_1 != "_encstr_B1110BDDD007984FF3EB671D71" )
    {
        level.survivorsuper = player_give_intel_3_ks( 0, 0 );
        level._id_139BD = player_give_intel_3_ks( 0, 1 );
        level.infectedsuper = player_give_intel_3_ks( 1, 0 );
        level.steam_dmg_trigger_think = player_give_intel_3_ks( 1, 1 );
    }

    if ( level.survivorsuper == level._id_139BD )
        level._id_139BD = "_encstr_AABA05236DC831";
    else if ( level.survivorsuper == "_encstr_AABA05236DC831" && level._id_139BD != "_encstr_AABA05236DC831" )
    {
        level.survivorsuper = level._id_139BD;
        level._id_139BD = "_encstr_AABA05236DC831";
    }

    if ( level.infectedsuper == level.steam_dmg_trigger_think )
        level.steam_dmg_trigger_think = "_encstr_AABA05236DC831";
    else if ( level.infectedsuper == "_encstr_AABA05236DC831" && level.steam_dmg_trigger_think != "_encstr_AABA05236DC831" )
    {
        level.infectedsuper = level.steam_dmg_trigger_think;
        level.steam_dmg_trigger_think = "_encstr_AABA05236DC831";
    }

    thread buildandloadweapons();
}

buildandloadweapons()
{
    waitframe();

    if ( level._id_12052 )
    {
        switch ( level.survivorprimaryweapon )
        {
            case "_encstr_8AE1129F803A1F7399E04F42D7916AB9D3590703":
                level.arenaloadouts = 10;
                break;
            case "_encstr_81FC12C204E0D6297577728A88B210C417BF68B1":
                level.arenaloadouts = 7;
                break;
            case "_encstr_AA98102DDD70BEE096AFC895D80DDBBEB61C":
                level.arenaloadouts = 9;
                break;
            case "_encstr_A6D811A26C0E5E3693A1926F403A933FA713E8":
                level.arenaloadouts = 8;
                break;
            case "_encstr_8B0912ABC39FA77B7E7708983380F1BBC76111AF":
                level.arenaloadouts = 11;
                break;
            default:
                level.arenaloadouts = 7;
                break;
        }

        _encstr_8B431F9BC69CB407D19BCBD638F23B855BB21D2FC1CA9B79854E56DC8571EC9BC6::cacherandomloadouts();
        level.survivorprimaryweapon = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_87C30FC410893345733089A330AB3E9362"];
        level.survivorprimaryweapon = level.survivorprimaryweapon + "_encstr_B61A04EBB607";

        if ( game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"] != "_encstr_AABA05236DC831" )
        {
            level.survivorsecondaryweapon = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"];
            level.survivorsecondaryweapon = level.survivorsecondaryweapon + "_encstr_B61A04EBB607";
        }

        level.initialprimaryweapon = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_87C30FC410893345733089A330AB3E9362"];
        level.initialprimaryweapon = level.initialprimaryweapon + "_encstr_B61A04EBB607";

        if ( game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"] != "_encstr_AABA05236DC831" )
        {
            level.initialsecondaryweapon = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"];
            level.initialsecondaryweapon = level.initialsecondaryweapon + "_encstr_B61A04EBB607";
        }
    }

    level.allweapons = [];
    level.allweapons[level.allweapons.size] = level.survivorprimaryweapon;
    level.allweapons[level.allweapons.size] = level.survivorsecondaryweapon;
    level.allweapons[level.allweapons.size] = level.infectedprimaryweapon;
    level.allweapons[level.allweapons.size] = level.infectedsecondaryweapon;
    level.allweapons[level.allweapons.size] = level.initialprimaryweapon;
    level.allweapons[level.allweapons.size] = level.initialsecondaryweapon;
    level.survivorprimaryweapon = stripweapsuffix( level.survivorprimaryweapon );
    level.survivorsecondaryweapon = stripweapsuffix( level.survivorsecondaryweapon );
    level.infectedprimaryweapon = stripweapsuffix( level.infectedprimaryweapon );
    level.infectedsecondaryweapon = stripweapsuffix( level.infectedsecondaryweapon );
    level.initialprimaryweapon = stripweapsuffix( level.initialprimaryweapon );
    level.initialsecondaryweapon = stripweapsuffix( level.initialsecondaryweapon );

    foreach ( var_1 in level.allweapons )
    {
        if ( var_1 != "_encstr_AABA05236DC831" )
        {
            var_2 = scripts\mp\utility\weapon::getweaponrootname( var_1 );
            var_3 = [];

            if ( level._id_12052 )
            {
                if ( var_1 == level.allweapons[0] || var_1 == level.allweapons[4] )
                {
                    for ( var_4 = 1; var_4 < 6; var_4++ )
                    {
                        var_5 = var_4;

                        if ( var_4 == 1 )
                            var_5 = "_encstr_A40101";

                        var_6 = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_B44319C6DB5832DEAE3A289C965B2CC95E141DA32C36A1D65673A3" + var_5];

                        if ( var_6 != "_encstr_AABA05236DC831" )
                            var_3[var_3.size] = var_6;
                    }
                }

                if ( var_1 == level.allweapons[1] || var_1 == level.allweapons[5] )
                {
                    for ( var_4 = 1; var_4 < 6; var_4++ )
                    {
                        var_5 = var_4;

                        if ( var_4 == 1 )
                            var_5 = "_encstr_A40101";

                        var_6 = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_9D6F1B6C48D16B2D1B48D18AC817252389AEF1395DDBC7F6C968BA3218" + var_5];

                        if ( var_6 != "_encstr_AABA05236DC831" )
                            var_3[var_3.size] = var_6;
                    }
                }
            }

            if ( level.steam_damaged )
                game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_B44319C6DB5832DEAE3A289C965B2CC95E141DA32C36A1D65673A3"] = run_func_on_each_player();

            var_7 = "_encstr_AABA05236DC831";
            var_8 = "_encstr_AABA05236DC831";
            var_9 = scripts\mp\class::buildweapon( var_2, var_3, var_7, var_8 );
            var_10 = createheadicon( var_9 );
        }
    }

    level thread setspecialloadouts();
}

run_func_on_each_player()
{
    var_0 = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_87C30FC410893345733089A330AB3E9362"] + "_encstr_B61A04EBB607";
    var_1 = weaponclass( var_0 );
    level._id_14543 = var_1;
    var_2 = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_B44319C6DB5832DEAE3A289C965B2CC95E141DA32C36A1D65673A3"];

    switch ( var_1 )
    {
        case "_encstr_BE1904B9D6B3":
        case "_encstr_BE0703815F":
        case "_encstr_B453063D7FBAE9C8":
            var_3 = randomintrange( 0, 3 );

            if ( var_3 == 0 )
                var_2 = "_encstr_AFCA08A3D059276B8563";
            else if ( var_3 == 0 )
                var_2 = "_encstr_9B76095B58D38AA7213132";
            else
                var_2 = "_encstr_A20308CCFAC0A25AF5A7";

            break;
        case "_encstr_B6070748328C39712B":
            var_3 = randomintrange( 0, 3 );

            if ( var_3 == 0 )
                var_2 = "_encstr_AFCA08A3D059276B8563";
            else if ( var_3 == 0 )
                var_2 = "_encstr_9B76095B58D38AA7213132";
            else
                var_2 = "_encstr_A9B50A1D86CA93B6C28DD9A7";

            break;
        case "_encstr_A91007F0AB1AC9A31A":
            var_2 = "_encstr_AFCA08A3D059276B8563";
        case "_encstr_98080F93DBB1B556D11B85ABB936D059E4":
            break;
        case "_encstr_8A94070E2DCD8E7BB1":
            break;
        default:
            break;
    }

    return var_2;
}

stripweapsuffix( var_0 )
{
    if ( issubstr( var_0, "_encstr_871904DB7062" ) )
        var_0 = scripts\mp\utility\script::strip_suffix( var_0, "_encstr_894305D6EAFB0E" );
    else if ( issubstr( var_0, "_encstr_BD19047517E9" ) )
        var_0 = scripts\mp\utility\script::strip_suffix( var_0, "_encstr_8243053168FF7B" );
    else
        var_0 = scripts\mp\utility\script::strip_suffix( var_0, "_encstr_B61A04EBB607" );

    return var_0;
}

player_give_intel_3_ks( var_0, var_1 )
{
    if ( istrue( var_1 ) )
        var_2 = scripts\engine\utility::ter_op( var_0, level.steam_dmg_trigger_think, level._id_139BD );
    else
        var_2 = scripts\engine\utility::ter_op( var_0, level.infectedsuper, level.survivorsuper );

    switch ( var_2 )
    {
        case "_encstr_9C2F12AB6DDB47527778EAA2287F0DF7F1560F20":
        case "_encstr_945B10A37F413BB229050570FE6172C7A589":
        case "_encstr_9E5F122867C0014D5102253E5D9ACFE92AF7482B":
            var_2 = "_encstr_B4F610A33B508F1370C93A2210A8838250D9";
            break;
        case "_encstr_BD1811F295D1624AD6E0CFDFA1481E4B43AEBB":
            if ( var_0 && level.infectedtactical == "_encstr_807E112733EB73A8A93322B141D446233D8243" )
                level.infectedtactical = "_encstr_AABA05236DC831";
            else if ( level.survivortactical == "_encstr_807E112733EB73A8A93322B141D446233D8243" )
                level.survivortactical = "_encstr_AABA05236DC831";

            break;
        case "_encstr_AD2F0DD8973091DDC1331EA80A8AF3":
            if ( var_0 && level.infectedtactical == "_encstr_87870DB2E25D2DE07D1D39B7C11ACB" )
                level.infectedtactical = "_encstr_AABA05236DC831";
            else if ( level.survivortactical == "_encstr_87870DB2E25D2DE07D1D39B7C11ACB" )
                level.survivortactical = "_encstr_AABA05236DC831";

            break;
    }

    return var_2;
}

onplayerconnect( var_0 )
{
    var_0.gamemodefirstspawn = 1;
    var_0.gamemodejoinedatstart = 1;
    var_0.infectedrejoined = 0;
    var_0.waitedtospawn = 0;

    if ( !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) || level.infect_countdowninprogress )
        var_0.waitedtospawn = 1;

    var_0.pers["_encstr_9E95066E81471B5F"] = "_encstr_87AC099DB05B59ADF619AC";
    var_0.pers["_encstr_9F690A0DBF9F69AE0A510886"] = "_encstr_A40101";
    var_0.class = var_0.pers["_encstr_9E95066E81471B5F"];
    var_0.lastclass = var_0.pers["_encstr_9F690A0DBF9F69AE0A510886"];
    var_0 loadweaponsforplayer( level.allweapons, 1 );

    if ( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
    {
        var_0.gamemodejoinedatstart = 0;

        if ( isdefined( level.infect_chosefirstinfected ) && level.infect_chosefirstinfected )
            var_0.survivalstarttime = gettime();
    }

    if ( isdefined( level.infect_players[var_0.name] ) )
        var_0.infectedrejoined = 1;

    if ( isdefined( var_0.isinitialinfected ) )
        var_0.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] = level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"];
    else if ( var_0.infectedrejoined )
        var_0.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] = level.infect_loadouts["_encstr_BA840579D3F7F6"];
    else
        var_0.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] = level.infect_loadouts["_encstr_BC850785638DA59537"];

    var_0 thread monitorsurvivaltime();

    if ( level.unset_relic_laststandmelee )
        var_0 thread _id_133F7();
}

givesurvivortimescore()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        wait( level.survivorscoretime );

        foreach ( var_1 in level.players )
        {
            if ( var_1.team == "_encstr_BC850785638DA59537" )
                var_1 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_B12C099B03966BEC081FBA", undefined, level.survivorscorepertick );
        }
    }
}

initspawns()
{
    if ( scripts\cp_mp\utility\game_utility::islargemap() )
    {
        level.gamemodestartspawnpointnames = [];
        var_0 = "_encstr_A49D1919C0CF595769F348D8AB7D4FD1BB7493853B270369CE8B60";
        var_1 = "_encstr_983317825BF8C783998F70196FF841279390FB2983C597BA98";
        level.gamemodestartspawnpointnames["_encstr_BC850785638DA59537"] = var_0;
        level.gamemodestartspawnpointnames["_encstr_BA840579D3F7F6"] = var_1;
        level.gamemodespawnpointnames = [];
        level.gamemodespawnpointnames["_encstr_BC850785638DA59537"] = "_encstr_B1090D98F3211171B757B62F41F7F8";
        level.gamemodespawnpointnames["_encstr_BA840579D3F7F6"] = "_encstr_B1090D98F3211171B757B62F41F7F8";
        level.spawnmins = ( 0, 0, 0 );
        level.spawnmaxs = ( 0, 0, 0 );

        if ( scripts\cp_mp\utility\game_utility::getmapname() == "_encstr_B3FB0A309BE727E0D4F143A9" )
            scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_88B00F1D9C7B5DCD23AB0BE4A815139E4D", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );
        else if ( scripts\cp_mp\utility\game_utility::islargemap() )
            scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_B2CC0A2FF83748652B2F0E1A", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );
        else
            scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_AA1608C17786F13312D3", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );

        scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_A49D1919C0CF595769F348D8AB7D4FD1BB7493853B270369CE8B60" );
        scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_983317825BF8C783998F70196FF841279390FB2983C597BA98" );
        scripts\mp\spawnlogic::addspawnpoints( game["_encstr_941C0A6AF345075ED05BEAD3"], "_encstr_A49D1919C0CF595769F348D8AB7D4FD1BB7493853B270369CE8B60" );
        scripts\mp\spawnlogic::addspawnpoints( game["_encstr_95A70AA81FEE295D3A2F56DE"], "_encstr_983317825BF8C783998F70196FF841279390FB2983C597BA98" );
        var_2 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_A49D1919C0CF595769F348D8AB7D4FD1BB7493853B270369CE8B60" );
        var_3 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_983317825BF8C783998F70196FF841279390FB2983C597BA98" );
        scripts\mp\spawnlogic::registerspawnset( "_encstr_9303101723E2CE585F5E839B464B688D6B97", var_2 );
        scripts\mp\spawnlogic::registerspawnset( "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", var_3 );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_B1090D98F3211171B757B62F41F7F8" );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_B1090D98F3211171B757B62F41F7F8" );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
        var_4 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_B1090D98F3211171B757B62F41F7F8" );
        var_5 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997" );
        scripts\mp\spawnlogic::registerspawnset( "_encstr_930E073E8FC00DDF69", var_4 );
        scripts\mp\spawnlogic::registerspawnset( "_encstr_A30C093385361B4CB06C6D", var_5 );
    }
    else
    {
        scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_AA1608C17786F13312D3", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );
        level.spawnmins = ( 0, 0, 0 );
        level.spawnmaxs = ( 0, 0, 0 );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_B1090D98F3211171B757B62F41F7F8" );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_B1090D98F3211171B757B62F41F7F8" );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
        var_4 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_B1090D98F3211171B757B62F41F7F8" );
        var_5 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997" );
        scripts\mp\spawnlogic::registerspawnset( "_encstr_930E073E8FC00DDF69", var_4 );
        scripts\mp\spawnlogic::registerspawnset( "_encstr_A30C093385361B4CB06C6D", var_5 );
        level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
        setmapcenter( level.mapcenter );
    }
}

alwaysgamemodeclass()
{
    return "_encstr_87AC099DB05B59ADF619AC";
}

getspawnpoint()
{
    if ( isplayer( self ) && self.gamemodefirstspawn )
    {
        self.gamemodefirstspawn = 0;
        self.pers["_encstr_9E95066E81471B5F"] = "_encstr_87AC099DB05B59ADF619AC";
        self.pers["_encstr_9F690A0DBF9F69AE0A510886"] = "_encstr_A40101";
        self.class = self.pers["_encstr_9E95066E81471B5F"];
        self.lastclass = self.pers["_encstr_9F690A0DBF9F69AE0A510886"];
        var_0 = "_encstr_BC850785638DA59537";

        if ( self.infectedrejoined )
            var_0 = "_encstr_BA840579D3F7F6";

        scripts\mp\menus::addtoteam( var_0, 1 );
        thread monitordisconnect();
    }

    if ( level.ingraceperiod )
    {
        var_1 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_B1090D98F3211171B757B62F41F7F8" );
        var_2 = scripts\mp\spawnlogic::getspawnpoint_random( var_1 );
    }
    else
        var_2 = scripts\mp\spawnlogic::getspawnpoint( self, self.pers["_encstr_89EF05D46BA8FD"], "_encstr_930E073E8FC00DDF69", "_encstr_A30C093385361B4CB06C6D" );

    return var_2;
}

onspawnplayer()
{
    self.teamchangedthisframe = undefined;
    self.infect_spawnpos = self.origin;
    self.infectedkillsthislife = 0;

    if ( self.pers["_encstr_89EF05D46BA8FD"] == "_encstr_BA840579D3F7F6" )
    {
        scripts\mp\battlechatter_mp::disablebattlechatter( self );

        if ( istrue( level.unset_relic_laststandmelee ) )
            self.little_bird_mg_playerexitturret = 1;
    }

    updateteamscores();

    if ( !level.infect_choosingfirstinfected )
    {
        level.infect_choosingfirstinfected = 1;
        level thread choosefirstinfected();
    }

    if ( !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) || level.infect_countdowninprogress )
        self.waitedtospawn = 0;

    if ( self.infectedrejoined )
    {
        if ( !level.infect_allowsuicide )
        {
            level notify( "_encstr_AA45158C18E0B5FAFD7F776377A7A0E7D0A04357D09076" );
            level.infect_chosefirstinfected = 1;
            level.infect_allowsuicide = 1;

            foreach ( var_1 in level.players )
            {
                if ( isdefined( var_1.infect_isbeingchosen ) )
                    var_1.infect_isbeingchosen = undefined;
            }
        }

        foreach ( var_1 in level.players )
        {
            if ( isdefined( var_1.isinitialinfected ) )
                var_1 thread setinitialtonormalinfected();
        }

        if ( level.infect_teamscores["_encstr_BA840579D3F7F6"] == 1 )
            self.isinitialinfected = 1;

        initsurvivaltime( 1 );
    }

    thread onspawnfinished();
    thread updatematchstatushintonspawn();
    level notify( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
}

spawnwithplayersecondary()
{
    var_0 = self getweaponslistprimaries();
    var_1 = self getcurrentprimaryweapon();

    if ( var_0.size > 1 )
    {
        if ( scripts\mp\utility\weapon::isknifeonly( var_1 ) )
        {
            foreach ( var_3 in var_0 )
            {
                if ( var_3 != var_1 )
                    self setspawnweapon( var_3 );
            }
        }
    }
}

setdefaultammoclip( var_0 )
{
    var_1 = 1;

    if ( isdefined( self.isinitialinfected ) )
    {
        if ( scripts\mp\utility\game::isusingdefaultclass( var_0, 1 ) )
            var_1 = 0;
    }
    else if ( scripts\mp\utility\game::isusingdefaultclass( var_0, 0 ) )
        var_1 = 0;

    return var_1;
}

onspawnfinished()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self waittill( "_encstr_B8030CCE4B3B2B627B8523DEBAD1" );

    if ( istrue( self.waitedtospawn ) )
    {
        self.waitedtospawn = 0;
        self._id_13968 = 1;
        wait 0.1;
        self suicide();
    }

    self.last_infected_class = self.infected_class;

    if ( self.pers["_encstr_89EF05D46BA8FD"] == "_encstr_BC850785638DA59537" )
    {
        if ( level.enableping )
            scripts\mp\utility\perk::giveperk( "_encstr_AB370F87A332D620116DF3AA59FAD8186A" );

        if ( level.unset_relic_laststandmelee )
            thread searchfortarget();

        spawnwithplayersecondary();

        if ( level.steam_damaged && !level.steam_damage_players && !isbot( self ) )
            thread _id_11F4B();
    }
    else if ( self.pers["_encstr_89EF05D46BA8FD"] == "_encstr_BA840579D3F7F6" )
    {
        if ( istrue( level.setplayerselfrevivingextrainfo ) )
        {
            self detachall();
            self setmodel( "_encstr_B62012F96B54580EB2DBA3E78B9AC190F9C74691" );
            self setviewmodel( "_encstr_AFE111F8FF1769A5EAEA801AC5C2CDD0959FD8" );

            if ( getdvarint( "_encstr_826919575FAE61F9F84927AEE399303B90C5979BBFD44ABBF8701D", 1 ) == 1 )
                thread _id_126FF();

            self playlocalsound( "_encstr_9B41177040F8B7C2E613571B11186AC1E009A17F1B38408A30" );
            self.unset_relic_steelballs = 1;
        }

        if ( istrue( level.brking_initfeatures ) )
            self skydive_cutparachuteoff();

        if ( level.enableping )
            scripts\mp\utility\perk::giveperk( "_encstr_AB370F87A332D620116DF3AA59FAD8186A" );

        var_0 = 1.05;

        if ( !level.unset_relic_laststandmelee )
        {
            var_1 = int( floor( level.infect_teamscores["_encstr_BA840579D3F7F6"] / 3 ) );
            var_1 = var_1 * 0.01;
            var_0 = max( 1.0, var_0 - var_1 );
        }

        self.overrideweaponspeed_speedscale = var_0;
        thread setinfectedmsg();

        if ( level.infectedtactical == "_encstr_807E112733EB73A8A93322B141D446233D8243" && !istrue( self.isinitialinfected ) )
        {
            if ( level.givetkontispawn || !level.givetkontispawn && !self.ti_spawn )
                scripts\mp\equipment::giveequipment( level.infectedlethal, "_encstr_987F080E394BDAC2E45E" );
            else
                scripts\mp\equipment::decrementequipmentammo( level.infectedlethal, 1 );
        }

        if ( level.infectedtactical != "_encstr_807E112733EB73A8A93322B141D446233D8243" || level.infectedtactical == "_encstr_AABA05236DC831" )
            scripts\mp\equipment::giveequipment( level.infectedtactical, "_encstr_B98F0AC7D5B99F4DDBA8353B" );
        else
            scripts\mp\utility\perk::giveperk( "_encstr_81901C807B993F72F1900571D10C486E4DEB4829113B4E6A38BA74F94702" );
    }

    giveextrainfectedperks();

    if ( istrue( self._id_11D9E ) )
    {
        if ( !level.unset_relic_laststandmelee || level.unset_relic_laststandmelee && level.mapname == "_encstr_B3FB0A309BE727E0D4F143A9" )
            self._id_11D9E = undefined;

        thread scripts\mp\supers::givesuperpoints( 350, undefined, 1 );
    }

    if ( istrue( level.setplayerselfrevivingextrainfo ) )
    {

    }
    else
    {
        var_2 = scripts\mp\utility\weapon::getweaponrootname( self.loadoutprimary );

        if ( var_2 != "_encstr_8F610A500B9AD828F501AD93" )
        {
            var_3 = getcompleteweaponname( "_encstr_A6BB11E88FA23FAA7BCCC6D996433B6249AD7B" );
            self giveweapon( var_3 );
            self assignweaponmeleeslot( var_3 );

            if ( self.loadoutsecondary == "_encstr_8F610A500B9AD828F501AD93" )
            {
                scripts\cp_mp\utility\inventory_utility::takeweaponwhensafe( "_encstr_BED80DB4BB83AFD6379633CAEBB6E0" );
                self giveweapon( "_encstr_BED80DB4BB83AFD6379633CAEBB6E0" );
            }
        }
    }

    self.faux_spawn_infected = undefined;

    if ( istrue( self.updatearenaomnvardata ) )
    {
        self.updatearenaomnvardata = undefined;
        thread scripts\cp_mp\parachute::stop_restock_recharge( 1 );
    }

    thread scripts\mp\supers::givesuperpoints( level.stealth_broken_music_index, undefined, 1 );
    thread _id_14399();
}

_id_126FF()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_827F0D381AB535D86F5FBD386BB7A3" );
    self setscriptablepartstate( "_encstr_AA9108994991F173B8B9", "_encstr_87C10DD210082BC453211AB330AFFD" );
    waitframe();

    if ( getdvarint( "_encstr_A6541AB96CE47D98C9EBA7C31CBE1BB77BE0D7F47BAD98D2597DCC1E", 1 ) )
        self setscriptablepartstate( "_encstr_98CB0755CFC5882307", "_encstr_956E08DE9B7DB1BDDE38" );
    else
        self setscriptablepartstate( "_encstr_98CB0755CFC5882307", "_encstr_9707035F3B" );
}

_id_14399()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    wait 0.2;

    if ( istrue( level.setplayerselfrevivingextrainfo ) && self.team == "_encstr_BA840579D3F7F6" )
        self _meth_87A9( "_encstr_98CB0755CFC5882307" );
    else if ( isdefined( self.operatorcustomization.gender ) && self.operatorcustomization.gender == "_encstr_BD290799CAB585B156" )
        self _meth_87A9( "_encstr_BD290799CAB585B156" );
    else
        self _meth_87A9( "_encstr_A40101" );
}

searchfortarget()
{
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    thread scripts\mp\supers::givesuperpoints( 200, undefined, 1 );
}

managefists( var_0, var_1 )
{
    if ( var_0 != "_encstr_9BED0AA307609154C76BDB23" || var_1 != "_encstr_9BED0AA307609154C76BDB23" )
    {
        if ( var_0 == "_encstr_AABA05236DC831" && var_1 == "_encstr_AABA05236DC831" )
            return;

        scripts\cp_mp\utility\inventory_utility::takeweaponwhensafe( "_encstr_9B660D018F3841EE3A23DBEE3639F0" );
        return;
    }
}

giveextrainfectedperks()
{
    if ( self.pers["_encstr_89EF05D46BA8FD"] == "_encstr_BC850785638DA59537" )
        var_0 = [ "_encstr_B9FE151A83CF7E72792BC5D85FBB632B045BEBE0AF06AA" ];
    else if ( istrue( self.isinitialinfected ) )
        var_0 = [ "_encstr_ABC6174BF8B3AED741511421E0C887B5EF3823C36035E4131B", "_encstr_9E29141ED83FC163EE7A60CB218203D88F7B2D16218F", "_encstr_8B6D15CD8395D85A0B1B3AF2FA662C8DC6460B6B2CD995", "_encstr_A9C919B7201750F3C7FABB02D193B560ED8D310BDB7E3846EF6212", "_encstr_B1AC14370756C62D581B1D97FA5CD5A5366DB9EEB007" ];
    else
        var_0 = [ "_encstr_ABC6174BF8B3AED741511421E0C887B5EF3823C36035E4131B", "_encstr_9E29141ED83FC163EE7A60CB218203D88F7B2D16218F", "_encstr_8B6D15CD8395D85A0B1B3AF2FA662C8DC6460B6B2CD995" ];

    foreach ( var_2 in var_0 )
        scripts\mp\utility\perk::giveperk( var_2 );
}

setinfectedmodels()
{

}

setinfectedmsg()
{
    if ( isdefined( self.isinitialinfected ) )
    {
        if ( !isdefined( self.showninfected ) || !self.showninfected )
        {
            thread scripts\mp\rank::scoreeventpopup( "_encstr_BD800F9E2B6822D3A820F27A899EEB1F70" );
            self.showninfected = 1;
        }
    }
    else if ( isdefined( self.changingtoregularinfected ) )
    {
        self.changingtoregularinfected = undefined;

        if ( isdefined( self.changingtoregularinfectedbykill ) )
        {
            self.changingtoregularinfectedbykill = undefined;
            thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_BD800F9E2B6822D3A820F27A899EEB1F70" );
        }
    }
    else if ( !isdefined( self.showninfected ) || !self.showninfected )
    {
        thread scripts\mp\rank::scoreeventpopup( "_encstr_A69C0D4F207169C9689827376061BC" );
        self.showninfected = 1;
    }
}

choosefirstinfected()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_AA45158C18E0B5FAFD7F776377A7A0E7D0A04357D09076" );
    level endon( "_encstr_B8270A33F6E4D856AFACCD32" );
    level.infect_allowsuicide = 0;
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    level.infect_countdowninprogress = 1;
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 1.0 );
    setomnvar( "_encstr_B87014CB57B91FA28B9B0B7766414F662B69F3025BCB", "_encstr_A69F120F237DABD44EE00B23E8A1ACB239505485" );
    var_0 = 15;

    while ( var_0 > 0 && !level.gameended )
    {
        foreach ( var_2 in level.players )
            var_2 setclientomnvar( "_encstr_B4A919A51461E3C1316EA8C703FDC9E8DDA96E6AABB5A16FE7B410", var_0 );

        var_0--;
        scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 1.0 );
    }

    setomnvar( "_encstr_B87014CB57B91FA28B9B0B7766414F662B69F3025BCB", "_encstr_81C0121FA023D3320706DB96EE097A96E9E9878B" );

    foreach ( var_2 in level.players )
        var_2 setclientomnvar( "_encstr_B4A919A51461E3C1316EA8C703FDC9E8DDA96E6AABB5A16FE7B410", 0 );

    level.infect_countdowninprogress = 0;
    var_6 = [];

    foreach ( var_8 in level.players )
    {
        if ( scripts\mp\utility\game::matchmakinggame() && level.players.size > 1 && var_8 ishost() )
            continue;

        if ( var_8.team == "_encstr_A68C0A5803A5D151A2B310A6" )
            continue;

        if ( !var_8.hasspawned )
            continue;

        var_6[var_6.size] = var_8;
    }

    level.player_damage_blood = 0;

    if ( var_6.size <= level.numinitialinfected && var_6.size > 1 )
        level.numinitialinfected = var_6.size - 1;

    var_10 = [];

    for ( var_11 = 0; var_11 < level.numinitialinfected; var_11++ )
    {
        var_12 = var_6[randomint( var_6.size )];
        var_10[var_10.size] = var_12;
        var_6 = scripts\engine\utility::array_remove( var_6, var_12 );
    }

    foreach ( var_12 in var_10 )
        var_12 setfirstinfected( 1 );

    level.infect_allowsuicide = 1;

    foreach ( var_8 in level.players )
    {
        if ( istrue( var_8.isinitialinfected ) )
        {
            var_8 thread scripts\mp\hud_message::showsplash( "_encstr_BD800F9E2B6822D3A820F27A899EEB1F70" );
            var_8 scripts\mp\utility\dialog::leaderdialogonplayer( "_encstr_ADBA0F08C2BBAD1B0B75C1BF9EB4706E1B" );
            continue;
        }

        var_8 thread scripts\mp\hud_message::showsplash( "_encstr_9EA60F2D47C35E48AF2A534B937190981B" );
        var_8.survivalstarttime = gettime();
    }
}

setfirstinfected( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( var_0 )
        self.infect_isbeingchosen = 1;

    while ( !scripts\mp\utility\player::isreallyalive( self ) || scripts\mp\utility\player::isusingremote() || isdefined( self._id_1425D ) )
        waitframe();

    if ( isdefined( self.iscarrying ) && self.iscarrying == 1 )
    {
        self notify( "_encstr_A97817572058AB92107F371367254ADFF0E80E9E9948751ADD" );
        waitframe();
    }

    var_1 = scripts\cp_mp\utility\player_utility::getvehicle();

    if ( isdefined( var_1 ) )
    {
        var_2 = spawnstruct();
        var_2.allowairexit = 1;
        var_2.onprematchfadedone2 = "_encstr_95690CE1806F9F8D33E1C990E9C3";
        thread scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_exit( var_1, undefined, self, var_2, 1 );

        while ( scripts\cp_mp\utility\player_utility::isinvehicle() )
            waitframe();
    }

    while ( self ismantling() )
        waitframe();

    while ( !isalive( self ) )
        waitframe();

    while ( istrue( self.usingascender ) )
        waitframe();

    if ( var_0 )
    {
        scripts\mp\menus::addtoteam( "_encstr_BA840579D3F7F6", undefined, 1 );
        thread monitordisconnect();
        level.infect_chosefirstinfected = 1;
        self.infect_isbeingchosen = undefined;
        updateteamscores();

        if ( scripts\mp\utility\player::isfemale() )
            self playlocalsound( "_encstr_BC1815EBD858A7DAE5B5560B2BFBD227A648FFAB2831C2" );
        else
            self playlocalsound( "_encstr_AA2011B96A9DF0C582AFCDD75F0A85E0240723" );

        thread scripts\mp\music_and_dialog::stealthtimeelapsed();
    }

    self.isinitialinfected = 1;
    scripts\mp\utility\stats::incpersstat( "_encstr_BC8F0E6F431DCB742C788B8F38A35D02", 1 );
    self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] = level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"];
    scripts\mp\equipment\tac_insert::_id_13684( self.origin, self.angles );
    self notify( "_encstr_A1D70BDE071B53794F208AE3F8" );
    self.faux_spawn_stance = self getstance();
    self.faux_spawn_infected = 1;
    self.operatorcustomization = undefined;
    waittillframeend;
    thread scripts\mp\playerlogic::spawnplayer( 1 );

    if ( isdefined( scripts\mp\supers::getcurrentsuper() ) && scripts\mp\supers::getcurrentsuperref() == "_encstr_A86C12EBDBF8A0B6610B6B6B238B73B0857591A1" )
        thread _id_1383E();
    else if ( level.unset_relic_laststandmelee )
        thread scripts\mp\supers::givesuperpoints( 350, undefined, 1 );

    if ( var_0 )
        level.infect_players[self.name] = 1;

    level.player_damage_blood = 1;

    if ( !level.player_damage_blood )
        level thread scripts\mp\hud_util::teamplayercardsplash( "_encstr_AF5317D82CD8D8EDABD1F5999693E647EBA59B3356C63AAC23", self );

    if ( !level.infect_skipsounds )
    {
        scripts\mp\utility\sound::playsoundonplayers( "_encstr_AA781609B0BF6915970210191A6ED5E697490F7D2DA3D159" );
        level.infect_skipsounds = 1;
    }

    thread _id_1439E();
    initsurvivaltime( 1 );
}

_id_1439E()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    wait 4;
    self iprintlnbold( &"_encstr_B41614A6418914D4848AA6CB9293328A342AFAA01362" );
}

_id_1383E()
{
    thread scripts\mp\supers::givesuperpoints( 4000, undefined, 1 );
    thread scripts\mp\perks\perkpackage::perkpackage_forceusesuper();
}

setinitialtonormalinfected( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A3750609A5E61883" );
    self.isinitialinfected = undefined;
    self.changingtoregularinfected = 1;

    if ( isdefined( var_0 ) )
        self.changingtoregularinfectedbykill = 1;

    while ( !scripts\mp\utility\player::isreallyalive( self ) )
        waitframe();

    if ( isdefined( self.iscarrying ) && self.iscarrying == 1 )
    {
        self notify( "_encstr_A97817572058AB92107F371367254ADFF0E80E9E9948751ADD" );
        waitframe();
    }

    while ( self ismantling() )
        waitframe();

    while ( self ismeleeing() )
        waitframe();

    while ( !scripts\mp\utility\player::isreallyalive( self ) )
        waitframe();

    self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] = level.infect_loadouts["_encstr_BA840579D3F7F6"];
    scripts\mp\equipment\tac_insert::_id_13684( self.origin, self.angles );
    self notify( "_encstr_A1D70BDE071B53794F208AE3F8" );
    self.faux_spawn_stance = self getstance();
    self.faux_spawn_infected = 1;

    if ( isdefined( scripts\mp\supers::getcurrentsuper() ) && scripts\mp\supers::getcurrentsuper().isinuse )
        thread scripts\mp\supers::superusefinished( 0 );

    waitframe();
    thread scripts\mp\playerlogic::spawnplayer( 1 );

    if ( isdefined( scripts\mp\supers::getcurrentsuper() ) && scripts\mp\supers::getcurrentsuperref() == "_encstr_A86C12EBDBF8A0B6610B6B6B238B73B0857591A1" )
        thread _id_1383E();
}

onplayerkilled( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    if ( level.gameended )
        return;

    var_10 = 0;
    var_11 = 0;
    level thread shouldplayhalfwayvo();

    if ( self.team == "_encstr_BA840579D3F7F6" )
    {

    }

    if ( self.team == "_encstr_BC850785638DA59537" && isdefined( var_1 ) )
    {
        self.operatorcustomization = undefined;

        if ( isplayer( var_1 ) && var_1 != self )
            var_10 = 1;
        else if ( level.infect_allowsuicide && ( var_1 == self || !isplayer( var_1 ) ) )
        {
            var_10 = 1;
            var_11 = 1;
        }
    }

    if ( self.team == "_encstr_BC850785638DA59537" && istrue( level.nukeincoming ) )
    {
        if ( isdefined( level._id_11F14 ) && self == level._id_11F14 )
        {
            var_10 = 0;
            var_11 = 0;
        }
    }

    if ( isplayer( var_1 ) && var_1.team == "_encstr_BC850785638DA59537" && var_1 != self )
    {
        var_1 scripts\mp\utility\stats::incpersstat( "_encstr_97EC10B230B85D364728478F8ECB637B02AB", 1 );
        var_1 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_97EC10B230B85D364728478F8ECB637B02AB", var_1.pers["_encstr_97EC10B230B85D364728478F8ECB637B02AB"] );
    }
    else if ( isplayer( var_1 ) && var_1.team == "_encstr_BA840579D3F7F6" && var_1 != self )
    {
        var_1 scripts\mp\utility\stats::incpersstat( "_encstr_B870102A57201B835F8B9B46EC6347656FDA", 1 );
        var_1 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_B870102A57201B835F8B9B46EC6347656FDA", var_1.pers["_encstr_B870102A57201B835F8B9B46EC6347656FDA"] );

        if ( isplayer( var_1 ) )
            var_1 scripts\mp\utility\stats::setextrascore1( var_1.pers["_encstr_B870102A57201B835F8B9B46EC6347656FDA"] );
    }

    if ( var_10 )
    {
        thread delayedprocesskill( var_1, var_11 );

        if ( var_11 )
        {
            foreach ( var_13 in level.players )
            {
                if ( isdefined( var_13.isinitialinfected ) )
                    var_13 thread setinitialtonormalinfected();
            }
        }
        else if ( isdefined( var_1.isinitialinfected ) )
        {
            foreach ( var_13 in level.players )
            {
                if ( isdefined( var_13.isinitialinfected ) )
                    var_13 thread setinitialtonormalinfected( 1 );
            }
        }
        else if ( level.infectstreakbonus > 0 )
        {
            if ( !isdefined( var_1.infectedkillsthislife ) )
                var_1.infectedkillsthislife = 1;
            else
                var_1.infectedkillsthislife++;

            var_1 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_AA6512CFB5543203F8F9579153985A7BBBED4F2B", undefined, level.infectstreakbonus * var_1.infectedkillsthislife );
        }
        else
            var_1 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_AA6512CFB5543203F8F9579153985A7BBBED4F2B" );

        if ( scripts\mp\utility\dvars::getwatcheddvar( "_encstr_AA250A1D7CF2EB9071A740A0" ) != 0 )
        {
            var_17 = 1;

            if ( scripts\mp\utility\game::matchmakinggame() )
            {
                level.packclientmatchdata++;
                var_17 = level.packclientmatchdata <= level.packedbits;
            }

            if ( var_17 )
            {
                if ( !isdefined( level.extratime ) )
                    level.extratime = level.infectextratimeperkill;
                else
                    level.extratime = level.extratime + level.infectextratimeperkill;
            }
        }

        setsurvivaltime( 1 );
    }
    else
    {
        if ( isbot( self ) )
            self.classcallback = "_encstr_87AC099DB05B59ADF619AC";

        if ( isdefined( self.isinitialinfected ) )
        {
            self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] = level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"];
            self.infected_class = "_encstr_B66A0D71DBFFEEA9142693D1597E78";
        }
        else
        {
            self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] = level.infect_loadouts[self.pers["_encstr_89EF05D46BA8FD"]];
            self.infected_class = self.pers["_encstr_89EF05D46BA8FD"];
        }
    }
}

delayedprocesskill( var_0, var_1 )
{
    self._id_11D9E = 1;

    if ( level.unset_relic_laststandmelee && level.mapname != "_encstr_B3FB0A309BE727E0D4F143A9" )
        _id_1314D();

    wait 0.15;
    self.teamchangedthisframe = 1;
    scripts\mp\menus::addtoteam( "_encstr_BA840579D3F7F6" );

    if ( !istrue( self._id_13968 ) )
    {
        var_2 = scripts\mp\persistence::statgetchildbuffered( "_encstr_A2460627DEABDC23", "_encstr_801A0BD15ADA560A63B09795C8", 0 );
        var_2 = var_2 - 240;
        self.pers["_encstr_9B350DDAF81F5257D305C4FC2B381F"] = var_2;
    }
    else
        self._id_13968 = 0;

    updateteamscores();
    level.infect_players[self.name] = 1;
    thread monitordisconnect();

    if ( level.infect_teamscores["_encstr_BC850785638DA59537"] > 1 )
    {
        if ( level.unset_relic_laststandmelee )
        {
            level._id_12738++;

            if ( level._id_12738 > 3 )
                level._id_12738 = 1;

            if ( level.infect_teamscores["_encstr_BC850785638DA59537"] == level.steam_point_think )
                level thread _id_13861();
        }

        if ( level._id_12738 == 1 )
        {
            scripts\mp\utility\sound::playsoundonplayers( "_encstr_AA781609B0BF6915970210191A6ED5E697490F7D2DA3D159", "_encstr_BC850785638DA59537" );
            scripts\mp\utility\sound::playsoundonplayers( "_encstr_8FED17AD1CEBDD169CBEBD26A695C63A5A9DACAF3A0B5BB2E6", "_encstr_BA840579D3F7F6" );
            thread scripts\mp\hud_util::teamplayercardsplash( "_encstr_A43815C6C236B1F6D5D17D76BD3AF54BE6CC95C6D1598C", self, "_encstr_BC850785638DA59537" );
        }

        if ( !var_1 )
        {
            thread scripts\mp\hud_util::teamplayercardsplash( "_encstr_9DBA1120BF54B8EF7B3BB0A3956233819447E0", var_0, "_encstr_BA840579D3F7F6" );

            if ( !isdefined( level.survivorscoreevent ) )
            {
                var_3 = getdvarint( "_encstr_9D7F20DC8D9CFAB4379959D8E8BECDAEC9B35A67BD27A5B9D24796B01B6E1BDE93CA", 50 );

                if ( var_3 > 0 )
                    level.survivorscoreevent = var_3;
                else
                    level.survivorscoreevent = scripts\mp\rank::getscoreinfovalue( "_encstr_B12C099B03966BEC081FBA" );
            }
            else
                level.survivorscoreevent = level.survivorscoreevent + level.survivoralivescore;

            foreach ( var_5 in level.players )
            {
                if ( !scripts\mp\utility\player::isreallyalive( var_5 ) || self.sessionstate == "_encstr_A68C0A5803A5D151A2B310A6" )
                    continue;

                if ( var_5.team == "_encstr_BC850785638DA59537" && var_5 != self && distance( var_5.infect_spawnpos, var_5.origin ) > 32 )
                    var_5 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_B12C099B03966BEC081FBA", undefined, level.survivorscoreevent );

                if ( var_5.team == "_encstr_BA840579D3F7F6" && var_5 != var_0 && var_5 != self )
                    var_5 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_A9BD0716B96E4BCDE8", undefined, level.stealth_broken_music );
            }
        }
    }
    else if ( level.infect_teamscores["_encstr_BC850785638DA59537"] == level.play_player_approach )
        onfinalsurvivor();
    else if ( level.infect_teamscores["_encstr_BC850785638DA59537"] == 0 )
        onsurvivorseliminated();

    if ( isbot( self ) )
        self.classcallback = "_encstr_87AC099DB05B59ADF619AC";

    if ( isdefined( self.isinitialinfected ) )
    {
        self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] = level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"];
        self.infected_class = "_encstr_B66A0D71DBFFEEA9142693D1597E78";
    }
    else
    {
        self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] = level.infect_loadouts[self.pers["_encstr_89EF05D46BA8FD"]];
        self.infected_class = self.pers["_encstr_89EF05D46BA8FD"];
    }
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( istrue( level.matchmakingmatch ) && isdefined( var_1 ) && isdefined( var_0 ) )
    {
        var_6 = var_1 getfireteammembers();

        if ( isdefined( var_6 ) && var_6.size > 0 )
        {
            foreach ( var_8 in var_6 )
            {
                if ( isdefined( var_8 ) && var_0 == var_8 )
                {
                    var_1 scripts\mp\killstreaks\killstreaks::givestreakpoints( "_encstr_97D70583536853", -1, 0 );
                    var_1.nukepoints = scripts\engine\utility::ter_op( var_1.nukepoints > 0, var_1.nukepoints - 1, 0 );
                    break;
                }
            }
        }
    }
}

onfinalsurvivor()
{
    scripts\mp\utility\sound::playsoundonplayers( "_encstr_93C6105BE0F5DB894DFA6C0B838EAE279532" );

    foreach ( var_1 in level.players )
    {
        if ( !isdefined( var_1 ) )
            continue;

        if ( var_1.team == "_encstr_BC850785638DA59537" )
        {
            var_1 scripts\mp\utility\dialog::leaderdialogonplayer( "_encstr_8C6D135A9B66CAD8E85619BEC62C9B3AC2635AB356" );
            var_1 thread scripts\mp\rank::scoreeventpopup( "_encstr_B2830FDF683021FA98D7FFEBF5BB639778" );
            var_1 scripts\mp\utility\stats::incpersstat( "_encstr_94730DD8C237A3355D399D2D3BED93", 1 );

            if ( scripts\mp\utility\game::matchmakinggame() )
            {
                if ( !var_1 scripts\mp\utility\killstreak::isjuggernaut() )
                {
                    var_1.maxhealth = 200;
                    var_1 notify( "_encstr_AACA134BA89BBB8A5FDEB72F4DD542520198EFE718" );
                }
            }

            if ( !level.infect_awardedfinalsurvivor )
            {
                if ( var_1.gamemodejoinedatstart && isdefined( var_1.infect_spawnpos ) && distance( var_1.infect_spawnpos, var_1.origin ) > 32 )
                    var_1 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_B2830FDF683021FA98D7FFEBF5BB639778" );

                level.infect_awardedfinalsurvivor = 1;
            }

            thread scripts\mp\hud_util::teamplayercardsplash( "_encstr_8AA0178DB0B163B75DA3AFCC2D9B58C6EBB9BA4ED9B467DBE4", var_1 );

            if ( level.steam_damaged )
            {

            }
            else
                level thread finalsurvivoruav( var_1 );

            break;
        }
    }
}

finalsurvivoruav( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 endon( "_encstr_A8EB0BDF6B40BFFF9069A0C89F" );
    level endon( "_encstr_AB87122DCD66AC6C8E7DB116A3B2A47B96E6CA39" );
    level thread enduavonlatejoiner( var_0 );
    var_1 = getuavstrengthlevelneutral();

    if ( level.unset_relic_laststandmelee && level.mapname != "_encstr_B3FB0A309BE727E0D4F143A9" )
        var_1 = 5;

    var_2 = 1;
    var_3 = 0;
    level.radarmode["_encstr_BA840579D3F7F6"] = "_encstr_9BC90D60AF62A0CBC229CE5FFFCA35";

    foreach ( var_5 in level.players )
    {
        if ( var_5.team == "_encstr_BA840579D3F7F6" )
            var_5.radarmode = "_encstr_9BC90D60AF62A0CBC229CE5FFFCA35";
    }

    scripts\cp_mp\killstreaks\uav::_setteamradarstrength( "_encstr_BA840579D3F7F6", var_1 + 1 );

    for (;;)
    {
        var_7 = var_0.origin;
        wait 4;

        if ( var_3 )
        {
            setteamradar( "_encstr_BA840579D3F7F6", 0 );
            var_3 = 0;
        }

        wait 6;

        if ( distance( var_7, var_0.origin ) < 200 )
        {
            setteamradar( "_encstr_BA840579D3F7F6", 1 );
            var_3 = 1;

            foreach ( var_5 in level.players )
                var_5 playlocalsound( "_encstr_89BE0F1B02DFF8385F32E7ED4DC9B0B767" );
        }

        if ( var_2 )
        {
            var_2 = 0;
            var_1 = getuavstrengthlevelneutral();
            scripts\cp_mp\killstreaks\uav::_setteamradarstrength( "_encstr_BA840579D3F7F6", var_1 + 1 );
        }
    }
}

_id_119D8()
{
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    while ( level.infect_teamscores["_encstr_BC850785638DA59537"] > level.steam_point_think )
    {
        foreach ( var_1 in level.players )
        {
            if ( var_1.team == "_encstr_BA840579D3F7F6" )
                triggeroneoffradarsweep( var_1 );
        }

        wait( getdvarint( "_encstr_B26917DCD827FA5A3799B2B18EBE36F6B93BBAB09647AAA02B", 60 ) );
    }
}

enduavonlatejoiner( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 endon( "_encstr_A8EB0BDF6B40BFFF9069A0C89F" );

    for (;;)
    {
        if ( level.infect_teamscores["_encstr_BC850785638DA59537"] > level.play_player_approach )
        {
            level notify( "_encstr_AB87122DCD66AC6C8E7DB116A3B2A47B96E6CA39" );
            waitframe();
            setteamradar( "_encstr_BA840579D3F7F6", 0 );
            break;
        }

        waitframe();
    }
}

_id_13861()
{
    level.radarmode["_encstr_BA840579D3F7F6"] = "_encstr_9BC90D60AF62A0CBC229CE5FFFCA35";

    foreach ( var_1 in level.players )
    {
        if ( var_1.team == "_encstr_BA840579D3F7F6" )
            var_1.radarmode = "_encstr_9BC90D60AF62A0CBC229CE5FFFCA35";
    }

    var_3 = getuavstrengthlevelneutral();
    scripts\cp_mp\killstreaks\uav::_setteamradarstrength( "_encstr_BA840579D3F7F6", var_3 + 1 );
    setteamradar( "_encstr_BA840579D3F7F6", 1 );
}

monitordisconnect()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A8EB0BDF6B40BFFF9069A0C89F" );
    self notify( "_encstr_B4CB1A59ED336FB705AE9AA290D3A3A51827CCD12FC035BB2081721B" );
    self endon( "_encstr_B4CB1A59ED336FB705AE9AA290D3A3A51827CCD12FC035BB2081721B" );
    var_0 = self.team;

    if ( !isdefined( var_0 ) && isdefined( self.bot_team ) )
        var_0 = self.bot_team;

    self waittill( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    updateteamscores();

    if ( isdefined( self.infect_isbeingchosen ) || level.infect_chosefirstinfected )
    {
        if ( level.infect_teamscores["_encstr_BA840579D3F7F6"] && level.infect_teamscores["_encstr_BC850785638DA59537"] )
        {
            if ( level.unset_relic_laststandmelee )
            {
                if ( var_0 == "_encstr_BC850785638DA59537" && level.infect_teamscores["_encstr_BC850785638DA59537"] == level.steam_point_think )
                    level thread _id_13861();
            }

            if ( var_0 == "_encstr_BC850785638DA59537" && level.infect_teamscores["_encstr_BC850785638DA59537"] == level.play_player_approach )
                onfinalsurvivor();
            else if ( var_0 == "_encstr_BA840579D3F7F6" && level.infect_teamscores["_encstr_BA840579D3F7F6"] == 1 )
            {
                foreach ( var_2 in level.players )
                {
                    if ( var_2 != self && var_2.team == "_encstr_BA840579D3F7F6" )
                        var_2 setfirstinfected( 0 );
                }
            }
        }
        else if ( level.infect_teamscores["_encstr_BC850785638DA59537"] == 0 )
        {
            if ( istrue( level.hostmigration ) )
                scripts\mp\hostmigration::waittillhostmigrationdone();

            onsurvivorseliminated();
        }
        else if ( level.infect_teamscores["_encstr_BA840579D3F7F6"] == 0 )
        {
            if ( level.infect_teamscores["_encstr_BC850785638DA59537"] == 1 )
                level thread scripts\mp\gamelogic::endgame( "_encstr_BC850785638DA59537", game["_encstr_94EA0B2BE623AF39CA589BBDB9"][tolower( game["_encstr_BA840579D3F7F6"] ) + "_encstr_ABE60C07DDADF8190F42B11BDA13"] );
            else if ( level.infect_teamscores["_encstr_BC850785638DA59537"] > 1 )
            {
                level.infect_chosefirstinfected = 0;
                level thread choosefirstinfected();
            }
        }
    }
    else if ( level.infect_countdowninprogress && level.infect_teamscores["_encstr_BC850785638DA59537"] == 0 && level.infect_teamscores["_encstr_BA840579D3F7F6"] == 0 )
    {
        level notify( "_encstr_AA45158C18E0B5FAFD7F776377A7A0E7D0A04357D09076" );
        level.infect_choosingfirstinfected = 0;

        foreach ( var_5 in level.players )
            var_5 setclientomnvar( "_encstr_B4A919A51461E3C1316EA8C703FDC9E8DDA96E6AABB5A16FE7B410", 0 );
    }

    self.isinitialinfected = undefined;
}

ondeadevent( var_0 )
{
    return;
}

ontimelimit()
{
    level thread scripts\mp\gamelogic::endgame( "_encstr_BC850785638DA59537", game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_A40B13A3B4AD56AFD896B5D28EF593AC0BC6A15632"] );
}

onsurvivorseliminated()
{
    level thread scripts\mp\gamelogic::endgame( "_encstr_BA840579D3F7F6", game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_A2EE1567ABE3C62255085A12782B2A91A8589BB7E0F90C"] );
}

getteamsize( var_0 )
{
    var_1 = 0;

    foreach ( var_3 in level.players )
    {
        if ( var_3.sessionstate == "_encstr_A68C0A5803A5D151A2B310A6" && !var_3.spectatekillcam && !istrue( var_3.inspawncamera ) )
            continue;

        if ( var_3.team == var_0 )
            var_1++;
    }

    return var_1;
}

updateteamscores()
{
    level.infect_teamscores["_encstr_BC850785638DA59537"] = getteamsize( "_encstr_BC850785638DA59537" );
    game["_encstr_B4040B6BBF898046C247E5C3DF"]["_encstr_BC850785638DA59537"] = level.infect_teamscores["_encstr_BC850785638DA59537"];
    setteamscore( "_encstr_BC850785638DA59537", level.infect_teamscores["_encstr_BC850785638DA59537"] );
    level.infect_teamscores["_encstr_BA840579D3F7F6"] = getteamsize( "_encstr_BA840579D3F7F6" );
    game["_encstr_B4040B6BBF898046C247E5C3DF"]["_encstr_BA840579D3F7F6"] = level.infect_teamscores["_encstr_BA840579D3F7F6"];
    setteamscore( "_encstr_BA840579D3F7F6", level.infect_teamscores["_encstr_BA840579D3F7F6"] );
}

setspecialloadouts()
{
    waitframe();

    if ( !isdefined( level.survivorprimaryweapon ) || level.survivorprimaryweapon == "_encstr_A40101" )
        level.survivorprimaryweapon = "_encstr_9F5D13F9348AF75A5181539A089395A2D33F4765CF";

    if ( !isdefined( level.survivorsecondaryweapon ) || level.survivorsecondaryweapon == "_encstr_A40101" )
        level.survivorsecondaryweapon = "_encstr_BDB31120D328E92F8A5FE7EF8B2256D2372D8B";

    if ( !isdefined( level.infectedprimaryweapon ) || level.infectedprimaryweapon == "_encstr_A40101" )
        level.infectedprimaryweapon = "_encstr_BED80DB4BB83AFD6379633CAEBB6E0";

    if ( !isdefined( level.infectedsecondaryweapon ) || level.infectedsecondaryweapon == "_encstr_A40101" )
        level.infectedsecondaryweapon = "_encstr_9B660D018F3841EE3A23DBEE3639F0";

    if ( !isdefined( level.initialprimaryweapon ) || level.initialprimaryweapon == "_encstr_A40101" )
        level.initialprimaryweapon = "_encstr_9F5D13F9348AF75A5181539A089395A2D33F4765CF";

    if ( isdefined( level.infectedprimaryweapon ) && level.infectedprimaryweapon == "_encstr_BED80DB4BB83AFD6379633CAEBB6E0" )
    {
        level.infectedprimaryweapon = "_encstr_BED80DB4BB83AFD6379633CAEBB6E0";

        if ( isdefined( level.infectedsecondaryweapon ) && level.infectedsecondaryweapon == "_encstr_BED80DB4BB83AFD6379633CAEBB6E0" )
            level.infectedsecondaryweapon = "_encstr_AABA05236DC831";
    }

    if ( istrue( level.setplayerselfrevivingextrainfo ) )
    {
        level.infectedprimaryweapon = "_encstr_9DFA112DDD70F5662D373A9BD7B61CEBE9ADC4";
        level.infectedsecondaryweapon = "_encstr_9DFA112DDD70F5662D373A9BD7B61CEBE9ADC4";
    }

    if ( !isdefined( level.initialsecondaryweapon ) || level.initialsecondaryweapon == "_encstr_A40101" )
        level.initialsecondaryweapon = "_encstr_BDB31120D328E92F8A5FE7EF8B2256D2372D8B";

    if ( !isdefined( level.survivorlethal ) || level.survivorlethal == "_encstr_A40101" )
        level.survivorlethal = "_encstr_93A70F2BE25DA50ED76CD8C2E56BF639AC";

    if ( !isdefined( level.survivortactical ) || level.survivortactical == "_encstr_A40101" )
        level.survivortactical = "_encstr_A30B11B2680B841B3E7EA7AE06036F4A5B7B8A";

    if ( !isdefined( level.infectedlethal ) || level.infectedlethal == "_encstr_A40101" )
        level.infectedlethal = "_encstr_9E2115CAB8BAB4077D8E0D93BDBBA5DCECD7B6CD4B99B2";

    if ( !isdefined( level.infectedtactical ) || level.infectedtactical == "_encstr_A40101" )
        level.infectedtactical = "_encstr_807E112733EB73A8A93322B141D446233D8243";

    level.infect_allyrigs = [];
    level.infect_allyrigs[level.infect_allyrigs.size] = "_encstr_A6B3120F05CFBC15435ADB2FF1F723E338B88B13";
    var_0 = 0;
    var_1 = _encstr_985F1DF3C16B20334C5F96F07B506920155F2B538AAF177AA0B7EA0841624B::remappedhpzoneorder( level.survivorprimaryweapon );
    var_0 = scripts\mp\class::_id_139E7( level.survivorprimaryweapon, var_1 );
    var_2 = 0;
    var_3 = _encstr_985F1DF3C16B20334C5F96F07B506920155F2B538AAF177AA0B7EA0841624B::remappedhpzoneorder( level.survivorsecondaryweapon );
    var_2 = scripts\mp\class::_id_139E7( level.survivorsecondaryweapon, var_3 );

    if ( scripts\mp\utility\game::isusingdefaultclass( "_encstr_BC850785638DA59537", 0 ) )
        level.infect_loadouts["_encstr_BC850785638DA59537"] = scripts\mp\utility\game::getmatchrulesspecialclass( "_encstr_BC850785638DA59537", 0 );
    else if ( level._id_12052 )
    {
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_87C30FC410893345733089A330AB3E9362"] = level.survivorprimaryweapon;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B44319C6DB5832DEAE3A289C965B2CC95E141DA32C36A1D65673A3"] = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_B44319C6DB5832DEAE3A289C965B2CC95E141DA32C36A1D65673A3"];
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A9651AE2C897BBF598D1103A83303EBBC3A5DBEB917E43AD20FD4C62"] = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_A9651AE2C897BBF598D1103A83303EBBC3A5DBEB917E43AD20FD4C62"];
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_9B651AD8DE0B23B7EA4705E4B46B58E4CBA0E8D10B8DA15BB2E6A366"] = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_9B651AD8DE0B23B7EA4705E4B46B58E4CBA0E8D10B8DA15BB2E6A366"];
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_AF651A79955A81A835EBB1B8877521E563B6EDFDEE9241D00DEB9882"] = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_AF651A79955A81A835EBB1B8877521E563B6EDFDEE9241D00DEB9882"];
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B3651A1BB70B32B7EA1DA0E4A5B51639E5823A47B0D80DB5AC37476A"] = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_B3651A1BB70B32B7EA1DA0E4A5B51639E5823A47B0D80DB5AC37476A"];
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"] = var_0;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"] = level.survivorsecondaryweapon;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_9D6F1B6C48D16B2D1B48D18AC817252389AEF1395DDBC7F6C968BA3218"] = level.attachmentsurvivorsecondary;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_BDDB1C6590701C82D5812FCF97F0DA54285B58A66B70A19AA35BFFEBD106"] = level.attachmentsurvivorsecondarytwo;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A2EA151BD081D44253851297663F0A9C2980C73F48F807"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_82B618ABEA2661705BBB2A415B6D7332AB2AD71F9D3880AE324D"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"] = var_2;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B3A418C6F61691DB5747A2175796C1D6B27347824E96B6854E5E"] = level.survivorlethal;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_AA781A89AF4749179393F168BBACE1A08F460DEE3DE7904DBFAA4020"] = level.survivortactical;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B6920DDA60DB0FAFA33D538DD74913"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A31B12E09AEF5518032CF7A1326F20AA4393FB49"] = "_encstr_973508BF93EFFBC363B3";

        if ( level._id_139BC.size > 0 )
        {
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_BAE713C8CFE03C60079B6BE3E83B5FEC7AAAF917B3"] = level._id_139BC[0];
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A1E71363923EA180A70CDA33FC2BCB59229AD0B0DF"] = level._id_139BC[1];
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B9E71363DEC291F6ABD196961B63DCE8935616B6CC"] = level._id_139BC[2];
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] = [ "_encstr_AD4F1277590582D9A02883C86638194B6B9BC7A3", "_encstr_8082197F31EA6760263573F241524B61B4472B9097C27038F40D8B", "_encstr_B3EC126BD8938EF761713441806B8FD2E988D262" ];
        }
        else
        {
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_BAE713C8CFE03C60079B6BE3E83B5FEC7AAAF917B3"] = "_encstr_AABA05236DC831";
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A1E71363923EA180A70CDA33FC2BCB59229AD0B0DF"] = "_encstr_AABA05236DC831";
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B9E71363DEC291F6ABD196961B63DCE8935616B6CC"] = "_encstr_AABA05236DC831";
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B77517780277DD90BB947337A125880E5BDA11404AFB83B813"] = 1;
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] = [ "_encstr_950B130F210D8AD1B820BBC07EC8E1535581EF83E3" ];
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_88EA12B1DB0B8CB7EA3A511ED1C95841564EB6CD"] = [ "_encstr_8082197F31EA6760263573F241524B61B4472B9097C27038F40D8B", "_encstr_AD4F1277590582D9A02883C86638194B6B9BC7A3", "_encstr_B3EC126BD8938EF761713441806B8FD2E988D262" ];
        }

        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A4450FEB472A87A2834C172243E0E538F8"] = "_encstr_A83C0BF7F4ABABC79045FE5807";
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A1C815A37F37A928A383E56A0AD83FD5F824DBE8886399"] = level.survivorsuper;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B9C815B17B168C7BAE3A32D256C691AAC176C9581956C8"] = level._id_139BD;
    }
    else
    {
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_87C30FC410893345733089A330AB3E9362"] = level.survivorprimaryweapon;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B44319C6DB5832DEAE3A289C965B2CC95E141DA32C36A1D65673A3"] = level.attachmentsurvivorprimary;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A9651AE2C897BBF598D1103A83303EBBC3A5DBEB917E43AD20FD4C62"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"] = var_0;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"] = level.survivorsecondaryweapon;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_9D6F1B6C48D16B2D1B48D18AC817252389AEF1395DDBC7F6C968BA3218"] = level.attachmentsurvivorsecondary;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_BDDB1C6590701C82D5812FCF97F0DA54285B58A66B70A19AA35BFFEBD106"] = level.attachmentsurvivorsecondarytwo;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A2EA151BD081D44253851297663F0A9C2980C73F48F807"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_82B618ABEA2661705BBB2A415B6D7332AB2AD71F9D3880AE324D"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"] = var_2;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B3A418C6F61691DB5747A2175796C1D6B27347824E96B6854E5E"] = level.survivorlethal;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_AA781A89AF4749179393F168BBACE1A08F460DEE3DE7904DBFAA4020"] = level.survivortactical;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B6920DDA60DB0FAFA33D538DD74913"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A31B12E09AEF5518032CF7A1326F20AA4393FB49"] = "_encstr_973508BF93EFFBC363B3";

        if ( level._id_139BC.size > 0 )
        {
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_BAE713C8CFE03C60079B6BE3E83B5FEC7AAAF917B3"] = level._id_139BC[0];
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A1E71363923EA180A70CDA33FC2BCB59229AD0B0DF"] = level._id_139BC[1];
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B9E71363DEC291F6ABD196961B63DCE8935616B6CC"] = level._id_139BC[2];
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] = [ "_encstr_AD4F1277590582D9A02883C86638194B6B9BC7A3", "_encstr_8082197F31EA6760263573F241524B61B4472B9097C27038F40D8B", "_encstr_B3EC126BD8938EF761713441806B8FD2E988D262" ];
        }
        else
        {
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_BAE713C8CFE03C60079B6BE3E83B5FEC7AAAF917B3"] = "_encstr_AABA05236DC831";
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A1E71363923EA180A70CDA33FC2BCB59229AD0B0DF"] = "_encstr_AABA05236DC831";
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B9E71363DEC291F6ABD196961B63DCE8935616B6CC"] = "_encstr_AABA05236DC831";
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B77517780277DD90BB947337A125880E5BDA11404AFB83B813"] = 1;
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] = [ "_encstr_950B130F210D8AD1B820BBC07EC8E1535581EF83E3" ];
            level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_88EA12B1DB0B8CB7EA3A511ED1C95841564EB6CD"] = [ "_encstr_8082197F31EA6760263573F241524B61B4472B9097C27038F40D8B", "_encstr_AD4F1277590582D9A02883C86638194B6B9BC7A3", "_encstr_B3EC126BD8938EF761713441806B8FD2E988D262" ];
        }

        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A4450FEB472A87A2834C172243E0E538F8"] = "_encstr_A83C0BF7F4ABABC79045FE5807";
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_A1C815A37F37A928A383E56A0AD83FD5F824DBE8886399"] = level.survivorsuper;
        level.infect_loadouts["_encstr_BC850785638DA59537"]["_encstr_B9C815B17B168C7BAE3A32D256C691AAC176C9581956C8"] = level._id_139BD;

        if ( level.enableping )
        {

        }
    }

    var_4 = 0;
    var_5 = 0;

    if ( level.survivorprimaryweapon == level.initialprimaryweapon )
        var_4 = var_0;
    else
    {
        var_6 = _encstr_985F1DF3C16B20334C5F96F07B506920155F2B538AAF177AA0B7EA0841624B::remappedhpzoneorder( level.initialprimaryweapon );
        var_4 = scripts\mp\class::_id_139E7( level.initialprimaryweapon, var_6 );
    }

    if ( level.survivorsecondaryweapon == level.initialsecondaryweapon )
        var_5 = var_2;
    else
    {
        var_7 = _encstr_985F1DF3C16B20334C5F96F07B506920155F2B538AAF177AA0B7EA0841624B::remappedhpzoneorder( level.initialsecondaryweapon );
        var_5 = scripts\mp\class::_id_139E7( level.initialsecondaryweapon, var_7 );
    }

    var_8 = [];

    if ( level.unset_relic_laststandmelee )
        var_8[var_8.size] = "_encstr_B3EC126BD8938EF761713441806B8FD2E988D262";

    if ( scripts\mp\utility\game::isusingdefaultclass( "_encstr_BA840579D3F7F6", 1 ) )
    {
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"] = scripts\mp\utility\game::getmatchrulesspecialclass( "_encstr_BA840579D3F7F6", 1 );
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A31B12E09AEF5518032CF7A1326F20AA4393FB49"] = "_encstr_973508BF93EFFBC363B3";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_BAE713C8CFE03C60079B6BE3E83B5FEC7AAAF917B3"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A1E71363923EA180A70CDA33FC2BCB59229AD0B0DF"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B9E71363DEC291F6ABD196961B63DCE8935616B6CC"] = "_encstr_AABA05236DC831";
    }
    else if ( level._id_12052 )
    {
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_87C30FC410893345733089A330AB3E9362"] = level.initialprimaryweapon;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B44319C6DB5832DEAE3A289C965B2CC95E141DA32C36A1D65673A3"] = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_B44319C6DB5832DEAE3A289C965B2CC95E141DA32C36A1D65673A3"];
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A9651AE2C897BBF598D1103A83303EBBC3A5DBEB917E43AD20FD4C62"] = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_A9651AE2C897BBF598D1103A83303EBBC3A5DBEB917E43AD20FD4C62"];
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_9B651AD8DE0B23B7EA4705E4B46B58E4CBA0E8D10B8DA15BB2E6A366"] = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_9B651AD8DE0B23B7EA4705E4B46B58E4CBA0E8D10B8DA15BB2E6A366"];
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_AF651A79955A81A835EBB1B8877521E563B6EDFDEE9241D00DEB9882"] = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_AF651A79955A81A835EBB1B8877521E563B6EDFDEE9241D00DEB9882"];
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B3651A1BB70B32B7EA1DA0E4A5B51639E5823A47B0D80DB5AC37476A"] = game["_encstr_93FF13877BC1324712E1C6F1DADB9318CBD07778AD"][0]["_encstr_B3651A1BB70B32B7EA1DA0E4A5B51639E5823A47B0D80DB5AC37476A"];
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"] = var_4;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"] = level.initialsecondaryweapon;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_9D6F1B6C48D16B2D1B48D18AC817252389AEF1395DDBC7F6C968BA3218"] = level.attachmentinitialsecondary;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_BDDB1C6590701C82D5812FCF97F0DA54285B58A66B70A19AA35BFFEBD106"] = level.attachmentinitialsecondarytwo;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A2EA151BD081D44253851297663F0A9C2980C73F48F807"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_82B618ABEA2661705BBB2A415B6D7332AB2AD71F9D3880AE324D"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"] = var_5;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B3A418C6F61691DB5747A2175796C1D6B27347824E96B6854E5E"] = level.infectedlethal;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_AA781A89AF4749179393F168BBACE1A08F460DEE3DE7904DBFAA4020"] = level.infectedtactical;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B6920DDA60DB0FAFA33D538DD74913"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A31B12E09AEF5518032CF7A1326F20AA4393FB49"] = "_encstr_973508BF93EFFBC363B3";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_BAE713C8CFE03C60079B6BE3E83B5FEC7AAAF917B3"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A1E71363923EA180A70CDA33FC2BCB59229AD0B0DF"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B9E71363DEC291F6ABD196961B63DCE8935616B6CC"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] = var_8;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A4450FEB472A87A2834C172243E0E538F8"] = "_encstr_A83C0BF7F4ABABC79045FE5807";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A1C815A37F37A928A383E56A0AD83FD5F824DBE8886399"] = level.infectedsuper;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B9C815B17B168C7BAE3A32D256C691AAC176C9581956C8"] = level.steam_dmg_trigger_think;
    }
    else
    {
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_87C30FC410893345733089A330AB3E9362"] = level.initialprimaryweapon;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B44319C6DB5832DEAE3A289C965B2CC95E141DA32C36A1D65673A3"] = level.attachmentinitialprimary;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A9651AE2C897BBF598D1103A83303EBBC3A5DBEB917E43AD20FD4C62"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"] = var_4;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"] = level.initialsecondaryweapon;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_9D6F1B6C48D16B2D1B48D18AC817252389AEF1395DDBC7F6C968BA3218"] = level.attachmentinitialsecondary;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_BDDB1C6590701C82D5812FCF97F0DA54285B58A66B70A19AA35BFFEBD106"] = level.attachmentinitialsecondarytwo;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A2EA151BD081D44253851297663F0A9C2980C73F48F807"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_82B618ABEA2661705BBB2A415B6D7332AB2AD71F9D3880AE324D"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"] = var_5;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B3A418C6F61691DB5747A2175796C1D6B27347824E96B6854E5E"] = level.infectedlethal;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_AA781A89AF4749179393F168BBACE1A08F460DEE3DE7904DBFAA4020"] = level.infectedtactical;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B6920DDA60DB0FAFA33D538DD74913"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A31B12E09AEF5518032CF7A1326F20AA4393FB49"] = "_encstr_973508BF93EFFBC363B3";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_BAE713C8CFE03C60079B6BE3E83B5FEC7AAAF917B3"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A1E71363923EA180A70CDA33FC2BCB59229AD0B0DF"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B9E71363DEC291F6ABD196961B63DCE8935616B6CC"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] = var_8;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A4450FEB472A87A2834C172243E0E538F8"] = "_encstr_A83C0BF7F4ABABC79045FE5807";
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_A1C815A37F37A928A383E56A0AD83FD5F824DBE8886399"] = level.infectedsuper;
        level.infect_loadouts["_encstr_B66A0D71DBFFEEA9142693D1597E78"]["_encstr_B9C815B17B168C7BAE3A32D256C691AAC176C9581956C8"] = level.steam_dmg_trigger_think;

        if ( level.enableinfectedtracker )
        {

        }

        if ( level.enableping )
        {

        }
    }

    if ( istrue( level.setplayerselfrevivingextrainfo ) )
        var_9 = 0;
    else
    {
        var_9 = 0;
        var_10 = _encstr_985F1DF3C16B20334C5F96F07B506920155F2B538AAF177AA0B7EA0841624B::remappedhpzoneorder( level.infectedprimaryweapon );
        var_9 = scripts\mp\class::_id_139E7( level.infectedprimaryweapon, var_10 );
    }

    var_11 = [];

    if ( level.unset_relic_laststandmelee )
        var_11[var_11.size] = "_encstr_B3EC126BD8938EF761713441806B8FD2E988D262";

    if ( scripts\mp\utility\game::isusingdefaultclass( "_encstr_BA840579D3F7F6", 0 ) )
    {
        level.infect_loadouts["_encstr_BA840579D3F7F6"] = scripts\mp\utility\game::getmatchrulesspecialclass( "_encstr_BA840579D3F7F6", 0 );
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_A31B12E09AEF5518032CF7A1326F20AA4393FB49"] = "_encstr_973508BF93EFFBC363B3";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_BAE713C8CFE03C60079B6BE3E83B5FEC7AAAF917B3"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_A1E71363923EA180A70CDA33FC2BCB59229AD0B0DF"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_B9E71363DEC291F6ABD196961B63DCE8935616B6CC"] = "_encstr_AABA05236DC831";
    }
    else
    {
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_87C30FC410893345733089A330AB3E9362"] = level.infectedprimaryweapon;
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_B44319C6DB5832DEAE3A289C965B2CC95E141DA32C36A1D65673A3"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_A9651AE2C897BBF598D1103A83303EBBC3A5DBEB917E43AD20FD4C62"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_B66C1363F658327BD53A419396B558E49786B0B5DB"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_8702161410EA292F7BB321E36172F3866033F7BCB96F09A9"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_B35A181BDE2C91B7BAE814932D6B0B39F2AC2C9C9616CD47A488"] = var_9;
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_A14E11D520C0AC320551FF3F67206AE4782B08"] = level.infectedsecondaryweapon;
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_9D6F1B6C48D16B2D1B48D18AC817252389AEF1395DDBC7F6C968BA3218"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_BDDB1C6590701C82D5812FCF97F0DA54285B58A66B70A19AA35BFFEBD106"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_A2EA151BD081D44253851297663F0A9C2980C73F48F807"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_82B618ABEA2661705BBB2A415B6D7332AB2AD71F9D3880AE324D"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_80531AE430A913A593D05932408FDDAB012669565F936FEE7D28E018"] = -1;
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_B3A418C6F61691DB5747A2175796C1D6B27347824E96B6854E5E"] = level.infectedlethal;
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_AA781A89AF4749179393F168BBACE1A08F460DEE3DE7904DBFAA4020"] = level.infectedtactical;
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_B6920DDA60DB0FAFA33D538DD74913"] = level.infectedsuper;
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_A31B12E09AEF5518032CF7A1326F20AA4393FB49"] = "_encstr_973508BF93EFFBC363B3";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_BAE713C8CFE03C60079B6BE3E83B5FEC7AAAF917B3"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_A1E71363923EA180A70CDA33FC2BCB59229AD0B0DF"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_B9E71363DEC291F6ABD196961B63DCE8935616B6CC"] = "_encstr_AABA05236DC831";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"] = var_11;
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_A4450FEB472A87A2834C172243E0E538F8"] = "_encstr_A83C0BF7F4ABABC79045FE5807";
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_A1C815A37F37A928A383E56A0AD83FD5F824DBE8886399"] = level.infectedsuper;
        level.infect_loadouts["_encstr_BA840579D3F7F6"]["_encstr_B9C815B17B168C7BAE3A32D256C691AAC176C9581956C8"] = level.steam_dmg_trigger_think;

        if ( level.enableinfectedtracker )
        {

        }

        if ( level.enableping )
            return;
    }
}

addsurvivorattachmentsprimary( var_0 )
{
    level.attachmentsurvivorprimary = "_encstr_AABA05236DC831";
    var_1 = scripts\mp\utility\weapon::getweapongroup( var_0 );

    if ( var_1 == "_encstr_8FE60FAF13D0C25FD006C37AE835877B40" )
        level.attachmentsurvivorprimary = "_encstr_AAC10CC38B7E6325587B76BDF138";
    else if ( var_1 == "_encstr_BA250FBBB22C1CF6CDF50B6E372CD5D88E" || var_1 == "_encstr_AD6510EEACC283DBB9FA3A85B13A5AB1B063" || var_1 == "_encstr_A6710B7FC30B12AF20F613FAD9" || var_1 == "_encstr_AF710B0B50BB6ACFA0C80C35FC" || var_1 == "_encstr_97C90EBB2B2C1CBDDCAF1C4BE647B7B1" || var_0 == "_encstr_B28608672F2449D53AC1" )
        level.attachmentsurvivorprimary = "_encstr_9336080D2D761A6CC263";
}

addinitialattachmentsprimary( var_0 )
{
    level.attachmentinitialprimary = "_encstr_AABA05236DC831";
    var_1 = scripts\mp\utility\weapon::getweapongroup( var_0 );

    if ( var_1 == "_encstr_8FE60FAF13D0C25FD006C37AE835877B40" )
        level.attachmentinitialprimary = "_encstr_AAC10CC38B7E6325587B76BDF138";
    else if ( var_1 == "_encstr_BA250FBBB22C1CF6CDF50B6E372CD5D88E" || var_1 == "_encstr_AD6510EEACC283DBB9FA3A85B13A5AB1B063" || var_1 == "_encstr_A6710B7FC30B12AF20F613FAD9" || var_1 == "_encstr_AF710B0B50BB6ACFA0C80C35FC" || var_1 == "_encstr_97C90EBB2B2C1CBDDCAF1C4BE647B7B1" || var_0 == "_encstr_B28608672F2449D53AC1" )
        level.attachmentinitialprimary = "_encstr_9336080D2D761A6CC263";
}

addsurvivorattachmentssecondary( var_0 )
{
    level.attachmentsurvivorsecondary = "_encstr_AABA05236DC831";
    level.attachmentsurvivorsecondarytwo = "_encstr_AABA05236DC831";
    var_1 = scripts\mp\utility\weapon::getweapongroup( var_0 );

    if ( var_1 == "_encstr_97C90EBB2B2C1CBDDCAF1C4BE647B7B1" )
        level.attachmentsurvivorsecondary = "_encstr_9336080D2D761A6CC263";

    if ( scripts\mp\utility\game::matchmakinggame() )
    {
        if ( var_0 == "_encstr_B70D09296B46F887FB9FEF" )
        {
            level.attachmentsurvivorsecondary = "_encstr_A39C07B1CFC082B1AD";
            level.attachmentsurvivorsecondarytwo = "_encstr_9336080D2D761A6CC263";
        }
    }
}

addinitialattachmentssecondary( var_0 )
{
    level.attachmentinitialsecondary = "_encstr_AABA05236DC831";
    level.attachmentinitialsecondarytwo = "_encstr_AABA05236DC831";
    var_1 = scripts\mp\utility\weapon::getweapongroup( var_0 );

    if ( var_1 == "_encstr_97C90EBB2B2C1CBDDCAF1C4BE647B7B1" )
        level.attachmentinitialsecondary = "_encstr_9336080D2D761A6CC263";

    if ( scripts\mp\utility\game::matchmakinggame() )
    {
        if ( var_0 == "_encstr_B70D09296B46F887FB9FEF" )
        {
            level.attachmentinitialsecondary = "_encstr_A39C07B1CFC082B1AD";
            level.attachmentinitialsecondarytwo = "_encstr_9336080D2D761A6CC263";
        }
    }
}

monitorsurvivaltime()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_8FFC09B4376695D8A35923" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        if ( !level.infect_chosefirstinfected || !isdefined( self.survivalstarttime ) || !isalive( self ) )
        {
            waitframe();
            continue;
        }

        setsurvivaltime( 0 );
        wait 1.0;
    }
}

initsurvivaltime( var_0 )
{
    scripts\mp\utility\stats::setextrascore0( 0 );

    if ( isdefined( var_0 ) && var_0 )
        self notify( "_encstr_8FFC09B4376695D8A35923" );
}

setsurvivaltime( var_0 )
{
    if ( !isdefined( self.survivalstarttime ) )
        self.survivalstarttime = self.spawntime;

    var_1 = int( ( gettime() - self.survivalstarttime ) / 1000 );

    if ( var_1 > 999 )
        var_1 = 999;

    scripts\mp\utility\stats::setextrascore0( var_1 );

    if ( isdefined( var_0 ) && var_0 )
        self notify( "_encstr_8FFC09B4376695D8A35923" );
}

shouldplayhalfwayvo()
{
    if ( !level.didhalfscorevoboost && getteamscore( "_encstr_BA840579D3F7F6" ) >= int( level.players.size - level.players.size / 2 ) )
    {
        var_0 = "_encstr_BA840579D3F7F6";
        scripts\mp\utility\dialog::leaderdialog( "_encstr_8CB8174CB3C0FFBB305FAF752B84ABBD65B9F3290766AD806A", var_0, "_encstr_A96D0726D4272B4372" );
        var_1 = scripts\mp\utility\teams::getenemyteams( var_0 );

        foreach ( var_3 in var_1 )
            scripts\mp\utility\dialog::leaderdialog( "_encstr_9F51148057687B031B183992C87BFD7F66C6130F7691", var_3, "_encstr_A96D0726D4272B4372" );

        level.didhalfscorevoboost = 1;
    }
}

updatematchstatushintonspawn()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( self.team == "_encstr_BC850785638DA59537" )
        self setclientomnvar( "_encstr_AD061ACF50F64D32C19E2CE9FEB94A1CDB18EF03F808AC19E9A5305B", 39 );
    else
        self setclientomnvar( "_encstr_AD061ACF50F64D32C19E2CE9FEB94A1CDB18EF03F808AC19E9A5305B", 40 );
}

_id_11F4B()
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_983508635BE787C548A1" );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    var_0 = 0;
    var_1 = 0;

    for (;;)
    {
        if ( self isnightvisionon() )
        {
            var_0 = var_0 + level.framedurationseconds;

            if ( var_0 >= 9 && !var_1 )
            {
                scripts\mp\hud_message::showerrormessage( "_encstr_8FF71B152089F488AF8669FDE6605DC523BE5B0F2197F82DC1AD4BF1B8" );
                var_1 = 1;
            }

            if ( var_0 >= 10 )
            {
                self nightvisionviewoff();
                self setclientomnvar( "_encstr_9855147B2D80BF2B08FF2E3C9B58B9F737DB832269EE", 1 );
                scripts\common\utility::brjugg_oncrateuse( 0 );
                _id_12A93();
                scripts\common\utility::brjugg_oncrateuse( 1 );
                var_1 = 0;
                self setclientomnvar( "_encstr_9855147B2D80BF2B08FF2E3C9B58B9F737DB832269EE", 0 );
                var_0 = 0;
            }
        }

        wait( level.framedurationseconds );
    }
}

_id_12A93()
{
    var_0 = 0;

    while ( var_0 < 5 )
    {
        var_0 = var_0 + level.framedurationseconds;

        if ( self isnightvisionon() )
            self nightvisionviewoff();

        wait( level.framedurationseconds );
    }
}

_id_122FF()
{
    if ( self.team == "_encstr_BA840579D3F7F6" )
    {
        if ( scripts\mp\utility\perk::_hasperk( "_encstr_81901C807B993F72F1900571D10C486E4DEB4829113B4E6A38BA74F94702" ) )
            scripts\mp\utility\perk::removeperk( "_encstr_81901C807B993F72F1900571D10C486E4DEB4829113B4E6A38BA74F94702" );

        if ( !scripts\mp\utility\perk::_hasperk( "_encstr_81901C807B993F72F1900571D10C486E4DEB4829113B4E6A38BA74F94702" ) )
            scripts\mp\utility\perk::giveperk( "_encstr_81901C807B993F72F1900571D10C486E4DEB4829113B4E6A38BA74F94702" );

        scripts\mp\equipment::giveequipment( level.infectedtactical, "_encstr_B98F0AC7D5B99F4DDBA8353B" );
    }
}

_id_13A06()
{
    thread headicon_time_left();
}

headicon_time_left()
{
    self.loadoutfieldupgrade1 = "_encstr_AABA05236DC831";
    self.loadoutfieldupgrade2 = "_encstr_AABA05236DC831";
    self.loadoutfieldupgrade1 = level.infectedsuper;
    self.loadoutfieldupgrade2 = level.steam_dmg_trigger_think;
    wait 0.1;

    if ( isdefined( self ) && scripts\mp\utility\player::isreallyalive( self ) )
    {
        self notify( "_encstr_A41712F05A531B5C6781D5588DD3E6FF3B22D0F0" );
        scripts\mp\supers::clearsuper();
        scripts\mp\perks\perkpackage::perkpackage_reset();
        self.perkpackagedata.istwomode = 1;
        scripts\mp\perks\perkpackage::perkpackage_setstate( 0 );
        self.perkpackagedata.super = "_encstr_BCEB0D5A2B83E55BD897FFD393FE03";
        var_0 = "_encstr_87AC099DB05B59ADF619AC";
        var_1 = scripts\mp\class::zombiesignorevehicleexplosions();
        var_1 = scripts\mp\class::_id_1194E( var_1, var_0 );
        scripts\mp\class::loadout_updatefieldupgrades( var_1, var_0 );

        if ( scripts\mp\utility\perk::_hasperk( "_encstr_81901C807B993F72F1900571D10C486E4DEB4829113B4E6A38BA74F94702" ) )
            scripts\mp\utility\perk::removeperk( "_encstr_81901C807B993F72F1900571D10C486E4DEB4829113B4E6A38BA74F94702" );

        if ( !scripts\mp\utility\perk::_hasperk( "_encstr_81901C807B993F72F1900571D10C486E4DEB4829113B4E6A38BA74F94702" ) )
            scripts\mp\utility\perk::giveperk( "_encstr_81901C807B993F72F1900571D10C486E4DEB4829113B4E6A38BA74F94702" );

        scripts\mp\equipment::giveequipment( level.infectedtactical, "_encstr_B98F0AC7D5B99F4DDBA8353B" );
        thread scripts\mp\supers::givesuperpoints( level.stealth_enabled, undefined, 1 );
    }

    if ( istrue( level._id_133F8 ) )
        thread _id_13967();
    else
        thread scripts\mp\hud_message::showsplash( "_encstr_9C7319D12CB1EB2DE63795931DD7B49B33568D47EB073616B1B28C" );
}

_id_13967()
{
    if ( scripts\mp\utility\player::isreallyalive( self ) )
    {
        self._id_133CB = 1;
        self suicide();
        waitframe();

        if ( isdefined( self ) )
        {
            self.deaths = self.deaths - 1;
            self.pers["_encstr_BA0607842BE8FB4B56"] = self.pers["_encstr_BA0607842BE8FB4B56"] - 1;
        }
    }

    wait 1;

    if ( isdefined( self ) )
    {
        self._id_133CB = undefined;
        thread scripts\mp\hud_message::showsplash( "_encstr_9C7319D12CB1EB2DE63795931DD7B49B33568D47EB073616B1B28C" );
    }
}

registervehicletype( var_0, var_1, var_2 )
{
    var_3 = spawnstruct();
    var_3.refname = var_0;
    var_3.spawncallback = var_2;
    var_3.vehiclespawns = [[ var_1 ]]();

    if ( !isdefined( level.vehicleinfo ) )
        level.vehicleinfo = [];

    level.vehicleinfo[var_0] = var_3;
}

superselectonunset()
{
    level.ignorevehicletypeinstancelimit = 1;
    registervehicletype( "_encstr_A219044B93BB", scripts\cp_mp\vehicles\atv::atv_getspawnstructscallback, ::vehiclespawn_atv );
    level.vehiclespawnlocs = [];

    foreach ( var_1 in level.vehicleinfo )
    {
        if ( var_1.refname == "_encstr_A219044B93BB" )
        {
            if ( level.mapname == "_encstr_B3D20DBDF726539E25D0838F595753" && level.localeid == "_encstr_A6340973B8A9A90A1B7890" )
            {
                var_2 = [];
                var_3 = [];
                var_2[0] = ( 46022, 1039, 56 );
                var_3[0] = ( 7, 289, 0 );
                var_2[1] = ( 47881, -1404, 115 );
                var_3[1] = ( 8, 294, 0 );
                var_2[2] = ( 47970, -22545, -320 );
                var_3[2] = ( 9, 105, 0 );

                for ( var_4 = 0; var_4 < var_2.size; var_4++ )
                {
                    var_5 = spawnstruct();
                    var_5.origin = var_2[var_4];
                    var_5.angles = var_3[var_4];
                    var_5.script_noteworthy = "_encstr_A6340973B8A9A90A1B7890";
                    var_5.targetname = "_encstr_BE7E0A8FA8C34F23F9AFFBB5";
                    var_5.vehicletype = "_encstr_BC9812BF98112E3297E04A44DB97EAEBFB590703";
                    var_1.vehiclespawns[var_1.vehiclespawns.size] = var_5;
                }

                foreach ( var_7 in var_1.vehiclespawns )
                {
                    if ( distancesquared( var_7.origin, ( 53109, -8400, -710 ) ) < 16384 )
                    {
                        var_7.origin = ( 46868, -457, 18 );
                        var_7.angles = ( 11, 252, 0 );
                        continue;
                    }

                    if ( distancesquared( var_7.origin, ( 48215, -1671, 56 ) ) < 16384 )
                    {
                        var_7.origin = ( 47906, -676, 55 );
                        var_7.angles = ( 11, 309, 0 );
                    }
                }
            }
            else if ( level.mapname == "_encstr_B7920F6F397892BF7008A36D43D0C7FAC4" && level.localeid == "_encstr_8934097830FBB305B537B2" )
            {
                var_2 = [];
                var_3 = [];
                var_2[0] = ( 17806, -20823, -110 );
                var_3[0] = ( 11, 358, 0 );
                var_2[1] = ( 16109, -24057, -144 );
                var_3[1] = ( 1, 90, 0 );
                var_2[2] = ( 18227, -704, -448 );
                var_3[2] = ( 7, 266, 0 );
                var_2[3] = ( 19180, 332, -447 );
                var_3[3] = ( 6, 298, 0 );

                for ( var_4 = 0; var_4 < var_2.size; var_4++ )
                {
                    var_5 = spawnstruct();
                    var_5.origin = var_2[var_4];
                    var_5.angles = var_3[var_4];
                    var_5.script_noteworthy = "_encstr_8934097830FBB305B537B2";
                    var_5.targetname = "_encstr_BE7E0A8FA8C34F23F9AFFBB5";
                    var_5.vehicletype = "_encstr_BC9812BF98112E3297E04A44DB97EAEBFB590703";
                    var_1.vehiclespawns[var_1.vehiclespawns.size] = var_5;
                }

                foreach ( var_7 in var_1.vehiclespawns )
                {
                    if ( distancesquared( var_7.origin, ( 18368, -21157, -107 ) ) < 16384 )
                    {
                        var_7.origin = ( 16572, -19828, 86 );
                        var_7.angles = ( 2, 55, 0 );
                        continue;
                    }

                    if ( distancesquared( var_7.origin, ( 19526, -15475, -97 ) ) < 16384 )
                    {
                        var_7.origin = ( 19177, -15490, -116 );
                        var_7.angles = ( 2, 64, 0 );
                    }
                }
            }
        }

        foreach ( var_7 in var_1.vehiclespawns )
        {
            if ( isdefined( scripts\cp_mp\utility\game_utility::getlocaleid() ) && isdefined( var_7.script_noteworthy ) && var_7.script_noteworthy == level.localeid )
            {
                var_12 = level.vehiclespawnlocs.size;
                level.vehiclespawnlocs[var_12] = var_7;
                level.vehiclespawnlocs[var_12].refname = var_1.refname;
            }
        }
    }

    if ( 0 )
    {
        foreach ( var_16 in level.vehiclespawnlocs )
            thread scripts\mp\utility\debug::drawline( var_16.origin, var_16.origin + ( 0, 0, 1500 ), 1000, ( 1, 0, 0 ) );
    }

    level.vehiclespawnlocs = scripts\engine\utility::array_randomize( level.vehiclespawnlocs );
    var_18 = level._id_11F41;

    if ( !isdefined( level._id_11F41 ) )
        var_18 = 25;

    if ( 0 )
    {
        for ( var_4 = 0; var_4 < var_18; var_4++ )
        {
            var_16 = level.vehiclespawnlocs[var_4];
            thread scripts\mp\utility\debug::drawline( var_16.origin + ( 0, 0, 1500 ), var_16.origin + ( 0, 0, 2500 ), 1000, ( 0, 1, 0 ) );
        }
    }

    for ( var_4 = 0; var_4 < var_18; var_4++ )
    {
        var_16 = level.vehiclespawnlocs[var_4];

        if ( isdefined( var_16 ) )
        {
            var_1 = level.vehicleinfo[var_16.refname];
            [[ var_1.spawncallback ]]( var_16 );
        }
    }
}

vehiclespawn_atv( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, randomfloat( 360 ), 0 );

    var_2 = vehiclespawn_getspawndata( var_0 );
    return scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_spawnvehicle( "_encstr_A219044B93BB", var_2, var_1 );
}

vehiclespawn_getspawndata( var_0 )
{
    var_1 = spawnstruct();
    var_1.origin = var_0.origin;
    var_1.angles = var_0.angles;
    var_1.spawntype = "_encstr_A6BE0A2DE30957B0F745E4DD";
    var_1.showheadicon = 1;
    return var_1;
}

_id_129FB()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level.steam_damage_player = [];
    level thread _id_13254();
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    wait( level.droptime );
    level.grnd_previouscratetypes = [];

    for (;;)
    {
        var_0 = scripts\engine\utility::random( scripts\mp\utility\teams::getteamdata( "_encstr_BC850785638DA59537", "_encstr_8875080E3685E52B93B9" ) );
        var_1 = 1;

        if ( isdefined( var_0 ) && scripts\mp\utility\killstreak::currentactivevehiclecount() < scripts\mp\utility\killstreak::maxvehiclesallowed() && level.fauxvehiclecount + var_1 < scripts\mp\utility\killstreak::maxvehiclesallowed() && scripts\cp_mp\killstreaks\airdrop::getnumdroppedcrates() < 8 )
        {
            var_2 = _encstr_9D631E0ECE6A337043A3671FD786E2FE08C7798FD20D3EA7BFE342800DF1F3EF::getdropzonecratetype();
            var_3 = remove_medic_class();

            if ( !isdefined( var_3 ) )
                return;

            if ( var_2 == "_encstr_81A205575DEFB6" )
            {
                var_4 = spawnstruct();
                var_4.cratetype = undefined;
                var_4.numcrates = undefined;
                var_4.usephysics = undefined;
                scripts\cp_mp\killstreaks\airdrop_multiple::airdrop_multiple_dropcrates( var_0, var_0.team, var_3, randomfloat( 360 ), var_3, var_4 );
            }
            else
            {
                scripts\cp_mp\vehicles\vehicle_tracking::reservevehicle();
                scripts\cp_mp\killstreaks\airdrop::dropkillstreakcratefromscriptedheli( var_0, var_0.team, var_2, var_3, randomfloat( 360 ), var_3, 1 );
            }

            var_5 = level.droptime;
        }
        else
            var_5 = 0.5;

        scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( var_5 );
    }
}

remove_medic_class()
{
    var_0 = level.steam_damage_player[0];
    level.steam_damage_player[level.steam_damage_player.size] = level.steam_damage_player[0];
    level.steam_damage_player[0] = undefined;
    level.steam_damage_player = scripts\engine\utility::array_removeundefined( level.steam_damage_player );
    return var_0;
}

_id_13254()
{
    switch ( level.mapname )
    {
        case "_encstr_B7920F6F397892BF7008A36D43D0C7FAC4":
            level.steam_damage_player = [ ( 21298, -15989, 1970 ), ( 22131, -18582, 690 ), ( 17264, -17920, 1066 ), ( 16682, -23069, 230 ), ( 21664, -23061, -108 ), ( 16208, -13686, -158 ), ( 19920, -18069, 157 ), ( 25150, -17449, -150 ), ( 27173, -14625, -200 ), ( 22696, -12784, -158 ), ( 22115, -12162, -106 ), ( 22278, -10595, 1610 ), ( 19963, -14131, 149 ), ( 20019, -11243, -194 ), ( 16711, -8999, -326 ), ( 15772, -5966, -390 ), ( 15501, -1873, -446 ), ( 19760, -1172, -449 ), ( 20464, -2047, -450 ), ( 23814, -5888, -382 ), ( 26210, -9404, -318 ), ( 30288, -8981, -358 ), ( 20781, -7208, -366 ), ( 18773, -13037, 9 ), ( 20091, -21421, -78 ), ( 23574, -14769, -134 ) ];
            break;
        case "_encstr_AA240B913AD1C3B379DB98C832":
            level.steam_damage_player = [ ( 25008, 32313, 826 ), ( 29171, 32156, 659 ), ( 25021, 37011, 841 ), ( 30305, 35572, 526 ), ( 30779, 33427, 1009 ), ( 28913, 38886, 888 ), ( 25888, 40248, 1680 ), ( 27533, 43285, 1792 ), ( 31199, 37768, 722 ), ( 33534, 35968, 1103 ), ( 34872, 33255, 664 ), ( 33704, 39718, 1395 ), ( 35903, 39512, 879 ), ( 32265, 46424, 1450 ), ( 35084, 43008, 960 ), ( 38700, 43064, 1087 ), ( 36348, 44694, 481 ), ( 34805, 48469, 1317 ), ( 32313, 39712, 767 ) ];
            break;
        case "_encstr_983F0AD60EBECC2C4E5BE619":
        case "_encstr_B3D20DBDF726539E25D0838F595753":
            level.steam_damage_player = [ ( 51478, -24749, -55 ), ( 50222, -21762, -335 ), ( 46165, -20091, -409 ), ( 49089, -18057, -359 ), ( 54074, -16693, -307 ), ( 52289, -14523, -335 ), ( 48361, -13952, -1 ), ( 43445, -16524, -405 ), ( 43634, -13100, -51 ), ( 47714, -14136, 141 ), ( 50498, -12784, -199 ), ( 53744, -11930, -510 ), ( 52284, -7268, -672 ), ( 49723, -7122, 438 ), ( 47540, -10295, 266 ), ( 48403, -7548, 291 ), ( 53225, -3832, -456 ), ( 49419, -4336, 141 ), ( 49419, -4336, 141 ), ( 47101, -1784, 116 ), ( 43600, -3193, 340 ), ( 42522, -6972, 30 ), ( 45959, -5516, 328 ), ( 46058, -8625, 136 ) ];
            break;
        case "_encstr_B9880C60CB570BDFDBEBF64807A3":
            level.steam_damage_player = [ ( 40724, -13376, -58 ), ( 37115, -14577, -152 ), ( 35766, -19268, -508 ), ( 38572, -18749, -508 ), ( 42023, -19947, -500 ), ( 40116, -25824, -247 ), ( 38056, -23083, 240 ), ( 35024, -24401, -508 ), ( 36958, -26270, -112 ), ( 36264, -28611, -36 ), ( 38229, -28438, -452 ), ( 38304, -30376, -172 ), ( 33276, -26940, -116 ), ( 30526, -27712, -508 ), ( 29810, -29730, -508 ), ( 33689, -28898, -507 ), ( 36498, -33452, -508 ), ( 37219, -37142, -506 ), ( 34863, -34724, -318 ), ( 34304, -36576, -506 ), ( 31116, -35074, -508 ), ( 32797, -32582, -372 ) ];
            break;
        case "_encstr_821E0F154F9EFBB5B548CB42D889E1B7F3":
            level.steam_damage_player = [ ( -28661, -17966, -177 ), ( -30406, -15324, -159 ), ( -26858, -14816, 3 ), ( -26567, -8261, 17 ), ( -23466, -14624, -12 ), ( -24687, -11527, 238 ), ( -24492, -10369, 148 ), ( -25965, -11096, 27 ), ( -29884, -12919, -43 ), ( -30458, -10020, -136 ), ( -28564, -9301, 248 ), ( -29994, -6709, -208 ), ( -28156, -5883, -119 ), ( -30522, -3889, -247 ), ( -28220, -3171, -255 ), ( -25333, -4300, -242 ), ( -28106, -1937, -255 ), ( -30823, -2351, -248 ), ( -29121, -11011, -61 ) ];
            break;
        case "_encstr_B3FB0A309BE727E0D4F143A9":
            level.steam_damage_player = [ ( 2716, -158, 708 ), ( 8215, 874, 342 ), ( 6524, 1561, 316 ), ( 5827, -860, 357 ), ( 4268, -47, 452 ), ( 2305, -1994, 386 ), ( 5172, 2587, 231 ), ( 2691, 3096, 302 ), ( -910, 3497, 318 ), ( -3579, -544, 320 ), ( 2591, 1659, 545 ), ( 1033, -514, 447 ), ( -93, -2789, 169 ), ( -1301, 924, 315 ), ( -2843, 2779, 316 ) ];
            break;
        default:
            level.steam_damage_player = relic_healthpacks();
            break;
    }

    level.steam_damage_player = scripts\engine\utility::array_randomize( level.steam_damage_player );
}

relic_healthpacks()
{
    var_0 = [];
    var_1 = getentarray( "_encstr_BC7205C8ABFDE7", "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( level.mapname == "_encstr_8C200C3DB1A98AFBEB6BBA22B0BD" )
    {
        var_2 = [];

        foreach ( var_4 in var_1 )
        {
            if ( var_4.script_label == "_encstr_AF4C02EA" && distance( var_4.origin, ( -333, 1999, 119 ) ) < 5 )
            {
                var_2[var_2.size] = var_4;
                continue;
            }

            if ( var_4.script_label == "_encstr_9B4C028A" && distance( var_4.origin, ( 189, 1564, 75 ) ) < 5 )
            {
                var_2[var_2.size] = var_4;
                continue;
            }

            if ( var_4.script_label == "_encstr_A94C0242" && distance( var_4.origin, ( -751, 2416, 81 ) ) < 5 )
            {
                var_2[var_2.size] = var_4;
                continue;
            }

            if ( var_4.script_label == "_encstr_B94C02A9" && distance( var_4.origin, ( 165, 2420, 79 ) ) < 5 )
            {
                var_2[var_2.size] = var_4;
                continue;
            }

            if ( var_4.script_label == "_encstr_BD4C02AB" && distance( var_4.origin, ( -823, 1536, 68 ) ) < 5 )
                var_2[var_2.size] = var_4;
        }

        var_1 = scripts\engine\utility::array_remove_array( var_1, var_2 );
    }

    if ( var_1.size > 0 )
    {
        foreach ( var_4 in var_1 )
            var_0[var_0.size] = var_4.origin;
    }

    return var_0;
}

steam_fx_off()
{
    var_0 = getdvarint( "_encstr_9BAA1676B31B3E0B4582C0E8BBD1C5B3B75F63E509CB0371", 2000 );
    self.maxhealth = var_0;
    self.startinghealth = var_0;
}

playgotinfectedsoundcount( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = 0;

    if ( var_0.team == "_encstr_BA840579D3F7F6" && scripts\mp\utility\weapon::iskillstreakweapon( var_3.basename ) && !scripts\mp\utility\weapon::weaponbypassspawnprotection( var_3 ) && var_4 != "_encstr_8AED0A5719ED37B8FB512FD7" )
        var_5 = 1;

    return var_5;
}

_id_1314D()
{
    var_0 = getspawnpoint();
    var_1 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0.origin );
    var_1.playerspawnpos = var_0.origin;
    var_1.playerspawnangles = var_0.angles;
    var_1.notti = 0;
    var_1.issuper = 1;
    var_1._id_133E3 = 1;
    self.setspawnpoint = var_1;
}

_id_14124( var_0, var_1 )
{
    return 1;
}

_id_133F7()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self notify( "_encstr_9DBA17A09741B9E34B7FB0AE12121720BF0368101FE250AB92" );
    self endon( "_encstr_9DBA17A09741B9E34B7FB0AE12121720BF0368101FE250AB92" );
    var_0 = 0;
    var_1 = 1;

    for (;;)
    {
        if ( var_1 )
            self waittill( "_encstr_B8030CCE4B3B2B627B8523DEBAD1" );
        else
            self waittill( "_encstr_983508635BE787C548A1" );

        if ( self.pers["_encstr_89EF05D46BA8FD"] == "_encstr_BC850785638DA59537" )
            continue;

        if ( var_0 < 2 )
        {
            if ( !var_0 )
                wait 5;

            scripts\mp\utility\lower_message::setlowermessageomnvar( 77 );
            wait 5;
            scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
            var_0++;
            continue;
        }

        break;
    }
}
