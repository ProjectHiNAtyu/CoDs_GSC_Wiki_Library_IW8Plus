// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    if ( getdvar( "_encstr_9E700851BEE33DF1B547" ) == "_encstr_8A510E519897A1332E4A3898E243F5B9" )
        return;

    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    var_0[0] = "_encstr_B3A205D647D68D";
    scripts\mp\gameobjects::main( var_0 );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerroundswitchdvar( scripts\mp\utility\game::getgametype(), 1, 0, 1 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
    }

    updategametypedvars();
    level.teambased = 1;
    level.disablebuddyspawn = 1;
    level.onstartgametype = ::onstartgametype;
    level.onplayerconnect = ::onplayerconnect;
    level.getspawnpoint = ::getspawnpoint;
    level.onplayerkilled = ::onplayerkilled;
    level.modeonspawnplayer = ::onspawnplayer;
    level.onobjectivecomplete = ::onflagcapture;
    level.ondeadevent = ::ondeadevent;
    level.lastcaptime = gettime();
    level.gamemodegesturecalloutassign = ::assigngamemodecallout;
    level.gamemodegesturecalloutverify = ::verifygamemodecallout;
    level.alliescapturing = [];
    level.axiscapturing = [];
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_82CC14D79FCAAD80513299D65F3F30D3920779730F22";

    if ( getdvarint( "_encstr_B8020A9E9AA69A6292517AA0" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_891904A1D8BE" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];
    else if ( getdvarint( "_encstr_93570B93F4A9629272A825B426" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_889708C9D0E7EBE819D9" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];

    game["_encstr_B8DA073D799798C7C7"]["_encstr_9E240C10CE33016D6AEA39B0F244"] = "_encstr_AF210DD2E801C30F9B7D97AF86E06F";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B3420C3D576AC3C8736F09906BB2"] = "_encstr_AF210DD2E801C30F9B7D97AF86E06F";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9B270B734D912F6A23989229D8"] = "_encstr_9B270B734D912F6A23989229D8";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_97270B9B02A39BC5491A2FD8F1"] = "_encstr_97270B9B02A39BC5491A2FD8F1";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_94270B37ACB1EAC9D2E6D9AFB1"] = "_encstr_94270B37ACB1EAC9D2E6D9AFB1";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9B010A6BE98E8008E8A95961"] = "_encstr_B73009B2CFBB5BEA95966E";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_AD010AA0AF5B9BD57A3FB026"] = "_encstr_BE30099BB2B1BA9356EB4C";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_94010A27C08185D333CDD1D6"] = "_encstr_9F30096EBD577305BF19E8";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_ADDC095B9083991237505E"] = "_encstr_ADDC095B9083991237505E";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_82DC09F83D8641927FE903"] = "_encstr_82DC09F83D8641927FE903";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_AADC09DB10031992B7D05E"] = "_encstr_AADC09DB10031992B7D05E";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_A36807BA7B9F6B0F41"] = "_encstr_A36807BA7B9F6B0F41";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_88680789658B515ED2"] = "_encstr_88680789658B515ED2";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_876807E02FEF41687E"] = "_encstr_876807E02FEF41687E";
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_B1F719DB81D68FAD58DB6B4FD54076A7E67963332BAE3FAB983365", getmatchrulesdata( "_encstr_ADEB084BD085F96F98AE", "_encstr_A6BB1009B968DFBE478AD4DB160751D26AAF" ) );
    setdynamicdvar( "_encstr_8A9A1CDCC6C9D7D6E8D66CEBCCD82C3B39ACAEA3E485D8A5A70BD1D2F6CD", getmatchrulesdata( "_encstr_ADEB084BD085F96F98AE", "_encstr_8A23138D6896BC27D09390DB7E19B96A87F3C7F7E8" ) );
    setdynamicdvar( "_encstr_80BF13ABD9D301617350EE57BA26BA0F26C983E9DB", getmatchrulesdata( "_encstr_ADEB084BD085F96F98AE", "_encstr_ABFA0A6FE25DC9D3F90853D3" ) );
    setdynamicdvar( "_encstr_BA4D1637D827FAD647DA36AF0EC9561A853805BD5AB93A9B", getmatchrulesdata( "_encstr_896C0AB92D59CE958816E885", "_encstr_93730DC19CB268B00E41B75A9BA36E" ) );
    setdynamicdvar( "_encstr_AF08158ED973A7F3886AD1CF1898BA93202ABAFB30CFDF", getmatchrulesdata( "_encstr_A22E0C4FC8CBBC9B3565CFBED53B", "_encstr_B1B60CB2A9BF5BD39353F4D15190" ) );
    setdynamicdvar( "_encstr_B81E16F31BB2E16543C021E0DF9F377560A23DC5F016B7C8", getmatchrulesdata( "_encstr_A22E0C4FC8CBBC9B3565CFBED53B", "_encstr_8F940D4E2779DBD5EB80A32FD8E1A1" ) );
    setdynamicdvar( "_encstr_A3C212E66C4EAF5B47B51BBE0DC28D33D1D26BCA", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_B3A205D647D68D", 0 );
}

seticonnames()
{
    level.iconneutral = "_encstr_B6B118EE58F207B7B4DC47EB1BC28347AE93B2B956D5D14E0BD8";
    level.iconcapture = "_encstr_B69A11DBA05BBA1FB0A0E4D7CE59AB43BBD062";
    level.icondefend = "_encstr_944B10F7CF52BBADA31823A97083A7A7E825";
    level.iconcontested = "_encstr_873B13BB58F20EBDD273E8F5367B37E82BB9472BC8";
    level.icontaking = "_encstr_A40710BBB02F07B7D2E6D1BE8E165B2D73CE";
    level.iconlosing = "_encstr_9302101F7763CF80699D83FE0547A88BAAC7";
    level.icontarget = "_encstr_8CBC1541EF50B54F8C11D34BB8EBD36B7979C1C20FF8FB";
}

onstartgametype()
{
    seticonnames();

    foreach ( var_1 in level.teamnamelist )
    {
        scripts\mp\utility\game::setobjectivetext( var_1, &"_encstr_AD670FC4BE7A19967967E5DB17964D01C5" );

        if ( level.splitscreen )
            scripts\mp\utility\game::setobjectivescoretext( var_1, &"_encstr_AD670FC4BE7A19967967E5DB17964D01C5" );
        else
            scripts\mp\utility\game::setobjectivescoretext( var_1, &"_encstr_B44615F49092A2868AA42B5135CB883D53F5D41AE92515" );

        scripts\mp\utility\game::setobjectivehinttext( var_1, &"_encstr_A40414608105DF870FDB2E35CEB84395A3D198988941" );
    }

    setclientnamemode( "_encstr_95900C2EDBD01F99D6B1DFEB878D" );

    if ( !isdefined( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
        game["_encstr_A6D60EE09BF413B9945185CB4797C583"] = 0;

    if ( !isdefined( game["_encstr_AB720F9393E142393868A5EFA70879DA46"] ) )
        game["_encstr_AB720F9393E142393868A5EFA70879DA46"] = level.teamnamelist;

    initspawns();
    thread setupflags();
    thread startgame();
}

startgame()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    wait 15.0;

    foreach ( var_1 in level.objectives )
    {
        var_1 scripts\mp\gameobjects::setobjectivestatusicons( level.iconneutral );
        var_1 scripts\mp\gameobjects::enableobject();
        var_1 scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
        var_1 scripts\mp\gameobjects::allowuse( "_encstr_BC19047780DA" );
    }
}

updategametypedvars()
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
    level.flagcapturetime = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_A6BB1009B968DFBE478AD4DB160751D26AAF", 30, 0, 30 );
    level.flagneutralization = scripts\mp\utility\dvars::dvarintvalue( "_encstr_8A23138D6896BC27D09390DB7E19B96A87F3C7F7E8", 0, 0, 1 );
    level.precappoints = scripts\mp\utility\dvars::dvarintvalue( "_encstr_93730DC19CB268B00E41B75A9BA36E", 0, 0, 1 );
    level.capturedecay = scripts\mp\utility\dvars::dvarintvalue( "_encstr_8F940D4E2779DBD5EB80A32FD8E1A1", 1, 0, 1 );
    level.capturetype = scripts\mp\utility\dvars::dvarintvalue( "_encstr_B1B60CB2A9BF5BD39353F4D15190", 1, 0, 3 );
    level.objectivescaler = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_ABFA0A6FE25DC9D3F90853D3", 4, 1, 10 );
}

initspawns()
{
    scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_B3A205D445D40D", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    var_0 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_8AFB1425473F52FC2088E76F2899B72A675EEB5E2EC1" );

    foreach ( var_2 in game["_encstr_AB720F9393E142393868A5EFA70879DA46"] )
        scripts\mp\spawnlogic::registerspawnpoints( var_2, var_0 );

    level.startlocations = [];

    foreach ( var_5 in var_0 )
    {
        if ( !isdefined( var_5.target ) || var_5.target == "_encstr_A40101" )
            continue;

        if ( !isdefined( var_5.script_noteworthy ) || var_5.script_noteworthy == "_encstr_A40101" )
        {

        }

        if ( int( var_5.script_noteworthy ) != game["_encstr_AB720F9393E142393868A5EFA70879DA46"].size )
            continue;

        var_6 = level.startlocations[var_5.target];

        if ( isdefined( var_6 ) )
        {
            var_6.spawnpoints[var_6.spawnpoints.size] = var_5;
            continue;
        }

        var_7 = scripts\engine\utility::getstruct( var_5.target, "_encstr_B8CE0BE43FC317DF690862BA48" );
        var_8 = spawnstruct();
        var_8.origin = var_7.origin;
        var_8.angles = var_7.angles;
        var_8.spawnpoints = [];
        var_8.spawnpoints[0] = var_5;
        var_8.inuse = 0;
        level.startlocations[var_5.target] = var_8;
    }

    foreach ( var_11, var_6 in level.startlocations )
    {
        scripts\mp\spawnlogic::registerspawnset( var_11, var_6.spawnpoints );
        scripts\mp\spawnlogic::activatespawnset( var_11 );
    }

    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
}

getspawnpoint()
{
    scripts\mp\spawnlogic::deactivateallspawnsets();

    if ( !isdefined( level.teamspawnlocations ) )
        level.teamspawnlocations = [];

    var_0 = level.teamspawnlocations[self.team];

    if ( isdefined( var_0 ) )
    {
        scripts\mp\spawnlogic::activatespawnset( var_0 );
        var_1 = scripts\mp\spawnlogic::getspawnpoint( self, self.team, undefined, undefined, "_encstr_8B1904982C46" );
        return var_1;
    }

    foreach ( var_0, var_3 in level.startlocations )
    {
        if ( var_3.inuse )
            continue;

        scripts\mp\spawnlogic::activatespawnset( var_0 );
    }

    var_1 = scripts\mp\spawnlogic::getspawnpoint( self, self.team, undefined, undefined, "_encstr_8B1904982C46" );
    level.startlocations[var_1.target].inuse = 1;
    level.teamspawnlocations[self.team] = var_1.target;
    return var_1;
}

setupflags()
{
    var_0 = getentarray( "_encstr_8F74096A1B5767C9C3D708", "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( !var_0.size )
        return;

    foreach ( var_2 in var_0 )
    {
        if ( !isdefined( var_2.script_noteworthy ) || var_2.script_noteworthy == "_encstr_A40101" )
        {

        }

        if ( int( var_2.script_noteworthy ) != game["_encstr_AB720F9393E142393868A5EFA70879DA46"].size )
            continue;

        var_3 = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::setupobjective( var_2, 1 );
        var_3 scripts\mp\gameobjects::setobjectivestatusicons( level.icontarget );
        var_3 scripts\mp\gameobjects::disableobject();
        var_3 scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
        var_3 scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
        level.objectives[var_3.objectivekey] = var_3;
    }
}

onplayerkilled( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    if ( !isplayer( var_1 ) || var_1.team == self.team )
        return;

    if ( isdefined( var_4 ) && scripts\mp\utility\weapon::iskillstreakweapon( var_4.basename ) )
        return;

    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::awardgenericmedals( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 );
}

onspawnplayer()
{

}

onplayerconnect( var_0 )
{
    var_0.ui_dom_securing = undefined;
    var_0.ui_dom_stalemate = undefined;
    var_0 thread onplayerspawned();
}

onplayerspawned( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    for (;;)
    {
        self waittill( "_encstr_983508635BE787C548A1" );
        scripts\mp\utility\stats::setextrascore0( 0 );

        if ( isdefined( self.pers["_encstr_B2CF0967600940A373E78A"] ) )
            scripts\mp\utility\stats::setextrascore0( self.pers["_encstr_B2CF0967600940A373E78A"] );

        scripts\mp\utility\stats::setextrascore1( 0 );

        if ( isdefined( self.pers["_encstr_9CF70851FD0FB8B81BB3"] ) )
            scripts\mp\utility\stats::setextrascore1( self.pers["_encstr_9CF70851FD0FB8B81BB3"] );
    }
}

onflagcapture( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    scripts\mp\utility\dialog::statusdialog( "_encstr_87E708E6B236574E958C" + self.objectivekey, var_3, 1 );
    var_6 = scripts\mp\utility\game::getotherteam( var_3 );

    foreach ( var_8 in var_6 )
        scripts\mp\utility\dialog::statusdialog( "_encstr_88B7067D48EE6BBF" + self.objectivekey, var_8, 1 );

    scripts\mp\gameobjects::setvisibleteam( "_encstr_AABA05236DC831" );
    scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );

    if ( isdefined( self.flagmodel ) )
        self.flagmodel hide();

    if ( !isdefined( level.remainingflags ) )
        level.remainingflags = level.objectives.size;

    level.remainingflags--;

    if ( level.remainingflags == 0 )
        setremainingteams();
}

assigngamemodecallout()
{
    var_0 = self geteye();
    var_1 = self getplayerangles();
    var_2 = anglestoforward( var_1 );
    var_3 = cos( 10 );
    var_4 = 250000;
    var_5 = undefined;
    var_6 = undefined;
    var_7 = undefined;
    var_8 = undefined;
    var_9 = undefined;

    foreach ( var_11 in level.objectives )
    {
        var_12 = vectornormalize( var_11.trigger.origin - var_0 );
        var_13 = vectordot( var_2, var_12 );
        var_14 = distancesquared( var_11.trigger.origin, var_0 );

        if ( !isdefined( var_5 ) || var_5 < var_13 )
        {
            var_5 = var_13;
            var_7 = var_14;
            var_6 = var_11;
        }

        if ( !isdefined( var_8 ) || var_8 > var_14 )
        {
            var_8 = var_14;
            var_9 = var_11;
        }
    }

    var_11 = undefined;
    var_16 = undefined;
    var_17 = undefined;

    if ( isdefined( var_5 ) && var_5 > var_3 )
    {
        var_11 = var_6;
        var_18 = getsubstr( var_11.objectivekey, 1, 2 );

        if ( var_11.ownerteam == "_encstr_9BA4080D39CFFB5AB7C1" )
        {
            var_16 = self.name + "_encstr_9CF30BF28727A3CBE5D31ACF78" + var_18 + "_encstr_A34C0212";
            var_17 = "_encstr_9EEB08EFAF2B15984A67";
        }
        else if ( var_11.ownerteam == self.team )
        {
            var_16 = self.name + "_encstr_BE270B25D210E56805FDE17176" + var_18 + "_encstr_A34C0212";
            var_17 = "_encstr_8C0C07812DDF6808AB";
        }
        else
        {
            var_16 = self.name + "_encstr_A6760B8E0250CDE60B57C6A308" + var_18 + "_encstr_A34C0212";
            var_17 = "_encstr_973508BF93EFFBC363B3";
        }
    }
    else if ( isdefined( var_8 ) && var_8 < var_4 )
    {
        var_11 = var_9;
        var_18 = getsubstr( var_11.objectivekey, 1, 2 );

        if ( var_11.ownerteam == "_encstr_9BA4080D39CFFB5AB7C1" )
        {
            var_16 = self.name + "_encstr_9CF30BF28727A3CBE5D31ACF78" + var_18 + "_encstr_A34C0212";
            var_17 = "_encstr_9EEB08EFAF2B15984A67";
        }
        else if ( var_11.ownerteam == self.team )
        {
            var_16 = self.name + "_encstr_BE270B25D210E56805FDE17176" + var_18 + "_encstr_A34C0212";
            var_17 = "_encstr_8C0C07812DDF6808AB";
        }
        else
        {
            var_16 = self.name + "_encstr_A6760B8E0250CDE60B57C6A308" + var_18 + "_encstr_A34C0212";
            var_17 = "_encstr_973508BF93EFFBC363B3";
        }
    }

    if ( isdefined( var_11 ) )
        thread scripts\cp_mp\gestures::applygamemodecallout( var_11, var_16, var_17 );

    return isdefined( var_11 );
}

verifygamemodecallout( var_0, var_1 )
{
    var_2 = 0;

    switch ( var_0 )
    {
        case "_encstr_9EEB08EFAF2B15984A67":
            if ( var_1.team == self.team )
                var_2 = 1;

            break;
        case "_encstr_8C0C07812DDF6808AB":
            if ( var_1.team == self.team )
                var_2 = 1;

            break;
        case "_encstr_973508BF93EFFBC363B3":
            if ( var_1.team == self.team )
                var_2 = 1;

            break;
    }

    return var_2;
}

ondeadevent( var_0 )
{
    if ( var_0 == "_encstr_A61904730372" )
        setremainingteams();
    else
    {
        var_1 = scripts\mp\utility\teams::getenemyteams( var_0 );
        var_2 = [];

        foreach ( var_4 in var_1 )
            var_2[var_4] = 0;

        if ( !istrue( level.disablespawning ) )
        {
            foreach ( var_4 in var_1 )
            {
                foreach ( var_8 in scripts\mp\utility\teams::getteamdata( var_4, "_encstr_8875080E3685E52B93B9" ) )
                {
                    if ( !istrue( var_8.hasspawned ) )
                        continue;

                    var_2[var_4] = var_2[var_4] + var_8.pers["_encstr_A2AA0636969D2BE6"];
                }
            }
        }

        var_11 = [];

        foreach ( var_4 in var_1 )
        {
            if ( scripts\mp\utility\teams::getteamdata( var_4, "_encstr_892A0BA3D3F25C4033ADD34893" ) || var_2[var_4] )
                var_11[var_11.size] = var_4;
        }

        if ( var_11.size == 1 )
            setremainingteams( var_11[0] );
    }
}

setremainingteams( var_0 )
{
    if ( istrue( level.remainingteamsset ) )
        return;

    level.remainingteamsset = 1;
    game["_encstr_AB720F9393E142393868A5EFA70879DA46"] = [];

    foreach ( var_2 in level.objectives )
    {
        if ( var_2.ownerteam == "_encstr_9BA4080D39CFFB5AB7C1" )
            continue;

        if ( !scripts\engine\utility::array_contains( game["_encstr_AB720F9393E142393868A5EFA70879DA46"], var_2.ownerteam ) )
            game["_encstr_AB720F9393E142393868A5EFA70879DA46"][game["_encstr_AB720F9393E142393868A5EFA70879DA46"].size] = var_2.ownerteam;
    }

    if ( isdefined( var_0 ) && !scripts\engine\utility::array_contains( game["_encstr_AB720F9393E142393868A5EFA70879DA46"], var_0 ) && game["_encstr_AB720F9393E142393868A5EFA70879DA46"].size < level.objectives.size )
        game["_encstr_AB720F9393E142393868A5EFA70879DA46"][game["_encstr_AB720F9393E142393868A5EFA70879DA46"].size] = var_0;

    foreach ( var_5 in level.players )
    {
        if ( scripts\engine\utility::array_contains( level.teamnamelist, var_5.team ) )
        {
            if ( !scripts\engine\utility::array_contains( game["_encstr_AB720F9393E142393868A5EFA70879DA46"], var_5.team ) )
                var_5 scripts\mp\menus::addtoteam( "_encstr_A68C0A5803A5D151A2B310A6" );
        }
    }

    if ( game["_encstr_AB720F9393E142393868A5EFA70879DA46"].size == 1 )
    {
        scripts\mp\gamescore::giveteamscoreforobjective( game["_encstr_AB720F9393E142393868A5EFA70879DA46"][0], 1, 0 );
        thread scripts\mp\gamelogic::endgame( game["_encstr_AB720F9393E142393868A5EFA70879DA46"][0], game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_A636132B37CAB5A595DCF556B14BD696DC85A39591"] );
    }
    else
        thread scripts\mp\gamelogic::endgame( "_encstr_8A190423A45D", game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_B22214F6314DAC361DB4D9B27D1BDB6BE0639547B291"] );
}
