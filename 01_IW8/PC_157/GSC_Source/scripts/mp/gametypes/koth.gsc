// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    if ( getdvar( "_encstr_9E700851BEE33DF1B547" ) == "_encstr_8A510E519897A1332E4A3898E243F5B9" )
        return;

    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    var_0[0] = scripts\mp\utility\game::getgametype();
    var_0[1] = "_encstr_957B0A886F934BCA0F8022FB";
    var_0[2] = "_encstr_A919048E91AD";
    scripts\mp\gameobjects::main( var_0 );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 300 );
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 300 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
    }

    updategametypedvars();
    level.hpstarttime = 0;
    level.scoreperplayer = undefined;
    level.teambased = 1;
    level.onstartgametype = ::onstartgametype;
    level.onplayerconnect = ::onplayerconnect;
    level.getspawnpoint = ::getspawnpoint;
    level.modeonspawnplayer = ::onspawnplayer;
    level.onplayerkilled = ::onplayerkilled;
    level.onrespawndelay = ::getrespawndelay;
    level.lastcaptime = gettime();
    level.usehprules = 1;
    level.usezonecapture = 1;
    level.getkothzonedeadzonedist = ::getkothzonedeadzonedist;
    level.alliescapturing = [];
    level.axiscapturing = [];
    level.lastcaptureteam = undefined;
    level.previousclosespawnent = undefined;
    setomnvar( "_encstr_A35F101B22CF9B2071CE734BD72610D3831A", 0 );
    setomnvar( "_encstr_AB4910D5D2EB0DE2BEDB77DC2B93D1CA2CDA", -1 );
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_B90E1376B0AD5647CB0ECAD71AC22719C1B7D2B9A3";

    if ( getdvarint( "_encstr_B8020A9E9AA69A6292517AA0" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_891904A1D8BE" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];
    else if ( getdvarint( "_encstr_93570B93F4A9629272A825B426" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_889708C9D0E7EBE819D9" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];

    game["_encstr_B8DA073D799798C7C7"]["_encstr_A1B206E238A5E3F5"] = "_encstr_AFE91072B8E0C71BBFB8E2CBC0391567789D";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9E240C10CE33016D6AEA39B0F244"] = "_encstr_AFE91072B8E0C71BBFB8E2CBC0391567789D";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B3420C3D576AC3C8736F09906BB2"] = "_encstr_AFE91072B8E0C71BBFB8E2CBC0391567789D";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_82CF0EC793BAB0234DF2BB739D297055"] = "_encstr_82CF0EC793BAB0234DF2BB739D297055";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B4150DDE894DF5D816E0E85DE45923"] = "_encstr_B4150DDE894DF5D816E0E85DE45923";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B4290943B2D929098BBE5B"] = "_encstr_B4290943B2D929098BBE5B";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_878D10D038EB37ACDDBE36F6C685D12D7B37"] = "_encstr_878D10D038EB37ACDDBE36F6C685D12D7B37";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9C3412601350E6227BEDE3258F7F09E87BB75BAB"] = "_encstr_9C3412601350E6227BEDE3258F7F09E87BB75BAB";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_ABCF15B8D96FD2074F7D0372FF320E606B3019FE6BB1E2"] = "_encstr_ABCF15B8D96FD2074F7D0372FF320E606B3019FE6BB1E2";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_A25E0D3A38076E0F609DC5EBB529EB"] = "_encstr_A25E0D3A38076E0F609DC5EBB529EB";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_8CD90D58DB47B8CF6B5F504E351205"] = "_encstr_8CD90D58DB47B8CF6B5F504E351205";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_8AF313129B3817C62041C5CA13B80F9F5D305ACA02"] = "_encstr_8AF313129B3817C62041C5CA13B80F9F5D305ACA02";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_8BAD1628B286A879FA4913522FD53FB7630B40801884F521"] = "_encstr_8BAD1628B286A879FA4913522FD53FB7630B40801884F521";
    level.nosuspensemusic = 1;
    thread writeplayerrotationscoretomatchdataongameend();
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_A67516DC369C7DD67B4786FA9EDECD9531B4339547A5D6B2", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_AB550D1AE890CF458378127B78F347" ) );
    setdynamicdvar( "_encstr_8C01190E6E930FC0C773D86963EFB8A368160715432B336FB90F88", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_A4CE10EA521B2D81CEE0616B0A37C1E3FF6A" ) );
    setdynamicdvar( "_encstr_870722C39A6308F845EC4137E62CF8E683E1D8E842075E789CC65B69019540356F1A91B2", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_8FE519BE0B480233CAED12AA2DBECB7C80832409AFF0873F89F97B" ) );
    setdynamicdvar( "_encstr_AB781DA643EBCEFFF57378B9EB8DBDC17FEBAD13CE4F5323DDFA1160A2266B", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_B34B147AED56109F729B83B5E72BC3F8FE8F01309699" ) );
    setdynamicdvar( "_encstr_B4A71D172FEB8988B770C1975B71662C2879990FD61EA8580F9E3570AF6DBB", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_979F1493857391ED5B62EDB10B47B4F6737A9C23569C" ) );
    setdynamicdvar( "_encstr_A32419371BE47DDAED3AA1EB2C8C234B1D4BB395356CF6E44B73CE", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_939C10162319D21D9667AC35C6DE9C96B9D9" ) );
    setdynamicdvar( "_encstr_AA4B136E0EF36FA0A713F8496BC13B6F2A7BEBF967", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_82FE0AEBC1553FAF59D36575" ) );
    setdynamicdvar( "_encstr_9C6A158703C2A1E2EF0B48D672BF291858A8311BB1EF30", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_9D210C2D459309DB3AF230881ACA" ) );
    setdynamicdvar( "_encstr_87E2140B51063F9C30B9303F8FF02657A029E202F95B", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_A2A10B53E0A383E3DDFD24218B" ) );
    setdynamicdvar( "_encstr_8A3E147BD1128FEA3DF510962D5EFDE329FFBBBDA953", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_822F0B5D6ECA211592D5B12B6E" ) );
    setdynamicdvar( "_encstr_97C2126EB193F5B57B8E1ABE0D858D99D1A5ADCA", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_B7D7054F3030F9", 0 );
}

onstartgametype()
{
    foreach ( var_1 in level.teamnamelist )
    {
        scripts\mp\utility\game::setobjectivetext( var_1, &"_encstr_BAE0103D214915D08A94B215355E5AA72A90" );

        if ( level.splitscreen )
            scripts\mp\utility\game::setobjectivescoretext( var_1, &"_encstr_BAE0103D214915D08A94B215355E5AA72A90" );
        else
            scripts\mp\utility\game::setobjectivescoretext( var_1, &"_encstr_8B8E164F6053E76BB3EC3ED1B606970591A02786A78749DD" );

        scripts\mp\utility\game::setobjectivehinttext( var_1, &"_encstr_9FE015D321498AD0A252B2516ACB5A7A2A84F58452392A" );
    }

    if ( level.scoremod["_encstr_97D70583536853"] > 0 )
    {
        game["_encstr_B8DA073D799798C7C7"]["_encstr_9E240C10CE33016D6AEA39B0F244"] = "_encstr_9D3410D687578319218A90704385E1DBC722";
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B3420C3D576AC3C8736F09906BB2"] = "_encstr_9D3410D687578319218A90704385E1DBC722";
    }

    setclientnamemode( "_encstr_95900C2EDBD01F99D6B1DFEB878D" );
    level thread setupzones();
    level thread setupzoneareabrushes();
    initspawns();
    setkothwaypoints();
    seticonnames();

    if ( !level.zonerandomlocationorder )
        _id_12BBC();

    level thread hardpointmainloop();
}

updategametypedvars()
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
    level.zoneduration = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_AB550D1AE890CF458378127B78F347", 60, 0, 300 );
    level.zonecapturetime = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_A4CE10EA521B2D81CEE0616B0A37C1E3FF6A", 0, 0, 30 );
    level.firstzoneactivationdelay = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_8FE519BE0B480233CAED12AA2DBECB7C80832409AFF0873F89F97B", 30, 0, 60 );
    level.zoneactivationdelay = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_B34B147AED56109F729B83B5E72BC3F8FE8F01309699", 0, 0, 60 );
    level.zonerandomlocationorder = scripts\mp\utility\dvars::dvarintvalue( "_encstr_979F1493857391ED5B62EDB10B47B4F6737A9C23569C", 0, 0, 1 );
    level.zoneadditivescoring = scripts\mp\utility\dvars::dvarintvalue( "_encstr_939C10162319D21D9667AC35C6DE9C96B9D9", 0, 0, 1 );
    level._id_1221A = scripts\mp\utility\dvars::dvarintvalue( "_encstr_82FE0AEBC1553FAF59D36575", 1, 0, 1 );
    level.delayplayer = scripts\mp\utility\dvars::dvarintvalue( "_encstr_9D210C2D459309DB3AF230881ACA", 0, 0, 1 );
    level.spawndelay = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_A2A10B53E0A383E3DDFD24218B", 0.5, 0, 10 );
    level.usehqrules = scripts\mp\utility\dvars::dvarintvalue( "_encstr_822F0B5D6ECA211592D5B12B6E", 0, 0, 1 );

    if ( scripts\mp\utility\game::matchmakinggame() && !scripts\mp\utility\game::isanymlgmatch() && getdvarint( "_encstr_9DCA253EEB4366474DDBE051B3A50BFA539946357A8F88933EB238F8ABBEE93087365525D45FD2", 15 ) != 0 )
        level.zoneactivationdelay = binoculars_getfov();
}

binoculars_getfov()
{
    var_0 = scripts\cp_mp\utility\game_utility::getmapname();

    switch ( var_0 )
    {
        case "_encstr_AF89088A6177FB3F82EC":
        case "_encstr_A8640D3557CF220D73C043173809C3":
        case "_encstr_ABD70CF89341513127CC92B7AE5F":
            return getdvarint( "_encstr_9DCA253EEB4366474DDBE051B3A50BFA539946357A8F88933EB238F8ABBEE93087365525D45FD2", 15 );
        case "_encstr_B3FB0A309BE727E0D4F143A9":
            return getdvarint( "_encstr_9DCA253EEB4366474DDBE051B3A50BFA539946357A8F88933EB238F8ABBEE93087365525D45FD2", 15 ) + 15;
        default:
            return level.zoneactivationdelay;
    }
}

seticonnames()
{
    level.icontarget = "_encstr_B4DC0CAC70F31BD12B0EABD2C51B";
    level.iconneutral = "_encstr_B4730DA4C86902D740B84F733899AC";
    level.iconcapture = "_encstr_AA850D8AA0188A8711E22A9BA35F20";
    level.icondefend = "_encstr_BE470C6DDE8E86FA23ACCCB27346";
    level.iconcontested = "_encstr_A6500F5B7B1D0DBE1BDECD8EACE63AB291";
    level.icontaking = "_encstr_8A0B0CDAF61D1AAF472C6DD29B3B";
    level.iconlosing = "_encstr_AFF50C1BF0A8B081DC1FC3D0706F";
    level.icondefending = "_encstr_A31F0FB57BD11AAF462B3356CD19B4DCD9";
}

hardpointmainloop()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    setomnvar( "_encstr_8F3A1BEB90107F5E981BBB943B40A7772D08E2121BC8B793D859A08DC9", 1 );
    setomnvar( "_encstr_B1A313BA4BBE86C2C93238DE4B9B3ABE475AD6B29C", 0 );
    level.zone = getfirstzone();
    var_0 = 1;
    level.kothhillrotation = 0;

    if ( !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        level scripts\engine\utility::_id_143A5( "_encstr_989F0E38272BD6161DB143F532BDDC2B", "_encstr_8B5511DC1D16398EAF5BF68CACBECDB21DAB07" );

    level.zone _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::activatezone();
    level.favorclosespawnent = level.zone;
    level.zone.active = 1;
    level.zone scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
    level.zone scripts\mp\gameobjects::setobjectivestatusicons( level.icontarget );
    scripts\mp\utility\game::_id_119AC( undefined, undefined, "_encstr_A61E0EBE5D036AF4234892CBB86B3573", level.zone.trigger.origin );
    level.zone thread scripts\common\utility::_id_13E0A( level._id_11B29, "_encstr_BCA40BDBAB41B22F6B88C30FC1", level.zone.trigger.origin );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    if ( level._id_1221A )
        level scripts\mp\gamelogic::pausetimer();

    setomnvar( "_encstr_8F3A1BEB90107F5E981BBB943B40A7772D08E2121BC8B793D859A08DC9", 0 );
    var_1 = 0;

    if ( level.firstzoneactivationdelay )
    {
        var_1 = 1;
        level.zoneendtime = int( gettime() + level.firstzoneactivationdelay * 1000 );
        setomnvar( "_encstr_B1A313BA4BBE86C2C93238DE4B9B3ABE475AD6B29C", level.zoneendtime );
        setomnvar( "_encstr_B2410DABD050A35AF1F76C41C198E2", 12 );
        level._id_14726 = 1;
        level thread scripts\mp\hud_message::updatematchstatushintforallplayers( undefined, 36, 36 );
        level thread waitthenplaynewobj();
        level.zone thread _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::_id_1199E( level.firstzoneactivationdelay, level.zone.curorigin + level.zone.offset3d );
        wait( level.firstzoneactivationdelay );
        level._id_14726 = 0;
        level thread scripts\mp\hud_message::updatematchstatushintforallplayers( undefined, 35, 35 );
        scripts\mp\utility\game::setmlgannouncement( 5, "_encstr_B77805CC2759AC" );
    }

    scripts\mp\utility\sound::playsoundonplayers( "_encstr_A83B1369909FE80B39E2E0A09A8BE3A3AF17EE5478" );

    for (;;)
    {
        if ( !isdefined( level._id_11AD5 ) )
            level thread setupzonecallouts();

        level.objectivesetorder = 1;

        if ( level._id_1221A )
            level scripts\mp\gamelogic::resumetimer();

        waittillframeend;
        level.zone scripts\mp\gameobjects::enableobject();
        level.zone.capturecount = 0;

        if ( level.codcasterenabled )
            level.zone thread _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::trackgametypevips();

        scripts\mp\spawnlogic::clearlastteamspawns();
        hqactivatenextzone( var_1, var_0 );
        var_0 = 0;
        var_1 = 0;
        setomnvar( "_encstr_B2410DABD050A35AF1F76C41C198E2", 10 );
        scripts\mp\spawnlogic::clearlastteamspawns();
        hpcaptureloop();
        var_2 = level.zone scripts\mp\gameobjects::getownerteam();

        if ( level._id_1221A )
            level scripts\mp\gamelogic::resumetimer();

        level.lastcaptureteam = undefined;
        level.zone killhardpointvfx();
        level.zone.active = 0;

        if ( istrue( level.usehpzonebrushes ) )
        {
            foreach ( var_4 in level.players )
                level.zone _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::hideplayerspecificbrushes( var_4 );
        }

        level.zone scripts\mp\gameobjects::disableobject();
        level.zone scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
        level.zone scripts\mp\gameobjects::setownerteam( "_encstr_9BA4080D39CFFB5AB7C1" );
        updateservericons( "_encstr_82270B4FDE3795FAB9D05A993A", 0 );
        level notify( "_encstr_AD740BDA4DF6B030833F577313" );
        setomnvar( "_encstr_B2410DABD050A35AF1F76C41C198E2", -1 );
        spawn_next_zone();

        if ( scripts\mp\utility\game::getgametype() == "_encstr_BC7205C8ABFDE7" && level.kothhillrotation == 1 )
        {

        }

        wait 0.5;

        if ( level.usehqrules )
            thread forcespawnplayers();

        wait 0.5;
    }
}

waitthenplaynewobj()
{
    if ( istrue( level.infilvotiming ) )
        wait 9.5;
    else
        wait 7.0;

    foreach ( var_1 in level.teamnamelist )
        scripts\mp\utility\dialog::statusdialog( "_encstr_B4290943B2D929098BBE5B", var_1 );
}

killhardpointvfx()
{
    foreach ( var_1 in level.players )
    {
        foreach ( var_3 in var_1._hardpointeffect )
        {
            var_1._hardpointeffect = scripts\engine\utility::array_remove( var_1._hardpointeffect, var_3 );

            if ( isdefined( var_3 ) )
                var_3 delete();
        }
    }

    if ( isdefined( self.neutralhardpointfx ) && self.neutralhardpointfx.size > 0 )
    {
        foreach ( var_3 in self.neutralhardpointfx )
            var_3 delete();
    }

    self.neutralhardpointfx = [];
}

_id_12BBC()
{
    switch ( level.mapname )
    {
        case "_encstr_AB570E0D67B6FB0E9710A26AF89746A7":
        case "_encstr_944B10ED4796DB2EB730820A98F760B76B25":
            level._id_12BBE = [ "_encstr_AF4C02EA", "_encstr_B94C02A9", "_encstr_A94C0242", "_encstr_AA4C024B", "_encstr_AB4C02E0" ];
            break;
        case "_encstr_975D094513E16B13BDCBCB":
        case "_encstr_BA940CB61CEBE6C1B22C93FA38B5":
            level._id_12BBE = [ "_encstr_BD4C02AB", "_encstr_B94C02A9", "_encstr_A94C0242", "_encstr_9B4C028A", "_encstr_8B4C02A3" ];
            break;
        case "_encstr_B7FF08B607EB1B853BCA":
        case "_encstr_94020B5F680693E2154DD156A1":
            level._id_12BBE = [ "_encstr_AF4C02EA", "_encstr_BD4C02AB", "_encstr_9B4C028A", "_encstr_A94C0242", "_encstr_B94C02A9" ];
            break;
        case "_encstr_984D0DC87A37E8DD33B35F475B8A95":
            level._id_12BBE = [ "_encstr_AF4C02EA", "_encstr_AA4C024B", "_encstr_B94C02A9", "_encstr_BD4C02AB", "_encstr_9B4C028A" ];
            break;
        case "_encstr_ABD70CF89341513127CC92B7AE5F":
            level._id_12BBE = [ "_encstr_A20703E7F2", "_encstr_BC07031A56", "_encstr_A94C0242", "_encstr_AF4C02EA", "_encstr_9B4C028A" ];
            break;
        case "_encstr_AF89088A6177FB3F82EC":
            level._id_12BBE = [ "_encstr_9407030723", "_encstr_9B4C028A", "_encstr_AB4C02E0", "_encstr_AA4C024B", "_encstr_BD4C02AB" ];
            break;
        case "_encstr_A4870E72AB086BF4A87FA1AC03B8FD17":
            level._id_12BBE = [ "_encstr_AF4C02EA", "_encstr_BD4C02AB", "_encstr_A14C027A", "_encstr_A94C0242", "_encstr_AB4C02E0" ];
            break;
        case "_encstr_88450D088B11A75B427F8C6AE7B018":
        case "_encstr_93670AB8D3011F93679BDBEE":
            level._id_12BBE = [ "_encstr_AF4C02EA", "_encstr_9407030723", "_encstr_BD4C02AB", "_encstr_B94C02A9", "_encstr_9407033702" ];
            break;
        case "_encstr_B7960C6AFB87E5ED88303BD1E848":
            level._id_12BBE = [ "_encstr_AF4C02EA", "_encstr_9B4C028A", "_encstr_A94C0242", "_encstr_B94C02A9", "_encstr_BD4C02AB" ];
            break;
        case "_encstr_BA630ED683BE8993EDC291B1C2B93A19":
            level._id_12BBE = [ "_encstr_AF4C02EA", "_encstr_9B4C028A", "_encstr_A94C0242", "_encstr_B94C02A9", "_encstr_BD4C02AB" ];
            break;
        default:
            break;
    }
}

getfirstzone()
{
    if ( isdefined( level._id_12BBE ) )
    {
        var_0 = level.objectives[level._id_12BBE[0]];
        level.prevzoneindex = 0;
        level.playerzombiedroploot = level.objectives[level._id_12BBE[1]];
    }
    else
    {
        var_0 = level.objectives["_encstr_AF4C02EA"];
        level.prevzoneindex = 1;
        level.playerzombiedroploot = level.objectives["_encstr_9B4C028A"];
    }

    var_0 thread _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::_id_144DA();
    level.playerzombiedroploot thread _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::_id_144DA();
    return var_0;
}

getnextzone()
{
    level notify( "_encstr_8CFA16373ADE07AFEE168E8D865ADCECAFD14E4BD99D2B93" );

    if ( level.zonerandomlocationorder )
    {
        var_0 = [];

        foreach ( var_2 in level.teamnamelist )
            var_0[var_2] = ( 0, 0, 0 );

        var_4 = scripts\mp\utility\game::getpotentiallivingplayers();

        foreach ( var_6 in var_4 )
        {
            if ( var_6.team == "_encstr_A68C0A5803A5D151A2B310A6" )
                continue;

            var_0[var_6.team] = var_0[var_6.team] + var_6.origin;
        }

        var_8 = [];

        foreach ( var_2 in level.teamnamelist )
        {
            var_10 = scripts\mp\utility\teams::getteamdata( var_2, "_encstr_8875080E3685E52B93B9" );
            var_11 = max( var_10.size, 1 );
            var_8[var_2] = var_0[var_2] / var_11;
        }

        if ( !isdefined( level.prevzonelist ) || isdefined( level.prevzonelist ) && level.prevzonelist.size == level.objectives.size - 1 )
            level.prevzonelist = [];

        level.prevzonelist[level.prevzonelist.size] = level.prevzoneindex;
        var_13 = 0.7;
        var_14 = 0.3;
        var_15 = undefined;
        var_16 = undefined;

        foreach ( var_18 in level.objectives )
        {
            var_19 = 0;

            foreach ( var_21 in level.prevzonelist )
            {
                if ( var_18.objectivekey == scripts\engine\utility::string( var_21 ) )
                {
                    var_19 = 1;
                    break;
                }
            }

            if ( var_19 )
                continue;

            var_23 = var_18;
            var_24 = 0;

            foreach ( var_2 in level.teamnamelist )
                var_24 = var_24 + distance2dsquared( var_23.curorigin, var_8[var_2] );

            var_27 = distance2dsquared( var_23.curorigin, level.zone.curorigin );
            var_28 = var_24 * var_13 + var_27 * var_14;

            if ( !isdefined( var_16 ) || var_28 > var_16 )
            {
                var_16 = var_28;
                var_15 = var_18.objectivekey;
            }
        }

        var_23 = level.objectives[var_15];
        level.prevzoneindex = var_15;
    }
    else
    {
        if ( isdefined( level._id_12BBE ) )
        {
            level.prevzoneindex++;

            if ( level.prevzoneindex > level._id_12BBE.size - 1 )
                level.prevzoneindex = 0;

            var_23 = level.objectives[level._id_12BBE[level.prevzoneindex]];
            var_30 = level.prevzoneindex + 1;

            if ( var_30 > level._id_12BBE.size - 1 )
                var_30 = 1;

            level.playerzombiedroploot = level.objectives[level._id_12BBE[var_30]];
        }
        else
        {
            level.prevzoneindex++;

            if ( level.prevzoneindex > level.objectives.size )
                level.prevzoneindex = 1;

            var_23 = level.objectives[scripts\engine\utility::string( level.prevzoneindex )];
            var_30 = level.prevzoneindex + 1;

            if ( var_30 > level.objectives.size )
                var_30 = 2;

            level.playerzombiedroploot = level.objectives[scripts\engine\utility::string( var_30 )];
        }

        level.playerzombiedroploot thread _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::_id_144DA();
    }

    return var_23;
}

spawn_next_zone()
{
    writecurrentrotationteamscore();
    level.zone _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::deactivatezone();
    level.zone = getnextzone();
    level.kothhillrotation++;
    level.zone _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::activatezone();
    level.favorclosespawnent = level.zone;
    level.zone.active = 1;
    level.zone.lastactivatetime = gettime();

    if ( level.zoneactivationdelay > 0 )
        level.zone scripts\mp\gameobjects::setobjectivestatusicons( level.icontarget );
    else
        level.zone scripts\mp\gameobjects::setobjectivestatusicons( level.iconneutral );

    scripts\mp\utility\game::_id_119AC( undefined, undefined, "_encstr_A61E0EBE5D036AF4234892CBB86B3573", level.zone.trigger.origin );
    level.zone thread scripts\common\utility::_id_13E0A( level._id_11B29, "_encstr_BCA40BDBAB41B22F6B88C30FC1", level.zone.trigger.origin );
}

hqactivatenextzone( var_0, var_1 )
{
    if ( var_1 )
    {
        foreach ( var_3 in level.teamnamelist )
            scripts\mp\utility\dialog::statusdialog( "_encstr_878314F62635AFD959CDAC4E4B1BFAB158381DBA27CA", var_3 );
    }
    else
    {
        foreach ( var_3 in level.teamnamelist )
            scripts\mp\utility\dialog::statusdialog( "_encstr_878D10D038EB37ACDDBE36F6C685D12D7B37", var_3 );
    }

    scripts\mp\utility\sound::playsoundonplayers( "_encstr_A83B1369909FE80B39E2E0A09A8BE3A3AF17EE5478" );
    level.zone thread _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::hardpoint_setneutral();
    level.zone scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );

    if ( istrue( var_0 ) )
    {

    }
    else if ( level.zoneactivationdelay )
    {
        level.zone scripts\mp\gameobjects::setobjectivestatusicons( level.icontarget );
        updateservericons( "_encstr_B451162D673A6D1989367BD09B71B893C2FBEFA9E7422760", 0 );
        level.zoneendtime = int( gettime() + 1000 * level.zoneactivationdelay );
        setomnvar( "_encstr_B1A313BA4BBE86C2C93238DE4B9B3ABE475AD6B29C", level.zoneendtime );
        setomnvar( "_encstr_B2410DABD050A35AF1F76C41C198E2", 12 );

        if ( level._id_1221A )
            level scripts\mp\gamelogic::pausetimer();

        level._id_14726 = 1;
        level thread scripts\mp\hud_message::updatematchstatushintforallplayers( undefined, 36, 36 );
        level.zone thread _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::_id_1199E( level.zoneactivationdelay, level.zone.curorigin + level.zone.offset3d );
        wait( level.zoneactivationdelay );
        level._id_14726 = 0;
        level thread scripts\mp\hud_message::updatematchstatushintforallplayers( undefined, 35, 35 );
        scripts\mp\utility\game::setmlgannouncement( 5, "_encstr_B77805CC2759AC" );
    }

    level.zone scripts\mp\gameobjects::setobjectivestatusicons( level.iconneutral );
    updateservericons( "_encstr_9BA4080D39CFFB5AB7C1", 0 );

    if ( level.zoneduration )
    {
        updateservericons( "_encstr_9BA4080D39CFFB5AB7C1", 0 );

        if ( level.usehqrules )
            thread locktimeruntilcap();
        else
        {
            thread movezoneaftertime( level.zoneduration );
            level.zoneendtime = int( gettime() + 1000 * level.zoneduration );
            setomnvar( "_encstr_B1A313BA4BBE86C2C93238DE4B9B3ABE475AD6B29C", level.zoneendtime );
        }
    }
    else
        level.zonedestroyedbytimer = 0;
}

locktimeruntilcap()
{
    level endon( "_encstr_ABC30E6A97B36DD93BB6927BC35DC801" );

    for (;;)
    {
        level.zoneendtime = int( gettime() + 1000 * level.zoneduration );
        setomnvar( "_encstr_B1A313BA4BBE86C2C93238DE4B9B3ABE475AD6B29C", level.zoneendtime );
        waitframe();
    }
}

hpcaptureloop()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_8FBD0BBA97A04F464F80533BE4" );
    level.hpstarttime = gettime();

    for (;;)
    {
        level.zone scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );
        level.zone scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
        level.zone scripts\mp\gameobjects::setusetext( &"_encstr_828E1539F01ECF237EE1298928075FE7C75BB30D717794" );

        if ( !level.usehqrules )
        {
            level.zone thread _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::hardpoint_setneutral();
            level.zone scripts\mp\gameobjects::cancontestclaim( 1 );
        }

        if ( isdefined( level.matchrules_droptime ) && level.matchrules_droptime )
            level thread _encstr_9D631E0ECE6A337043A3671FD786E2FE08C7798FD20D3EA7BFE342800DF1F3EF::randomdrops();

        var_0 = level scripts\engine\utility::_id_143AD( "_encstr_ABC30E6A97B36DD93BB6927BC35DC801", "_encstr_8C9C0F90B8CD42479108E7E3A8A8290AA1" );

        if ( var_0 == "_encstr_8C9C0F90B8CD42479108E7E3A8A8290AA1" )
            continue;

        var_1 = level.zone scripts\mp\gameobjects::getownerteam();
        scripts\mp\utility\sound::playsoundonplayers( "_encstr_80DB1F4A933003FE3879C8AF1BA0C397462913639B7ECF777979DFBB33584CEBFD", var_1 );
        scripts\mp\utility\sound::playsoundonplayers( "_encstr_82371FD6C1EB340B9346C1B7D2B91DAFD82CC147BAC95632BE732B9D0B1D2D9D56", scripts\mp\utility\game::getotherteam( var_1 )[0] );

        if ( level.usehqrules && level.zoneduration > 0 )
            thread movezoneaftertime( level.zoneduration );

        level waittill( "_encstr_8C9C0F90B8CD42479108E7E3A8A8290AA1", var_2 );

        if ( isdefined( var_2 ) )
            level.zone scripts\mp\gameobjects::setownerteam( var_2 );
        else
            level.zone scripts\mp\gameobjects::setownerteam( "_encstr_AABA05236DC831" );

        if ( level.usehqrules )
        {
            setomnvar( "_encstr_B2410DABD050A35AF1F76C41C198E2", -1 );
            break;
        }
    }
}

initspawns()
{
    scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_AA1608C17786F13312D3", "_encstr_A8E80F2F633A9549FE2228CDCB8CA0C052" );
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_9F9D1B6BE0F5B6ED8E43D76EE016DDB9F5C236B14BACE67DCDE82C4ED1" );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_B9BC19D60EBEDADBD186D7E60EC2EE73D70BE15A37EBE6D1169347" );
    scripts\mp\spawnlogic::addspawnpoints( game["_encstr_941C0A6AF345075ED05BEAD3"], "_encstr_9F9D1B6BE0F5B6ED8E43D76EE016DDB9F5C236B14BACE67DCDE82C4ED1" );
    scripts\mp\spawnlogic::addspawnpoints( game["_encstr_95A70AA81FEE295D3A2F56DE"], "_encstr_B9BC19D60EBEDADBD186D7E60EC2EE73D70BE15A37EBE6D1169347" );
    var_0 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_9F9D1B6BE0F5B6ED8E43D76EE016DDB9F5C236B14BACE67DCDE82C4ED1" );
    var_1 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_B9BC19D60EBEDADBD186D7E60EC2EE73D70BE15A37EBE6D1169347" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_9303101723E2CE585F5E839B464B688D6B97", var_0 );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", var_1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_88BF0E8D01193C57D5F8093303A7FFB5", 1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_88BF0E8D01193C57D5F8093303A7FFB5", 1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_97C218AD38FAB6B7A30DD7E60E85EEB97DCDACC6DE7346C2C9E5", 1, 1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_97C218AD38FAB6B7A30DD7E60E85EEB97DCDACC6DE7346C2C9E5", 1, 1 );

    if ( !isdefined( level.spawnpoints ) || istrue( level.binoculars_clearuidata ) )
    {
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_B1090D98F3211171B757B62F41F7F8" );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_B1090D98F3211171B757B62F41F7F8" );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
        var_2 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_B1090D98F3211171B757B62F41F7F8" );
        var_3 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997" );
        scripts\mp\spawnlogic::registerspawnset( "_encstr_930E073E8FC00DDF69", var_2 );
        scripts\mp\spawnlogic::registerspawnset( "_encstr_A30C093385361B4CB06C6D", var_3 );
    }

    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );

    if ( istrue( level.binoculars_clearuidata ) )
        return;

    foreach ( var_5 in level.objectives )
    {
        var_5.furthestspawndistsq = 0;
        var_5.spawnpoints = [];
        var_5.fallbackspawnpoints = [];
    }

    foreach ( var_8 in level.spawnpoints )
    {
        var_9 = var_8.classname == "_encstr_9F9D1B6BE0F5B6ED8E43D76EE016DDB9F5C236B14BACE67DCDE82C4ED1" || var_8.classname == "_encstr_B9BC19D60EBEDADBD186D7E60EC2EE73D70BE15A37EBE6D1169347";
        var_10 = 0;
        var_11 = var_8.classname == "_encstr_88BF0E8D01193C57D5F8093303A7FFB5";
        var_12 = var_8.classname == "_encstr_97C218AD38FAB6B7A30DD7E60E85EEB97DCDACC6DE7346C2C9E5";
        var_13 = [];

        if ( var_9 )
            continue;

        if ( var_11 || var_12 )
        {
            if ( isdefined( var_8.script_noteworthy ) && var_8.script_noteworthy != "_encstr_A40101" )
            {
                var_10 = 1;
                var_13 = strtok( var_8.script_noteworthy, "_encstr_884C02C6" );

                foreach ( var_15 in var_13 )
                {
                    if ( var_15 == "_encstr_891804D89D6C" || var_15 == "_encstr_B87706620223317F" )
                        continue;

                    if ( !postshipmodifiedzones( var_15 ) )
                    {
                        var_5 = level.objectives[var_15];

                        if ( var_11 )
                        {
                            var_5.spawnpoints[var_5.spawnpoints.size] = var_8;
                            continue;
                        }

                        var_5.fallbackspawnpoints[var_5.fallbackspawnpoints.size] = var_8;
                    }
                }
            }
        }

        calculatespawndisttozones( var_8, var_13 );
        var_17 = scripts\mp\spawnlogic::getoriginidentifierstring( var_8 );

        if ( isdefined( level.kothextraprimaryspawnpoints ) && isdefined( level.kothextraprimaryspawnpoints[var_17] ) )
        {
            foreach ( var_15 in level.kothextraprimaryspawnpoints[var_17] )
            {
                var_5 = level.objectives[var_15];
                var_5.spawnpoints[var_5.spawnpoints.size] = var_8;
            }
        }

        if ( !var_10 )
        {
            foreach ( var_5 in level.objectives )
            {
                if ( var_11 )
                {
                    var_5.spawnpoints[var_5.spawnpoints.size] = var_8;
                    continue;
                }

                var_5.fallbackspawnpoints[var_5.fallbackspawnpoints.size] = var_8;
            }
        }
    }

    foreach ( var_24, var_5 in level.objectives )
    {
        var_5.spawnset = "_encstr_829F0692C81D8BF9" + var_24;
        scripts\mp\spawnlogic::registerspawnset( var_5.spawnset, var_5.spawnpoints );
        var_5.fallbackspawnset = "_encstr_82FC0F5AEDD55321C8C3647CDD28F697E8" + var_24;
        scripts\mp\spawnlogic::registerspawnset( var_5.fallbackspawnset, var_5.fallbackspawnpoints );
    }
}

calculatespawndisttozones( var_0, var_1 )
{
    var_2 = 0;
    var_0.scriptdata.distsqtokothzones = [];

    foreach ( var_4 in level.objectives )
    {
        if ( isdefined( var_0.script_noteworthy ) && var_0.script_noteworthy == "_encstr_A40101" )
            var_2 = 1;
        else
        {
            foreach ( var_6 in var_1 )
            {
                if ( var_6 == var_4.trigger.objectivekey )
                {
                    var_2 = 1;
                    break;
                }
            }
        }

        if ( !var_2 )
            continue;

        var_8 = getpathdist( var_0.origin, var_4.trigger.baseorigin, 5000 );

        if ( var_8 < 0 )
            var_8 = scripts\engine\utility::distance_2d_squared( var_0.origin, var_4.trigger.baseorigin );
        else
            var_8 = var_8 * var_8;

        var_0.scriptdata.distsqtokothzones[var_4.trigger getentitynumber()] = var_8;

        if ( var_8 > var_4.furthestspawndistsq )
            var_4.furthestspawndistsq = var_8;
    }
}

comparezoneindexes( var_0, var_1 )
{
    var_2 = int( var_0.objectivekey );
    var_3 = int( var_1.objectivekey );

    if ( !isdefined( var_2 ) && !isdefined( var_3 ) )
        return 0;

    if ( !isdefined( var_2 ) && isdefined( var_3 ) )
        return 1;

    if ( isdefined( var_2 ) && !isdefined( var_3 ) )
        return 0;

    if ( var_2 > var_3 )
        return 1;

    return 0;
}

getzonearray( var_0 )
{
    var_1 = getentarray( var_0, "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_3 in var_1 )
        var_3.objectivekey = var_3.script_label;

    if ( !isdefined( var_1 ) || var_1.size == 0 )
        return undefined;

    var_5 = 1;

    for ( var_6 = var_1.size; var_5; var_6-- )
    {
        var_5 = 0;

        for ( var_7 = 0; var_7 < var_6 - 1; var_7++ )
        {
            if ( comparezoneindexes( var_1[var_7], var_1[var_7 + 1] ) )
            {
                var_8 = var_1[var_7];
                var_1[var_7] = var_1[var_7 + 1];
                var_1[var_7 + 1] = var_8;
                var_5 = 1;
            }
        }
    }

    return var_1;
}

setupzones()
{
    var_0 = getzonearray( "_encstr_BA4A0F8658272307F6D2E63AEBE9F67395" );
    var_1 = [];

    for ( var_2 = 0; var_2 < var_0.size; var_2++ )
        var_1[var_1.size] = var_0[var_2];

    level.objectives = [];

    foreach ( var_4 in var_1 )
    {
        var_5 = _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::setupobjective( var_4 );
        level.objectives[var_5.objectivekey] = var_5;
    }

    var_7 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_B9BC19D60EBEDADBD186D7E60EC2EE73D70BE15A37EBE6D1169347" );
    var_8 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_9F9D1B6BE0F5B6ED8E43D76EE016DDB9F5C236B14BACE67DCDE82C4ED1" );
    level.startpos["_encstr_BC850785638DA59537"] = var_8[0].origin;
    level.startpos["_encstr_BA840579D3F7F6"] = var_7[0].origin;
    return 1;
}

setupzoneareabrushes()
{
    level.neutralzonebrushes = [];
    level.contestedzonebrushes = [];
    level.friendlyzonebrushes = [];
    level.enemyzonebrushes = [];
    var_0 = getzonearray( "_encstr_9C6316CCF940B4CB7013036317A262E65086C314538079C2" );
    var_1 = getzonearray( "_encstr_BE9B1E13B8FBDCBB1F7355CB701D026EA1E1F39FD0F31142271E1D45CDDB1B3C" );
    var_2 = getzonearray( "_encstr_94C51D7887AB344377E936C350928845DB39430C5E857FD1A78FF33B67D584" );
    var_3 = getzonearray( "_encstr_95D41C0BA0E3D4B3670B5DD378151A96A9E9FB97D8FB09BA2F15258F59FB" );

    if ( !isdefined( var_0 ) )
        level.usehpzonebrushes = 0;
    else
        level.usehpzonebrushes = 1;

    if ( istrue( level.usehpzonebrushes ) )
    {
        foreach ( var_5 in var_0 )
        {
            level.neutralzonebrushes[var_5.script_label] = var_5;
            var_5 hide();
        }

        foreach ( var_5 in var_1 )
        {
            level.contestedzonebrushes[var_5.script_label] = var_5;
            var_5 hide();
        }

        foreach ( var_5 in var_2 )
        {
            level.friendlyzonebrushes[var_5.script_label] = var_5;
            var_5 hide();
        }

        foreach ( var_5 in var_3 )
        {
            level.enemyzonebrushes[var_5.script_label] = var_5;
            var_5 hide();
        }

        postshipmodifiedzonebrushes();
        thread matchbrushestozones();
    }
}

postshipmodifiedzonebrushes()
{
    if ( level.mapname == "_encstr_934D0BCDAF279BC1EBF00F6F50" )
    {
        for ( var_0 = 0; var_0 < level.neutralzonebrushes.size; var_0++ )
        {
            if ( level.neutralzonebrushes[var_0].script_label == "_encstr_AF4C02EA" )
            {
                level.neutralzonebrushes[var_0] hide();
                var_1 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
                var_1 setmodel( "_encstr_8BBB1E01C8C7B3035A7AA870C3392929DB44178839DBFB370772B098DBC1516B" );
                var_1.angles = ( 0, 0, 0 );
                var_1.script_label = "_encstr_AF4C02EA";
                level.neutralzonebrushes[var_0] = var_1;
            }
        }

        for ( var_0 = 0; var_0 < level.contestedzonebrushes.size; var_0++ )
        {
            if ( level.contestedzonebrushes[var_0].script_label == "_encstr_AF4C02EA" )
            {
                level.contestedzonebrushes[var_0] hide();
                var_2 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
                var_2 setmodel( "_encstr_8F1D26BF88E66002FDAAFD730EFFCA392B50432FE878BC293D31C5ED76D7879156C047A398F1F3E3" );
                var_2.angles = ( 0, 0, 0 );
                var_2.script_label = "_encstr_AF4C02EA";
                level.contestedzonebrushes[var_0] = var_2;
            }
        }

        for ( var_0 = 0; var_0 < level.friendlyzonebrushes.size; var_0++ )
        {
            if ( level.friendlyzonebrushes[var_0].script_label == "_encstr_AF4C02EA" )
            {
                level.friendlyzonebrushes[var_0] hide();
                var_3 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
                var_3 setmodel( "_encstr_9E0A25AAF8C76AF723D20F2D76AE9B76C5300302A80DA3D75949073F0EF6C2AA7798ABFA60F51F" );
                var_3.angles = ( 0, 0, 0 );
                var_3.script_label = "_encstr_AF4C02EA";
                level.friendlyzonebrushes[var_0] = var_3;
            }
        }

        for ( var_0 = 0; var_0 < level.enemyzonebrushes.size; var_0++ )
        {
            if ( level.enemyzonebrushes[var_0].script_label == "_encstr_AF4C02EA" )
            {
                level.enemyzonebrushes[var_0] hide();
                var_4 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
                var_4 setmodel( "_encstr_935224A1686713E3BA9A489063998949BBE4B728D97B5B5767D250387BA1F18BB78D3095258F" );
                var_4.angles = ( 0, 0, 0 );
                var_4.script_label = "_encstr_AF4C02EA";
                level.enemyzonebrushes[var_0] = var_4;
            }
        }
    }
}

matchbrushestozones()
{
    foreach ( var_1 in level.objectives )
    {
        var_1.neutralbrush = level.neutralzonebrushes[var_1.objectivekey];
        var_1.enemybrush = level.enemyzonebrushes[var_1.objectivekey];
        var_1.contestedbrush = level.contestedzonebrushes[var_1.objectivekey];
        var_1.friendlybrush = level.friendlyzonebrushes[var_1.objectivekey];
    }
}

setupzonecallouts()
{
    var_0 = undefined;
    var_1 = undefined;
    var_2 = undefined;
    var_3 = level.zone.visuals[0];

    foreach ( var_5 in level.calloutglobals.areatriggers )
    {
        var_1 = ispointinvolume( var_3.baseorigin, var_5 );
        var_2 = isdefined( var_3.script_noteworthy ) && isdefined( var_5.script_noteworthy ) && var_3.script_noteworthy == var_5.script_noteworthy;

        if ( var_1 || var_2 )
        {
            var_0 = level.calloutglobals.areaidmap[var_5.script_noteworthy];

            foreach ( var_7 in level.players )
            {
                if ( isdefined( var_0 ) )
                    var_7 setclientomnvar( "_encstr_947811FB6040EB7BBF47792CC1B7881C29DFBB", var_0 );
            }

            break;
        }
    }

    scripts\mp\utility\game::setmlgannouncement( 4, "_encstr_B77805CC2759AC" );
}

forcespawnplayers()
{
    var_0 = level.players;

    for ( var_1 = 0; var_1 < var_0.size; var_1++ )
    {
        var_2 = var_0[var_1];

        if ( !isdefined( var_2 ) || isalive( var_2 ) )
            continue;

        var_2 notify( "_encstr_AFD50C2238A5E6AFDE965841ACC0" );
        waitframe();
    }
}

getspawnpoint()
{
    var_0 = self.pers["_encstr_89EF05D46BA8FD"];
    var_1 = getkothzonedeadzonedist();
    var_2 = [];
    var_2["_encstr_9EE315300A23938BDF1BF075201B9055CF4018A8F2BF1D"] = level.zone.trigger getentitynumber();
    var_2["_encstr_B9921A5B85E1A65CD52C399591114BCD3A51EDD34C352B1B47A5EC95"] = level.zone.furthestspawndistsq;
    var_2["_encstr_A9F117C20899740388683D14F511A3B8C778AAA8902FABEFA3"] = var_1 * var_1;
    var_2["_encstr_95421C5AE0D8BF2FE069CDFE53C8F09FF01922A3A920A76771BBF3EC1740"] = 12250000;

    if ( istrue( level.binoculars_clearuidata ) )
    {
        if ( scripts\mp\spawnlogic::shoulduseteamstartspawn() )
        {
            if ( var_0 == game["_encstr_941C0A6AF345075ED05BEAD3"] )
            {
                scripts\mp\spawnlogic::activatespawnset( "_encstr_9303101723E2CE585F5E839B464B688D6B97", 1 );
                var_3 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_9303101723E2CE585F5E839B464B688D6B97" );
            }
            else
            {
                scripts\mp\spawnlogic::activatespawnset( "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", 1 );
                var_3 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23" );
            }
        }
        else
        {
            scripts\mp\spawnlogic::activatespawnset( "_encstr_930E073E8FC00DDF69", 1 );
            var_3 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_A30C093385361B4CB06C6D" );
        }
    }
    else if ( scripts\mp\spawnlogic::shoulduseteamstartspawn() )
    {
        if ( var_0 == game["_encstr_941C0A6AF345075ED05BEAD3"] )
        {
            scripts\mp\spawnlogic::activatespawnset( "_encstr_9303101723E2CE585F5E839B464B688D6B97", 1 );
            var_3 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_9303101723E2CE585F5E839B464B688D6B97", undefined, var_2 );
        }
        else
        {
            scripts\mp\spawnlogic::activatespawnset( "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", 1 );
            var_3 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", undefined, var_2 );
        }
    }
    else
    {
        if ( !isdefined( level._id_139D1 ) )
        {
            level._id_139D1 = 1;
            scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_957B0AA86F934BCA0F8022FB", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );
        }

        var_3 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, level.zone.spawnset, level.zone.fallbackspawnset, "_encstr_8B1904982C46", var_2 );
    }

    return var_3;
}

getkothzonedeadzonedist()
{
    return 1000;
}

onspawnplayer()
{
    scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
    self.forcespawnnearteammates = undefined;
    thread updatematchstatushintonspawn();
}

movezoneaftertime( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_AD740BDA4DF6B030833F577313" );
    level endon( "_encstr_A8940F52FD985753FF7BD6978F6B784095" );
    level.zonemovetime = var_0;
    level.zonedestroyedbytimer = 0;
    _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::zonetimerwait();
    level.zonedestroyedbytimer = 1;
    level notify( "_encstr_8FBD0BBA97A04F464F80533BE4" );
    level notify( "_encstr_8C9C0F90B8CD42479108E7E3A8A8290AA1" );
}

onplayerkilled( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    if ( !isplayer( var_1 ) || var_1.team == self.team )
        return;

    if ( var_1 == self )
        return;

    if ( !isdefined( level.zone ) )
        return;

    var_10 = level.zone.ownerteam;

    if ( !isdefined( var_10 ) )
        return;

    if ( isdefined( var_4 ) && scripts\mp\utility\weapon::iskillstreakweapon( var_4.basename ) )
        return;

    var_11 = self;
    var_12 = 0;
    var_13 = var_1.team;

    if ( level.zonecapturetime > 0 && var_1 istouching( level.zone.trigger ) )
    {
        if ( var_10 != var_13 )
            var_12 = 1;
    }

    if ( var_13 != var_10 )
    {
        if ( var_12 )
            var_1 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_8AFD0DDF790AB0B5C35216987A53E1" );
        else if ( var_11 istouching( level.zone.trigger ) )
        {
            var_1 thread scripts\mp\rank::scoreeventpopup( "_encstr_973508BF93EFFBC363B3" );
            var_1 thread scripts\mp\awards::givemidmatchaward( "_encstr_BA020F68F21FC3E6F347AF9E43BFEB8943" );
            thread scripts\common\utility::_id_13E0A( level._id_11B30, var_9, "_encstr_97A70AE945873020839AC811" );
        }
    }
    else if ( var_1 istouching( level.zone.trigger ) )
    {
        var_1 thread scripts\mp\rank::scoreeventpopup( "_encstr_8C0C07812DDF6808AB" );
        var_1 thread scripts\mp\awards::givemidmatchaward( "_encstr_B3D80EB6ED91567DE17D91B2CC95CD23" );
        var_1 scripts\mp\utility\stats::incpersstat( "_encstr_9CF70851FD0FB8B81BB3", 1 );
        var_1 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9CF70851FD0FB8B81BB3", var_1.pers["_encstr_9CF70851FD0FB8B81BB3"] );
        var_1 scripts\mp\utility\stats::setextrascore1( var_1.pers["_encstr_9CF70851FD0FB8B81BB3"] );
    }
}

give_capture_credit( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level.lastcaptime = gettime();
    scripts\mp\utility\game::_id_119AC( var_4, undefined, "_encstr_8766136421EB61FF7830127878AFA25073CB2DC90C", var_4.origin );
    var_6 = var_4;

    if ( isdefined( var_6.owner ) )
        var_6 = var_6.owner;

    if ( isplayer( var_6 ) )
    {
        var_6 thread scripts\common\utility::_id_13E0A( level._id_11B29, "_encstr_9EEB08EFAF2B15984A67", var_6.origin );

        if ( unset_forced_aitype_armored( var_6 ) && !scripts\mp\utility\game::isanymlgmatch() )
        {

        }
        else if ( !isscoreboosting( var_6 ) )
        {
            var_6 thread scripts\mp\rank::scoreeventpopup( "_encstr_AF790A3BF2765B0BDBB3F563" );
            var_6 thread scripts\mp\awards::givemidmatchaward( "_encstr_B8A70FDAF6C856D71A1CEBDCCA8DAB9CCA" );
        }
        else
        {
            var_6 thread scripts\mp\rank::scoreeventpopup( "_encstr_AF790A3BF2765B0BDBB3F563" );
            var_6 thread scripts\mp\awards::givemidmatchaward( "_encstr_B215174DD8C70F19134B698B9DA2FBDD48115368497F36FAF0" );
        }

        if ( isdefined( level.zone.lastactivatetime ) && gettime() - level.zone.lastactivatetime <= 2100 )
        {
            var_6 thread scripts\mp\rank::scoreeventpopup( "_encstr_A37F0D1AC1AF17AB968DD6F56C5807" );
            var_6 thread scripts\mp\awards::givemidmatchaward( "_encstr_88D912C52869F2F7A030C70760F8835A47B64E3A" );
        }

        if ( var_6.lastkilltime + 500 > gettime() )
        {

        }
        else
            var_6 _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::setcrankedtimerzonecap( var_6 );
    }

    var_7 = getarraykeys( var_0 );

    for ( var_8 = 0; var_8 < var_7.size; var_8++ )
    {
        var_9 = var_0[var_7[var_8]].player;
        var_9 updatecapsperminute( var_3 );

        if ( !isscoreboosting( var_9 ) )
        {
            var_9 scripts\mp\utility\stats::incpersstat( "_encstr_B2CF0967600940A373E78A", 1 );
            var_9 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_B2CF0967600940A373E78A", var_9.pers["_encstr_B2CF0967600940A373E78A"] );
        }
        else
        {

        }

        if ( var_6 != var_9 )
        {
            var_9 thread scripts\mp\rank::scoreeventpopup( "_encstr_B4E10FFA31980C9B02C179617678BC6BCB" );
            var_9 thread scripts\mp\awards::givemidmatchaward( "_encstr_B17E17E557A8D7EFA5707259DB0D478B703B5F71C7A81C9755" );
            var_9 _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::setcrankedtimerzonecap( var_9 );
        }

        wait 0.05;
    }
}

awardcapturepoints()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_AD740BDA4DF6B030833F577313" );
    level endon( "_encstr_8FBD0BBA97A04F464F80533BE4" );
    level notify( "_encstr_82DD1A593B8F5A325B0A4B4B8538D1CADFF860EDC27BAB60C23840C4" );
    level endon( "_encstr_82DD1A593B8F5A325B0A4B4B8538D1CADFF860EDC27BAB60C23840C4" );
    var_0 = 1;
    var_1 = 1;

    while ( !level.gameended )
    {
        var_2 = 0.0;

        while ( var_2 < var_0 && !level.gameended )
        {
            wait( level.framedurationseconds );
            scripts\mp\hostmigration::waittillhostmigrationdone();
            var_2 = var_2 + level.framedurationseconds;

            if ( level.zone.stalemate )
                var_2 = 0.0;
        }

        var_3 = level.zone scripts\mp\gameobjects::getownerteam();

        if ( var_3 == "_encstr_9BA4080D39CFFB5AB7C1" )
            continue;

        if ( level.gameended )
            break;

        if ( level.usehqrules )
        {
            if ( level.zoneadditivescoring )
                var_1 = level.zone.touchlist[var_3].size;

            scripts\mp\gamescore::giveteamscoreforobjective( var_3, var_1, 0 );
            continue;
        }

        if ( !level.zone.stalemate && !level.gameended )
        {
            if ( level.zoneadditivescoring )
                var_1 = level.zone.touchlist[var_3].size;

            scripts\mp\gamescore::giveteamscoreforobjective( var_3, var_1, 0 );

            foreach ( var_5 in level.zone.touchlist[var_3] )
            {
                var_5.player scripts\mp\utility\stats::incpersstat( "_encstr_B9F50890960B9B01773F", 1 );

                if ( isdefined( var_5.player.timebyrotation[level.kothhillrotation] ) )
                    var_5.player.timebyrotation[level.kothhillrotation]++;
                else
                    var_5.player.timebyrotation[level.kothhillrotation] = 1;

                var_5.player scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_B9F50890960B9B01773F", var_5.player.pers["_encstr_B9F50890960B9B01773F"] );
                var_5.player scripts\mp\utility\stats::setextrascore0( var_5.player.pers["_encstr_B9F50890960B9B01773F"] );

                if ( isdefined( var_5.player.spawn_sentry_at_pos ) && var_5.player.spawn_sentry_at_pos > 3 )
                {
                    var_5.player.spawn_sentry_at_pos = 0;

                    if ( scripts\mp\utility\game::getgametype() == "_encstr_B7D7054F3030F9" )
                        var_5.player scripts\mp\utility\points::giveunifiedpoints( "_encstr_941E0C34D0799B9EBC4816D20E75", undefined, 15 );
                    else if ( scripts\mp\utility\game::getgametype() == "_encstr_BC7205C8ABFDE7" )
                        var_5.player scripts\mp\utility\points::giveunifiedpoints( "_encstr_80560CEC4EE6197DB49BD7F631A9", undefined, 15 );

                    continue;
                }

                if ( !isdefined( var_5.player.spawn_sentry_at_pos ) )
                    var_5.player.spawn_sentry_at_pos = 0;
                else
                    var_5.player.spawn_sentry_at_pos++;

                var_5.player scripts\mp\gamescore::giveplayerscore( "_encstr_941E0C34D0799B9EBC4816D20E75", 10 );
            }
        }
    }
}

updatecapsperminute( var_0 )
{
    if ( !isdefined( self.capsperminute ) )
    {
        self.numcaps = 0;
        self.capsperminute = 0;
    }

    if ( !isdefined( var_0 ) || var_0 == "_encstr_9BA4080D39CFFB5AB7C1" )
        return;

    self.numcaps++;
    var_1 = scripts\mp\utility\game::gettimepassed() / 60000;

    if ( isplayer( self ) && isdefined( self.timeplayed["_encstr_BE7D068EF6D10B1B"] ) )
        var_1 = self.timeplayed["_encstr_BE7D068EF6D10B1B"] / 60;

    self.capsperminute = self.numcaps / var_1;

    if ( self.capsperminute > self.numcaps )
        self.capsperminute = self.numcaps;
}

isscoreboosting( var_0 )
{
    if ( var_0.capsperminute > 3 )
        return 1;

    return 0;
}

unset_forced_aitype_armored( var_0 )
{
    if ( var_0.capsperminute > 6 )
        return 1;

    return 0;
}

onplayerconnect( var_0 )
{
    var_0._hardpointeffect = [];
    var_0.numcaps = 0;
    var_0.capsperminute = 0;
    var_0.timebyrotation = [];
    var_0 scripts\mp\utility\stats::setextrascore0( 0 );

    if ( isdefined( var_0.pers["_encstr_B9F50890960B9B01773F"] ) )
        var_0 scripts\mp\utility\stats::setextrascore0( var_0.pers["_encstr_B9F50890960B9B01773F"] );

    var_0 scripts\mp\utility\stats::setextrascore1( 0 );

    if ( isdefined( var_0.pers["_encstr_9CF70851FD0FB8B81BB3"] ) )
        var_0 scripts\mp\utility\stats::setextrascore1( var_0.pers["_encstr_9CF70851FD0FB8B81BB3"] );

    thread onplayerspawned( var_0 );

    foreach ( var_2 in level.objectives )
    {
        if ( istrue( level.usehpzonebrushes ) )
            var_2 _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::hideplayerspecificbrushes( var_0 );
    }

    var_0 thread refreshfreecamhardpointfx();
}

onplayerspawned( var_0 )
{
    for (;;)
    {
        var_0 waittill( "_encstr_983508635BE787C548A1" );

        foreach ( var_2 in level.objectives )
        {
            if ( istrue( var_2.active ) )
            {
                if ( var_2.ownerteam == "_encstr_9BA4080D39CFFB5AB7C1" )
                {
                    var_2 _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::playhardpointneutralfx();
                    continue;
                }

                var_2 _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::showcapturedhardpointeffecttoplayer( var_2.ownerteam, var_0 );
            }
        }
    }
}

updateservericons( var_0, var_1 )
{
    var_2 = -1;

    if ( var_1 )
        var_2 = -2;
    else if ( scripts\mp\utility\teams::isgameplayteam( var_0 ) )
    {
        var_3 = thread getownerteamplayer( var_0 );

        if ( isdefined( var_3 ) )
            var_2 = var_3 getentitynumber();
    }
    else
    {
        switch ( var_0 )
        {
            case "_encstr_B451162D673A6D1989367BD09B71B893C2FBEFA9E7422760":
                var_2 = -3;
                break;
            case "_encstr_82270B4FDE3795FAB9D05A993A":
            default:
                break;
        }
    }

    setomnvar( "_encstr_9EE80DD52DF50DB0273238B72DDCE8", var_2 );
}

getownerteamplayer( var_0 )
{
    var_1 = undefined;

    foreach ( var_3 in level.players )
    {
        if ( var_3.team == var_0 )
        {
            var_1 = var_3;
            break;
        }
    }

    return var_1;
}

refreshfreecamhardpointfx()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        self waittill( "_encstr_8AEB10D3C848069A99C3E7D8365383C61158", var_0, var_1 );

        if ( var_0 == "_encstr_9DB710B58D76FAD9A595EEF5D8D085E6D9AC" )
        {
            foreach ( var_3 in level.objectives )
            {
                if ( var_3.ownerteam != "_encstr_9BA4080D39CFFB5AB7C1" )
                    var_3 _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::showcapturedhardpointeffecttoplayer( var_3.ownerteam, self );
            }
        }
    }
}

getrespawndelay()
{
    if ( !level.delayplayer )
        return undefined;

    var_0 = level.zone.ownerteam;

    if ( isdefined( var_0 ) )
    {
        if ( self.pers["_encstr_89EF05D46BA8FD"] == var_0 )
        {
            if ( !level.spawndelay )
                return undefined;

            return level.spawndelay;
        }
    }
}

postshipmodifiedzones( var_0 )
{
    if ( level.mapname == "_encstr_B8860A40FF9F9A80D4ABF788" && var_0 == "_encstr_BD4C02AB" )
        return 1;

    return 0;
}

writeplayerrotationscoretomatchdataongameend()
{
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    writecurrentrotationteamscore();
}

writecurrentrotationteamscore()
{
    if ( level.kothhillrotation < 24 )
    {
        setmatchdata( "_encstr_BE7D112CC6B14B596EA4EDEADC239AC6B79CB2", level.kothhillrotation, getteamscore( "_encstr_BC850785638DA59537" ) );
        setmatchdata( "_encstr_B16F0F7FD05A2F8FAF6FC088EFFB606522", level.kothhillrotation, getteamscore( "_encstr_BA840579D3F7F6" ) );
    }
}

setkothwaypoints()
{
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_AA850D8AA0188A8711E22A9BA35F20", 0, "_encstr_80BF06CA78A2226B", "_encstr_B46420C52971DCAB34B570F85E18F3C529AF4F52B5C9965F470FC99165480F4EB9FF", "_encstr_8FA21308FE47588043BFB3A9EFCA50D0DF547023A4", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_BE470C6DDE8E86FA23ACCCB27346", 0, "_encstr_B9FC095F8BCCFF02D92B43", "_encstr_B9B71FF8278017A501C30515E719FD4B2B7050908C78FBAF21A30E1CCF91F68376", "_encstr_8FA21308FE47588043BFB3A9EFCA50D0DF547023A4", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_A31F0FB57BD11AAF462B3356CD19B4DCD9", 0, "_encstr_B9FC095F8BCCFF02D92B43", "_encstr_9837225DB1E94423BC0DF860D6E06B4DA127C7DA3D41DFF7D4A5C0787C489771D9635073", "_encstr_8FA21308FE47588043BFB3A9EFCA50D0DF547023A4", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_B4730DA4C86902D740B84F733899AC", 0, "_encstr_9BA4080D39CFFB5AB7C1", "_encstr_B46420C52971DCAB34B570F85E18F3C529AF4F52B5C9965F470FC99165480F4EB9FF", "_encstr_8FA21308FE47588043BFB3A9EFCA50D0DF547023A4", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_A6500F5B7B1D0DBE1BDECD8EACE63AB291", 0, "_encstr_B3B5086C7BE68E56E63A", "_encstr_A8A8222588D8871EACD5ED5951E8AB102BB6ADDDC401A37CC89911EB613D6F697D15376F", "_encstr_8FA21308FE47588043BFB3A9EFCA50D0DF547023A4", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_AFF50C1BF0A8B081DC1FC3D0706F", 0, "_encstr_80BF06CA78A2226B", "_encstr_8A341FD405D72927A3146AA2EBF4C98956793D09A4FA31E96A5272E8D7A1051435", "_encstr_8FA21308FE47588043BFB3A9EFCA50D0DF547023A4", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_B4DC0CAC70F31BD12B0EABD2C51B", 0, "_encstr_9BA4080D39CFFB5AB7C1", "_encstr_AF671FA905BEA4E48E289AA8EB7A728995CBF48429D72AA04AD12A45AFD00AA035", "_encstr_80EC15D2F3D0908FA73171985814F5C04181AF2A5FCD3C", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_8A0B0CDAF61D1AAF472C6DD29B3B", 0, "_encstr_B9FC095F8BCCFF02D92B43", "_encstr_82AA234CF2B7A1C880FF9B836FE827511985B425ECCF8115F9B35D8F4FD07841C766FDFFC2", "_encstr_8FA21308FE47588043BFB3A9EFCA50D0DF547023A4", 1 );
}

updatematchstatushintonspawn()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( istrue( level._id_14726 ) )
        self setclientomnvar( "_encstr_AD061ACF50F64D32C19E2CE9FEB94A1CDB18EF03F808AC19E9A5305B", 36 );
    else
        self setclientomnvar( "_encstr_AD061ACF50F64D32C19E2CE9FEB94A1CDB18EF03F808AC19E9A5305B", 35 );
}
