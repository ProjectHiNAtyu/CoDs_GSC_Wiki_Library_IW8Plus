// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    var_0[0] = scripts\mp\utility\game::getgametype();
    var_0[1] = "_encstr_BD07030251";
    var_0[2] = "_encstr_889A09E530F7E918279537";
    var_0[3] = "_encstr_A85908F249E84E372DEB";
    scripts\mp\gameobjects::main( var_0 );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( scripts\mp\utility\game::getgametype(), 1, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 3.0 );
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 3 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
    }

    var_1 = scripts\mp\utility\dvars::getwatcheddvar( "_encstr_AA250A1D7CF2EB9071A740A0" );
    scripts\mp\utility\dvars::registerwatchdvarint( "_encstr_8B1C11588C463D4CA65636A35AD9952AA5D659", var_1 );
    updategametypedvars();
    level.objectivebased = 1;
    level.teambased = 1;
    level.nobuddyspawns = 1;
    level.onprecachegametype = ::onprecachegametype;
    level.onstartgametype = ::onstartgametype;
    level.getspawnpoint = ::getspawnpoint;
    level.modeonspawnplayer = ::onspawnplayer;
    level.onplayerkilled = ::onplayerkilled;
    level.ontimelimit = ::ontimelimit;
    level.onnormaldeath = ::onnormaldeath;
    level.onobjectivecomplete = ::onobjectivecomplete;
    level.resetuiomnvargamemode = _encstr_9D04262397C00C9B650B9EA273100FC6C073BCA109D0D29E8001C289D9187F7ED0FF2E05DD981A67::resetuiomnvargamemode;
    level.allowlatecomers = 0;
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9E240C10CE33016D6AEA39B0F244"] = "_encstr_A3EB0C58925B1E31A733A880EA78";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B3420C3D576AC3C8736F09906BB2"] = "_encstr_A1200B75904307C880548D40C9";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_AFC70A63CA5846FAB17BE647"] = "_encstr_AFBA0505631CA3";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_AFFC0A1B560B46F5A35AB223"] = "_encstr_AFBA0505631CA3";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_8CE60B63CA58C8AF3A2CAD2BCD"] = "_encstr_AFBA0505631CA3";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_A36807BA7B9F6B0F41"] = "_encstr_A36807BA7B9F6B0F41";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_88680789658B515ED2"] = "_encstr_88680789658B515ED2";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_876807E02FEF41687E"] = "_encstr_876807E02FEF41687E";
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    var_0 = getmatchrulesdata( "_encstr_8AD20C17174EA9982034E11B1D46", "_encstr_AA7F0C6540874A73D1DD3DE8A360" );
    setdynamicdvar( "_encstr_AB8B166FB8EBF7BA570EE69BF9311184D0608F9B70E00933", var_0 );
    scripts\mp\utility\game::registertimelimitdvar( "_encstr_973508BF93EFFBC363B3", var_0 );
    var_1 = getmatchrulesdata( "_encstr_8AD20C17174EA9982034E11B1D46", "_encstr_97460C239ABF50408A2F83A1232C" );
    setdynamicdvar( "_encstr_B71B1826C36B4E6B7283B0680ACB5FA3477D20154B9770995E1A", var_1 );
    scripts\mp\utility\game::registerroundswitchdvar( "_encstr_973508BF93EFFBC363B3", var_1, 0, 9 );
    var_2 = getmatchrulesdata( "_encstr_BE700D1BDB5BB5DEDCD31C3AA5B7CD", "_encstr_95FB0B239728CACF7948BAE2F3" );
    setdynamicdvar( "_encstr_BC3215BF3BCAA9FF8773119BEAF3B8B0A49E3903ADF438", var_2 );
    scripts\mp\utility\game::registerwinlimitdvar( "_encstr_973508BF93EFFBC363B3", var_2 );
    setdynamicdvar( "_encstr_8A46162A9960AFFA5E075F07118541CAE020E67370205D03", getmatchrulesdata( "_encstr_8AD20C17174EA9982034E11B1D46", "_encstr_A12A0A56BDB2A5D731E760D0" ) );
    setdynamicdvar( "_encstr_97F816E6B14EF558B99B0BD5C63A7DE0D82C37E8E82D5BAC", getmatchrulesdata( "_encstr_8AD20C17174EA9982034E11B1D46", "_encstr_B6980AABC86B3D731723FDED" ) );
    setdynamicdvar( "_encstr_AA1D178B3E9A115FC337C3E3A35B881025D7F30327E4E8019A", getmatchrulesdata( "_encstr_8AD20C17174EA9982034E11B1D46", "_encstr_8FB30B465699AE6E95A8B4DA95" ) );
    setdynamicdvar( "_encstr_9BE416409E8A6943327EA2FBD133B98D8B3AABC33A5815BA", getmatchrulesdata( "_encstr_8AD20C17174EA9982034E11B1D46", "_encstr_A34D0AD6BA361DB424F6ADC4" ) );
    setdynamicdvar( "_encstr_94B41B070FFE31A120DBF6FB1030D75AD8BBDB0BFBA65A8C41E0EDC7CB", getmatchrulesdata( "_encstr_8AD20C17174EA9982034E11B1D46", "_encstr_95CA0F26DED64C922BCDB2D1A296B5594E" ) );
    setdynamicdvar( "_encstr_BA4E1738387BF9D86BAEFED8A261D1E367431819981A095330", 0 );
    scripts\mp\utility\game::registerroundlimitdvar( "_encstr_973508BF93EFFBC363B3", 0 );
    setdynamicdvar( "_encstr_A10417E6C79899698BDF3A2BD09B879EA068AB9DA8BBB07973", 1 );
    scripts\mp\utility\game::registerscorelimitdvar( "_encstr_973508BF93EFFBC363B3", 1 );
    setdynamicdvar( "_encstr_BC8A152A461D09616B9097CF40A367C29369F7633B7BE2", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_973508BF93EFFBC363B3", 0 );
}

onprecachegametype()
{
    game["_encstr_BE9B133BC818DA4909FE15CAE723B25F6360FF8368"] = "_encstr_9B6F165B83F5DD1693EBF626A6561B1D5ACE2BEBB1B7E6A3";
    game["_encstr_982A154CDEAD89D7E4B2C67B67CA932B91D7DCF657B98C"] = "_encstr_8FED17AD1CEBDD169CBEBD26A695C63A5A9DACAF3A0B5BB2E6";
}

onstartgametype()
{
    if ( !isdefined( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
        game["_encstr_A6D60EE09BF413B9945185CB4797C583"] = 0;

    if ( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] )
    {
        var_0 = game["_encstr_941C0A6AF345075ED05BEAD3"];
        var_1 = game["_encstr_95A70AA81FEE295D3A2F56DE"];
        game["_encstr_941C0A6AF345075ED05BEAD3"] = var_1;
        game["_encstr_95A70AA81FEE295D3A2F56DE"] = var_0;
    }

    setclientnamemode( "_encstr_AA070E5BC237BA2C637D361A5837B395" );
    level._effect["_encstr_BC8C0F6E4023DA5FA9C8D3AB584351B28D"] = loadfx( "_encstr_95F42BB399879796EE9B5EAFE456B8AEB26E1DE65E6B0E5E9D331E7D235698BA3BAFBBC24EB92DDC3B8B3B66E1" );
    level._effect["_encstr_ADF6124C2FF2A30104F7A178AB30B8F72B5448D8"] = loadfx( "_encstr_94452E933ABBC048953A8B6755389839BEC348F9020330382F089BF774A719754B8BE0A01BAF50B049169BC72E4B9843" );
    level._effect["_encstr_9F9013C9EB9311C4CC35FF507D1B6F18F04BEBBA88"] = loadfx( "_encstr_95F42BB399879796EE9B5EAFE456B8AEB26E1DE65E6B0E5E9D331E7D235698BA3BAFBBC24EB92DDC3B8B3B66E1" );
    scripts\mp\utility\game::setobjectivetext( game["_encstr_941C0A6AF345075ED05BEAD3"], &"_encstr_9F6817C52EED0BAE8979219DE7BE2BC13716C391612F8A077A" );
    scripts\mp\utility\game::setobjectivetext( game["_encstr_95A70AA81FEE295D3A2F56DE"], &"_encstr_8B1B17D348A415684594652AD4BC4D227D445164A29C228A49" );

    if ( level.splitscreen )
    {
        scripts\mp\utility\game::setobjectivescoretext( game["_encstr_941C0A6AF345075ED05BEAD3"], &"_encstr_9F6817C52EED0BAE8979219DE7BE2BC13716C391612F8A077A" );
        scripts\mp\utility\game::setobjectivescoretext( game["_encstr_95A70AA81FEE295D3A2F56DE"], &"_encstr_8B1B17D348A415684594652AD4BC4D227D445164A29C228A49" );
    }
    else
    {
        scripts\mp\utility\game::setobjectivescoretext( game["_encstr_941C0A6AF345075ED05BEAD3"], &"_encstr_88481D30D155EFB73F0BFEE53E68CF67D7510979219FD4E79768E3DBD82F5F" );
        scripts\mp\utility\game::setobjectivescoretext( game["_encstr_95A70AA81FEE295D3A2F56DE"], &"_encstr_9DFD1D37A3080DA9ECEC0F6502CF71D5F103ABBD57B04551C271D7BD3D5A09" );
    }

    scripts\mp\utility\game::setobjectivehinttext( game["_encstr_941C0A6AF345075ED05BEAD3"], &"_encstr_88AF1C3D90525168A2A4B28AA6CBD4887D0551451486B4A229EB4292C9A8" );
    scripts\mp\utility\game::setobjectivehinttext( game["_encstr_95A70AA81FEE295D3A2F56DE"], &"_encstr_974F1C47D3787DF9BCBC3F55D23F8105C153DBED6760B5819201E42C8D6C" );
    initspawns();
    setspecialloadout();
    thread initializeobjectives();
}

initspawns()
{
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_87DB209768F752879A7F1B45BC9873CBE0971DD962F353B68EAA9DE0165BA3718EE4" );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_B7192029D0DF894F72A210A08B0107E37F7F20885CDF91BB1DDA98581122F1199B04" );
    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
    level.assaultspawns = [];
    initbombsitespawns( "_encstr_877B092C8E1D0B36AD564E" );
    initbombsitespawns( "_encstr_BA4609E1537B2088995F6A" );
}

initbombsitespawns( var_0 )
{
    level.assaultspawns[var_0] = [];
    var_1 = "_encstr_BC811297A0CE491BD787635D75E75370513023D7" + var_0;
    var_2 = scripts\mp\spawnlogic::getspawnpointarray( var_1 );

    foreach ( var_4 in var_2 )
    {
        var_5 = var_4.script_noteworthy;

        if ( !isdefined( level.assaultspawns[var_0][var_5] ) )
            level.assaultspawns[var_0][var_5] = [];

        level.assaultspawns[var_0][var_5][level.assaultspawns[var_0][var_5].size] = var_4;
    }
}

getspawnpoint()
{
    var_0 = self.pers["_encstr_89EF05D46BA8FD"];
    var_1 = "_encstr_BA4609E1537B2088995F6A";

    if ( var_0 == game["_encstr_941C0A6AF345075ED05BEAD3"] )
        var_1 = "_encstr_877B092C8E1D0B36AD564E";

    if ( level.ingraceperiod )
    {
        var_2 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_BC811297A0CE491BD787635D75E75370513023D7" + var_1 + "_encstr_A4810727CEFBF7F281" );
        var_3 = scripts\mp\spawnlogic::getspawnpoint_startspawn( var_2 );
    }
    else
    {
        var_4 = level.curobj.label;
        var_5 = level.assaultspawns[var_1][var_4];
        var_3 = scripts\mp\spawnlogic::getspawnpoint_random( var_5 );
    }

    return var_3;
}

onspawnplayer()
{
    if ( scripts\mp\utility\entity::isgameparticipant( self ) )
    {
        self.isplanting = 0;
        self.isdefusing = 0;
        self.isbombcarrier = 0;
    }

    if ( level.multibomb && self.pers["_encstr_89EF05D46BA8FD"] == game["_encstr_941C0A6AF345075ED05BEAD3"] )
        self setclientomnvar( "_encstr_815A11ABE7B1F64022CA7248F51F79BE6A1F7D", 1 );
    else
        self setclientomnvar( "_encstr_815A11ABE7B1F64022CA7248F51F79BE6A1F7D", 0 );

    scripts\mp\utility\stats::setextrascore0( 0 );

    if ( isdefined( self.pers["_encstr_8BB00783957F8B8B08"] ) )
        scripts\mp\utility\stats::setextrascore0( self.pers["_encstr_8BB00783957F8B8B08"] );

    level notify( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
    setuppingwatcher();
    var_0 = getdvarint( "_encstr_9751133F57FB70E884F51813D1785094B2EBBBBBB3" );
    self allowhighjump( var_0 );
    self allowhighjump( var_0 );
    self allowboostjump( var_0 );
}

onplayerkilled( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    self setclientomnvar( "_encstr_815A11ABE7B1F64022CA7248F51F79BE6A1F7D", 0 );
    thread checkallowspectating();
}

checkallowspectating()
{
    waitframe();
    var_0 = 0;

    if ( !scripts\mp\utility\teams::getteamdata( game["_encstr_941C0A6AF345075ED05BEAD3"], "_encstr_892A0BA3D3F25C4033ADD34893" ) )
    {
        level.spectateoverride[game["_encstr_941C0A6AF345075ED05BEAD3"]].allowenemyspectate = 1;
        var_0 = 1;
    }

    if ( !scripts\mp\utility\teams::getteamdata( game["_encstr_95A70AA81FEE295D3A2F56DE"], "_encstr_892A0BA3D3F25C4033ADD34893" ) )
    {
        level.spectateoverride[game["_encstr_95A70AA81FEE295D3A2F56DE"]].allowenemyspectate = 1;
        var_0 = 1;
    }

    if ( var_0 )
        scripts\mp\spectating::updatespectatesettings();
}

sd_endgame( var_0, var_1 )
{
    foreach ( var_3 in level.players )
    {
        if ( !isai( var_3 ) )
            var_3 setclientomnvar( "_encstr_8038139574D9F7694A8F08A8A78E415FE3DB079DCF", 0 );
    }

    level.finalkillcam_winner = var_0;

    if ( var_1 == game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_97CA113A0B4ED995E8AF192BE64739BDE5B246"] || var_1 == game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_B9A10DD145CDB008EA27752B0782ED"] )
    {
        if ( !isdefined( level.finalkillcam_killcamentityindex[var_0] ) || level.finalkillcam_killcamentityindex[var_0] != level.curobj.killcamentnum )
            scripts\mp\final_killcam::erasefinalkillcam();
    }

    thread scripts\mp\gamelogic::endgame( var_0, var_1 );
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = scripts\mp\rank::getscoreinfovalue( "_encstr_97D70583536853" );
    var_7 = var_0.team;

    if ( var_0.isplanting )
    {
        thread scripts\common\utility::_id_13E0A( level._id_11B30, var_2, "_encstr_89D109E8419005731360C2" );
        var_1 scripts\mp\utility\stats::incpersstat( "_encstr_9CF70851FD0FB8B81BB3", 1 );
        var_1 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9CF70851FD0FB8B81BB3", var_1.pers["_encstr_9CF70851FD0FB8B81BB3"] );
    }
    else if ( var_0.isbombcarrier )
        thread scripts\common\utility::_id_13E0A( level._id_11B30, var_2, "_encstr_B62F0996FAF3765317CAAF" );
    else if ( var_0.isdefusing )
    {
        thread scripts\common\utility::_id_13E0A( level._id_11B30, var_2, "_encstr_956909CC156977424BE0FA" );
        var_1 scripts\mp\utility\stats::incpersstat( "_encstr_9CF70851FD0FB8B81BB3", 1 );
        var_1 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9CF70851FD0FB8B81BB3", var_1.pers["_encstr_9CF70851FD0FB8B81BB3"] );
    }
}

ontimelimit()
{
    sd_endgame( game["_encstr_95A70AA81FEE295D3A2F56DE"], game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_A40B13A3B4AD56AFD896B5D28EF593AC0BC6A15632"] );

    foreach ( var_1 in level.players )
    {
        if ( isdefined( var_1.bombplantweapon ) )
        {
            var_1 scripts\cp_mp\utility\inventory_utility::_takeweapon( var_1.bombplantweapon );
            break;
        }
    }
}

updategametypedvars()
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
    level.planttime = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_B6980AABC86B3D731323FDED", 5, 0, 20 );
    level.defusetime = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_8FB30B465699AE6E95E8B4DA95", 5, 0, 20 );
    level.bombtimer = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_A12A0A56BDB2A5D331E760D0", 45, 1, 300 );
    level.multibomb = scripts\mp\utility\dvars::dvarintvalue( "_encstr_A34D0AD6BA361DB426F6ADC4", 0, 0, 1 );
    level.bombresettimer = scripts\mp\utility\dvars::dvarintvalue( "_encstr_95CA0F26DED64C922BCDB2D1A296B5594E", 60, 0, 180 );
}

setspecialloadout()
{
    if ( isusingmatchrulesdata() && scripts\mp\utility\game::getmatchrulesdatawithteamandindex( "_encstr_81300F3F8910414B21F907B33B56D3BD50", game["_encstr_941C0A6AF345075ED05BEAD3"], 5, "_encstr_9E95066E81471B5F", "_encstr_A28F0613BEB3DAD7" ) )
        level.sd_loadout[game["_encstr_941C0A6AF345075ED05BEAD3"]] = scripts\mp\utility\game::getmatchrulesspecialclass( game["_encstr_941C0A6AF345075ED05BEAD3"], 5 );
}

isplayeroutsideofcurbombsite( var_0 )
{
    if ( isdefined( level.curbombzone ) )
        return self istouching( level.curbombzone.trigger );

    return 0;
}

initializeobjectives()
{
    level.firsttimebomb = 1;
    var_0 = getentarray( "_encstr_889A09E530F7E918279537", "_encstr_B8CE0BE43FC317DF690862BA48" );
    level.objectives = var_0;
    level.curobjectiveindex = 0;
    level.curobj = setupnextobjective( level.curobjectiveindex );
}

setupnextobjective( var_0 )
{
    var_1 = level.objectives[var_0];
    var_2 = var_1.script_noteworthy;

    if ( !isdefined( var_2 ) )
        var_2 = "_encstr_889A09E530F7E918279537";

    var_3 = undefined;

    switch ( var_2 )
    {
        case "_encstr_889A09E530F7E918279537":
            if ( isdefined( level.firsttimebomb ) )
            {
                _encstr_9D04262397C00C9B650B9EA273100FC6C073BCA109D0D29E8001C289D9187F7ED0FF2E05DD981A67::bombzone_setupbombcase( "_encstr_AD130846E7093D189D63" );
                level.firsttimebomb = undefined;
            }
            else
                _encstr_9D04262397C00C9B650B9EA273100FC6C073BCA109D0D29E8001C289D9187F7ED0FF2E05DD981A67::advancebombcase();

            var_3 = _encstr_9D04262397C00C9B650B9EA273100FC6C073BCA109D0D29E8001C289D9187F7ED0FF2E05DD981A67::setupobjective( var_0 );
            scripts\mp\utility\dialog::leaderdialog( "_encstr_9E240C10CE33016D6AEA39B0F244", game["_encstr_941C0A6AF345075ED05BEAD3"] );
            scripts\mp\utility\dialog::leaderdialog( "_encstr_B3420C3D576AC3C8736F09906BB2", game["_encstr_95A70AA81FEE295D3A2F56DE"] );
            break;
        case "_encstr_97ED09427BB05A38E7C0DB":
            var_3 = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::setupobjective( level.objectives[var_0] );
            break;
        case "_encstr_A9D008C185E5D8B7C28C":
            break;
        case "_encstr_BA1904C7A174":
            break;
    }

    return var_3;
}

onobjectivecomplete( var_0, var_1, var_2, var_3, var_4 )
{
    switch ( var_0 )
    {
        case "_encstr_97ED09427BB05A38E7C0DB":
            ondompointobjectivecomplete( var_1, var_2, var_3, var_4 );
            break;
        case "_encstr_889A09E530F7E918279537":
            onbombzoneobjectivecomplete( var_1, var_2, var_3, var_4 );
            break;
    }

    if ( var_3 == game["_encstr_941C0A6AF345075ED05BEAD3"] )
    {
        level.curobjectiveindex++;

        if ( level.curobjectiveindex < level.objectives.size )
        {
            var_5 = scripts\mp\utility\dvars::getwatcheddvar( "_encstr_8B1C11588C463D4CA65636A35AD9952AA5D659" );
            scripts\mp\utility\dvars::setoverridewatchdvar( "_encstr_AA250A1D7CF2EB9071A740A0", scripts\mp\utility\game::gettimelimit() + var_5 );
            restarttimer();
            level.curobj = setupnextobjective( level.curobjectiveindex );
        }
        else
        {
            setgameendtime( 0 );
            wait 3;
            sd_endgame( game["_encstr_941C0A6AF345075ED05BEAD3"], game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_97CA113A0B4ED995E8AF192BE64739BDE5B246"] );
        }
    }
}

ondompointobjectivecomplete( var_0, var_1, var_2, var_3 )
{
    var_4 = var_1.team;

    if ( var_3 == "_encstr_9BA4080D39CFFB5AB7C1" )
    {
        var_5 = scripts\mp\utility\game::getotherteam( var_4 )[0];
        thread scripts\mp\utility\print::printandsoundoneveryone( var_4, var_5, undefined, undefined, "_encstr_A68415D97299A1880D276028C75FC6E7021ACD5D4A9279", undefined, var_1 );
        scripts\mp\utility\dialog::statusdialog( "_encstr_87E708E6B236574E958C" + self.label, var_4, 1 );
        scripts\mp\utility\dialog::statusdialog( "_encstr_88B7067D48EE6BBF" + self.label, var_5, 1 );
    }
}

onbombzoneobjectivecomplete( var_0, var_1, var_2, var_3 )
{
    if ( var_2 == game["_encstr_95A70AA81FEE295D3A2F56DE"] )
    {
        restarttimer();
        thread _encstr_9D04262397C00C9B650B9EA273100FC6C073BCA109D0D29E8001C289D9187F7ED0FF2E05DD981A67::respawnbombcase();
        level.curobj = _encstr_9D04262397C00C9B650B9EA273100FC6C073BCA109D0D29E8001C289D9187F7ED0FF2E05DD981A67::setupobjective( level.curobjectiveindex );
    }
}

restarttimer()
{
    scripts\mp\gamelogic::resumetimer();
    level.timepaused = gettime() - level.timepausestart;
    level.timelimitoverride = 0;
}

setuppingwatcher()
{
    if ( isai( self ) )
        return;

    self notifyonplayercommand( "_encstr_82A20B40E2EFB08173C270C0EA", "_encstr_887F0F0AA6737939C0D08833333EC0C5EB" );
    thread waitforplayerping();
}

waitforplayerping()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        self waittill( "_encstr_82A20B40E2EFB08173C270C0EA" );

        if ( scripts\mp\utility\player::isreallyalive( self ) && !scripts\mp\utility\player::isusingremote() )
        {
            if ( self adsbuttonpressed() )
            {
                doping();
                wait 0.5;
            }
        }

        wait 0.1;
    }
}

doping()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = self geteye();
    var_1 = var_0 + anglestoforward( self getplayerangles() ) * 2000;
    var_2 = scripts\engine\trace::ray_trace( var_0, var_1, self );
    var_3 = var_2["_encstr_B60E07C9FD1C2055E3"];
    var_4 = "_encstr_B37209A3972361AF0CE66B";
    var_5 = ( 1, 1, 1 );

    if ( isdefined( var_3 ) )
    {
        if ( isdefined( var_3.team ) && var_3.team != self.team )
        {
            var_5 = ( 1, 0, 0 );

            if ( isplayer( var_3 ) )
            {
                var_4 = "_encstr_97D705A3436CD3";
                self notify( "_encstr_A2060ECDE52AA35A2FA72860F33C91F9" );
            }
            else
                var_4 = "_encstr_A6CB08B5DDD717057539";
        }
        else if ( isdefined( var_3.script_gameobjectname ) )
        {
            if ( var_3.script_gameobjectname == "_encstr_889A09E530F7E918279537" )
            {
                if ( self.team == game["_encstr_941C0A6AF345075ED05BEAD3"] )
                {
                    var_4 = "_encstr_949A07ADFDD1D7E01F";
                    var_5 = ( 1, 1, 0 );
                }
                else
                {
                    var_4 = "_encstr_8C0C07C10DD769182B";
                    var_5 = ( 0, 0, 1 );
                }
            }
            else if ( var_3.script_gameobjectname == "_encstr_BD07030251" )
            {
                if ( self.team == game["_encstr_941C0A6AF345075ED05BEAD3"] )
                {
                    var_4 = "_encstr_BC2B0A27462C778EF1192910";
                    var_5 = ( 1, 1, 0 );
                }
            }
        }
    }
}
