// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    maintacopsinit();
    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();

    if ( isusingmatchrulesdata() )
        scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();

    maintacopspostinit();
    level.startedfromtacops = 0;
    level.onstartgametype = ::onstartgametype;
}

maintacops()
{
    maintacopsinit();
    maintacopspostinit();
    level.startedfromtacops = 1;
    onstartgametype( 1 );
}

maintacopsinit()
{
    level.tacopssublevel = "_encstr_8C6007E8DE7DB0D227";
    level.currentmode = "_encstr_8C6007E8DE7DB0D227";
    setomnvar( "_encstr_8FDF13201A5979B917FF1097CBBFA3337E22783072", level.currentmode );
}

maintacopspostinit()
{
    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( "_encstr_8C6007E8DE7DB0D227", 0, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( "_encstr_8C6007E8DE7DB0D227", 10 );
        scripts\mp\utility\game::registerscorelimitdvar( "_encstr_8C6007E8DE7DB0D227", 65 );
        scripts\mp\utility\game::registerroundlimitdvar( "_encstr_8C6007E8DE7DB0D227", 1 );
        scripts\mp\utility\game::registerwinlimitdvar( "_encstr_8C6007E8DE7DB0D227", 1 );
        scripts\mp\utility\game::registernumlivesdvar( "_encstr_8C6007E8DE7DB0D227", 0 );
        scripts\mp\utility\game::registerhalftimedvar( "_encstr_8C6007E8DE7DB0D227", 0 );
        scripts\mp\utility\game::registerdogtagsenableddvar( "_encstr_8C6007E8DE7DB0D227", 0 );
        level.matchrules_damagemultiplier = 0;
    }

    updategametypedvars();
    level.teambased = 1;
    level.onnormaldeath = ::onnormaldeath;
    level.modeonspawnplayer = ::onspawnplayer;
    level.ontimelimit = scripts\mp\gamelogic::default_ontimelimit;
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_A92D1C6E3627EB47ED7D2C4B4E7DEE16679593AC6E38C2EE3723951B58CB", 5 );
    setdynamicdvar( "_encstr_AB46209BD893EB47DBAF0BD293D7770B3B5993B237382CBBDC232B360BE57D581BD1", 10 );
    setdynamicdvar( "_encstr_B72A1ABEDE23BF91974BD8191BBFE865EB42A7CDF26897F846AF60B0", getmatchrulesdata( "_encstr_94F009D8DEE6334458E8C2", "_encstr_9B5711D79F5738112201208028FDEDF1EF2AD1" ) );
    setdynamicdvar( "_encstr_9B97176F907A1FB9306361F70130404DACC021A1B2D9357B67", getmatchrulesdata( "_encstr_94F009D8DEE6334458E8C2", "_encstr_AB030E38ED4BB91DE641AC9388CA732F" ) );
    setdynamicdvar( "_encstr_807D12325E15019B1070936F58095C5AA1E33D2F", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_9E91056EB77B0E", 0 );
    setdynamicdvar( "_encstr_81441183A855792748A8FECFBF33CF3D87686A", 0 );
}

updategametypedvars()
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
    level.flagneutralization = scripts\mp\utility\dvars::dvarintvalue( "_encstr_8A23138D6896BC27D09390DB7E19B96A87F3C7F7E8", 0, 0, 1 );
    level.controltoprogress = 1;
}

onstartgametype( var_0 )
{
    var_1[0] = "_encstr_9507035309";
    var_1[1] = "_encstr_814E0C0AC1E0DB8D30A5121FA5A8";
    var_1[2] = "_encstr_A85908F249E84E372DEB";
    var_1[3] = "_encstr_9B290667C6D043EF";
    var_1[4] = "_encstr_9318045AFDDD";
    var_1[5] = "_encstr_9E91056EB77B0E";
    scripts\mp\gameobjects::main( var_1 );
    seticonnames();
    setupairpath();
    thread setupobjectives();

    if ( !istrue( var_0 ) )
    {
        _encstr_88C021DB28B338B3692366357B200F71BBBD50D7B75DF315B376BB01D8D77386F49017::commoninit();
        activatespawns();
        level.allowtacopsmapprematch = 1;
    }

    level.extratime = 0;
    setgameendtime( 0 );
    scripts\mp\utility\dvars::setoverridewatchdvar( "_encstr_AA250A1D7CF2EB9071A740A0", 10 );
    updateallowedspawnareas();
}

initspawns()
{
    var_0 = level.tacopsspawns;
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_9FE5167853E91BAF9ABB539820EBCFBF7559420109E0FF17" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_8726146B07BED1BD859693D7E61CC2EE37FA58E1A56E" );
    var_0.to_air_spawns = [];
    var_0.to_air_spawns["_encstr_BC850785638DA59537"] = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_9FE5167853E91BAF9ABB539820EBCFBF7559420109E0FF17" );
    var_0.to_air_spawns["_encstr_BA840579D3F7F6"] = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_8726146B07BED1BD859693D7E61CC2EE37FA58E1A56E" );
}

getspawnpoint()
{
    var_0 = level.tacopsspawns;
    var_1 = self.pers["_encstr_89EF05D46BA8FD"];
    var_2 = undefined;
    var_2 = var_0.to_air_spawns[var_1];
    var_2 = scripts\mp\tac_ops_map::filterspawnpoints( var_2 );
    var_3 = undefined;

    if ( isdefined( self.tacopsmapselectedarea.dynamicent ) )
    {
        var_4 = isdefined( level.escortheli[0] ) && self.tacopsmapselectedarea.dynamicent == level.escortheli[0];
        var_5 = isdefined( level.escortheli[1] ) && self.tacopsmapselectedarea.dynamicent == level.escortheli[1];
        var_6 = isdefined( level.escortheli[2] ) && self.tacopsmapselectedarea.dynamicent == level.escortheli[2];

        if ( var_4 || var_5 && level.escortheli[1].spawnoccupied || var_6 && level.escortheli[2].spawnoccupied )
        {
            var_7 = scripts\engine\utility::player_drop_to_ground( self.tacopsmapselectedarea.dynamicent.origin, 32, 0, -1500, ( 0, 0, 1 ) );
            self.tacopsmapselectedarea.dynamicent.spawnorigin = var_7;
        }
        else if ( isdefined( level.escortheli[1] ) && self.tacopsmapselectedarea.dynamicent == level.escortheli[1] )
        {
            self.tacopsmapselectedarea.dynamicent.spawnorigin = self.tacopsmapselectedarea.dynamicent.origin;
            level.escortheli[1].owner thread enterattackheli( level.escortheli[1] );
        }
        else if ( isdefined( level.escortheli[2] ) && self.tacopsmapselectedarea.dynamicent == level.escortheli[2] )
        {
            self.tacopsmapselectedarea.dynamicent.spawnorigin = self.tacopsmapselectedarea.dynamicent.origin;
            level.escortheli[2].owner thread enterattackheli( level.escortheli[2] );
        }

        var_8 = anglestoforward( self.tacopsmapselectedarea.dynamicent.angles );
        var_8 = var_8 * ( 1, 1, 0 );
        var_9 = ( 0, 0, 1 );
        var_10 = vectorcross( var_8, var_9 );
        var_11 = axistoangles( var_8, var_10, var_9 );
        self.tacopsmapselectedarea.dynamicent.spawnangles = var_11;
    }
    else
    {

    }

    return var_3;
}

activatespawns()
{
    scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_A919048A11A9" );
    scripts\mp\tac_ops_map::setactivemapconfig( "_encstr_8C6007E8DE7DB0D227", "_encstr_BC850785638DA59537" );
    scripts\mp\tac_ops_map::setactivemapconfig( "_encstr_8C6007E8DE7DB0D227", "_encstr_BA840579D3F7F6" );
    level.getspawnpoint = ::getspawnpoint;
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4 )
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::oncommonnormaldeath( var_0, var_1, var_2, var_3, var_4 );
}

onspawnplayer()
{
    var_0 = 0;

    if ( self.team == "_encstr_BC850785638DA59537" )
    {
        var_0 = 1;

        if ( !istrue( level.spawnedescortchopper ) )
        {
            level.spawnedescortchopper = 1;
            thread setupheliobjective();
        }
    }
    else if ( self.team == "_encstr_BA840579D3F7F6" )
        var_0 = 2;

    self setclientomnvar( "_encstr_A2460F57D2FAE80B6CED8337F5A39516B5", var_0 );
    scripts\mp\tac_ops\roles_utility::kitspawn();
}

seticonnames()
{
    level.icontarget = "_encstr_8B511ABC625E72604B453B5F92162A9BB3EDBC226CB1E30913BF9D18";
    level.iconneutral = "_encstr_B4730DA4C86902D740B84F733899AC";
    level.iconcapture = "_encstr_A6120B6DDE8E1A7DAC73B2B6CB";
    level.icondefend = "_encstr_875E0E5B98A38BF1ED88825A7031F507";
    level.iconcontested = "_encstr_A8C21D4F27339FD0D92D332ED4B970DDFBB7CBF5EBB9EE08E68319A3FB6538";
    level.icontaking = "_encstr_B74218983278C9C0975605E824DF08A3E5FA61B03A970DBBB74E";
    level.iconlosing = "_encstr_AF471AF7D743B078433DDD811891222DAAC0E0851C8E126F4A8FD888";
    level.iconbombcapture = "_encstr_8B3610DD58E538DE9673D1AFA3854ED9CAE8";
    level.iconbombdefend = "_encstr_944B10F7CF52BBADA31823A97083A7A7E825";
}

setupairpath()
{
    level.airpathnodes = [];
    constructhelipath( 0, "_encstr_93960BC9722B70588EA4197F88" );
    constructhelipath( 1, "_encstr_9F960B2CD227EB0E0BD10DFA89" );
    constructhelipath( 2, "_encstr_BE960B37F8FBE7BB03FDD401C6" );
}

constructhelipath( var_0, var_1 )
{
    var_2 = getent( var_1, "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( isdefined( var_2 ) && isdefined( var_2.target ) )
    {
        var_3 = getentarray( var_2.target, "_encstr_B8CE0BE43FC317DF690862BA48" );

        if ( isdefined( var_3 ) && var_3.size > 0 )
        {
            level.airpathnodes[var_0] = [];

            foreach ( var_5 in var_3 )
            {
                var_6 = int( var_5.script_noteworthy );
                level.airpathnodes[var_0][var_6] = [];
                var_7 = var_5;

                for (;;)
                {
                    level.airpathnodes[var_0][var_6][level.airpathnodes[var_0][var_6].size] = var_7;

                    if ( !isdefined( var_7.target ) )
                        break;

                    var_7 = getent( var_7.target, "_encstr_B8CE0BE43FC317DF690862BA48" );
                }
            }
        }
    }
}

setupheliobjective()
{
    level.escortheli = [];
    level.escortheli[0] = spawnescortchopper( level.airpathnodes[0][0][0].origin );
    level.escortheli[0] thread axiswinondeath();
    level.escortheli[1] = spawnescortchopper( level.airpathnodes[1][0][0].origin );
    level.escortheli[2] = spawnescortchopper( level.airpathnodes[2][0][0].origin );
    scripts\mp\tac_ops_map::adddynamicspawnarea( "_encstr_8C6007E8DE7DB0D227", level.escortheli[0], "_encstr_BC850785638DA59537", "_encstr_AD2418D1F6EBC25AE4AF1636362DAC37EB98C658B16DA116BBAD" );
    scripts\mp\tac_ops_map::adddynamicspawnarea( "_encstr_8C6007E8DE7DB0D227", level.escortheli[1], "_encstr_BC850785638DA59537", "_encstr_98E81847B7AF16D29C7D0B1BD85ACA9BAF160D6C0DD7D8CA991D" );
    scripts\mp\tac_ops_map::adddynamicspawnarea( "_encstr_8C6007E8DE7DB0D227", level.escortheli[2], "_encstr_BC850785638DA59537", "_encstr_B98E19C9D03EA78C835913B12D5C5F4E4122D46295BF9B6CE76293" );
    level.escortheli[0].spawnoccupied = 0;
    level.escortheli[1].spawnoccupied = 0;
    level.escortheli[2].spawnoccupied = 0;
    updateallowedspawnareas();
    level.escortheli[0].trackedobject = level.escortheli[0] scripts\mp\gameobjects::createtrackedobject( level.escortheli[0], ( 0, 0, 0 ) );
    level.escortheli[0].trackedobject scripts\mp\gameobjects::releaseid();
    level.escortheli[0].trackedobject scripts\mp\gameobjects::requestid( 0, 1 );
    level.escortheli[0].trackedobject scripts\mp\gameobjects::setownerteam( "_encstr_BC850785638DA59537" );
    level.escortheli[0].trackedobject scripts\mp\gameobjects::setobjectivestatusicons( level.icondefend, level.iconcapture );
    level.escortheli[0].trackedobject scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
    level.airpathidx = 0;
    level.escortheli[0] waittill( "_encstr_AA7205F03A9609" );
    followairpath();
}

spawnescortchopper( var_0 )
{
    var_1 = var_0;
    var_2 = ( 0, 0, 0 );
    var_3 = 24000;
    var_4 = undefined;
    var_5 = var_0[2];
    var_6 = scripts\cp_mp\killstreaks\airstrike::getexplodedistance( var_5 );
    var_7 = 8000;
    var_8 = "_encstr_BD86075D3FD0DF78B5";
    var_9 = scripts\cp_mp\killstreaks\airstrike::getflightpath( var_1, var_2, var_3, var_4, var_5, var_7, var_6, var_8 );
    var_10 = fakestreakinfo();
    var_11 = scripts\mp\killstreaks\jackal::beginjackalescort( 0, var_9["_encstr_9C8C0B532531D30BB170921A50"], var_1, var_10, undefined );
    return var_11;
}

fakestreakinfo()
{
    var_0 = spawnstruct();
    var_0.available = 1;
    var_0.firednotify = "_encstr_8C600EDECC9934C2E623EB665AC9CA46";
    var_0.isgimme = 1;
    var_0.kid = 5;
    var_0.lifeid = 0;
    var_0.madeavailabletime = gettime();
    var_0.scriptuseagetype = "_encstr_A35616901050D58F9B9DD153539DF933DB09C32DEA50A76A";
    var_0.streakname = "_encstr_BD86075D3FD0DF78B5";
    var_0.streaksetupinfo = undefined;
    var_0.variantid = -1;
    var_0.weaponname = "_encstr_B3B1167A9BD66F3DD7AC1762A90717F51E2FB6E377CFC80B";
    var_0.objweapon = getcompleteweaponname( var_0.weaponname );
    return var_0;
}

setupobjectives()
{
    level.currentobjectiveindex = 0;
    level.currentobjective = undefined;
    level.objectives = [];
    wait 2.0;
    setupflags();
}

setupflags()
{
    var_0 = getentarray( "_encstr_93170DA48D825F66F84B3018EF127A", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_1 = getentarray( "_encstr_A40B0F33362C76AFE6568DDECD460B4ECB", "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( var_0.size + var_1.size == 0 )
        return;

    var_2 = [];

    for ( var_3 = 0; var_3 < var_0.size; var_3++ )
        var_2[var_2.size] = var_0[var_3];

    for ( var_3 = 0; var_3 < var_1.size; var_3++ )
        var_2[var_2.size] = var_1[var_3];

    var_4 = [];
    var_4[0] = 10;
    var_4[1] = 20;
    var_4[2] = 30;
    var_5 = [];
    var_5[0] = 0;
    var_5[1] = 0;
    var_5[2] = 0;
    level.objectives = [];

    for ( var_3 = 0; var_3 < var_2.size; var_3++ )
    {
        var_6 = 0;

        switch ( var_2[var_3].script_label )
        {
            case "_encstr_B80703EB16":
                var_6 = 0;
                break;
            case "_encstr_A40703FA31":
                var_6 = 1;
                break;
            case "_encstr_950703BF07":
                var_6 = 2;
                break;
        }

        var_2[var_3].script_label = undefined;
        level.objectives[var_6] = var_2[var_3];
        var_7 = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::setupobjective( level.objectives[var_6] );
        var_7 dompoint_ondisableobjective();
        var_7.onbeginuse = ::dompoint_onbeginuse;
        var_7.onuse = ::dompoint_onuse;
        var_7.onenduse = ::dompoint_onenduse;
        var_7.oncontested = ::dompoint_oncontested;
        var_7.onuncontested = ::dompoint_onuncontested;
        var_7.ondisableobjective = ::dompoint_ondisableobjective;
        var_7.onenableobjective = ::dompoint_onenableobjective;
        var_7.onactivateobjective = ::dompoint_onactivateobjective;
        level.objectives[var_6] = var_7;
        level.objectives[var_6].tierindex = var_6;
        level.objectives[var_6].captureduration = var_4[var_6];
        level.objectives[var_6].holdtime = var_5[var_6];

        if ( var_6 != 0 )
            level.objectives[var_6] scripts\engine\utility::delaythread( 2.0, ::dompoint_ondisableobjective );
    }
}

disabledomflagscriptable()
{
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::updateflagstate( "_encstr_9819045FD029", 0 );
}

followairpath()
{
    level.currentobjective = level.objectives[level.currentobjectiveindex];

    if ( isdefined( level.currentobjective ) )
        level.currentobjective [[ level.currentobjective.onenableobjective ]]();

    thread helifollowpath( 0 );
    thread helifollowpath( 1 );
    thread helifollowpath( 2 );
}

helifollowpath( var_0 )
{
    var_1 = level.escortheli[var_0];
    var_2 = level.airpathnodes[var_0][level.airpathidx];

    if ( !isdefined( var_1 ) )
        return;

    if ( !isdefined( var_2 ) )
        return;

    for ( var_3 = 1; var_3 < var_2.size; var_3++ )
    {
        if ( !isdefined( var_1 ) )
            return;

        var_4 = var_2[var_3];
        var_5 = var_4.origin;
        var_1.combatmode = "_encstr_B69B0FDAAB6B3A3376A1FFEBCFFBCF858D";
        var_1 notify( var_1.combatmode );
        var_1 thread scripts\mp\killstreaks\jackal::guardpositionescort( var_5 );

        if ( isdefined( var_1 ) )
            var_1 waittill( "_encstr_AA7205F03A9609" );
    }

    if ( isdefined( level.currentobjective ) && isdefined( level.currentobjective.trigger ) )
        var_1 thread scripts\mp\killstreaks\jackal::guardpositionescort( undefined, level.currentobjective.trigger );

    if ( var_0 == 0 )
    {
        if ( isdefined( level.currentobjective ) )
            level.currentobjective [[ level.currentobjective.onactivateobjective ]]();
        else
        {
            scripts\mp\gamescore::_setteamscore( "_encstr_BC850785638DA59537", 1, 0 );
            thread scripts\mp\gamelogic::endgame( "_encstr_BC850785638DA59537", game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_B22214F6314DAC361DB4D9B27D1BDB6BE0639547B291"] );
        }

        level.airpathidx++;
    }
}

setheligoal( var_0 )
{
    var_1 = distance( level.attackheli.origin, var_0 );
    var_2 = var_1 / 150;
    var_3 = 0.25;
    var_4 = 0.25;
    level.attackheli moveto( var_0, var_2, var_3, var_4 );
    var_5 = anglestoforward( level.attackheli.angles );
    var_6 = vectornormalize( var_0 - level.attackheli.origin );
    thread changeheading( var_5, var_6, 2.0 );
    return var_2;
}

changeheading( var_0, var_1, var_2 )
{
    var_3 = gettime();
    var_4 = var_3;
    var_2 = int( var_2 * 1000 );

    for ( var_5 = var_4 + var_2; var_3 < var_5; var_3 = gettime() )
    {
        var_6 = clamp( ( var_3 - var_4 ) / var_2, 0.0, 1.0 );
        var_7 = vectorlerp( var_0, var_1, var_6 );
        level.attackheli.angles = scripts\mp\utility\script::vectortoanglessafe( var_7, ( 0, 0, 1 ) );
        waitframe();
    }
}

dompoint_onbeginuse( var_0 )
{
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onusebegin( var_0 );
}

dompoint_onuse( var_0 )
{
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onuse( var_0 );
    var_1 = scripts\mp\gameobjects::getownerteam();
    var_2 = scripts\mp\utility\game::getotherteam( var_1 )[0];
    thread scripts\mp\utility\print::printandsoundoneveryone( var_1, var_2, undefined, undefined, "_encstr_A68415D97299A1880D276028C75FC6E7021ACD5D4A9279", "_encstr_B76C112883FF4D7B2D2FA5B93997B901972B83", var_0 );
    thread dompoint_holdtimer( var_1 );
}

dompoint_onenduse( var_0, var_1, var_2 )
{
    if ( self != level.currentobjective )
        return;

    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onuseend( var_0, var_1, var_2 );
}

dompoint_oncontested()
{
    if ( self != level.currentobjective )
        return;

    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_oncontested();
}

dompoint_onuncontested( var_0 )
{
    if ( self != level.currentobjective )
        return;

    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onuncontested( var_0 );
}

dompoint_ondisableobjective()
{
    scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
    scripts\mp\gameobjects::disableobject();
    scripts\mp\gameobjects::resetcaptureprogress();
    scripts\mp\gameobjects::releaseid();
    scripts\engine\utility::delaythread( 0.1, ::disabledomflagscriptable );
}

dompoint_onenableobjective()
{
    scripts\mp\gameobjects::requestid( 1, 1 );
    scripts\mp\gameobjects::enableobject();
    scripts\mp\gameobjects::setvisibleteam( "_encstr_B9FC095F8BCCFF02D92B43" );
    scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
    scripts\mp\gameobjects::setobjectivestatusicons( level.icondefend, level.icontarget );
    scripts\mp\gameobjects::setownerteam( "_encstr_BA840579D3F7F6" );
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::updateflagstate( "_encstr_BA840579D3F7F6", 0 );
}

dompoint_onactivateobjective()
{
    level.flagcapturetime = self.captureduration;
    scripts\mp\gameobjects::setobjectivestatusicons( level.icondefend, level.iconcapture );
    scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
    scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );
}

dompoint_holdtimer( var_0 )
{
    level endon( "_encstr_811E0A0259C1EF2FF041F5FC" );
    self notify( "_encstr_B6DA13C8B7DA0A7BA5B9E8AF24B7B1322A5AB5B24E" );
    self endon( "_encstr_B6DA13C8B7DA0A7BA5B9E8AF24B7B1322A5AB5B24E" );
    var_1 = level.currentobjective.holdtime;

    if ( var_1 > 0 )
    {
        wait( var_1 );

        if ( istrue( level.controltoprogress ) )
        {
            var_2 = scripts\mp\utility\game::getotherteam( var_0 )[0];

            for (;;)
            {
                if ( level.currentobjective.touchlist[var_2].size == 0 )
                    break;

                waitframe();
            }
        }
    }

    if ( var_0 == "_encstr_BC850785638DA59537" )
    {
        level.currentobjective [[ level.currentobjective.ondisableobjective ]]();
        level.currentobjectiveindex++;
        updateallowedspawnareas();
        followairpath();
    }
}

updateallowedspawnareas()
{
    if ( !isdefined( level.allowedspawnareas ) )
        level.allowedspawnareas = [];

    level.allowedspawnareas["_encstr_BC850785638DA59537"] = [];
    level.allowedspawnareas["_encstr_BA840579D3F7F6"] = [];

    if ( isdefined( level.escortheli ) )
    {
        level.allowedspawnareas["_encstr_BC850785638DA59537"][level.allowedspawnareas["_encstr_BC850785638DA59537"].size] = "_encstr_AD2418D1F6EBC25AE4AF1636362DAC37EB98C658B16DA116BBAD";

        if ( isdefined( level.escortheli[1] ) && !istrue( level.escortheli[1].spawnoccupied ) )
            level.allowedspawnareas["_encstr_BC850785638DA59537"][level.allowedspawnareas["_encstr_BC850785638DA59537"].size] = "_encstr_98E81847B7AF16D29C7D0B1BD85ACA9BAF160D6C0DD7D8CA991D";

        if ( isdefined( level.escortheli[2] ) && !istrue( level.escortheli[2].spawnoccupied ) )
            level.allowedspawnareas["_encstr_BC850785638DA59537"][level.allowedspawnareas["_encstr_BC850785638DA59537"].size] = "_encstr_B98E19C9D03EA78C835913B12D5C5F4E4122D46295BF9B6CE76293";
    }

    switch ( level.currentobjectiveindex )
    {
        case 0:
            level.allowedspawnareas["_encstr_BC850785638DA59537"][level.allowedspawnareas["_encstr_BC850785638DA59537"].size] = "_encstr_97DD101B4DC7902B83D77361735A6578AFF2";
            level.allowedspawnareas["_encstr_BA840579D3F7F6"][level.allowedspawnareas["_encstr_BA840579D3F7F6"].size] = "_encstr_9E020E8EDEF52C96E4EBB01EA5DCBE0C";
            break;
        case 1:
            level.allowedspawnareas["_encstr_BA840579D3F7F6"][level.allowedspawnareas["_encstr_BA840579D3F7F6"].size] = "_encstr_A4020ED3E82FD62FCBD01908D3332F0A";
            break;
        case 2:
            level.allowedspawnareas["_encstr_BA840579D3F7F6"][level.allowedspawnareas["_encstr_BA840579D3F7F6"].size] = "_encstr_9C020E037AF737C8E227B399098AB126";
            break;
    }

    foreach ( var_9, var_1 in level.allowedspawnareas )
    {
        foreach ( var_3 in level.tacopsmap.activeconfigs[var_9].spawnareas[var_9] )
        {
            var_4 = 0;

            foreach ( var_6 in level.allowedspawnareas[var_9] )
            {
                if ( var_6 == var_3.script_noteworthy )
                {
                    var_4 = 1;
                    break;
                }
            }

            var_3.enabled = var_4;
        }
    }

    level notify( "_encstr_BE6614470B6CF5BD83DCFADA2CC17DB1865873B3B246" );
}

enterattackheli( var_0 )
{
    self waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
    self playerlinkto( var_0, "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    self remotecontrolturret( var_0.turret );
    var_0.spawnoccupied = 1;
    updateallowedspawnareas();
    thread watchearlyexit( var_0 );
    thread watchhelideath( var_0 );
}

watchearlyexit( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    var_0 thread scripts\mp\killstreaks\killstreaks::allowridekillstreakplayerexit();
    var_0 waittill( "_encstr_8CDA0F40BF7498F74B9A4D4734B029E0B4" );
    self remotecontrolturretoff( var_0.turret );
    var_1 = scripts\engine\utility::player_drop_to_ground( var_0.origin, 32, 0, -1500, ( 0, 0, 1 ) );
    self unlink();
    self dontinterpolate();
    self setorigin( var_1 );
    var_2 = anglestoforward( var_0.angles );
    var_2 = var_2 * ( 1, 1, 0 );
    var_3 = ( 0, 0, 1 );
    var_4 = vectorcross( var_2, var_3 );
    var_5 = axistoangles( var_2, var_4, var_3 );
    self setplayerangles( var_5 );
    var_0.spawnoccupied = 0;
    updateallowedspawnareas();
    self notify( "_encstr_98E10C1933179580BFFF495BE424" );
}

watchhelideath( var_0 )
{
    self endon( "_encstr_98E10C1933179580BFFF495BE424" );
    var_0 waittill( "_encstr_A3750609A5E61883" );
    self suicide();
    updateallowedspawnareas();
}

axiswinondeath()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self waittill( "_encstr_A3750609A5E61883" );
    wait 5.0;
    scripts\mp\gamescore::_setteamscore( "_encstr_BA840579D3F7F6", 1, 0 );
    thread scripts\mp\gamelogic::endgame( "_encstr_BA840579D3F7F6", game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_B22214F6314DAC361DB4D9B27D1BDB6BE0639547B291"] );
}
