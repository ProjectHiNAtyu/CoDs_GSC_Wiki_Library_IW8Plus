// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    if ( getdvar( "_encstr_9E700851BEE33DF1B547" ) == "_encstr_8A510E519897A1332E4A3898E243F5B9" )
        return;

    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    flag_default_origins();
    var_0[0] = scripts\mp\utility\game::getgametype();
    scripts\mp\gameobjects::main( var_0 );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 300 );
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 3 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 2 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerroundswitchdvar( scripts\mp\utility\game::getgametype(), 1, 0, 1 );
    }

    updategametypedvars();

    if ( level.winrule )
        level.wingamebytype = "_encstr_B4040B6BBF898046C247E5C3DF";
    else
        level.wingamebytype = "_encstr_BD1B0AB298DBD25C53F9F7EB";

    level.teambased = 1;
    level.objectivebased = 1;
    level.overtimescorewinoverride = 1;
    level.onstartgametype = ::onstartgametype;
    level.onplayerconnect = ::onplayerconnect;
    level.getspawnpoint = ::getspawnpoint;
    level.onplayerkilled = ::onplayerkilled;
    level.modeonspawnplayer = ::onspawnplayer;
    level.spawnnodetype = "_encstr_BAE60DC0F1113B034B5153D149572B";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_B7C80F3269F1DF5398B90537B518DC43A2";

    if ( getdvarint( "_encstr_B8020A9E9AA69A6292517AA0" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_891904A1D8BE" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];
    else if ( getdvarint( "_encstr_93570B93F4A9629272A825B426" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_889708C9D0E7EBE819D9" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];

    game["_encstr_B8DA073D799798C7C7"]["_encstr_9E240C10CE33016D6AEA39B0F244"] = "_encstr_B9B10C6AB0E8CFE347E02A727825";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B3420C3D576AC3C8736F09906BB2"] = "_encstr_B9B10C6AB0E8CFE347E02A727825";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_949514E063FDB7B716C991E5ABEE6830F841B14F2884"] = "_encstr_949514E063FDB7B716C991E5ABEE6830F841B14F2884";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_816B14E26DAFD8726E5833BCABF26B417F6FD0BB704B"] = "_encstr_816B14E26DAFD8726E5833BCABF26B417F6FD0BB704B";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_ABB5169D5EA798CBA6824BF0FBFFA95117C79E05BC0FA3DD"] = "_encstr_ABB5169D5EA798CBA6824BF0FBFFA95117C79E05BC0FA3DD";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B6EE157BDEF7C01B2B5AB80323E359688F17D1EB735F80"] = "_encstr_B6EE157BDEF7C01B2B5AB80323E359688F17D1EB735F80";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9E5912EDEA3913B14B3AD3331B2CB3BEB1163847"] = "_encstr_9E5912EDEA3913B14B3AD3331B2CB3BEB1163847";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_A44E12A81B3A5879C28B95A5C36A3469C43250C3"] = "_encstr_A44E12A81B3A5879C28B95A5C36A3469C43250C3";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B2A615882782A13172C3EAFCDDAA7F4EFF1FD878DF2B58"] = "_encstr_B2A615882782A13172C3EAFCDDAA7F4EFF1FD878DF2B58";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_816914425BF3A0D0EB5B15AECA82477F555550A7FEAA"] = "_encstr_816914425BF3A0D0EB5B15AECA82477F555550A7FEAA";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_98791347ED0A80B92FC332B9AAE7E4B12351F7DB6E"] = "_encstr_98791347ED0A80B92FC332B9AAE7E4B12351F7DB6E";
    setomnvar( "_encstr_AB4C11D5D2EB6CE8CCD766D80B3B7DC20FD237", -2 );
    setomnvar( "_encstr_B401134BBCB7F0D59287CDD1976A88382C5570C1A2", -2 );
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_ABE0126E1B93FA26C64B1D9EF5DD96B9295D8DAC", getmatchrulesdata( "_encstr_89FB0ABA102B73388973CCA1", "_encstr_89AB088F9A73610B95AD" ) );
    setdynamicdvar( "_encstr_AFBB1B3FA1026F0EE0430CD87ED3F38815DD5ACF178002A1B88110B79B", getmatchrulesdata( "_encstr_89FB0ABA102B73388973CCA1", "_encstr_8F2E11C6C20E3AEA275634DBCD8C96472DB773" ) );
    setdynamicdvar( "_encstr_97DA15FB4EEA61AE620F594DBFEB65408562C097742D78", getmatchrulesdata( "_encstr_89FB0ABA102B73388973CCA1", "_encstr_AA680B12ABC03BA358FFEA5221" ) );
    setdynamicdvar( "_encstr_8A691BB98DC9D731B1A58E3DEBE6D0BDBBA89B56B62F860BC993B45939", getmatchrulesdata( "_encstr_870E0A4EB993E21BA543ABF7", "_encstr_A63F119BA1DB77A8E62BD6BC34589CE4B42B93" ) );
    setdynamicdvar( "_encstr_9EB1188F8706C95A502D3B80FE406432557D5F7763ADC11930E9", getmatchrulesdata( "_encstr_870E0A4EB993E21BA543ABF7", "_encstr_82FA0EC1D4108105B9FEC974ACBB42E7" ) );
    setdynamicdvar( "_encstr_A6A915C710434F32C1AB3BB098A1DA3B08D843C3E818AD", getmatchrulesdata( "_encstr_870E0A4EB993E21BA543ABF7", "_encstr_95460B6B40DEDF2BF829E1FD53" ) );
    setdynamicdvar( "_encstr_BC27131766E8898D13CB6C9218C8310D2179233D7F", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_88AB06125940BBF8", 0 );
    setdynamicdvar( "_encstr_9C3F128072D37EA6D3EFFBBA49EB9B770FDF79A2", 0 );
}

onspawnplayer()
{

}

onstartgametype()
{
    var_0 = scripts\mp\utility\game::inovertime();
    var_1 = game["_encstr_886315DEB3CAE4475AB6954AEDEACD19DCA01B16BCB232"] == 0;
    var_2 = scripts\mp\utility\game::istimetobeatvalid();

    if ( var_0 )
    {
        if ( var_1 )
        {
            setomnvar( "_encstr_B7DF21D343E91DE2930E52A9B0A78D3B4777330D9352BB7C6F0990317B531F136F330F", 1 );
            setomnvar( "_encstr_B73721EA96FA4EDE579B91AFA15A373ABEDE3B2B9CE45A8C2BBEC859CCCA7346B2C9E6", 1 );
        }
        else if ( var_2 )
        {
            setomnvar( "_encstr_B7DF21D343E91DE2930E52A9B0A78D3B4777330D9352BB7C6F0990317B531F136F330F", scripts\engine\utility::ter_op( game["_encstr_B1D40F332A0F051175EA6B5BE49350DFD7"] == game["_encstr_941C0A6AF345075ED05BEAD3"], 2, 3 ) );
            setomnvar( "_encstr_B73721EA96FA4EDE579B91AFA15A373ABEDE3B2B9CE45A8C2BBEC859CCCA7346B2C9E6", scripts\engine\utility::ter_op( game["_encstr_B1D40F332A0F051175EA6B5BE49350DFD7"] == game["_encstr_95A70AA81FEE295D3A2F56DE"], 2, 3 ) );
        }
        else
        {
            setomnvar( "_encstr_B7DF21D343E91DE2930E52A9B0A78D3B4777330D9352BB7C6F0990317B531F136F330F", 4 );
            setomnvar( "_encstr_B73721EA96FA4EDE579B91AFA15A373ABEDE3B2B9CE45A8C2BBEC859CCCA7346B2C9E6", 4 );
        }
    }

    if ( !isdefined( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
        game["_encstr_A6D60EE09BF413B9945185CB4797C583"] = 0;

    if ( scripts\mp\utility\game::inovertime() )
        setdvar( "_encstr_80F615B331812874DF6373186AB7B848A69C2D39A9F5B0", 0 );
    else if ( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] )
        setdvar( "_encstr_80F615B331812874DF6373186AB7B848A69C2D39A9F5B0", 2 );
    else
        setdvar( "_encstr_80F615B331812874DF6373186AB7B848A69C2D39A9F5B0", 1 );

    if ( !isdefined( game["_encstr_82CB13F639A5CED23758637D8C95CC56378CCA276E"] ) )
        game["_encstr_82CB13F639A5CED23758637D8C95CC56378CCA276E"] = game["_encstr_95A70AA81FEE295D3A2F56DE"];

    setclientnamemode( "_encstr_95900C2EDBD01F99D6B1DFEB878D" );

    if ( level.splitscreen )
    {
        scripts\mp\utility\game::setobjectivescoretext( game["_encstr_941C0A6AF345075ED05BEAD3"], &"_encstr_80D61D3D099215D0A252598A4DAFD39CA8F59126148EFA50A85182862D1592" );
        scripts\mp\utility\game::setobjectivescoretext( game["_encstr_95A70AA81FEE295D3A2F56DE"], &"_encstr_A21B1D17553CA589615141F5E72E907E63FEADE1B62759FDFFE301F085609A" );
    }
    else
    {
        scripts\mp\utility\game::setobjectivescoretext( game["_encstr_941C0A6AF345075ED05BEAD3"], &"_encstr_953D23A7219254A14552B2A2A9FAA79351D7C889A01DD7052AA2050DD25494BE6AA1F494A2" );
        scripts\mp\utility\game::setobjectivescoretext( game["_encstr_95A70AA81FEE295D3A2F56DE"], &"_encstr_8FB623CF913AAD5F0CE7B3FD6720812B953F1B331BB78625BB7D9D05714D66F0B7564FF925" );
    }

    scripts\mp\utility\game::setobjectivetext( game["_encstr_941C0A6AF345075ED05BEAD3"], &"_encstr_B3DE113DCE65A0BB7749530781C072F8DB7DF0" );
    scripts\mp\utility\game::setobjectivetext( game["_encstr_95A70AA81FEE295D3A2F56DE"], &"_encstr_B3DE113DCE65A0BB7749530781C072F8DB7DF0" );
    scripts\mp\utility\game::setobjectivehinttext( game["_encstr_941C0A6AF345075ED05BEAD3"], &"_encstr_803422E90952A2861594B2A89AD7F4938AF523890574AF82452A281AB4A849F509949C45" );
    scripts\mp\utility\game::setobjectivehinttext( game["_encstr_95A70AA81FEE295D3A2F56DE"], &"_encstr_BE7322E773D8DD99DCDC5F3572EFC1E0809F7D991750986925E7256CAF9D61A0A86FF521" );
    flag_setupvfx();
    createflagsandhud();
    initspawns();
}

updategametypedvars()
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
    level.winrule = scripts\mp\utility\dvars::dvarintvalue( "_encstr_89AB088F9A73610B95AD", 0, 0, 1 );
    level.showenemycarrier = scripts\mp\utility\dvars::dvarintvalue( "_encstr_A63F119BA1DB77A8E62BD6BC34589CE4B42B93", 5, 0, 6 );
    level.idleresettime = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_82FA0EC1D4108105B9FEC974ACBB42E7", 30, 0, 60 );
    level.capturecondition = scripts\mp\utility\dvars::dvarintvalue( "_encstr_8F2E11C6C20E3AEA275634DBCD8C96472DB773", 0, 0, 1 );
    level.pickuptime = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_95460B6B40DEDF2BF829E1FD53", 0, 0, 10 );
    level.returntime = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_AA680B12ABC03BA358FFEA5221", 0, -1, 25 );
}

createflagsandhud()
{
    level.flagmodel["_encstr_BC850785638DA59537"] = "_encstr_ABFE138D47CCF5ECC25BB2AFCC8DB0B3F5DD59371D";
    level.flagbase["_encstr_BC850785638DA59537"] = "_encstr_B169130653E887A27F1357C77D918AF779393E8AE9";
    level.carryflag["_encstr_BC850785638DA59537"] = "_encstr_B7AF18E09CF6C1D71B47337DD9856BCAAFCC8D0B9DBEEEACDCE8";
    level.flagmodel["_encstr_BA840579D3F7F6"] = "_encstr_8C9313401BC7DF89EF1DC5D0EE23B1676192D878B3";
    level.flagbase["_encstr_BA840579D3F7F6"] = "_encstr_B169130653E887A27F1357C77D918AF779393E8AE9";
    level.carryflag["_encstr_BA840579D3F7F6"] = "_encstr_AF4418F05E48B06046BBD481F9913DAD6188409B0F8E82614AFB";
    level.closecapturekiller = [];
    level.closecapturekiller["_encstr_BC850785638DA59537"] = undefined;
    level.closecapturekiller["_encstr_BA840579D3F7F6"] = undefined;
    setupwaypointicons();
    level.iconescort = "_encstr_BDAF16E3566990A08A9BC18FB382FBF812A129FB7ED758E5";
    level.iconkill = "_encstr_B338144F98BAE86A7390B3618E114294A201A7BF48B0";
    level.iconpickupflag = "_encstr_A62416B7DFCB671801F5FB961EFCD09D13BF31337FB2ADA8";
    level.icongoalflag = "_encstr_935C14EE2CE5C1BD2DB9A3FA4CC65AA3E9AF9DDB161B";
    level.iconreturnflag = "_encstr_BEAE152BD938801A533D0BAF0D8922DC4866E23733604C";
    level.iconresettingflag = "_encstr_A18819C0E7E1E37DD71DE3DFB303A373BB4E0B477705B34113107F";
    level.iconlosingflag = "_encstr_ADB91D235F2B3F78F0B50D57A00858FBDAD8B743BEA88360F7A04FDA035A0F";
    level.icondefendflag = "_encstr_A3E916F388B7E0F73B92B0718BBDE0753330C9BBEBC73DCB";
    level.iconpickupdefendflag = "_encstr_BE271DBFD7C36F2009FDE39EE6E4D8A50BC7290B674AB5A06757C9B1CFDEE8";
    level.teamflags[game["_encstr_95A70AA81FEE295D3A2F56DE"]] = createteamflag( game["_encstr_95A70AA81FEE295D3A2F56DE"], "_encstr_BA840579D3F7F6" );
    level.teamflags[game["_encstr_941C0A6AF345075ED05BEAD3"]] = createteamflag( game["_encstr_941C0A6AF345075ED05BEAD3"], "_encstr_BC850785638DA59537" );
    level.capzones[game["_encstr_95A70AA81FEE295D3A2F56DE"]] = createcapzone( game["_encstr_95A70AA81FEE295D3A2F56DE"], "_encstr_BA840579D3F7F6" );
    level.capzones[game["_encstr_941C0A6AF345075ED05BEAD3"]] = createcapzone( game["_encstr_941C0A6AF345075ED05BEAD3"], "_encstr_BC850785638DA59537" );
}

flag_setupvfx()
{

}

initspawns()
{
    scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_95C110A95CC9074F3DA81A90C87BFD3F21C6", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_B22F1A688990C6F315D9A0838904E0AE40C85807873F1F078D77FB34" );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_A36918AAF8C7AEA3A1C81328FFAB83F9E3D092C31937A32FDB45" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_BAE60DC0F1113B034B5153D149572B" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_BAE60DC0F1113B034B5153D149572B" );
    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
    assignteamspawns();
    level.ctfteamspawnsetids["_encstr_BC850785638DA59537"] = "_encstr_BC850785638DA59537";
    level.ctfteamspawnsetids["_encstr_BA840579D3F7F6"] = "_encstr_BA840579D3F7F6";
    scripts\mp\spawnlogic::registerspawnset( "_encstr_BC850785638DA59537", level.teamspawnpoints["_encstr_BC850785638DA59537"] );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_BA840579D3F7F6", level.teamspawnpoints["_encstr_BA840579D3F7F6"] );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_9BA4080D39CFFB5AB7C1", level.teamspawnpoints["_encstr_9BA4080D39CFFB5AB7C1"] );
}

assignteamspawns()
{
    var_0 = scripts\mp\spawnlogic::getspawnpointarray( level.spawnnodetype );
    var_1 = scripts\mp\spawnlogic::ispathdataavailable();
    level.teamspawnpoints["_encstr_BA840579D3F7F6"] = [];
    level.teamspawnpoints["_encstr_BC850785638DA59537"] = [];
    level.teamspawnpoints["_encstr_9BA4080D39CFFB5AB7C1"] = [];

    if ( level.teamflags.size == 2 )
    {
        var_2 = level.teamflags["_encstr_BC850785638DA59537"];
        var_3 = level.teamflags["_encstr_BA840579D3F7F6"];
        var_4 = ( var_2.curorigin[0], var_2.curorigin[1], 0 );
        var_5 = ( var_3.curorigin[0], var_3.curorigin[1], 0 );
        var_6 = var_5 - var_4;
        var_7 = length2d( var_6 );

        foreach ( var_9 in var_0 )
        {
            var_10 = ( var_9.origin[0], var_9.origin[1], 0 );
            var_11 = var_10 - var_4;
            var_12 = vectordot( var_11, var_6 );
            var_13 = var_12 / ( var_7 * var_7 );

            if ( var_13 < 0.33 )
            {
                var_9.teambase = var_2.ownerteam;
                level.teamspawnpoints[var_9.teambase][level.teamspawnpoints[var_9.teambase].size] = var_9;
                continue;
            }

            if ( var_13 > 0.67 )
            {
                var_9.teambase = var_3.ownerteam;
                level.teamspawnpoints[var_9.teambase][level.teamspawnpoints[var_9.teambase].size] = var_9;
                continue;
            }

            var_14 = undefined;
            var_15 = undefined;

            if ( var_1 )
                var_14 = getpathdist( var_9.origin, var_2.curorigin, 999999 );

            if ( isdefined( var_14 ) && var_14 != -1 )
                var_15 = getpathdist( var_9.origin, var_3.curorigin, 999999 );

            if ( !isdefined( var_15 ) || var_15 == -1 )
            {
                var_14 = distance2d( var_2.curorigin, var_9.origin );
                var_15 = distance2d( var_3.curorigin, var_9.origin );
            }

            var_16 = max( var_14, var_15 );
            var_17 = min( var_14, var_15 );
            var_18 = var_17 / var_16;

            if ( var_18 > 0.5 )
                level.teamspawnpoints["_encstr_9BA4080D39CFFB5AB7C1"][level.teamspawnpoints["_encstr_9BA4080D39CFFB5AB7C1"].size] = var_9;
        }
    }
    else
    {
        foreach ( var_9 in var_0 )
        {
            var_9.teambase = getnearestflagteam( var_9 );

            if ( var_9.teambase == "_encstr_BA840579D3F7F6" )
            {
                level.teamspawnpoints["_encstr_BA840579D3F7F6"][level.teamspawnpoints["_encstr_BA840579D3F7F6"].size] = var_9;
                continue;
            }

            level.teamspawnpoints["_encstr_BC850785638DA59537"][level.teamspawnpoints["_encstr_BC850785638DA59537"].size] = var_9;
        }
    }
}

getnearestflagteam( var_0 )
{
    var_1 = scripts\mp\spawnlogic::ispathdataavailable();
    var_2 = undefined;
    var_3 = undefined;

    foreach ( var_5 in level.teamflags )
    {
        var_6 = undefined;

        if ( var_1 )
            var_6 = getpathdist( var_0.origin, var_5.curorigin, 999999 );

        if ( !isdefined( var_6 ) || var_6 == -1 )
            var_6 = distancesquared( var_5.curorigin, var_0.origin );

        if ( !isdefined( var_2 ) || var_6 < var_3 )
        {
            var_2 = var_5;
            var_3 = var_6;
        }
    }

    return var_2.ownerteam;
}

getspawnpoint()
{
    var_0 = self.pers["_encstr_89EF05D46BA8FD"];
    var_1 = scripts\mp\utility\game::getotherteam( var_0 )[0];

    if ( scripts\mp\spawnlogic::shoulduseteamstartspawn() )
    {
        if ( level.mapname == "_encstr_95EE0AB5E0FA9CAB73DCAC93" )
        {
            var_0 = scripts\mp\utility\game::getotherteam( var_0 )[0];
            var_1 = scripts\mp\utility\game::getotherteam( var_1 )[0];
        }

        if ( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] )
        {
            var_2 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_A1330E8DE73657CB1D31F3BBB84705EF" + var_1 + "_encstr_A4810727CEFBF7F281" );
            var_3 = scripts\mp\spawnlogic::getspawnpoint_startspawn( var_2 );
        }
        else
        {
            var_2 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_A1330E8DE73657CB1D31F3BBB84705EF" + var_0 + "_encstr_A4810727CEFBF7F281" );
            var_3 = scripts\mp\spawnlogic::getspawnpoint_startspawn( var_2 );
        }
    }
    else
        var_3 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, level.ctfteamspawnsetids[var_0], "_encstr_9BA4080D39CFFB5AB7C1" );

    return var_3;
}

flag_default_origins()
{
    level.default_goal_origins = [];
    level.flags = getentarray( "_encstr_93170DA48D825F66F84B3018EF127A", "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( !isdefined( game["_encstr_941C0A6AF345075ED05BEAD3"] ) )
        game["_encstr_941C0A6AF345075ED05BEAD3"] = "_encstr_BC850785638DA59537";

    if ( !isdefined( game["_encstr_95A70AA81FEE295D3A2F56DE"] ) )
        game["_encstr_95A70AA81FEE295D3A2F56DE"] = "_encstr_BA840579D3F7F6";

    if ( istrue( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
    {
        var_0 = game["_encstr_941C0A6AF345075ED05BEAD3"];
        var_1 = game["_encstr_95A70AA81FEE295D3A2F56DE"];
        game["_encstr_941C0A6AF345075ED05BEAD3"] = var_1;
        game["_encstr_95A70AA81FEE295D3A2F56DE"] = var_0;
    }

    foreach ( var_3 in level.flags )
    {
        switch ( var_3.script_label )
        {
            case "_encstr_B80703EB16":
                if ( istrue( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
                    level.default_flag_origins[game["_encstr_95A70AA81FEE295D3A2F56DE"]] = var_3.origin;
                else
                    level.default_flag_origins[game["_encstr_941C0A6AF345075ED05BEAD3"]] = var_3.origin;

                break;
            case "_encstr_950703BF07":
                if ( istrue( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
                    level.default_flag_origins[game["_encstr_941C0A6AF345075ED05BEAD3"]] = var_3.origin;
                else
                    level.default_flag_origins[game["_encstr_95A70AA81FEE295D3A2F56DE"]] = var_3.origin;

                break;
        }
    }

    var_5 = getent( "_encstr_AA1F0A99EB9E01C2F2B3DBA7" + game["_encstr_95A70AA81FEE295D3A2F56DE"], "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( isdefined( var_5 ) )
    {
        if ( istrue( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
            level.default_flag_origins[game["_encstr_941C0A6AF345075ED05BEAD3"]] = var_5.origin;
        else
            level.default_flag_origins[game["_encstr_95A70AA81FEE295D3A2F56DE"]] = var_5.origin;
    }

    var_5 = getent( "_encstr_AA1F0A99EB9E01C2F2B3DBA7" + game["_encstr_941C0A6AF345075ED05BEAD3"], "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( isdefined( var_5 ) )
    {
        if ( istrue( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
            level.default_flag_origins[game["_encstr_95A70AA81FEE295D3A2F56DE"]] = var_5.origin;
        else
            level.default_flag_origins[game["_encstr_941C0A6AF345075ED05BEAD3"]] = var_5.origin;
    }
}

flag_create_team_goal( var_0 )
{
    var_1 = spawnstruct();

    switch ( level.script )
    {
        default:
            break;
    }

    if ( !isdefined( var_1.origin ) )
        var_1.origin = level.default_flag_origins[var_0];

    var_1 flag_find_ground();
    var_1.origin = var_1.ground_origin;
    var_1.radius = 30;
    var_1.team = var_0;
    var_1.ball_in_goal = 0;
    var_1.highestspawndistratio = 0;
    return var_1;
}

flag_find_ground( var_0 )
{
    var_1 = self.origin + ( 0, 0, 32 );
    var_2 = self.origin + ( 0, 0, -1000 );
    var_3 = scripts\engine\trace::create_contents( 1, 1, 1, 1, 0, 1, 1 );
    var_4 = [];
    var_5 = scripts\engine\trace::ray_trace( var_1, var_2, var_4, var_3 );
    self.ground_origin = var_5["_encstr_B7260923C89E8F3378E72E"];
    return var_5["_encstr_B130095358E1B3930B687D"] != 0 && var_5["_encstr_B130095358E1B3930B687D"] != 1;
}

showflagradiuseffecttoplayers( var_0, var_1, var_2 )
{
    if ( isdefined( var_1._flagradiuseffect[var_0] ) )
        var_1._flagradiuseffect[var_0] delete();

    var_3 = undefined;
    var_4 = var_1.team;
    var_5 = var_1 ismlgspectator();

    if ( var_5 )
        var_4 = var_1 getmlgspectatorteam();
    else if ( var_4 == "_encstr_A68C0A5803A5D151A2B310A6" )
        var_4 = "_encstr_BC850785638DA59537";

    if ( var_4 == var_0 )
    {
        var_6 = spawnfxforclient( level.flagradiusfxid["_encstr_B9FC095F8BCCFF02D92B43"], var_2, var_1, ( 0, 0, 1 ) );
        var_6 setfxkilldefondelete();
    }
    else
    {
        var_6 = spawnfxforclient( level.flagradiusfxid["_encstr_80BF06CA78A2226B"], var_2, var_1, ( 0, 0, 1 ) );
        var_6 setfxkilldefondelete();
    }

    var_1._flagradiuseffect[var_0] = var_6;
    triggerfx( var_6 );
}

showbaseeffecttoplayer( var_0, var_1 )
{
    if ( isdefined( var_1._flageffect[var_0] ) )
        var_1._flageffect[var_0] delete();

    var_2 = undefined;
    var_3 = var_1.team;
    var_4 = var_1 ismlgspectator();

    if ( var_4 )
        var_3 = var_1 getmlgspectatorteam();
    else if ( var_3 == "_encstr_A68C0A5803A5D151A2B310A6" )
        var_3 = "_encstr_BC850785638DA59537";

    if ( var_3 == var_0 )
    {
        var_5 = spawnfxforclient( level.flagbaseglowfxid["_encstr_B9FC095F8BCCFF02D92B43"], self.origin, var_1, self.baseeffectforward );
        var_5 setfxkilldefondelete();
    }
    else
    {
        var_5 = spawnfxforclient( level.flagbaseglowfxid["_encstr_80BF06CA78A2226B"], self.origin, var_1, self.baseeffectforward );
        var_5 setfxkilldefondelete();
    }

    var_1._flageffect[var_0] = var_5;
    triggerfx( var_5 );
}

setteaminhuddatafromteamname( var_0 )
{
    if ( var_0 == "_encstr_BA840579D3F7F6" )
        self setteaminhuddata( 1 );
    else if ( var_0 == "_encstr_BC850785638DA59537" )
        self setteaminhuddata( 2 );
    else
        self setteaminhuddata( 0 );
}

createteamflag( var_0, var_1 )
{
    var_2 = 0;
    var_3 = flag_create_team_goal( var_0 );
    var_4 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", var_3.origin - ( 0, 0, var_3.radius / 2 ), 0, var_3.radius, 80 );
    var_4.no_moving_platfrom_unlink = 1;
    var_4.linktoenabledflag = 1;
    var_4.baseorigin = var_4.origin;
    var_2 = 1;
    var_5[0] = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_3.origin );
    var_5[0] setasgametypeobjective();
    var_5[0] setteaminhuddatafromteamname( var_1 );

    if ( !isdefined( var_5[0] ) )
    {

    }

    if ( !var_2 )
    {
        var_6 = 15;

        if ( level.pickuptime > 0 || level.returntime > 0 )
            var_6 = var_6 * 2;

        var_7 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", var_4.origin, 0, var_6, var_4.height );
        var_4 = var_7;
    }

    var_5[0] setmodel( level.flagmodel[var_0] );
    var_5[0] setasgametypeobjective();
    var_5[0] setteaminhuddatafromteamname( var_1 );
    var_8 = scripts\mp\gameobjects::createcarryobject( var_0, var_4, var_5, ( 0, 0, 72 ) );
    var_8 scripts\mp\gameobjects::allowcarry( "_encstr_B9FC095F8BCCFF02D92B43" );
    var_8 scripts\mp\gameobjects::setteamusetime( "_encstr_B9FC095F8BCCFF02D92B43", level.pickuptime );
    var_8 scripts\mp\gameobjects::setteamusetime( "_encstr_80BF06CA78A2226B", level.returntime );
    var_8 scripts\mp\gameobjects::setvisibleteam( "_encstr_B9FC095F8BCCFF02D92B43" );
    scripts\mp\objidpoolmanager::objective_set_play_intro( var_8.objidnum, 0 );
    var_8.atbase = 1;
    var_8.allowweapons = 1;
    var_8.onpickup = ::onpickup;
    var_8.onpickupfailed = ::onpickup;
    var_8.ondrop = ::ondrop;
    var_8.onreset = ::onreset;
    var_8.onbeginuse = ::onresetstart;
    var_8.onenduse = ::onresetend;

    if ( level.pickuptime > 0 || level.returntime > 0 )
    {
        var_8.nousebar = 1;
        var_8.claimgracetime = max( level.pickuptime * 1000, level.returntime * 1000 );
        var_8 scripts\mp\gameobjects::pinobjiconontriggertouch();
    }

    if ( isdefined( level.showenemycarrier ) )
    {
        switch ( level.showenemycarrier )
        {
            case 0:
                var_8.objidpingfriendly = 0;
                var_8.objidpingenemy = 1;
                var_8.objpingdelay = 60.0;
                break;
            case 1:
                var_8.objidpingfriendly = 0;
                var_8.objidpingenemy = 1;
                var_8.objpingdelay = 0.05;
                break;
            case 2:
                var_8.objidpingfriendly = 0;
                var_8.objidpingenemy = 1;
                var_8.objpingdelay = 1.0;
                break;
            case 3:
                var_8.objidpingfriendly = 0;
                var_8.objidpingenemy = 1;
                var_8.objpingdelay = 1.5;
                break;
            case 4:
                var_8.objidpingfriendly = 0;
                var_8.objidpingenemy = 1;
                var_8.objpingdelay = 2.0;
                break;
            case 5:
                var_8.objidpingfriendly = 0;
                var_8.objidpingenemy = 1;
                var_8.objpingdelay = 3.0;
                break;
            case 6:
                var_8.objidpingfriendly = 0;
                var_8.objidpingenemy = 1;
                var_8.objpingdelay = 4.0;
                break;
        }
    }
    else
    {
        var_8.objidpingfriendly = 0;
        var_8.objidpingenemy = 1;
        var_8.objpingdelay = 3.0;
    }

    var_8.oldradius = var_4.radius;
    var_9 = var_4.origin + ( 0, 0, 32 );
    var_10 = var_4.origin + ( 0, 0, -32 );
    var_11 = scripts\engine\trace::create_contents( 1, 1, 1, 1, 0, 1, 1 );
    var_12 = [];
    var_13 = scripts\engine\trace::ray_trace( var_9, var_10, var_12, var_11 );
    var_8.baseeffectpos = var_8.visuals[0].origin;
    var_14 = anglestoup( var_8.visuals[0].angles );
    var_8.baseeffectforward = anglestoforward( var_14 );
    level.teamflagbases[var_0] = createteamflagbase( var_0, var_8 );
    return var_8;
}

createteamflagbase( var_0, var_1 )
{
    var_2 = var_1.visuals[0].origin;
    var_3 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_2 );
    var_3 setmodel( level.flagbase[var_0] );
    var_3.ownerteam = var_0;
    var_3 setasgametypeobjective();
    var_3 setteaminhuddatafromteamname( var_0 );
    var_3.baseeffectpos = var_2;
    var_4 = anglestoup( var_1.visuals[0].angles );
    var_3.baseeffectforward = anglestoforward( var_4 );
    return var_3;
}

createcapzone( var_0, var_1 )
{
    var_2 = flag_create_team_goal( var_0 );
    var_3 = getent( "_encstr_AA1F0A99EB9E01C2F2B3DBA7" + var_1, "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( !isdefined( var_3 ) )
    {
        var_3 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", var_2.origin - ( 0, 0, var_2.radius / 2 ), 0, var_2.radius, 80 );
        var_3.no_moving_platfrom_unlink = 1;
        var_3.linktoenabledflag = 1;
        var_3.baseorigin = var_3.origin;
        var_3.height = 80;
    }

    var_4 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", var_3.origin, 0, 15, var_3.height );
    var_3 = var_4;
    var_5 = [];
    var_6 = scripts\mp\gameobjects::createuseobject( var_0, var_3, var_5, ( 0, 0, 85 ) );
    var_6 scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );
    var_6 scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
    var_6 scripts\mp\gameobjects::setobjectivestatusicons( level.iconpickupdefendflag, level.icongoalflag );
    var_6 scripts\mp\gameobjects::setusetime( 0 );
    var_6 scripts\mp\gameobjects::setkeyobject( level.teamflags[scripts\mp\utility\game::getotherteam( var_0 )[0]] );
    var_6.onuse = ::onuse;
    var_7 = var_3.origin + ( 0, 0, 32 );
    var_8 = var_3.origin + ( 0, 0, -32 );
    var_9 = scripts\engine\trace::create_contents( 1, 1, 1, 1, 0, 1, 1 );
    var_10 = [];
    var_11 = scripts\engine\trace::ray_trace( var_7, var_8, var_10, var_9 );
    var_12 = vectortoangles( var_11["_encstr_930E073E8FC00DDF69"] );
    var_13 = anglestoforward( var_12 );
    var_14 = anglestoright( var_12 );
    return var_6;
}

onbeginuse( var_0 )
{
    var_1 = var_0.pers["_encstr_89EF05D46BA8FD"];

    if ( var_1 == scripts\mp\gameobjects::getownerteam() )
        self.trigger.radius = 1024;
    else
        self.trigger.radius = self.oldradius;
}

onenduse( var_0, var_1, var_2 )
{
    self.trigger.radius = self.oldradius;
}

onpickup( var_0, var_1, var_2 )
{
    self notify( "_encstr_BC990AFB70512B1281E00B42" );
    var_0 notify( "_encstr_B7920E671DE221A080A964EF2159ED8B" );
    var_3 = var_0.pers["_encstr_89EF05D46BA8FD"];

    if ( var_3 == "_encstr_BC850785638DA59537" )
        var_4 = "_encstr_BA840579D3F7F6";
    else
        var_4 = "_encstr_BC850785638DA59537";

    if ( var_3 != scripts\mp\gameobjects::getownerteam() )
    {
        if ( isdefined( level.closecapturekiller[var_0.team] ) && level.closecapturekiller[var_0.team] == var_0 )
            var_0 thread scripts\mp\awards::givemidmatchaward( "_encstr_8BAD0E6B75E198BE3E49D77F33D7FA8D" );

        level.closecapturekiller[var_0.team] = undefined;
        var_0 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_AA040C66D80B9DF53959D1EA9CB9" );
        thread returnflag( var_3 );
        var_0 thread scripts\common\utility::_id_13E0A( level._id_11B29, "_encstr_A3620BBFEBC2C8F8156BD3CB15", var_0.origin );
        scripts\mp\utility\sound::playsoundonplayers( "_encstr_A39C10BDF971A2B1EC6FDDF7A3035BFA6910", var_3 );
        scripts\mp\utility\sound::playsoundonplayers( "_encstr_A39C10BDF971A2B1EC6FDDF7A3035BFA6910", scripts\mp\utility\game::getotherteam( var_3 )[0] );
        scripts\mp\utility\dialog::leaderdialog( "_encstr_816914425BF3A0D0EB5B15AECA82477F555550A7FEAA", var_4, "_encstr_A96D0726D4272B4372" );
        scripts\mp\utility\dialog::leaderdialog( "_encstr_ABB5169D5EA798CBA6824BF0FBFFA95117C79E05BC0FA3DD", var_3, "_encstr_A96D0726D4272B4372" );
        var_0 scripts\mp\utility\stats::incpersstat( "_encstr_9DF7084E59E85727CD37", 1 );
        var_0 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9DF7084E59E85727CD37", var_0.pers["_encstr_9DF7084E59E85727CD37"] );

        if ( isplayer( var_0 ) )
            var_0 scripts\mp\utility\stats::setextrascore1( var_0.pers["_encstr_9DF7084E59E85727CD37"] );
    }
    else
    {
        if ( isdefined( level.ctf_loadouts ) && isdefined( level.ctf_loadouts[var_3] ) )
            var_0 thread applyflagcarrierclass();
        else
            var_0 attachflag();

        self.atbase = 0;
        level.closecapturekiller[var_4] = undefined;

        if ( var_0.team == "_encstr_BC850785638DA59537" )
            setomnvar( "_encstr_B401134BBCB7F0D59287CDD1976A88382C5570C1A2", var_0 getentitynumber() );
        else
            setomnvar( "_encstr_AB4C11D5D2EB6CE8CCD766D80B3B7DC20FD237", var_0 getentitynumber() );

        var_0 setclientomnvar( "_encstr_9855147B2D80BF2B08FF2E3C9B58B9F737DB832269EE", 1 );

        if ( isdefined( level.showenemycarrier ) )
        {
            if ( level.showenemycarrier == 0 )
                scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
            else
                scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
        }

        scripts\mp\gameobjects::setobjectivestatusicons( level.iconescort, level.iconkill );

        if ( level.teamflags[var_4].atbase )
            level.capzones[var_4] scripts\mp\gameobjects::setobjectivestatusicons( level.iconpickupdefendflag, level.icongoalflag );
        else
        {
            level.capzones[var_4] scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
            level.capzones[var_4] scripts\mp\gameobjects::setobjectivestatusicons( level.icondefendflag, level.icongoalflag );
        }

        level.capzones[var_3] scripts\mp\gameobjects::setobjectivestatusicons( level.icondefendflag, level.icongoalflag );

        if ( level.capturecondition == 0 )
        {

        }

        scripts\mp\utility\sound::playsoundonplayers( "_encstr_9D270D10A29FB8F66AAF312347A2C8", var_3 );
        scripts\mp\utility\dialog::leaderdialog( "_encstr_98791347ED0A80B92FC332B9AAE7E4B12351F7DB6E", var_3 );
        thread scripts\mp\hud_util::teamplayercardsplash( "_encstr_BC041337B030AC3223F50147D1338A7838389F97D0", var_0 );

        if ( !isdefined( self.previouscarrier ) || self.previouscarrier != var_0 )
            var_0 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_B7130AA619A730B00F98C69B" );

        var_0 thread scripts\common\utility::_id_13E0A( level._id_11B29, "_encstr_AF1C073F618760FB0A", var_0.origin );
        self.previouscarrier = var_0;

        if ( level.codcasterenabled )
            var_0 setgametypevip( 1 );
    }
}

returnflag( var_0 )
{
    self.atbase = 1;

    if ( var_0 == "_encstr_BC850785638DA59537" )
        setomnvar( "_encstr_B401134BBCB7F0D59287CDD1976A88382C5570C1A2", -2 );
    else
        setomnvar( "_encstr_AB4C11D5D2EB6CE8CCD766D80B3B7DC20FD237", -2 );

    scripts\mp\gameobjects::returnhome();
}

ondrop( var_0 )
{
    var_1 = scripts\mp\gameobjects::getownerteam();
    var_2 = scripts\mp\utility\game::getotherteam( var_1 )[0];
    scripts\mp\gameobjects::allowcarry( "_encstr_BC19047780DA" );
    scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
    objective_setpings( self.objidnum, 0 );

    if ( level.returntime >= 0 )
        scripts\mp\gameobjects::setobjectivestatusicons( level.iconpickupflag, level.iconreturnflag );
    else
        scripts\mp\gameobjects::setobjectivestatusicons( level.iconpickupflag, level.icongoalflag );

    if ( var_1 == "_encstr_BC850785638DA59537" )
        setomnvar( "_encstr_B401134BBCB7F0D59287CDD1976A88382C5570C1A2", -1 );
    else
        setomnvar( "_encstr_AB4C11D5D2EB6CE8CCD766D80B3B7DC20FD237", -1 );

    if ( isdefined( var_0 ) )
        var_0 setclientomnvar( "_encstr_9855147B2D80BF2B08FF2E3C9B58B9F737DB832269EE", 0 );

    var_3 = self.visuals[0] gettagorigin( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );

    if ( isdefined( var_0 ) )
    {
        if ( !scripts\mp\utility\player::isreallyalive( var_0 ) )
            var_0.carryobject.previouscarrier = undefined;

        if ( isdefined( var_0.carryflag ) )
            var_0 detachflag();

        scripts\mp\utility\sound::playsoundonplayers( "_encstr_9B6F165B83F5DD1693EBF626A6561B1D5ACE2BEBB1B7E6A3", var_2 );

        if ( level.codcasterenabled )
            var_0 setgametypevip( 0 );
    }
    else
        scripts\mp\utility\sound::playsoundonplayers( "_encstr_9B6F165B83F5DD1693EBF626A6561B1D5ACE2BEBB1B7E6A3", var_2 );

    scripts\mp\utility\dialog::leaderdialog( "_encstr_816B14E26DAFD8726E5833BCABF26B417F6FD0BB704B", var_2, "_encstr_A96D0726D4272B4372" );
    scripts\mp\utility\dialog::leaderdialog( "_encstr_A44E12A81B3A5879C28B95A5C36A3469C43250C3", var_1, "_encstr_A96D0726D4272B4372" );

    if ( level.idleresettime > 0 )
        thread returnaftertime();
}

returnaftertime()
{
    self endon( "_encstr_BC990AFB70512B1281E00B42" );
    var_0 = 0.0;

    while ( var_0 < level.idleresettime )
    {
        waitframe();

        if ( self.claimteam == "_encstr_AABA05236DC831" )
            var_0 = var_0 + level.framedurationseconds;
    }

    var_1 = scripts\mp\gameobjects::getownerteam();
    var_2 = scripts\mp\utility\game::getotherteam( var_1 )[0];
    scripts\mp\utility\sound::playsoundonplayers( "_encstr_8FED17AD1CEBDD169CBEBD26A695C63A5A9DACAF3A0B5BB2E6", var_1 );
    scripts\mp\utility\sound::playsoundonplayers( "_encstr_9B6F165B83F5DD1693EBF626A6561B1D5ACE2BEBB1B7E6A3", var_2 );
    scripts\mp\gameobjects::returnhome();
}

onreset()
{
    var_0 = scripts\mp\gameobjects::getownerteam();
    var_1 = scripts\mp\utility\game::getotherteam( var_0 )[0];
    scripts\mp\gameobjects::allowcarry( "_encstr_B9FC095F8BCCFF02D92B43" );
    scripts\mp\gameobjects::setvisibleteam( "_encstr_AABA05236DC831" );
    objective_setpings( self.objidnum, 0 );

    if ( var_0 == "_encstr_BC850785638DA59537" )
        setomnvar( "_encstr_B401134BBCB7F0D59287CDD1976A88382C5570C1A2", -2 );
    else
        setomnvar( "_encstr_AB4C11D5D2EB6CE8CCD766D80B3B7DC20FD237", -2 );

    if ( level.teamflags[var_0].atbase )
        level.capzones[var_0] scripts\mp\gameobjects::setobjectivestatusicons( level.iconpickupdefendflag, level.icongoalflag );

    if ( level.teamflags[var_1].atbase )
        level.capzones[var_0] scripts\mp\gameobjects::setobjectivestatusicons( level.iconpickupdefendflag, level.icongoalflag );
    else
        level.capzones[var_0] scripts\mp\gameobjects::setobjectivestatusicons( level.icondefendflag, level.icongoalflag );

    level.capzones[var_0] scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );
    self.previouscarrier = undefined;
}

onresetstart( var_0 )
{
    scripts\mp\gameobjects::setobjectivestatusicons( level.iconlosingflag, level.iconresettingflag );
}

onresetend( var_0, var_1, var_2 )
{
    if ( !var_2 )
        scripts\mp\gameobjects::setobjectivestatusicons( level.iconpickupflag, level.iconreturnflag );
}

onuse( var_0 )
{
    if ( !level.gameended )
    {
        var_1 = var_0.pers["_encstr_89EF05D46BA8FD"];

        if ( var_1 == "_encstr_BC850785638DA59537" )
            var_2 = "_encstr_BA840579D3F7F6";
        else
            var_2 = "_encstr_BC850785638DA59537";

        var_0 setclientomnvar( "_encstr_9855147B2D80BF2B08FF2E3C9B58B9F737DB832269EE", 0 );
        scripts\mp\utility\dialog::leaderdialog( "_encstr_9E5912EDEA3913B14B3AD3331B2CB3BEB1163847", var_1, "_encstr_A96D0726D4272B4372" );
        scripts\mp\utility\dialog::leaderdialog( "_encstr_949514E063FDB7B716C991E5ABEE6830F841B14F2884", var_2, "_encstr_A96D0726D4272B4372" );
        thread scripts\mp\hud_util::teamplayercardsplash( "_encstr_B47F146C8563C6F6D51DBECCD816EC36580E475D2756", var_0 );
        var_0 thread scripts\mp\awards::givemidmatchaward( "_encstr_9E780D5BDE4659D71BA399EBB18583" );
        var_0 notify( "_encstr_BC2B0A075628F786B1182B12", "_encstr_9CCF09866E33D9835AB738" );
        var_0 thread scripts\common\utility::_id_13E0A( level._id_11B29, "_encstr_9EEB08EFAF2B15984A67", var_0.origin );

        if ( level.codcasterenabled )
            var_0 setgametypevip( 0 );

        var_0 scripts\mp\utility\stats::incpersstat( "_encstr_B2CF0967600940A373E78A", 1 );
        var_0 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_B2CF0967600940A373E78A", var_0.pers["_encstr_B2CF0967600940A373E78A"] );

        if ( isplayer( var_0 ) )
            var_0 scripts\mp\utility\stats::setextrascore0( var_0.pers["_encstr_B2CF0967600940A373E78A"] );

        scripts\mp\utility\sound::playsoundonplayers( "_encstr_93C6105BE0F5DB894DFA6C0B838EAE279532", var_1 );
        scripts\mp\utility\sound::playsoundonplayers( "_encstr_AA781609B0BF6915970210191A6ED5E697490F7D2DA3D159", scripts\mp\utility\game::getotherteam( var_1 )[0] );

        if ( isdefined( var_0.carryflag ) )
            var_0 detachflag();

        if ( isdefined( level.ctf_loadouts ) && isdefined( level.ctf_loadouts[var_1] ) )
            var_0 thread removeflagcarrierclass();

        level.closecapturekiller[var_1] = undefined;
        level.closecapturekiller[var_2] = undefined;

        if ( level.teamflags[scripts\mp\utility\game::getotherteam( var_1 )[0]].atbase )
            level scripts\mp\gamescore::giveteamscoreforobjective( var_1, 2, 0 );
        else
            level scripts\mp\gamescore::giveteamscoreforobjective( var_1, 1, 0 );

        level.teamflags[var_1] returnflag( var_1 );
    }
}

onplayerconnect( var_0 )
{
    var_0._flageffect = [];
    var_0._flagradiuseffect = [];
    var_0 thread onplayerspawned();
}

onplayerspawned()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    for (;;)
    {
        self waittill( "_encstr_983508635BE787C548A1" );
        self setclientomnvar( "_encstr_9855147B2D80BF2B08FF2E3C9B58B9F737DB832269EE", 0 );
        scripts\mp\utility\stats::setextrascore0( 0 );

        if ( isdefined( self.pers["_encstr_B2CF0967600940A373E78A"] ) )
            scripts\mp\utility\stats::setextrascore0( self.pers["_encstr_B2CF0967600940A373E78A"] );

        scripts\mp\utility\stats::setextrascore1( 0 );

        if ( isdefined( self.pers["_encstr_9DF7084E59E85727CD37"] ) )
            scripts\mp\utility\stats::setextrascore1( self.pers["_encstr_9DF7084E59E85727CD37"] );
    }
}

applyflagcarrierclass()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( self.iscarrying ) && self.iscarrying == 1 )
    {
        self notify( "_encstr_A97817572058AB92107F371367254ADFF0E80E9E9948751ADD" );
        waitframe();
    }

    while ( self ismantling() )
        waitframe();

    while ( !self isonground() )
        waitframe();

    self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] = level.ctf_loadouts[self.team];
    scripts\mp\equipment\tac_insert::_id_13684( self.origin, self.angles );
    self.gamemode_chosenclass = self.class;
    self.pers["_encstr_9E95066E81471B5F"] = "_encstr_87AC099DB05B59ADF619AC";
    self.pers["_encstr_9F690A0DBF9F69AE0A510886"] = "_encstr_87AC099DB05B59ADF619AC";
    self.class = "_encstr_87AC099DB05B59ADF619AC";
    self.lastclass = "_encstr_87AC099DB05B59ADF619AC";
    self notify( "_encstr_A1D70BDE071B53794F208AE3F8" );
    self.gameobject_fauxspawn = 1;
    self.faux_spawn_stance = self getstance();
    thread scripts\mp\playerlogic::spawnplayer( 1 );
    thread waitattachflag();
}

waitattachflag()
{
    level endon( "_encstr_BD050AAFE7B2D59115EDF129" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
    attachflag();
}

removeflagcarrierclass()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( self.iscarrying ) && self.iscarrying == 1 )
    {
        self notify( "_encstr_A97817572058AB92107F371367254ADFF0E80E9E9948751ADD" );
        waitframe();
    }

    while ( self ismantling() )
        waitframe();

    while ( !self isonground() )
        waitframe();

    self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] = undefined;
    scripts\mp\equipment\tac_insert::_id_13684( self.origin, self.angles );
    self notify( "_encstr_A1D70BDE071B53794F208AE3F8" );
    self.faux_spawn_stance = self getstance();
    thread scripts\mp\playerlogic::spawnplayer( 1 );
}

onplayerkilled( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    var_10 = 0;
    var_11 = var_1.origin;
    var_12 = 0;

    if ( isdefined( var_0 ) )
    {
        var_11 = var_0.origin;
        var_12 = var_0 == var_1;
    }

    if ( isdefined( var_1 ) && isplayer( var_1 ) && var_1.pers["_encstr_89EF05D46BA8FD"] != self.pers["_encstr_89EF05D46BA8FD"] )
    {
        if ( isdefined( var_1.carryflag ) && var_12 )
        {
            var_1 thread scripts\mp\awards::givemidmatchaward( "_encstr_9728187AA2A4999F43BB2BD8D09F439948AC2F43383751C1F0D7" );
            var_10 = 1;
        }

        if ( isdefined( self.carryflag ) )
        {
            var_13 = distancesquared( self.origin, level.capzones[self.team].trigger.origin );

            if ( var_13 < 90000 )
                level.closecapturekiller[var_1.team] = var_1;
            else
                level.closecapturekiller[var_1.team] = undefined;

            var_1 thread scripts\mp\awards::givemidmatchaward( "_encstr_8753165B3FC23571F38B514E74D1A0F929673BEDD3BA8DC0" );
            var_1 scripts\mp\utility\stats::incpersstat( "_encstr_9CF70851FD0FB8B81BB3", 1 );
            var_1 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9CF70851FD0FB8B81BB3", var_1.pers["_encstr_9CF70851FD0FB8B81BB3"] );
            thread scripts\common\utility::_id_13E0A( level._id_11B30, var_9, "_encstr_B62F0996FAF3765317CAAF" );
            var_10 = 1;
        }

        if ( !var_10 )
        {
            var_14 = 0;
            var_15 = 0;

            foreach ( var_17 in level.teamflags )
            {
                var_18 = distsquaredcheck( var_11, self.origin, var_17.curorigin );

                if ( var_18 )
                {
                    if ( var_17.ownerteam == self.team )
                    {
                        var_14 = 1;
                        continue;
                    }

                    var_15 = 1;
                }
            }

            if ( var_14 )
            {
                var_1 thread scripts\mp\awards::givemidmatchaward( "_encstr_BA020F68F21FC3E6F347AF9E43BFEB8943" );
                thread scripts\common\utility::_id_13E0A( level._id_11B30, var_9, "_encstr_97A70AE945873020839AC811" );
            }
            else if ( var_15 )
            {
                var_1 thread scripts\mp\awards::givemidmatchaward( "_encstr_B3D80EB6ED91567DE17D91B2CC95CD23" );
                var_1 scripts\mp\utility\stats::incpersstat( "_encstr_9CF70851FD0FB8B81BB3", 1 );
                var_1 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9CF70851FD0FB8B81BB3", var_1.pers["_encstr_9CF70851FD0FB8B81BB3"] );
                thread scripts\common\utility::_id_13E0A( level._id_11B30, var_9, "_encstr_BCD10B8953E73F13911C1BDA2A" );
            }
        }
    }

    if ( isdefined( self.carryflag ) )
        detachflag();
}

distsquaredcheck( var_0, var_1, var_2 )
{
    var_3 = distancesquared( var_2, var_0 );
    var_4 = distancesquared( var_2, var_1 );

    if ( var_3 < 90000 || var_4 < 90000 )
        return 1;
    else
        return 0;
}

attachflag()
{
    var_0 = scripts\mp\utility\game::getotherteam( self.pers["_encstr_89EF05D46BA8FD"] )[0];
    self attach( level.carryflag[var_0], "_encstr_AB90118B50B13F5381D8AB27B52FBAC9D9981E", 1 );
    self.carryflag = level.carryflag[var_0];
}

detachflag()
{
    self detach( self.carryflag, "_encstr_AB90118B50B13F5381D8AB27B52FBAC9D9981E" );
    self.carryflag = undefined;
}

setspecialloadouts()
{
    if ( isusingmatchrulesdata() && getmatchrulesdata( "_encstr_81300F3F8910414B21F907B33B56D3BD50", "_encstr_BA840579D3F7F6", 5, "_encstr_9E95066E81471B5F", "_encstr_A28F0613BEB3DAD7" ) )
        level.ctf_loadouts["_encstr_BA840579D3F7F6"] = scripts\mp\utility\game::getmatchrulesspecialclass( "_encstr_BA840579D3F7F6", 5 );

    if ( isusingmatchrulesdata() && getmatchrulesdata( "_encstr_81300F3F8910414B21F907B33B56D3BD50", "_encstr_BC850785638DA59537", 5, "_encstr_9E95066E81471B5F", "_encstr_A28F0613BEB3DAD7" ) )
        level.ctf_loadouts["_encstr_BC850785638DA59537"] = scripts\mp\utility\game::getmatchrulesspecialclass( "_encstr_BC850785638DA59537", 5 );
}

setupwaypointicons()
{
    level.waypointcolors["_encstr_B338144F98BAE86A7390B3618E114294A201A7BF48B0"] = "_encstr_80BF06CA78A2226B";
    level.waypointbgtype["_encstr_B338144F98BAE86A7390B3618E114294A201A7BF48B0"] = 1;
    level.waypointstring["_encstr_B338144F98BAE86A7390B3618E114294A201A7BF48B0"] = "_encstr_A67B1DA982FAA4398E829A54AFD33962CAF23D2494F5B4A4C4897D1A14A0A6";
    level.waypointshader["_encstr_B338144F98BAE86A7390B3618E114294A201A7BF48B0"] = "_encstr_A8A213D2C6DBE6FADDC29783BD4B731DFAB54B1BC6";
    level.waypointpulses["_encstr_B338144F98BAE86A7390B3618E114294A201A7BF48B0"] = 0;
    level.waypointcolors["_encstr_A62416B7DFCB671801F5FB961EFCD09D13BF31337FB2ADA8"] = "_encstr_B9FC095F8BCCFF02D92B43";
    level.waypointbgtype["_encstr_A62416B7DFCB671801F5FB961EFCD09D13BF31337FB2ADA8"] = 0;
    level.waypointstring["_encstr_A62416B7DFCB671801F5FB961EFCD09D13BF31337FB2ADA8"] = "_encstr_81E61F6A28AF949C3AA0A651F5D39C9895F23D4829D7A025D0965541D7860A149A";
    level.waypointshader["_encstr_A62416B7DFCB671801F5FB961EFCD09D13BF31337FB2ADA8"] = "_encstr_A3481396B1B79BAF77162FE0EDD2373AEB66D858D9";
    level.waypointpulses["_encstr_A62416B7DFCB671801F5FB961EFCD09D13BF31337FB2ADA8"] = 1;
    level.waypointcolors["_encstr_935C14EE2CE5C1BD2DB9A3FA4CC65AA3E9AF9DDB161B"] = "_encstr_80BF06CA78A2226B";
    level.waypointbgtype["_encstr_935C14EE2CE5C1BD2DB9A3FA4CC65AA3E9AF9DDB161B"] = 0;
    level.waypointstring["_encstr_935C14EE2CE5C1BD2DB9A3FA4CC65AA3E9AF9DDB161B"] = "_encstr_AF671FA905BEA4E48E289AA8EB7A728995CBF48429D72AA04AD12A45AFD00AA035";
    level.waypointshader["_encstr_935C14EE2CE5C1BD2DB9A3FA4CC65AA3E9AF9DDB161B"] = "_encstr_A3361D5A36BDE6AFDD58CB83BD96378EF56CF2262BC9EB13DED64CB9D2E8CA";
    level.waypointpulses["_encstr_935C14EE2CE5C1BD2DB9A3FA4CC65AA3E9AF9DDB161B"] = 0;
    level.waypointcolors["_encstr_BDAF16E3566990A08A9BC18FB382FBF812A129FB7ED758E5"] = "_encstr_B9FC095F8BCCFF02D92B43";
    level.waypointbgtype["_encstr_BDAF16E3566990A08A9BC18FB382FBF812A129FB7ED758E5"] = 2;
    level.waypointstring["_encstr_BDAF16E3566990A08A9BC18FB382FBF812A129FB7ED758E5"] = "_encstr_9DD31F257F893988C4E36F47F798D064D1E82D7E9431FD912EE72B1B8FB6E8B059";
    level.waypointshader["_encstr_BDAF16E3566990A08A9BC18FB382FBF812A129FB7ED758E5"] = "_encstr_A3481396B1B79BAF77162FE0EDD2373AEB66D858D9";
    level.waypointpulses["_encstr_BDAF16E3566990A08A9BC18FB382FBF812A129FB7ED758E5"] = 0;
    level.waypointcolors["_encstr_A3E916F388B7E0F73B92B0718BBDE0753330C9BBEBC73DCB"] = "_encstr_B9FC095F8BCCFF02D92B43";
    level.waypointbgtype["_encstr_A3E916F388B7E0F73B92B0718BBDE0753330C9BBEBC73DCB"] = 0;
    level.waypointstring["_encstr_A3E916F388B7E0F73B92B0718BBDE0753330C9BBEBC73DCB"] = "_encstr_B9B71FF8278017A501C30515E719FD4B2B7050908C78FBAF21A30E1CCF91F68376";
    level.waypointshader["_encstr_A3E916F388B7E0F73B92B0718BBDE0753330C9BBEBC73DCB"] = "_encstr_A3361D5A36BDE6AFDD58CB83BD96378EF56CF2262BC9EB13DED64CB9D2E8CA";
    level.waypointpulses["_encstr_A3E916F388B7E0F73B92B0718BBDE0753330C9BBEBC73DCB"] = 0;
    level.waypointcolors["_encstr_BEAE152BD938801A533D0BAF0D8922DC4866E23733604C"] = "_encstr_B9FC095F8BCCFF02D92B43";
    level.waypointbgtype["_encstr_BEAE152BD938801A533D0BAF0D8922DC4866E23733604C"] = 0;
    level.waypointstring["_encstr_BEAE152BD938801A533D0BAF0D8922DC4866E23733604C"] = "_encstr_9BED1EEB20B921407F48FCE5B10708414027676D9211213DC720D7AE1817DF41";
    level.waypointshader["_encstr_BEAE152BD938801A533D0BAF0D8922DC4866E23733604C"] = "_encstr_A3481396B1B79BAF77162FE0EDD2373AEB66D858D9";
    level.waypointpulses["_encstr_BEAE152BD938801A533D0BAF0D8922DC4866E23733604C"] = 0;
    level.waypointcolors["_encstr_A18819C0E7E1E37DD71DE3DFB303A373BB4E0B477705B34113107F"] = "_encstr_80BF06CA78A2226B";
    level.waypointbgtype["_encstr_A18819C0E7E1E37DD71DE3DFB303A373BB4E0B477705B34113107F"] = 0;
    level.waypointstring["_encstr_A18819C0E7E1E37DD71DE3DFB303A373BB4E0B477705B34113107F"] = "_encstr_8F8C224921F1BBE42F7999E50F67ACE9287EE1B91819455D47651D6521BB750706E091A9";
    level.waypointshader["_encstr_A18819C0E7E1E37DD71DE3DFB303A373BB4E0B477705B34113107F"] = "_encstr_A3481396B1B79BAF77162FE0EDD2373AEB66D858D9";
    level.waypointpulses["_encstr_A18819C0E7E1E37DD71DE3DFB303A373BB4E0B477705B34113107F"] = 0;
    level.waypointcolors["_encstr_ADB91D235F2B3F78F0B50D57A00858FBDAD8B743BEA88360F7A04FDA035A0F"] = "_encstr_B9FC095F8BCCFF02D92B43";
    level.waypointbgtype["_encstr_ADB91D235F2B3F78F0B50D57A00858FBDAD8B743BEA88360F7A04FDA035A0F"] = 0;
    level.waypointstring["_encstr_ADB91D235F2B3F78F0B50D57A00858FBDAD8B743BEA88360F7A04FDA035A0F"] = "_encstr_81E61F6A28AF949C3AA0A651F5D39C9895F23D4829D7A025D0965541D7860A149A";
    level.waypointshader["_encstr_ADB91D235F2B3F78F0B50D57A00858FBDAD8B743BEA88360F7A04FDA035A0F"] = "_encstr_A3481396B1B79BAF77162FE0EDD2373AEB66D858D9";
    level.waypointpulses["_encstr_ADB91D235F2B3F78F0B50D57A00858FBDAD8B743BEA88360F7A04FDA035A0F"] = 1;
    level.waypointcolors["_encstr_BE271DBFD7C36F2009FDE39EE6E4D8A50BC7290B674AB5A06757C9B1CFDEE8"] = "_encstr_B9FC095F8BCCFF02D92B43";
    level.waypointbgtype["_encstr_BE271DBFD7C36F2009FDE39EE6E4D8A50BC7290B674AB5A06757C9B1CFDEE8"] = 0;
    level.waypointstring["_encstr_BE271DBFD7C36F2009FDE39EE6E4D8A50BC7290B674AB5A06757C9B1CFDEE8"] = "_encstr_81C926D90BF789316580FFBD6F4F2979B8B8F45172D12FE9F668DD4971B9317D5499540F35DD0346";
    level.waypointshader["_encstr_BE271DBFD7C36F2009FDE39EE6E4D8A50BC7290B674AB5A06757C9B1CFDEE8"] = "_encstr_A3481396B1B79BAF77162FE0EDD2373AEB66D858D9";
    level.waypointpulses["_encstr_BE271DBFD7C36F2009FDE39EE6E4D8A50BC7290B674AB5A06757C9B1CFDEE8"] = 0;
}
