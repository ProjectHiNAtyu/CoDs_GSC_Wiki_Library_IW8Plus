// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    if ( getdvar( "_encstr_9E700851BEE33DF1B547" ) == "_encstr_8A510E519897A1332E4A3898E243F5B9" )
        return;

    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    var_0[0] = scripts\mp\utility\game::getgametype();
    var_0[1] = "_encstr_8807031CC1";
    scripts\mp\gameobjects::main( var_0 );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( scripts\mp\utility\game::getgametype(), 0, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 7 );
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 2500 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
        level.mugger_bank_limit = getdvarint( "_encstr_874416ABF20B10D0EBD7676BEA5990C7D3EAA6B0BAAFB350", 10 );
    }

    setteammode( "_encstr_B91804FE5590" );
    level.onprecachegametype = ::onprecachegametype;
    level.onstartgametype = ::onstartgametype;
    level.onplayerconnect = ::onplayerconnect;
    level.modeonspawnplayer = ::onspawnplayer;
    level.getspawnpoint = ::getspawnpoint;
    level.onnormaldeath = ::onnormaldeath;
    level.onplayerscore = ::onplayerscore;
    level.ontimelimit = ::ontimelimit;
    level.onsuicidedeath = ::onsuicidedeath;
    level.onxpevent = ::onxpevent;
    level.assists_disabled = 1;
    level.mugger_fx["_encstr_AAE007D90BB9A5E61A"] = loadfx( "_encstr_B90C1696B60E1636A36E5EDC5BC2C61B7DB9DCBDBB0D4B47" );
    level.mugger_fx["_encstr_BE72069FCF8ACAA8"] = loadfx( "_encstr_95F42BB399879796EE9B5EAFE456B8AEB26E1DE65E6B0E5E9D331E7D235698BA3BAFBBC24EB92DDC3B8B3B66E1" );
    level.mugger_targetfxid = loadfx( "_encstr_80C415708AC2E7C0FF59980C24D7B1AD2EB3B859939F11" );
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_810817670FA328E0E54F710932E750788B5331EFC7BA054868", 0 );
    scripts\mp\utility\game::registerroundswitchdvar( "_encstr_9E73077037F85F2DBA", 0, 0, 9 );
    setdynamicdvar( "_encstr_B84B161AA9509F6A0D7F37377D20A317C09057252D7061B3", 1 );
    scripts\mp\utility\game::registerroundlimitdvar( "_encstr_9E73077037F85F2DBA", 1 );
    setdynamicdvar( "_encstr_82B914D72AE217605B8A27414A61C8E2B53497F89138", 1 );
    scripts\mp\utility\game::registerwinlimitdvar( "_encstr_9E73077037F85F2DBA", 1 );
    setdynamicdvar( "_encstr_A3FE14C39A6308C8C3FF5F43F2A128EFE322BB08C297", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_9E73077037F85F2DBA", 0 );
    setdynamicdvar( "_encstr_B15713B812BA9780E75F8CF522276B95A55AE088EA", 0 );
    level.mugger_bank_limit = getmatchrulesdata( "_encstr_813E0BEB45F71095EB58398312", "_encstr_8BF30A2B87ADACE15B9F1365" );
    setdynamicdvar( "_encstr_874416ABF20B10D0EBD7676BEA5990C7D3EAA6B0BAAFB350", level.mugger_bank_limit );
    level.mugger_jackpot_limit = getmatchrulesdata( "_encstr_813E0BEB45F71095EB58398312", "_encstr_8F780D0A811E1FAAC02984B903A8F3" );
    setdynamicdvar( "_encstr_BACC19F8EF12B6830397F48DAAD9F5396B5768A01BE72843AA3C75", level.mugger_jackpot_limit );
    level.mugger_throwing_knife_mug_frac = getmatchrulesdata( "_encstr_813E0BEB45F71095EB58398312", "_encstr_A9890F7B799E52D7C158D41FD1411A4AFE" );
    setdynamicdvar( "_encstr_AB5A23032B2B9F783DF2019AB84F53891BC767E856B74067E3B3EE0A66810B6901E38B63FF", level.mugger_throwing_knife_mug_frac );
}

onprecachegametype()
{
    precachemodel( "_encstr_BCFE107CC72003A79443C1AAABD427FF084B" );
    precachemodel( "_encstr_B828183656E81A1636EB6EB6DBDA2BBECE39CA7358C856D7775B" );
    precachempanim( "_encstr_815B0F9B83B17530374B7189B90B833B7A" );
    precacheshader( "_encstr_9515129B31613BD0F323786FE1B0F705FE4FDFBF" );
    precacheshader( "_encstr_B34515B4569BE9E86943501173B72129A27F38BF2CA29B" );
    precacheshader( "_encstr_A91D11EE852F38BD96B91D7D53B0D8DA38DE1D" );
    precacheshader( "_encstr_A1F10DE453D8A7B35F276F673BF0FB" );
    precachestring( &"_encstr_8FB514CD01252C671597F7FCA5A6013B97232F430791" );
}

onstartgametype()
{
    setclientnamemode( "_encstr_95900C2EDBD01F99D6B1DFEB878D" );

    foreach ( var_1 in level.teamnamelist )
    {
        scripts\mp\utility\game::setobjectivetext( var_1, &"_encstr_9F0C12F48449151A8A2965549ABC53551DD151A4" );

        if ( level.splitscreen )
            scripts\mp\utility\game::setobjectivescoretext( var_1, &"_encstr_9F0C12F48449151A8A2965549ABC53551DD151A4" );
        else
            scripts\mp\utility\game::setobjectivescoretext( var_1, &"_encstr_8F9D18FC2DFA9D8115998BE7E9AF657D4F88A111A71167CF2E0D" );

        scripts\mp\utility\game::setobjectivehinttext( var_1, &"_encstr_9DD91718F97DB7EF5773868D16509FCB1FB92041A9D17C238F" );
    }

    scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_828B0BBCD23709257593B1A00A", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_89550C9DFF778ABD3E40236F4830" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_89550C9DFF778ABD3E40236F4830" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_930E073E8FC00DDF69", "_encstr_89550C9DFF778ABD3E40236F4830" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_A30C093385361B4CB06C6D", "_encstr_98891618B3CF9DC071D37953FFE589DECF7AD0E05A8FCE28" );
    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
    level.dogtags = [];
    level.mugger_timelimit = getdvarint( "_encstr_ABE0156E1B93FAD6573BD959277D47A5B6598D2DD64BD1", 7 );
    setdynamicdvar( "_encstr_ABE0156E1B93FAD6573BD959277D47A5B659892DD64BD1", level.mugger_timelimit );
    scripts\mp\utility\game::registertimelimitdvar( "_encstr_9E73077037F85F2DBA", level.mugger_timelimit );
    level.mugger_scorelimit = getdvarint( "_encstr_8FBA16B39B40A7AD2F81713BF257B872E5186181D96F077B", 2500 );

    if ( level.mugger_scorelimit == 0 )
        level.mugger_scorelimit = 2500;

    setdynamicdvar( "_encstr_8FBA16B39B40A7AD2F81713BF257B872E51861C1D96F077B", level.mugger_scorelimit );
    scripts\mp\utility\game::registerscorelimitdvar( "_encstr_9E73077037F85F2DBA", level.mugger_scorelimit );
    level.mugger_bank_limit = getdvarint( "_encstr_874416ABF20B10D0EBD7676BEA5990C7D3EAA6B0BAAFB350", 10 );
    level.mugger_muggernaut_window = getdvarint( "_encstr_9F351D6EBB13363BBB9AC8D023D9C38BAF27FD661E073B4169A3A0705AEDBF", 3000 );
    level.mugger_muggernaut_muggings_needed = getdvarint( "_encstr_88A7267EAB03260B8BAAD8C0D329D3BBBF578D760EF72B71791270C87A7C9DB1B7C780659D8B91A9", 3 );
    level.mugger_min_spawn_dist_sq = squared( getdvarfloat( "_encstr_B128165B573BCEAC27FAD64BCDD79BE0587737AFC8A537E8", 350 ) );
    level.mugger_jackpot_limit = getdvarint( "_encstr_BACC19F8EF12B6830397F48DAAD9F5396B5768A01BE72843AA3C75", 0 );
    level.mugger_jackpot_wait_sec = getdvarfloat( "_encstr_A61D1C573F9318D0B51F217942B7A04F3AB7C9E79BA9D488F1B32EB3AF73", 10 );
    level.mugger_throwing_knife_mug_frac = getdvarfloat( "_encstr_AB5A23032B2B9F783DF2019AB84F53891BC767E856B74067E3B3EE0A66810B6901E38B63FF", 1.0 );
    level mugger_init_tags();
    level thread mugger_monitor_tank_pickups();
    level thread mugger_monitor_remote_uav_pickups();
    level.jackpot_zone = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
    level.jackpot_zone.origin = ( 0, 0, 0 );
    level.jackpot_zone.angles = ( 90, 0, 0 );
    level.jackpot_zone setmodel( "_encstr_B828183656E81A1636EB6EB6DBDA2BBECE39CA7358C856D7775B" );
    level.jackpot_zone hide();
    level.jackpot_zone.mugger_fx_playing = 0;
    level thread mugger_jackpot_watch();
}

onplayerconnect( var_0 )
{
    var_0.tags_carried = 0;
    var_0.total_tags_banked = 0;
    var_0.assists = var_0.total_tags_banked;
    var_0.pers["_encstr_A9F30862E89734A7EBE6"] = var_0.total_tags_banked;
    var_0.game_extrainfo = var_0.tags_carried;
    var_0.muggings = [];

    if ( isplayer( var_0 ) && !isbot( var_0 ) )
    {
        var_0.dogtagsicon = var_0 scripts\mp\hud_util::createicon( "_encstr_A1F10DE453D8A7B35F276F673BF0FB", 48, 48 );
        var_0.dogtagsicon scripts\mp\hud_util::setpoint( "_encstr_BE640945E91402898A2351", "_encstr_BE640945E91402898A2351", 200, 0 );
        var_0.dogtagsicon.alpha = 1;
        var_0.dogtagsicon.hidewheninmenu = 1;
        var_0.dogtagsicon.archived = 1;
        level thread hidehudelementongameend( var_0.dogtagsicon );
        var_0.dogtagstext = var_0 scripts\mp\hud_util::createfontstring( "_encstr_B32509E95FAC85CFF82DC9", 1.0 );
        var_0.dogtagstext scripts\mp\hud_util::setparent( var_0.dogtagsicon );
        var_0.dogtagstext scripts\mp\hud_util::setpoint( "_encstr_B1C4073FFD25110DE3", "_encstr_B1C4073FFD25110DE3", -24 );
        var_0.dogtagstext setvalue( var_0.tags_carried );
        var_0.dogtagstext.alpha = 1;
        var_0.dogtagstext.color = ( 1, 1, 0.5 );
        var_0.dogtagstext.glowalpha = 1;
        var_0.dogtagstext.sort = 1;
        var_0.dogtagstext.hidewheninmenu = 1;
        var_0.dogtagstext.archived = 1;
        var_0.dogtagstext scripts\mp\hud::fontpulseinit( 3.0 );
        level thread hidehudelementongameend( var_0.dogtagstext );
    }
}

onspawnplayer()
{
    self.muggings = [];

    if ( !isagent( self ) )
        thread waitreplaysmokefxfornewplayer();
}

hidehudelementongameend( var_0 )
{
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( var_0 ) )
        var_0.alpha = 0;
}

getspawnpoint()
{
    var_0 = scripts\mp\spawnlogic::getspawnpoint( self, "_encstr_AABA05236DC831", "_encstr_930E073E8FC00DDF69", "_encstr_A30C093385361B4CB06C6D" );
    return var_0;
}

onxpevent( var_0 )
{

}

onnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::onnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 );
    level thread spawndogtags( var_0, var_1 );
}

mugger_init_tags()
{
    level.mugger_max_extra_tags = getdvarint( "_encstr_B8E61AE63627FA6B579D9D56397D6B853CD7591EA39CC2D71D85ECDC", 50 );
    level.mugger_extra_tags = [];
}

spawndogtags( var_0, var_1 )
{
    if ( isagent( var_1 ) )
        var_1 = var_1.owner;

    var_2 = 0;
    var_3 = 0;

    if ( isdefined( var_1 ) )
    {
        if ( var_0 == var_1 )
        {
            if ( var_0.tags_carried > 0 )
            {
                var_2 = var_0.tags_carried;
                var_0.tags_carried = 0;
                var_0.game_extrainfo = 0;

                if ( isplayer( var_0 ) && !isbot( var_0 ) )
                {
                    var_0.dogtagstext setvalue( var_0.tags_carried );
                    var_0.dogtagstext thread scripts\mp\hud::fontpulse( var_0 );
                    var_0 thread scripts\mp\hud_message::showsplash( "_encstr_8AEB0FD7C8890F3A95D8A2DB3B5F32D411", var_2 );
                }
            }
        }
        else if ( isdefined( var_0.attackerdata ) && var_0.attackerdata.size > 0 )
        {
            if ( isplayer( var_1 ) && isdefined( var_0.attackerdata ) && isdefined( var_1.guid ) && isdefined( var_0.attackerdata[var_1.guid] ) )
            {
                var_4 = var_0.attackerdata[var_1.guid];

                if ( isdefined( var_4 ) && isdefined( var_4.attackerent ) && var_4.attackerent == var_1 )
                {
                    if ( isdefined( var_4.smeansofdeath ) && ( var_4.smeansofdeath == "_encstr_8AED0A5719ED37B8FB512FD7" || var_4.weapon == "_encstr_89F511713BBB2818C13559D05DB9E85501B7F1" && level.mugger_throwing_knife_mug_frac > 0.0 ) )
                    {
                        var_3 = 1;

                        if ( var_0.tags_carried > 0 )
                        {
                            var_2 = var_0.tags_carried;

                            if ( var_4.weapon == "_encstr_89F511713BBB2818C13559D05DB9E85501B7F1" && level.mugger_throwing_knife_mug_frac < 1.0 )
                                var_2 = int( ceil( var_0.tags_carried * level.mugger_throwing_knife_mug_frac ) );

                            var_0.tags_carried = var_0.tags_carried - var_2;
                            var_0.game_extrainfo = var_0.tags_carried;

                            if ( isplayer( var_0 ) && !isbot( var_0 ) )
                            {
                                var_0.dogtagstext setvalue( var_0.tags_carried );
                                var_0.dogtagstext thread scripts\mp\hud::fontpulse( var_0 );
                                var_0 thread scripts\mp\hud_message::showsplash( "_encstr_B4240F6FF640680F6B3D3EF8FB4F60E01C", var_2 );
                                var_0 playlocalsound( "_encstr_B3B112799DD16F3DD3875F7F8B0795FD17273D65" );
                            }

                            playsoundatpos( var_0.origin, "_encstr_896A0F1DC301FAA77B5F1993DFDFBCDE10" );
                            var_1 thread scripts\mp\hud_message::showsplash( "_encstr_82240F6CC236B17BBAE8D75BBAB39D594E", var_2 );

                            if ( var_4.weapon == "_encstr_89F511713BBB2818C13559D05DB9E85501B7F1" )
                                var_1 playlocalsound( "_encstr_BD81129513C027973EE683EA8B808F1B68AF15E4" );
                        }

                        var_1.muggings[var_1.muggings.size] = gettime();
                        var_1 thread mugger_check_muggernaut();
                    }
                }
            }
        }
    }

    if ( isagent( var_0 ) )
    {
        var_5 = var_0.origin + ( 0, 0, 14 );
        playsoundatpos( var_5, "_encstr_8C87195DD1C9EC9F09C87AA29054D7E2E027DCD9074039932EC043" );
        level notify( "_encstr_A26A197843CFD7B1EB771A8723E75BBF7389C0E89A221B486F7E1D" );
        var_6 = mugger_tag_temp_spawn( var_0.origin, 40, 160 );
        var_6.victim = var_0.owner;

        if ( isdefined( var_1 ) && var_0 != var_1 )
            var_6.attacker = var_1;
        else
            var_6.attacker = undefined;

        return;
    }
    else if ( isdefined( level.dogtags[var_0.guid] ) )
    {
        playfx( level.mugger_fx["_encstr_AAE007D90BB9A5E61A"], level.dogtags[var_0.guid].curorigin );
        level.dogtags[var_0.guid] notify( "_encstr_80F2062328E7A72B" );
    }
    else
    {
        var_7[0] = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
        var_7[0] setmodel( "_encstr_BCFE107CC72003A79443C1AAABD427FF084B" );
        var_8 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", ( 0, 0, 0 ), 0, 32, 32 );
        var_8.targetname = "_encstr_A6980F1D9CB4D976B227AF237BD9D12C3B";
        var_8 hide();
        level.dogtags[var_0.guid] = scripts\mp\gameobjects::createuseobject( "_encstr_BC19047780DA", var_8, var_7, ( 0, 0, 16 ) );
        level.dogtags[var_0.guid] scripts\mp\gameobjects::setusetime( 0 );
        level.dogtags[var_0.guid].onuse = ::onuse;
        var_8.dogtag = level.dogtags[var_0.guid];
        level.dogtags[var_0.guid].victim = var_0;
        level.dogtags[var_0.guid].objid = scripts\mp\objidpoolmanager::requestobjectiveid( 99 );

        if ( level.dogtags[var_0.guid].objid != -1 )
        {
            scripts\mp\objidpoolmanager::objective_add_objective( level.dogtags[var_0.guid].objid, "_encstr_8CBE0A41F59874FF8371821A", ( 0, 0, 0 ) );
            scripts\mp\objidpoolmanager::update_objective_icon( level.dogtags[var_0.guid].objid, "_encstr_9515129B31613BD0F323786FE1B0F705FE4FDFBF" );
        }

        level.dogtags[var_0.guid].visuals[0] scriptmodelplayanim( "_encstr_815B0F9B83B17530374B7189B90B833B7A" );
        level thread clearonvictimdisconnect( var_0 );
    }

    var_5 = var_0.origin + ( 0, 0, 14 );
    level.dogtags[var_0.guid].curorigin = var_5;
    level.dogtags[var_0.guid].trigger.origin = var_5;
    level.dogtags[var_0.guid].visuals[0].origin = var_5;
    level.dogtags[var_0.guid] scripts\mp\gameobjects::initializetagpathvariables();
    level.dogtags[var_0.guid] scripts\mp\gameobjects::allowuse( "_encstr_BC19047780DA" );
    level.dogtags[var_0.guid].visuals[0] show();

    if ( isdefined( var_1 ) && var_0 != var_1 )
        level.dogtags[var_0.guid].attacker = var_1;
    else
        level.dogtags[var_0.guid].attacker = undefined;

    level.dogtags[var_0.guid] thread timeout();

    if ( var_2 < 5 )
    {
        scripts\mp\objidpoolmanager::update_objective_position( level.dogtags[var_0.guid].objid, var_5 );
        scripts\mp\objidpoolmanager::update_objective_state( level.dogtags[var_0.guid].objid, "_encstr_B30B07E216CBFFC4C2" );
    }
    else
        mugger_tag_pile_notify( var_5, "_encstr_8C1410673B7CBAAD5056EDF74990F4A3C089", var_2, var_0, var_1 );

    playsoundatpos( var_5, "_encstr_8C87195DD1C9EC9F09C87AA29054D7E2E027DCD9074039932EC043" );
    level.dogtags[var_0.guid].temp_tag = 0;

    if ( var_2 == 0 )
        level notify( "_encstr_A26A197843CFD7B1EB771A8723E75BBF7389C0E89A221B486F7E1D" );

    for ( var_9 = 0; var_9 < var_2; var_9++ )
    {
        var_6 = mugger_tag_temp_spawn( var_0.origin, 40, 160 );
        var_6.victim = var_0;

        if ( isdefined( var_1 ) && var_0 != var_1 )
        {
            var_6.attacker = var_1;
            continue;
        }

        var_6.attacker = undefined;
    }
}

mugger_tag_pickup_wait()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_80F2062328E7A72B" );
    self endon( "_encstr_B88E073B8F4336B904" );
    self endon( "_encstr_AAE208912BB195E85932" );

    for (;;)
    {
        self.trigger waittill( "_encstr_8B5C081B58E0B7A213E6", var_0 );

        if ( !scripts\mp\utility\player::isreallyalive( var_0 ) )
            continue;

        if ( var_0 scripts\mp\utility\player::isusingremote() || isdefined( var_0.spawningafterremotedeath ) )
            continue;

        if ( isdefined( var_0.classname ) && var_0.classname == "_encstr_AB440F9BD8932D071DAFB3CA435A3663B2" )
            continue;

        thread onuse( var_0 );
        return;
    }
}

mugger_add_extra_tag( var_0 )
{
    var_1[0] = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
    var_1[0] setmodel( "_encstr_BCFE107CC72003A79443C1AAABD427FF084B" );
    var_2 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", ( 0, 0, 0 ), 0, 32, 32 );
    var_2.targetname = "_encstr_A6980F1D9CB4D976B227AF237BD9D12C3B";
    var_2 hide();
    level.mugger_extra_tags[var_0] = spawnstruct();
    var_3 = level.mugger_extra_tags[var_0];
    var_3.type = "_encstr_A2C00AABCD59A74C35566C1D";
    var_3.curorigin = var_2.origin;
    var_3.entnum = var_2 getentitynumber();
    var_3.trigger = var_2;
    var_3.triggertype = "_encstr_82650A035028B05A0B63C3B8";
    var_3 scripts\mp\gameobjects::allowuse( "_encstr_BC19047780DA" );
    var_1[0].baseorigin = var_1[0].origin;
    var_3.visuals = var_1;
    var_3.offset3d = ( 0, 0, 16 );
    var_3.temp_tag = 1;
    var_3.last_used_time = 0;
    var_3.visuals[0] scriptmodelplayanim( "_encstr_815B0F9B83B17530374B7189B90B833B7A" );
    var_3 thread mugger_tag_pickup_wait();
    return var_3;
}

mugger_first_unused_or_oldest_extra_tag()
{
    var_0 = undefined;
    var_1 = -1;

    foreach ( var_3 in level.mugger_extra_tags )
    {
        if ( var_3.interactteam == "_encstr_AABA05236DC831" )
        {
            var_3.last_used_time = gettime();
            var_3.visuals[0] show();
            return var_3;
        }

        if ( !isdefined( var_0 ) || var_3.last_used_time < var_1 )
        {
            var_1 = var_3.last_used_time;
            var_0 = var_3;
        }
    }

    if ( level.mugger_extra_tags.size < level.mugger_max_extra_tags )
    {
        var_5 = mugger_add_extra_tag( level.mugger_extra_tags.size );

        if ( isdefined( var_5 ) )
        {
            var_5.last_used_time = gettime();
            return var_5;
        }
    }

    var_0.last_used_time = gettime();
    var_0 notify( "_encstr_B88E073B8F4336B904" );
    playfx( level.mugger_fx["_encstr_AAE007D90BB9A5E61A"], var_0.curorigin );
    return var_0;
}

mugger_tag_temp_spawn( var_0, var_1, var_2 )
{
    var_3 = mugger_first_unused_or_oldest_extra_tag();
    var_4 = var_0 + ( 0, 0, 14 );
    var_5 = ( 0, randomfloat( 360 ), 0 );
    var_6 = anglestoforward( var_5 );
    var_7 = randomfloatrange( 40, 160 );
    var_8 = var_4 + var_7 * var_6;
    var_8 = var_8 + ( 0, 0, 40 );
    var_9 = playerphysicstrace( var_4, var_8 );
    var_4 = var_9;
    var_8 = var_4 + ( 0, 0, -100 );
    var_9 = playerphysicstrace( var_4, var_8 );

    if ( var_9[2] != var_8[2] )
        var_9 = var_9 + ( 0, 0, 14 );

    var_3.curorigin = var_9;
    var_3.trigger.origin = var_9;
    var_3.visuals[0].origin = var_9;
    var_3 scripts\mp\gameobjects::initializetagpathvariables();
    var_3 scripts\mp\gameobjects::allowuse( "_encstr_BC19047780DA" );
    var_3 thread mugger_tag_pickup_wait();
    var_3 thread timeout();
    return var_3;
}

mugger_tag_pile_notify( var_0, var_1, var_2, var_3, var_4 )
{
    level notify( "_encstr_934E10A16D87F1EBBAD990303299B948C3E5", var_0 );
    var_5 = scripts\mp\objidpoolmanager::requestobjectiveid( 99 );

    if ( var_5 != -1 )
    {
        scripts\mp\objidpoolmanager::objective_add_objective( var_5, "_encstr_B30B07E216CBFFC4C2", var_0 );
        scripts\mp\objidpoolmanager::update_objective_icon( var_5, "_encstr_B34515B4569BE9E86943501173B72129A27F38BF2CA29B" );
    }

    level scripts\engine\utility::delaythread( 5, ::mugger_pile_icon_remove, var_5 );

    if ( var_2 >= 10 )
    {
        level.mugger_last_mega_drop = gettime();
        level.mugger_jackpot_num_tags = 0;

        foreach ( var_7 in level.players )
        {
            var_7 playsoundtoplayer( "_encstr_A20D0EFDB7661BDF4D60828A9987D5D7", var_7 );

            if ( isdefined( var_3 ) && var_7 == var_3 )
                continue;

            if ( isdefined( var_4 ) && var_7 == var_4 )
                continue;

            var_7 thread scripts\mp\hud_message::showsplash( var_1, var_2 );
        }

        var_9 = newhudelem();
        var_9 setshader( "_encstr_B34515B4569BE9E86943501173B72129A27F38BF2CA29B", 10, 10 );
        var_9 setwaypoint( 0, 1, 0, 0 );
        var_9.x = var_0[0];
        var_9.y = var_0[1];
        var_9.z = var_0[2] + 32;
        var_9.alpha = 1;
        var_9 fadeovertime( 5 );
        var_9.alpha = 0;
        var_9 scripts\engine\utility::delaythread( 5, ::hudelemdestroy );
    }
}

hudelemdestroy()
{
    if ( isdefined( self ) )
        self destroy();
}

mugger_monitor_tank_pickups()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        var_0 = getentarray( "_encstr_AFAC0C7D7F756724B550FBB312D8", "_encstr_B8CE0BE43FC317DF690862BA48" );
        var_1 = getentarray( "_encstr_A6980F1D9CB4D976B227AF237BD9D12C3B", "_encstr_B8CE0BE43FC317DF690862BA48" );

        foreach ( var_3 in level.players )
        {
            if ( isdefined( var_3.using_remote_tank ) && var_3.using_remote_tank == 1 )
            {
                foreach ( var_5 in var_0 )
                {
                    if ( isdefined( var_5 ) && isdefined( var_5.owner ) && var_5.owner == var_3 )
                    {
                        foreach ( var_7 in var_1 )
                        {
                            if ( isdefined( var_7 ) && isdefined( var_7.dogtag ) )
                            {
                                if ( isdefined( var_7.dogtag.interactteam ) && var_7.dogtag.interactteam != "_encstr_AABA05236DC831" )
                                {
                                    if ( var_5 istouching( var_7 ) )
                                        var_7.dogtag onuse( var_5.owner );
                                }
                            }
                        }
                    }
                }
            }
        }

        wait 0.2;
    }
}

mugger_monitor_remote_uav_pickups()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        var_0 = getentarray( "_encstr_A6980F1D9CB4D976B227AF237BD9D12C3B", "_encstr_B8CE0BE43FC317DF690862BA48" );

        foreach ( var_2 in level.players )
        {
            if ( isdefined( var_2 ) && isdefined( var_2.remoteuav ) )
            {
                foreach ( var_4 in var_0 )
                {
                    if ( isdefined( var_4 ) && isdefined( var_4.dogtag ) )
                    {
                        if ( isdefined( var_4.dogtag.interactteam ) && var_4.dogtag.interactteam != "_encstr_AABA05236DC831" )
                        {
                            if ( var_2.remoteuav istouching( var_4 ) )
                                var_4.dogtag onuse( var_2 );
                        }
                    }
                }
            }
        }

        wait 0.2;
    }
}

mugger_check_muggernaut()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self notify( "_encstr_A617146CD0ACD8AD2D73B3AF6BEAECD9CA27DC16AB1D" );
    self endon( "_encstr_A617146CD0ACD8AD2D73B3AF6BEAECD9CA27DC16AB1D" );
    wait 2;

    if ( self.muggings.size < level.mugger_muggernaut_muggings_needed )
        return;

    var_0 = self.muggings[self.muggings.size - 1];
    var_1 = var_0 - level.mugger_muggernaut_window;
    var_2 = [];

    foreach ( var_4 in self.muggings )
    {
        if ( var_4 >= var_1 )
            var_2[var_2.size] = var_4;
    }

    if ( var_2.size >= level.mugger_muggernaut_muggings_needed )
    {
        thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_BA6F0BFBF752942B42AD11EB53" );
        mugger_bank_tags( 1, 1 );
        self.muggings = [];
    }
    else
        self.muggings = var_2;
}

mugger_pile_icon_remove( var_0 )
{
    scripts\mp\objidpoolmanager::returnobjectiveid( var_0 );
}

_hidefromplayer( var_0 )
{
    self hide();

    foreach ( var_2 in level.players )
    {
        if ( var_2 != var_0 )
            self showtoplayer( var_2 );
    }
}

onuse( var_0 )
{
    if ( isdefined( var_0.owner ) )
        var_0 = var_0.owner;

    if ( self.temp_tag )
        self.trigger playsound( "_encstr_AA8719892F41BAB101722EF8D35624D028F9196119F2618862364A" );
    else if ( isdefined( self.attacker ) && var_0 == self.attacker )
    {
        self.trigger playsound( "_encstr_95521BDA88B7DCA770C19387E8196F226B59D392488799FB08BE9395FF" );
        var_0 scripts\mp\utility\stats::incpersstat( "_encstr_930E0A338F20CFFF66C83A32", 1 );
        var_0 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_930E0A338F20CFFF66C83A32", var_0.pers["_encstr_930E0A338F20CFFF66C83A32"] );
    }
    else
    {
        self.trigger playsound( "_encstr_AA8719892F41BAB101722EF8D35624D028F9196119F2618862364A" );
        var_0 scripts\mp\utility\stats::incpersstat( "_encstr_954E074A20D55C9771", 1 );
        var_0 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_954E074A20D55C9771", var_0.pers["_encstr_954E074A20D55C9771"] );
    }

    var_0 thread onpickup();
    resettags( 1 );
}

onpickup( var_0, var_1, var_2 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    while ( !isdefined( self.pers ) )
        waitframe();

    thread mugger_delayed_banking();
}

mugger_delayed_banking()
{
    self notify( "_encstr_943F084A1F0E472B4804" );
    self endon( "_encstr_943F084A1F0E472B4804" );
    level endon( "_encstr_8BBD0C86D903D0135DBA29D022F5" );
    self.tags_carried++;
    self.game_extrainfo = self.tags_carried;

    if ( isplayer( self ) && !isbot( self ) )
    {
        self.dogtagstext setvalue( self.tags_carried );
        self.dogtagstext thread scripts\mp\hud::fontpulse( self );
    }

    wait 1.5;
    var_0 = level.mugger_bank_limit - self.tags_carried;

    if ( var_0 > 0 && var_0 <= 5 )
    {
        var_1 = undefined;

        switch ( var_0 )
        {
            case 1:
                var_1 = "_encstr_B8D40DD6AB3B9D59C9AF26D6DBE456";
                break;
            case 2:
                var_1 = "_encstr_9EF40D252B77E8EF58FF9AFA222365";
                break;
            case 3:
                var_1 = "_encstr_9D020D3DBB688FCF668E5FA290BE07";
                break;
            case 4:
                var_1 = "_encstr_8C9A0DDA5DB3D9564EBE435BF6E42B";
                break;
            case 5:
                var_1 = "_encstr_A4D70D7D239F47355B80EB387FE87A";
                break;
        }

        if ( isdefined( var_1 ) )
            self playsoundtoplayer( var_1, self );
    }

    wait 0.5;
    mugger_bank_tags( 0 );
}

mugger_bank_tags( var_0, var_1 )
{
    var_2 = 0;

    if ( var_0 == 1 )
        var_2 = self.tags_carried;
    else
    {
        var_3 = self.tags_carried % level.mugger_bank_limit;
        var_2 = self.tags_carried - var_3;
    }

    if ( var_2 > 0 )
    {
        self.tags_to_bank = var_2;

        if ( !isdefined( var_1 ) )
            thread scripts\mp\hud_message::showsplash( "_encstr_B70214AAF84CD3C0508B31AB631003DF2601B08AF865", var_2 );

        thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_BD960C7B118C8F915893360BA350", undefined, self.tags_to_bank * scripts\mp\rank::getscoreinfovalue( "_encstr_A1BA0FAFC8E2E12ED7A0B8307283B0A361" ) );
        self.total_tags_banked = self.total_tags_banked + var_2;
        self.tags_carried = self.tags_carried - var_2;
        self.game_extrainfo = self.tags_carried;

        if ( isplayer( self ) && !isbot( self ) )
        {
            self.dogtagstext setvalue( self.tags_carried );
            self.dogtagstext thread scripts\mp\hud::fontpulse( self );
        }

        self.assists = self.total_tags_banked;
        self.pers["_encstr_A9F30862E89734A7EBE6"] = self.total_tags_banked;
    }
}

onplayerscore( var_0, var_1 )
{
    if ( var_0 == "_encstr_BD960C7B118C8F915893360BA350" && isdefined( var_1 ) && isdefined( var_1.tags_to_bank ) && var_1.tags_to_bank > 0 )
    {
        var_2 = var_1.tags_to_bank * scripts\mp\rank::getscoreinfovalue( "_encstr_A1BA0FAFC8E2E12ED7A0B8307283B0A361" );
        var_1.tags_to_bank = 0;
        return var_2;
    }

    return 0;
}

resettags( var_0 )
{
    if ( !var_0 )
        level notify( "_encstr_A26A197843CFD7B1EB771A8723E75BBF7389C0E89A221B486F7E1D" );

    self.attacker = undefined;
    self notify( "_encstr_80F2062328E7A72B" );
    self.visuals[0] hide();
    self.curorigin = ( 0, 0, 1000 );
    self.trigger.origin = ( 0, 0, 1000 );
    self.visuals[0].origin = ( 0, 0, 1000 );
    scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );

    if ( isdefined( self.jackpot_tag ) && self.jackpot_tag == 1 )
        level.mugger_jackpot_tags_spawned--;

    if ( !self.temp_tag )
        scripts\mp\objidpoolmanager::update_objective_state( self.objid, "_encstr_8CBE0A41F59874FF8371821A" );
}

timeout()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_AAE208912BB195E85932" );
    self endon( "_encstr_80F2062328E7A72B" );
    self endon( "_encstr_B88E073B8F4336B904" );
    self notify( "_encstr_81440EF3F86BF7170BA5C7E3BD51BB7B" );
    self endon( "_encstr_81440EF3F86BF7170BA5C7E3BD51BB7B" );
    level scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 27.0 );

    for ( var_0 = 3.0; var_0 > 0.0; var_0 = var_0 - 0.5 )
    {
        self.visuals[0] hide();
        wait 0.25;
        self.visuals[0] show();
        wait 0.25;
    }

    playfx( level.mugger_fx["_encstr_AAE007D90BB9A5E61A"], self.curorigin );
    thread resettags( 0 );
}

clearonvictimdisconnect( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = var_0.guid;
    var_0 waittill( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( isdefined( level.dogtags[var_1] ) )
    {
        level.dogtags[var_1] scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
        playfx( level.mugger_fx["_encstr_AAE007D90BB9A5E61A"], level.dogtags[var_1].curorigin );
        level.dogtags[var_1] notify( "_encstr_80F2062328E7A72B" );
        waitframe();

        if ( isdefined( level.dogtags[var_1] ) )
        {
            scripts\mp\objidpoolmanager::returnobjectiveid( level.dogtags[var_1].objid );
            level.dogtags[var_1].trigger delete();

            for ( var_2 = 0; var_2 < level.dogtags[var_1].visuals.size; var_2++ )
                level.dogtags[var_1].visuals[var_2] delete();

            level.dogtags[var_1] notify( "_encstr_AAE208912BB195E85932" );
            level.dogtags[var_1] = undefined;
        }
    }
}

ontimelimit()
{
    level notify( "_encstr_8BBD0C86D903D0135DBA29D022F5" );

    foreach ( var_1 in level.players )
        var_1 mugger_bank_tags( 1 );

    wait 0.1;
    scripts\mp\gamelogic::default_ontimelimit();
}

mugger_jackpot_watch()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_8B510D326286B4EF30C397075395AA" );

    if ( level.mugger_jackpot_limit <= 0 )
        return;

    level.mugger_jackpot_num_tags = 0;
    level.mugger_jackpot_tags_unspawned = 0;
    level.mugger_jackpot_num_tags = 0;
    level thread mugger_jackpot_timer();

    for (;;)
    {
        level waittill( "_encstr_A26A197843CFD7B1EB771A8723E75BBF7389C0E89A221B486F7E1D" );
        var_0 = 1;

        if ( var_0 )
        {
            level.mugger_jackpot_num_tags++;
            var_1 = clamp( float( level.mugger_jackpot_num_tags / level.mugger_jackpot_limit ), 0.0, 1.0 );

            if ( level.mugger_jackpot_num_tags >= level.mugger_jackpot_limit )
            {
                if ( isdefined( level.mugger_jackpot_text ) )
                    level.mugger_jackpot_text thread scripts\mp\hud::fontpulse( level.players[0] );

                level.mugger_jackpot_num_tags = 15 + randomintrange( 0, 3 ) * 5;
                level thread mugger_jackpot_drop();
                break;
            }
        }
    }
}

mugger_jackpot_timer()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_8B510D326286B4EF30C397075395AA" );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    for (;;)
    {
        wait( level.mugger_jackpot_wait_sec );
        level notify( "_encstr_A26A197843CFD7B1EB771A8723E75BBF7389C0E89A221B486F7E1D" );
    }
}

mugger_jackpot_drop()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level notify( "_encstr_B48B0E9393EE0224B16964AAA1B0770B" );
    level endon( "_encstr_B48B0E9393EE0224B16964AAA1B0770B" );
    var_0 = level.mugger_dropzones[level.script][randomint( level.mugger_dropzones[level.script].size )];
    var_0 = var_0 + ( randomintrange( -50, 50 ), randomintrange( -50, 50 ), 0 );

    for (;;)
    {
        var_1 = level.players[0];
        var_2 = 1;

        if ( isdefined( var_1 ) && scripts\mp\utility\killstreak::currentactivevehiclecount() < scripts\mp\utility\killstreak::maxvehiclesallowed() && level.fauxvehiclecount + var_2 < scripts\mp\utility\killstreak::maxvehiclesallowed() && scripts\cp_mp\killstreaks\airdrop::getnumdroppedcrates() < 8 )
        {
            foreach ( var_4 in level.players )
                var_4 thread scripts\mp\hud_message::showsplash( "_encstr_BD92185D95C1B77FC5E1B21A182FF25F5B68D1C62668C7049508" );

            break;
        }
        else
        {
            wait 0.5;
            continue;
        }
    }

    level.mugger_jackpot_tags_unspawned = level.mugger_jackpot_num_tags;
    level thread mugger_jackpot_run( var_0 );
}

mugger_jackpot_pile_notify( var_0, var_1, var_2 )
{
    if ( !isdefined( level.jackpotpileobjid ) )
    {
        level.jackpotpileobjid = scripts\mp\objidpoolmanager::requestobjectiveid( 99 );

        if ( level.jackpotpileobjid != -1 )
        {
            scripts\mp\objidpoolmanager::objective_add_objective( level.jackpotpileobjid, "_encstr_B30B07E216CBFFC4C2", var_0 );
            scripts\mp\objidpoolmanager::update_objective_icon( level.jackpotpileobjid, "_encstr_A91D11EE852F38BD96B91D7D53B0D8DA38DE1D" );
        }
    }
    else if ( level.jackpotpileobjid != -1 )
        scripts\mp\objidpoolmanager::update_objective_position( level.jackpotpileobjid, var_0 );

    if ( var_2 >= 10 )
    {
        foreach ( var_4 in level.players )
            var_4 playlocalsound( game["_encstr_B23F062A5346A7DE"]["_encstr_BD64099D5AC6D1B7C9E5BE" + var_4.pers["_encstr_89EF05D46BA8FD"]] );

        if ( !isdefined( level.jackpotpileicon ) )
        {
            level.jackpotpileicon = newhudelem();
            level.jackpotpileicon setshader( "_encstr_A91D11EE852F38BD96B91D7D53B0D8DA38DE1D", 64, 64 );
            level.jackpotpileicon setwaypoint( 0, 1, 0, 0 );
        }

        level.jackpotpileicon.x = var_0[0];
        level.jackpotpileicon.y = var_0[1];
        level.jackpotpileicon.z = var_0[2] + 12;
        level.jackpotpileicon.alpha = 0.75;
    }
}

mugger_jackpot_pile_notify_cleanup()
{
    if ( level.jackpotpileobjid != -1 )
        scripts\mp\objidpoolmanager::update_objective_state( level.jackpotpileobjid, "_encstr_8CBE0A41F59874FF8371821A" );

    level.jackpotpileicon fadeovertime( 2 );
    level.jackpotpileicon.alpha = 0;
    level.jackpotpileicon scripts\engine\utility::delaythread( 2, ::hudelemdestroy );
}

mugger_jackpot_fx( var_0 )
{
    mugger_jackpot_fx_cleanup();
    var_1 = var_0 + ( 0, 0, 30 );
    var_2 = var_0 + ( 0, 0, -1000 );
    var_3 = scripts\engine\trace::ray_trace( var_1, var_2, undefined, scripts\engine\trace::create_default_contents( 1 ) );
    level.jackpot_zone.origin = var_3["_encstr_B7260923C89E8F3378E72E"] + ( 0, 0, 1 );
    level.jackpot_zone show();
    var_4 = vectortoangles( var_3["_encstr_930E073E8FC00DDF69"] );
    var_5 = anglestoforward( var_4 );
    var_6 = anglestoright( var_4 );
    thread spawnfxdelay( var_3["_encstr_B7260923C89E8F3378E72E"], var_5, var_6, 0.5 );
    wait 0.1;
    playfxontag( level.mugger_fx["_encstr_BE72069FCF8ACAA8"], level.jackpot_zone, "_encstr_B8BF073A0BD9F5CC0F" );

    foreach ( var_8 in level.players )
        var_8.mugger_fx_playing = 1;

    level.jackpot_zone.mugger_fx_playing = 1;
}

mugger_jackpot_fx_cleanup()
{
    stopfxontag( level.mugger_fx["_encstr_BE72069FCF8ACAA8"], level.jackpot_zone, "_encstr_B8BF073A0BD9F5CC0F" );
    level.jackpot_zone hide();

    if ( isdefined( level.jackpot_targetfx ) )
        level.jackpot_targetfx delete();

    if ( level.jackpot_zone.mugger_fx_playing )
    {
        level.jackpot_zone.mugger_fx_playing = 0;
        stopfxontag( level.mugger_fx["_encstr_BE72069FCF8ACAA8"], level.jackpot_zone, "_encstr_B8BF073A0BD9F5CC0F" );
        waitframe();
    }
}

spawnfxdelay( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( level.jackpot_targetfx ) )
        level.jackpot_targetfx delete();

    wait( var_3 );
    level.jackpot_targetfx = spawnfx( level.mugger_targetfxid, var_0, var_1, var_2 );
    triggerfx( level.jackpot_targetfx );
}

waitreplaysmokefxfornewplayer()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    wait 0.5;

    if ( level.jackpot_zone.mugger_fx_playing == 1 && !isdefined( self.mugger_fx_playing ) )
    {
        playfxontagforclients( level.mugger_fx["_encstr_BE72069FCF8ACAA8"], level.jackpot_zone, "_encstr_B8BF073A0BD9F5CC0F", self );
        self.mugger_fx_playing = 1;
    }
}

mugger_jackpot_run( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_B702103AF843CF38808B31AB734015BFE314" );
    level notify( "_encstr_8B510D326286B4EF30C397075395AA" );
    mugger_jackpot_pile_notify( var_0, "_encstr_BA450FF3737F300DB5B76C59E27CD85050", level.mugger_jackpot_tags_unspawned );
    level thread mugger_jackpot_fx( var_0 );
    level thread mugger_jackpot_abort_after_time( 30 );
    level waittill( "_encstr_B41017C29627C8C9DEE0BE53C21B6DE0ED8EEB360BDC19AC32", var_0 );

    if ( level.jackpotpileobjid != -1 )
        scripts\mp\objidpoolmanager::update_objective_position( level.jackpotpileobjid, var_0 );

    level.jackpotpileicon.x = var_0[0];
    level.jackpotpileicon.y = var_0[1];
    level.jackpotpileicon.z = var_0[2] + 32;

    foreach ( var_2 in level.players )
    {
        var_2 playsoundtoplayer( "_encstr_A20D0EFDB7661BDF4D60828A9987D5D7", var_2 );
        var_2 thread scripts\mp\hud_message::showsplash( "_encstr_BA450FF3737F300DB5B76C59E27CD85050", level.mugger_jackpot_tags_unspawned );
    }

    level.mugger_jackpot_tags_spawned = 0;

    while ( level.mugger_jackpot_tags_unspawned > 0 )
    {
        if ( level.mugger_jackpot_tags_spawned < 10 )
        {
            level.mugger_jackpot_tags_unspawned--;
            var_4 = mugger_tag_temp_spawn( var_0, 0, 400 );
            var_4.jackpot_tag = 1;
            level.mugger_jackpot_tags_spawned++;
            level thread mugger_jackpot_abort_after_time( 90 );
            wait 0.1;
            continue;
        }

        wait 0.5;
    }

    level.mugger_jackpot_num_tags = 0;

    while ( level.mugger_jackpot_tags_spawned > 0 )
        wait 1;

    mugger_jackpot_cleanup();
}

mugger_jackpot_cleanup()
{
    level notify( "_encstr_94FC10523E52B7533783B1588B5509C55BE2" );
    mugger_jackpot_pile_notify_cleanup();
    mugger_jackpot_fx_cleanup();
    level thread mugger_jackpot_watch();
}

mugger_jackpot_abort_after_time( var_0 )
{
    level endon( "_encstr_94FC10523E52B7533783B1588B5509C55BE2" );
    level notify( "_encstr_A4B719923BE024C3B083E10A6998F35BA9A316F45B30611B6B585A" );
    level endon( "_encstr_A4B719923BE024C3B083E10A6998F35BA9A316F45B30611B6B585A" );
    wait( var_0 );
    level notify( "_encstr_B702103AF843CF38808B31AB734015BFE314" );
}

muggercratethink( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    level notify( "_encstr_B41017C29627C8C9DEE0BE53C21B6DE0ED8EEB360BDC19AC32", self.origin );
    wait 0.5;
    scripts\cp_mp\killstreaks\airdrop::deletecrateold();
}

createdropzones()
{
    level.mugger_dropzones = [];
    var_0 = undefined;

    if ( isdefined( var_0 ) && var_0.size )
    {
        var_1 = 0;

        foreach ( var_3 in var_0 )
        {
            level.mugger_dropzones[level.script][var_1] = var_3.origin;
            var_1++;
        }
    }
    else
    {
        level.mugger_dropzones["_encstr_9C5B0BF5970F83DD9160770FA8"][0] = ( -665, -209, 226 );
        level.mugger_dropzones["_encstr_9C5B0BF5970F83DD9160770FA8"][1] = ( -2225, 1573, 260 );
        level.mugger_dropzones["_encstr_9C5B0BF5970F83DD9160770FA8"][2] = ( 1275, -747, 292 );
        level.mugger_dropzones["_encstr_9C5B0BF5970F83DD9160770FA8"][3] = ( 1210, 963, 225 );
        level.mugger_dropzones["_encstr_9C5B0BF5970F83DD9160770FA8"][4] = ( -2343, -811, 226 );
        level.mugger_dropzones["_encstr_9C5B0BF5970F83DD9160770FA8"][5] = ( -1125, -1610, 184 );
        level.mugger_dropzones["_encstr_95D5081F2846D442630D"][0] = ( 649, 1096, -250 );
        level.mugger_dropzones["_encstr_95D5081F2846D442630D"][1] = ( 953, -501, -328 );
        level.mugger_dropzones["_encstr_95D5081F2846D442630D"][2] = ( -37, 2099, -231 );
        level.mugger_dropzones["_encstr_95D5081F2846D442630D"][3] = ( -716, 1100, -296 );
        level.mugger_dropzones["_encstr_95D5081F2846D442630D"][4] = ( -683, -51, -352 );
        level.mugger_dropzones["_encstr_9B560A59808FFB21A6A30B82"][0] = ( 266, -212, 708 );
        level.mugger_dropzones["_encstr_9B560A59808FFB21A6A30B82"][1] = ( 295, 1842, 668 );
        level.mugger_dropzones["_encstr_9B560A59808FFB21A6A30B82"][2] = ( -1449, 1833, 692 );
        level.mugger_dropzones["_encstr_9B560A59808FFB21A6A30B82"][3] = ( 835, -1815, 668 );
        level.mugger_dropzones["_encstr_9B560A59808FFB21A6A30B82"][4] = ( -1116, 76, 729 );
        level.mugger_dropzones["_encstr_9B560A59808FFB21A6A30B82"][5] = ( -399, 951, 676 );
        level.mugger_dropzones["_encstr_87220DF5AF7E275547883AE2F0B10B"][0] = ( 552, 1315, 8 );
        level.mugger_dropzones["_encstr_87220DF5AF7E275547883AE2F0B10B"][1] = ( 990, 3248, 144 );
        level.mugger_dropzones["_encstr_87220DF5AF7E275547883AE2F0B10B"][2] = ( -879, 2643, 135 );
        level.mugger_dropzones["_encstr_87220DF5AF7E275547883AE2F0B10B"][3] = ( -68, -995, 16 );
        level.mugger_dropzones["_encstr_87220DF5AF7E275547883AE2F0B10B"][4] = ( 1499, -1206, 15 );
        level.mugger_dropzones["_encstr_87220DF5AF7E275547883AE2F0B10B"][5] = ( 2387, 1786, 61 );
        level.mugger_dropzones["_encstr_B8D009FDB7664BDE653043"][0] = ( -150, -80, 63 );
        level.mugger_dropzones["_encstr_B8D009FDB7664BDE653043"][1] = ( -947, -1088, 107 );
        level.mugger_dropzones["_encstr_B8D009FDB7664BDE653043"][2] = ( 1052, -614, 50 );
        level.mugger_dropzones["_encstr_B8D009FDB7664BDE653043"][3] = ( 1886, 648, 24 );
        level.mugger_dropzones["_encstr_B8D009FDB7664BDE653043"][4] = ( 628, 2096, 30 );
        level.mugger_dropzones["_encstr_B8D009FDB7664BDE653043"][5] = ( -2033, 1082, 308 );
        level.mugger_dropzones["_encstr_B8D009FDB7664BDE653043"][6] = ( -1230, 1836, 295 );
        level.mugger_dropzones["_encstr_ABE30CAD83FA2B873643589B7695"][0] = ( 904, 441, -77 );
        level.mugger_dropzones["_encstr_ABE30CAD83FA2B873643589B7695"][1] = ( -1056, 1435, 141 );
        level.mugger_dropzones["_encstr_ABE30CAD83FA2B873643589B7695"][2] = ( 800, 1543, 148 );
        level.mugger_dropzones["_encstr_ABE30CAD83FA2B873643589B7695"][3] = ( 2423, 1368, 141 );
        level.mugger_dropzones["_encstr_ABE30CAD83FA2B873643589B7695"][4] = ( 596, -1870, 89 );
        level.mugger_dropzones["_encstr_ABE30CAD83FA2B873643589B7695"][5] = ( -1241, -821, 30 );
        level.mugger_dropzones["_encstr_9B6C0B5B83F589F67B8EC65676"][0] = ( -444, -114, -8 );
        level.mugger_dropzones["_encstr_9B6C0B5B83F589F67B8EC65676"][1] = ( 1053, -1051, -13 );
        level.mugger_dropzones["_encstr_9B6C0B5B83F589F67B8EC65676"][2] = ( 889, 1184, -28 );
        level.mugger_dropzones["_encstr_9B6C0B5B83F589F67B8EC65676"][3] = ( -994, 1877, -41 );
        level.mugger_dropzones["_encstr_9B6C0B5B83F589F67B8EC65676"][4] = ( -1707, -1333, 63 );
        level.mugger_dropzones["_encstr_9B6C0B5B83F589F67B8EC65676"][5] = ( -334, -2155, 61 );
        level.mugger_dropzones["_encstr_BCF20ADA0E7DD80B93C4DEDC"][0] = ( -1791, -3892, 3813 );
        level.mugger_dropzones["_encstr_BCF20ADA0E7DD80B93C4DEDC"][1] = ( -338, -4978, 3964 );
        level.mugger_dropzones["_encstr_BCF20ADA0E7DD80B93C4DEDC"][2] = ( -82, -2941, 3990 );
        level.mugger_dropzones["_encstr_BCF20ADA0E7DD80B93C4DEDC"][3] = ( -3198, -2829, 3809 );
        level.mugger_dropzones["_encstr_BCF20ADA0E7DD80B93C4DEDC"][4] = ( -3673, -3893, 3610 );
        level.mugger_dropzones["_encstr_BCF20ADA0E7DD80B93C4DEDC"][5] = ( -2986, -4863, 3648 );
        level.mugger_dropzones["_encstr_942B0BAD07AFA116399134B03A"][0] = ( 1187, -322, 238 );
        level.mugger_dropzones["_encstr_942B0BAD07AFA116399134B03A"][1] = ( 2010, -1379, 357 );
        level.mugger_dropzones["_encstr_942B0BAD07AFA116399134B03A"][2] = ( 1615, 1245, 366 );
        level.mugger_dropzones["_encstr_942B0BAD07AFA116399134B03A"][3] = ( -371, 825, 436 );
        level.mugger_dropzones["_encstr_942B0BAD07AFA116399134B03A"][4] = ( -820, -927, 348 );
        level.mugger_dropzones["_encstr_AF8E0920D0AF03DA8BC9CF"][0] = ( -239, 1315, 52 );
        level.mugger_dropzones["_encstr_AF8E0920D0AF03DA8BC9CF"][1] = ( -1678, -219, 55 );
        level.mugger_dropzones["_encstr_AF8E0920D0AF03DA8BC9CF"][2] = ( 235, -369, 60 );
        level.mugger_dropzones["_encstr_AF8E0920D0AF03DA8BC9CF"][3] = ( -201, 2138, 60 );
        level.mugger_dropzones["_encstr_AF8E0920D0AF03DA8BC9CF"][4] = ( -1903, 2433, 198 );
        level.mugger_dropzones["_encstr_8A7B0B41888733D31DCA182072"][0] = ( 990, -821, 331 );
        level.mugger_dropzones["_encstr_8A7B0B41888733D31DCA182072"][1] = ( 658, 2155, 337 );
        level.mugger_dropzones["_encstr_8A7B0B41888733D31DCA182072"][2] = ( -559, 1882, 310 );
        level.mugger_dropzones["_encstr_8A7B0B41888733D31DCA182072"][3] = ( -1999, 1184, 343 );
        level.mugger_dropzones["_encstr_8A7B0B41888733D31DCA182072"][4] = ( 215, -2875, 384 );
        level.mugger_dropzones["_encstr_8A7B0B41888733D31DCA182072"][5] = ( 1731, -483, 290 );
        level.mugger_dropzones["_encstr_B6950BCA98A70D97A036658CDB"][0] = ( 712, 217, -196 );
        level.mugger_dropzones["_encstr_B6950BCA98A70D97A036658CDB"][1] = ( 1719, -1095, -196 );
        level.mugger_dropzones["_encstr_B6950BCA98A70D97A036658CDB"][2] = ( 2843, 1034, -269 );
        level.mugger_dropzones["_encstr_B6950BCA98A70D97A036658CDB"][3] = ( 1251, 2645, -213 );
        level.mugger_dropzones["_encstr_B6950BCA98A70D97A036658CDB"][4] = ( -1114, 1301, -200 );
        level.mugger_dropzones["_encstr_B6950BCA98A70D97A036658CDB"][5] = ( -693, -823, -132 );
        level.mugger_dropzones["_encstr_9CE409332B19D6F89CA64B"][0] = ( -5052, 2371, 1223 );
        level.mugger_dropzones["_encstr_9CE409332B19D6F89CA64B"][1] = ( -4550, 4199, 1268 );
        level.mugger_dropzones["_encstr_9CE409332B19D6F89CA64B"][2] = ( -7149, 4449, 1376 );
        level.mugger_dropzones["_encstr_9CE409332B19D6F89CA64B"][3] = ( -6350, 1528, 1302 );
        level.mugger_dropzones["_encstr_9CE409332B19D6F89CA64B"][4] = ( -3333, 992, 1222 );
        level.mugger_dropzones["_encstr_9CE409332B19D6F89CA64B"][5] = ( -4040, -361, 1222 );
        level.mugger_dropzones["_encstr_BECD0FBDDF577A9E7BD0CB87503146428B"][0] = ( 662, -513, 142 );
        level.mugger_dropzones["_encstr_BECD0FBDDF577A9E7BD0CB87503146428B"][1] = ( 674, 1724, 112 );
        level.mugger_dropzones["_encstr_BECD0FBDDF577A9E7BD0CB87503146428B"][2] = ( -1003, 1103, 30 );
        level.mugger_dropzones["_encstr_BECD0FBDDF577A9E7BD0CB87503146428B"][3] = ( 385, -2910, 209 );
        level.mugger_dropzones["_encstr_BECD0FBDDF577A9E7BD0CB87503146428B"][4] = ( 2004, -1760, 144 );
        level.mugger_dropzones["_encstr_BECD0FBDDF577A9E7BD0CB87503146428B"][5] = ( 2458, -300, 147 );
        level.mugger_dropzones["_encstr_BD170FDA1CEB57B9322B399D9CED5DCDC8"][0] = ( 31, 1319, -196 );
        level.mugger_dropzones["_encstr_BD170FDA1CEB57B9322B399D9CED5DCDC8"][1] = ( 165, -940, 60 );
        level.mugger_dropzones["_encstr_BD170FDA1CEB57B9322B399D9CED5DCDC8"][2] = ( -747, 143, 4 );
        level.mugger_dropzones["_encstr_BD170FDA1CEB57B9322B399D9CED5DCDC8"][3] = ( -1671, 1666, -216 );
        level.mugger_dropzones["_encstr_BD170FDA1CEB57B9322B399D9CED5DCDC8"][4] = ( -631, 3158, -68 );
        level.mugger_dropzones["_encstr_BD170FDA1CEB57B9322B399D9CED5DCDC8"][5] = ( 500, 2865, -89 );
        level.mugger_dropzones["_encstr_98F0096073B1792B73C3C7"][0] = ( -39, -119, 1280 );
        level.mugger_dropzones["_encstr_98F0096073B1792B73C3C7"][1] = ( 1861, -563, 1229 );
        level.mugger_dropzones["_encstr_98F0096073B1792B73C3C7"][2] = ( -1548, -366, 1007 );
        level.mugger_dropzones["_encstr_98F0096073B1792B73C3C7"][3] = ( -678, 1272, 1273 );
        level.mugger_dropzones["_encstr_98F0096073B1792B73C3C7"][4] = ( 1438, 842, 1272 );
    }
}

onsuicidedeath( var_0 )
{
    level thread spawndogtags( var_0, var_0 );
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::oncommonsuicidedeath( var_0 );
}
