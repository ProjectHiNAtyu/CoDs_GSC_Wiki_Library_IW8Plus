// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

setuphalodropplayer( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 notify( "_encstr_882A0C99AE96E04DC277C1D393BA" );
    var_1 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
    var_1 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    self.playerlinkent = var_1;
    self.playerstartpos = var_0.origin;

    if ( istrue( var_0.isbombcarrier ) )
        level.bombdroploc = self.playerstartpos;

    var_1 playloopsound( "_encstr_A1911D6351B8A7E2D72B6F7B1B680AD9C0185A6B2B78219AB8C35F5B07A9A3" );
    var_1 linkto( self, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", self.playeroffsets[self.playerslots.size], ( 0, 90, 0 ) );
    var_0 setstance( "_encstr_B1AD06374716DC8C" );
    var_0 setcandamage( 0 );
    var_0 cancelmantle();
    var_0 playerlinktodelta( var_1, "_encstr_BA010BA012DFB703A379A39542", 1.0, 40, 40, -5, 70, 0 );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    var_0 notifyonplayercommand( "_encstr_980C0F1B5183D887A41320D0A9BE131B4A", "_encstr_A44609F657CA42130156DF" );
    var_0 thread _encstr_821221B201F8016365BFEEFFA1A05A4178A9EBB8DBE8C36EB69527CF4B96F7F680F3A6::listenjump( self, 1 );
    var_0 thread _encstr_821221B201F8016365BFEEFFA1A05A4178A9EBB8DBE8C36EB69527CF4B96F7F680F3A6::listenkick( self, 1 );
}

spawnplayertohelicam( var_0 )
{
    var_0.angles = self.angles;
    var_0 thread _encstr_821221B201F8016365BFEEFFA1A05A4178A9EBB8DBE8C36EB69527CF4B96F7F680F3A6::listenjump( self, 1 );
    var_0 thread _encstr_821221B201F8016365BFEEFFA1A05A4178A9EBB8DBE8C36EB69527CF4B96F7F680F3A6::listenkick( self, 1 );
    var_0.br_infil_type = "_encstr_95CC05C097BC98";
    var_0 thread orbitcam( self );
}

orbitcam( var_0 )
{
    var_1 = 450;
    var_2 = ( -5, 0, 0 );
    var_3 = anglestoforward( var_2 ) * var_1 * -1;
    var_0.br_vieworigin = var_3 + ( 150, 150, 0 );
    self.angles = var_0.angles;
    self playerlinkto( var_0, "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    self playerhide();

    if ( isdefined( level._id_142D1 ) )
        scripts\mp\utility\player::_visionsetnaked( level._id_142D1, 0 );
    else
        scripts\mp\utility\player::_visionsetnaked( "_encstr_A40101", 0 );

    if ( isdefined( self.br_orbitcam ) )
        self.br_orbitcam delete();

    var_4 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0.origin );
    var_4 setmodel( "_encstr_BA010BA012DFB703A379A39542" );
    var_4 linkto( var_0, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", ( 0, 0, 50 ), ( 0, 0, 0 ) );
    self.br_orbitcam = var_4;
    self cameraset( "_encstr_BDCB16D8C2DAACC90BD76CEA9B8EEDDAFAED27C4D2A3D78C" );
}

forceejectall()
{
    foreach ( var_1 in level.players )
    {
        var_1 notify( "_encstr_97180AA1B036DB7D9A5DAD07" );
        var_1 notify( "_encstr_AA160FA0678C30676294760A619AC3F3B8" );
    }
}

jumplistener( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8B7D08BE1ACF92E53D69" );
    scripts\common\utility::allow_melee( 0 );
    scripts\mp\utility\player::enableplayerforspawnlogic( 0 );
    scripts\common\utility::allow_offhand_weapons( 0 );
    scripts\common\utility::allow_usability( 0 );
    self notifyonplayercommand( "_encstr_97180AA1B036DB7D9A5DAD07", "_encstr_A44609F657CA42130156DF" );
    self waittill( "_encstr_97180AA1B036DB7D9A5DAD07" );
    var_2 = self getplayerangles();
    var_3 = var_0 getfirstopenjumporigin();
    var_4 = anglestoleft( var_0.angles );
    var_5 = var_3.origin + var_4 * 200;
    var_6 = physics_createcontents( [ "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_941116D7F47B0FC88317C8B07BCC017DD35AD8D44D52D773", "_encstr_A18816F8C3E1EFFCFF5A92BF8363BBF55BCBD9C3538DF74D", "_encstr_B7F9145B18AB8AF721FE235718AB8F95E96811E39843", "_encstr_BA411B0E0DF2B9B4D8CD1BB7B9D1B2B93A37D707C6162FAC9C8DB196E0", "_encstr_8ADD1C8334E5DC4BD89BB1DEDC4759373A37EBECCA432D1BC6AC8DD8D238" ] );
    var_7 = ( 0, 0, 0 );
    var_8 = physics_raycast( var_5, var_5 + ( 0, 0, -20000 ), var_6, undefined, 0, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3", 1 );

    if ( isdefined( var_8 ) && var_8.size > 0 )
    {
        var_9 = var_8[0]["_encstr_B7260923C89E8F3378E72E"];
        var_7 = getclosestpointonnavmesh( var_9 );
    }
    else
        iprintln( "_encstr_89421F95197390A12666BFB15854894C62F06D3C50CF6FC98560AF93ABCBC2A7B3" );

    self unlink();
    var_10 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self.origin );
    var_10.angles = self.angles;
    var_10 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    self playerlinkto( var_10 );
    var_10 moveto( var_7 + ( 0, 0, 24 ), var_1, 0, 1.0 );
    self playerlinkto( var_10 );
    var_11 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self.origin + ( 0, 0, 300 ) );
    var_11 setmodel( "_encstr_A483151B4DF80F72ABF04A6208AB2BBFF6376C91636173" );
    var_11 notsolid();
    childthread parachuteupdater( var_11 );
    wait( var_1 - 0.333 );
    self unlink();
    var_0.playerslots = scripts\engine\utility::array_remove( var_0.playerslots, self );
    self setcandamage( 1 );
    scripts\common\utility::allow_usability( 1 );
    scripts\common\utility::allow_offhand_weapons( 1 );
    scripts\mp\utility\player::enableplayerforspawnlogic( 1 );
    scripts\common\utility::allow_melee( 1 );

    if ( isdefined( var_0 ) )
        var_0 jumpdone();
}

parachuteupdater( var_0 )
{
    for (;;)
    {
        if ( self isonground() || !isalive( self ) )
        {
            self.br_fallaccel = ( 0, 0, 0 );
            var_0 delete();
            break;
        }
        else
        {
            var_0.angles = self.angles;
            var_0.origin = self.origin + ( 0, 0, 360 );
        }

        waitframe();
    }
}

spawnheli( var_0, var_1 )
{
    var_2 = "_encstr_BD86075D3FD0DF78B5";
    var_3 = fakestreakinfo();
    var_4 = "_encstr_88B21AD95943D74C63B46BC2BED95DDCB995C9F507E4F63AB7EB6BE0";
    var_5 = "_encstr_A672279D561AE0BE6B96C6FA58D24E7D8936B4B5167D76BA73B92BE4BE6E1D9C95C2ADBE38E4ED3A7B";
    var_6 = 1500;
    var_7 = spawnvehicle( var_5, "_encstr_A4980F4CE4EB9B8358DDB9BEA1951B2DBE" + var_0, var_4, var_1, ( 0, -90, 0 ) );
    var_7.streakinfo = var_3;
    var_7 vehicle_setspeed( 30, 15, 5 );
    var_7 notsolid( 0 );
    var_7 setcandamage( 0 );
    var_7 setscriptablepartstate( "_encstr_B27F071F887829DA85", "_encstr_9707035F3B" );
    var_7 playloopsound( "_encstr_970813590BA33738FF41316877D1B07D294B2BC7BB" );
    var_7.health = var_6;
    var_7.targetpos = level.mapcenter;
    var_7.targetent = undefined;
    var_7.team = "_encstr_BC850785638DA59537";
    var_7.dying = 0;
    var_7.leaving = 0;
    var_7.queuetokens = 0;
    var_7.playerslots = [];
    var_7.playeroffsets = [ ( 32, 30, -135 ), ( -32, 30, -135 ), ( 0, 30, -135 ), ( 16, 30, -135 ), ( -16, 30, -135 ) ];
    var_7.jumpslots = [];

    for ( var_8 = 0; var_8 < 10; var_8++ )
        var_7.jumpslots[var_8] = 0;

    return var_7;
}

getfirstopenjumporigin()
{
    if ( !isdefined( self.jumpslots ) )
        return self.trail[0];

    for ( var_0 = 0; var_0 < 10; var_0++ )
    {
        if ( self.jumpslots[var_0] == 0 )
        {
            self.jumpslots[var_0] = 1;
            return self.trail[var_0];
        }
    }

    return self.trail[9];
}

calctrailpoint()
{
    var_0 = self.origin - anglestoforward( self.angles ) * 150;
    return var_0;
}

helipathmemory()
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self.trail = [];

    for ( var_0 = 0; var_0 < 10; var_0++ )
    {
        var_1 = spawnstruct();
        var_1.origin = self.origin;
        var_1.angles = self.angles;
        self.trail[var_0] = var_1;
    }

    for (;;)
    {
        for ( var_0 = 9; var_0 > 0; var_0-- )
        {
            self.trail[var_0].origin = self.trail[var_0 - 1].origin;
            self.trail[var_0].angles = self.trail[var_0 - 1].angles;
            self.jumpslots[var_0] = self.jumpslots[var_0 - 1];
        }

        self.trail[0].origin = self.origin;
        self.trail[0].angles = self.angles;
        self.jumpslots[0] = 0;
        wait 1.0;
    }
}

fakestreakinfo()
{
    var_0 = spawnstruct();
    var_0.available = 1;
    var_0.firednotify = "_encstr_8C600EDECC9934C2E623EB665AC9CA46";
    var_0.isgimme = 1;
    var_0.kid = 5;
    var_0.lifeid = 0;
    var_0.madeavailabletime = gettime();
    var_0.scriptuseagetype = "_encstr_A35616901050D58F9B9DD153539DF933DB09C32DEA50A76A";
    var_0.streakname = "_encstr_BD86075D3FD0DF78B5";
    var_0.streaksetupinfo = undefined;
    var_0.variantid = -1;
    var_0.weaponname = "_encstr_B3B1167A9BD66F3DD7AC1762A90717F51E2FB6E377CFC80B";
    var_0.objweapon = getcompleteweaponname( var_0.weaponname );
    var_0.hits = 0;
    return var_0;
}

ishelicopterfull( var_0 )
{
    return var_0.playerslots.size == 10;
}

sorthelosize( var_0, var_1 )
{
    return var_0.playerslots.size < var_1.playerslots.size;
}

getnexthelicopterwithroom( var_0 )
{
    if ( level.teambased )
    {
        foreach ( var_2 in level.br_helicopters )
        {
            if ( isdefined( var_2.spawnteam ) && var_2.spawnteam == var_0 && !ishelicopterfull( var_2 ) )
                return var_2;
        }

        foreach ( var_2 in level.br_helicopters )
        {
            if ( !isdefined( var_2.spawnteam ) )
            {
                var_2.spawnteam = var_0;
                return var_2;
            }
        }
    }
    else
    {
        var_6 = scripts\engine\utility::array_sort_with_func( level.br_helicopters, ::sorthelosize );

        foreach ( var_8 in var_6 )
        {
            if ( !ishelicopterfull( var_8 ) )
                return var_8;
        }
    }

    return undefined;
}

kickanyremainingplayers()
{
    foreach ( var_1 in self.playerslots )
    {
        if ( isdefined( var_1 ) && isdefined( var_1.br_infil_type ) && var_1.br_infil_type == "_encstr_95CC05C097BC98" )
        {
            var_1 cameradefault();
            var_1 notify( "_encstr_AA160FA0678C30676294760A619AC3F3B8" );
        }
    }
}

exitandcleanup()
{
    self endon( "_encstr_A3750609A5E61883" );
    level notify( "_encstr_89A60D7903A0D382CFB95217C7E7A4" );
    kickanyremainingplayers();
    self notify( "_encstr_A1470BD932E76CB5B70A39D303" );
    self.leaving = 1;
    var_0 = getent( "_encstr_9DE2100BB7EA20DB2D50BF87FB2DB427CCFD", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_1 = var_0.origin[2];
    var_2 = ( level.br_level.br_mapbounds[0] + level.br_level.br_mapbounds[1] ) * 0.5;
    var_3 = self.origin - var_2;
    var_3 = ( var_3[0], var_3[1], 0 );
    var_4 = vectornormalize( var_3 );
    var_5 = self.origin + var_4 * 10000 + ( 0, 0, 1 ) * var_1;
    var_6 = 150;
    var_7 = 50;
    var_8 = 350;
    self vehicle_setspeed( var_6, var_7, var_7 );
    self setvehgoalpos( var_5, 0 );
    self setneargoalnotifydist( var_8 );
    self waittill( "_encstr_A4D10A68F227A6614FFF4B59" );
    self delete();
}

jumpdone()
{
    foreach ( var_1 in level.br_helicopters )
    {
        if ( isdefined( var_1 ) && var_1.playerslots.size == 0 )
            var_1 thread exitandcleanup();
    }
}
