// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    if ( getdvar( "_encstr_9E700851BEE33DF1B547" ) == "_encstr_8A510E519897A1332E4A3898E243F5B9" )
        return;

    level.tacopssublevel = "_encstr_8F9E089B77EFBBE008B6";
    level.currentmode = "_encstr_8F9E089B77EFBBE008B6";
    setomnvar( "_encstr_8FDF13201A5979B917FF1097CBBFA3337E22783072", level.currentmode );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( scripts\mp\utility\game::getgametype(), 0, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 10 );
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 65 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerdogtagsenableddvar( scripts\mp\utility\game::getgametype(), 1 );
        level.matchrules_damagemultiplier = 0;
        level.matchrules_vampirism = 0;
    }

    updategametypedvars();
    level.teambased = 1;
    level.getspawnpoint = ::getspawnpoint;
    level.onnormaldeath = ::onnormaldeath;
    level.modeonspawnplayer = ::onspawnplayer;
    level.ontimelimit = scripts\mp\gamelogic::default_ontimelimit;

    if ( level.matchrules_damagemultiplier || level.matchrules_vampirism )
        level.modifyplayerdamage = scripts\mp\damage::gamemodemodifyplayerdamage;

    level.conf_fx["_encstr_AAE007D90BB9A5E61A"] = loadfx( "_encstr_97531F35435B48F8877259185C7D98970293B73FBF5227C8AC0183C8C54F10DBCB" );
    _encstr_B9802A4A6EFB4BFF6038FE82F8F0B937E8D0A2BAA0EB12F167A20D5F8C3B18BD4F79CF295F40E5B432DF231F::setup_callbacks();
    _encstr_B9802A4A6EFB4BFF6038FE82F8F0B937E8D0A2BAA0EB12F167A20D5F8C3B18BD4F79CF295F40E5B432DF231F::setup_bot_conf();
    onstartgametype();
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_A8D91DE61B93AF8EBDEBD8F6CDCCF5EE0BB3954E95CD8358EE9B232B6385E5", 5 );
    setdynamicdvar( "_encstr_B112212B5A9B07F8D0C197D7EE33186031AB180ACD936B1A7BB58B0268AF338E5A5490", 10 );
    setdynamicdvar( "_encstr_B72A1ABEDE23BF91974BD8191BBFE865EB42A7CDF26897F846AF60B0", getmatchrulesdata( "_encstr_94F009D8DEE6334458E8C2", "_encstr_9B5711D79F5738112201208028FDEDF1EF2AD1" ) );
    setdynamicdvar( "_encstr_9B97176F907A1FB9306361F70130404DACC021A1B2D9357B67", getmatchrulesdata( "_encstr_94F009D8DEE6334458E8C2", "_encstr_AB030E38ED4BB91DE641AC9388CA732F" ) );
    setdynamicdvar( "_encstr_807D12325E15019B1070936F58095C5AA1E33D2F", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_9E91056EB77B0E", 0 );
    setdynamicdvar( "_encstr_81441183A855792748A8FECFBF33CF3D87686A", 0 );
}

onstartgametype()
{
    level.dogtagallyonusecb = ::dogtagallyonusecb;
    level.dogtagenemyonusecb = ::dogtagenemyonusecb;
    level.extratime = 0;
    setgameendtime( 0 );
    scripts\mp\utility\dvars::setoverridewatchdvar( "_encstr_AA250A1D7CF2EB9071A740A0", 6 );
}

initspawns()
{
    scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_A919048A11A9" );
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_829D16F22B88B3B248E53417B7D83EAF48668A6A307B772A" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_AD3B14F1383781B58DBAC09143624B7B1BEF0FF3893F" );
    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
}

updategametypedvars()
{
    level.overridewatchdvars["_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_821609B9E1100F23EF979F"] = 1;
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
    level.scoreconfirm = scripts\mp\utility\dvars::dvarintvalue( "_encstr_9B5711D79F5738112201208028FDEDF1EF2AD1", 1, 0, 25 );
    level.scoredeny = scripts\mp\utility\dvars::dvarintvalue( "_encstr_AB030E38ED4BB91DE641AC9388CA732F", 0, 0, 25 );
}

getspawnpoint()
{
    var_0 = self.pers["_encstr_89EF05D46BA8FD"];

    if ( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] )
        var_0 = scripts\mp\utility\game::getotherteam( var_0 )[0];

    if ( scripts\mp\spawnlogic::shoulduseteamstartspawn() )
    {
        var_1 = scripts\mp\spawnlogic::getteamspawnpoints( var_0 );
        var_2 = undefined;
    }
    else
    {
        var_1 = scripts\mp\spawnlogic::getteamspawnpoints( var_0 );
        var_3 = scripts\mp\spawnlogic::getteamfallbackspawnpoints( var_0 );
        var_2 = undefined;
    }

    return var_2;
    return var_2;
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4 )
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::oncommonnormaldeath( var_0, var_1, var_2, var_3, var_4 );
}

onspawnplayer()
{
    var_0 = 0;

    if ( self.team == "_encstr_BC850785638DA59537" )
        var_0 = 1;
    else if ( self.team == "_encstr_BA840579D3F7F6" )
        var_0 = 2;

    self setclientomnvar( "_encstr_A2460F57D2FAE80B6CED8337F5A39516B5", var_0 );
}

dogtagallyonusecb( var_0 )
{
    if ( isplayer( var_0 ) )
    {
        var_0 scripts\mp\utility\stats::setextrascore1( var_0.pers["_encstr_954E074A20D55C9771"] );
        var_0 scripts\mp\gamescore::giveteamscoreforobjective( var_0.pers["_encstr_89EF05D46BA8FD"], level.scoredeny, 0 );
    }
}

dogtagenemyonusecb( var_0 )
{
    if ( isplayer( var_0 ) )
    {
        var_0 scripts\mp\utility\dialog::leaderdialogonplayer( "_encstr_A1BA0FAFC8E2E12ED7A0B8307283B0A361", undefined, undefined, undefined, 4 );
        var_0 scripts\mp\utility\stats::setextrascore0( var_0.pers["_encstr_930E0A338F20CFFF66C83A32"] );
    }

    var_0 scripts\mp\gamescore::giveteamscoreforobjective( var_0.pers["_encstr_89EF05D46BA8FD"], level.scoreconfirm, 0 );
}
