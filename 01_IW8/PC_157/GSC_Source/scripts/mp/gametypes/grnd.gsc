// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    if ( getdvar( "_encstr_9E700851BEE33DF1B547" ) == "_encstr_8A510E519897A1332E4A3898E243F5B9" )
        return;

    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    var_0[0] = scripts\mp\utility\game::getgametype();
    var_0[1] = "_encstr_A65B0997EDE92F5A13ABDB";
    scripts\mp\gameobjects::main( var_0 );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( scripts\mp\utility\game::getgametype(), 0, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 600 );
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 7500 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
    }

    updategametypedvars();
    level.teambased = 1;
    level.onstartgametype = ::onstartgametype;
    level.onplayerconnect = ::onplayerconnect;
    level.getspawnpoint = ::getspawnpoint;
    level.modeonspawnplayer = ::onspawnplayer;
    level.onplayerkilled = _encstr_A6471E8BD18667DA6837F78D098A278FA18973D35BD5B745F867A4805D20EADF::onplayerkilled;
    level.onrespawndelay = _encstr_A6471E8BD18667DA6837F78D098A278FA18973D35BD5B745F867A4805D20EADF::getrespawndelay;
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_A4EA120F47127568A9CA710EF78A7837BB97E583";

    if ( getdvarint( "_encstr_B8020A9E9AA69A6292517AA0" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_891904A1D8BE" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];
    else if ( getdvarint( "_encstr_93570B93F4A9629272A825B426" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_889708C9D0E7EBE819D9" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];

    game["_encstr_B8DA073D799798C7C7"]["_encstr_9E240C10CE33016D6AEA39B0F244"] = "_encstr_801C0F89DBDE378EFA3227BDE09EDE9B59";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B3420C3D576AC3C8736F09906BB2"] = "_encstr_801C0F89DBDE378EFA3227BDE09EDE9B59";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_82CF0EC793BAB0234DF2BB739D297055"] = "_encstr_82CF0EC793BAB0234DF2BB739D297055";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B4150DDE894DF5D816E0E85DE45923"] = "_encstr_B4150DDE894DF5D816E0E85DE45923";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_878D10D038EB37ACDDBE36F6C685D12D7B37"] = "_encstr_932110C8E9F573ACEEEBD8DB6C58A3A5ED73";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9C3412601350E6227BEDE3258F7F09E87BB75BAB"] = "_encstr_9D59120A98F79EC7330D455AAD9977A72DC80253";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_ABCF15B8D96FD2074F7D0372FF320E606B3019FE6BB1E2"] = "_encstr_BAFF15C8E9AFC61683E8AB9CCA19FA99C99695CD236397";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_A25E0D3A38076E0F609DC5EBB529EB"] = "_encstr_98F50D28D3B159886D83CD9BC48DC1";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_8CD90D58DB47B8CF6B5F504E351205"] = "_encstr_B1E20D23F4D7D67BB3597D37DEF673";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_8AF313129B3817C62041C5CA13B80F9F5D305ACA02"] = "_encstr_BCC11365FAB77FA9C3503FB514A8E737A1E0182D7F";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_8BAD1628B286A879FA4913522FD53FB7630B40801884F521"] = "_encstr_93FF16055B86E2479A43DD33BADD3F1EC5607BF8A0D945BA";
    setomnvar( "_encstr_B2410DABD050A35AF1F76C41C198E2", -1 );
    setomnvar( "_encstr_A35F101B22CF9B2071CE734BD72610D3831A", 0 );
    setomnvar( "_encstr_AB4910D5D2EB0DE2BEDB77DC2B93D1CA2CDA", -1 );
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_8FBE12B39B40A74133A0114FE40D58432BC06093", getmatchrulesdata( "_encstr_813A092152BEF0F5CA332B", "_encstr_A93809C839EDE0452DB556" ) );
    setdynamicdvar( "_encstr_871D19E7636201443B0A693682730FA0BDFD25BB1A0C4818CB40A6", getmatchrulesdata( "_encstr_813A092152BEF0F5CA332B", "_encstr_B79A10EA38B9E2AD9DAC59CA082842D8D90A" ) );
    setdynamicdvar( "_encstr_9EF61618B21A37615BF6AD08CA07081BCD7AC8205B749BF9", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_AB550D1AE890CF458378127B78F347" ) );
    setdynamicdvar( "_encstr_8F80199F9776B92FD0F02FF96A607E52562B1B1B539EC2D420F867", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_A4CE10EA521B2D81CEE0616B0A37C1E3FF6A" ) );
    setdynamicdvar( "_encstr_B6A922DF5BAAC99CE3C291FE6AA7CE70C38A1F6DC5DE605DF75B098362678881DF048BDB", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_8FE519BE0B480233CAED12AA2DBECB7C80832409AFF0873F89F97B" ) );
    setdynamicdvar( "_encstr_A3B41D0BC63B0FB78D101AA1989FADBF35BE7499E4E16BFC4F08201A50DBA0", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_B34B147AED56109F729B83B5E72BC3F8FE8F01309699" ) );
    setdynamicdvar( "_encstr_BEED1D180FF296B753F555F0CA5A9DB947AF698067B94B636A1DC86E2772ED", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_979F1493857391ED5B62EDB10B47B4F6737A9C23569C" ) );
    setdynamicdvar( "_encstr_B9A719FF287B674AA5705781EFA132E903D0732F51B19F23CB189F", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_939C10162319D21D9667AC35C6DE9C96B9D9" ) );
    setdynamicdvar( "_encstr_AF92132E4EB32F61FA3B5889AB01FBAF6A3BABB9A7", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_82FE0AEBC1553FAF59D36575" ) );
    setdynamicdvar( "_encstr_98CA1547C30261245B6A099632FF69581868F1DB71AF70", getmatchrulesdata( "_encstr_8B0B09AAC55BC99D71DB08", "_encstr_9D210C2D459309DB3AF230881ACA" ) );
    setdynamicdvar( "_encstr_BEAA12BBE1FB0632EB0ACC2E2949C45C5C31318D", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_BC7205C8ABFDE7", 0 );
    setdynamicdvar( "_encstr_AF9911CDC64EAF3B9CDC8CF538C97BADDE46B2", 0 );
}

onstartgametype()
{
    setclientnamemode( "_encstr_95900C2EDBD01F99D6B1DFEB878D" );

    if ( !isdefined( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
        game["_encstr_A6D60EE09BF413B9945185CB4797C583"] = 0;

    foreach ( var_1 in level.teamnamelist )
    {
        scripts\mp\utility\game::setobjectivetext( var_1, &"_encstr_9F4510A18ED4FB36B7BC641B89F72F6FD519" );

        if ( level.splitscreen )
            scripts\mp\utility\game::setobjectivescoretext( var_1, &"_encstr_9F4510A18ED4FB36B7BC641B89F72F6FD519" );
        else
            scripts\mp\utility\game::setobjectivescoretext( var_1, &"_encstr_955316F8199D570F7753A6AD7630D72A2D8161B169FFDA2F" );

        scripts\mp\utility\game::setobjectivehinttext( var_1, &"_encstr_A40414608105DF870FDB2E35CEB84395A3D198988941" );
    }

    level thread setupzones();
    setmapsizespawnconsts();
    initspawns();
    level thread dzmainloop();

    if ( level.droptime > 0 )
        level thread randomdrops();
}

updategametypedvars()
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
    level.droptime = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_A93809C839EDE0452DB556", 15, 0, 60 );
    level.zoneduration = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_AB550D1AE890CF458378127B78F347", 60, 0, 300 );
    level.zonecapturetime = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_A4CE10EA521B2D81CEE0616B0A37C1E3FF6A", 0, 0, 30 );
    level.firstzoneactivationdelay = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_8FE519BE0B480233CAED12AA2DBECB7C80832409AFF0873F89F97B", 30, 0, 120 );
    level.zoneactivationdelay = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_B34B147AED56109F729B83B5E72BC3F8FE8F01309699", 30, 0, 120 );
    level.zonerandomlocationorder = scripts\mp\utility\dvars::dvarintvalue( "_encstr_979F1493857391ED5B62EDB10B47B4F6737A9C23569C", 0, 0, 1 );
    level.zoneadditivescoring = scripts\mp\utility\dvars::dvarintvalue( "_encstr_939C10162319D21D9667AC35C6DE9C96B9D9", 0, 0, 1 );
    level._id_1221A = scripts\mp\utility\dvars::dvarintvalue( "_encstr_82FE0AEBC1553FAF59D36575", 1, 0, 1 );
    level.delayplayer = scripts\mp\utility\dvars::dvarintvalue( "_encstr_9D210C2D459309DB3AF230881ACA", 0, 0, 1 );
    level.enablevariantdrops = scripts\mp\utility\dvars::dvarintvalue( "_encstr_B79A10EA38B9E2AD9DAC59CA082842D8D90A", 0, 0, 1 );
    level.usehqrules = 0;
    level.usehprules = 1;

    if ( scripts\mp\utility\game::matchmakinggame() && !scripts\mp\utility\game::isanymlgmatch() && getdvarint( "_encstr_9DCA253EEB4366474DDBE051B3A50BFA539946357A8F88933EB238F8ABBEE93087365525D45FD2", 15 ) != 0 )
        level.zoneactivationdelay = binoculars_getfov();
}

binoculars_getfov()
{
    var_0 = scripts\cp_mp\utility\game_utility::getmapname();

    switch ( var_0 )
    {
        case "_encstr_AF89088A6177FB3F82EC":
        case "_encstr_A8640D3557CF220D73C043173809C3":
        case "_encstr_ABD70CF89341513127CC92B7AE5F":
            return getdvarint( "_encstr_9DCA253EEB4366474DDBE051B3A50BFA539946357A8F88933EB238F8ABBEE93087365525D45FD2", 15 );
        case "_encstr_B3FB0A309BE727E0D4F143A9":
            return getdvarint( "_encstr_9DCA253EEB4366474DDBE051B3A50BFA539946357A8F88933EB238F8ABBEE93087365525D45FD2", 15 ) + 15;
        default:
            return level.zoneactivationdelay;
    }
}

setmapsizespawnconsts()
{
    var_0 = getsubstr( level.mapname, 0, 7 );

    switch ( var_0 )
    {
        case "_encstr_B3FB0A309BE727E0D4F143A9":
            level.spawn_deadzone_dist = 1000;
            level.close_spawn_min_dist_sq = 10000;
            level.max_spawn_dist_sq = 225000000;
            level.max_relevant_spawn_dist = 7000;
            level.enemy_spawn_influence_dist_sq = 12250000;
            break;
        case "_encstr_8C200C3DB1A98AFBEB6BBA22B0BD":
            level.spawn_deadzone_dist = 500;
            level.close_spawn_min_dist_sq = 10000;
            level.max_spawn_dist_sq = 25000000;
            level.max_relevant_spawn_dist = 6000;
            level.enemy_spawn_influence_dist_sq = 12250000;
            break;
        default:
            level.spawn_deadzone_dist = 1000;
            level.close_spawn_min_dist_sq = 10000;
            level.max_spawn_dist_sq = 25000000;
            level.max_relevant_spawn_dist = 6000;
            level.enemy_spawn_influence_dist_sq = 12250000;
            break;
    }
}

initspawns()
{
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_AA1608C17786F13312D3", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    scripts\mp\spawnlogic::addspawnpoints( game["_encstr_941C0A6AF345075ED05BEAD3"], "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    scripts\mp\spawnlogic::addspawnpoints( game["_encstr_95A70AA81FEE295D3A2F56DE"], "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    var_0 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    var_1 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_9303101723E2CE585F5E839B464B688D6B97", var_0 );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", var_1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_B1090D98F3211171B757B62F41F7F8" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_B1090D98F3211171B757B62F41F7F8" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_930E073E8FC00DDF69", "_encstr_B1090D98F3211171B757B62F41F7F8" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_A30C093385361B4CB06C6D", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997" );
    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
    enablespawnpointbyindex( "_encstr_B1090D98F3211171B757B62F41F7F8" );
    level.spawnpoints = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_B1090D98F3211171B757B62F41F7F8" );

    if ( !level.spawnpoints.size )
        return;

    foreach ( var_3 in level.objectives )
    {
        var_3.furthestspawndistsq = 0;
        var_3.spawnpoints = [];
        var_3.fallbackspawnpoints = [];
    }

    foreach ( var_6 in level.spawnpoints )
    {
        calculatespawndisttozones( var_6 );
        var_7 = scripts\mp\spawnlogic::getoriginidentifierstring( var_6 );

        if ( isdefined( level.grndextraprimaryspawnpoints ) && isdefined( level.grndextraprimaryspawnpoints[var_7] ) )
        {
            foreach ( var_9 in level.grndextraprimaryspawnpoints[var_7] )
            {
                var_3 = level.objectives[var_9];
                var_3.spawnpoints[var_3.spawnpoints.size] = var_6;
            }
        }

        var_11 = 0;
        var_12 = var_6.classname == "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" || var_6.classname == "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071";
        var_13 = var_6.classname == "_encstr_B1090D98F3211171B757B62F41F7F8";
        var_14 = var_6.classname == "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997";

        if ( var_12 )
            continue;

        if ( var_13 || var_14 )
        {
            if ( isdefined( var_6.script_noteworthy ) && var_6.script_noteworthy != "_encstr_A40101" )
            {
                foreach ( var_3 in level.objectives )
                {
                    if ( var_13 )
                    {
                        var_3.spawnpoints[var_3.spawnpoints.size] = var_6;
                        continue;
                    }

                    var_3.fallbackspawnpoints[var_3.fallbackspawnpoints.size] = var_6;
                }
            }
        }

        calculatespawndisttozones( var_6 );

        if ( !var_11 )
        {
            foreach ( var_3 in level.objectives )
            {
                if ( var_6.scriptdata.distsqtokothzones[var_3.trigger getentitynumber()] < level.close_spawn_min_dist_sq || var_6.scriptdata.distsqtokothzones[var_3.trigger getentitynumber()] > level.max_spawn_dist_sq )
                    var_6.removespawn = 1;

                if ( var_13 )
                {
                    if ( !isdefined( var_6.removespawn ) )
                        var_3.spawnpoints[var_3.spawnpoints.size] = var_6;
                }
                else
                    var_3.fallbackspawnpoints[var_3.fallbackspawnpoints.size] = var_6;

                var_6.removespawn = undefined;
            }
        }
    }

    foreach ( var_21, var_3 in level.objectives )
    {
        var_3.spawnset = "_encstr_A8680A138B38B7DD17F852A9" + var_21;
        scripts\mp\spawnlogic::registerspawnset( var_3.spawnset, var_3.spawnpoints );
        var_3.fallbackspawnset = "_encstr_880C1312BAAF0822672043DE95CA8861163333785F" + var_21;
        scripts\mp\spawnlogic::registerspawnset( var_3.fallbackspawnset, var_3.fallbackspawnpoints );
    }
}

calculatespawndisttozones( var_0, var_1 )
{
    var_0.scriptdata.distsqtokothzones = [];

    foreach ( var_3 in level.objectives )
    {
        var_4 = getpathdist( var_0.origin, var_3.origin, level.max_relevant_spawn_dist );

        if ( var_4 < 0 )
            var_4 = scripts\engine\utility::distance_2d_squared( var_0.origin, var_3.origin );
        else
            var_4 = var_4 * var_4;

        var_0.scriptdata.distsqtokothzones[var_3.trigger getentitynumber()] = var_4;

        if ( var_4 > var_3.furthestspawndistsq )
            var_3.furthestspawndistsq = var_4;
    }
}

comparezoneindexes( var_0, var_1 )
{
    var_2 = int( var_0.objectivekey );
    var_3 = int( var_1.objectivekey );

    if ( !isdefined( var_2 ) && !isdefined( var_3 ) )
        return 0;

    if ( !isdefined( var_2 ) && isdefined( var_3 ) )
        return 1;

    if ( isdefined( var_2 ) && !isdefined( var_3 ) )
        return 0;

    if ( var_2 > var_3 )
        return 1;

    return 0;
}

getzonearray( var_0 )
{
    var_1 = getentarray( var_0, "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_3 in var_1 )
        var_3.objectivekey = var_3.script_label;

    if ( !isdefined( var_1 ) || var_1.size == 0 )
        return undefined;

    var_5 = 1;

    for ( var_6 = var_1.size; var_5; var_6-- )
    {
        var_5 = 0;

        for ( var_7 = 0; var_7 < var_6 - 1; var_7++ )
        {
            if ( comparezoneindexes( var_1[var_7], var_1[var_7 + 1] ) )
            {
                var_8 = var_1[var_7];
                var_1[var_7] = var_1[var_7 + 1];
                var_1[var_7 + 1] = var_8;
                var_5 = 1;
            }
        }
    }

    return var_1;
}

setupzones()
{
    var_0 = getzonearray( "_encstr_BC7205C8ABFDE7" );

    if ( level.mapname == "_encstr_A4870E72AB086BF4A87FA1AC03B8FD17" )
    {
        foreach ( var_2 in var_0 )
        {
            if ( distance( var_2.origin, ( -1547, -1512, 165 ) ) < 10 )
                var_2.origin = var_2.origin - ( 0, 0, 10 );
        }
    }
    else if ( level.mapname == "_encstr_B3FB0A309BE727E0D4F143A9" )
    {
        foreach ( var_2 in var_0 )
        {
            if ( distance( var_2.origin, ( -1117, 2295, 398 ) ) < 10 )
            {
                var_2.origin = var_2.origin - ( 0, 0, 10 );
                continue;
            }

            if ( distance( var_2.origin, ( -4501, -2, 322 ) ) < 10 )
            {
                var_2.script_label = "_encstr_AA4C024B";
                continue;
            }

            if ( distance( var_2.origin, ( -4474, 1159, 388 ) ) < 10 )
                var_2.origin = var_2.origin - ( 0, 0, 20 );
        }
    }

    var_6 = [];
    var_7 = scripts\engine\utility::getstructarray( "_encstr_A65B0997EDE92F5A13ABDB", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_8 = [];
    var_9 = [];

    if ( level.mapname == "_encstr_8C200C3DB1A98AFBEB6BBA22B0BD" )
    {
        foreach ( var_2 in var_0 )
        {
            if ( var_2.script_label == "_encstr_AF4C02EA" && distance( var_2.origin, ( -333, 1999, 119 ) ) < 5 )
            {
                var_8[var_8.size] = var_2;
                continue;
            }

            if ( var_2.script_label == "_encstr_9B4C028A" && distance( var_2.origin, ( 189, 1564, 75 ) ) < 5 )
            {
                var_8[var_8.size] = var_2;
                continue;
            }

            if ( var_2.script_label == "_encstr_A94C0242" && distance( var_2.origin, ( -751, 2416, 81 ) ) < 5 )
            {
                var_8[var_8.size] = var_2;
                continue;
            }

            if ( var_2.script_label == "_encstr_B94C02A9" && distance( var_2.origin, ( 165, 2420, 79 ) ) < 5 )
            {
                var_8[var_8.size] = var_2;
                continue;
            }

            if ( var_2.script_label == "_encstr_BD4C02AB" && distance( var_2.origin, ( -823, 1536, 68 ) ) < 5 )
                var_8[var_8.size] = var_2;
        }

        var_0 = scripts\engine\utility::array_remove_array( var_0, var_8 );

        foreach ( var_13 in var_7 )
        {
            if ( distance( var_13.origin, ( 192.944, 1583.51, 16.344 ) ) < 5 )
            {
                var_9[var_9.size] = var_13;
                continue;
            }

            if ( distance( var_13.origin, ( -743.056, 2447.51, 17.844 ) ) < 5 )
            {
                var_9[var_9.size] = var_13;
                continue;
            }

            if ( distance( var_13.origin, ( 152.944, 2415.51, 16.344 ) ) < 5 )
            {
                var_9[var_9.size] = var_13;
                continue;
            }

            if ( distance( var_13.origin, ( -334.5, 1990.5, 17.25 ) ) < 5 )
            {
                var_9[var_9.size] = var_13;
                continue;
            }

            if ( distance( var_13.origin, ( -751.056, 1479.51, 16.844 ) ) < 5 )
                var_9[var_9.size] = var_13;
        }

        var_7 = scripts\engine\utility::array_remove_array( var_7, var_9 );
    }
    else if ( level.mapname == "_encstr_8B2B0B9833AFE02BC3C7E6785A" )
    {
        foreach ( var_13 in var_7 )
        {
            if ( distance( var_13.origin, ( 4491, -942, 183.25 ) ) < 5 )
                var_9[var_9.size] = var_13;
        }

        var_7 = scripts\engine\utility::array_remove_array( var_7, var_9 );
    }
    else if ( level.mapname == "_encstr_9E320DED4796D72CA908E2AAF8AF67" )
    {
        foreach ( var_13 in var_7 )
        {
            if ( distance( var_13.origin, ( 99, 830.5, 11.25 ) ) < 5 )
            {
                var_13.origin = ( -22.5, 86.5, 11 );
                continue;
            }

            if ( distance( var_13.origin, ( -531.5, -485.5, 11.25 ) ) < 5 )
            {
                var_13.origin = ( 265, 845.5, 10 );
                continue;
            }

            if ( distance( var_13.origin, ( -586, 567.5, 11.25 ) ) < 5 )
            {
                var_13.origin = ( -339.5, -509.5, 10 );
                continue;
            }

            if ( distance( var_13.origin, ( -38, -738.5, 11.25 ) ) < 5 )
                var_13.origin = ( -452, 599.5, 10 );
        }
    }

    foreach ( var_13 in var_7 )
    {
        var_20 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_13.origin );
        var_20.angles = var_13.angles;
        var_20 setmodel( "_encstr_9E6814C8A7FA991B0BC959F5CD8D39A5E047C24CD8B2" );
        var_13.scriptable = var_20;
    }

    var_22 = [];
    level.objectives = [];

    for ( var_23 = 0; var_23 < var_7.size; var_23++ )
    {
        var_24 = 0;
        var_13 = var_7[var_23];
        var_2 = undefined;

        for ( var_25 = 0; var_25 < var_0.size; var_25++ )
        {
            if ( var_13.scriptable istouching( var_0[var_25] ) )
            {
                if ( isdefined( var_2 ) )
                {
                    var_6[var_6.size] = "_encstr_98690A7A78DB8A8709B774D8" + var_13.origin + "_encstr_81B232A6E847964B7835EBE8C3A0FF5E93400B4A0A11FC5770B7FF16ED41A29729D893C2D0B57497090DEA5257933B9C57506A2B";
                    var_24 = 1;
                    break;
                }

                var_2 = var_0[var_25];
                break;
            }
        }

        if ( !isdefined( var_2 ) )
        {
            if ( !var_24 )
            {
                var_6[var_6.size] = "_encstr_98690A7A78DB8A8709B774D8" + var_13.origin + "_encstr_ADC02A1182DF1F78DD74B923860298F52FAEB140EBEA46703579E523A42AD0CCFF126B41E613A6308F57C305";
                continue;
            }
        }

        var_22 = [];
        var_22[0] = var_13.scriptable;
        var_26 = _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::setupobjective( var_2, var_22 );
        var_26.origin = var_2.origin;
        level.objectives[var_26.objectivekey] = var_26;
    }

    if ( var_6.size > 0 )
    {
        for ( var_23 = 0; var_23 < var_6.size; var_23++ )
        {

        }
    }
    else
    {

    }
}

dzmainloop()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    seticonnames();
    initwaypointicons();
    setomnvar( "_encstr_8F3A1BEB90107F5E981BBB943B40A7772D08E2121BC8B793D859A08DC9", 1 );
    setomnvar( "_encstr_B1A313BA4BBE86C2C93238DE4B9B3ABE475AD6B29C", 0 );
    level.zone = getfirstzone();
    var_0 = 1;
    level.kothhillrotation = 0;

    if ( !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        level scripts\engine\utility::_id_143A5( "_encstr_989F0E38272BD6161DB143F532BDDC2B", "_encstr_8B5511DC1D16398EAF5BF68CACBECDB21DAB07" );

    level.zone _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::activatezone();
    level.favorclosespawnent = level.zone;
    level.zone.active = 1;
    level.zone scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
    level.zone scripts\mp\gameobjects::setobjectivestatusicons( level.icontarget );
    level.zone thread scripts\common\utility::_id_13E0A( level._id_11B29, "_encstr_BCA40BDBAB41B22F6B88C30FC1", level.zone.trigger.origin );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    setomnvar( "_encstr_8F3A1BEB90107F5E981BBB943B40A7772D08E2121BC8B793D859A08DC9", 0 );
    var_1 = 0;

    if ( level.firstzoneactivationdelay )
    {
        var_1 = 1;
        level.zoneendtime = int( gettime() + level.firstzoneactivationdelay * 1000 );
        setomnvar( "_encstr_B1A313BA4BBE86C2C93238DE4B9B3ABE475AD6B29C", level.zoneendtime );
        setomnvar( "_encstr_B2410DABD050A35AF1F76C41C198E2", 6 );
        level._id_14726 = 1;
        level thread scripts\mp\hud_message::updatematchstatushintforallplayers( undefined, 42, 42 );
        level.zone thread _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::_id_1199E( level.firstzoneactivationdelay, level.zone.curorigin + level.zone.offset3d );
        wait( level.firstzoneactivationdelay );
        level._id_14726 = 0;
        level thread scripts\mp\hud_message::updatematchstatushintforallplayers( undefined, 41, 41 );
    }

    scripts\mp\utility\sound::playsoundonplayers( "_encstr_930A143DB1A94F93E86BCB82B035EF45B86D97B62340" );

    for (;;)
    {
        if ( !isdefined( level._id_11AD5 ) )
            level thread setupzonecallouts();

        level.zone.visuals[0] setscriptablepartstate( "_encstr_BE72069FCF8ACAA8", "_encstr_9BC505B4461BB2", 0 );
        level.objectivesetorder = 1;
        waittillframeend;
        level.zone scripts\mp\gameobjects::enableobject();
        level.zone.capturecount = 0;

        if ( level.codcasterenabled )
            level.zone thread _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::trackgametypevips();

        scripts\mp\spawnlogic::clearlastteamspawns();
        hqactivatenextzone( var_1, var_0 );
        var_0 = 0;
        var_1 = 0;
        setomnvar( "_encstr_B2410DABD050A35AF1F76C41C198E2", 8 );
        scripts\mp\spawnlogic::clearlastteamspawns();
        hpcaptureloop();
        var_2 = level.zone scripts\mp\gameobjects::getownerteam();

        if ( level._id_1221A )
            level scripts\mp\gamelogic::resumetimer();

        level.lastcaptureteam = undefined;
        level.zone.active = 0;

        if ( istrue( level.usehpzonebrushes ) )
        {
            foreach ( var_4 in level.players )
                level.zone _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::hideplayerspecificbrushes( var_4 );
        }

        level.zone scripts\mp\gameobjects::disableobject();
        level.zone scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
        level.zone scripts\mp\gameobjects::setownerteam( "_encstr_9BA4080D39CFFB5AB7C1" );
        updateservericons( "_encstr_82270B4FDE3795FAB9D05A993A", 0 );
        level notify( "_encstr_AD740BDA4DF6B030833F577313" );
        setomnvar( "_encstr_B2410DABD050A35AF1F76C41C198E2", -1 );
        spawn_next_zone();

        if ( scripts\mp\utility\game::getgametype() == "_encstr_BC7205C8ABFDE7" && level.kothhillrotation == 1 )
        {

        }

        setomnvar( "_encstr_B2410DABD050A35AF1F76C41C198E2", -1 );
        wait 1;
    }
}

getfirstzone()
{
    if ( level.mapname == "_encstr_942B0BAD07AFA116399134B03A" )
    {
        var_0 = level.objectives["_encstr_BD4C02AB"];
        level.prevzoneindex = 5;
    }
    else
    {
        var_0 = level.objectives["_encstr_AF4C02EA"];
        level.prevzoneindex = 1;
    }

    return var_0;
}

getnextzone()
{
    if ( level.zonerandomlocationorder )
    {
        var_0 = [];

        foreach ( var_2 in level.teamnamelist )
            var_0[var_2] = ( 0, 0, 0 );

        var_4 = scripts\mp\utility\game::getpotentiallivingplayers();

        foreach ( var_6 in var_4 )
        {
            if ( var_6.team == "_encstr_A68C0A5803A5D151A2B310A6" )
                continue;

            var_0[var_6.team] = var_0[var_6.team] + var_6.origin;
        }

        var_8 = [];

        foreach ( var_2 in level.teamnamelist )
        {
            var_10 = scripts\mp\utility\teams::getteamdata( var_2, "_encstr_8875080E3685E52B93B9" );
            var_11 = max( var_10.size, 1 );
            var_8[var_2] = var_0[var_2] / var_11;
        }

        if ( !isdefined( level.prevzonelist ) || isdefined( level.prevzonelist ) && level.prevzonelist.size == level.objectives.size - 1 )
            level.prevzonelist = [];

        level.prevzonelist[level.prevzonelist.size] = level.prevzoneindex;
        var_13 = 0.7;
        var_14 = 0.3;
        var_15 = undefined;
        var_16 = undefined;

        foreach ( var_18 in level.objectives )
        {
            var_19 = 0;

            foreach ( var_21 in level.prevzonelist )
            {
                if ( var_18.objectivekey == scripts\engine\utility::string( var_21 ) )
                {
                    var_19 = 1;
                    break;
                }
            }

            if ( var_19 )
                continue;

            var_23 = var_18;
            var_24 = 0;

            foreach ( var_2 in level.teamnamelist )
                var_24 = var_24 + distance2dsquared( var_23.curorigin, var_8[var_2] );

            var_27 = distance2dsquared( var_23.curorigin, level.zone.curorigin );
            var_28 = var_24 * var_13 + var_27 * var_14;

            if ( !isdefined( var_16 ) || var_28 > var_16 )
            {
                var_16 = var_28;
                var_15 = var_18.objectivekey;
            }
        }

        var_23 = level.objectives[var_15];
        level.prevzoneindex = var_15;
    }
    else
    {
        level.prevzoneindex++;

        if ( level.prevzoneindex > level.objectives.size )
            level.prevzoneindex = 1;

        var_23 = level.objectives[scripts\engine\utility::string( level.prevzoneindex )];
    }

    return var_23;
}

spawn_next_zone()
{
    writecurrentrotationteamscore();
    level.zone.visuals[0] setscriptablepartstate( "_encstr_BE72069FCF8ACAA8", "_encstr_9819045FD029", 0 );
    level.zone _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::deactivatezone();
    level.zone = getnextzone();
    level.kothhillrotation++;
    level.zone _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::activatezone();
    level.favorclosespawnent = level.zone;
    level.zone.active = 1;
    level.zone.lastactivatetime = gettime();

    if ( level.zoneactivationdelay > 0 )
        level.zone scripts\mp\gameobjects::setobjectivestatusicons( level.icontarget );
    else
        level.zone scripts\mp\gameobjects::setobjectivestatusicons( level.iconneutral );

    level.zone thread scripts\common\utility::_id_13E0A( level._id_11B29, "_encstr_BCA40BDBAB41B22F6B88C30FC1", level.zone.trigger.origin );
}

hqactivatenextzone( var_0, var_1 )
{
    if ( var_1 )
    {
        foreach ( var_3 in level.teamnamelist )
            scripts\mp\utility\dialog::statusdialog( "_encstr_878314F62635AFD959CDAC4E4B1BFAB158381DBA27CA", var_3 );
    }
    else
    {
        foreach ( var_3 in level.teamnamelist )
            scripts\mp\utility\dialog::statusdialog( "_encstr_878D10D038EB37ACDDBE36F6C685D12D7B37", var_3 );
    }

    scripts\mp\utility\sound::playsoundonplayers( "_encstr_930A143DB1A94F93E86BCB82B035EF45B86D97B62340" );
    level.zone thread _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::hardpoint_setneutral();
    level.zone scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );

    if ( istrue( var_0 ) )
    {

    }
    else if ( level.zoneactivationdelay )
    {
        level.zone scripts\mp\gameobjects::setobjectivestatusicons( level.icontarget );
        updateservericons( "_encstr_B451162D673A6D1989367BD09B71B893C2FBEFA9E7422760", 0 );
        level.zoneendtime = int( gettime() + 1000 * level.zoneactivationdelay );
        setomnvar( "_encstr_B1A313BA4BBE86C2C93238DE4B9B3ABE475AD6B29C", level.zoneendtime );
        setomnvar( "_encstr_B2410DABD050A35AF1F76C41C198E2", 6 );
        level._id_14726 = 1;
        level thread scripts\mp\hud_message::updatematchstatushintforallplayers( undefined, 42, 42 );
        level.zone thread _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::_id_1199E( level.zoneactivationdelay, level.zone.curorigin + level.zone.offset3d );
        wait( level.zoneactivationdelay );
        level._id_14726 = 0;
        level thread scripts\mp\hud_message::updatematchstatushintforallplayers( undefined, 41, 41 );
    }

    level.zone scripts\mp\gameobjects::setobjectivestatusicons( level.iconneutral );
    updateservericons( "_encstr_9BA4080D39CFFB5AB7C1", 0 );

    if ( level.zoneduration )
    {
        updateservericons( "_encstr_9BA4080D39CFFB5AB7C1", 0 );
        thread movezoneaftertime( level.zoneduration );
        level.zoneendtime = int( gettime() + 1000 * level.zoneduration );
        setomnvar( "_encstr_B1A313BA4BBE86C2C93238DE4B9B3ABE475AD6B29C", level.zoneendtime );
    }
    else
        level.zonedestroyedbytimer = 0;
}

locktimeruntilcap()
{
    level endon( "_encstr_ABC30E6A97B36DD93BB6927BC35DC801" );

    for (;;)
    {
        level.zoneendtime = int( gettime() + 1000 * level.zoneduration );
        setomnvar( "_encstr_B1A313BA4BBE86C2C93238DE4B9B3ABE475AD6B29C", level.zoneendtime );
        waitframe();
    }
}

hpcaptureloop()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_8FBD0BBA97A04F464F80533BE4" );
    level.hpstarttime = gettime();

    for (;;)
    {
        level.zone scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );
        level.zone scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
        level.zone scripts\mp\gameobjects::setusetext( &"_encstr_828E1539F01ECF237EE1298928075FE7C75BB30D717794" );
        level.zone thread _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::hardpoint_setneutral();
        level.zone scripts\mp\gameobjects::cancontestclaim( 1 );

        if ( isdefined( level.matchrules_droptime ) && level.matchrules_droptime )
            level thread randomdrops();

        var_0 = level scripts\engine\utility::_id_143AD( "_encstr_ABC30E6A97B36DD93BB6927BC35DC801", "_encstr_8C9C0F90B8CD42479108E7E3A8A8290AA1" );

        if ( var_0 == "_encstr_8C9C0F90B8CD42479108E7E3A8A8290AA1" )
            continue;

        var_1 = level.zone scripts\mp\gameobjects::getownerteam();
        scripts\mp\utility\sound::playsoundonplayers( "_encstr_87FE1EB583BEC89CDE07D3DB73B2AF8D0B07A3BAC995237D07F6E6D21D5A9D95", var_1 );
        scripts\mp\utility\sound::playsoundonplayers( "_encstr_8F881E558930E1EB1D0AE0CF5D8771EFE908939BDBF81DFFEA5BD839F3A83BD7", scripts\mp\utility\game::getotherteam( var_1 )[0] );
        thread updaterespawntimer();
        level waittill( "_encstr_8C9C0F90B8CD42479108E7E3A8A8290AA1", var_2 );
        level.spawndelay = undefined;

        if ( isdefined( var_2 ) )
        {
            level.zone scripts\mp\gameobjects::setownerteam( var_2 );
            continue;
        }

        level.zone scripts\mp\gameobjects::setownerteam( "_encstr_AABA05236DC831" );
    }
}

awardcapturepoints()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_AD740BDA4DF6B030833F577313" );
    level endon( "_encstr_8FBD0BBA97A04F464F80533BE4" );
    level notify( "_encstr_82DD1A593B8F5A325B0A4B4B8538D1CADFF860EDC27BAB60C23840C4" );
    level endon( "_encstr_82DD1A593B8F5A325B0A4B4B8538D1CADFF860EDC27BAB60C23840C4" );
    var_0 = 1;
    var_1 = 1;

    while ( !level.gameended )
    {
        var_2 = 0.0;

        while ( var_2 < var_0 )
        {
            waitframe();
            scripts\mp\hostmigration::waittillhostmigrationdone();
            var_2 = var_2 + level.framedurationseconds;

            if ( level.zone.stalemate )
                var_2 = 0.0;
        }

        var_3 = level.zone scripts\mp\gameobjects::getownerteam();

        if ( var_3 == "_encstr_9BA4080D39CFFB5AB7C1" )
            continue;

        if ( !level.zone.stalemate && !level.gameended )
        {
            if ( level.zoneadditivescoring )
                var_1 = level.zone.touchlist[var_3].size;

            scripts\mp\gamescore::giveteamscoreforobjective( var_3, var_1, 0 );

            foreach ( var_5 in level.zone.touchlist[var_3] )
            {
                var_5.player scripts\mp\utility\stats::incpersstat( "_encstr_B9F50890960B9B01773F", 1 );

                if ( isdefined( var_5.player.timebyrotation[level.kothhillrotation] ) )
                    var_5.player.timebyrotation[level.kothhillrotation]++;
                else
                    var_5.player.timebyrotation[level.kothhillrotation] = 1;

                var_5.player scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_B9F50890960B9B01773F", var_5.player.pers["_encstr_B9F50890960B9B01773F"] );
                var_5.player scripts\mp\utility\stats::setextrascore0( var_5.player.pers["_encstr_B9F50890960B9B01773F"] );
                var_5.player scripts\mp\gamescore::giveplayerscore( "_encstr_941E0C34D0799B9EBC4816D20E75", 10 );
            }
        }
    }
}

movezoneaftertime( var_0 )
{
    level notify( "_encstr_8A8A0F37A316C947A9DE3BCAA8A5AD564E" );
    level endon( "_encstr_8A8A0F37A316C947A9DE3BCAA8A5AD564E" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_AD740BDA4DF6B030833F577313" );
    level endon( "_encstr_A8940F52FD985753FF7BD6978F6B784095" );
    level.zonemovetime = var_0;
    level.zonedestroyedbytimer = 0;
    _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::zonetimerwait();
    level.zonedestroyedbytimer = 1;
    level notify( "_encstr_8FBD0BBA97A04F464F80533BE4" );
    level notify( "_encstr_8C9C0F90B8CD42479108E7E3A8A8290AA1" );
}

give_capture_credit( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level.lastcaptime = gettime();
    var_6 = var_4;

    if ( isdefined( var_6.owner ) )
        var_6 = var_6.owner;

    if ( isplayer( var_6 ) )
    {
        if ( !isscoreboosting( var_6 ) )
        {
            var_6 thread scripts\common\utility::_id_13E0A( level._id_11B29, "_encstr_9EEB08EFAF2B15984A67", var_6.origin );
            var_6 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_8BC30B9BD8E67302F9257BB285" );

            if ( isdefined( level.zone.lastactivatetime ) && gettime() - level.zone.lastactivatetime <= 2100 )
                var_6 thread scripts\mp\awards::givemidmatchaward( "_encstr_88D912C52869F2F7A030C70760F8835A47B64E3A" );

            if ( var_6.lastkilltime + 500 > gettime() )
            {

            }
            else
                var_6 _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::setcrankedtimerzonecap( var_6 );
        }
    }

    var_7 = getarraykeys( var_0 );

    for ( var_8 = 0; var_8 < var_7.size; var_8++ )
    {
        var_9 = var_0[var_7[var_8]].player;
        var_9 updatecapsperminute( var_3 );

        if ( !isscoreboosting( var_9 ) )
        {
            var_9 scripts\mp\utility\stats::incpersstat( "_encstr_B2CF0967600940A373E78A", 1 );
            var_9 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_B2CF0967600940A373E78A", var_9.pers["_encstr_B2CF0967600940A373E78A"] );
        }
        else
        {

        }

        if ( var_6 != var_9 )
        {
            var_9 thread scripts\mp\rank::scoreeventpopup( "_encstr_B4E10FFA31980C9B02C179617678BC6BCB" );
            var_9 thread scripts\mp\awards::givemidmatchaward( "_encstr_B17E17E557A8D7EFA5707259DB0D478B703B5F71C7A81C9755" );
            var_9 _encstr_A3AF295A720B1BB083470E19BA8DA05741F2A5115190082D0F02834652F7680DBEFA53FC28F3477A6757D8::setcrankedtimerzonecap( var_9 );
        }

        wait 0.05;
    }
}

randomdrops()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    level.grnd_previouscratetypes = [];

    for (;;)
    {
        var_0 = getbestplayer();
        var_1 = 1;

        if ( isdefined( var_0 ) && scripts\mp\utility\killstreak::currentactivevehiclecount() < scripts\mp\utility\killstreak::maxvehiclesallowed() && level.fauxvehiclecount + var_1 < scripts\mp\utility\killstreak::maxvehiclesallowed() && scripts\cp_mp\killstreaks\airdrop::getnumdroppedcrates() < 8 )
        {
            var_2 = getdropzonecratetype();
            var_3 = getnodesintrigger( level.zone.trigger );

            if ( level.mapname == "_encstr_9E320DED4796D72CA908E2AAF8AF67" )
                var_4 = relic_shieldsonly_set_player_stats_after_spawn();
            else
                var_4 = relic_shieldsonly_set_player_stats_after_spawn() + ( randomintrange( -50, 50 ), randomintrange( -50, 50 ), 0 );

            if ( var_2 == "_encstr_81A205575DEFB6" )
            {
                var_5 = spawnstruct();
                var_5.cratetype = undefined;
                var_5.numcrates = undefined;
                var_5.usephysics = undefined;
                scripts\cp_mp\killstreaks\airdrop_multiple::airdrop_multiple_dropcrates( var_0, var_0.team, var_4, randomfloat( 360 ), var_4, var_5 );
            }
            else
            {
                scripts\cp_mp\vehicles\vehicle_tracking::reservevehicle();
                scripts\cp_mp\killstreaks\airdrop::dropkillstreakcratefromscriptedheli( var_0, var_0.team, var_2, var_4, randomfloat( 360 ), var_4, 1 );
            }

            var_6 = level.droptime;
        }
        else
            var_6 = 0.5;

        scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( var_6 );
    }
}

_id_132F5( var_0 )
{
    if ( var_0 == "_encstr_81A205575DEFB6" )
        return 0;

    if ( level.mapname == "_encstr_AD2D0A28831FF3FB02761025" )
    {
        if ( isdefined( level.zone.trigger.script_label ) && level.zone.trigger.script_label == "_encstr_B94C02A9" )
            return 0;
    }
    else if ( issubstr( level.mapname, "_encstr_B3FB0A309BE727E0D4F143A9" ) )
    {
        if ( isdefined( level.zone.trigger.script_label ) && level.zone.trigger.script_label == "_encstr_AF4C02EA" )
            return 0;
    }
    else if ( level.mapname == "_encstr_AF89088A6177FB3F82EC" )
    {
        if ( isdefined( level.zone.trigger.script_label ) && level.zone.trigger.script_label == "_encstr_8B4C02A3" )
            return 0;
    }
    else if ( level.mapname == "_encstr_984D0DC87A37E8DD33B35F475B8A95" )
    {
        if ( isdefined( level.zone.trigger.script_label ) && level.zone.trigger.script_label == "_encstr_AF4C02EA" )
            return 0;
    }
    else if ( issubstr( level.mapname, "_encstr_ABB70B99404F38FBE6F23878CB" ) )
    {
        if ( isdefined( level.zone.trigger.script_label ) && level.zone.trigger.script_label == "_encstr_B94C02A9" )
            return 0;
    }
    else if ( issubstr( level.mapname, "_encstr_8C200C3DB1A98AFBEB6BBA22B0BD" ) )
    {
        if ( isdefined( level.zone.trigger.script_label ) && level.zone.trigger.script_label == "_encstr_AF4C02EA" )
            return 0;
    }
    else if ( issubstr( level.mapname, "_encstr_B7960C6AFB87E5ED88303BD1E848" ) )
        return 0;
    else if ( level.mapname == "_encstr_BA2D0C1A1889F6509358B288911B" )
    {
        if ( isdefined( level.zone.trigger.script_label ) && level.zone.trigger.script_label == "_encstr_BD4C02AB" )
            return 0;
    }

    return 1;
}

relic_shieldsonly_set_player_stats_after_spawn()
{
    if ( level.mapname == "_encstr_AD2D0A28831FF3FB02761025" && isdefined( level.zone.trigger.script_label ) && level.zone.trigger.script_label == "_encstr_B94C02A9" )
        return ( 1760, 701, 122 );
    else if ( level.mapname == "_encstr_B7960C6AFB87E5ED88303BD1E848" && isdefined( level.zone.trigger.script_label ) )
    {
        switch ( level.zone.trigger.script_label )
        {
            case "_encstr_AF4C02EA":
                return ( -732, -136, 608 );
            case "_encstr_9B4C028A":
                return ( 672, -1336, 608 );
            case "_encstr_A94C0242":
                return ( 44, 968, 608 );
            case "_encstr_B94C02A9":
                return ( -680, -1552, 608 );
            case "_encstr_BD4C02AB":
                return ( 832, 4, 608 );
        }
    }
    else if ( level.mapname == "_encstr_BA2D0C1A1889F6509358B288911B" && isdefined( level.zone.trigger.script_label ) && level.zone.trigger.script_label == "_encstr_BD4C02AB" )
        return ( -346, -2368, 66 );
    else if ( level.mapname == "_encstr_AA1D0948FAB7A85DD37FE9" && isdefined( level.zone.trigger.script_label ) && level.zone.trigger.script_label == "_encstr_9B4C028A" )
        return ( -2057, 1042, 150 );
    else if ( level.mapname == "_encstr_B1110BDDD007984FF3EB671D71" && isdefined( level.zone.trigger.script_label ) && level.zone.trigger.script_label == "_encstr_A94C0242" )
        return ( -100, 1780, 82 );
    else if ( level.mapname == "_encstr_9E320DED4796D72CA908E2AAF8AF67" && isdefined( level.zone.trigger.script_label ) )
    {
        switch ( level.zone.trigger.script_label )
        {
            case "_encstr_AF4C02EA":
                var_0 = [ ( -589, -479, 68 ), ( 289, 830, 68 ), ( -589, -479, 68 ), ( 301, 525, 68 ) ];
                var_1 = scripts\engine\utility::random( var_0 );
                return var_1;
            case "_encstr_9B4C028A":
                return ( 289, 830, 68 );
            case "_encstr_A94C0242":
                return ( -589, -479, 68 );
            case "_encstr_B94C02A9":
                return ( -301, 525, 68 );
        }
    }

    return level.zone.origin;
}

getbestplayer()
{
    var_0 = undefined;
    var_1 = 0;
    var_2 = level.zone scripts\mp\gameobjects::getownerteam();

    if ( var_2 == "_encstr_9BA4080D39CFFB5AB7C1" )
        return var_0;

    foreach ( var_4 in level.zone.touchlist[var_2] )
    {
        if ( var_1 == 0 || var_1 > var_4.starttime )
        {
            var_1 = var_4.starttime;
            var_0 = var_4.player;
        }
    }

    return var_0;
}

getdropzonecratetype()
{
    var_0 = undefined;

    if ( level.mapname != "_encstr_9E320DED4796D72CA908E2AAF8AF67" && !isdefined( level.grnd_previouscratetypes["_encstr_81A205575DEFB6"] ) && randomintrange( 0, 100 ) < 5 )
        var_0 = "_encstr_81A205575DEFB6";
    else
    {
        if ( level.grnd_previouscratetypes.size )
        {
            for ( var_1 = 200; var_1; var_1-- )
            {
                var_0 = scripts\cp_mp\killstreaks\airdrop::getrandomkillstreak();

                if ( isdefined( level.grnd_previouscratetypes[var_0] ) )
                {
                    var_0 = undefined;
                    continue;
                }

                break;
            }
        }

        if ( !isdefined( var_0 ) )
            var_0 = scripts\cp_mp\killstreaks\airdrop::getrandomkillstreak();
    }

    level.grnd_previouscratetypes[var_0] = 1;

    if ( level.grnd_previouscratetypes.size == 15 )
        level.grnd_previouscratetypes = [];

    return var_0;
}

getspawnpoint()
{
    var_0 = self.pers["_encstr_89EF05D46BA8FD"];
    var_1 = getobjzonedeadzonedist();
    var_2 = [];
    var_2["_encstr_9EE315300A23938BDF1BF075201B9055CF4018A8F2BF1D"] = level.zone.visuals[0] getentitynumber();
    var_2["_encstr_B9921A5B85E1A65CD52C399591114BCD3A51EDD34C352B1B47A5EC95"] = level.zone.visuals[0].furthestspawndistsq;
    var_2["_encstr_A9F117C20899740388683D14F511A3B8C778AAA8902FABEFA3"] = var_1 * var_1;
    var_2["_encstr_95421C5AE0D8BF2FE069CDFE53C8F09FF01922A3A920A76771BBF3EC1740"] = level.enemy_spawn_influence_dist_sq;

    if ( scripts\mp\spawnlogic::shoulduseteamstartspawn() )
    {
        if ( var_0 == game["_encstr_941C0A6AF345075ED05BEAD3"] )
        {
            scripts\mp\spawnlogic::activatespawnset( "_encstr_9303101723E2CE585F5E839B464B688D6B97", 1 );
            var_3 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_9303101723E2CE585F5E839B464B688D6B97", undefined, var_2 );
        }
        else
        {
            scripts\mp\spawnlogic::activatespawnset( "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", 1 );
            var_3 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", undefined, var_2 );
        }
    }
    else
    {
        if ( !isdefined( level._id_139D1 ) )
        {
            level._id_139D1 = 1;
            scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_82070387BA", "_encstr_939A0D8DC347E521C7B50503CDB5A3" );
        }

        var_4 = removespawnsinactivedz( level.zone.spawnpoints );
        var_5 = removespawnsinactivedz( level.zone.fallbackspawnpoints );
        var_3 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, level.zone.spawnset, level.zone.fallbackspawnset, "_encstr_8B1904982C46", var_2 );
    }

    return var_3;
}

getobjzonedeadzonedist()
{
    return level.spawn_deadzone_dist;
}

removespawnsinactivedz( var_0 )
{
    var_1 = [];

    if ( isdefined( var_0 ) )
    {
        foreach ( var_3 in var_0 )
        {
            if ( !ispointinvolume( var_3.origin, level.zone.trigger ) )
                var_1[var_1.size] = var_3;
        }
    }

    return var_1;
}

onplayerconnect( var_0 )
{
    var_0.numcaps = 0;
    var_0.capsperminute = 0;
    var_0.timebyrotation = [];
    var_0 scripts\mp\utility\stats::setextrascore0( 0 );

    if ( isdefined( var_0.pers["_encstr_B9F50890960B9B01773F"] ) )
        var_0 scripts\mp\utility\stats::setextrascore0( var_0.pers["_encstr_B9F50890960B9B01773F"] );

    var_0 scripts\mp\utility\stats::setextrascore1( 0 );

    if ( isdefined( var_0.pers["_encstr_9CF70851FD0FB8B81BB3"] ) )
        var_0 scripts\mp\utility\stats::setextrascore1( var_0.pers["_encstr_9CF70851FD0FB8B81BB3"] );
}

onspawnplayer()
{
    scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
    thread updatematchstatushintonspawn();
    level._id_12305 = 30;
}

updateservericons( var_0, var_1 )
{
    var_2 = -1;

    if ( var_1 )
        var_2 = -2;
    else if ( scripts\mp\utility\teams::isgameplayteam( var_0 ) )
    {
        var_3 = thread getownerteamplayer( var_0 );

        if ( isdefined( var_3 ) )
            var_2 = var_3 getentitynumber();
    }
    else
    {
        switch ( var_0 )
        {
            case "_encstr_B451162D673A6D1989367BD09B71B893C2FBEFA9E7422760":
                var_2 = -3;
                break;
            case "_encstr_82270B4FDE3795FAB9D05A993A":
            default:
                break;
        }
    }

    setomnvar( "_encstr_9EE80DD52DF50DB0273238B72DDCE8", var_2 );
}

getownerteamplayer( var_0 )
{
    var_1 = undefined;

    foreach ( var_3 in level.players )
    {
        if ( var_3.team == var_0 )
        {
            var_1 = var_3;
            break;
        }
    }

    return var_1;
}

updaterespawntimer()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_8FBD0BBA97A04F464F80533BE4" );
    level endon( "_encstr_8C9C0F90B8CD42479108E7E3A8A8290AA1" );
    var_0 = gettime();

    if ( level.zoneduration > 0 )
        var_1 = var_0 + level.zoneduration * 1000;
    else
        var_1 = var_0 + scripts\mp\utility\game::gettimelimit() * 1000 - scripts\mp\utility\game::gettimepassed();

    var_2 = var_0;

    while ( var_2 < var_1 )
    {
        var_2 = gettime();
        level.spawndelay = ( var_1 - var_2 ) / 1000 + 0.1;
        waitframe();
    }
}

seticonnames()
{
    level.icontarget = "_encstr_A18E0A469EFAE80B4ED92BA3";
    level.iconneutral = "_encstr_936B0BF073010571379CD6476C";
    level.iconcapture = "_encstr_883809CFF268E27B69B138";
    level.icondefend = "_encstr_A6D70C58D8795B9BD45180BA53D0";
    level.iconcontested = "_encstr_98F50D28D3B159886D83CD9BC48DC1";
    level.icontaking = "_encstr_9CCA0A6AF84E39C9472D7549";
    level.iconlosing = "_encstr_80BC0ADAFA01326003D06827";
    level.icondefending = "_encstr_B4940D61D271802D03C24009EACBD4";
}

initwaypointicons()
{
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_883809CFF268E27B69B138", 0, "_encstr_80BF06CA78A2226B", "_encstr_B46420C52971DCAB34B570F85E18F3C529AF4F52B5C9965F470FC99165480F4EB9FF", "_encstr_A81211DB13CFB8C7A39240106AFC6D33B7BCDA", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_A6D70C58D8795B9BD45180BA53D0", 0, "_encstr_B9FC095F8BCCFF02D92B43", "_encstr_B9B71FF8278017A501C30515E719FD4B2B7050908C78FBAF21A30E1CCF91F68376", "_encstr_A81211DB13CFB8C7A39240106AFC6D33B7BCDA", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_B4940D61D271802D03C24009EACBD4", 0, "_encstr_B9FC095F8BCCFF02D92B43", "_encstr_9837225DB1E94423BC0DF860D6E06B4DA127C7DA3D41DFF7D4A5C0787C489771D9635073", "_encstr_A81211DB13CFB8C7A39240106AFC6D33B7BCDA", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_936B0BF073010571379CD6476C", 0, "_encstr_9BA4080D39CFFB5AB7C1", "_encstr_B46420C52971DCAB34B570F85E18F3C529AF4F52B5C9965F470FC99165480F4EB9FF", "_encstr_A81211DB13CFB8C7A39240106AFC6D33B7BCDA", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_98F50D28D3B159886D83CD9BC48DC1", 0, "_encstr_B3B5086C7BE68E56E63A", "_encstr_A8A8222588D8871EACD5ED5951E8AB102BB6ADDDC401A37CC89911EB613D6F697D15376F", "_encstr_A81211DB13CFB8C7A39240106AFC6D33B7BCDA", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_80BC0ADAFA01326003D06827", 0, "_encstr_80BF06CA78A2226B", "_encstr_8A341FD405D72927A3146AA2EBF4C98956793D09A4FA31E96A5272E8D7A1051435", "_encstr_A81211DB13CFB8C7A39240106AFC6D33B7BCDA", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_A18E0A469EFAE80B4ED92BA3", 0, "_encstr_9BA4080D39CFFB5AB7C1", "_encstr_AF671FA905BEA4E48E289AA8EB7A728995CBF48429D72AA04AD12A45AFD00AA035", "_encstr_80EC15D2F3D0908FA73171985814F5C04181AF2A5FCD3C", 0 );
    scripts\mp\gamelogic::setwaypointiconinfo( "_encstr_9CCA0A6AF84E39C9472D7549", 0, "_encstr_B9FC095F8BCCFF02D92B43", "_encstr_B7CF1F8592585465D710A02537ED2049095058EEEBF69F2E025964550F9F4FCBF7", "_encstr_A81211DB13CFB8C7A39240106AFC6D33B7BCDA", 1 );
}

updatecapsperminute( var_0 )
{
    if ( !isdefined( self.capsperminute ) )
    {
        self.numcaps = 0;
        self.capsperminute = 0;
    }

    if ( !isdefined( var_0 ) || var_0 == "_encstr_9BA4080D39CFFB5AB7C1" )
        return;

    self.numcaps++;
    var_1 = scripts\mp\utility\game::gettimepassed() / 60000;

    if ( isplayer( self ) && isdefined( self.timeplayed["_encstr_BE7D068EF6D10B1B"] ) )
        var_1 = self.timeplayed["_encstr_BE7D068EF6D10B1B"] / 60;

    self.capsperminute = self.numcaps / var_1;

    if ( self.capsperminute > self.numcaps )
        self.capsperminute = self.numcaps;
}

isscoreboosting( var_0 )
{
    if ( var_0.capsperminute > 3 )
        return 1;

    return 0;
}

writecurrentrotationteamscore()
{
    if ( level.kothhillrotation < 24 )
    {
        setmatchdata( "_encstr_BE7D112CC6B14B596EA4EDEADC239AC6B79CB2", level.kothhillrotation, getteamscore( "_encstr_BC850785638DA59537" ) );
        setmatchdata( "_encstr_B16F0F7FD05A2F8FAF6FC088EFFB606522", level.kothhillrotation, getteamscore( "_encstr_BA840579D3F7F6" ) );
    }
}

setupzonecallouts()
{
    var_0 = undefined;
    var_1 = undefined;
    var_2 = undefined;
    var_3 = level.zone.visuals[0];

    foreach ( var_5 in level.calloutglobals.areatriggers )
    {
        var_1 = ispointinvolume( var_3.baseorigin, var_5 );
        var_2 = isdefined( var_3.script_noteworthy ) && isdefined( var_5.script_noteworthy ) && var_3.script_noteworthy == var_5.script_noteworthy;

        if ( var_1 || var_2 )
        {
            var_0 = level.calloutglobals.areaidmap[var_5.script_noteworthy];

            foreach ( var_7 in level.players )
            {
                if ( isdefined( var_0 ) )
                    var_7 setclientomnvar( "_encstr_947811FB6040EB7BBF47792CC1B7881C29DFBB", var_0 );
            }

            break;
        }
    }
}

updatematchstatushintonspawn()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( istrue( level._id_14726 ) )
        self setclientomnvar( "_encstr_AD061ACF50F64D32C19E2CE9FEB94A1CDB18EF03F808AC19E9A5305B", 42 );
    else
        self setclientomnvar( "_encstr_AD061ACF50F64D32C19E2CE9FEB94A1CDB18EF03F808AC19E9A5305B", 41 );
}
