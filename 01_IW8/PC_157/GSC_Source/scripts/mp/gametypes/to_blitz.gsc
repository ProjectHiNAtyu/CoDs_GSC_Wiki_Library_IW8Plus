// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    maintacopsinit();
    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();

    if ( isusingmatchrulesdata() )
        scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();

    maintacopspostinit();
    level.startedfromtacops = 0;
    level.onstartgametype = ::onstartgametype;
}

maintacops()
{
    maintacopsinit();
    maintacopspostinit();
    level.waypointcolors["_encstr_BEC116EE16BC0EF6B4DC1DF5B10BE01D57C956AF3AC2DA59"] = "_encstr_9BA4080D39CFFB5AB7C1";
    level.waypointbgtype["_encstr_BEC116EE16BC0EF6B4DC1DF5B10BE01D57C956AF3AC2DA59"] = 2;
    level.startedfromtacops = 1;
    onstartgametype( 1 );
}

maintacopsinit()
{
    level.tacopssublevel = "_encstr_AD61098EEDBE131BA5A33D";
    level.currentmode = "_encstr_AD61098EEDBE131BA5A33D";
    setomnvar( "_encstr_8FDF13201A5979B917FF1097CBBFA3337E22783072", level.currentmode );
}

maintacopspostinit()
{
    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( "_encstr_AD61098EEDBE131BA5A33D", 0, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( "_encstr_AD61098EEDBE131BA5A33D", 10 );
        scripts\mp\utility\game::registerscorelimitdvar( "_encstr_AD61098EEDBE131BA5A33D", 65 );
        scripts\mp\utility\game::registerroundlimitdvar( "_encstr_AD61098EEDBE131BA5A33D", 1 );
        scripts\mp\utility\game::registerwinlimitdvar( "_encstr_AD61098EEDBE131BA5A33D", 1 );
        scripts\mp\utility\game::registernumlivesdvar( "_encstr_AD61098EEDBE131BA5A33D", 0 );
        scripts\mp\utility\game::registerhalftimedvar( "_encstr_AD61098EEDBE131BA5A33D", 0 );
        scripts\mp\utility\game::registerdogtagsenableddvar( "_encstr_AD61098EEDBE131BA5A33D", 0 );
        level.matchrules_damagemultiplier = 0;
    }

    updategametypedvars();
    level.teambased = 1;
    level.onnormaldeath = ::onnormaldeath;
    level.modeonspawnplayer = ::onspawnplayer;
    level.ontimelimit = scripts\mp\gamelogic::default_ontimelimit;
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_B1B71EB3E9BEF793E827C2C4631858AF64C19B5A539D8F4A606FF6D40380A6FF", 5 );
    setdynamicdvar( "_encstr_AF94222E4EB32F03E7FF6810CF141AF74B7624BD62BA3FCBD147F048C75431F3119E91BD", 10 );
    setdynamicdvar( "_encstr_B72A1ABEDE23BF91974BD8191BBFE865EB42A7CDF26897F846AF60B0", getmatchrulesdata( "_encstr_94F009D8DEE6334458E8C2", "_encstr_9B5711D79F5738112201208028FDEDF1EF2AD1" ) );
    setdynamicdvar( "_encstr_9B97176F907A1FB9306361F70130404DACC021A1B2D9357B67", getmatchrulesdata( "_encstr_94F009D8DEE6334458E8C2", "_encstr_AB030E38ED4BB91DE641AC9388CA732F" ) );
    setdynamicdvar( "_encstr_807D12325E15019B1070936F58095C5AA1E33D2F", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_9E91056EB77B0E", 0 );
    setdynamicdvar( "_encstr_81441183A855792748A8FECFBF33CF3D87686A", 0 );
}

onstartgametype( var_0 )
{
    var_1[0] = "_encstr_9507035309";
    var_1[1] = "_encstr_814E0C0AC1E0DB8D30A5121FA5A8";
    var_1[2] = "_encstr_A85908F249E84E372DEB";
    var_1[3] = "_encstr_9B290667C6D043EF";
    var_1[4] = "_encstr_9318045AFDDD";
    var_1[5] = "_encstr_9E91056EB77B0E";
    var_1[6] = "_encstr_9820130D4FEBF698BD420E81EC6510A2238F938DB3";
    scripts\mp\gameobjects::main( var_1 );

    if ( !istrue( var_0 ) )
    {
        _encstr_88C021DB28B338B3692366357B200F71BBBD50D7B75DF315B376BB01D8D77386F49017::commoninit();
        activatespawns();
    }

    level.extratime = 0;
    setgameendtime( 0 );
    scripts\mp\utility\dvars::setoverridewatchdvar( "_encstr_AA250A1D7CF2EB9071A740A0", 6 );
    seticonnames();
    level.bradleymodeloverride = 1;
    level.to_blitzactivebradleys = 2;
    thread setupbradleys();
    thread setuprpgcaches();
    thread setupbarriers();
    thread setuptankendgoal();
}

setupbradleys()
{
    level.tankobjkeys = [];
    var_0 = scripts\engine\utility::getstructarray( "_encstr_97530B315F3A6A199BF2D9139D", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_1 = 0;

    foreach ( var_3 in var_0 )
    {

    }

    thread initobjicons();
    setomnvar( "_encstr_987F20AEB4FAE8C2C6DB0EE6AF3AC273B67DC2AF1AB22C36D1A1EBE0569C362B73D1", 1.0 );
    setomnvar( "_encstr_A25920EA2DFA3AC28DDBC1DCD7D1B0DC6DBE98F51A2BC28DE8A1BE835993C6AC738E", 1.0 );
}

bradleydamagewatcher()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_A89B0DAACCAB3BE3887127278001CB" );

    for (;;)
    {
        self waittill( "_encstr_B8BE07320B5B16ECAC", var_0 );

        if ( self.tacopsindex == 0 )
        {
            setomnvar( "_encstr_987F20AEB4FAE8C2C6DB0EE6AF3AC273B67DC2AF1AB22C36D1A1EBE0569C362B73D1", ( self.maxhealth - self.damagetaken ) / self.maxhealth );
            continue;
        }

        if ( self.tacopsindex == 1 )
            setomnvar( "_encstr_A25920EA2DFA3AC28DDBC1DCD7D1B0DC6DBE98F51A2BC28DE8A1BE835993C6AC738E", ( self.maxhealth - self.damagetaken ) / self.maxhealth );
    }
}

setuptankendgoal()
{
    level waittill( "_encstr_B2520CD76FB8ADC708CB9A3271D5" );
    var_0 = getent( "_encstr_946D0A49C105C0380F7AA9F0", "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( !isdefined( var_0 ) )
        spawnmanualdomflag();
    else
    {
        level.objectives = [];
        level.objectives[0] = var_0;
        var_1 = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::setupobjective( level.objectives[0] );
        var_1.onuse = ::dompoint_onuse;
        level.objectives[0] = var_1;
        level.flagcapturetime = 1;
        level.flagneutralization = 1;
        waitframe();
        var_1.nocarryobject = 1;
        var_1 scripts\mp\gameobjects::setkeyobject( level.tankobjkeys );
        var_1 scripts\mp\gameobjects::setownerteam( "_encstr_BA840579D3F7F6" );
        var_1 scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
        var_1 scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );
        var_1 scripts\mp\gameobjects::setobjectivestatusicons( level.icondefend, level.iconcapture );
    }
}

bradley_handletacopsdamage( var_0 )
{
    var_1 = var_0.attacker;
    var_2 = var_0.objweapon;
    var_3 = var_0.meansofdeath;
    var_4 = var_0.damage;
    var_5 = var_0.idflags;

    if ( var_3 == "_encstr_8AED0A5719ED37B8FB512FD7" )
        return 0;

    if ( var_1.team == "_encstr_BC850785638DA59537" )
        return 0;

    var_4 = getmodifiedtankdamage( var_1, var_2, var_3, var_4, 3000, 10, 15, 20 );
    var_0.damage = var_4;
    return var_4;
}

getmodifiedtankdamage( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    var_9 = undefined;

    if ( var_2 != "_encstr_8AED0A5719ED37B8FB512FD7" )
    {
        switch ( var_1.basename )
        {
            case "_encstr_95B3140AE45A733BD927203023FBD1CF320D7F987D13":
            case "_encstr_BCAE08D8D0F5B607F538":
            case "_encstr_8F39108B1387575A3139AA8F09B0A077A12B":
                self.largeprojectiledamage = 1;
                var_9 = var_5;
                break;
            case "_encstr_87491613DD7E27517BE997E32D59717B2212C2EF37769DF3":
            case "_encstr_B35E16DCEE2DD1B134BE98632C232BAFC6D02D1B46F5AD07":
            case "_encstr_BE5419C827F6B9CA7D34D29D2BD7E0E4DBD4591B8ED21BCA7DB61C":
            case "_encstr_97FC0F53F5B5A13A1368FBC350AACF4A49":
            case "_encstr_9CD20F566B38D79DE4CA730B2356F55B83":
            case "_encstr_A623119954EA97FD2321729BA06BF7737E3108":
            case "_encstr_A96D112BD7424E71F6412840DACA230B87652F":
            case "_encstr_A3521050A3B879B19AEF4F6F17728C31B5FA":
            case "_encstr_AD69112DF308C9012A3F87B5E7B2DD7BD7CDAB":
            case "_encstr_BE3E15324BBBD7B5B807B4F11D48BF67CC203B7AD6F9A3":
            case "_encstr_AAD0152DEE0EEB3685D7A3C9CDE80BDC8CC2278C7DB683":
                self.largeprojectiledamage = 1;
                var_9 = var_6;
                break;
            case "_encstr_B843199068334F4A6FE043BBD077873748C4373C7ED89B574788CB":
            case "_encstr_948D18DCAC9B4793E5EB6E1AED36B5AFDA5AE6E62D8D2BEBD638":
            case "_encstr_A6BB1188A378EFAF7341C35918C527A249AD7B":
            case "_encstr_9DDA13EB9009312B3066BBAD855E6B024FD081B2D0":
            case "_encstr_8C950D507B43B3E8DB154EC3D72793":
                self.largeprojectiledamage = 0;
                var_9 = var_7;
                break;
            default:
                self.largeprojectiledamage = 0;
        }
    }

    if ( isdefined( var_8 ) )
        self.largeprojectiledamage = var_8;

    if ( self.largeprojectiledamage == 0 )
        return 0;

    if ( isdefined( var_9 ) && isdefined( var_2 ) && ( var_2 == "_encstr_A45C0E4B9FDF3165A3B93C4491BFA4A9" || var_2 == "_encstr_9BE3150DAD1C47870999C0F8AF5C37E55EDEC7E1CD5543" || var_2 == "_encstr_81670F602F2B4957763C758D38D1FF6C3B" || var_2 == "_encstr_BA3916099077D7673B375A25D3CB8C29EF394169385E873C" || var_2 == "_encstr_A11B0CBD04C9B790F653EBCF4915" ) )
        var_3 = ceil( var_4 / var_9 );

    if ( isdefined( var_0 ) && isdefined( self.owner ) )
    {
        if ( isdefined( var_0.owner ) )
            var_0 = var_0.owner;

        if ( var_0 == self.owner )
            var_3 = ceil( var_3 / 2 );
    }

    return int( var_3 );
}

bradley_handlefataltacopsdamage( var_0 )
{
    var_1 = var_0.attacker;
    var_2 = var_0.objweapon;
    var_3 = var_0.meansofdeath;
    var_4 = var_0.damage;
    var_5 = var_0.idflags;

    if ( level.teambased )
    {
        var_6 = "_encstr_A40101";

        if ( isdefined( var_1 ) && isdefined( var_1.team ) )
            var_6 = var_1.team;

        if ( var_6 != self.team )
        {

        }
    }
    else if ( isdefined( var_1 ) && ( !isdefined( self.owner ) || self.owner != var_1 ) )
    {

    }

    self.trackedobject scripts\mp\gameobjects::deletetrackedobject();
    thread bradley_vehicledestroy( var_1, var_2, var_3, 0 );

    if ( self.tacopsindex == 0 )
        setomnvar( "_encstr_987F20AEB4FAE8C2C6DB0EE6AF3AC273B67DC2AF1AB22C36D1A1EBE0569C362B73D1", 0 );
    else if ( self.tacopsindex == 1 )
        setomnvar( "_encstr_A25920EA2DFA3AC28DDBC1DCD7D1B0DC6DBE98F51A2BC28DE8A1BE835993C6AC738E", 0 );
}

bradley_vehicledestroy( var_0, var_1, var_2, var_3 )
{
    var_4 = spawnstruct();
    var_4.attacker = var_0;
    var_4.objweapon = var_1;
    var_4.meansofdeath = var_2;
    scripts\cp_mp\vehicles\light_tank::light_tank_explode( var_4, var_3 );
    level.to_blitzactivebradleys--;

    if ( level.to_blitzactivebradleys == 0 )
    {
        if ( isdefined( level.onphaseend ) )
        {
            game["_encstr_941C0A6AF345075ED05BEAD3"] = "_encstr_BC850785638DA59537";
            game["_encstr_95A70AA81FEE295D3A2F56DE"] = "_encstr_BA840579D3F7F6";
            [[ level.onphaseend ]]( "_encstr_BA840579D3F7F6" );
        }
        else
            thread scripts\mp\gamelogic::endgame( "_encstr_BA840579D3F7F6", game["_encstr_94EA0B2BE623AF39CA589BBDB9"][game["_encstr_941C0A6AF345075ED05BEAD3"] + "_encstr_ABE60C07DDADF8190F42B11BDA13"] );
    }
}

initspawns()
{
    var_0 = level.tacopsspawns;
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_8F7118AFF9B8537F1888A4EBA219ABCB0F5F1BEF43599A211873", 1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_9C0F16ADC1FA8EBD13B12D3AE9AF3783C2DD37F50B1E5ACD", 1 );
    var_0.to_blitz_spawns = [];
    var_0.to_blitz_spawns["_encstr_BC850785638DA59537"] = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_8F7118AFF9B8537F1888A4EBA219ABCB0F5F1BEF43599A211873" );
    var_0.to_blitz_spawns["_encstr_BA840579D3F7F6"] = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_9C0F16ADC1FA8EBD13B12D3AE9AF3783C2DD37F50B1E5ACD" );

    if ( var_0.to_blitz_spawns["_encstr_BC850785638DA59537"].size <= 0 )
    {
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_829D16F22B88B3B248E53417B7D83EAF48668A6A307B772A" );
        var_0.to_blitz_spawns["_encstr_BC850785638DA59537"] = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_829D16F22B88B3B248E53417B7D83EAF48668A6A307B772A" );
    }

    if ( var_0.to_blitz_spawns["_encstr_BA840579D3F7F6"].size <= 0 )
    {
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_AD3B14F1383781B58DBAC09143624B7B1BEF0FF3893F" );
        var_0.to_blitz_spawns["_encstr_BA840579D3F7F6"] = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_AD3B14F1383781B58DBAC09143624B7B1BEF0FF3893F" );
    }
}

getspawnpoint()
{
    var_0 = level.tacopsspawns;
    var_1 = self.pers["_encstr_89EF05D46BA8FD"];
    var_2 = scripts\mp\tac_ops_map::filterspawnpoints( var_0.to_blitz_spawns[var_1] );
    var_3 = undefined;
    return var_3;
}

activatespawns()
{
    scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_A919048A11A9" );
    scripts\mp\tac_ops_map::setactivemapconfig( "_encstr_AD61098EEDBE131BA5A33D", "_encstr_BC850785638DA59537" );
    scripts\mp\tac_ops_map::setactivemapconfig( "_encstr_AD61098EEDBE131BA5A33D", "_encstr_BA840579D3F7F6" );
    level.getspawnpoint = ::getspawnpoint;
}

updategametypedvars()
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4 )
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::oncommonnormaldeath( var_0, var_1, var_2, var_3, var_4 );
}

onspawnplayer()
{
    if ( self.team == "_encstr_BA840579D3F7F6" )
        thread onspawnfinished();

    var_0 = 0;

    if ( self.team == "_encstr_BC850785638DA59537" )
        var_0 = 1;
    else if ( self.team == "_encstr_BA840579D3F7F6" )
        var_0 = 2;

    self setclientomnvar( "_encstr_A2460F57D2FAE80B6CED8337F5A39516B5", var_0 );
    scripts\mp\tac_ops\roles_utility::kitspawn();
}

onspawnfinished()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self waittill( "_encstr_B8030CCE4B3B2B627B8523DEBAD1" );
    scripts\mp\equipment::giveequipment( "_encstr_813D09FB4173601F5F2A93", "_encstr_987F080E394BDAC2E45E" );
    var_0 = self getweaponslist( "_encstr_987F080E394BDAC2E45E" );

    foreach ( var_2 in var_0 )
    {
        var_3 = getweaponbasename( var_2 );

        switch ( var_3 )
        {
            case "_encstr_BC3910D2BB83D7630BFA63B0C1D00BFA5BE0":
            case "_encstr_A623119954EA97FD2321729BA06BF7737E3108":
            case "_encstr_A96D112BD7424E71F6412840DACA230B87652F":
            case "_encstr_BE3E15324BBBD7B5B807B4F11D48BF67CC203B7AD6F9A3":
                var_4 = getcompleteweaponname( "_encstr_93B914483BEBC1E72FB9BB88136DCB9037AA6BE78350" );
                scripts\cp_mp\utility\inventory_utility::takeweaponwhensafe( var_2 );
                self giveweapon( var_4 );
                self givestartammo( var_4 );
                break;
        }
    }
}

setuprpgcaches()
{
    level.rpg7caches = [];
    var_0 = getentarray( "_encstr_B3010A90A887B9617F1F62C0", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_1 = getentarray( "_encstr_81BE10DB8BE9FF77AE8901F8CE6447716562", "_encstr_B8CE0BE43FC317DF690862BA48" );

    for ( var_2 = 0; var_2 < var_0.size; var_2++ )
    {
        var_3 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0[var_2].origin );
        var_3 setmodel( "_encstr_A42F17DB098BDFD7C910A6D7BF4CE5B8798FBA99125865ADC3" );
        var_3.angles = var_0[var_2].angles;
        var_0[var_2] scripts\mp\utility\outline::outlineenableforteam( var_0[var_2], "_encstr_BA840579D3F7F6", "_encstr_BCBD15F0DB9349B823C50898D7536139FB72F908B36E95", "_encstr_9B4407C817DF0947DB" );
        var_0[var_2].ownerteam = "_encstr_BA840579D3F7F6";
        var_0[var_2].interactteam = "_encstr_B9FC095F8BCCFF02D92B43";
        var_0[var_2].exclusiveuse = 0;
        var_0[var_2].curprogress = 0;
        var_0[var_2].usetime = 0;
        var_0[var_2].userate = 1;
        var_0[var_2].id = "_encstr_98E50D36B03956BE1C851BDAC2D9CA";
        var_0[var_2].skiptouching = 1;
        var_0[var_2].trigger = var_1[var_2];
        var_0[var_2].trigger.angles = var_0[var_2].angles;
        var_0[var_2].trigger setcursorhint( "_encstr_939A0CEC70DBF521459F5B47F73D" );
        var_0[var_2].trigger sethintstring( &"_encstr_B1470F8F395890504F6A83CA4855F94FF3" );
        var_0[var_2].trigger.team = "_encstr_BA840579D3F7F6";
        var_0[var_2].trigger.destination = var_0[var_2].origin;
        var_0[var_2].onuse = ::rpgcrateenduse;
        var_0[var_2] thread scripts\mp\gameobjects::useobjectusethink();
        var_0[var_2] thread rpgcrateuseteamupdater( "_encstr_BA840579D3F7F6" );
        level.rpg7caches[level.rpg7caches.size] = var_0[var_2];
    }
}

rpgcrateenduse( var_0 )
{
    var_0 setclientomnvar( "_encstr_82370C57A5EBB92B1B57C9B4DC9D", 0 );
    var_0 setclientomnvar( "_encstr_87B915D748EE7B5AD7AD827C18F7B1201310E743B0C3B3", 0.01 );
    var_1 = var_0.lastdroppableweaponobj;
    var_2 = var_0 dropitem( var_1 );

    if ( isdefined( var_2 ) )
    {
        var_2.owner = var_0;
        var_2.targetname = "_encstr_A3580F88A8B0D79B791DD11355BBE04FB3";
        var_2 thread scripts\mp\weapons::watchpickup( var_0 );
        var_2 thread scripts\mp\weapons::deletepickupafterawhile();
    }

    var_0 giveweapon( "_encstr_A96D112BD7424E71F6412840DACA230B87652F" );
    var_0 givestartammo( "_encstr_A96D112BD7424E71F6412840DACA230B87652F" );
    var_0 scripts\cp_mp\utility\inventory_utility::domonitoredweaponswitch( "_encstr_A96D112BD7424E71F6412840DACA230B87652F", 1 );
    var_0 scripts\mp\weapons::_id_1316B( getcompleteweaponname( "_encstr_A96D112BD7424E71F6412840DACA230B87652F" ) );
}

rpgcrateuseteamupdater( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        setusablebyteam( var_0 );
        level waittill( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
    }
}

setusablebyteam( var_0 )
{
    foreach ( var_2 in level.players )
    {
        if ( var_2.team != var_0 )
        {
            self.trigger disableplayeruse( var_2 );
            continue;
        }

        self.trigger enableplayeruse( var_2 );
    }
}

initobjicons()
{
    foreach ( var_1 in level.bradley.activevehicles["_encstr_BC850785638DA59537"] )
    {
        var_1.trackedobject = var_1 scripts\mp\gameobjects::createtrackedobject( var_1, ( 0, 0, 0 ) );
        var_1.trackedobject.objidpingfriendly = 0;
        var_1.trackedobject.objidpingenemy = 1;
        var_1.trackedobject.objpingdelay = 0.05;
        var_1.trackedobject.visibleteam = "_encstr_BC19047780DA";
        var_1.invulnerable = 1;
        var_1.trackedobject scripts\mp\gameobjects::setobjectivestatusicons( level.icontake, level.iconkill );
        var_1 thread watchiconupdater();
    }
}

watchiconupdater()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        scripts\engine\utility::_id_143A6( "_encstr_9F3015E6AA5F5139BF7B09D82354F589FB15776D115339", "_encstr_A3750609A5E61883", "_encstr_B3FE144E9BD8B40A7533C76B63AB02EB18C10F501088" );
        var_0 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getseatoccupant( self, "_encstr_BCE307116330CEEF4B" );

        if ( isdefined( var_0 ) && isdefined( self.trackedobject.visibleteam ) )
        {
            self.trackedobject scripts\mp\gameobjects::setobjectivestatusicons( level.icondefend, level.iconkill );
            continue;
        }

        if ( isdefined( self.trackedobject.visibleteam ) )
            self.trackedobject scripts\mp\gameobjects::setobjectivestatusicons( level.icontake, level.iconkill );
    }
}

seticonnames()
{
    level.waypointcolors["_encstr_BEC116EE16BC0EF6B4DC1DF5B10BE01D57C956AF3AC2DA59"] = "_encstr_9BA4080D39CFFB5AB7C1";
    level.waypointbgtype["_encstr_BEC116EE16BC0EF6B4DC1DF5B10BE01D57C956AF3AC2DA59"] = 2;
    level.icontake = "_encstr_BEC116EE16BC0EF6B4DC1DF5B10BE01D57C956AF3AC2DA59";
    level.iconkill = "_encstr_93FD168C3742D340DCCDDC961AC3637BE360632922784518";
    level.iconneutral = "_encstr_B4730DA4C86902D740B84F733899AC";
    level.iconcapture = "_encstr_A6120B6DDE8E1A7DAC73B2B6CB";
    level.icondefend = "_encstr_875E0E5B98A38BF1ED88825A7031F507";
    level.iconcontested = "_encstr_A8C21D4F27339FD0D92D332ED4B970DDFBB7CBF5EBB9EE08E68319A3FB6538";
    level.icontaking = "_encstr_B74218983278C9C0975605E824DF08A3E5FA61B03A970DBBB74E";
    level.iconlosing = "_encstr_AF471AF7D743B078433DDD811891222DAAC0E0851C8E126F4A8FD888";
}

setupbarriers()
{
    var_0 = getentarray( "_encstr_9820130D4FEBF698BD420E81EC6510A2238F938DB3", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_2 in var_0 )
    {
        var_2 setcandamage( 1 );
        var_2.health = 10000;
        var_2.team = "_encstr_BA840579D3F7F6";
        var_2 thread barriermonitordamage();
        var_2 thread barriermonitordeath();
    }

    level.totalbarriers = var_0.size;
}

barriermonitordamage()
{
    self endon( "_encstr_A3750609A5E61883" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        self waittill( "_encstr_B8BE07320B5B16ECAC", var_0 );
        iprintln( "_encstr_B1900E3F38686450094475E16062C246" + var_0 + "_encstr_AF9B0FB0400DB20B1BE80D023695338E40" + self.health );
    }
}

barriermonitordeath()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self waittill( "_encstr_A3750609A5E61883" );
    iprintln( "_encstr_9B480AEF7F033D0E7157DBA9" );
    thread barrier_destroy();
}

barrier_deathfunc( var_0, var_1, var_2, var_3, var_4 )
{
    if ( level.teambased )
    {
        var_5 = "_encstr_A40101";

        if ( isdefined( var_0 ) && isdefined( var_0.team ) )
            var_5 = var_0.team;

        if ( var_5 != self.team )
        {

        }
    }
    else if ( isdefined( var_0 ) && ( !isdefined( self.owner ) || self.owner != var_0 ) )
    {

    }

    thread barrier_destroy( var_0, var_1, var_2, 0 );
}

barrier_destroy( var_0, var_1, var_2, var_3 )
{
    playfx( level.barrier_explode, self.origin );
    playfx( level.barrier_explode, self.origin + ( 0, -150, 0 ) );
    playfx( level.barrier_explode, self.origin + ( 0, 150, 0 ) );
    playfx( level.barrier_explode, self.origin + ( 150, 0, 0 ) );
    playfx( level.barrier_explode, self.origin + ( -150, 0, 0 ) );
    playrumbleonposition( "_encstr_B6D30F3B39CACDC24659EBE4EAAD263695", self.origin );
    earthquake( 0.75, 2.0, self.origin, 2000 );
    self delete();
    level.totalbarriers--;

    if ( level.totalbarriers == 0 )
        level notify( "_encstr_B2520CD76FB8ADC708CB9A3271D5" );
}

barrier_dmgfunc( var_0, var_1, var_2, var_3, var_4 )
{
    if ( var_2 == "_encstr_8AED0A5719ED37B8FB512FD7" )
        return 0;

    if ( var_0.team == self.team )
        return 0;

    var_3 = getmodifiedbarrierdamage( var_0, var_1, var_2, var_3, 10000, 10, 15, 50 );
    return var_3;
}

getmodifiedbarrierdamage( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    var_9 = var_1.isalternate;
    var_10 = 0;

    if ( istrue( var_9 ) )
    {
        var_11 = scripts\mp\utility\weapon::getweaponattachmentsbasenames( var_1 );

        foreach ( var_13 in var_11 )
        {
            if ( var_13 == "_encstr_89070358A2" )
            {
                var_10 = 1;
                break;
            }
        }
    }

    var_15 = undefined;

    if ( var_2 != "_encstr_8AED0A5719ED37B8FB512FD7" )
    {
        switch ( var_1.basename )
        {
            case "_encstr_BC3910D2BB83D7630BFA63B0C1D00BFA5BE0":
            case "_encstr_BCAE08D8D0F5B607F538":
            case "_encstr_A623119954EA97FD2321729BA06BF7737E3108":
            case "_encstr_A96D112BD7424E71F6412840DACA230B87652F":
            case "_encstr_BE3E15324BBBD7B5B807B4F11D48BF67CC203B7AD6F9A3":
                self.largeprojectiledamage = 1;
                var_15 = var_5;
                break;
            case "_encstr_B35E16DCEE2DD1B134BE98632C232BAFC6D02D1B46F5AD07":
            case "_encstr_BE5419C827F6B9CA7D34D29D2BD7E0E4DBD4591B8ED21BCA7DB61C":
            case "_encstr_97FC0F53F5B5A13A1368FBC350AACF4A49":
                self.largeprojectiledamage = 1;
                var_15 = var_6;
                break;
            case "_encstr_A6BB1188A378EFAF7341C35918C527A249AD7B":
            case "_encstr_937E0D942BC0E4D33D21F2AACE99FB":
            case "_encstr_8C950D507B43B3E8DB154EC3D72793":
                self.largeprojectiledamage = 0;
                var_15 = var_7;
                break;
            case "_encstr_B748115AEEDCD7B0278D8DB06EE6D2B17DDAE0":
                if ( istrue( var_10 ) )
                {
                    self.largeprojectiledamage = 0;
                    var_15 = var_7;
                }

                break;
            default:
                var_3 = 0;
                break;
        }
    }

    if ( isdefined( var_8 ) )
        self.largeprojectiledamage = var_8;

    if ( isdefined( var_15 ) && isdefined( var_2 ) && ( var_2 == "_encstr_A45C0E4B9FDF3165A3B93C4491BFA4A9" || var_2 == "_encstr_9BE3150DAD1C47870999C0F8AF5C37E55EDEC7E1CD5543" || var_2 == "_encstr_81670F602F2B4957763C758D38D1FF6C3B" || var_2 == "_encstr_BA3916099077D7673B375A25D3CB8C29EF394169385E873C" || var_2 == "_encstr_A11B0CBD04C9B790F653EBCF4915" ) )
        var_3 = ceil( var_4 / var_15 );

    if ( isdefined( var_0 ) && isdefined( self.owner ) )
    {
        if ( isdefined( var_0.owner ) )
            var_0 = var_0.owner;

        if ( var_0 == self.owner )
            var_3 = ceil( var_3 / 2 );
    }

    return int( var_3 );
}

ontimelimit()
{
    if ( isdefined( level.onphaseend ) )
    {
        var_0 = scripts\mp\gamescore::freight_lift_door_switch( 0 );
        [[ level.onphaseend ]]( var_0 );
    }

    scripts\mp\gamescore::_setteamscore( "_encstr_BA840579D3F7F6", 1, 0 );
    thread scripts\mp\gamelogic::endgame( "_encstr_BA840579D3F7F6", game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_B22214F6314DAC361DB4D9B27D1BDB6BE0639547B291"] );
}

spawnmanualdomflag()
{
    level.flagcapturetime = 1;
    level.flagneutralization = 1;
    var_0 = spawnstruct();
    var_0.origin = ( 7524, 11709, 308 );
    var_0.angles = ( 0, 0, 0 );
    var_1 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", var_0.origin, 0, 160, 128 );
    var_1.radius = 160;
    var_0.trigger = var_1;
    var_0.trigger.script_label = "_encstr_A40101";
    var_0.ownerteam = "_encstr_9BA4080D39CFFB5AB7C1";
    var_2 = var_0.origin + ( 0, 0, 32 );
    var_3 = var_0.origin + ( 0, 0, -32 );
    var_4 = scripts\engine\trace::ray_trace( var_2, var_3, undefined, scripts\engine\trace::create_default_contents( 1 ) );
    var_0.origin = var_4["_encstr_B7260923C89E8F3378E72E"];
    var_0.upangles = vectortoangles( var_4["_encstr_930E073E8FC00DDF69"] );
    var_0.forward = anglestoforward( var_0.upangles );
    var_0.right = anglestoright( var_0.upangles );
    var_0.visuals[0] = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0.origin );
    var_0.visuals[0].angles = var_0.angles;
    var_5 = scripts\mp\gameobjects::createuseobject( "_encstr_9BA4080D39CFFB5AB7C1", var_0.trigger, var_0.visuals, ( 0, 0, 100 ) );
    var_5 scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );
    var_5 scripts\mp\gameobjects::setusetime( 1 );
    var_5 scripts\mp\gameobjects::setusetext( &"_encstr_828E1539F01ECF237EE1298928075FE7C75BB30D717794" );
    var_6 = "_encstr_A40101";
    var_5.label = var_6;
    var_5 scripts\mp\gameobjects::setobjectivestatusicons( level.iconfriendlyextract3d, level.icondefend );
    var_5 scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
    var_5.onuse = ::dompoint_onuse;
    var_5.onbeginuse = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onusebegin;
    var_5.onuseupdate = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onuseupdate;
    var_5.onenduse = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onuseend;
    var_5.oncontested = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_oncontested;
    var_5.onuncontested = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onuncontested;
    var_5.nousebar = 1;
    var_5.id = "_encstr_8FD9082F7548D1BB9A8F";
    var_5.claimgracetime = level.flagcapturetime * 1000;
    var_5.firstcapture = 1;
    var_5 scripts\mp\gameobjects::setkeyobject( level.tankobjkeys );
    var_5.nocarryobject = 1;
    level.objectives = [];
    level.objectives[0] = var_5;
    var_2 = var_0.visuals[0].origin + ( 0, 0, 32 );
    var_3 = var_0.visuals[0].origin + ( 0, 0, -32 );
    var_7 = scripts\engine\trace::create_contents( 1, 1, 1, 1, 0, 1, 1 );
    var_8 = [];
    var_4 = scripts\engine\trace::ray_trace( var_2, var_3, var_8, var_7 );
    var_5.baseeffectpos = var_4["_encstr_B7260923C89E8F3378E72E"];
    var_9 = vectortoangles( var_4["_encstr_930E073E8FC00DDF69"] );
    var_5.baseeffectforward = anglestoforward( var_9 );
    var_10 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_5.baseeffectpos );
    var_10 setmodel( "_encstr_AA50141DF5FA97E94C9F28F1CF9BA333D3DB07968DD2" );
    var_10.angles = generateaxisanglesfromforwardvector( var_5.baseeffectforward, var_10.angles );
    var_5.scriptable = var_10;
    var_5.vfxnamemod = "_encstr_A40101";

    if ( var_5.trigger.radius == 160 )
        var_5.vfxnamemod = "_encstr_A34505A79F14AF";
    else if ( var_5.trigger.radius == 90 )
        var_5.vfxnamemod = "_encstr_BE1A04AF9318";
    else if ( var_5.trigger.radius == 315 )
        var_5.vfxnamemod = "_encstr_A845057D660681";

    var_5 scripts\mp\gameobjects::setownerteam( "_encstr_BA840579D3F7F6" );
    var_5 scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
    var_5 scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );
    var_5 scripts\mp\gameobjects::setobjectivestatusicons( level.icondefend, level.iconcapture );
    var_5 _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::updateflagstate( "_encstr_BA840579D3F7F6", 0 );
}

dompoint_onuse( var_0 )
{
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onuse( var_0 );

    if ( var_0.team == "_encstr_BC850785638DA59537" )
    {
        scripts\mp\gamescore::_setteamscore( "_encstr_BC850785638DA59537", 1, 0 );
        thread scripts\mp\gamelogic::endgame( "_encstr_BC850785638DA59537", game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_B22214F6314DAC361DB4D9B27D1BDB6BE0639547B291"] );
    }
}
