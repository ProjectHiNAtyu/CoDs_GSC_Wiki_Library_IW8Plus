// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    var_0[0] = scripts\mp\utility\game::getgametype();
    var_0[1] = "_encstr_9B290667C6D043EF";
    var_0[2] = "_encstr_9318045AFDDD";
    scripts\mp\gameobjects::main( var_0 );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( scripts\mp\utility\game::getgametype(), 0, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 600 );
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 85 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
    }

    updategametypedvars();
    level.dogtagsplayer = [];
    _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::init();
    level.teambased = 1;
    level.onstartgametype = ::onstartgametype;
    level.onplayerconnect = ::onplayerconnect;
    level.getspawnpoint = ::getspawnpoint;
    level.onnormaldeath = ::onnormaldeath;
    level.modeonspawnplayer = ::onspawnplayer;
    level.givetagsfromcache = ::givetagsfromcache;
    level.conf_fx["_encstr_AAE007D90BB9A5E61A"] = loadfx( "_encstr_97531F35435B48F8877259185C7D98970293B73FBF5227C8AC0183C8C54F10DBCB" );
    scripts\mp\flashpoint::init();
    level.iconneutral = "_encstr_889016A5B1DECDFADDB05E07ED2DDCD1AFCE95CDCA39B41B";
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_81BD12CBBA4BFF63A3A832A1C66605F054A418BF", getmatchrulesdata( "_encstr_B2B90907B4B1C61116A385", "_encstr_95BD09FA9318CBBBC90BA2" ) );
    setdynamicdvar( "_encstr_ADCE126B0E45FF3BD428C9DF12BF7A2896133B78", getmatchrulesdata( "_encstr_B2B90907B4B1C61116A385", "_encstr_98CF090E27452AF2890827" ) );
    setdynamicdvar( "_encstr_9E5C19283FC246493285A1201E6AAD081BCFB888CF7A59495AED2D", getmatchrulesdata( "_encstr_B2B90907B4B1C61116A385", "_encstr_A8511031C2E6B66885C18EAB93592A4BDAAC" ) );
    setdynamicdvar( "_encstr_9D6F17734EB387EA23882229B8036737ED27E6134178F774F1", getmatchrulesdata( "_encstr_B2B90907B4B1C61116A385", "_encstr_94630E134AA721CD56159C64E1A04B44" ) );
    setdynamicdvar( "_encstr_9E7513806F502FA7A16DDCCE8583780F80C5CB3316", getmatchrulesdata( "_encstr_B2B90907B4B1C61116A385", "_encstr_95EB0EB5CA3B58120BDC6D12BDCD5737" ) );
    setdynamicdvar( "_encstr_B8771270D6225F7B27216C8783AB459B5B543B7D", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_9B290667C6D043EF", 0 );
    setdynamicdvar( "_encstr_94AC11378DE4EBC1A5C6D8F51CC9B7AD7BC8B2", 0 );
}

onstartgametype()
{
    setclientnamemode( "_encstr_95900C2EDBD01F99D6B1DFEB878D" );

    if ( !isdefined( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
        game["_encstr_A6D60EE09BF413B9945185CB4797C583"] = 0;

    scripts\mp\utility\game::setobjectivetext( "_encstr_BC850785638DA59537", &"_encstr_B1660F0D95899DE0E55B9BAF1730E9D111" );
    scripts\mp\utility\game::setobjectivetext( "_encstr_BA840579D3F7F6", &"_encstr_B1660F0D95899DE0E55B9BAF1730E9D111" );

    if ( level.splitscreen )
    {
        scripts\mp\utility\game::setobjectivescoretext( "_encstr_BC850785638DA59537", &"_encstr_B1660F0D95899DE0E55B9BAF1730E9D111" );
        scripts\mp\utility\game::setobjectivescoretext( "_encstr_BA840579D3F7F6", &"_encstr_B1660F0D95899DE0E55B9BAF1730E9D111" );
    }
    else
    {
        scripts\mp\utility\game::setobjectivescoretext( "_encstr_BC850785638DA59537", &"_encstr_BA01157920948365435134856386AFD3CA99E191683A4B" );
        scripts\mp\utility\game::setobjectivescoretext( "_encstr_BA840579D3F7F6", &"_encstr_BA01157920948365435134856386AFD3CA99E191683A4B" );
    }

    scripts\mp\utility\game::setobjectivehinttext( "_encstr_BC850785638DA59537", &"_encstr_BC1A14CFE1BCBDC8A9A39B47B677410107A14B5FF917" );
    scripts\mp\utility\game::setobjectivehinttext( "_encstr_BA840579D3F7F6", &"_encstr_BC1A14CFE1BCBDC8A9A39B47B677410107A14B5FF917" );
    initspawns();
    createtags();
    level.dogtagallyonusecb = ::dogtagallyonusecb;
    _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::initarrays();
    _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::initpickupusability();
    spawnlootcaches();
    level thread removetagsongameended();
    level thread bankthink();
}

updategametypedvars()
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
    level.banktime = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_95BD09FA9318CBBBC90BA2", 2, 0, 10 );
    level.bankrate = scripts\mp\utility\dvars::dvarintvalue( "_encstr_98CF090E27452AF2890827", 1, 1, 1000 );
    level.bankcapturetime = scripts\mp\utility\dvars::dvarintvalue( "_encstr_A8511031C2E6B66885C18EAB93592A4BDAAC", 0, 0, 10 );
    level.megabanklimit = scripts\mp\utility\dvars::dvarintvalue( "_encstr_94630E134AA721CD56159C64E1A04B44", 5, 5, 15 );
    level.megabankbonus = scripts\mp\utility\dvars::dvarintvalue( "_encstr_95EB0EB5CA3B58120BDC6D12BDCD5737", 150, 0, 750 );
}

onspawnplayer()
{
    if ( isdefined( self.tagscarried ) )
        self setclientomnvar( "_encstr_B4D4142BDCD7083B522B636727497678927251C0C649", self.tagscarried );
}

createtags()
{
    level.dogtags = [];

    for ( var_0 = 0; var_0 < 30; var_0++ )
    {
        var_1[0] = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
        var_1[0] setmodel( "_encstr_81CD1CB5A51B5AA358C9E5BE32EDD93AB0B337F5967770F5B739B09BB359" );
        var_1[1] = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
        var_1[1] setmodel( "_encstr_A2FD1A48B23DFBA3B74A83E834E7899926FA9B512A13911E834C8DFD" );
        var_1[0] scriptmodelplayanim( "_encstr_815B0F9B83B17530374B7189B90B833B7A" );
        var_1[1] scriptmodelplayanim( "_encstr_815B0F9B83B17530374B7189B90B833B7A" );
        var_1[0] hide();
        var_1[1] hide();
        var_1[0] setasgametypeobjective();
        var_1[1] setasgametypeobjective();
        var_2 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", ( 0, 0, 0 ), 0, 32, 32 );
        var_2.targetname = "_encstr_A6980F1D9CB4D976B227AF237BD9D12C3B";
        var_2 hide();
        var_3 = spawnstruct();
        var_3.type = "_encstr_A2C00AABCD59A74C35566C1D";
        var_3.curorigin = var_2.origin;
        var_3.entnum = var_2 getentitynumber();
        var_3.lastusedtime = 0;
        var_3.visuals = var_1;
        var_3.offset3d = ( 0, 0, 16 );
        var_3.trigger = var_2;
        var_3.triggertype = "_encstr_82650A035028B05A0B63C3B8";
        var_3 scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
        level.dogtags[level.dogtags.size] = var_3;
    }
}

gettag()
{
    var_0 = level.dogtags[0];
    var_1 = gettime();

    foreach ( var_3 in level.dogtags )
    {
        if ( !isdefined( var_3.lastusedtime ) )
            continue;

        if ( var_3.interactteam == "_encstr_AABA05236DC831" )
        {
            var_0 = var_3;
            break;
        }

        if ( var_3.lastusedtime < var_1 )
        {
            var_1 = var_3.lastusedtime;
            var_0 = var_3;
        }
    }

    var_0 notify( "_encstr_80F2062328E7A72B" );
    var_0 scripts\mp\gameobjects::initializetagpathvariables();
    var_0.lastusedtime = gettime();
    return var_0;
}

spawntag( var_0, var_1 )
{
    var_2 = var_0 + ( 0, 0, 14 );
    var_3 = ( 0, randomfloat( 360 ), 0 );
    var_4 = anglestoforward( var_3 );
    var_5 = randomfloatrange( 30, 150 );
    var_6 = var_2 + var_5 * var_4;
    var_2 = playerphysicstrace( var_2, var_6 );
    var_7 = gettag();
    var_7.curorigin = var_2;
    var_7.trigger.origin = var_2;
    var_7.visuals[0].origin = var_2;
    var_7.visuals[1].origin = var_2;
    var_7.trigger show();
    var_7 scripts\mp\gameobjects::allowuse( "_encstr_BC19047780DA" );
    var_7.visuals[0] thread showtoteam( var_7, scripts\mp\utility\game::getotherteam( var_1 )[0] );
    var_7.visuals[1] thread showtoteam( var_7, var_1 );
    var_7.visuals[0] setasgametypeobjective();
    var_7.visuals[1] setasgametypeobjective();
    playsoundatpos( var_2, "_encstr_949214A01BE09F9B93C89C7093E75010B04151033780" );
    return var_7;
}

showtoteam( var_0, var_1 )
{
    var_0 endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_80F2062328E7A72B" );
    self hide();

    foreach ( var_3 in level.players )
    {
        if ( playercanusetags( var_3 ) )
        {
            if ( var_3.team == var_1 )
                self showtoplayer( var_3 );

            if ( var_3.team == "_encstr_A68C0A5803A5D151A2B310A6" && var_1 == "_encstr_BC850785638DA59537" )
                self showtoplayer( var_3 );
        }
    }

    for (;;)
    {
        level waittill( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
        self hide();

        foreach ( var_3 in level.players )
        {
            if ( playercanusetags( var_3 ) )
            {
                if ( var_3.team == var_1 )
                    self showtoplayer( var_3 );
            }

            if ( var_3.team == "_encstr_A68C0A5803A5D151A2B310A6" && var_1 == "_encstr_BC850785638DA59537" )
                self showtoplayer( var_3 );

            if ( var_0.victimteam == var_3.team && var_3 == var_0.attacker )
                scripts\mp\objidpoolmanager::update_objective_state( var_0.objid, "_encstr_8CBE0A41F59874FF8371821A" );
        }
    }
}

playercanusetags( var_0 )
{
    return 1;
}

monitortaguse( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_AAE208912BB195E85932" );
    var_0 endon( "_encstr_80F2062328E7A72B" );

    for (;;)
    {
        var_0.trigger waittill( "_encstr_8B5C081B58E0B7A213E6", var_1 );

        if ( !scripts\mp\utility\player::isreallyalive( var_1 ) )
            continue;

        if ( var_1 scripts\mp\utility\player::isusingremote() || isdefined( var_1.spawningafterremotedeath ) )
            continue;

        if ( isdefined( var_1.classname ) && var_1.classname == "_encstr_AB440F9BD8932D071DAFB3CA435A3663B2" )
            continue;

        if ( isagent( var_1 ) && isdefined( var_1.owner ) )
            var_1 = var_1.owner;

        var_0.visuals[0] hide();
        var_0.visuals[1] hide();
        var_0.trigger hide();
        var_0.curorigin = ( 0, 0, 1000 );
        var_0.trigger.origin = ( 0, 0, 1000 );
        var_0.visuals[0].origin = ( 0, 0, 1000 );
        var_0.visuals[1].origin = ( 0, 0, 1000 );
        var_0 scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );

        if ( var_0.team != var_1.team )
        {
            var_1 playersettagcount( var_1.tagscarried + 1 );
            var_1 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_B4590E235A1A9FD030D2E36ABFCBFB7D" );
        }

        var_1 playsound( "_encstr_95521BDA88B7DCA770C19387E8196F226B59D392488799FB08BE9395FF" );

        if ( isdefined( level.supportcranked ) && level.supportcranked )
        {
            if ( isdefined( var_1.cranked ) && var_1.cranked )
                var_1 scripts\mp\cranked::setcrankedplayerbombtimer( "_encstr_97D70583536853" );
            else
                var_1 scripts\mp\cranked::oncranked( undefined, var_1 );
        }

        playsoundatpos( var_1.origin, "_encstr_81161673D87198A63F72016E3BCFD270D51FD1F3732440EF" );
        break;
    }
}

onplayerconnect( var_0 )
{
    var_0.isscoring = 0;
    var_0 thread monitorjointeam();
}

playersettagcount( var_0 )
{
    self.tagscarried = var_0;
    self.game_extrainfo = var_0;
    self setclientomnvar( "_encstr_B4D4142BDCD7083B522B636727497678927251C0C649", var_0 );
}

monitorjointeam()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    for (;;)
    {
        scripts\engine\utility::_id_143A5( "_encstr_B2170C4AD884CDC823B9DB9D9F42", "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
        playersettagcount( 0 );
    }
}

hidehudelementongameend( var_0 )
{
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( var_0 ) )
        var_0.alpha = 0;
}

createzones()
{
    var_0 = getentarray( "_encstr_937F0F9F1DB06593A880E22A09159F9D20", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_2 in var_0 )
    {
        var_3 = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::setupobjective( var_2 );
        var_3 thread runzonethink();
        level.objectives[var_3.objectivekey] = var_3;
    }
}

isinzone( var_0, var_1 )
{
    if ( scripts\mp\utility\player::isreallyalive( var_0 ) && var_0 istouching( var_1.trigger ) && var_1.ownerteam == var_0.team )
        return 1;

    return 0;
}

runzonethink()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        self.trigger waittill( "_encstr_8B5C081B58E0B7A213E6", var_0 );

        if ( self.stalemate )
            continue;

        if ( isagent( var_0 ) )
            continue;

        if ( !isplayer( var_0 ) )
            continue;

        if ( var_0.isscoring )
            continue;

        var_0.isscoring = 1;
        level thread processscoring( var_0, self );
    }
}

removetagsongameended()
{
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    foreach ( var_1 in level.players )
    {
        if ( !isdefined( var_1 ) )
            continue;

        if ( !isdefined( var_1.tagscarried ) )
            continue;

        var_1.tagscarried = 0;
    }
}

processscoring( var_0, var_1 )
{
    while ( var_0.tagscarried && isinzone( var_0, var_1 ) && !var_1.stalemate )
    {
        var_0 playsoundtoplayer( "_encstr_9DFB16AD1CBE76272DE632FA1DB7DAACB9EBC40B376DCA46", var_0 );
        var_2 = level.bankrate;

        if ( var_2 > var_0.tagscarried )
            var_2 = var_0.tagscarried;

        scoreamount( var_0, var_2 );

        for ( var_3 = 0; var_3 < var_2; var_3++ )
            var_0 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_979C0AA3853B7D6ED87B4EB2" );

        if ( isdefined( level.supportcranked ) && level.supportcranked && isdefined( var_0.cranked ) && var_0.cranked )
            var_0 scripts\mp\cranked::setcrankedplayerbombtimer( "_encstr_97D70583536853" );

        wait( level.banktime );
    }

    var_1 _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::setneutralicons();
    var_0.isscoring = 0;
}

scoreamount( var_0, var_1 )
{
    var_0 playersettagcount( var_0.tagscarried - var_1 );
    scripts\mp\gamescore::giveteamscoreforobjective( var_0.team, var_1, 0 );
}

initspawns()
{
    scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_88380746E174F1D36C", "_encstr_A8E80F2F633A9549FE2228CDCB8CA0C052" );
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_BCCE0E8692E30F5291371FFA9A90AF2B", "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_A3490CE6B7395BB0C6F52CF02DE6", "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_A30C093385361B4CB06C6D", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997" );
    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
}

getspawnpoint()
{
    var_0 = self.pers["_encstr_89EF05D46BA8FD"];

    if ( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] )
        var_0 = scripts\mp\utility\game::getotherteam( var_0 )[0];

    if ( scripts\mp\spawnlogic::shoulduseteamstartspawn() )
    {
        var_1 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_A9BD0ED638EBA391DAFACDC10BBB9BBE" + var_0 + "_encstr_A4810727CEFBF7F281" );
        var_2 = scripts\mp\spawnlogic::getspawnpoint_startspawn( var_1 );
    }
    else if ( var_0 == "_encstr_BC850785638DA59537" )
        var_2 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, "_encstr_BCCE0E8692E30F5291371FFA9A90AF2B", "_encstr_A30C093385361B4CB06C6D" );
    else
        var_2 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, "_encstr_A3490CE6B7395BB0C6F52CF02DE6", "_encstr_A30C093385361B4CB06C6D" );

    return var_2;
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( istrue( level.flashpointactive ) )
        scripts\mp\flashpoint::flashpoint_processnewevent( var_1, var_0, gettime(), "_encstr_9DD509AC58101C99569327" + var_1.team );

    var_0 _encstr_BD2C2137D839B438E8E6CBDA0EBCCE586B2BD15E1C956E5E0EB15DCD462B9C5CB3CD8D::playersettagcount( var_0.tagscarried + 1000 );
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::oncommonnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 );
}

droptags( var_0, var_1 )
{
    if ( isagent( var_0 ) )
        return;

    if ( var_0.tagscarried > 9 )
        var_2 = 10;
    else if ( var_0.tagscarried > 0 )
        var_2 = var_0.tagscarried;
    else
        var_2 = 0;

    for ( var_3 = 0; var_3 < var_2; var_3++ )
    {
        var_4 = spawntag( var_0.origin, var_0.team );
        var_4.team = var_0.team;
        var_4.victim = var_0;
        var_4.attacker = var_1;
        level notify( "_encstr_8F1E10E5E23FE6AB42A16F9F70C14F76974A", var_4 );
        level thread monitortaguse( var_4 );
    }

    var_5 = var_0.tagscarried - var_2;
    var_5 = int( max( 0, var_5 ) );
    var_0 playersettagcount( var_5 );
}

dogtagallyonusecb( var_0 )
{

}

removepoint()
{
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        if ( getdvar( "_encstr_8AFE15FF7B8AE93D9F63B7593A5FECE0AFDF7B1DEC3660", "_encstr_A40101" ) != "_encstr_A40101" )
        {
            var_0 = getdvar( "_encstr_8AFE15FF7B8AE93D9F63B7593A5FECE0AFDF7B1DEC3660", "_encstr_A40101" );

            foreach ( var_2 in level.objectives )
            {
                if ( isdefined( var_2.objectivekey ) && var_2.objectivekey == var_0 )
                {
                    var_2 notify( "_encstr_A2030D0A5BA8A039FD251F2F672DB3" + var_2.objectivekey );
                    var_2 scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
                    var_2.trigger = undefined;
                    var_2 notify( "_encstr_AAE208912BB195E85932" );
                    var_2.visibleteam = "_encstr_AABA05236DC831";
                    var_2 scripts\mp\gameobjects::setobjectivestatusicons( undefined, undefined );
                    var_3 = [];

                    foreach ( var_5 in level.objectives )
                    {
                        if ( var_5.objectivekey != var_0 )
                            var_3[var_5.objectivekey] = var_5;
                    }

                    level.objectives = var_3;
                    break;
                }
            }

            setdynamicdvar( "_encstr_8AFE15FF7B8AE93D9F63B7593A5FECE0AFDF7B1DEC3660", "_encstr_A40101" );
        }

        wait 1;
    }
}

placepoint()
{
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        if ( getdvar( "_encstr_891914CDD8E4AF2359EC28B1C2B1B211B7D619B15876", "_encstr_A40101" ) != "_encstr_A40101" )
        {
            var_0 = getdvar( "_encstr_891914CDD8E4AF2359EC28B1C2B1B211B7D619B15876", "_encstr_A40101" );
            var_1 = undefined;
            var_2 = getentarray( "_encstr_937F0F9F1DB06593A880E22A09159F9D20", "_encstr_B8CE0BE43FC317DF690862BA48" );

            foreach ( var_4 in var_2 )
            {
                if ( "_encstr_984C028E" + var_4.script_label == var_0 )
                    var_1 = var_4;
            }

            var_1.origin = level.players[0].origin;
            var_1.ownerteam = "_encstr_9BA4080D39CFFB5AB7C1";
            var_6 = var_1.origin + ( 0, 0, 32 );
            var_7 = var_1.origin + ( 0, 0, -32 );
            var_8 = scripts\engine\trace::ray_trace( var_6, var_7, undefined, scripts\engine\trace::create_default_contents( 1 ) );
            var_1.origin = var_8["_encstr_B7260923C89E8F3378E72E"];
            var_1.upangles = vectortoangles( var_8["_encstr_930E073E8FC00DDF69"] );
            var_1.forward = anglestoforward( var_1.upangles );
            var_1.right = anglestoright( var_1.upangles );
            var_9[0] = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_1.origin );
            var_9[0].angles = var_1.angles;
            var_10 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", var_1.origin, 0, 90, 128 );
            var_10.script_label = var_1.script_label;
            var_1 = var_10;
            var_11 = scripts\mp\gameobjects::createuseobject( "_encstr_9BA4080D39CFFB5AB7C1", var_1, var_9, ( 0, 0, 100 ) );

            if ( isdefined( var_1.objectivekey ) )
                var_11.objectivekey = var_1.objectivekey;
            else
                var_11.objectivekey = var_11 scripts\mp\gameobjects::getlabel();

            if ( isdefined( var_1.iconname ) )
                var_11.iconname = var_1.iconname;
            else
                var_11.iconname = var_11 scripts\mp\gameobjects::getlabel();

            var_11 thread runzonethink();
            var_11 scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );
            var_11 scripts\mp\gameobjects::setusetime( level.bankcapturetime );
            var_11 scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_944B10F7CF52BBADA31823A97083A7A7E825", "_encstr_B6B118EE58F207B7B4DC47EB1BC28347AE93B2B956D5D14E0BD8" );
            var_11 scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
            var_11 scripts\mp\gameobjects::cancontestclaim( 1 );
            var_11.onuse = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::zone_onuse;
            var_11.onbeginuse = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::zone_onusebegin;
            var_11.onunoccupied = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::zone_onunoccupied;
            var_11.oncontested = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::zone_oncontested;
            var_11.onuncontested = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::zone_onuncontested;
            var_11.claimgracetime = level.bankcapturetime * 1000;
            var_6 = var_11.visuals[0].origin + ( 0, 0, 32 );
            var_7 = var_11.visuals[0].origin + ( 0, 0, -32 );
            var_12 = scripts\engine\trace::create_contents( 1, 1, 1, 1, 0, 1, 1 );
            var_13 = [];
            var_8 = scripts\engine\trace::ray_trace( var_6, var_7, var_13, var_12 );
            var_11.baseeffectpos = var_8["_encstr_B7260923C89E8F3378E72E"];
            var_14 = vectortoangles( var_8["_encstr_930E073E8FC00DDF69"] );
            var_14 = -1 * var_14;
            var_11.baseeffectforward = anglestoforward( var_14 );
            var_11 _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::setneutral();
            level.objectives[var_11.objectivekey] = var_11;
            setdynamicdvar( "_encstr_891914CDD8E4AF2359EC28B1C2B1B211B7D619B15876", "_encstr_A40101" );
        }

        wait 1;
    }
}

spawnlootcaches()
{
    scripts\cp_mp\killstreaks\airdrop::initplundercratedata();
    var_0 = scripts\engine\utility::getstructarray( "_encstr_9407142308119B7608F31F2B93407CE7D0E39BBA53F8", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_1 = int( 100 * var_0.size / 100 );
    var_0 = scripts\engine\utility::array_randomize( var_0 );
    level.currencycaches = [];

    for ( var_2 = 0; var_2 < var_1; var_2++ )
        spawnlootcache( var_0[var_2] );
}

spawnlootcache( var_0 )
{
    var_1 = _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::spawnpickup( "_encstr_9DAC0E61478C501BA297681EEE9A7139", var_0.origin + level.br_pickups.br_dropoffsets[0], ( 0, 0, 0 ) );
}

givetagsfromcache()
{
    _encstr_BD2C2137D839B438E8E6CBDA0EBCCE586B2BD15E1C956E5E0EB15DCD462B9C5CB3CD8D::playersettagcount( self.tagscarried + 1000 );
}

bankthink()
{
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = getentarray( "_encstr_937F0F9F1DB06593A880E22A09159F9D20", "_encstr_B8CE0BE43FC317DF690862BA48" );
    wait 5;
    var_1 = [];
    var_2 = [];

    for (;;)
    {
        var_0 = scripts\engine\utility::array_randomize( var_0 );
        var_3 = 0;
        var_4 = 0;

        while ( var_3 < 1 )
        {
            foreach ( var_4, var_6 in var_0 )
            {
                if ( var_3 == 1 )
                    break;

                if ( ( !isdefined( var_6.inuse ) || !var_6.inuse ) && ( !isdefined( var_6.usedlastphase ) || !var_6.usedlastphase ) )
                {
                    var_7 = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::setupobjective( var_0[var_4] );
                    var_7 scripts\mp\gameobjects::allowuse( "_encstr_BC19047780DA" );
                    var_7 scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
                    scripts\mp\objidpoolmanager::objective_set_play_intro( var_7.objidnum, 0 );
                    var_7.lockupdatingicons = 0;
                    var_7 scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_889016A5B1DECDFADDB05E07ED2DDCD1AFCE95CDCA39B41B" );
                    var_7.lockupdatingicons = 1;
                    objective_setlabel( var_7.objidnum, &"_encstr_B97F22C5F7290BE0F9A9775481C03C1481325991B9689EF7EF414757A82039A06F319BA1" );
                    objective_setneutrallabel( var_7.objidnum, &"_encstr_B97F22C5F7290BE0F9A9775481C03C1481325991B9689EF7EF414757A82039A06F319BA1" );
                    objective_setfriendlylabel( var_7.objidnum, &"_encstr_B97F22C5F7290BE0F9A9775481C03C1481325991B9689EF7EF414757A82039A06F319BA1" );
                    objective_setenemylabel( var_7.objidnum, &"_encstr_B97F22C5F7290BE0F9A9775481C03C1481325991B9689EF7EF414757A82039A06F319BA1" );
                    var_7 thread runzonethink();
                    var_1[var_4] = var_7;
                    var_7.sourcetrigger = var_6;
                    var_6.inuse = 1;
                    var_3++;
                }
            }

            if ( var_3 < 1 )
            {
                foreach ( var_6 in var_0 )
                    var_6.usedlastphase = 0;
            }
        }

        wait 5;

        foreach ( var_6 in var_1 )
        {
            var_6 scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
            var_6 scripts\mp\gameobjects::setvisibleteam( "_encstr_AABA05236DC831" );
            var_6 scripts\mp\gameobjects::releaseid();
            var_6.visibleteam = "_encstr_AABA05236DC831";
            var_6.scriptable delete();
            var_6.sourcetrigger.usedlastphase = 1;
            var_6.sourcetrigger.inuse = 0;
        }

        var_1 = [];
        wait 5;
    }
}
