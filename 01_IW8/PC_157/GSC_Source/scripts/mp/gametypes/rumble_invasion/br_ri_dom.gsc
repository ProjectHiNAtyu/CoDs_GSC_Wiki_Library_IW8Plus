// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

maphint_computerscriptableused()
{
    _encstr_B6C33D3B6136B70AB8C7075DD93A97DFD1D9C303AB050715E0ED7F4ABB6B1E130D366AFAF3EF4FFCB02D4724B7F8695F2FAE03033EB3F775A80574664F202E::initstructs();
    level.defend_wave_3 = getdvarint( "_encstr_AA27119EFE039F516A6F28784FB8490BBAA495", 250 );
    var_0 = [ "_encstr_B80703EB16", "_encstr_A40703FA31", "_encstr_950703BF07", "_encstr_8C0703F523", "_encstr_9E07038950", "_encstr_980703FA99", "_encstr_9C07037FD2" ];

    if ( !isdefined( level.start_reach_exhaust_waste.maphint_phonescriptableused ) )
        level.start_reach_exhaust_waste.maphint_phonescriptableused = scripts\engine\utility::getstructarray( "_encstr_9DC21773AB399BA73814C9719DF88959027081336F277DC9BF", "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( !isdefined( level.start_reach_exhaust_waste.maphint_cheese2scriptableused ) )
        level.start_reach_exhaust_waste.maphint_cheese2scriptableused = [];

    foreach ( var_6, var_2 in level.start_reach_exhaust_waste.maphint_phonescriptableused )
    {
        var_3 = level.start_reach_exhaust_waste.maphints;
        var_4 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", var_2.origin, 0, int( var_3 ), int( level.defend_wave_3 ) );
        var_4.script_label = var_0[var_6];
        var_4.iconname = var_0[var_6];
        var_5 = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::setupobjective( var_4, "_encstr_9BA4080D39CFFB5AB7C1" );
        var_5.onuse = ::manualturret_endturretuseonexecution;
        var_5.onbeginuse = ::manual_turret_allowpickupofturret;
        var_5.onuseupdate = ::manualturret_endturretuseonpush;
        var_5.onenduse = ::manual_turret_handlemovingplatform;
        var_5.oncontested = ::manual_turret_canpickup;
        var_5.onuncontested = ::manualturret_clearplacementinstructions;
        var_5.onunoccupied = ::manualturret_disablecrouchpronemantle;
        var_5.onpinnedstate = ::manual_turret_operate_by_nearby_enemies;
        var_5.onunpinnedstate = ::manualturret_domonitoredweaponswitch;
        var_5._id_138B2 = ::manualadjustlittlebirdlocs;
        var_5.stompprogressreward = ::manualturret_watchdeathongameend;
        var_5.id = "_encstr_8FD9082F7548D1BB9A8F";
        var_5.pinobj = 1;
        var_5.lockupdatingicons = 0;
        var_5.trigger = var_4;
        var_5.get_current_bush_zone = 0;
        var_5._id_133A5 = 1;
        var_5.get_current_building_obj_struct = var_3;
        var_5.pos = var_2.origin;
        var_5.vfxent = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_5.pos );
        var_5.vfxent setmodel( "_encstr_B31C0B131A0B17186929854A45" );
        var_5.vfxent setscriptablepartstate( "_encstr_8C9B05C458B959", "_encstr_9BA4080D39CFFB5AB7C1" );
        var_5 scripts\mp\gameobjects::setcapturebehavior( "_encstr_9FFC0B7398FBCB2A27FD974DE5" );
        var_5 scripts\mp\gameobjects::setusetime( level.start_reach_exhaust_waste._id_122A1 );
        var_5 thread map_dev_name_to_actual_station_name();
        var_5 thread mapcalloutsready();
        playencryptedcinematicforall( var_5.objidnum, 1 );
        _func_0442( var_5.objidnum, 1 );
        level.start_reach_exhaust_waste.maphint_cheese2scriptableused = scripts\engine\utility::array_add( level.start_reach_exhaust_waste.maphint_cheese2scriptableused, var_5 );
    }

    level thread mapedgeextractionlocs();
}

manualturret_endturretuseonexecution( var_0 )
{
    var_1 = var_0.team;
    self.get_current_station_signage_structs = var_1;
    self.capturetime = gettime();
    self.get_current_bush_zone = 1;

    if ( self.touchlist[var_1].size == 0 && isdefined( self.oldtouchlist ) )
        self.touchlist = self.oldtouchlist;

    self notify( "_encstr_A4650D32F66BBE99C6853BFACA9BC8" );
    thread manned_turret_spawn_func( var_1 );
    self.firstcapture = 0;
}

manual_turret_allowpickupofturret( var_0 )
{
    self.userate = 1.0;

    if ( !isdefined( self._id_11F63 ) || !self._id_11F63 )
    {
        self._id_11F63 = 1;
        _encstr_A83527375FF36358943A0858E22728AFFAAFA1ABAB2A36DADA520ED34B55D05D71772933B3C6F4F0F3::_id_140B1( self.curorigin, "_encstr_9318045AFDDD" );
        var_1 = scripts\mp\utility\teams::getfriendlyplayers( var_0.team, 0 );

        foreach ( var_3 in var_1 )
            var_3 notify( "_encstr_A1D9274BEB48358F8DB3925A1BEAFFEA8343CED77F68BE3332C8DA02043313A551137D4BB131467FD0" );
    }

    var_5 = scripts\mp\gameobjects::getownerteam();

    if ( var_5 != self.claimteam )
        scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_A41B139B629757103C0EB1EF24E5A893A37A16A1FB", "_encstr_B41C13EE0BE538ED2D73E8F5470BDAB4E676EB26C9" );
}

manualturret_endturretuseonpush( var_0, var_1, var_2, var_3 )
{
    self.userate = 1.0;

    if ( var_1 < 1.0 && !level.gameended && !istrue( self.get_current_bush_zone ) )
        _id_12427( var_1, var_0 );

    if ( var_1 > 0.05 && var_2 && !istrue( self.didstatusnotify ) )
        self.didstatusnotify = 1;
}

manual_turret_handlemovingplatform( var_0, var_1, var_2 )
{
    if ( isplayer( var_1 ) )
    {
        var_1 setclientomnvar( "_encstr_8038139574D9F7694A8F08A8A78E415FE3DB079DCF", 0 );
        var_1.ui_dom_securing = undefined;
    }

    var_3 = scripts\mp\gameobjects::getownerteam();

    if ( var_3 == "_encstr_9BA4080D39CFFB5AB7C1" )
    {
        scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_892A1B8FE7F35F1019EDF36E56F92095EB0313356F5B25A029459EC13A" );
        thread _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::updateflagstate( "_encstr_9BC505B4461BB2", 0 );
    }
    else
    {
        scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_98E2135BA25797D0FCCE712FEC2740D5E30AD6613B", "_encstr_A64314CB9103031D800DACBF2FF8E2DBAD6B62B1195E" );
        thread _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::updateflagstate( var_3, 0 );
    }

    if ( !var_2 )
        self.neutralized = 0;
}

manual_turret_canpickup()
{
    scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_BDCC16670F1BB7E8F1052B466EAFB8EDB23FE9DBB3C176C8" );
    scripts\mp\objidpoolmanager::objective_set_progress_team( self.objidnum, undefined );
    level thread _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::brleaderdialog( "_encstr_8A8610AC3CCC4BC6F56CDB373A95E6E82B46" );
    thread manned_turret_spawned_nodes();
}

manned_turret_spawned_nodes()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self notify( "_encstr_A62A0DB258674709F8379E8CCB900B" );
    self endon( "_encstr_A62A0DB258674709F8379E8CCB900B" );
    self endon( "_encstr_B95C0F3336583BF5AEDCC6DBB93ACAE647" );

    while ( self.stalemate )
    {
        foreach ( var_1 in self._id_1265B )
        {
            if ( isdefined( var_1.waittill_track_is_operational ) && gettime() - var_1.waittill_track_is_operational < 5000 )
                continue;

            var_1 thread scripts\mp\rank::giverankxp( "_encstr_808E14404201113057B7DCC16197FEE7F5DAE8705B63", 20, var_1.weapon, 0, 1 );
            var_1 thread scripts\mp\rank::scoreeventpopup( "_encstr_808E14404201113057B7DCC16197FEE7F5DAE8705B63" );
            var_1.waittill_track_is_operational = gettime();
        }

        wait 0.1;
    }
}

manualturret_clearplacementinstructions( var_0 )
{
    var_1 = scripts\mp\gameobjects::getownerteam();
    var_2 = undefined;
    var_3 = mantlebrush();

    if ( var_3 <= 1 )
    {
        foreach ( var_5 in level.teamnamelist )
        {
            var_6 = self.teamprogress[var_5];

            if ( var_6 > 0 )
            {
                var_2 = var_5;
                break;
            }
        }

        if ( isdefined( var_2 ) )
            scripts\mp\objidpoolmanager::objective_set_progress_team( self.objidnum, var_2 );
        else if ( var_1 != "_encstr_9BA4080D39CFFB5AB7C1" )
            scripts\mp\objidpoolmanager::objective_set_progress_team( self.objidnum, var_1 );
        else if ( var_0 != "_encstr_AABA05236DC831" )
            scripts\mp\objidpoolmanager::objective_set_progress_team( self.objidnum, var_0 );

        if ( isdefined( self.get_current_station_signage_structs ) )
        {
            if ( self.get_current_station_signage_structs != var_0 )
                scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_A41B139B629757103C0EB1EF24E5A893A37A16A1FB", "_encstr_B41C13EE0BE538ED2D73E8F5470BDAB4E676EB26C9" );
            else
                scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_98E2135BA25797D0FCCE712FEC2740D5E30AD6613B", "_encstr_A64314CB9103031D800DACBF2FF8E2DBAD6B62B1195E" );
        }
        else
            scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_892A1B8FE7F35F1019EDF36E56F92095EB0313356F5B25A029459EC13A" );

        if ( var_0 == "_encstr_AABA05236DC831" || var_1 == "_encstr_9BA4080D39CFFB5AB7C1" )
            self.didstatusnotify = 0;

        self notify( "_encstr_B95C0F3336583BF5AEDCC6DBB93ACAE647" );
    }
}

manualturret_disablecrouchpronemantle()
{
    var_0 = scripts\mp\gameobjects::getownerteam();

    if ( var_0 == "_encstr_9BA4080D39CFFB5AB7C1" )
        scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_892A1B8FE7F35F1019EDF36E56F92095EB0313356F5B25A029459EC13A" );
    else
        scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_98E2135BA25797D0FCCE712FEC2740D5E30AD6613B", "_encstr_A64314CB9103031D800DACBF2FF8E2DBAD6B62B1195E" );

    self.didstatusnotify = 0;
}

manual_turret_operate_by_nearby_enemies( var_0 )
{
    if ( self.ownerteam != "_encstr_9BA4080D39CFFB5AB7C1" && self.numtouching[self.ownerteam] && !self.stalemate )
        scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_B42A1653074BF7571776BD2157A3251540CD2F6BCAE6CDED", "_encstr_A64314CB9103031D800DACBF2FF8E2DBAD6B62B1195E" );
}

manualturret_domonitoredweaponswitch( var_0 )
{
    if ( self.ownerteam != "_encstr_9BA4080D39CFFB5AB7C1" && !self.numtouching[self.ownerteam] && !self.stalemate )
        scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_98E2135BA25797D0FCCE712FEC2740D5E30AD6613B", "_encstr_A64314CB9103031D800DACBF2FF8E2DBAD6B62B1195E" );
}

manualadjustlittlebirdlocs( var_0 )
{
    self.userate = level.start_reach_exhaust_waste.manualturret_watchturretusetimeout;
    var_1 = scripts\mp\utility\teams::getenemyteams( var_0 );
    var_2 = undefined;

    foreach ( var_4 in var_1 )
    {
        var_5 = self.teamprogress[var_4];

        if ( var_5 > 0 )
            var_2 = var_5 / self.usetime;
    }
}

manualturret_watchdeathongameend( var_0 )
{
    var_0 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_BA8410B872FBE0C8DA2FF78F4C4720B543AA" );
    scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_B42A1653074BF7571776BD2157A3251540CD2F6BCAE6CDED", "_encstr_A64314CB9103031D800DACBF2FF8E2DBAD6B62B1195E" );

    if ( isdefined( self.lastprogressteam ) )
        self.lastprogressteam = undefined;
}

_id_12427( var_0, var_1 )
{
    if ( !isdefined( self.lastsfxplayedtime ) )
        self.lastsfxplayedtime = gettime();

    if ( self.lastsfxplayedtime + 995 < gettime() )
    {
        self.lastsfxplayedtime = gettime();
        var_2 = "_encstr_A40101";
        var_0 = int( floor( var_0 * 10 ) );
        var_2 = "_encstr_B66B18F05B276528151787FB403BB036A712093E83172ED0A150" + var_0;
        self.visuals[0] playsoundtoteam( var_2, var_1 );
    }
}

manualturret_moving_platform_death( var_0, var_1, var_2 )
{
    var_3 = scripts\engine\utility::ter_op( var_0, "_encstr_87E708E6B236574E958C", "_encstr_ABAD05F420FB43" );
    var_4 = "_encstr_9C0703D712";
    var_5 = "_encstr_B26908191EF56B1CB0D7" + var_4 + "_encstr_B319041BBA79" + var_3 + var_2;

    if ( soundexists( var_5 ) )
    {
        var_6 = var_3 + var_2;
        var_7 = lookupsoundlength( var_5, 1 ) / 1000.0;
        self queuedialogforplayer( var_5, var_6, var_7 );
    }
}

manned_turret_spawn_func( var_0 )
{
    if ( isdefined( var_0 ) && var_0 != "_encstr_8A190423A45D" )
    {
        var_1 = "_encstr_A40101";

        if ( istrue( self.firstcapture ) )
            var_1 = var_1 + "_encstr_A23807AF99D2E4CD3A";
        else if ( istrue( level.start_reach_exhaust_waste.inovertime ) )
            var_1 = var_1 + "_encstr_B91A04C74738";

        var_1 = var_1 + self.trigger.iconname;

        foreach ( var_3 in level.players )
        {
            if ( isdefined( var_3 ) && isdefined( var_3.team ) && var_3.team == var_0 )
            {
                var_3 thread scripts\mp\hud_message::showsplash( "_encstr_B8201DE20A9FAA6426E1A0F9A71C39FFF08F3B6158D3BD90E50D39523CD213" + var_1 );
                var_3 thread manualturret_moving_platform_death( 1, var_0, self.trigger.iconname );
                continue;
            }

            if ( isdefined( var_3 ) && isdefined( var_3.team ) && var_3.team != var_0 )
            {
                var_3 thread scripts\mp\hud_message::showsplash( "_encstr_9BE11E22E207F33731F1F2DA2E9770C159990188C2CD0BDAC874E9027E63A7F8" + var_1 );
                var_3 thread manualturret_moving_platform_death( 0, var_0, self.trigger.iconname );
            }
        }

        var_5 = undefined;

        foreach ( var_7 in self.touchlist[var_0] )
        {
            var_3 = var_7.player;
            var_3 thread scripts\mp\rank::giverankxp( "_encstr_93B0183B1B59CA84C836CF156841D662274707E79B7F73559859", 250, var_3 getcurrentprimaryweapon() );
            var_3 thread scripts\mp\rank::scoreeventpopup( "_encstr_93B0183B1B59CA84C836CF156841D662274707E79B7F73559859" );

            if ( !isdefined( var_5 ) )
                var_5 = var_3;
        }

        thread manualturret_toggleallowplacementactions();
        _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_setcaptured( var_0, var_5 );
        self.vfxent setscriptablepartstate( "_encstr_8C9B05C458B959", var_0 );

        if ( istrue( self.firstcapture ) )
            var_9 = getdvarint( "_encstr_8F2B1CE6C64EAFE496F507DB2DCD4737EBB10B38A3AB2759D7335A9C6EA3", 5 );
        else
            var_9 = getdvarint( "_encstr_9895164E0352F712A839D37FA0621390F1A39108501B1B62", 10 );

        if ( istrue( level.start_reach_exhaust_waste.inovertime ) )
            var_9 = var_9 * getdvarint( "_encstr_880B140BC63B0FF2BB99AA3360A52B8FB0BD5F9D6841", 2 );

        level scripts\mp\gamescore::giveteamscoreforobjective( var_0, var_9, 0 );
    }
}

mapedgeextractionlocs()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = getdvarint( "_encstr_8A6D176E36E4BE9C2DF5C17B2D378E6EFA83599CD71D4BB15B", 1 );
    var_1 = getdvarint( "_encstr_A66D157BCF98D9DBA3F663BA988D374A4895DFE473A81C", 5 );

    while ( game["_encstr_A9AD064B0D19E377"] == "_encstr_8F7508BB18675378EBC7" )
    {
        foreach ( var_3 in level.start_reach_exhaust_waste.maphint_cheese2scriptableused )
        {
            if ( isdefined( var_3.ownerteam ) && var_3.ownerteam != "_encstr_9BA4080D39CFFB5AB7C1" )
                level scripts\mp\gamescore::giveteamscoreforobjective( var_3.ownerteam, var_0, 0 );
        }

        wait( var_1 );
    }
}

manualturret_toggleallowplacementactions()
{
    level thread _encstr_BAB935E6B14ED20E8EB9BCAD075ED958D659A3BCC1B29BE54C9CD7CEB0D659E8F20E59BEC9ABD63163ACFA5AB9D916B94BEDDCC59D9B8D::_id_119F7( self.pos, "_encstr_BD4E2136DEB7D17D3AB08963ACEB19BD5BF5998D2CD9F5362CC18EBA9CAC7D3685CD43", 25 );
    level thread _encstr_BAB935E6B14ED20E8EB9BCAD075ED958D659A3BCC1B29BE54C9CD7CEB0D659E8F20E59BEC9ABD63163ACFA5AB9D916B94BEDDCC59D9B8D::_id_119F7( self.pos, "_encstr_B36E247B1770839F189936BD3169EC8AD9DFCBF3F3ACF99BE8C3ABC3CB400F43A53B1B0745CE", 5 );
}

mantlebrush()
{
    var_0 = 0;

    foreach ( var_3, var_2 in self.numtouching )
    {
        if ( var_2 > 0 && ( !isstring( var_3 ) || var_3 != "_encstr_AABA05236DC831" ) )
            var_0++;
    }

    return var_0;
}

map_dev_name_to_actual_station_name()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self._id_1265B = [];

    for (;;)
    {
        self.trigger waittill( "_encstr_8B5C081B58E0B7A213E6", var_0 );

        if ( ( isplayer( var_0 ) || isbot( var_0 ) ) && !scripts\engine\utility::array_contains( self._id_1265B, var_0 ) )
            manual_turret_laststandwatcher( var_0 );

        waitframe();
    }
}

mapcalloutsready()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        foreach ( var_1 in self._id_1265B )
        {
            if ( !var_1 istouching( self.trigger ) || !isalive( var_1 ) )
                manual_turret_munitionused( var_1 );
        }

        wait 0.1;
    }
}

manual_turret_laststandwatcher( var_0 )
{
    self._id_1265B = scripts\engine\utility::array_add( self._id_1265B, var_0 );
    var_0.truck_03_node = 1;
}

manual_turret_munitionused( var_0 )
{
    self._id_1265B = scripts\engine\utility::array_remove( self._id_1265B, var_0 );
    var_0.truck_03_node = 0;
}

mantlekill( var_0, var_1 )
{
    if ( istrue( var_1.truck_03_node ) )
    {
        var_0 thread scripts\mp\rank::giverankxp( "_encstr_9F68178ABBC749B81A6FA009A19F2783551F8DF8918F9B4D44", 20, var_0.weapon, 0, 1 );
        var_0 thread scripts\mp\rank::scoreeventpopup( "_encstr_9F68178ABBC749B81A6FA009A19F2783551F8DF8918F9B4D44" );
    }

    if ( istrue( var_0.truck_03_node ) )
    {
        var_0 thread scripts\mp\rank::giverankxp( "_encstr_9D12184E4BEB91DBD67D33B10BB3EB199533ACDC91F5B5B48DB1", 20, var_0.weapon, 0, 1 );
        var_0 thread scripts\mp\rank::scoreeventpopup( "_encstr_9D12184E4BEB91DBD67D33B10BB3EB199533ACDC91F5B5B48DB1" );
    }
}
