// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    setdvarifuninitialized( "_encstr_974E153F57FB70F09A39D9D0D1756896C2978D89E7A32E", 0 );

    if ( !getdvarint( "_encstr_974E153F57FB70F09A39D9D0D1756896C2978D89E7A32E", 0 ) )
        return;

    setdvarifuninitialized( "_encstr_B6A21F376C93D716D2F556738DF6EA37E85927E6BE23EDDABEBA9B2BEB47D25B95", 30 );
    var_0 = spawnstruct();
    var_0 init_encounters();
    var_0 init_locations();
    var_0 thread encounter_manager();
    level.disableinitplayergameobjects = 0;
}

add_encounter_start_condition( var_0, var_1 )
{
    add_condition( "_encstr_94D20AB2CDB1BDAE378E959C", var_0, var_1 );
}

add_location_start_condition( var_0, var_1 )
{
    add_condition( "_encstr_B96E09395FD25748992D30", var_0, var_1 );
}

add_condition( var_0, var_1, var_2 )
{
    if ( !isdefined( self.startconditions[var_0] ) )
        self.startconditions[var_0] = [];

    var_3 = spawnstruct();
    var_3.func = var_1;
    var_3.params = var_2;
    var_4 = self.startconditions[var_0].size;
    self.startconditions[var_0][var_4] = var_3;
}

add_encounter_start_function( var_0 )
{
    self.func_encounterstart = var_0;
}

init_encounters()
{
    self.encounters = [];
    self.allencounters = [];
    var_0 = init_encounter( "_encstr_BC1F051D470AC5" );
    var_0 add_encounter_start_condition( ::condition_prematchdone );
    var_0 add_encounter_start_condition( ::condition_mintimepassed, 60 );
    var_0 add_encounter_start_condition( ::condition_maxaliveplayers, 70 );
    var_0 add_encounter_start_condition( ::condition_maxactivelocations, 1 );
    var_0 add_encounter_start_condition( ::condition_lastencounterstarttime, 30 );
    var_0 add_location_start_condition( ::condition_stateis, 0 );
    var_0 add_location_start_condition( ::condition_insafecircle );
    var_0 add_encounter_start_condition( ::condition_circlecount, 2 );
    var_0 add_encounter_start_condition( ::condition_circlesremaining, 2 );
    var_0 add_location_start_condition( ::condition_anyplayerinsideradius, 7500 );
    var_0 add_encounter_start_function( ::root_ecounterstart );
    var_1 = init_encounter( "_encstr_AF1008F6153A212EA11F", var_0 );
    var_1 add_encounter_start_function( ::rootai_ecounterstart );
    var_2 = init_encounter( "_encstr_BC9B05B330F02B", var_1 );
    var_2 add_location_start_condition( ::condition_allplayersoutsideradius, 3000 );
    var_2 add_encounter_start_function( ::bank_ecounterstart );
    var_3 = init_encounter( "_encstr_A801080FA90BCB175293", var_1 );
    var_3 add_location_start_condition( ::condition_allplayersoutsideradius, 3000 );
    var_3 add_encounter_start_function( ::airport_ecounterstart );
    var_4 = init_encounter( "_encstr_A3A706E59237893F", var_1 );
    var_4 add_location_start_condition( ::condition_allplayersoutsideradius, 3000 );
    var_4 add_encounter_start_function( ::truck_encounterstart );
    var_5 = init_encounter( "_encstr_AF910C260A827921D71FD078A304", var_1 );
    var_5 add_location_start_condition( ::condition_allplayersoutsideradius, 3000 );
    var_5 add_encounter_start_function( ::crateguard_encounterstart );
    var_6 = init_encounter( "_encstr_A6DD05926DD759", var_1 );
    var_6 add_location_start_condition( ::condition_allplayersoutsideradius, 1000 );
    var_6 add_encounter_start_condition( ::condition_disabled );
    var_7 = init_encounter( "_encstr_93EF05487F9B6B", var_1 );
    var_7 add_encounter_start_condition( ::condition_disabled );
    var_7 add_encounter_start_function( ::test_ecounterstart );
    var_8 = init_encounter( "_encstr_BAE60C38CF902C666B5D4E8F492F", var_0 );
    var_8 add_location_start_condition( ::condition_allplayersoutsideradius, 2000 );
    var_8 add_encounter_start_function( ::rootnonai_ecounterstart );
    var_9 = init_encounter( "_encstr_9318045AFDDD", var_8 );
    var_9 add_encounter_start_function( ::dom_encounterstart );
    var_10 = init_encounter( "_encstr_B43D0BAD575865E962E29BF05B", var_8 );
    var_10 add_encounter_start_function( ::bombplant_encounterstart );
    var_11 = init_encounter( "_encstr_AFF80B2B3C47398536A34BBDE6", var_8 );
    var_11 add_encounter_start_function( ::extraction_encounterstart );
    var_11 add_encounter_start_condition( ::condition_disabled );
    var_12 = init_encounter( "_encstr_8BE80C633B56AB9A48B1CB9428C8", var_8 );
    var_12 add_encounter_start_function( ::destruction_encounterstart );
}

init_encounter( var_0, var_1 )
{
    var_2 = spawnstruct();
    var_2.name = var_0;
    var_2.info = self;
    var_2.parentencounter = var_1;
    var_2.encounters = [];
    var_2.startconditions = [];
    var_2.locations = [];
    self.allencounters[var_0] = var_2;

    if ( isdefined( var_1 ) )
        var_1.encounters[var_1.encounters.size] = var_2;
    else
        self.encounters[self.encounters.size] = var_2;

    return var_2;
}

init_locations()
{
    self.alllocations = [];
    self.activelocations = [];
    var_0 = scripts\engine\utility::getstructarray( "_encstr_B2160E41E8090F903FBACB9615C2F5DF", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_2 in var_0 )
        init_location( var_2 );
}

init_location( var_0 )
{
    var_0.name = var_0.script_noteworthy;
    var_1 = self.allencounters[var_0.name];
    var_1.locations[var_1.locations.size] = var_0;
    var_0.encounter = var_1;
    var_0.state = 0;
    var_2 = self.alllocations.size;
    self.alllocations[var_2] = var_0;
}

encounter_manager()
{
    for (;;)
    {
        self.validlocations = [];
        update_conditions( self.encounters );

        if ( self.validlocations.size )
        {
            var_0 = scripts\engine\utility::random( self.validlocations );
            encounter_start( var_0 );
        }

        wait 0.05;
    }
}

update_conditions( var_0 )
{
    foreach ( var_2 in var_0 )
    {
        if ( !var_2 check_encounter_start_conditions() )
            continue;

        update_conditions( var_2.encounters );

        foreach ( var_4 in var_2.locations )
        {
            if ( !var_4 check_location_start_conditions() )
                continue;

            self.validlocations[self.validlocations.size] = var_4;
        }
    }
}

check_encounter_start_conditions()
{
    return check_start_conditions( self, "_encstr_94D20AB2CDB1BDAE378E959C", 0 );
}

check_location_start_conditions()
{
    return check_start_conditions( self.encounter, "_encstr_B96E09395FD25748992D30", 1 );
}

check_start_conditions( var_0, var_1, var_2 )
{
    if ( var_2 && isdefined( var_0.parentencounter ) )
    {
        if ( !check_start_conditions( var_0.parentencounter, var_1, var_2 ) )
            return 0;
    }

    if ( !isdefined( var_0.startconditions[var_1] ) )
        return 1;

    for ( var_3 = 0; var_3 < var_0.startconditions[var_1].size; var_3++ )
    {
        var_4 = var_0.startconditions[var_1][var_3];

        if ( isdefined( var_4.params ) )
            var_5 = self [[ var_4.func ]]( var_4.params );
        else
            var_5 = self [[ var_4.func ]]();

        if ( !var_5 )
            return 0;
    }

    return 1;
}

encounter_start( var_0 )
{
    var_0.state = 1;
    self.activelocations[self.activelocations.size] = var_0;
    var_0.starttime = gettime();
    encounter_location_start_functions( var_0 );
}

encounter_location_start_functions( var_0 )
{
    var_0 encounter_start_functions( var_0.encounter );
}

encounter_start_functions( var_0 )
{
    if ( isdefined( var_0.parentencounter ) )
        encounter_start_functions( var_0.parentencounter );

    if ( isdefined( var_0.func_encounterstart ) )
        self [[ var_0.func_encounterstart ]]();
}

encounter_end( var_0, var_1 )
{
    if ( var_0 )
        self.state = 2;
    else
        self.state = 3;

    self.endtime = gettime();
    self.duration = self.endtime - self.starttime;
    var_2 = self.encounter.info;
    var_2.activelocations = scripts\engine\utility::array_remove( var_2.activelocations, self );
    var_2.lastencounter = self;

    if ( self.usesai )
    {
        foreach ( var_4 in self.agents )
        {
            if ( isalive( var_4 ) )
                var_4 suicide();
        }
    }

    self notify( "_encstr_82A10E72E896977340D1253AEF70FDE3", var_0, var_1 );
}

condition_disabled( var_0 )
{
    return 0;
}

condition_stateis( var_0 )
{
    if ( self.state != var_0 )
        return 0;

    return 1;
}

condition_anyplayerinsideradius( var_0 )
{
    var_1 = var_0 * var_0;
    var_2 = sortbydistance( level.players, self.origin );

    for ( var_3 = 0; var_3 < var_2.size; var_3++ )
    {
        var_4 = var_2[var_3];

        if ( !isalive( var_4 ) )
            continue;

        var_5 = distance2dsquared( var_4.origin, self.origin );

        if ( var_5 < var_1 )
            return 1;
        else
            break;
    }

    return 0;
}

condition_allplayersoutsideradius( var_0 )
{
    var_1 = var_0 * var_0;
    var_2 = sortbydistance( level.players, self.origin );

    for ( var_3 = 0; var_3 < var_2.size; var_3++ )
    {
        var_4 = var_2[var_3];

        if ( !isalive( var_4 ) )
            continue;

        var_5 = distance2dsquared( var_4.origin, self.origin );

        if ( var_5 < var_1 )
            return 0;
        else
            break;
    }

    return 1;
}

condition_insafecircle()
{
    if ( istrue( level.br_circle_disabled ) )
        return 1;

    if ( !isdefined( level.br_circle ) || !isdefined( level.br_circle.safecircleent ) )
        return 0;

    var_0 = _encstr_8A18233F26D6B373C5535613B3D5AABF583020D08BFDCE86F68B4649324ABAB809C65856C7::getsafecircleorigin();
    var_1 = _encstr_8A18233F26D6B373C5535613B3D5AABF583020D08BFDCE86F68B4649324ABAB809C65856C7::getsafecircleradius();
    var_2 = distance2dsquared( self.origin, var_0 );

    if ( var_2 > var_1 * var_1 )
        return 0;

    return 1;
}

condition_circlecount( var_0 )
{
    if ( istrue( level.br_circle_disabled ) )
        return 1;

    if ( !isdefined( level.br_circle ) || !isdefined( level.br_circle.safecircleent ) )
        return 0;

    var_1 = getomnvar( "_encstr_9E6111DD7B51367B18D152EBB9E97F2170FB4D" );

    if ( var_1 < var_0 )
        return 0;

    return 1;
}

condition_circlesremaining( var_0 )
{
    if ( istrue( level.br_circle_disabled ) )
        return 1;

    if ( !isdefined( level.br_circle ) || !isdefined( level.br_circle.circleindex ) )
        return 0;

    var_1 = level.br_level.br_circledelaytimes.size;
    var_2 = var_1 - level.br_circle.circleindex;

    if ( var_2 < var_0 )
        return 0;

    return 1;
}

condition_maxaliveplayers( var_0 )
{
    if ( !isdefined( level.teamdata ) )
        return 0;

    var_1 = 0;

    foreach ( var_3 in level.teamdata )
        var_1 = var_1 + var_3["_encstr_892A0BA3D3F25C4033ADD34893"];

    if ( var_1 > var_0 )
        return 0;

    return 1;
}

condition_maxactivelocations( var_0 )
{
    if ( self.info.activelocations.size >= var_0 )
        return 0;

    return 1;
}

condition_mintimepassed( var_0 )
{
    var_1 = scripts\mp\utility\game::getsecondspassed();

    if ( var_1 < var_0 )
        return 0;

    return 1;
}

condition_lastencounterstarttime( var_0 )
{
    var_1 = self.info;

    if ( isdefined( var_1.lastencounter ) )
    {
        var_2 = ( gettime() - var_1.lastencounter.endtime ) / 1000;

        if ( var_2 < var_0 )
            return 0;
    }

    return 1;
}

condition_prematchdone()
{
    if ( !isdefined( game["_encstr_B8A90699C68576B9"]["_encstr_989F0E38272BD6161DB143F532BDDC2B"] ) )
        return 0;

    if ( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        return 1;

    return 0;
}

condition_debugpaused()
{
    if ( getdvarint( "_encstr_93F3186B31661F3E20CF1DEE4FE8C3138D69F3D31E3F9F73D893", 0 ) )
        return 0;

    return 1;
}

successcondition_enemykills( var_0 )
{
    self endon( "_encstr_82A10E72E896977340D1253AEF70FDE3" );

    for (;;)
    {
        self waittill( "_encstr_AA0E0D0BEC9537D1D7B5D263365932" );

        if ( self.agentskilled >= var_0 )
            encounter_end( 1 );
    }
}

failcondition_noplayersinengagedradius( var_0 )
{
    self endon( "_encstr_82A10E72E896977340D1253AEF70FDE3" );
    var_0 = int( var_0 );
    var_1 = var_0;

    for (;;)
    {
        wait 1;

        if ( self.playersinengagedradius.size > 0 )
        {
            var_0 = var_1;
            continue;
        }

        var_0--;

        if ( var_0 <= 0 )
            encounter_end( 0 );
    }
}

failcondition_outsidedangercircle()
{
    self endon( "_encstr_82A10E72E896977340D1253AEF70FDE3" );

    for (;;)
    {
        wait 1;

        if ( !isdefined( level.br_circle ) || !isdefined( level.br_circle.dangercircleent ) )
            continue;

        var_0 = _encstr_8A18233F26D6B373C5535613B3D5AABF583020D08BFDCE86F68B4649324ABAB809C65856C7::getdangercircleorigin();
        var_1 = _encstr_8A18233F26D6B373C5535613B3D5AABF583020D08BFDCE86F68B4649324ABAB809C65856C7::getdangercircleradius();
        var_2 = distance2dsquared( self.origin, var_0 );

        if ( var_2 > var_1 * var_1 )
        {
            if ( self.playersinengagedradius.size > 0 )
            {

            }
            else
                encounter_end( 0 );

            continue;
        }
    }
}

targetstart_spawner( var_0 )
{
    targetstart_spawner_init( var_0 );
    var_1 = spawn_agent( var_0 );

    if ( isdefined( var_1 ) )
    {
        if ( isdefined( var_0.goalnodes ) )
        {
            var_2 = scripts\engine\utility::random( var_0.goalnodes );
            var_1 setgoalnode( var_2 );
        }

        if ( isdefined( var_0.goalvolumes ) )
        {
            var_3 = scripts\engine\utility::random( var_0.goalvolumes );

            if ( var_3.auto )
                var_1 setgoalvolumeauto( var_3 );
            else
                var_1 setgoalvolume( var_3 );
        }
    }

    return var_1;
}

targetstart_spawner_init( var_0 )
{
    var_0.team = _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::get_ai_team();
    var_0.aitype = [[ self.func_getspawneraitype ]]( var_0 );
    var_1 = var_0 _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::get_targets();

    foreach ( var_3 in var_1 )
    {
        if ( !isdefined( var_3.script_noteworthy ) )
            continue;

        switch ( var_3.script_noteworthy )
        {
            case "_encstr_9FC50CF8329E11260BB7E95D9D6F":
                targetstart_spawner_volume( var_0, var_3, 0 );
                break;
            case "_encstr_8B2E11C84F9160578305E1759DEA0F89ED5B7B":
                targetstart_spawner_volume( var_0, var_3, 1 );
                break;
            case "_encstr_803D0ABC7F9798A785D20818":
            case "_encstr_AA7205F03A9609":
                targetstart_spawner_node( var_0, var_3 );
                break;
            default:
                break;
        }
    }
}

targetstart_spawner_node( var_0, var_1 )
{
    if ( !isdefined( var_0.goalnodes ) )
        var_0.goalnodes = [];

    var_0.goalnodes[var_0.goalnodes.size] = var_1;
}

targetstart_spawner_volume( var_0, var_1, var_2 )
{
    if ( !isdefined( var_0.goalvolumes ) )
        var_0.goalvolumes = [];

    var_1.auto = var_2;
    var_0.goalvolumes[var_0.goalvolumes.size] = var_1;
}

targetstart_icon( var_0 )
{
    var_1 = scripts\mp\objidpoolmanager::requestobjectiveid( 0 );
    scripts\mp\objidpoolmanager::objective_add_objective( var_1, "_encstr_A65A0856F3802ACA0D6B", var_0.origin, "_encstr_8C3F20B4B1DBB9D7DD582F07F6B4CDE8AFDB4CD45636E84BD9957DB3AC37562785C6", "_encstr_899C0D38EF3F5231FE038AB0CC5F9A" );
    objective_setshowoncompass( var_1, 1 );
    objective_setplayintro( var_1, 1 );
    objective_setlabel( var_1, self.iconlabel );
    thread icon_update_visibility( var_1 );
    self waittill( "_encstr_82A10E72E896977340D1253AEF70FDE3" );
    scripts\mp\objidpoolmanager::returnobjectiveid( var_1 );
    objective_delete( var_1 );
}

targetstart_reward( var_0 )
{
    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" )
        return;

    self waittill( "_encstr_82A10E72E896977340D1253AEF70FDE3", var_1, var_2 );

    if ( !var_1 )
        return;

    var_3 = rewardspawn( var_0 );

    if ( !isdefined( var_3 ) )
        return;

    if ( isdefined( var_2 ) )
    {
        var_4 = [];
        var_5 = [];

        foreach ( var_9, var_7 in self.playersinnotifyradius )
        {
            var_8 = self.guidtoplayer[var_9];

            if ( !isdefined( var_8 ) )
                continue;

            if ( var_8.team == var_2 )
            {
                var_4[var_4.size] = var_8;
                continue;
            }

            var_5[var_5.size] = var_8;
        }

        thread rewardicon( var_3, "_encstr_ADF917C3AE82AD861FE790D0F729F8C1E953C8D905FA6F09F4", var_4 );
        thread rewardicon( var_3, "_encstr_80EC15D2F3D0908FA73171985814F5C04181AF2A5FCD3C", var_5 );
        rewardobjectlock( var_3, var_4, var_5 );
    }
    else
    {
        var_10 = [];

        foreach ( var_9, var_7 in self.playersinnotifyradius )
        {
            var_8 = self.guidtoplayer[var_9];

            if ( !isdefined( var_8 ) )
                continue;

            var_10[var_10.size] = var_8;
        }

        thread rewardicon( var_3, "_encstr_ADF917C3AE82AD861FE790D0F729F8C1E953C8D905FA6F09F4", var_10 );
    }
}

targetstart_reward_prespawn( var_0 )
{
    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" )
        return;

    var_1 = rewardspawn( var_0 );
    _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::disablescriptableplayeruseall( var_1 );
    var_2 = createnavobstaclebybounds( var_1.origin, ( 30, 15, 10 ), var_1.angles );
    self waittill( "_encstr_82A10E72E896977340D1253AEF70FDE3", var_3 );
    destroynavobstacle( var_2 );

    if ( isdefined( var_1 ) )
    {
        if ( var_3 )
        {
            _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::enablescriptableplayeruseall( var_1 );
            rewardicon( var_1, "_encstr_ADF917C3AE82AD861FE790D0F729F8C1E953C8D905FA6F09F4" );
        }
        else
            var_1 freescriptable();
    }
}

rewardspawn( var_0, var_1 )
{
    var_2 = var_0.script_parameters;

    if ( !isdefined( var_2 ) )
        var_2 = "_encstr_A47720C0F3CD073033B75A436CBB7BC9B26A405B99A6490B77A455C66BE303BB5CF2";

    var_3 = undefined;

    switch ( var_2 )
    {
        case "_encstr_A47720C0F3CD073033B75A436CBB7BC9B26A405B99A6490B77A455C66BE303BB5CF2":
            var_4 = _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::remove_roof_nodes( var_0.origin + ( 0, 0, 0.1 ), var_0.angles );
            var_3 = _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::spawnpickup( var_2, var_4, 0, 1 );
            break;
        default:
    }

    if ( isdefined( var_4 ) )
    {
        thread rewardobjectusewatch( var_4 );
        thread rewardobjectcleanup( var_4 );
    }

    return var_4;
}

rewardobjectlock( var_0, var_1, var_2 )
{
    rewardobjectsetusable( var_0, var_1 );
    var_3 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0.origin + ( 0, 0, 30 ) );
    var_3 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_3 makeusable();
    var_3 sethintstring( "_encstr_BE1211056FA053EDA7A1D971819BD1CB047E9B" );
    var_3 setuseholdduration( "_encstr_82D40EC8BA4E58E84BF6B9BE36B737D9" );
    var_3 setusefov( 15 );
    var_3 setcursorhint( "_encstr_98110C0B790BBF87AE11E9F1A8F5" );

    foreach ( var_5 in var_1 )
        var_3 disableplayeruse( var_5 );

    thread rewardobjectcleanup( var_3 );
    thread rewardobjectlockthink( var_3, var_0 );
}

rewardobjectlockthink( var_0, var_1 )
{
    self endon( "_encstr_8BC30FC320E37133D1B0FE358583AA2D6B" );
    var_0 waittill( "_encstr_8B5C081B58E0B7A213E6", var_2 );
    var_3 = var_1.scriptablename;
    _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::lootused( var_1, var_3, "_encstr_BE8B08B3B4CD963163B2", var_2 );
}

rewardobjectusewatch( var_0 )
{
    self endon( "_encstr_8BC30FC320E37133D1B0FE358583AA2D6B" );

    while ( isdefined( var_0 ) )
        waitframe();

    self notify( "_encstr_8BC30FC320E37133D1B0FE358583AA2D6B" );
}

rewardobjectcleanup( var_0 )
{
    self waittill( "_encstr_8BC30FC320E37133D1B0FE358583AA2D6B" );

    if ( isdefined( var_0 ) )
    {
        if ( var_0 isscriptable() )
            var_0 freescriptable();
        else
            var_0 delete();
    }
}

rewardobjectsetusable( var_0, var_1 )
{
    _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::disablescriptableplayeruseall( var_0 );

    foreach ( var_3 in var_1 )
        var_0 enablescriptableplayeruse( var_3 );
}

rewardicon( var_0, var_1, var_2 )
{
    var_3 = createrewardicon( var_0, var_1 );

    if ( var_3 < 0 )
        return;

    if ( isdefined( var_2 ) )
    {
        foreach ( var_5 in var_2 )
            objective_addclienttomask( var_3, var_5 );
    }

    thread rewardiconcleanup( var_3 );
}

createrewardicon( var_0, var_1 )
{
    var_2 = scripts\mp\objidpoolmanager::requestobjectiveid();

    if ( var_2 >= 0 )
    {
        scripts\mp\objidpoolmanager::objective_add_objective( var_2, "_encstr_A65A0856F3802ACA0D6B", var_0.origin + ( 0, 0, 50 ), var_1, "_encstr_899C0D38EF3F5231FE038AB0CC5F9A" );
        objective_setshowoncompass( var_2, 1 );
        objective_setplayintro( var_2, !istrue( self.norewardiconintro ) );
        objective_setlabel( var_2, "_encstr_A3AB222494F58252FAA2C9D0D3AA39458A296AF2D38452AF13A02415C4AF49155D284911" );
        objective_showtoplayersinmask( var_2 );
        objective_removeallfrommask( var_2 );
    }

    return var_2;
}

rewardiconcleanup( var_0 )
{
    self waittill( "_encstr_8BC30FC320E37133D1B0FE358583AA2D6B" );
    scripts\mp\objidpoolmanager::returnobjectiveid( var_0 );
}

icon_update_visibility( var_0 )
{
    self endon( "_encstr_82A10E72E896977340D1253AEF70FDE3" );
    objective_showtoplayersinmask( var_0 );

    for (;;)
    {
        objective_removeallfrommask( var_0 );

        foreach ( var_4, var_2 in self.playersinnotifyradius )
        {
            var_3 = self.guidtoplayer[var_4];

            if ( isdefined( var_3 ) )
                objective_addclienttomask( var_0, var_3 );
        }

        self waittill( "_encstr_B364149BB7A3B433F2D7D8D2CDD1F5B1A1C23776B219" );
    }
}

spawn_agent( var_0 )
{
    var_1 = scripts\mp\mp_agent::spawnnewagent( var_0.aitype, var_0.team, var_0.origin, var_0.angles );

    if ( isdefined( var_1 ) )
    {
        var_1.recentkillcount = 0;
        var_1.recentdefendcount = 0;
        var_1.kills = 0;
        var_1.deaths = 0;
        var_1.pers["_encstr_81C910A89FDA9F18A0527BA7DF74C830B630"] = 0;
        var_1.pers["_encstr_BD0511A7B743C848152EF38859EBA396EA4F0F"] = 0;
        var_1.pers["_encstr_8205197F1BD61983A850CD19AB18C2F2275F07F3877EC14EA09887"] = 0;
        var_1.tookweaponfrom = [];
        var_1.killedplayers = [];
        var_1.guid = var_1 scripts\mp\utility\player::getuniqueid();
        var_1.script_noteworthy = var_0.script_noteworthy;
        var_1.scripted_long_deaths = 0;
        var_1.agentdamagefeedback = 1;
        self.agents[self.agents.size] = var_1;
        thread watch_agent_death( var_1 );
    }
    else
    {

    }

    return var_1;
}

watch_agent_death( var_0 )
{
    var_0 waittill( "_encstr_A3750609A5E61883" );
    self.agents = scripts\engine\utility::array_remove( self.agents, var_0 );
    self.agentskilled++;
    self notify( "_encstr_AA0E0D0BEC9537D1D7B5D263365932" );
}

targetstart_spawntrigger( var_0 )
{
    for (;;)
    {
        var_0 waittill( "_encstr_8B5C081B58E0B7A213E6", var_1 );

        if ( isagent( var_1 ) )
            continue;

        break;
    }

    var_2 = var_0 _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::get_targets();

    foreach ( var_4 in var_2 )
        targetstart_spawner( var_4 );
}

root_ecounterstart()
{
    thread root_inittargets();
    thread root_monitorplayers();
    thread root_failconditions();
}

root_getspawneraitype( var_0 )
{
    return var_0.name;
}

root_inittargets()
{
    self.iconlabel = "_encstr_B94F23F2EB790973E1A3700BDDF17477D11997C6F9AE7A61F92876895C3737D5781FDF0395";
    waittillframeend;
    var_0 = _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::get_targets();

    foreach ( var_2 in var_0 )
    {
        var_3 = var_2.script_noteworthy;

        if ( !isdefined( var_3 ) )
            continue;

        switch ( var_3 )
        {
            case "_encstr_B73508B29BB9DBED9533":
                thread targetstart_spawner( var_2 );
                break;
            case "_encstr_AB0D0E6EA8E757E668B3853A0A828F22":
                thread targetstart_spawntrigger( var_2 );
                break;
            case "_encstr_AFC505A3FF8240":
                thread targetstart_icon( var_2 );
                break;
            case "_encstr_8B9F0702DD83EFFAA9":
                thread targetstart_reward( var_2 );
                break;
            case "_encstr_B2EE10B3B8A3F92BBD475BA69D53E00FB306":
                thread targetstart_reward_prespawn( var_2 );
                break;
            default:
                break;
        }
    }
}

root_monitorplayers()
{
    self endon( "_encstr_82A10E72E896977340D1253AEF70FDE3" );
    self.notifyradius = 7500;
    self.engagedradius = 2000;
    self.playersinnotifyradius = [];
    self.playersinengagedradius = [];
    self.guidtoplayer = [];
    waittillframeend;
    var_0 = self.notifyradius * self.notifyradius;
    var_1 = self.engagedradius * self.engagedradius;
    var_2 = 20;

    for (;;)
    {
        var_3 = gettime();
        var_4 = 0;
        var_5 = 0;
        var_6 = 0;

        for ( var_7 = 0; var_7 < level.players.size; var_7++ )
        {
            var_8 = level.players[var_7];

            if ( !isdefined( var_8 ) )
                continue;

            self.guidtoplayer[var_8.guid] = var_8;

            if ( !isalive( var_8 ) )
            {
                if ( isdefined( self.playersinnotifyradius[var_8.guid] ) )
                {
                    var_5 = 1;
                    self.playersinnotifyradius[var_8.guid] = undefined;
                }

                if ( isdefined( self.playersinengagedradius[var_8.guid] ) )
                {
                    var_6 = 1;
                    self.playersinengagedradius[var_8.guid] = undefined;
                }

                continue;
            }

            var_9 = distance2dsquared( var_8.origin, self.origin );

            if ( var_9 <= var_0 )
            {
                if ( !isdefined( self.playersinnotifyradius[var_8.guid] ) )
                    var_5 = 1;

                self.playersinnotifyradius[var_8.guid] = var_3;
            }
            else
            {
                var_10 = self.playersinnotifyradius[var_8.guid];

                if ( isdefined( var_10 ) && var_3 - var_10 > 2000 )
                {
                    var_5 = 1;
                    self.playersinnotifyradius[var_8.guid] = undefined;
                }
            }

            if ( var_9 <= var_1 )
            {
                if ( !isdefined( self.playersinengagedradius[var_8.guid] ) )
                    var_6 = 1;

                self.playersinengagedradius[var_8.guid] = var_3;
            }
            else
            {
                var_10 = self.playersinengagedradius[var_8.guid];

                if ( isdefined( var_10 ) && var_3 - var_10 > 2000 )
                {
                    var_6 = 1;
                    self.playersinengagedradius[var_8.guid] = undefined;
                }
            }

            var_4++;

            if ( var_4 >= var_2 )
            {
                wait 0.05;
                var_4 = 0;
            }
        }

        if ( var_5 )
            self notify( "_encstr_B364149BB7A3B433F2D7D8D2CDD1F5B1A1C23776B219" );

        if ( var_6 )
            self notify( "_encstr_8266150F452482F7A009A96D40F82CB98EE1A7ABCF5D9A" );

        wait 0.05;
    }
}

root_failconditions()
{
    self.failconditionengagedradiustime = 90;
    waittillframeend;
    thread failcondition_noplayersinengagedradius( self.failconditionengagedradiustime );
    thread failcondition_outsidedangercircle();
}

rootai_ecounterstart()
{
    self.usesai = 1;
    self.func_getspawneraitype = ::root_getspawneraitype;
    self.agentskilled = 0;
    self.agents = [];
}

bank_ecounterstart()
{
    self endon( "_encstr_82A10E72E896977340D1253AEF70FDE3" );
    self.func_getspawneraitype = ::bank_getspawneraitype;
    self.iconlabel = "_encstr_8BE920FB5540F8A11975451E2C11FEE1352D37D6C766907F69DD4E9724693A4818B7";
    thread alarm_sound_on();
    thread alarm_sound_off_encounter_end();
    thread vault_door_think();
    var_0 = getent( "_encstr_BC010C33B070AB312578CD09FF93", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_1 = getent( "_encstr_B16B1246F1A8B321F41773C7D13F69E5837B3FCA", "_encstr_B8CE0BE43FC317DF690862BA48" );
    level.wave1_enemies = [];
    var_2 = scripts\engine\utility::getstructarray( "_encstr_A97E0EAC37ACAD2FD7BB163BACAF0C4C", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_4 in var_2 )
    {
        var_5 = targetstart_spawner( var_4 );

        if ( var_5.script_noteworthy == "_encstr_AA7D0D04A11B69A982217060EBAFE5" )
        {
            var_5 setgoalvolumeauto( var_1 );
            var_5.goalheight = 256;
        }
        else if ( var_5.script_noteworthy == "_encstr_80870D5C89334191BA0960706347CD" )
            var_5 setgoalvolumeauto( var_0 );

        level.wave1_enemies = scripts\engine\utility::array_add( level.wave1_enemies, var_5 );
    }

    var_7 = getent( "_encstr_A13E151CC973010FBAAF39B0B3870DBBD77EB01532F789", "_encstr_B8CE0BE43FC317DF690862BA48" );
    waittill_trigger_or_dead( var_7, level.wave1_enemies, level.wave1_enemies.size - 3 );
    level notify( "_encstr_97A10C9BC10BDDCDD7BB2C3B2B23" );
    var_8 = getent( "_encstr_B1010C5E11CB18C7E372E8699F2A", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_9 = [];
    var_10 = scripts\engine\utility::getstructarray( "_encstr_8B7E0EE15A81CB9289C856232D9FA2FA", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_12 in var_10 )
    {
        var_5 = targetstart_spawner( var_12 );
        var_5 setgoalvolumeauto( var_8 );
        var_9 = scripts\engine\utility::array_add( var_9, var_5 );
    }

    foreach ( var_15 in level.wave1_enemies )
    {
        if ( isdefined( var_15 ) && isalive( var_15 ) )
        {
            var_15 setgoalvolumeauto( var_8 );
            var_9 = scripts\engine\utility::array_add( var_9, var_15 );
        }
    }

    _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::waittill_dead( var_9, var_9.size );
    wait 0.5;
    self notify( "_encstr_8FB60BEF8315C8672E477B6983" );
    var_17 = getent( "_encstr_8A010CDD37E8CC59C4BA632FF957", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_18 = [];
    var_19 = scripts\engine\utility::getstruct( "_encstr_9FC213E8229F13E2AFAF6FDC95870377C90A40D06B", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_20 = targetstart_spawner( var_19 );
    var_20 thread jug_behavior();
    var_18 = scripts\engine\utility::array_add( var_18, var_20 );
    _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::waittill_dead( var_18, var_18.size );
    encounter_end( 1 );
}

vault_door_open_wait()
{
    self endon( "_encstr_82A10E72E896977340D1253AEF70FDE3" );
    self waittill( "_encstr_8FB60BEF8315C8672E477B6983" );
}

vault_door_init( var_0 )
{
    if ( istrue( var_0.init ) )
    {
        var_0.angles = var_0.start_angles;
        return;
    }

    var_1 = getent( "_encstr_9DEC104B0195832BC189273FBD99B6CB339B", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_1 linkto( var_0 );
    var_0.start_angles = var_0.angles;
    var_0.init = 1;
}

vault_door_think()
{
    var_0 = getent( "_encstr_B22A0BB0AB8505F3676A4072EB", "_encstr_B8CE0BE43FC317DF690862BA48" );
    vault_door_init( var_0 );
    vault_door_open_wait();
    var_0 thread vault_door_sound();
    var_0 rotateby( ( 0, 180, 0 ), 5 );
}

jug_behavior()
{
    var_0 = sortbydistance( level.players, self.origin );

    for ( var_1 = 0; var_1 < var_0.size; var_1++ )
    {
        var_2 = var_0[var_1];

        if ( isalive( var_2 ) )
        {
            self getenemyinfo( var_2 );
            self setgoalentity( var_2 );
            break;
        }
    }
}

alarm_sound_on()
{
    var_0 = getentarray( "_encstr_A3450F539A381AA7830B0E12D1B902F8DE", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_2 in var_0 )
        var_2 playloopsound( "_encstr_804817C2F879590F08CF0A1DC811D7DDEFD13A5A98310173A3" );
}

alarm_sound_off()
{
    var_0 = getentarray( "_encstr_A3450F539A381AA7830B0E12D1B902F8DE", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_2 in var_0 )
        var_2 stoploopsound( "_encstr_804817C2F879590F08CF0A1DC811D7DDEFD13A5A98310173A3" );
}

vault_door_sound()
{
    var_0 = 4000000;

    foreach ( var_2 in level.players )
    {
        if ( isdefined( var_2 ) && isalive( var_2 ) )
        {
            if ( distancesquared( var_2.origin, self.origin ) <= var_0 )
                var_2 playsound( "_encstr_98E213D9B3CF9EA03DCB277DE923105D27BA3381FA" );
        }
    }
}

waittill_trigger_or_dead( var_0, var_1, var_2, var_3 )
{
    var_4 = spawnstruct();
    var_4 endon( "_encstr_936705F0224D13" );
    var_4 childthread _waittill_trigger( var_0 );
    var_4 childthread _waittill_dead_notify_done( var_1, var_2, var_3 );
    var_4 waittill( "_encstr_936705F0224D13" );
}

_waittill_dead_notify_done( var_0, var_1, var_2 )
{
    _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::waittill_dead( var_0, var_1, var_2 );
    self notify( "_encstr_936705F0224D13" );
}

_waittill_trigger( var_0 )
{
    for (;;)
    {
        var_0 waittill( "_encstr_8B5C081B58E0B7A213E6", var_1 );

        if ( !isplayer( var_1 ) )
            continue;

        break;
    }

    self notify( "_encstr_936705F0224D13" );
}

alarm_sound_off_encounter_end()
{
    self waittill( "_encstr_82A10E72E896977340D1253AEF70FDE3" );
    alarm_sound_off();
}

bank_getspawneraitype( var_0 )
{
    if ( isdefined( var_0.script_noteworthy ) )
    {
        switch ( var_0.script_noteworthy )
        {
            case "_encstr_A6DD05926DD759":
                return "_encstr_B1BD1A85D8E8ED4ED7CACD95ADE5F598E4AF53BA769D959CCD85578E";
            default:
                break;
        }
    }

    return "_encstr_B671140B361DB7937DB2B92BD6E5D7C427BE3185DC59";
}

airport_ecounterstart()
{
    var_0 = getent( "_encstr_BA5E1316A5F556E66CB757E6E8AC4EEB6C4E58E8CA", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_0 movez( 256, 0.05 );
    wait 0.5;
    createnavobstaclebyent( var_0 );
    var_1 = getent( "_encstr_8B6F1AAD4B8DDADB3399AFC24B270EED2747FA2BCDD8BD57CDE85927", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_1 waittill( "_encstr_8B5C081B58E0B7A213E6", var_2 );
    var_3 = "_encstr_802311433F5F07C5494F1BE12DA911CD999558";
    var_4 = magicgrenademanual( var_3, scripts\engine\utility::getstruct( "_encstr_94871785D293E0BD4E1DFA9BD6BD5B2BEB3A7BCDCDF5E0B737", "_encstr_B8CE0BE43FC317DF690862BA48" ).origin, anglestoforward( scripts\engine\utility::getstruct( "_encstr_94871785D293E0BD4E1DFA9BD6BD5B2BEB3A7BCDCDF5E0B737", "_encstr_B8CE0BE43FC317DF690862BA48" ).angles ) * 400, 1 );
    wait 0.1;
    var_5 = magicgrenademanual( var_3, scripts\engine\utility::getstruct( "_encstr_8C611AC2D2C938DE27A3EB375BBDD656D78EDB9B37D738F637F50C91", "_encstr_B8CE0BE43FC317DF690862BA48" ).origin, anglestoforward( scripts\engine\utility::getstruct( "_encstr_8C611AC2D2C938DE27A3EB375BBDD656D78EDB9B37D738F637F50C91", "_encstr_B8CE0BE43FC317DF690862BA48" ).angles ) * 400, 1.3 );
    var_6 = magicgrenademanual( var_3, scripts\engine\utility::getstruct( "_encstr_9E611AC97B38B20F8E3331FB786847AFF9F94F43A7A97AC7364EBFE7", "_encstr_B8CE0BE43FC317DF690862BA48" ).origin, anglestoforward( scripts\engine\utility::getstruct( "_encstr_9E611AC97B38B20F8E3331FB786847AFF9F94F43A7A97AC7364EBFE7", "_encstr_B8CE0BE43FC317DF690862BA48" ).angles ) * 450, 2 );
    var_7 = getent( "_encstr_81170F6BC13A202853D3664B8AC3C8DA02", "_encstr_B8CE0BE43FC317DF690862BA48" );
    wait 2;
    var_8 = [];
    var_9 = scripts\engine\utility::getstructarray( "_encstr_9CBD168B13C2AF5F480B79C0DDAA9DD3E1174A2DCDE8F9B7", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_11 in var_9 )
    {
        var_12 = targetstart_spawner( var_11 );
        var_12 setgoalvolumeauto( var_7 );
        var_12 thread airport_enemy_setup();
        var_8 = scripts\engine\utility::array_add( var_8, var_12 );
    }

    var_14 = getent( "_encstr_A13E151CC973010FBAAF39B0B3870DBBD77EB01532F789", "_encstr_B8CE0BE43FC317DF690862BA48" );
    _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::waittill_dead( var_8, var_8.size );
    encounter_end( 1 );
}

airport_enemy_setup()
{
    self.ignore_all = 1;
    wait( randomfloatrange( 1, 2 ) );
    self.ignore_all = 0;
    self.accuracy = 0.01;
}

truck_encounterstart()
{
    self endon( "_encstr_82A10E72E896977340D1253AEF70FDE3" );
    self.func_getspawneraitype = ::truck_getspawneraitype;
    self.iconlabel = "_encstr_AD25210925EB8252BEA2E4A1A7AAC945A89435CBA74829F56205845198D7A84955682D";
    thread failcondition_noplayersinengagedradius( 90 );
    var_0 = undefined;
    var_1 = undefined;
    var_2 = [];
    var_3 = [];
    var_4 = _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::get_targets();

    foreach ( var_6 in var_4 )
    {
        var_7 = var_6.script_noteworthy;

        if ( !isdefined( var_7 ) )
            continue;

        switch ( var_7 )
        {
            case "_encstr_87760E20FBE6254BB7A4EE6B8F6F51ED":
                var_0 = var_6;
                break;
            case "_encstr_B103115502A719AFA9D2F8B84AF80F534FAE55":
                var_2[var_2.size] = var_6;
                break;
            case "_encstr_ADA60AC218201B7169E062AB":
                var_1 = var_6;
                thread truck_roll_door_init( var_1 );
                break;
            case "_encstr_95B70F2A20539AFFF1C00706F098F727FB":
                var_3[var_3.size] = var_6;
                break;
            default:
                break;
        }
    }

    for (;;)
    {
        var_0 waittill( "_encstr_8B5C081B58E0B7A213E6", var_9 );

        if ( isalive( var_9 ) && isplayer( var_9 ) )
            break;
    }

    destroynavobstacle( var_1 getentitynumber() );
    truck_roll_door_open( var_1 );
    var_10 = [];

    foreach ( var_12 in var_2 )
    {
        var_13 = targetstart_spawner( var_12 );
        var_10 = scripts\engine\utility::array_add( var_10, var_13 );
    }

    _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::waittill_dead( var_10, var_10.size );
    encounter_end( 1 );
}

truck_roll_door_init( var_0 )
{
    self endon( "_encstr_82A10E72E896977340D1253AEF70FDE3" );

    if ( !istrue( var_0.init ) )
    {
        var_0.angle_ref = scripts\engine\utility::getstruct( var_0.target, "_encstr_B8CE0BE43FC317DF690862BA48" );

        if ( !isdefined( var_0.angle_ref.angles ) )
            var_0.angle_ref.angles = ( 0, 0, 0 );

        var_0.start_origin = var_0.origin;
        var_0.start_angles = var_0.angles;
        var_0.init = 1;
    }
    else
    {
        var_0.origin = var_0.start_origin;
        var_0.angles = var_0.start_angles;
    }
}

truck_roll_door_open( var_0 )
{
    var_0 rotatepitch( -90, 1 );
    truck_roll_door_sound( var_0 );
    self notify( "_encstr_989B150B3D6DE2BB318B65AD2059FC7AC8951FEFA19DFA" );
}

truck_roll_door_sound( var_0 )
{
    var_1 = 1000000;

    foreach ( var_3 in level.players )
    {
        if ( isdefined( var_3 ) && isalive( var_3 ) )
        {
            if ( distancesquared( var_3.origin, var_0.origin ) <= var_1 )
                var_3 playsound( "_encstr_A9C71297209958F7FB8ADEC132CBBDF96F890111" );
        }
    }
}

truck_getspawneraitype( var_0 )
{
    return "_encstr_B671140B361DB7937DB2B92BD6E5D7C427BE3185DC59";
}

crateguard_encounterstart()
{
    self endon( "_encstr_82A10E72E896977340D1253AEF70FDE3" );
    self.func_getspawneraitype = ::crateguard_getspawneraitype;
    self.iconlabel = "_encstr_B22F2711CD904E07677849B04C15E1CF610FBF1E0D5D355F91F7F805D42F6EEB9D0938876455EFD291";
    thread failcondition_noplayersinengagedradius( 90 );
    var_0 = undefined;
    var_1 = undefined;
    var_2 = [];
    var_3 = _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::get_targets();

    foreach ( var_5 in var_3 )
    {
        var_6 = var_5.script_noteworthy;

        if ( !isdefined( var_6 ) )
            continue;

        switch ( var_6 )
        {
            case "_encstr_A622069755C123FF":
                var_2[var_2.size] = var_5;
                break;
            case "_encstr_A2120BF76BDE6B993146828E7F":
                var_1 = var_5;
                break;
            case "_encstr_87760E20FBE6254BB7A4EE6B8F6F51ED":
                var_0 = var_5;
                break;
            default:
                break;
        }
    }

    for (;;)
    {
        var_0 waittill( "_encstr_8B5C081B58E0B7A213E6", var_8 );

        if ( isalive( var_8 ) && isplayer( var_8 ) )
            break;
    }

    var_9 = [];

    foreach ( var_11 in var_2 )
    {
        var_12 = targetstart_spawner( var_11 );
        var_9[var_9.size] = var_12;
    }

    var_14 = targetstart_spawner( var_1 );
    var_9[var_9.size] = var_14;
    childthread crateguard_bosssetup( var_14, var_9 );
    _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::waittill_dead( var_9, var_9.size );
    encounter_end( 1 );
}

crateguard_bosssetup( var_0, var_1 )
{
    var_0.ignoreall = 1;
    var_2 = var_1;
    var_2[var_2.size] = var_0;
    scripts\engine\utility::waittill_any_ents_array( var_2, "_encstr_A3750609A5E61883", "_encstr_B8BE07320B5B16ECAC", "_encstr_80BF06CA78A2226B" );

    if ( isdefined( var_0 ) )
        var_0.ignoreall = 0;
}

crateguard_getspawneraitype( var_0 )
{
    if ( isdefined( var_0.script_noteworthy ) && var_0.script_noteworthy == "_encstr_A2120BF76BDE6B993146828E7F" )
        return "_encstr_B47114B2C99D17324973AEAD0B10317BC6E63ADA53F6";

    return "_encstr_B671140B361DB7937DB2B92BD6E5D7C427BE3185DC59";
}

smoking()
{
    setup_anim_guy();
    self.deathstate = "_encstr_81610D9A403B274A8045C1C051E8D7";
    self.deathalias = "_encstr_9C3D0E809202F823DBD79EA4C7FAFB70";
    thread smoking_idle( "_encstr_8CCB0DDAA8786B6AC03F974711F992" );
    thread smoking_react( "_encstr_A8E40E4F1F5A1AF8D6672E838F81F0CD" );
    thread smoking_death( "_encstr_9C3D0E809202F823DBD79EA4C7FAFB70" );
}

smoking_idle( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_B8BE07320B5B16ECAC" );
    thread ai_notetrack_loop( "_encstr_8B2E0868479F803B0207" );

    for (;;)
    {
        smoking_idle_start( "_encstr_9F78136ED6BDB696E63BFA5A191B2BF56E1DC293E8" );
        scripts\asm\shared\mp\utility::burndowntime( var_0 );
        smoking_idle_end( "_encstr_9BDE113325379737B8F7F19A491551FF19D5E1" );
    }
}

smoking_idle_start( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_B8BE07320B5B16ECAC" );
    scripts\asm\shared\mp\utility::burndowntime( var_0 );
}

smoking_idle_end( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_B8BE07320B5B16ECAC" );
    scripts\asm\shared\mp\utility::burndowntime( var_0 );
}

smoking_react( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self waittill( "_encstr_B8BE07320B5B16ECAC" );
    ai_smoking_cleanup();
    self.deathstate = undefined;
    self.deathalias = undefined;

    if ( isdefined( self.idle_prop ) )
    {
        self.idle_prop unlink();
        self.idle_prop physicslaunchserver( self.idle_prop.origin, ( 0, 0, -10 ) );
        self.idle_prop = undefined;
    }

    scripts\asm\shared\mp\utility::burndowntime( var_0 );
    reset_guy( self );
}

smoking_death( var_0 )
{
    self endon( "_encstr_B8BE07320B5B16ECAC" );
    self waittill( "_encstr_A3750609A5E61883" );
    ai_smoking_cleanup();
}

ai_notehandler_smoking( var_0 )
{
    switch ( var_0 )
    {
        case "_encstr_A99A0766F0F0390F7C":
            playfxontag( level.g_effect["_encstr_BA0A108333D8BE235D7BBB52E6AD9B3570A1"], self, "_encstr_B8AE14D3C34C0999E881BF02BBB0B223087D2FE7B96D" );
            break;
        case "_encstr_8BA90608F481F0DB":
            playfxontag( level.g_effect["_encstr_A6D40E601C77479BD7738DAA9F95C3F3"], self, "_encstr_B8AE14D3C34C0999E881BF02BBB0B223087D2FE7B96D" );
            stopfxontag( level.g_effect["_encstr_BA0A108333D8BE235D7BBB52E6AD9B3570A1"], self, "_encstr_B8AE14D3C34C0999E881BF02BBB0B223087D2FE7B96D" );
            playfx( level.g_effect["_encstr_801A0DB15ACE868E2B39F59DD8DBEE"], self gettagorigin( "_encstr_B8AE14D3C34C0999E881BF02BBB0B223087D2FE7B96D" ) );
            thread ai_smoking_blowsmoke();
            break;
        case "_encstr_A9A107B96F4C308EC2":
            stopfxontag( level.g_effect["_encstr_A6D40E601C77479BD7738DAA9F95C3F3"], self, "_encstr_B8AE14D3C34C0999E881BF02BBB0B223087D2FE7B96D" );
            stopfxontag( level.g_effect["_encstr_BA0A108333D8BE235D7BBB52E6AD9B3570A1"], self, "_encstr_B8AE14D3C34C0999E881BF02BBB0B223087D2FE7B96D" );
            playfx( level.g_effect["_encstr_80F9139F318F5876DF03B399D993A3A829843F37B3"], self gettagorigin( "_encstr_B8AE14D3C34C0999E881BF02BBB0B223087D2FE7B96D" ), anglestoforward( self gettagangles( "_encstr_B8AE14D3C34C0999E881BF02BBB0B223087D2FE7B96D" ) ) );
            break;
    }
}

ai_smoking_blowsmoke()
{
    self endon( "_encstr_B79E0CC8E73F209BA2E7989DBD5A" );
    self endon( "_encstr_A3750609A5E61883" );
    self notify( "_encstr_B90E1216B4EBE6F6A3ACE89C58C6B6D731B7DEC1" );
    self endon( "_encstr_B90E1216B4EBE6F6A3ACE89C58C6B6D731B7DEC1" );
    self endon( "_encstr_B8BE07320B5B16ECAC" );

    for (;;)
    {
        playfx( level.g_effect["_encstr_A1A4104010CC5F73927BD1274FE3F31D9F37"], self geteye() - ( 0, 0, 2 ), anglestoforward( self gettagangles( "_encstr_A93008E0529FF7E1B73D" ) ) );
        var_0 = randomintrange( 5, 8 );
        wait( var_0 );
    }
}

ai_smoking_cleanup()
{
    self notify( "_encstr_B79E0CC8E73F209BA2E7989DBD5A" );
    self endon( "_encstr_A3750609A5E61883" );

    if ( scripts\engine\utility::hastag( self.model, "_encstr_B8AE14D3C34C0999E881BF02BBB0B223087D2FE7B96D" ) )
    {
        killfxontag( level.g_effect["_encstr_A6D40E601C77479BD7738DAA9F95C3F3"], self, "_encstr_B8AE14D3C34C0999E881BF02BBB0B223087D2FE7B96D" );
        killfxontag( level.g_effect["_encstr_BA0A108333D8BE235D7BBB52E6AD9B3570A1"], self, "_encstr_B8AE14D3C34C0999E881BF02BBB0B223087D2FE7B96D" );
    }
}

standing_cellphone( var_0 )
{
    if ( !isdefined( var_0 ) )
        var_0 = 0;

    setup_anim_guy();
    self.deathstate = "_encstr_81610D9A403B274A8045C1C051E8D7";
    self.deathalias = "_encstr_93661648938E05519F8B5DC16CCB18FFB56AB1783A2679A8";
    thread ai_notetrack_loop( "_encstr_A27813A394775BA11083A2473A2DE138A118EDA52A" );
    standing_cellphone_anim( "_encstr_9CEA16F215F3D25CD658DFE3386B188A552571ECF031CB6F" );

    if ( var_0 > 0 )
        standing_cellphone_loop( "_encstr_827315B9E885DCC87D8D2B363638D0B73795D763BDB7E0", var_0 );

    standing_cellphone_anim( "_encstr_932515C6F407484159A2B0C06AAA1120638D58B5608FB3" );
}

standing_cellphone_anim( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_B8BE07320B5B16ECAC" );
    scripts\asm\shared\mp\utility::burndowntime( var_0 );
}

standing_cellphone_loop( var_0, var_1 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_B8BE07320B5B16ECAC" );
    scripts\asm\shared\mp\utility::bunkeropened( var_0, var_1 );
}

ai_notehandler_cellphone( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_B8BE07320B5B16ECAC" );

    switch ( var_0 )
    {
        case "_encstr_A99A0766F0F0390F7C":
            self.idle_prop = scripts\common\anim::anim_link_tag_model( "_encstr_A16E212B5CBA2D386BACCDA3D70E59C9377B9BC236D7375B0B398E38A1BDCDB27D0389", "_encstr_B8AE14D3C34C0999E881BF02BBB0B223087D2FE7B96D" );
            wait 2;
            break;
        case "_encstr_A9A107B96F4C308EC2":
            if ( isdefined( self.idle_prop ) )
            {
                self.idle_prop delete();
                self.idle_prop = undefined;
            }

            break;
    }
}

setup_anim_guy()
{
    self.playing_skit = 1;
}

reset_guy( var_0 )
{
    var_0 allowedstances( "_encstr_9F24062875D5FD98", "_encstr_B1AD06374716DC8C", "_encstr_9C3D071B63023B26C3" );
    var_0 scripts\asm\shared\mp\utility::bunkercounteruav();
    var_0 setlookatentity();
    var_0.headlook_enabled = 1;
    var_0.disableautolookat = 0;
    var_0.deathstate = undefined;
    var_0.deathalias = undefined;
    var_0.ignoreall = 0;
    var_0.playing_skit = undefined;

    if ( isdefined( self.anchor ) )
        self.anchor delete();
}

ai_notetrack_loop( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self notify( "_encstr_B90E1216B4EBE6F6A3ACE89C58C6B6D731B7DEC1" );
    self endon( "_encstr_B90E1216B4EBE6F6A3ACE89C58C6B6D731B7DEC1" );
    self endon( "_encstr_B8BE07320B5B16ECAC" );

    for (;;)
    {
        self waittill( "_encstr_81610D9A403B274A8045C1C051E8D7", var_1 );

        if ( !isdefined( var_1 ) )
            var_1 = [ "_encstr_A2500A039865CFC728B5151C" ];

        if ( !isarray( var_1 ) )
            var_1 = [ var_1 ];

        var_2 = undefined;

        foreach ( var_4 in var_1 )
        {
            if ( var_0 == "_encstr_8B2E0868479F803B0207" )
            {
                ai_notehandler_smoking( var_4 );
                continue;
            }

            if ( var_0 == "_encstr_A27813A394775BA11083A2473A2DE138A118EDA52A" )
                ai_notehandler_cellphone( var_4 );
        }
    }
}

test_ecounterstart()
{

}

rootnonai_ecounterstart()
{
    self.usesai = 0;
}

dom_encounterstart()
{
    self.norewardiconintro = 1;
    self.engagedradius = 1500;
    domencounter_icons();
    var_0 = undefined;
    var_1 = _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::get_targets();

    foreach ( var_3 in var_1 )
    {
        var_4 = var_3.script_noteworthy;

        if ( !isdefined( var_4 ) )
            continue;

        switch ( var_4 )
        {
            case "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6":
                var_5 = 315;
                var_6 = 120;
                var_0 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", var_3.origin, 0, int( var_5 ), int( var_6 ) );
                break;
            default:
                break;
        }
    }

    if ( !isdefined( var_0 ) )
        return;

    level.setdomscriptablepartstatefunc = ::domencounter_setdomscriptablepartstate;
    var_8 = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::setupobjective( var_0 );
    var_8.noscriptable = undefined;
    var_8.vfxnamemod = "_encstr_A845057D660681";
    var_8.onuse = ::domencounter_onuse;
    var_8.onuseupdate = ::domencounter_onuseupdate;
    var_8.onenduse = ::domencounter_onenduse;
    var_8 scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
    var_8 _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::domflag_setneutral();
    level.flagcapturetime = getdvarint( "_encstr_B6A21F376C93D716D2F556738DF6EA37E85927E6BE23EDDABEBA9B2BEB47D25B95", 30 );
    var_8 scripts\mp\gameobjects::setusetime( level.flagcapturetime );
    var_8.encounterlocation = self;
    thread encounterdeletedomgameobjectonend( var_8 );
    thread icon_update_visibility( var_8.objidnum );
}

encounterdeletedomgameobjectonend( var_0 )
{
    var_0 endon( "_encstr_AAE208912BB195E85932" );
    self waittill( "_encstr_82A10E72E896977340D1253AEF70FDE3" );

    foreach ( var_2 in var_0.visuals )
        var_2 delete();

    if ( isdefined( var_0.flagmodel ) )
        var_0.flagmodel delete();

    if ( isdefined( var_0.scriptable ) )
        var_0.scriptable delete();

    if ( isdefined( var_0.trigger ) )
    {
        var_0.trigger delete();
        var_0.trigger = undefined;
    }

    var_0 thread gameobjectreleaseid_delayed();
    var_0 notify( "_encstr_AAE208912BB195E85932" );
}

gameobjectreleaseid_delayed()
{
    wait 0.1;
    scripts\mp\gameobjects::releaseid();
}

domencounter_icons()
{
    level.iconneutral = "_encstr_892A1B8FE7F35F1019EDF36E56F92095EB0313356F5B25A029459EC13A";
    level.iconcapture = "_encstr_A64314CB9103031D800DACBF2FF8E2DBAD6B62B1195E";
    level.icondefend = "_encstr_98E2135BA25797D0FCCE712FEC2740D5E30AD6613B";
    level.icondefending = "_encstr_B42A1653074BF7571776BD2157A3251540CD2F6BCAE6CDED";
    level.iconcontested = "_encstr_BDCC16670F1BB7E8F1052B466EAFB8EDB23FE9DBB3C176C8";
    level.icontaking = "_encstr_B41C13EE0BE538ED2D73E8F5470BDAB4E676EB26C9";
    level.iconlosing = "_encstr_A41B139B629757103C0EB1EF24E5A893A37A16A1FB";
    _setdomencountericoninfo( "_encstr_AA99152DD8DEDCBE77B0F2C1DB2D9BE8AF19F6AD7D4C39", "_encstr_9BA4080D39CFFB5AB7C1", "_encstr_B46420C52971DCAB34B570F85E18F3C529AF4F52B5C9965F470FC99165480F4EB9FF", 0 );
    _setdomencountericoninfo( "_encstr_B41C13EE0BE538ED2D73E8F5470BDAB4E676EB26C9", "_encstr_B9FC095F8BCCFF02D92B43", "_encstr_B7CF1F8592585465D710A02537ED2049095058EEEBF69F2E025964550F9F4FCBF7", 1 );
    _setdomencountericoninfo( "_encstr_A64314CB9103031D800DACBF2FF8E2DBAD6B62B1195E", "_encstr_80BF06CA78A2226B", "_encstr_B46420C52971DCAB34B570F85E18F3C529AF4F52B5C9965F470FC99165480F4EB9FF", 0 );
    _setdomencountericoninfo( "_encstr_98E2135BA25797D0FCCE712FEC2740D5E30AD6613B", "_encstr_B9FC095F8BCCFF02D92B43", "_encstr_B9B71FF8278017A501C30515E719FD4B2B7050908C78FBAF21A30E1CCF91F68376", 0 );
    _setdomencountericoninfo( "_encstr_B42A1653074BF7571776BD2157A3251540CD2F6BCAE6CDED", "_encstr_B9FC095F8BCCFF02D92B43", "_encstr_9837225DB1E94423BC0DF860D6E06B4DA127C7DA3D41DFF7D4A5C0787C489771D9635073", 0 );
    _setdomencountericoninfo( "_encstr_8CD0159BAF97336F2BC3F026320A781BDB50E51A1F62CD", "_encstr_B9FC095F8BCCFF02D92B43", "_encstr_9F2B21E95AB9DB8C073F59015F57C499612D70E6245115F4275F616933B73E3F886AF6", 0 );
    _setdomencountericoninfo( "_encstr_B46014FF4B40922F2350E359F989770EB83B644FE5A0", "_encstr_B9FC095F8BCCFF02D92B43", "_encstr_BDE620C1CAA0E9354FF329C14F7FD8CB7155E7125BF92344276F1A65B9C657C1D899", 0 );
    _setdomencountericoninfo( "_encstr_A41B139B629757103C0EB1EF24E5A893A37A16A1FB", "_encstr_80BF06CA78A2226B", "_encstr_8A341FD405D72927A3146AA2EBF4C98956793D09A4FA31E96A5272E8D7A1051435", 1 );
    _setdomencountericoninfo( "_encstr_892A1B8FE7F35F1019EDF36E56F92095EB0313356F5B25A029459EC13A", "_encstr_9BA4080D39CFFB5AB7C1", "_encstr_B46420C52971DCAB34B570F85E18F3C529AF4F52B5C9965F470FC99165480F4EB9FF", 0 );
    _setdomencountericoninfo( "_encstr_BDCC16670F1BB7E8F1052B466EAFB8EDB23FE9DBB3C176C8", "_encstr_B3B5086C7BE68E56E63A", "_encstr_A8A8222588D8871EACD5ED5951E8AB102BB6ADDDC401A37CC89911EB613D6F697D15376F", 1 );
    _setdomencountericoninfo( "_encstr_B2A517487789E3377245ED60DF4A6B4EEC0FE850CF3CDEE52B", "_encstr_9BA4080D39CFFB5AB7C1", "_encstr_AF671FA905BEA4E48E289AA8EB7A728995CBF48429D72AA04AD12A45AFD00AA035", 0 );
    _setdomencountericoninfo( "_encstr_A2441896C67BDCFAEE2CCB07F64BB9477D8E2C27CEB2D1BE98C9", "_encstr_9BA4080D39CFFB5AB7C1", "_encstr_AF671FA905BEA4E48E289AA8EB7A728995CBF48429D72AA04AD12A45AFD00AA035", 0 );
}

_setdomencountericoninfo( var_0, var_1, var_2, var_3 )
{
    level.waypointcolors[var_0] = var_1;
    level.waypointbgtype[var_0] = 0;
    level.waypointstring[var_0] = var_2;
    level.waypointshader[var_0] = "_encstr_9EF51424E97FA0617083B72B22926E2348302FCD3662";
    level.waypointpulses[var_0] = var_3;
}

domencounter_onuseupdate( var_0, var_1, var_2, var_3 )
{
    if ( var_1 > 0.05 && var_2 && !self.didstatusnotify )
        self.didstatusnotify = 1;
}

domencounter_onuse( var_0 )
{
    self.encounterlocation encounter_end( 1, var_0.team );
}

domencounter_onenduse( var_0, var_1, var_2 )
{
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onuseend( var_0, var_1, var_2 );
}

domencounter_setdomscriptablepartstate( var_0, var_1, var_2 )
{
    switch ( var_1 )
    {
        case "_encstr_BD5C0ACEA59A91D903BB4878":
        case "_encstr_9BC505B4461BB2":
        case "_encstr_9819045FD029":
            return 0;
        default:
            var_1 = "_encstr_8B7106D59BA59BD9";

            if ( isdefined( var_2 ) )
                var_1 = var_1 + var_2;

            self.scriptable setscriptablepartstate( var_0, var_1 );

            if ( var_0 == "_encstr_890C06E82D185FD7" )
                self.scriptable setscriptablepartstate( "_encstr_8B7905BF04379F", var_1 );

            return 1;
    }
}

bombplant_encounterstart()
{

}

extraction_encounterstart()
{
    iprintlnbold( "_encstr_BCFB11BF198D81E1811FDC55B4723B19EFE563" );
    var_0 = _encstr_A2682F88228ACB13F35BB88130F6B9A3352A2850ABE737E57362888F310F21751E12A850033F6DC3AF8D25F31C222917C6::get_targets();

    foreach ( var_2 in var_0 )
    {
        var_3 = var_2.script_noteworthy;

        if ( !isdefined( var_3 ) )
            continue;

        switch ( var_3 )
        {
            case "_encstr_802E0B50CBA7BFE8837AA5AE5C":
                extraction_createescort( var_2 );
                break;
            case "_encstr_AA7205F03A9609":
                targetstart_extractiongoal( var_2 );
                break;
            default:
                break;
        }
    }
}

targetstart_extractiongoal( var_0 )
{
    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" )
        return;

    var_1 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0.origin + ( 0, 0, 20 ) );
    var_1 setmodel( "_encstr_8C9313401BC7DF89EF1DC5D0EE23B1676192D878B3" );
    self.goal = var_1;
    var_1.encounter = self;
}

extraction_createescort( var_0 )
{
    var_1 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0.origin + ( 0, 0, 20 ) );
    var_1 setmodel( "_encstr_B47A11DC8543783D2542C0E94BFAEB5137395E" );
    var_1 scriptmodelplayanim( "_encstr_98BF29BF503B274A6128944D2641A2A761217B3370135F2295C05F02B73B0A6CCE08F333882E989AE9E063" );
    var_1 scriptmodelpauseanim( 1 );
    var_1 makeusable();
    var_1 setcursorhint( "_encstr_939A0CEC70DBF521459F5B47F73D" );
    var_1 setuseholdduration( "_encstr_9876109DF38B6B2BC927E071371DE1B3031D" );
    var_1 sethintrequiresholding( 1 );
    var_1 sethintdisplayfov( 120 );
    var_1 setusefov( 120 );
    var_1 setuserange( 80 );
    var_1 sethintstring( &"_encstr_895F188178576595E169D961A14AF1DFBBD43D869FDFCD7F1C70" );
    var_1 setasgametypeobjective();
    var_1 show();
    var_1.readytoextract = 0;
    var_1 thread extraction_escortthink();
    self.escort = var_1;
    var_1.encounter = self;
}

extraction_escortthink()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        self waittill( "_encstr_8B5C081B58E0B7A213E6", var_0 );

        if ( !self.readytoextract )
        {
            var_0 extraction_playerpickupbody( self, var_0.team );
            continue;
        }

        thread extraction_attachfultonballoontoescort( var_0 );
    }
}

extraction_playerpickupbody( var_0, var_1 )
{
    self endon( "_encstr_88120C1365C87B0858E1F685D980" );
    var_0 makeunusable();
    var_2 = scripts\mp\hud_util::createfontstring( "_encstr_AA1608C07786F13312D3", 1.5 );
    var_2 scripts\mp\hud_util::setpoint( "_encstr_B1C4073FFD25110DE3", "_encstr_B1C4073FFD25110DE3", 0, 120 );
    var_2.label = &"_encstr_BA9F1391688675E5916979C1613ED74CEFE2089D89";
    self.holdingbodyhud = var_2;
    var_0 scriptmodelplayanim( "_encstr_ABC91C4B589DA1FF63C80837F6CBBFF7EBE973E28007690B78C61C3184B1" );
    var_0 linkto( self, "_encstr_A4DF0EA22FDB1D6E7BA08FB012EF224F", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    self allowads( 0 );
    self allowcrouch( 0 );
    self allowprone( 0 );
    self allowjump( 0 );
    _encstr_87D224DBF00DBC23536EFFA5875037C64BA833F3D08BF2A649D687B215E3B30ED7681EAA205F::playersetcarryteammates( 1 );

    while ( !self stancebuttonpressed() || !self isonground() )
        waitframe();

    extraction_dropbody( var_0, self, var_2, var_1 );
}

extraction_dropbody( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( var_1 ) )
    {
        var_1 allowads( 1 );
        var_1 allowcrouch( 1 );
        var_1 allowprone( 1 );
        var_1 allowjump( 1 );
        _encstr_87D224DBF00DBC23536EFFA5875037C64BA833F3D08BF2A649D687B215E3B30ED7681EAA205F::playersetcarryteammates( 0 );
    }

    if ( isdefined( var_2 ) )
        var_2 destroy();

    if ( var_0 islinked() )
        var_0 unlink();

    var_4 = undefined;

    if ( isdefined( var_1 ) )
    {
        var_0.angles = var_1.angles;
        var_4 = var_1.origin;
        var_0.origin = var_4 + ( 0, 0, 40 );
    }
    else
    {
        var_4 = var_0.origin;
        var_0.origin = var_4 + ( 0, 0, 40 );
    }

    var_0 scriptmodelplayanim( "_encstr_98BF29BF503B274A6128944D2641A2A761217B3370135F2295C05F02B73B0A6CCE08F333882E989AE9E063" );
    var_0 scriptmodelpauseanim( 1 );
    var_0.origin = var_4 + ( 0, 0, 1 );
    var_0 makeusable();

    if ( var_0 extraction_checkescortradius() )
        var_0 extraction_changeescortusefunction();

    var_0 notify( "_encstr_88120C1365C87B0858E1F685D980" );
}

extraction_checkescortradius( var_0 )
{
    if ( distance2d( self.origin, self.encounter.goal.origin ) < 100 )
        return 1;
    else
        return 0;
}

extraction_changeescortusefunction()
{
    self makeusable();
    self setcursorhint( "_encstr_939A0CEC70DBF521459F5B47F73D" );
    self setuseholdduration( "_encstr_82D40EC8BA4E58E84BF6B9BE36B737D9" );
    self sethintrequiresholding( 1 );
    self sethintstring( &"_encstr_895F188178576595E169D961A14AF1DFBBD43D869FDFCD7F1C70" );
    self.readytoextract = 1;
}

extraction_attachfultonballoontoescort( var_0 )
{
    self.encounter encounter_end( 1 );
    self.encounter.goal delete();
    self delete();
}

destruction_encounterstart()
{
    var_0 = getscriptablearray( self.target, "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_1 = [];

    foreach ( var_3 in var_0 )
    {
        var_4 = var_3.script_noteworthy;

        if ( !isdefined( var_4 ) )
            continue;

        switch ( var_4 )
        {
            case "_encstr_A6CB08A5FD5713457D3B":
                var_1[var_1.size] = var_3;
                break;
            default:
                break;
        }
    }
}
