// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

setupobjective( var_0, var_1, var_2 )
{
    var_3 = undefined;
    var_4 = undefined;

    if ( isdefined( level.curobj ) )
        level.curobj scripts\mp\gameobjects::deleteuseobject();

    if ( isdefined( var_0.originalpos ) )
        var_0.origin = var_0.originalpos;
    else
        var_0.originalpos = var_0.origin;

    var_5 = getentarray( var_0.target, "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( isdefined( var_0.objectivekey ) )
        var_6 = var_0.objectivekey;
    else
        var_6 = var_0.script_label;

    if ( istrue( var_2 ) )
        var_7 = getreservedobjid( var_6 );
    else
        var_7 = undefined;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507035309" || scripts\mp\utility\game::getgametype() == "_encstr_A17E06A3F6FA46C8" )
    {
        var_4 = var_0.script_label;
        var_8 = getent( "_encstr_95B3118DA7497D58DD2370E02BED96B7A20C7F" + var_4, "_encstr_B8CE0BE43FC317DF690862BA48" );

        if ( scripts\mp\utility\game::inovertime() )
        {
            if ( var_4 == "_encstr_B80703EB16" || var_4 == "_encstr_A40703FA31" )
            {
                var_0 delete();
                var_5[0] delete();
                var_8 delete();
                return;
            }

            var_3 = scripts\mp\gameobjects::createuseobject( "_encstr_9BA4080D39CFFB5AB7C1", var_0, var_5, ( 0, 0, 64 ), var_7, var_1 );
            var_3 scripts\mp\gameobjects::allowuse( "_encstr_BC19047780DA" );
            var_3.trigger.script_label = "_encstr_B80703EB16";
        }
        else if ( var_4 == "_encstr_950703BF07" )
        {
            var_0 delete();
            var_5[0] delete();
            var_8 delete();
            return;
        }
    }
    else if ( scripts\mp\utility\game::getgametype() == "_encstr_BD07030251" )
        setomnvar( "_encstr_89AD13879AB76248D52E5F1F27F06BF3C1A3B39135", 0 );

    if ( !isdefined( var_3 ) )
    {
        var_3 = scripts\mp\gameobjects::createuseobject( game["_encstr_95A70AA81FEE295D3A2F56DE"], var_0, var_5, ( 0, 0, 64 ), var_7, var_1 );
        var_3 scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );
    }

    if ( isdefined( var_0.objectivekey ) )
        var_3.objectivekey = var_0.objectivekey;
    else
        var_3.objectivekey = var_3 scripts\mp\gameobjects::getlabel();

    if ( isdefined( var_0.iconname ) )
        var_3.iconname = var_0.iconname;
    else
        var_3.iconname = var_3 scripts\mp\gameobjects::getlabel();

    var_3.id = "_encstr_BED80A317BD631BE3DF673CA";
    var_3.trigger setusepriority( -3 );
    var_3 scripts\mp\gameobjects::setusetime( level.planttime );
    var_3 scripts\mp\gameobjects::setwaitweaponchangeonuse( 0 );
    var_3 scripts\mp\gameobjects::setusehinttext( &"_encstr_AB521CA628F2247A6211EBA8F4FA143128E415BE511605267A9A92AC159A" );
    var_3.trigger setuseholdduration( "_encstr_88C20E3998B33933533F7207B8280675" );

    if ( !level.multibomb )
        var_3 scripts\mp\gameobjects::setkeyobject( level.sdbomb );

    if ( var_3.objectivekey == "_encstr_950703BF07" )
    {
        var_3.objectivekey = "_encstr_B80703EB16";
        var_3.iconname = "_encstr_B80703EB16";
    }

    if ( ( scripts\mp\utility\game::getgametype() == "_encstr_A17E06A3F6FA46C8" || scripts\mp\utility\game::getgametype() == "_encstr_881904634971" ) && scripts\mp\utility\game::inovertime() )
    {
        var_3 scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_8B3610DD58E538DE9673D1AFA3854ED9CAE8" );
        var_3 scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
    }

    var_3.onbeginuse = ::bombzone_onbeginuse;
    var_3.onenduse = ::bombzone_onenduse;
    var_3.onuse = ::bombzone_onuseplantobject;
    var_3.oncantuse = ::bombzone_oncantuse;
    var_3.useweapon = getcompleteweaponname( "_encstr_B22C12108D8B47BB1F3AA0D24E8EE8E858AE7863" );
    var_3.bombplanted = 0;
    var_3.bombexploded = undefined;
    var_3.resetprogress = level.resetprogress;

    for ( var_9 = 0; var_9 < var_5.size; var_9++ )
    {
        if ( isdefined( var_5[var_9].script_exploder ) )
        {
            var_3.exploderindex = var_5[var_9].script_exploder;
            var_5[var_9] thread setupkillcament( var_3 );
            break;
        }
    }

    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507035309" )
    {
        var_3.bombdefusetrig = getent( var_5[0].target, "_encstr_B8CE0BE43FC317DF690862BA48" );
        var_3.bombdefusetrig.origin = var_3.bombdefusetrig.origin + ( 0, 0, -10000 );
        var_3.bombdefusetrig.label = var_4;
    }
    else
    {
        var_10 = getent( var_5[0].target, "_encstr_B8CE0BE43FC317DF690862BA48" );
        var_10 delete();
        var_3.bombdefusetrig = var_3.trigger;
    }

    var_3.noweapondropallowedtrigger = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", var_3.trigger.origin, 0, 140, 100 );
    return var_3;
}

getreservedobjid( var_0 )
{
    if ( var_0 == "_encstr_B80703EB16" )
        var_1 = 0;
    else
        var_1 = 1;

    return var_1;
}

setupkillcament( var_0 )
{
    var_1 = spawn( "_encstr_A3050EDF6FF5DC081CC1AFA37097B80B", self.origin );
    var_1.angles = self.angles;
    var_1 rotateyaw( -45, 0.05 );
    waitframe();
    var_2 = undefined;
    var_3 = self.origin + ( 0, 0, 45 );
    var_4 = self.origin + anglestoforward( var_1.angles ) * 100 + ( 0, 0, 128 );
    var_5 = [ "_encstr_98C1190E865EE6D26CDC36DE73A32B73E8E6EB6C1B5A0EB91AED1D", "_encstr_BD431CE7B0D853097F67676D6BE477B61B072950F79BD30A5247185850D0", "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_B7D018B89C4B13AC473342305523920D607E50E3571038A69138" ];
    var_6 = physics_createcontents( var_5 );
    var_7 = scripts\engine\trace::ray_trace( var_3, var_4, self, var_6 );
    var_2 = var_7["_encstr_B7260923C89E8F3378E72E"];

    switch ( scripts\cp_mp\utility\game_utility::getmapname() )
    {
        case "_encstr_975D094513E16B13BDCBCB":
        case "_encstr_BA940CB61CEBE6C1B22C93FA38B5":
            if ( var_0.objectivekey == "_encstr_B80703EB16" )
                var_2 = ( 1373, 2048, 213 );

            break;
        default:
            break;
    }

    self.killcament = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_2 );
    self.killcament setscriptmoverkillcam( "_encstr_97440AC1EBAB51188231BD83" );
    var_0.killcamentnum = self.killcament getentitynumber();
    var_1 delete();
}

allowedwhileplanting( var_0 )
{
    scripts\common\utility::allow_jump( var_0 );
    scripts\mp\utility\player::allow_gesture( var_0 );

    if ( var_0 )
    {
        scripts\engine\utility::_id_143B9( 0.8, "_encstr_B1DB14EB18C80A99B341655D342752D671885F53D863" );
        scripts\common\utility::allow_melee( var_0 );
        scripts\common\utility::allow_mantle( var_0 );
    }
    else
    {
        scripts\common\utility::allow_melee( var_0 );
        scripts\common\utility::allow_mantle( var_0 );
    }

    scripts\common\utility::allow_offhand_weapons( var_0 );
}

setbombplantingomnvar( var_0 )
{
    wait 0.35;

    if ( var_0 == "_encstr_B80703EB16" )
        var_1 = 1;
    else
        var_1 = 2;

    setomnvar( "_encstr_A13114956B36530D0BD8312AC041C75BA9C61C3170D9", var_1 );
}

setbombdefusingomnvar( var_0 )
{
    wait 0.35;

    if ( var_0 == "_encstr_B80703EB16" )
        var_1 = 3;
    else
        var_1 = 4;

    setomnvar( "_encstr_A13114956B36530D0BD8312AC041C75BA9C61C3170D9", var_1 );
}

bombzone_onbeginuse( var_0 )
{
    var_0 thread allowedwhileplanting( 0 );

    if ( !scripts\mp\gameobjects::isfriendlyteam( var_0.pers["_encstr_89EF05D46BA8FD"] ) && self.bombplanted )
    {
        if ( level.codcasterenabled )
            var_0 setgametypevip( 1 );

        var_0 scripts\mp\bots\bots_util::notify_enemy_bots_bomb_used( "_encstr_820C071947B26D4085" );
        var_0 notify( "_encstr_9F6610CAB5994B36395F800A66930A8B5BDD" );
        var_0.isdefusing = 1;
        var_0 thread setbombdefusingomnvar( self.objectivekey );
        setomnvar( "_encstr_B77B10EA96D74CDE6B98AF465966ABCDAC4E", var_0 getentitynumber() );
        scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_B99D1873C6D920103A0B517F432269F8A71FB9E96F2678C0624B", "_encstr_B7A717771BC04F023AB53BA7133A35DA90B3DD8078A73016BF" );
        scripts\mp\objidpoolmanager::objective_teammask_removefrommask( self.radialtimeobjid, var_0.team );
        scripts\mp\utility\game::setmlgannouncement( 2, var_0.team, var_0 getentitynumber() );

        if ( isdefined( level.sdbombmodel ) )
            level.sdbombmodel hide();
        else if ( isdefined( level.ddbombmodel[self.objectivekey] ) )
            level.ddbombmodel[self.objectivekey] hide();

        var_0 thread startnpcbombusesound( "_encstr_9C08198B83C8E7426B0EC3E849D37FF0D1D80189933746CF4183A8", "_encstr_8BB11CF3D77FF32708EB8F20578F7B204E5F579717E0EA81D94D23933735" );
    }
    else
    {
        var_1 = 2;

        if ( self.objectivekey == "_encstr_B80703EB16" )
            var_1 = 1;

        var_0 scripts\mp\bots\bots_util::notify_enemy_bots_bomb_used( "_encstr_8C4E06E38023450B" );
        var_0 notify( "_encstr_9F6610CAB5994B36395F800A66930A8B5BDD" );
        var_0.isplanting = 1;
        var_0.bombplantweapon = self.useweapon;
        var_0 thread setbombplantingomnvar( self.objectivekey );
        scripts\mp\utility\dialog::statusdialog( "_encstr_A9DC0EF6806B0A916781D7F3A983CA47" + self.objectivekey, var_0.team, "_encstr_A96D0726D4272B4372" );
        scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_944B10F7CF52BBADA31823A97083A7A7E825", "_encstr_BEB0172BD938801A533D0BAF0D0862CA6183653690E851C2BC" );
        var_0 thread startnpcbombusesound( "_encstr_B22C12108D8B47BB1F3AA0D24E8EE8E858AE7863", "_encstr_94301BD03A36919EB7F533B5FB27C37311F3E8B8334F9771871C4520DE" );
    }
}

bombzone_onenduse( var_0, var_1, var_2 )
{
    if ( var_2 && istrue( var_1.isdefusing ) )
        setomnvar( "_encstr_A13114956B36530D0BD8312AC041C75BA9C61C3170D9", 0 );

    setomnvar( "_encstr_B77B10EA96D74CDE6B98AF465966ABCDAC4E", -1 );
    var_3 = self.objidnum;

    if ( level.resetprogress )
    {
        scripts\mp\objidpoolmanager::objective_set_progress( var_3, 0 );
        scripts\mp\objidpoolmanager::objective_show_progress( var_3, 0 );
    }

    if ( !var_2 )
    {
        if ( scripts\mp\utility\game::inovertime() && self.bombplanted == 0 )
            self.showprogressforteam = undefined;

        if ( var_1.isdefusing )
            scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_8157137785F2E0DEA5DC47EB32B233AB37ACFADC8E", "_encstr_B99D1873C6D920103A0B517F432269F8A71FB9E96F2678C0624B" );
        else if ( scripts\mp\utility\game::getgametype() == "_encstr_9D19041941CD" )
            scripts\mp\gameobjects::setobjectivestatusicons( level.iconplant );
        else
            scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_944B10F7CF52BBADA31823A97083A7A7E825", "_encstr_8B3610DD58E538DE9673D1AFA3854ED9CAE8" );

        if ( isdefined( self.radialtimeobjid ) )
            scripts\mp\objidpoolmanager::objective_teammask_addtomask( self.radialtimeobjid, var_1.team );
    }

    if ( !isdefined( var_1 ) )
        return;

    var_1 thread allowedwhileplanting( 1 );
    var_1.bombplantweapon = undefined;

    if ( isalive( var_1 ) )
    {
        var_1.isdefusing = 0;
        var_1.isplanting = 0;
    }

    if ( isplayer( var_1 ) )
    {
        var_1 setclientomnvar( "_encstr_8038139574D9F7694A8F08A8A78E415FE3DB079DCF", 0 );
        var_1.ui_bomb_planting_defusing = undefined;
    }

    if ( scripts\mp\gameobjects::isfriendlyteam( var_1.pers["_encstr_89EF05D46BA8FD"] ) )
    {
        if ( level.codcasterenabled )
            var_1 setgametypevip( 0 );
    }
    else if ( isdefined( level.sdbombmodel ) && !var_2 )
    {
        if ( self.bombplanted )
            level.sdbombmodel show();
    }
    else if ( isdefined( level.ddbombmodel ) )
    {
        if ( isdefined( level.ddbombmodel[self.objectivekey] ) && !var_2 )
            level.ddbombmodel[self.objectivekey] show();
    }
}

startnpcbombusesound( var_0, var_1 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_8959111AFD17CB9EDBC0EB5798B15BE2CB1827" );

    if ( scripts\mp\utility\game::isanymlgmatch() || istrue( level.silentplant ) || scripts\mp\utility\perk::_hasperk( "_encstr_AD63136E0ECA1B5A85633AE5AFB29BB3B47359B239" ) )
    {
        self setentitysoundcontext( "_encstr_BDBA0DA753CD2DE8AC60FA1058025B", "_encstr_9707035F3B" );
        return;
    }

    for (;;)
    {
        self waittill( "_encstr_89390E4C39FEB818C099781C19966AEB", var_2 );

        if ( var_2.basename == var_0 )
            break;
    }

    self playsoundtoteam( var_1, self.team, self );
    var_3 = scripts\mp\utility\game::getotherteam( self.team )[0];
    self playsoundtoteam( var_1, var_3 );
    self waittill( "_encstr_89390E4C39FEB818C099781C19966AEB" );
    self notify( "_encstr_8959111AFD17CB9EDBC0EB5798B15BE2CB1827" );
}

bombzone_oncantuse( var_0 )
{

}

bombzone_onuseplantobject( var_0 )
{
    if ( scripts\mp\utility\game::inovertime() && self.bombplanted == 0 || !scripts\mp\gameobjects::isfriendlyteam( var_0.pers["_encstr_89EF05D46BA8FD"] ) )
    {
        self.showprogressforteam = undefined;
        level thread bombzone_onbombplanted( self, var_0 );
        var_0 playsound( "_encstr_BC730E98EBB166C8E73657A870A33033" );
        var_0 notify( "_encstr_973D0D13EDAD13EBC1D8C29BA32B91" );
        var_1 = 2;

        if ( self.objectivekey == "_encstr_B80703EB16" )
            var_1 = 1;

        scripts\mp\utility\game::setmlgannouncement( 0, var_0.team, var_0 getentitynumber(), var_1 );
        var_0 scripts\mp\utility\stats::incpersstat( "_encstr_8BB00783957F8B8B08", 1 );
        var_0 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_8BB00783957F8B8B08", var_0.pers["_encstr_8BB00783957F8B8B08"] );
        var_0 scripts\cp_mp\pet_watch::addplantingcharge();
        var_0 scripts\mp\utility\stats::setextrascore0( var_0.pers["_encstr_8BB00783957F8B8B08"] );

        if ( isdefined( level.sd_loadout ) && isdefined( level.sd_loadout[var_0.team] ) )
            var_0 thread removebombcarrierclass();

        if ( scripts\mp\utility\game::getgametype() != "_encstr_881904634971" )
        {
            if ( scripts\mp\utility\game::inovertime() )
                scripts\mp\utility\dialog::statusdialog( "_encstr_81B513CD23B9F0B371FBB55B76A80B10817E0B05E5", scripts\mp\utility\game::getotherteam( var_0.team )[0], 1 );
            else
                scripts\mp\utility\dialog::statusdialog( "_encstr_A4780B2BCDAC6BF2AF31DBADC4" + self.objectivekey, scripts\mp\utility\game::getotherteam( var_0.team )[0], 1 );

            scripts\mp\utility\dialog::statusdialog( "_encstr_973D0D13EDAD13EBC1D8C29BA32B91", var_0.team, 1 );
        }

        level thread scripts\mp\hud_util::teamplayercardsplash( "_encstr_B7C714726971FB95F8B13F0AAF101E53A9815A8B71DD", var_0 );
        level.bombowner = var_0;
        var_0 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_8C4E06E38023450B" );
        var_0.bombplantedtime = gettime();

        if ( isplayer( var_0 ) )
        {
            var_0 scripts\cp\vehicles\vehicle_compass_cp::_id_12062();
            var_0 thread scripts\common\utility::_id_13E0A( level._id_11B29, "_encstr_8C4E06E38023450B", var_0.origin );
        }
    }
}

bombzone_onusedefuseobject( var_0 )
{
    var_1 = 0;
    setomnvar( "_encstr_A13114956B36530D0BD8312AC041C75BA9C61C3170D9", 0 );

    foreach ( var_3 in level.objectives )
    {
        if ( isdefined( var_3.objectivekey ) && var_3.objectivekey == self.objectivekey )
        {
            var_0 notify( "_encstr_B9A10DD145CDB008EA27752B0782ED" + var_3.objectivekey );
            level thread bombdefused( var_3 );
            break;
        }
    }

    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507035309" )
    {
        scripts\mp\gameobjects::disableobject();
        iprintln( &"_encstr_AABB19AFA2683511F7A3B73729F43F0E471750E02B41CD4CA76091", var_0 );
    }

    scripts\mp\utility\dialog::statusdialog( "_encstr_B3E613CAB956B62FAF4CF6DA89EB912B6657E6CA32", scripts\mp\utility\game::getotherteam( var_0.team )[0], 1 );
    scripts\mp\utility\dialog::statusdialog( "_encstr_B9A10DD145CDB008EA27752B0782ED", var_0.team, 1 );
    level thread scripts\mp\hud_util::teamplayercardsplash( "_encstr_93961489F253E9A08BA47705D7F5B0A51F1AC3331AAB", var_0 );
    var_0 scripts\cp\vehicles\vehicle_compass_cp::_id_1201F();
    scripts\mp\events::bombdefused( var_0 );
}

bombzone_onbombplanted( var_0, var_1 )
{
    level endon( "_encstr_ADC10F59E2A73E90D1633B2D8B87B0752B" );
    level notify( "_encstr_973D0D13EDAD13EBC1D8C29BA32B91", var_0 );
    var_2 = var_1.team;
    level.bombdefused = 0;
    var_0.bombdefused = 0;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507035309" && level.bombsplanted <= 0 )
    {
        scripts\mp\gamelogic::pausetimer();
        level.timepausestart = gettime();
    }

    level.bombplanted = 1;
    level.bombsplanted = level.bombsplanted + 1;

    if ( scripts\mp\utility\game::getgametype() != "_encstr_9D19041941CD" )
        level.timelimitoverride = 1;

    level.defuseendtime = int( gettime() + level.bombtimer * 1000 );

    if ( var_0.objectivekey == "_encstr_B80703EB16" )
        level.aplanted = 1;
    else
        level.bplanted = 1;

    setbombtimeromnvars( var_1.team );
    level.destroyedobject = var_0;
    level.destroyedobject.bombplanted = 1;

    if ( !level.multibomb )
    {
        var_1 setclientomnvar( "_encstr_815A11ABE7B1F64022CA7248F51F79BE6A1F7D", 0 );
        setomnvar( "_encstr_B15A10ED237E1B55539089426085CAEF9116", -1 );
        setgameendtime( level.defuseendtime );
    }

    var_0.visuals[0] thread scripts\mp\gamelogic::playtickingsound();
    level.tickingobject = var_0.visuals[0];

    if ( !level.multibomb )
    {
        level.sdbomb scripts\mp\gameobjects::allowcarry( "_encstr_AABA05236DC831" );
        level.sdbomb scripts\mp\gameobjects::setvisibleteam( "_encstr_AABA05236DC831" );
        var_3 = removespawnprotectiononnotify();
        level.sdbomb scripts\mp\gameobjects::setdropped( undefined, scripts\engine\utility::ter_op( var_3 > 0, var_3, undefined ) );
        level.sdbombmodel = level.sdbomb.visuals[0];
        level.sdbombmodel setteaminhuddatafromteamname( var_2 );
        level.sdbombmodel setasgametypeobjective();
    }
    else if ( scripts\mp\utility\game::getgametype() == "_encstr_881904634971" )
    {

    }
    else if ( scripts\mp\utility\game::getgametype() == "_encstr_9507035309" || scripts\mp\utility\game::getgametype() == "_encstr_9D19041941CD" )
    {
        level.ddbombmodel[var_0.objectivekey] = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_1.origin );
        level.ddbombmodel[var_0.objectivekey].angles = var_1.angles;
        level.ddbombmodel[var_0.objectivekey] setmodel( getbombmodel() );
        level.ddbombmodel[var_0.objectivekey] setasgametypeobjective();
        level.ddbombmodel[var_0.objectivekey] setnonstick( 1 );
    }
    else if ( scripts\mp\utility\game::getgametype() == "_encstr_A17E06A3F6FA46C8" )
    {
        var_4 = var_0.trigger.origin;
        var_5 = var_0.trigger.angles;
        var_6 = ( 0, 0, 0 );

        if ( isdefined( level.tacopssublevel ) )
        {
            if ( var_0.objectivekey == "_encstr_B80703EB16" )
            {
                var_6 = ( 0, 0, 50 );
                var_5 = ( -90, -45, 0 );
            }
            else
            {
                var_6 = ( 0, 0, 50 );
                var_5 = ( -90, 90, 0 );
            }
        }

        level.ddbombmodel[var_0.objectivekey] = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_4 + var_6 );
        level.ddbombmodel[var_0.objectivekey].angles = var_5;
        level.ddbombmodel[var_0.objectivekey] setmodel( getbombmodel() );
        level.ddbombmodel[var_0.objectivekey] setasgametypeobjective();
    }
    else
    {
        level.sdbombmodel = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_1.origin );
        level.sdbombmodel.angles = var_1.angles;
        level.sdbombmodel setmodel( getbombmodel() );
        level.sdbombmodel setasgametypeobjective();
        level.sdbombmodel setnonstick( 1 );
    }

    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507035309" && scripts\mp\utility\game::getgametype() != "_encstr_A17E06A3F6FA46C8" && scripts\mp\utility\game::getgametype() != "_encstr_881904634971" || scripts\mp\utility\game::getgametype() != "_encstr_9D19041941CD" )
    {
        var_0 scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
        var_0 scripts\mp\gameobjects::setvisibleteam( "_encstr_AABA05236DC831" );
    }

    var_7 = [];

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507035309" || scripts\mp\utility\game::getgametype() == "_encstr_A17E06A3F6FA46C8" || scripts\mp\utility\game::getgametype() == "_encstr_881904634971" || scripts\mp\utility\game::getgametype() == "_encstr_9D19041941CD" )
    {
        var_8 = var_0;
        var_8 scripts\mp\gameobjects::setownerteam( var_1.team );
    }
    else
    {
        var_9 = var_0.bombdefusetrig;
        var_9.origin = level.sdbombmodel.origin;
        var_10 = game["_encstr_941C0A6AF345075ED05BEAD3"];
        var_0 scripts\mp\gameobjects::releaseid( 1, 1 );
        var_8 = scripts\mp\gameobjects::createuseobject( var_10, var_9, var_7, ( 0, 0, 32 ) );
        scripts\mp\objidpoolmanager::objective_set_play_intro( var_8.objidnum, 0 );
        scripts\mp\objidpoolmanager::objective_set_play_outro( var_8.objidnum, 0 );
    }

    var_8.objectivekey = var_0.objectivekey;
    var_8.iconname = var_0.iconname;
    var_8.id = "_encstr_ABDB0EF5AD5363378F2998F852A7CF9B";
    var_8.trigger setusepriority( -3 );

    if ( scripts\mp\utility\game::getgametype() == "_encstr_881904634971" )
        var_8 scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
    else
        var_8 scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );

    var_8 scripts\mp\gameobjects::setusetime( level.defusetime );
    var_8 scripts\mp\gameobjects::setwaitweaponchangeonuse( 0 );
    var_8 scripts\mp\gameobjects::setusehinttext( &"_encstr_8AAB1D3541E590D36222D7A2F4D7885432AAA651FA518541317AA652B251A6" );
    var_8.trigger setuseholdduration( "_encstr_88C20E3998B33933533F7207B8280675" );
    var_8 scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
    var_8 scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_B99D1873C6D920103A0B517F432269F8A71FB9E96F2678C0624B", "_encstr_8157137785F2E0DEA5DC47EB32B233AB37ACFADC8E" );

    if ( scripts\mp\utility\game::getgametype() != "_encstr_881904634971" )
        var_8 thread current_carrier( var_2, "_encstr_A4A01514D157BB67E4226829FA3D2BB1777C95042DE3E1", "_encstr_824B105780A2E0624BA8BB79850BAAAD8BD8" );

    if ( scripts\mp\utility\game::getgametype() == "_encstr_881904634971" && level.cmdrules == 2 )
    {

    }
    else
    {
        var_8.onbeginuse = ::bombzone_onbeginuse;
        var_8.onenduse = ::bombzone_onenduse;
        var_8.onuse = ::bombzone_onusedefuseobject;
        var_8.resetprogress = level.resetprogress;
        var_8.useweapon = getcompleteweaponname( "_encstr_9C08198B83C8E7426B0EC3E849D37FF0D1D80189933746CF4183A8" );
    }

    level thread scripts\mp\hud_message::updatematchstatushintforallplayers( var_1.team, 22, 23 );
    var_0 bombtimerwait( var_0.objectivekey );
    var_0.visuals[0] scripts\mp\gamelogic::stoptickingsound();
    var_8.bombplanted = 0;

    if ( level.gameended )
        return;
    else if ( scripts\mp\utility\game::getgametype() == "_encstr_BD07030251" && level.bombdefused || scripts\mp\utility\game::getgametype() == "_encstr_AD0703D788" && level.bombdefused )
    {
        var_8 scripts\mp\gameobjects::deleteuseobject();
        return;
    }

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507035309" || scripts\mp\utility\game::getgametype() == "_encstr_A17E06A3F6FA46C8" || scripts\mp\utility\game::getgametype() == "_encstr_881904634971" || scripts\mp\utility\game::getgametype() == "_encstr_9D19041941CD" )
    {
        var_8.showprogressforteam = undefined;
        var_11 = _encstr_98F31C9042FA186B59638758C0C7C72B78FF9363EB7947A7212952348FF7::bombhandler;

        if ( var_0.bombdefused )
        {
            var_0 thread [[ var_11 ]]( var_1, "_encstr_BC7B08812DDFE886AF72" );
            var_0.onuse = ::bombzone_onuseplantobject;

            if ( isdefined( level.ddbombmodel[var_0.objectivekey] ) )
                level.ddbombmodel[var_0.objectivekey] delete();

            return;
        }
        else
        {
            level.bombexploded = level.bombexploded + 1;
            var_0 thread [[ var_11 ]]( var_1, "_encstr_AB0808DFB97F822F1899", var_2 );
        }
    }
    else
        level.bombexploded = level.bombexploded + 1;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_881904634971" )
        level waittill( "_encstr_A68715DF75AAB78B3FD32820CB6781D1131D405E8C326D" );

    level notify( "_encstr_AF6F0E5A7BA3EE0FC15B1034F8C9AF37" + var_0.objectivekey );
    var_1 thread scripts\mp\rank::scoreeventpopup( "_encstr_B7E80967D1D81792DF81F7" );
    var_1 thread scripts\mp\awards::givemidmatchaward( "_encstr_B2461101D72B117F1A8A29F8B2F327C897549D" );

    if ( isdefined( level.sd_onbombtimerend ) )
        level thread [[ level.sd_onbombtimerend ]]();

    if ( scripts\mp\utility\game::getgametype() == "_encstr_881904634971" )
        var_12 = var_0.curorigin;
    else if ( scripts\mp\utility\game::getgametype() == "_encstr_9507035309" || scripts\mp\utility\game::getgametype() == "_encstr_A17E06A3F6FA46C8" || scripts\mp\utility\game::getgametype() == "_encstr_9D19041941CD" )
    {
        var_12 = level.ddbombmodel[var_0.objectivekey].origin;
        level.ddbombmodel[var_0.objectivekey] delete();
    }
    else
    {
        var_12 = level.sdbombmodel.origin;
        level.sdbombmodel delete();
    }

    if ( isdefined( var_1 ) )
    {
        var_0.visuals[0] radiusdamage( var_12, 512, 200, 20, var_1, "_encstr_A45C0E4B9FDF3165A3B93C4491BFA4A9", "_encstr_9DF00DF37BD0E2716F3B8BC7086BBB" );
        var_1 scripts\mp\utility\stats::incpersstat( "_encstr_AA460DCF7948A4EB7D076B1777A8A3", 1 );
        var_1 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_AA460DCF7948A4EB7D076B1777A8A3", var_1.pers["_encstr_AA460DCF7948A4EB7D076B1777A8A3"] );
    }
    else
        var_0.visuals[0] radiusdamage( var_12, 512, 200, 20, undefined, "_encstr_A45C0E4B9FDF3165A3B93C4491BFA4A9", "_encstr_9DF00DF37BD0E2716F3B8BC7086BBB" );

    var_13 = randomfloat( 360 );

    if ( isdefined( var_0.trigger.effect ) )
        var_14 = var_0.trigger.effect;
    else if ( level.mapname == "_encstr_ABC80BAAF8C7EFF723D304397B" )
        var_14 = "_encstr_8BEA176616E4D2C80B1AAF26ED5B26F5ACC3C18DEDCD5AEDCD";
    else
        var_14 = "_encstr_BC8C0F6E4023DA5FA9C8D3AB584351B28D";

    var_15 = var_12 + ( 0, 0, 50 );
    var_16 = spawnfx( level._effect[var_14], var_15, ( 0, 0, 1 ), ( cos( var_13 ), sin( var_13 ), 0 ) );
    triggerfx( var_16 );
    physicsexplosionsphere( var_15, 200, 100, 3 );
    playrumbleonposition( "_encstr_B6D30F3B39CACDC24659EBE4EAAD263695", var_12 );
    earthquake( 0.75, 2.0, var_12, 2000 );
    playsoundatpos( var_15, "_encstr_98E710563C38F5C4DBB513DCD21DCAFA3627" );

    if ( scripts\mp\utility\game::getgametype() == "_encstr_A17E06A3F6FA46C8" )
    {
        foreach ( var_18 in level.objectives )
        {
            if ( isdefined( var_18.exploderindex ) )
                scripts\engine\utility::exploder( var_18.exploderindex );
        }
    }
    else if ( isdefined( var_0.exploderindex ) )
        scripts\engine\utility::exploder( var_0.exploderindex );

    var_8 scripts\mp\gameobjects::disableobject();

    if ( isdefined( level.onobjectivecomplete ) )
        [[ level.onobjectivecomplete ]]( "_encstr_889A09E530F7E918279537", self.objectivekey, var_1, game["_encstr_941C0A6AF345075ED05BEAD3"], undefined );
}

removespawnprotectiononnotify()
{
    switch ( level.mapname )
    {
        case "_encstr_9D0A0D8DEF670ABF8B48776B48A375":
            return 10;
        default:
            return 0;
    }
}

current_carrier( var_0, var_1, var_2 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_3 = level.framedurationseconds;
    var_4 = var_3 * 1000;
    var_5 = level.bombtimer * 1000;
    var_6 = var_4 / var_5;
    self.radialtimeobjid = scripts\mp\objidpoolmanager::requestobjectiveid( 99 );

    if ( self.radialtimeobjid != -1 )
    {
        var_7 = "_encstr_8CBE0A41F59874FF8371821A";
        scripts\mp\objidpoolmanager::objective_add_objective( self.radialtimeobjid, var_7, self.curorigin + self.offset3d );
        scripts\mp\objidpoolmanager::objective_set_play_intro( self.radialtimeobjid, 0 );
        scripts\mp\objidpoolmanager::objective_set_play_outro( self.radialtimeobjid, 0 );
        scripts\mp\objidpoolmanager::objective_playermask_showtoall( self.radialtimeobjid );
        self.showworldicon = 1;
    }

    scripts\mp\gameobjects::setobjectivestatusicons( var_1, var_2, self.radialtimeobjid );
    self.bombplanted = 1;

    while ( self.bombplanted )
    {
        var_8 = var_6;
        scripts\mp\objidpoolmanager::objective_set_progress_team( self.radialtimeobjid, var_0 );
        scripts\mp\objidpoolmanager::objective_show_progress( self.radialtimeobjid, 1 );
        scripts\mp\objidpoolmanager::objective_set_progress( self.radialtimeobjid, var_8 );
        var_6 = min( var_6 + var_4 / var_5, 1.0 );
        waitframe();
    }

    scripts\mp\objidpoolmanager::returnobjectiveid( self.radialtimeobjid );
    self.radialtimeobjid = -1;
}

getbombmodel( var_0 )
{
    if ( istrue( level.setplayerselfrevivingextrainfo ) && istrue( var_0 ) )
        return "_encstr_880B2015C3F8D773ABF0CBA1689FEFFB31BC73AFEB630FFE4D8153FA98C1E59FC33F";

    return "_encstr_B3161AC5A9940B5AB8EAD1731256CB0D6BE105A9086062A956B09751";
}

initobjectivecam( var_0 )
{
    var_1 = undefined;
    var_2 = getentarray( "_encstr_9CAC1186243F099715724068BAA167031FDA8D", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_4 in var_2 )
    {
        if ( var_4.script_label == var_0.objectivekey )
        {
            var_1 = var_4;
            break;
        }
    }

    var_6 = [];

    if ( isdefined( var_1 ) && isdefined( var_1.target ) )
    {
        var_7 = getent( var_1.target, "_encstr_B8CE0BE43FC317DF690862BA48" );

        while ( isdefined( var_7 ) )
        {
            var_6[var_6.size] = var_7;

            if ( isdefined( var_7.target ) )
            {
                var_7 = getent( var_7.target, "_encstr_B8CE0BE43FC317DF690862BA48" );
                continue;
            }

            break;
        }
    }

    if ( isdefined( var_1 ) && var_6.size )
    {
        var_8 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_1.origin );
        var_8.origin = var_1.origin;
        var_8.angles = var_1.angles;
        var_8.path = var_6;
        var_8 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
        var_8 hide();
        return var_8;
    }
    else
        return undefined;
}

runobjectivecam()
{
    level notify( "_encstr_BE2B0E673648972611B88BB221179E0F" );

    foreach ( var_1 in level.players )
    {
        if ( !isai( var_1 ) )
        {
            var_1 scripts\mp\utility\player::_freezecontrols( 1 );
            var_1 visionsetnakedforplayer( "_encstr_898C091336851BADBE98DD", 0.5 );
        }
    }

    wait 0.5;

    foreach ( var_1 in level.players )
    {
        if ( !isai( var_1 ) )
        {
            var_1 scripts\mp\utility\player::setusingremote( "_encstr_BE2B0E673648972611B88BB221179E0F" );
            var_1 scripts\common\utility::allow_weapon( 0 );
            var_1 playerlinkweaponviewtodelta( self, "_encstr_BA010BA012DFB703A379A39542", 1, 180, 180, 180, 180, 1 );
            var_1 scripts\mp\utility\player::_freezecontrols( 1 );
            var_1 setplayerangles( self.angles );
            var_1 visionsetnakedforplayer( "_encstr_A40101", 0.5 );
        }
    }

    for ( var_5 = 0; var_5 < self.path.size; var_5++ )
    {
        var_6 = 0;

        if ( var_5 == 0 )
            var_6 = 5 / self.path.size / 2;

        var_7 = 0;

        if ( var_5 == self.path.size - 1 )
            var_7 = 5 / self.path.size / 2;

        self moveto( self.path[var_5].origin, 5 / self.path.size, var_6, var_7 );
        self rotateto( self.path[var_5].angles, 5 / self.path.size, var_6, var_7 );
        wait( 5 / self.path.size );
    }
}

bombtimerwait( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_ADC10F59E2A73E90D1633B2D8B87B0752B" );
    level endon( "_encstr_B9A10DD145CDB008EA27752B0782ED" + var_0 );
    var_1 = int( level.bombtimer * 1000 + gettime() );
    setomnvar( "_encstr_A2831657B4D726EDAD137D3AA5B5CA39AF2B73C8D1D25B59" + var_0, var_1 );
    thread updatetimerconstant( "_encstr_A2831657B4D726EDAD137D3AA5B5CA39AF2B73C8D1D25B59" + var_0, var_1, level.bombtimer * 1000, var_0 );
    level thread handlehostmigration( var_1, var_0 );
    scripts\mp\hostmigration::waitlongdurationwithgameendtimeupdate( level.bombtimer );
}

updatetimerconstant( var_0, var_1, var_2, var_3 )
{
    level endon( "_encstr_ADC10F59E2A73E90D1633B2D8B87B0752B" );
    level endon( "_encstr_B9A10DD145CDB008EA27752B0782ED" + var_3 );
    self.startbombtime = gettime();

    while ( gettime() < var_1 )
    {
        var_4 = gettime() - self.startbombtime;
        setomnvar( var_0, int( gettime() + var_2 - var_4 ) );
        waitframe();
    }
}

handlehostmigration( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_B9A10DD145CDB008EA27752B0782ED" + var_1 );
    level endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level waittill( "_encstr_A33F15D07BB93AEBB6B43B9C2C472D7BDC7D4C59765ADC" );
    setomnvar( "_encstr_A2831657B4D726EDAD137D3AA5B5CA39AF2B73C8D1D25B59" + var_1, 0 );
    var_2 = scripts\mp\hostmigration::waittillhostmigrationdone();

    if ( var_2 > 0 )
        setomnvar( "_encstr_A2831657B4D726EDAD137D3AA5B5CA39AF2B73C8D1D25B59" + var_1, var_0 + var_2 );
}

bombdefused( var_0 )
{
    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507035309" && scripts\mp\utility\game::getgametype() != "_encstr_A17E06A3F6FA46C8" && scripts\mp\utility\game::getgametype() != "_encstr_881904634971" && scripts\mp\utility\game::getgametype() != "_encstr_9D19041941CD" )
        level.bombdefused = 1;

    var_0.bombdefused = 1;
    setbombtimeromnvars();
    level notify( "_encstr_B9A10DD145CDB008EA27752B0782ED" + var_0.objectivekey );

    if ( isdefined( level.onobjectivecomplete ) )
        [[ level.onobjectivecomplete ]]( "_encstr_889A09E530F7E918279537", self.objectivekey, undefined, game["_encstr_95A70AA81FEE295D3A2F56DE"], undefined );
}

updatebombplantedomnvar( var_0 )
{
    if ( scripts\mp\utility\game::getgametype() == "_encstr_881904634971" )
        return;

    if ( isdefined( var_0 ) )
    {
        if ( var_0 == "_encstr_BC850785638DA59537" )
            setomnvar( "_encstr_89AD13879AB76248D52E5F1F27F06BF3C1A3B39135", 2 );
        else
            setomnvar( "_encstr_89AD13879AB76248D52E5F1F27F06BF3C1A3B39135", 1 );
    }

    if ( isdefined( level.aplanted ) )
    {
        if ( level.aplanted )
            setomnvar( "_encstr_A47A12AB2DEB13DEB631D70ED80B73A35946F558", 1 );
        else
            setomnvar( "_encstr_A47A12AB2DEB13DEB631D70ED80B73A35946F558", 0 );
    }

    if ( isdefined( level.bplanted ) )
    {
        if ( level.bplanted )
            setomnvar( "_encstr_957A12956B36530D0BD831BBD06B05432945373A", 1 );
        else
            setomnvar( "_encstr_957A12956B36530D0BD831BBD06B05432945373A", 0 );
    }
}

setbombtimeromnvars( var_0 )
{
    updatebombplantedomnvar( var_0 );
}

bombzone_setupbombcase( var_0 )
{
    level.bombplanted = 0;
    level.bombdefused = 0;
    level.bombexploded = 0;
    var_1 = getent( var_0 + "_encstr_B1280DD7074BC66D5783F5A34E5A3B", "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( !isdefined( var_1 ) )
        scripts\engine\utility::error( "_encstr_8219048617CA" + var_0 + "_encstr_ADB2231F6B5B9132E8B23EE0F3274F791C06DA47F083ABDA62CF637897F2AF706E5D4F82B0" );
    else
    {
        var_2[0] = getent( var_0, "_encstr_B8CE0BE43FC317DF690862BA48" );

        if ( !isdefined( var_2[0] ) )
        {
            scripts\engine\utility::error( "_encstr_8219048617CA" + var_0 + "_encstr_A6E01C8FCB1FEA1C9B74590DCFE045E94A255F639611EA509DA8D32387DA" );
            return;
        }

        var_2[0] setmodel( getbombmodel( 1 ) );
        var_2[0] setnonstick( 1 );
        var_2[0] = getadjustedfirstroundbombcaseposition( var_2[0] );
        var_1 = getadjustedfirstroundbombcaseposition( var_1, 1 );

        if ( !level.multibomb )
        {
            level.sdbomb = scripts\mp\gameobjects::createcarryobject( game["_encstr_941C0A6AF345075ED05BEAD3"], var_1, var_2, ( 0, 0, 32 ), undefined, 1 );
            level.sdbomb scripts\mp\gameobjects::allowcarry( "_encstr_B9FC095F8BCCFF02D92B43" );
            level.sdbomb.allowweapons = 1;
            level.sdbomb.onpickup = ::onpickup;
            level.sdbomb.ondrop = ::ondrop;
            level.sdbomb.firstpickup = 1;
            level thread bombsitewatcher();
            level.bombrespawnpoint = level.sdbomb.visuals[0].origin;
            level.bombrespawnangles = level.sdbomb.visuals[0].angles;
            level.sdbomb.visualgroundoffset = ( 0, 0, 2 );
            return;
        }

        var_1 delete();
        var_2[0] delete();
    }
}

getadjustedfirstroundbombcaseposition( var_0, var_1 )
{
    switch ( level.mapname )
    {
        case "_encstr_AF89088A6177FB3F82EC":
            if ( scripts\mp\flags::gameflag( "_encstr_B87F0F4428EDB244C6889FF328BE123BA5" ) && game["_encstr_8AC30D9CDEBA73466E41B1585E568C"] == 0 )
            {
                var_2 = ( -518, -959.2, 267 );

                if ( istrue( var_1 ) )
                    var_0.origin = var_2;
                else
                {
                    var_0.origin = var_2;
                    var_0.angles = ( 0, 90, 0 );
                }
            }

            break;
        case "_encstr_984D0DC87A37E8DD33B35F475B8A95":
            var_2 = ( 263, -2500, 146 );

            if ( istrue( var_1 ) )
                var_0.origin = var_2;
            else
            {
                var_0.origin = var_2;
                var_0.angles = ( 0, 90, 0 );
            }

            break;
        default:
            break;
    }

    return var_0;
}

movebombcase( var_0, var_1 )
{
    if ( isdefined( level.sdbomb ) )
    {
        level.sdbomb.trigger.origin = var_0;
        level.sdbomb.visuals[0].origin = var_0;
        level.sdbomb.visuals[0].angles = var_1;
        level.sdbomb.visuals[0] show();
        level.sdbomb scripts\mp\gameobjects::allowcarry( "_encstr_B9FC095F8BCCFF02D92B43" );
        level.sdbomb scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_A4010EE398639237A8480C2F56B0E7DE" );
        level.sdbomb scripts\mp\gameobjects::setvisibleteam( "_encstr_B9FC095F8BCCFF02D92B43" );
        level.sdbomb.allowweapons = 1;
        level.sdbomb.onpickup = ::onpickup;
        level.sdbomb.ondrop = ::ondrop;
    }
}

bombsitewatcher()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        level waittill( "_encstr_8F010C5E2AC85E8E82988AAF97A0" );

        foreach ( var_1 in level.objectives )
            var_1.trigger enableplayeruse( level.sdbomb.carrier );

        waitframe();
    }
}

onpickup( var_0, var_1, var_2 )
{
    var_0.isbombcarrier = 1;

    if ( isplayer( var_0 ) )
    {
        var_0 thread scripts\common\utility::_id_13E0A( level._id_11B29, "_encstr_AF1C073F618760FB0A", var_0.origin );
        scripts\mp\utility\game::setmlgannouncement( 1, var_0.team, var_0 getentitynumber() );
    }

    var_0 setclientomnvar( "_encstr_815A11ABE7B1F64022CA7248F51F79BE6A1F7D", 1 );
    setomnvar( "_encstr_B15A10ED237E1B55539089426085CAEF9116", var_0 getentitynumber() );
    self.offset3d = ( 0, 0, 75 );
    scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_9F441A901E9DAD31D3B6F3714A7B65AB9110EB51F272C8D173475A25" );

    if ( isdefined( level.sd_loadout ) && isdefined( level.sd_loadout[var_0.team] ) )
        var_0 thread applybombcarrierclass();

    if ( !level.bombdefused )
    {
        var_0 thread scripts\mp\hud_message::showsplash( "_encstr_930113377732C180751BE659C5452007DAD7BF934B" );
        scripts\mp\hud_util::teamplayercardsplash( "_encstr_B4C91253F3502D8785CBB972B0D1FB63804FCDD6", var_0, var_0.team );

        if ( istrue( self.firstpickup ) )
        {
            var_3 = "_encstr_9D801298BD5B13AF385AD8DAEAE07DCCA593DC47";
            self.firstpickup = 0;

            if ( istrue( level.setplayerselfrevivingextrainfo ) )
            {
                level.sdbomb.visuals[0] setmodel( getbombmodel() );
                playfx( level.spawnoffsettacinsertmax["_encstr_A2930D6B0BD55CCFF058989F701903"], self.trigger.origin + ( 0, 0, -9970 ) );
            }
        }
        else
            var_3 = "_encstr_8F010C5E2AC85E8E82988AAF97A0";

        var_4 = [];
        var_4[var_4.size] = var_0;
        level thread playerdelayedvo( var_0, var_3 );
        level thread teamdelayedvo( var_0.pers["_encstr_89EF05D46BA8FD"], var_4 );
    }

    scripts\mp\utility\sound::playsoundonplayers( game["_encstr_982A154CDEAD89D7E4B2C67B67CA932B91D7DCF657B98C"], game["_encstr_941C0A6AF345075ED05BEAD3"] );

    if ( level.codcasterenabled )
        var_0 setgametypevip( 1 );

    scripts\mp\utility\game::_id_119AC( var_0, undefined, "_encstr_8CC10F9EEAC5D846A79347E3FD4C472103", var_0.origin );
    level notify( "_encstr_8F010C5E2AC85E8E82988AAF97A0" );
    level thread scripts\mp\hud_message::updatematchstatushintforallplayers( var_0.team, 25, undefined, var_0, 21 );
}

ondrop( var_0 )
{
    level notify( "_encstr_80310D4CBD6B31BE19277B0E835946" );
    setomnvar( "_encstr_B15A10ED237E1B55539089426085CAEF9116", -1 );

    if ( level.codcasterenabled )
    {
        if ( isdefined( var_0 ) )
            var_0 setgametypevip( 0 );
    }

    scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_A4010EE398639237A8480C2F56B0E7DE" );
    scripts\mp\utility\sound::playsoundonplayers( game["_encstr_BE9B133BC818DA4909FE15CAE723B25F6360FF8368"], game["_encstr_941C0A6AF345075ED05BEAD3"] );

    if ( isdefined( var_0 ) )
    {
        var_0.isbombcarrier = 0;
        level thread scripts\mp\hud_message::updatematchstatushintforallplayers( var_0.team, 24 );
    }

    if ( !level.bombplanted && isdefined( level.bombresettimer ) && level.bombresettimer > 0 )
        thread waitforbombreset( level.bombresettimer );
}

waitforbombreset( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_8F010C5E2AC85E8E82988AAF97A0" );
    wait( var_0 );
    scripts\mp\weapons::equipmentdeletevfx( self.visuals[0].origin, self.visuals[0].angles );
    movebombcase( level.bombrespawnpoint, level.bombrespawnangles );
}

enablemultibombui()
{
    foreach ( var_1 in level.players )
    {
        if ( !isai( var_1 ) )
            var_1 setclientomnvar( "_encstr_815A11ABE7B1F64022CA7248F51F79BE6A1F7D", var_1.pers["_encstr_89EF05D46BA8FD"] == game["_encstr_941C0A6AF345075ED05BEAD3"] );
    }
}

respawnbombcase()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    wait 5;

    if ( level.multibomb )
        enablemultibombui();
    else
        movebombcase( level.bombrespawnpoint, level.bombrespawnangles );
}

advancebombcase()
{
    level.bombplanted = 0;
    level.bombdefused = 0;
    level.bombrespawnpoint = level.curobj.visuals[0].origin + ( 0, 0, 48 );
    level.bombrespawnangles = level.curobj.visuals[0].angles;

    if ( level.multibomb )
        enablemultibombui();
    else
        movebombcase( level.bombrespawnpoint, level.bombrespawnangles );
}

applybombcarrierclass()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( self.iscarrying ) && self.iscarrying == 1 )
    {
        self notify( "_encstr_A97817572058AB92107F371367254ADFF0E80E9E9948751ADD" );
        waitframe();
    }

    while ( self ismantling() )
        waitframe();

    while ( !self isonground() )
        waitframe();

    self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] = level.sd_loadout[self.team];
    scripts\mp\equipment\tac_insert::_id_13684( self.origin, self.angles );
    self.gamemode_chosenclass = self.class;
    self.pers["_encstr_9E95066E81471B5F"] = "_encstr_87AC099DB05B59ADF619AC";
    self.pers["_encstr_9F690A0DBF9F69AE0A510886"] = "_encstr_87AC099DB05B59ADF619AC";
    self.class = "_encstr_87AC099DB05B59ADF619AC";
    self.lastclass = "_encstr_87AC099DB05B59ADF619AC";
    self notify( "_encstr_A1D70BDE071B53794F208AE3F8" );
    self.gameobject_fauxspawn = 1;
    self.faux_spawn_stance = self getstance();
    thread scripts\mp\playerlogic::spawnplayer( 1 );
}

removebombcarrierclass()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( self.iscarrying ) && self.iscarrying == 1 )
    {
        self notify( "_encstr_A97817572058AB92107F371367254ADFF0E80E9E9948751ADD" );
        waitframe();
    }

    while ( self ismantling() )
        waitframe();

    while ( !self isonground() )
        waitframe();

    self.pers["_encstr_A2FB10AFE391259857B908783F59C26F5BEB"] = undefined;
    scripts\mp\equipment\tac_insert::_id_13684( self.origin, self.angles );
    self notify( "_encstr_A1D70BDE071B53794F208AE3F8" );
    self.faux_spawn_stance = self getstance();
    thread scripts\mp\playerlogic::spawnplayer( 1 );
}

bombzone_awardgenericbombzonemedals( var_0, var_1 )
{
    foreach ( var_3 in level.objectives )
    {
        if ( !isdefined( var_3.bombdefusetrig.origin ) )
            continue;

        var_4 = istrue( var_3.bombplanted );
        var_5 = distsquaredcheck( var_0.origin, var_1.origin, scripts\engine\utility::ter_op( var_4, var_3.bombdefusetrig.origin, var_3.trigger.origin ) );

        if ( var_5 )
        {
            if ( scripts\mp\utility\game::getgametype() == "_encstr_9507035309" && scripts\mp\utility\game::inovertime() )
            {
                if ( var_0.team == var_3.ownerteam )
                {
                    var_0 thread scripts\mp\rank::scoreeventpopup( scripts\engine\utility::ter_op( var_4, "_encstr_8C0C07812DDF6808AB", "_encstr_973508BF93EFFBC363B3" ) );
                    var_0 thread scripts\mp\awards::givemidmatchaward( scripts\engine\utility::ter_op( var_4, "_encstr_B3D80EB6ED91567DE17D91B2CC95CD23", "_encstr_BA020F68F21FC3E6F347AF9E43BFEB8943" ) );
                }
                else
                {
                    var_0 thread scripts\mp\rank::scoreeventpopup( "_encstr_973508BF93EFFBC363B3" );
                    var_0 thread scripts\mp\awards::givemidmatchaward( "_encstr_BA020F68F21FC3E6F347AF9E43BFEB8943" );
                }

                continue;
            }

            if ( var_1.team == game["_encstr_95A70AA81FEE295D3A2F56DE"] )
            {
                var_0 thread scripts\mp\rank::scoreeventpopup( scripts\engine\utility::ter_op( var_4, "_encstr_8C0C07812DDF6808AB", "_encstr_973508BF93EFFBC363B3" ) );
                var_0 thread scripts\mp\awards::givemidmatchaward( scripts\engine\utility::ter_op( var_4, "_encstr_B3D80EB6ED91567DE17D91B2CC95CD23", "_encstr_BA020F68F21FC3E6F347AF9E43BFEB8943" ) );
                continue;
            }

            var_0 thread scripts\mp\rank::scoreeventpopup( scripts\engine\utility::ter_op( var_4, "_encstr_973508BF93EFFBC363B3", "_encstr_8C0C07812DDF6808AB" ) );
            var_0 thread scripts\mp\awards::givemidmatchaward( scripts\engine\utility::ter_op( var_4, "_encstr_BA020F68F21FC3E6F347AF9E43BFEB8943", "_encstr_B3D80EB6ED91567DE17D91B2CC95CD23" ) );
        }
    }
}

distsquaredcheck( var_0, var_1, var_2 )
{
    var_3 = distancesquared( var_2, var_0 );
    var_4 = distancesquared( var_2, var_1 );

    if ( var_3 < 90000 || var_4 < 90000 )
        return 1;
    else
        return 0;
}

playerdelayedvo( var_0, var_1 )
{
    var_2 = scripts\mp\utility\game::gettimepassed() / 1000;

    if ( istrue( level.infilvotiming ) )
        var_3 = 8;
    else
        var_3 = 5;

    var_4 = var_3 - var_2;

    if ( var_4 > 0 )
        wait( var_4 );

    if ( isdefined( var_0 ) )
        var_0 scripts\mp\utility\dialog::leaderdialogonplayer( var_1 );
}

teamdelayedvo( var_0, var_1 )
{
    var_2 = scripts\mp\utility\game::gettimepassed() / 1000;

    if ( istrue( level.infilvotiming ) )
        var_3 = 8;
    else
        var_3 = 5;

    var_4 = var_3 - var_2;

    if ( var_4 > 0 )
        wait( var_4 );

    scripts\mp\utility\dialog::leaderdialog( "_encstr_B8C30DA1CFF70D476FE78C6F8DF3DD", var_0, "_encstr_949B05C9604246", var_1 );
}

resetuiomnvargamemode()
{
    self setclientomnvar( "_encstr_815A11ABE7B1F64022CA7248F51F79BE6A1F7D", 0 );
}

setteaminhuddatafromteamname( var_0 )
{
    if ( var_0 == "_encstr_BA840579D3F7F6" )
        self setteaminhuddata( 1 );
    else if ( var_0 == "_encstr_BC850785638DA59537" )
        self setteaminhuddata( 2 );
    else
        self setteaminhuddata( 0 );
}
