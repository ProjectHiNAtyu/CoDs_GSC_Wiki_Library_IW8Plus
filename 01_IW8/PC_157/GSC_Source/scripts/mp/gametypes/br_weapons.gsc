// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

createspawnweaponatpos( var_0, var_1, var_2 )
{
    var_3 = scripts\engine\trace::ray_trace( var_0, ( var_0[0], var_0[1], var_0[2] - 60 ) );
    var_4 = var_0;

    if ( var_3["_encstr_B130095358E1B3930B687D"] < 1.0 )
        var_4 = var_3["_encstr_B7260923C89E8F3378E72E"] + ( 0, 0, 2 );

    if ( !isdefined( var_1 ) )
        var_1 = ( 0, 0, 90 );

    var_0 = var_4;

    if ( isdefined( var_1 ) )
        var_1 = var_1;
    else
        var_1 = ( 0, 0, 90 );

    var_5 = _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::remove_roof_nodes( var_0, var_1 );
    return weaponspawn( var_2, undefined, var_5, 1 );
}

createspawnweaponatposfromname( var_0, var_1 )
{
    var_2 = var_0;
    var_3 = scripts\engine\trace::ray_trace( var_0, ( var_0[0], var_0[1], var_0[2] - 60 ) );

    if ( var_3["_encstr_B130095358E1B3930B687D"] < 1.0 )
        var_2 = var_3["_encstr_B7260923C89E8F3378E72E"] + ( 0, 0, 2 );

    var_4 = _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::remove_roof_nodes( var_0, ( 0, 0, 90 ) );
    return weaponspawn( var_1, undefined, var_4, 1 );
}

stripweaponsfromplayer()
{
    var_0 = undefined;
    var_1 = undefined;

    foreach ( var_3 in self.equippedweapons )
    {
        var_4 = scripts\mp\utility\weapon::getweaponrootname( var_3.basename );

        if ( var_4 != "_encstr_9BED0AA307609154C76BDB23" && var_4 != "_encstr_93200ED2DD83FA6DDC2DCC596E1D0B89" && var_4 != "_encstr_BC0D0C2DBB0E7D9DAE9BC6AC6EB9" )
        {
            if ( issameweapon( var_3 ) && var_3.inventorytype == "_encstr_987F080E394BDAC2E45E" )
            {
                var_5 = scripts\mp\utility\weapon::getweaponrootname( self.currentprimaryweapon );

                if ( var_4 == var_5 )
                    var_0 = var_3;
                else
                    var_1 = var_3;
            }
        }
    }

    if ( isdefined( var_0 ) )
        var_7 = scripts\mp\utility\weapon::getweaponrootname( var_0.basename );

    if ( isdefined( var_1 ) )
        var_8 = scripts\mp\utility\weapon::getweaponrootname( var_1.basename );

    if ( isdefined( var_0 ) || isdefined( var_1 ) )
    {
        if ( isdefined( var_0 ) )
            scripts\cp_mp\utility\inventory_utility::_takeweapon( var_0, 1 );

        if ( isdefined( var_1 ) )
            scripts\cp_mp\utility\inventory_utility::_takeweapon( var_1, 1 );

        scripts\cp_mp\utility\inventory_utility::_giveweapon( "_encstr_9B660D018F3841EE3A23DBEE3639F0" );
        scripts\cp_mp\utility\inventory_utility::_switchtoweaponimmediate( "_encstr_9B660D018F3841EE3A23DBEE3639F0" );
    }
}

playerdropweaponfrominventory( var_0 )
{
    var_1 = undefined;
    var_2 = undefined;

    foreach ( var_4 in self.equippedweapons )
    {
        var_5 = scripts\mp\utility\weapon::getweaponrootname( var_4.basename );

        if ( var_5 != "_encstr_9BED0AA307609154C76BDB23" && var_5 != "_encstr_93200ED2DD83FA6DDC2DCC596E1D0B89" )
        {
            if ( issameweapon( var_4 ) && var_4.inventorytype == "_encstr_987F080E394BDAC2E45E" )
            {
                var_6 = scripts\mp\utility\weapon::getweaponrootname( self.currentprimaryweapon );

                if ( var_5 == var_6 )
                {
                    iprintln( "_encstr_89A30C40F3D9C150D5D3A64327B6" + var_5 );
                    var_1 = var_4;
                }
                else
                    var_2 = var_4;
            }
        }
    }

    var_8 = undefined;
    var_9 = undefined;
    var_10 = "_encstr_A40101";
    var_11 = "_encstr_A40101";

    if ( isdefined( var_1 ) )
        var_10 = scripts\mp\utility\weapon::getweaponrootname( var_1.basename );

    if ( isdefined( var_2 ) )
        var_11 = scripts\mp\utility\weapon::getweaponrootname( var_2.basename );

    if ( var_0 == var_10 )
    {
        var_8 = var_1;
        var_9 = var_2;
    }
    else if ( var_0 == var_11 )
    {
        var_8 = var_2;
        var_9 = var_1;
    }

    var_12 = 0;

    if ( isdefined( var_8 ) )
    {
        var_13 = self getweaponammoclip( var_8 );
        var_14 = _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::test_ai_anim();
        var_15 = _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::getitemdroporiginandangles( var_14, self.origin, self.angles, self );
        var_16 = weaponspawn( var_8, self, var_15, 0 );
        var_16.count = var_13;
        scripts\cp_mp\utility\inventory_utility::_takeweapon( var_8 );

        if ( isdefined( var_9 ) )
            scripts\cp_mp\utility\inventory_utility::_switchtoweaponimmediate( var_9 );
        else
        {
            scripts\cp_mp\utility\inventory_utility::_giveweapon( "_encstr_9B660D018F3841EE3A23DBEE3639F0" );
            scripts\cp_mp\utility\inventory_utility::_switchtoweaponimmediate( "_encstr_9B660D018F3841EE3A23DBEE3639F0" );
        }

        br_ammo_update_weapons( self );
    }
}

weaponspawn( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = createheadicon( var_0 );
    var_6 = _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::spawnpickup( var_5, var_2, 0, var_4, var_0 );
    level._id_120AD _calloutmarkerping_handleluinotify_acknowledgedcancel::from( var_6, var_1, var_0 );
    return var_6;
}

takeweaponpickup( var_0 )
{
    var_1 = self.primaryweapons.size;

    if ( !isdefined( var_0.weapon ) )
    {
        var_2 = [];
        var_3 = undefined;

        if ( isdefined( var_0.customweaponname ) )
        {
            var_4 = var_0.customweaponname;
            var_3 = asmdevgetallstates( var_4 );
            var_3.customweaponname = var_0.customweaponname;
        }
        else if ( !isdefined( var_0.completeweapon ) )
        {
            var_3 = _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::relic_vampire_globalfunc( var_0 );
            var_4 = createheadicon( var_3 );
        }
        else
        {
            var_3 = scripts\mp\class::buildweapon( var_0.loadoutprimaryfullname, var_2, "_encstr_AABA05236DC831", "_encstr_AABA05236DC831", -1 );
            var_4 = var_0.loadoutprimaryfullname;
        }

        if ( !isdefined( var_4 ) )
        {
            scripts\mp\utility\script::laststand_dogtags( "_encstr_BE8D3BA3B0AD56AB2BB0837BDC825AD8D6D53810AC3993DE9C109640376C39960ED11613639502B9ED47086E561DAB1C10CCED3910072DB1ADD5384701" + var_0.scriptablename );
            return;
        }

        var_5 = scripts\mp\utility\weapon::getweaponrootname( var_4 );
        var_6 = var_4;
    }
    else
    {
        var_3 = var_0.weapon;

        if ( isdefined( var_0.loadoutprimaryfullname ) )
            var_6 = var_0.loadoutprimaryfullname;
        else
            var_6 = getsubstr( var_3.classname, 7, var_3.classname.size );

        var_5 = scripts\mp\utility\weapon::getweaponrootname( var_6 );
    }

    var_7 = 0;
    var_8 = undefined;
    var_9 = 0;

    foreach ( var_11 in self.primaryweapons )
    {
        if ( nullweapon( var_11 ) )
        {
            var_1--;
            continue;
        }

        if ( isnullweapon( var_11, var_3 ) )
        {
            var_9 = 1;
            var_7 = 1;
            var_8 = var_11;
        }
    }

    if ( var_1 > 1 )
    {
        if ( !self hasweapon( "_encstr_9B660D018F3841EE3A23DBEE3639F0" ) )
            var_7 = 1;
        else if ( !var_9 )
            self takeweapon( "_encstr_9B660D018F3841EE3A23DBEE3639F0" );
    }

    if ( var_7 )
    {
        if ( !isdefined( var_8 ) )
            var_8 = router_use_obj();

        if ( var_8.basename != "_encstr_AABA05236DC831" )
        {
            var_13 = self getweaponammoclip( var_8 );
            var_14 = self getweaponammoclip( var_8, "_encstr_B1AD05C65666E8" );
            var_15 = 0;

            if ( var_8.hasalternate )
            {
                var_16 = var_8 getaltweapon();

                if ( !debug_spawn_crate_on_train( var_8, var_16 ) )
                    var_15 = self getweaponammoclip( var_16 );
            }

            if ( !scripts\mp\riotshield::isriotshield( var_8 ) )
            {
                var_17 = self getweaponammostock( var_8 );
                var_18 = br_ammo_type_for_weapon( var_8 );

                if ( isdefined( var_18 ) )
                    self.br_ammo[var_18] = var_17;
            }

            var_19 = var_0.origin - self.origin;
            var_20 = vectortoyaw( var_19 );
            var_21 = !_encstr_8B4D2A0BBE1A205733B7DF53536E14B8AD9753C2E275B8A06AABC75B4B83E6F07B2BBE5BCBDD40C5C6D7975F::operatorsfxalias( var_8 );

            if ( var_21 )
            {
                var_22 = _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::remove_roof_nodes( var_0.origin, ( 0, var_20, 0 ) );
                var_23 = tablesort( var_22.origin, 500, 500 );
                var_23[var_23.size] = self;
                var_24 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 1, 1, 0, 1 );
                var_25 = var_22.origin;
                var_26 = -1 * getdvarfloat( "_encstr_A8E01589CEBEAD0B3C98BDF6474427BD0E84564BD9A1A3", 2000.0 );
                var_27 = var_22.origin + ( 0.0, 0.0, var_26 );
                var_28 = scripts\engine\trace::ray_trace( var_25, var_27, var_23, var_24 );

                if ( var_28["_encstr_B130095358E1B3930B687D"] < 1.0 )
                    var_22.set_force_aitype_armored = var_28["_encstr_B60E07C9FD1C2055E3"];

                var_29 = weaponspawn( var_8, self, var_22, 0 );

                if ( isdefined( var_29 ) )
                {
                    _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::_id_119F5( var_29, var_13, var_14, var_15 );
                    var_30 = 1;
                    _encstr_890626F852FABB63A30BE831E0264973E59A7820FB57C7D0C312D83FC647500B0BA248E8766F3F91::branalytics_lootdrop( self, var_8.basename, var_30, var_13 );
                }
            }

            scripts\cp_mp\utility\inventory_utility::_takeweapon( var_8 );
        }
    }

    self giveweapon( var_6 );
    self notify( "_encstr_87630FAFCCA24721EC57F8C8FF015B97DA", var_6 );

    if ( istrue( var_3.isweaponfromcrate ) || istrue( var_0.isweaponfromcrate ) )
    {
        var_31 = br_ammo_type_for_weapon( var_5 );

        if ( isdefined( var_31 ) )
        {
            var_32 = weaponclipsize( var_3 );
            br_ammo_give_type( self, var_31, var_32 );
        }
    }
    else
    {
        var_33 = var_0.count;
        var_34 = var_0.impulsefx;
        var_32 = weaponclipsize( var_3 );
        var_35 = 0;

        if ( var_33 > var_32 )
        {
            var_35 = var_35 + ( var_33 - var_32 );
            var_33 = var_32;
        }

        if ( var_34 > var_32 )
        {
            var_35 = var_35 + ( var_34 - var_32 );
            var_34 = var_32;
        }

        self setweaponammoclip( var_6, var_33 );
        self setweaponammoclip( var_6, var_34, "_encstr_B1AD05C65666E8" );

        if ( var_35 > 0 )
        {
            var_31 = br_ammo_type_for_weapon( var_3 );

            if ( isdefined( var_31 ) )
                br_ammo_give_type( self, var_31, var_35 );
        }

        if ( var_3.hasalternate )
        {
            var_36 = var_0.impactfunc_fire;
            var_37 = var_3 getaltweapon();

            if ( !debug_spawn_crate_on_train( var_3, var_37 ) )
            {
                var_38 = weaponclipsize( var_37 );

                if ( var_36 > var_38 )
                    var_36 = var_38;

                self setweaponammoclip( var_37, var_36 );
            }
        }
    }

    var_3._id_12CC1 = undefined;
    br_ammo_update_weapons( self );
    self assignweaponprimaryslot( var_6 );
    scripts\cp_mp\utility\inventory_utility::_switchtoweaponimmediate( var_6 );
    scripts\mp\weapons::fixupplayerweapons( self, var_6 );
    scripts\mp\weapons::updatelastweaponobj( var_3 );

    if ( isdefined( var_0.weapon ) && isent( var_0.weapon ) )
        var_0.weapon delete();

    var_39 = undefined;

    foreach ( var_41 in self.equippedweapons )
    {
        if ( issameweapon( var_41 ) && var_41.inventorytype == "_encstr_987F080E394BDAC2E45E" )
        {
            var_4 = createheadicon( var_41 );

            if ( var_4 == var_6 )
            {
                var_39 = var_41;
                break;
            }
        }
    }

    thread _encstr_87D224DBF00DBC23536EFFA5875037C64BA833F3D08BF2A649D687B215E3B30ED7681EAA205F::giveweaponpickup( var_6 );

    if ( isdefined( var_0.tracknonoobplayerlocation ) )
        level._id_120AE _calloutmarkerping_handleluinotify_acknowledgedcancel::from( var_0.tracknonoobplayerlocation, self, var_3 );
}

router_use_obj()
{
    var_0 = self _meth_87D4();

    if ( isdefined( var_0 ) && scripts\mp\weapons::isdroppableweapon( var_0 ) )
    {
        foreach ( var_2 in self.primaryweapons )
        {
            if ( isnullweapon( var_2, var_0 ) )
                return var_0;
        }
    }

    return self.lastdroppableweaponobj;
}

takeammopickup( var_0 )
{
    var_1 = 0;

    if ( var_0.scriptablename == "_encstr_AF990B05DAADB7FAD0E42C47B2" )
    {
        var_2 = self getcurrentweapon().basename;
        var_3 = scripts\mp\utility\weapon::getweaponrootname( var_2 );
        var_4 = weaponclipsize( var_2 );
        var_5 = br_ammo_type_for_weapon( var_2 );

        if ( isdefined( var_5 ) )
            var_1 = br_ammo_give_type( self, var_5, var_4 );
    }
    else
        var_1 = br_ammo_give_type( self, var_0.scriptablename, var_0.count, 1 );

    if ( var_1 )
    {
        var_0.count = var_1;
        var_6 = 1;
    }
    else
        var_6 = 0;

    return var_6;
}

br_forcegiveweapon( var_0, var_1, var_2 )
{
    if ( !scripts\engine\utility::array_contains( level.br_pickups.br_lootguns, var_0 ) )
        var_0 = degrees_to_radians();

    var_3 = spawnstruct();
    var_3.loadoutprimaryfullname = var_0;
    var_3.scriptablename = scripts\mp\utility\weapon::getweaponrootname( var_0 );
    var_3.completeweapon = var_2;
    var_3.count = 0;
    var_3.impulsefx = 0;
    var_3.impactfunc_fire = 0;
    var_1 takeweaponpickup( var_3 );
}

degrees_to_radians( var_0, var_1 )
{
    if ( !isdefined( var_0 ) )
        var_0 = "_encstr_A30703F270";

    if ( !isdefined( var_1 ) )
        var_1 = "_encstr_8F91054E20434A";

    var_2 = [];

    foreach ( var_4 in level.br_pickups.br_lootguns )
    {
        if ( issubstr( var_4, "_encstr_984C028E" + var_0 + "_encstr_984C028E" ) )
        {
            if ( issubstr( var_4, "_encstr_984C028E" + var_1 ) )
                var_2[var_2.size] = var_4;
        }
    }

    return var_2[randomint( var_2.size )];
}

br_getweaponstartingclipammo( var_0 )
{
    var_1 = weaponclipsize( var_0 );
    return int( var_1 );
}

br_forcegivecustomweapon( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( var_0 hasweapon( var_1 ) )
    {
        var_0 scripts\mp\hud_message::showerrormessage( "_encstr_B67D1DF10BE626FE31EF7CB1F1AD6FC109ECB5B86DBC7B31909BB053C99709" );
        return 0;
    }

    var_6 = var_1 hasattachment( "_encstr_A45E080BB1D0C071774A", 1 );
    var_7 = spawnstruct();
    var_7.weapon = var_1;
    var_7.loadoutprimaryfullname = var_2;
    var_7.scriptablename = var_3;
    var_7.origin = var_0.origin + ( 0, 0, 24 );
    var_7.count = br_getweaponstartingclipammo( var_1 );
    var_7.impulsefx = 0;
    var_7.impactfunc_fire = 0;

    if ( var_6 )
        var_7.count = 999;

    if ( isdefined( var_4 ) && isdefined( var_5 ) )
    {
        var_8 = weaponclipsize( var_1 );
        var_9 = int( ceil( var_8 * var_4 ) );
        var_7.count = int( min( var_9, var_5 ) );
    }

    if ( scripts\mp\utility\weapon::turnexfiltoside( var_1 ) )
        var_7.impulsefx = var_7.count;

    if ( var_1.hasalternate )
    {
        var_10 = var_1 getaltweapon();

        if ( !debug_spawn_crate_on_train( var_1, var_10 ) )
        {
            var_11 = weaponclipsize( var_10 );
            var_7.impactfunc_fire = var_11;

            if ( var_6 )
                var_7.impactfunc_fire = 999;
        }
    }

    if ( getdvarint( "_encstr_9B2C21AB669BAF562D399BE2204BCF47F3C0132406819F5D23A8B25928B30683C8309B", 0 ) > 0 )
        var_0 loadweaponsforplayer( [ var_7.loadoutprimaryfullname ] );

    var_0 takeweaponpickup( var_7 );

    if ( var_1.hasalternate )
    {
        var_12 = var_1 getaltweapon();

        if ( var_12.isalternate && scripts\mp\utility\weapon::attachmentmap_tobase( var_12.underbarrel ) == "_encstr_BE970867A0DBD0FB0FF0" )
        {
            var_13 = weaponclipsize( var_12 );
            var_14 = int( var_13 );
            var_0 setweaponammoclip( var_12, var_14 );
        }
    }

    return 1;
}

br_ammo_init()
{
    level.br_ammo_types = [];
    level.br_ammo_types[0] = "_encstr_A3D9107A2E98AFD5E1F9EA22803F012E9B33";
    level.br_ammo_types[1] = "_encstr_81DA10269C367BBD47EB166BB6EDD7622376";
    level.br_ammo_types[2] = "_encstr_A9DA10F62308079265E7D7FF9B80D917A243";
    level.br_ammo_types[3] = "_encstr_A6D112C2ABD1573550476165CB60F1E627214AAA";
    level.br_ammo_types[4] = "_encstr_A389138D838AF8282C8949C02DEF71AE523F171B33";
    level.br_ammo_clipsize["_encstr_A3D9107A2E98AFD5E1F9EA22803F012E9B33"] = 30;
    level.br_ammo_clipsize["_encstr_81DA10269C367BBD47EB166BB6EDD7622376"] = 8;
    level.br_ammo_clipsize["_encstr_A9DA10F62308079265E7D7FF9B80D917A243"] = 30;
    level.br_ammo_clipsize["_encstr_A6D112C2ABD1573550476165CB60F1E627214AAA"] = 8;
    level.br_ammo_clipsize["_encstr_A389138D838AF8282C8949C02DEF71AE523F171B33"] = 1;
    level.br_ammo_max = [];
    level.br_ammo_omnvars = [];
    level.br_ammo_omnvars["_encstr_A3D9107A2E98AFD5E1F9EA22803F012E9B33"] = "_encstr_9E831528C8890610678741E64439A6CD18628170F8787D";
    level.br_ammo_omnvars["_encstr_81DA10269C367BBD47EB166BB6EDD7622376"] = "_encstr_A2D0135DD2FA9827BEB91ABD8EECEAE6D70B6BB5DB";
    level.br_ammo_omnvars["_encstr_A9DA10F62308079265E7D7FF9B80D917A243"] = "_encstr_89801323BAEFF63BE81AEB630F0521C3081FC890FF";
    level.br_ammo_omnvars["_encstr_A6D112C2ABD1573550476165CB60F1E627214AAA"] = "_encstr_B93612AF3096E2A337360DC49F7B9B97F98847BF";
    level.br_ammo_omnvars["_encstr_A389138D838AF8282C8949C02DEF71AE523F171B33"] = "_encstr_825D127DDBF196DBB853D21A588D9B8168ABEDFF";
}

br_ammo_player_init()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    thread br_ammo_player_reload_watch();
    thread br_ammo_player_hud_monitor();

    for (;;)
    {
        self waittill( "_encstr_A9E00BC439EBE6380B77DC95C8" );

        if ( !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        {
            var_0 = self getweaponslistprimaries();

            foreach ( var_2 in var_0 )
            {
                var_3 = weaponclipsize( var_2 );

                if ( isdefined( var_3 ) )
                {
                    if ( scripts\mp\utility\weapon::turnexfiltoside( var_2 ) )
                    {
                        self setweaponammoclip( var_2, var_3, "_encstr_B1AD05C65666E8" );
                        self setweaponammoclip( var_2, var_3, "_encstr_9353062E718710C9" );
                        continue;
                    }

                    self setweaponammoclip( var_2, var_3 );
                }
            }
        }

        foreach ( var_6 in level.br_ammo_types )
        {
            if ( !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
            {
                self.br_ammo[var_6] = level.br_ammo_max[var_6];
                continue;
            }

            self.br_ammo[var_6] = 0;
        }

        br_ammo_update_weapons( self );
        br_ammo_player_hud_update_ammotype( "_encstr_A3D9107A2E98AFD5E1F9EA22803F012E9B33" );
        br_ammo_player_hud_update_ammotype( "_encstr_81DA10269C367BBD47EB166BB6EDD7622376" );
        br_ammo_player_hud_update_ammotype( "_encstr_A9DA10F62308079265E7D7FF9B80D917A243" );
        br_ammo_player_hud_update_ammotype( "_encstr_A6D112C2ABD1573550476165CB60F1E627214AAA" );
        br_ammo_player_hud_update_ammotype( "_encstr_A389138D838AF8282C8949C02DEF71AE523F171B33" );
    }
}

delay_add_to_chopper_boss_drone_target_array()
{
    if ( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::unset_relic_aggressive_melee( "_encstr_AF01087B20CB1ABF304E" ) )
        return;

    br_ammo_give_type( self, "_encstr_A3D9107A2E98AFD5E1F9EA22803F012E9B33", 30, 0 );
}

br_ammo_player_clear()
{
    if ( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::unset_relic_aggressive_melee( "_encstr_AF01087B20CB1ABF304E" ) )
        return;

    foreach ( var_1 in level.br_ammo_types )
        self.br_ammo[var_1] = 0;

    self notify( "_encstr_B8110CD867BD207793A2851FBBCA" );
}

debug_spawnallaccesscards()
{
    var_0 = self;
    var_1 = var_0 getweaponslistprimaries();

    foreach ( var_3 in var_1 )
    {
        var_4 = br_ammo_type_for_weapon( var_3 );

        if ( isdefined( var_4 ) )
        {
            var_5 = var_0 getweaponammoclip( var_3, "_encstr_9353062E718710C9" );
            var_6 = weaponclipsize( var_3 );

            if ( var_5 < var_6 )
                return 0;

            if ( var_3 hasattachment( "_encstr_A39C07B1CFC082B1AD", 1 ) )
            {
                var_7 = var_0 getweaponammoclip( var_3, "_encstr_B1AD05C65666E8" );

                if ( var_7 < var_6 )
                    return 0;
            }

            if ( !br_ammo_type_player_full( var_0, var_4 ) )
                return 0;
        }
    }

    return 1;
}

debug_spawncover_badnodetest()
{
    var_0 = self;
    var_1 = [];
    var_2 = var_0 getweaponslistprimaries();

    foreach ( var_4 in var_2 )
    {
        var_5 = br_ammo_type_for_weapon( var_4 );

        if ( isdefined( var_5 ) )
        {
            var_1[var_5] = "_encstr_8AE10CAB90902DD3F7740E45DDBB";
            var_6 = weaponclipsize( var_4 );
            var_0 setweaponammoclip( var_4, var_6 );
        }
    }

    foreach ( var_5, var_9 in var_1 )
    {
        var_0.br_ammo[var_5] = level.br_ammo_max[var_5];
        var_0 br_ammo_player_hud_update_ammotype( var_5 );
    }

    br_ammo_update_weapons( var_0 );
}

br_ammo_type_player_full( var_0, var_1 )
{
    if ( !isdefined( var_0.br_ammo ) || !isdefined( var_0.br_ammo[var_1] ) )
        return 0;

    if ( !isdefined( level.br_ammo_max[var_1] ) )
        return 0;

    return _encstr_97571CC31EE30FBA499B665A8327B7E7F8F54C512FA93F150D207EF2F097::get_int_or_0( var_0.br_ammo[var_1] ) >= level.br_ammo_max[var_1];
}

br_ammo_give_type( var_0, var_1, var_2, var_3 )
{
    debug_spawnrewardstest( var_0, var_1 );

    if ( br_ammo_type_player_full( var_0, var_1 ) )
        return var_2;

    if ( !isdefined( var_0.br_ammo ) )
        var_0.br_ammo = [];

    if ( !isdefined( var_0.br_ammo[var_1] ) )
        var_0.br_ammo[var_1] = 0;

    if ( !isdefined( var_3 ) )
        var_3 = 0;

    var_4 = 0;
    var_0.br_ammo[var_1] = var_0.br_ammo[var_1] + var_2;

    if ( var_0.br_ammo[var_1] > level.br_ammo_max[var_1] )
    {
        if ( var_3 )
        {
            var_4 = var_0.br_ammo[var_1] - level.br_ammo_max[var_1];

            if ( var_4 < level.br_ammo_clipsize[var_1] )
                var_4 = 0;
        }

        var_0.br_ammo[var_1] = level.br_ammo_max[var_1];
    }

    var_0 br_ammo_player_hud_update_ammotype( var_1 );
    debug_start_numbers_threaded( var_0, var_1 );
    return var_4;
}

debug_spawnrewardstest( var_0, var_1 )
{
    if ( !var_0 isreloading() )
        return;

    var_2 = var_0 getcurrentprimaryweapon();
    var_3 = br_ammo_type_for_weapon( var_2 );

    if ( isdefined( var_3 ) && var_1 == var_3 )
        var_0.br_ammo[var_1] = var_0 getweaponammostock( var_2 );
}

br_ammo_take_type( var_0, var_1, var_2 )
{
    if ( var_0.br_ammo[var_1] <= 0 )
        return 0;

    var_0.br_ammo[var_1] = var_0.br_ammo[var_1] - var_2;

    if ( var_0.br_ammo[var_1] < 0 )
        var_0.br_ammo[var_1] = 0;

    var_0 br_ammo_player_hud_update_ammotype( var_1 );
    br_ammo_update_weapons( var_0 );
    return 1;
}

br_ammo_player_hud_monitor()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    for (;;)
    {
        scripts\engine\utility::_id_143A8( "_encstr_B8110CD867BD207793A2851FBBCA", "_encstr_87630FAFCCA24721EC57F8C8FF015B97DA", "_encstr_A22513EE59850E7BB9AF37EE4BA38D1AD791EDB9CA", "_encstr_89390E4C39FEB818C099781C19966AEB", "_encstr_80DC17EB312F637DD80FDBA80BA0077F5869E2F23B71CF73A8" );
        br_ammo_player_hud_update_ammotype( "_encstr_A3D9107A2E98AFD5E1F9EA22803F012E9B33" );
        br_ammo_player_hud_update_ammotype( "_encstr_81DA10269C367BBD47EB166BB6EDD7622376" );
        br_ammo_player_hud_update_ammotype( "_encstr_A9DA10F62308079265E7D7FF9B80D917A243" );
        br_ammo_player_hud_update_ammotype( "_encstr_A6D112C2ABD1573550476165CB60F1E627214AAA" );
        br_ammo_player_hud_update_ammotype( "_encstr_A389138D838AF8282C8949C02DEF71AE523F171B33" );
    }
}

br_ammo_player_hud_update_ammotype( var_0, var_1 )
{
    if ( isdefined( level.br_ammo_omnvars[var_0] ) )
    {
        if ( !isdefined( self.br_ammo ) )
            self.br_ammo = [];

        if ( !isdefined( self.br_ammo[var_0] ) )
            self.br_ammo[var_0] = 0;

        self setclientomnvar( level.br_ammo_omnvars[var_0], self.br_ammo[var_0] );
    }
}

br_ammo_update_weapons( var_0 )
{
    if ( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::unset_relic_aggressive_melee( "_encstr_AF01087B20CB1ABF304E" ) )
        return;

    if ( !isdefined( var_0 ) )
        return;

    var_1 = var_0 getweaponslistprimaries();

    foreach ( var_3 in var_1 )
    {
        var_4 = br_ammo_type_for_weapon( var_3 );

        if ( isdefined( var_4 ) )
        {
            var_5 = _encstr_97571CC31EE30FBA499B665A8327B7E7F8F54C512FA93F150D207EF2F097::get_int_or_0( var_0.br_ammo[var_4] );
            var_0 setweaponammostock( var_3, var_5 );
        }
    }

    var_0 notify( "_encstr_B8110CD867BD207793A2851FBBCA" );
}

debug_start_numbers_threaded( var_0, var_1 )
{
    if ( !isdefined( var_0 ) || !isdefined( var_1 ) )
        return;

    var_2 = self getweaponslistprimaries();

    foreach ( var_4 in var_2 )
    {
        var_5 = br_ammo_type_for_weapon( var_4 );

        if ( isdefined( var_5 ) && var_1 == var_5 )
        {
            var_6 = _encstr_97571CC31EE30FBA499B665A8327B7E7F8F54C512FA93F150D207EF2F097::get_int_or_0( var_0.br_ammo[var_1] );
            var_0 setweaponammostock( var_4, var_6 );
        }
    }

    var_0 notify( "_encstr_B8110CD867BD207793A2851FBBCA" );
}

br_ammo_type_for_weapon( var_0 )
{
    var_1 = undefined;
    var_2 = [ "_encstr_80270B9E4D9B81F72B0B6820C2", "_encstr_A1A612C091494F518367F3079766E59E9172DB13", "_encstr_94F512DCCAC6B2361DE6CA6B96AFB0E6ED9DE443", "_encstr_B849119B8939A2EB06676713733C710B40F014", "_encstr_AF2A0CC842B1ADC3FF13C6B1E507", "_encstr_94530EBE391E73A140130F95F0B56A91", "_encstr_B63F14B3595B7F6E5B802018FB99C01337B87F370202", "_encstr_BDE10E77A4591035332A19E3728F7538", "_encstr_BD5A14C627BAB31904A74830F71790E3924F9F6BAAC7" ];
    var_3 = [ "_encstr_BE970867A0DBD0FB0FF0", "_encstr_AFB40A9B2AE37B6B3A288BA5", "_encstr_BD520EBAC4B9A1D1B3377D6B2D6D59D0" ];

    if ( var_0.isalternate && isdefined( var_0.underbarrel ) && !scripts\engine\utility::array_contains( var_2, var_0.underbarrel ) )
    {
        if ( scripts\engine\utility::array_contains( var_3, var_0.underbarrel ) )
            return undefined;
        else
            var_1 = "_encstr_B7BF127F8889D85A6D18A25A780DB2937340ABBF";
    }
    else
        var_1 = scripts\mp\utility\weapon::getweapongroup( var_0 );

    return debug_spawning( var_1, var_0.basename );
}

debug_spawning( var_0, var_1 )
{
    switch ( var_0 )
    {
        case "_encstr_982816EB993840DA109FAF97CFCB6286F026A2F4F32817A2":
        case "_encstr_97C90EBB2B2C1CBDDCAF1C4BE647B7B1":
            if ( isdefined( var_1 ) && var_1 == "_encstr_88F517D79F73991828B64B4E4B704363A0D1374B07FD41CD08" )
                return "_encstr_81DA10269C367BBD47EB166BB6EDD7622376";
        case "_encstr_A6710B7FC30B12AF20F613FAD9":
            return "_encstr_A3D9107A2E98AFD5E1F9EA22803F012E9B33";
        case "_encstr_8FE60FAF13D0C25FD006C37AE835877B40":
            return "_encstr_81DA10269C367BBD47EB166BB6EDD7622376";
        case "_encstr_AF710B0B50BB6ACFA0C80C35FC":
        case "_encstr_BA250FBBB22C1CF6CDF50B6E372CD5D88E":
        case "_encstr_AD6510EEACC283DBB9FA3A85B13A5AB1B063":
            return "_encstr_A9DA10F62308079265E7D7FF9B80D917A243";
        case "_encstr_A9710B24C527AB77354198A8EB":
        case "_encstr_AABE0E47EF4F93A830EFCFC309E7BF9E":
            return "_encstr_A6D112C2ABD1573550476165CB60F1E627214AAA";
        case "_encstr_B7BF127F8889D85A6D18A25A780DB2937340ABBF":
        case "_encstr_8A200EAF49963790881958AA3D0BB563":
            return "_encstr_A389138D838AF8282C8949C02DEF71AE523F171B33";
    }

    return undefined;
}

trial_vehicle( var_0 )
{
    switch ( var_0 )
    {
        case "_encstr_A389138D838AF8282C8949C02DEF71AE523F171B33":
        case "_encstr_A6D112C2ABD1573550476165CB60F1E627214AAA":
        case "_encstr_A9DA10F62308079265E7D7FF9B80D917A243":
        case "_encstr_81DA10269C367BBD47EB166BB6EDD7622376":
        case "_encstr_A3D9107A2E98AFD5E1F9EA22803F012E9B33":
            return 1;
    }

    return 0;
}

debug_spawn_crate_on_train( var_0, var_1 )
{
    var_2 = br_ammo_type_for_weapon( var_0 );
    var_3 = br_ammo_type_for_weapon( var_1 );
    return isdefined( var_2 ) && isdefined( var_3 ) && var_2 == var_3;
}

br_ammo_player_reload_watch()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    for (;;)
    {
        self waittill( "_encstr_89730D399536DE1632F5378E85E41D" );

        if ( !isdefined( self ) )
            return;

        if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::isplayeringulag() )
            continue;

        var_0 = self getcurrentweapon();
        var_1 = br_ammo_type_for_weapon( var_0 );

        if ( !isdefined( var_1 ) )
            continue;

        denyascendmessagejugg( var_0 );

        if ( !isdefined( self ) )
            return;

        if ( var_0 != self getcurrentweapon() )
            continue;

        if ( !getdvarint( "_encstr_8A321B37369CEB3839566BB08E360DEB5A7399A5E64BD1ACEB586BADDB", istrue( level._id_12857 ) ) || scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
            self.br_ammo[var_1] = self getweaponammostock( var_0 );

        debug_start_numbers_threaded( self, var_1 );
    }
}

denyascendmessagejugg( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_BE140D3FF56983E5E5C94AB288DB1F" );

    while ( self isreloading() )
        waitframe();
}

delay_delete_alerted_icon( var_0, var_1 )
{
    var_2 = self;

    if ( !isdefined( var_1 ) )
        var_1 = 1;

    var_3 = br_ammo_type_for_weapon( var_0 );

    if ( isdefined( var_3 ) )
    {
        var_4 = int( level.br_ammo_clipsize[var_3] * var_1 );
        var_2.br_ammo[var_3] = int( clamp( var_2.br_ammo[var_3] + var_4, 0, level.br_ammo_max[var_3] ) );
    }

    debug_start_numbers_threaded( var_2, var_3 );
}

delay_camera_normal( var_0, var_1 )
{
    var_2 = self;
    var_3 = br_ammo_type_for_weapon( var_0 );

    if ( isdefined( var_3 ) )
        var_2.br_ammo[var_3] = int( clamp( var_2.br_ammo[var_3] + var_1, 0, level.br_ammo_max[var_3] ) );

    debug_start_numbers_threaded( var_2, var_3 );
}

vandalize_attack_max_cooldown( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    if ( !issameweapon( var_0 ) )
        return 0;

    if ( nullweapon( var_0 ) )
        return 0;

    if ( scripts\mp\weapons::isfistweapon( var_0 ) || scripts\mp\utility\weapon::unset_relic_mythic( var_0 ) || scripts\mp\utility\weapon::update_health_bar_to_player( var_0 ) )
        return 0;

    return 1;
}

deregistergasmaskscriptableatframeend()
{
    if ( istrue( level.debug_safehouse_regroup_start ) && !_encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::uniquelootitemid() )
        return 1;
}

droptogroundmultitrace( var_0 )
{
    foreach ( var_2 in var_0 )
        zone_bounds( var_2, istrue( var_2.should_spawn_boss_one ) );
}

zone_bounds( var_0, var_1 )
{
    var_2 = br_ammo_type_for_weapon( var_0 );
    var_3 = weaponstartammo( var_0 );
    var_4 = weaponclipsize( var_0 );
    var_5 = weaponmaxammo( var_0 );
    var_6 = undefined;

    if ( var_1 )
        var_6 = var_5;
    else
        var_6 = var_3 - var_4;

    if ( isdefined( var_2 ) )
        br_ammo_give_type( self, var_2, var_6 );
}
