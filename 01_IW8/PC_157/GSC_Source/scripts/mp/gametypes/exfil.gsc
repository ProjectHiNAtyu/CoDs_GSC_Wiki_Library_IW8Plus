// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

exfilinit()
{
    level._effect["_encstr_9BB20F6B38F9D1CF5042AF9B6B3973E669"] = loadfx( "_encstr_A9162956EDE0ED5716992B13E1EEB3B20253E8F777C085673F9022DB804403A829177D5BEFE8CC27E829EA" );
}

onexfilstart( var_0, var_1, var_2, var_3 )
{
    level.getexfilloccallback = var_1;
    level.onexfilfinishedcallback = var_2;
    level.onexfilkilledcallback = var_3;
    level.exfilgoaltrigger = getent( var_0 + "_encstr_A3CF0F2FDD62F33CB9A1136B08F7F7B75B", "_encstr_B8CE0BE43FC317DF690862BA48" );
    level.exfilstarted = 1;

    if ( isdefined( level.onexfilstarted ) )
        [[ level.onexfilstarted ]]();

    if ( isdefined( level.objectives ) && level.objectives.size > 0 )
        thread removeallobjids();

    level.ignorescoring = 1;
    scripts\mp\gamelogic::resumetimer();
    level.starttime = gettime();
    level.discardtime = 0;
    level.timerpausetime = 0;
    var_4 = level.exfilactivetimer + level.exfilextracttimer;
    var_5 = "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_BA6F0B9FF3B2912B5C6C906853";
    level.watchdvars[var_5].value = var_4;
    level.overridewatchdvars[var_5] = var_4;
    runexfil( var_0, var_3 );
}

removeallobjids()
{
    foreach ( var_1 in level.objectives )
    {
        if ( isdefined( var_1.objidnum ) )
            var_1 scripts\mp\gameobjects::releaseid();

        if ( isdefined( var_1.trigger ) && isdefined( var_1.trigger.objidnum ) )
            var_1.trigger scripts\mp\gameobjects::releaseid();
    }
}

runexfil( var_0, var_1 )
{
    level thread scripts\mp\hud_message::notifyteam( "_encstr_BCC816D79B61923FE0CBE96F221071CA501F476B1D1DBBFB", "_encstr_A9A9155B87B883F5C380E942C8CDAC5B36F9AFC32DC3B7", var_0 );
    level thread spawnexfilzone( var_0 );
    level thread spawnexfilplayers( var_0 );
    scripts\mp\utility\dialog::leaderdialog( "_encstr_AF0D0C7D559A13EA9F2F709807F4", scripts\mp\utility\game::getotherteam( var_0 )[0], "_encstr_A96D0726D4272B4372" );
    scripts\mp\utility\dialog::leaderdialog( "_encstr_93100F36B5180FE36DE8FB81D1BB0BC4C8", var_0, "_encstr_A96D0726D4272B4372" );
    level.timelimitoverride = 0;
    wait 1;
    level.ontimelimit = ::onexfiltimelimit;
}

spawnexfilplayers( var_0 )
{
    var_1 = "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_B1B70A71483D3F95D875C5DB";
    level.watchdvars[var_1].value = 1;
    level.overridewatchdvars[var_1] = 1;
    level notify( "_encstr_BC571811FBFBD809C67D895060F0197A4310C12E031F1C8291AA" );
    level thread scripts\mp\hud_message::updatematchstatushintforallplayers( var_0, 8, 7 );
}

skipkillcamandspawn()
{
    self notify( "_encstr_95730EC213DE4E3A7DB6D2D81B6C85DA" );
    self.cancelkillcam = 1;
    waitframe();
    thread scripts\mp\playerlogic::spawnplayer( 0, 1 );

    if ( scripts\mp\utility\game::isteamreviveenabled() && isdefined( level.revivetriggers[self.guid] ) )
        level.revivetriggers[self.guid].victim thread scripts\mp\teamrevive::removetrigger( level.revivetriggers[self.guid].victim.guid );
}

spawnexfilzone( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A3750609A5E61883" );
    var_1 = scripts\mp\utility\game::getotherteam( var_0 )[0];

    if ( !isdefined( level.exfilgoaltrigger ) )
    {
        var_2 = getentarray( "_encstr_93170DA48D825F66F84B3018EF127A", "_encstr_B8CE0BE43FC317DF690862BA48" );
        var_3 = [];

        for ( var_4 = 0; var_4 < var_2.size; var_4++ )
            var_3[var_3.size] = var_2[var_4];

        foreach ( var_6 in var_3 )
        {
            if ( var_6.script_label == "_encstr_A40703FA31" )
            {
                var_6.script_label = "_encstr_A40703FA31";
                level.exfilgoaltrigger = var_6;

                if ( !isdefined( level.exfilgoaltrigger ) )
                {
                    level notify( "_encstr_AAE5185D0BF997359738EAF2A8D36D3F7160A7D12921073F8D18" );
                    return;
                }
            }
        }
    }

    level.exfilgoalent = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", level.exfilgoaltrigger.origin );
    level.exfilgoalent.angles = ( 0, 270, 0 );
    level.exfilgoalent.team = var_1;
    level.exfilgoalent.visibleteam = "_encstr_BC19047780DA";
    level.exfilgoalent.ownerteam = var_1;
    level.exfilgoalent.type = "_encstr_A40101";
    var_8 = level.exfilgoaltrigger.origin;
    var_9 = scripts\engine\trace::create_contents( 0, 1, 1, 0, 0, 1, 1 );
    var_10 = [];
    var_11 = scripts\engine\trace::ray_trace( level.exfilgoalent.origin + ( 0, 0, 20 ), level.exfilgoalent.origin - ( 0, 0, 4000 ), var_10, var_9, 0 );

    if ( isplayer( var_11["_encstr_B60E07C9FD1C2055E3"] ) )
        var_11["_encstr_B60E07C9FD1C2055E3"] = undefined;

    if ( isdefined( var_11 ) )
    {
        var_12 = randomfloat( 360 );
        var_13 = var_11["_encstr_B7260923C89E8F3378E72E"];

        if ( isdefined( self.visualgroundoffset ) )
            var_13 = var_13 + self.visualgroundoffset;

        var_14 = ( cos( var_12 ), sin( var_12 ), 0 );
        var_14 = vectornormalize( var_14 - var_11["_encstr_930E073E8FC00DDF69"] * vectordot( var_14, var_11["_encstr_930E073E8FC00DDF69"] ) );
        var_15 = vectortoangles( var_14 );
        level.exfilgoalent.origin = var_13;
        level.exfilgoalent setmodel( "_encstr_8C2116338FD081EFEF2BDA2233285F46386BB8AC2BE815B7" );
        level.exfilgoalent setscriptablepartstate( "_encstr_A12B07D13E43B7F12A", "_encstr_811904785890" );
        level.exfilgoalent playloopsound( "_encstr_A92F11AD07F5CCC62CC9ACFA4CD54EE6F5B183" );
    }

    level.exfilgoaltrigger thread goaltriggerwatcher( self );
    level.exfilobjid = scripts\mp\objidpoolmanager::requestobjectiveid( 99 );

    if ( level.exfilobjid != -1 )
    {
        var_16 = "_encstr_A65A0856F3802ACA0D6B";
        scripts\mp\objidpoolmanager::objective_add_objective( level.exfilobjid, var_16, level.exfilgoaltrigger.origin + ( 0, 0, 60 ) );
        scripts\mp\objidpoolmanager::objective_set_play_intro( level.exfilobjid, 1 );
        scripts\mp\objidpoolmanager::objective_set_play_outro( level.exfilobjid, 1 );
        scripts\mp\objidpoolmanager::objective_playermask_showtoall( level.exfilobjid );
        self.showworldicon = 1;
    }

    level.exfilgoalent scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_9EA11CB436DB37D7EEC2E5E0F696B9D1EBEEB04B4799F64ED7CA3CCC2DB1", "_encstr_A9301C08729D95A68F39E35F1FDF487949AB28E0BBB7DD9B57256B5CE113", level.exfilobjid );
    objective_sethot( level.exfilobjid, 1 );
    level thread watchforexfilactive( var_0 );
    waitframe();
    playfxontag( level._effect["_encstr_9BB20F6B38F9D1CF5042AF9B6B3973E669"], level.exfilgoalent, "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
}

goaltriggerwatcher( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self notify( "_encstr_B6450EFBA2505CB7FF6AD87793125213" );
    self endon( "_encstr_B6450EFBA2505CB7FF6AD87793125213" );
    level waittill( "_encstr_891D17951EE8390BD8E8AFD1E4B4B3D9B2277D85D8475A3BAC" );

    for (;;)
    {
        self waittill( "_encstr_8B5C081B58E0B7A213E6", var_0 );

        if ( var_0.team == level.exfilgoalent.team && !istrue( var_0.extracted ) )
            level thread onexfilsuccess( var_0 );
    }
}

watchforexfilactive( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level thread runexfilnotactivefill( var_0 );
    level thread runexfilwaitactiveunfill( var_0 );
    var_1 = level.exfilactivetimer;
    wait( var_1 );
    level.exfilnotactive = 0;
    level notify( "_encstr_891D17951EE8390BD8E8AFD1E4B4B3D9B2277D85D8475A3BAC" );
    level.exfilgoalent scripts\mp\gameobjects::setobjectivestatusicons( "_encstr_B28C1B4BD8DBB9EBDDB0F20EF65A9BE87D2C36A35AB359AF2B87CCB4C6", "_encstr_A9301C08729D95A68F39E35F1FDF487949AB28E0BBB7DD9B57256B5CE113", level.exfilobjid );
}

runexfilnotactivefill( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level.exfilnotactive = 1;
    var_1 = level.framedurationseconds;
    var_2 = var_1 * 1000;
    var_3 = level.exfilactivetimer;
    var_3 = var_3 * 1000;
    var_4 = var_2;

    while ( level.exfilnotactive )
    {
        if ( var_4 != 0 )
        {
            var_5 = min( var_4 / var_3, 1 );
            scripts\mp\objidpoolmanager::objective_set_progress_team( self.exfilobjid, undefined );
            scripts\mp\objidpoolmanager::objective_show_progress( self.exfilobjid, 1 );
            scripts\mp\objidpoolmanager::objective_set_progress( self.exfilobjid, var_5 );
            var_4 = min( var_4 + var_2, var_3 );
        }

        waitframe();
    }

    scripts\mp\utility\dialog::leaderdialog( "_encstr_BE9712277079D17A03FE528CE4230165C0309FDF", scripts\mp\utility\game::getotherteam( var_0 )[0], "_encstr_A96D0726D4272B4372" );
    scripts\mp\utility\dialog::leaderdialog( "_encstr_B32C1555835A12D512C3F3574CBD89360B892D8628E148", var_0, "_encstr_A96D0726D4272B4372" );
}

runexfilwaitactiveunfill( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level waittill( "_encstr_891D17951EE8390BD8E8AFD1E4B4B3D9B2277D85D8475A3BAC" );
    level.exfilactive = 1;
    var_1 = level.framedurationseconds;
    var_2 = var_1 * 1000;
    var_3 = level.exfilextracttimer;
    var_3 = var_3 * 1000;
    var_4 = var_3 - var_2;

    while ( level.exfilactive )
    {
        var_5 = var_4 / var_3;
        scripts\mp\objidpoolmanager::objective_set_progress_team( self.exfilobjid, scripts\mp\utility\game::getotherteam( var_0 )[0] );
        scripts\mp\objidpoolmanager::objective_show_progress( self.exfilobjid, 1 );
        scripts\mp\objidpoolmanager::objective_set_progress( self.exfilobjid, var_5 );
        var_4 = max( var_4 - var_2, 1 );
        waitframe();
    }

    scripts\mp\utility\dialog::leaderdialog( "_encstr_A4C10F81202364A3C09AE947DD38BDD5D3", scripts\mp\utility\game::getotherteam( var_0 )[0], "_encstr_A96D0726D4272B4372" );
    scripts\mp\utility\dialog::leaderdialog( "_encstr_9C0912972329E4E26DCDB239079367B05045110A", var_0, "_encstr_A96D0726D4272B4372" );
}

switchtoexfilweapons( var_0, var_1 )
{
    level waittill( "_encstr_BC571811FBFBD809C67D895060F0197A4310C12E031F1C8291AA" );
    var_2 = scripts\mp\utility\game::getotherteam( var_0 )[0];

    if ( var_2 != "_encstr_8A190423A45D" )
    {
        foreach ( var_4 in level.players )
        {
            if ( var_4.team == var_2 )
            {
                var_4 takeallweapons();
                var_4 scripts\cp_mp\utility\inventory_utility::_giveweapon( var_1, undefined, undefined, 1 );
                var_4 thread switchtoexfilweapon( var_1 );
                var_4 scripts\mp\equipment::giveequipment( "_encstr_9E2115CAB8BAB4077D8E0D93BDBBA5DCECD7B6CD4B99B2", "_encstr_987F080E394BDAC2E45E" );
            }
        }
    }
}

switchtoexfilweapon( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A89E1205BD40B1A7D4583BB280BD1F3FF02FAC9B" );

    while ( scripts\cp_mp\utility\inventory_utility::domonitoredweaponswitch( var_0, 1 ) == 0 )
        waitframe();
}

onexfiltimelimit()
{
    level.exfilactive = 0;

    if ( level.exfilactive )
        level notify( "_encstr_AAE5185D0BF997359738EAF2A8D36D3F7160A7D12921073F8D18" );
}

onexfilsuccess( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0.extracted = 1;
    var_0.spawnprotection = 1;
    var_0 scripts\mp\lightarmor::setlightarmorvalue( var_0, 1000, undefined, 0 );
    var_0 scripts\mp\playeractions::registeractionset( "_encstr_81130E63D03FE8A9E7A323E94AE7DEC0", [ "_encstr_ADE40AEADCC2312D1B2DD12F", "_encstr_A9AF10E0F285CA19B35C28B0BD4FC89D8822", "_encstr_B6190C6DB4C68DB9A327CA0B6DDC", "_encstr_BEF407B95DC1B227E6", "_encstr_8B0508CE95DC1DEAC92B", "_encstr_B92007DDCA2C0EF6DC", "_encstr_A80F0EAFBBDF6B0710B68A93689853A2" ] );
    var_0 scripts\mp\playeractions::allowactionset( "_encstr_81130E63D03FE8A9E7A323E94AE7DEC0", 0 );
    var_0 thread scripts\mp\hud_message::showsplash( "_encstr_BC9A16B730B02CB2A37581075BBDEAE47E38674FC8498B3B" );

    while ( !var_0 isonground() )
        waitframe();

    var_0 allowmovement( 0 );
    var_1 = spawn( "_encstr_A3050EDF6FF5DC081CC1AFA37097B80B", var_0.origin );
    var_1 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_0 playerlinkto( var_1 );
    var_1 moveto( var_1.origin + ( 0, 0, 10000 ), 5, 2, 2 );
}

stopunfillthread( var_0 )
{
    wait( var_0 );
    self.exfilactive = 0;
}

assignhelitoexfilpoint( var_0, var_1, var_2 )
{
    wait( var_1 + randomint( 10 ) );
    var_3 = level.players[0] _encstr_95D52C67B0E3D9B351060D95EFBF9A99A838F3D7C0F91B8E559E698FD3E1032131D8E73798105043A3B63D07BEF7::spawnextractchopper( self, self.origin, var_0, 10 + var_1 );
    var_3 playloopsound( "_encstr_8B1C1C984EF5950F6696C6FA1B89C9B0D9F6D75637CEB4DC95AFD1ACDA0E" );
    var_4 = getent( "_encstr_9DCD0E208B513B5D6F38040D1027932B", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_5 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_3 gettagorigin( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" ) );
    var_5 dontinterpolate();
    var_5.angles = ( -90, 0, 0 );
    var_5 clonebrushmodeltoscriptmodel( var_4 );
    var_6 = anglestoforward( var_3.angles * ( 1, 0, 0 ) );
    var_7 = vectornormalize( var_6 ) * 85;
    var_5 linkto( var_3, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", var_7 + ( 0, 0, -60 ), var_5.angles );
    var_3.colmodelent = var_5;
    var_3 sethoverparams( 5, 10, 5 );
    self.choppers[self.choppers.size] = var_3;
    var_3.extractzone = self;

    if ( !isdefined( var_2 ) )
        var_2 = self.team;

    var_3.team = var_2;
    var_3.exfilspace = 6;
    var_3.passengers[0] = self;
    var_3.passengers[1] = self;
    var_3.passengers[2] = self;
    var_3.passengers[3] = self;
    var_3.passengers[4] = self;
    var_3.passengers[5] = self;
    self.curorigin = self.origin;
    self.offset3d = ( 0, 0, 30 );
    var_3 init_useprompt_interactions();
    thread bugoutontimeout( var_3 );
    var_3.scene_node = undefined;
    var_8 = undefined;
    var_3 thread exfilpilotactorthink( var_2, var_3.scene_node, var_8 );
}

createextractvfx()
{
    wait 1;
    playfxontag( scripts\engine\utility::getfx( "_encstr_ADA412C69CA2D77A7BC061BBC8B7F5E7D8E85F5A" ), self.vfxent, "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
}

exfilpilotactorthink( var_0, var_1, var_2, var_3 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self.actors = thread spawnexfilpilotactors( var_0, var_2, var_3 );
    scripts\common\anim::anim_first_frame( self.actors, "_encstr_9D020D3C95C00E83E88E3AF3B13323", "_encstr_ABEB13D8F2FAA7480E275838E75501C942D1C2D0CB" );
    scripts\mp\utility\infilexfil::hideactors();
    scripts\mp\utility\infilexfil::showactors();

    if ( isdefined( self.path ) )
        exfilactorthinkpath( var_0, var_1, var_2, var_3 );
    else
        exfilactorthinkanim( var_0, var_1, var_2, var_3 );
}

exfilactorthinkpath( var_0, var_1, var_2, var_3 )
{
    thread exfilactorloopthink( self.actors[0] );
    thread exfilactorloopthink( self.actors[1] );
}

exfilactorloopthink( var_0 )
{
    exfilactorloop( var_0 );
    scripts\common\anim::anim_single_solo( var_0, "_encstr_BD341750BB4201C5D2C9A5339F6A290EB477C028E7ED7AB30B", "_encstr_ABEB13D8F2FAA7480E275838E75501C942D1C2D0CB" );
}

exfilactorloop( var_0 )
{
    self endon( "_encstr_B2A8075DB9C6BDB032" );

    for (;;)
        scripts\common\anim::anim_single_solo( var_0, "_encstr_9BC21236269CB09D7BF52B3CCCA51BF58DB7DEC1", "_encstr_ABEB13D8F2FAA7480E275838E75501C942D1C2D0CB" );
}

exfilactorthinkanim( var_0, var_1, var_2, var_3 )
{
    thread scripts\common\anim::anim_single( self.actors, "_encstr_9D020D3C95C00E83E88E3AF3B13323", "_encstr_ABEB13D8F2FAA7480E275838E75501C942D1C2D0CB" );
    var_4 = getanimlength( level.scr_anim["_encstr_8C660669BA83974D"]["_encstr_9D020D3C95C00E83E88E3AF3B13323"] );
    wait( var_4 );

    foreach ( var_6 in self.actors )
        var_6 delete();

    self.actors = undefined;
}

spawnexfilpilotactors( var_0, var_1, var_2 )
{
    var_3 = [];
    var_3[var_3.size] = exfil_spawn_anim_model( "_encstr_8C660669BA83974D", "_encstr_ABEB13D8F2FAA7480E275838E75501C942D1C2D0CB", "_encstr_B2951770972CB0FDC2379BB00A0BD378870B31A063FD6BCF4A" );
    var_3[var_3.size] = exfil_spawn_anim_model( "_encstr_AD7408F94DE8D0A9527B", "_encstr_ABEB13D8F2FAA7480E275838E75501C942D1C2D0CB", "_encstr_B2951770972CB0FDC2379BB00A0BD378870B31A063FD6BCF4A" );

    foreach ( var_5 in var_3 )
        var_5.infil = self;

    return var_3;
}

exfil_spawn_anim_model( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
    var_5 setmodel( var_2 );

    if ( isdefined( var_3 ) )
    {
        var_6 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
        var_6 setmodel( var_3 );
        var_6 linkto( var_5, "_encstr_BAEC0968474B3BE3CA7F05", ( 0, 0, 0 ), ( 0, 0, 0 ) );
        var_5.head = var_6;
        var_5 thread scripts\engine\utility::delete_on_death( var_6 );
    }

    if ( isdefined( var_4 ) )
    {
        var_7 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", ( 0, 0, 0 ) );
        var_7 setmodel( var_4 );
        var_7 linkto( var_5, "_encstr_B207064DEBECEAB9", ( 0, 0, 0 ), ( 0, 0, 0 ) );
        var_5 thread scripts\engine\utility::delete_on_death( var_7 );
        var_5.weapon = var_7;
    }

    var_5.animname = var_0;
    var_5 scripts\common\anim::setanimtree();

    if ( isdefined( var_1 ) )
    {
        thread scripts\engine\utility::delete_on_death( var_5 );
        var_5 linkto( self, var_1, ( 0, 0, 0 ), ( 0, 0, 0 ) );
    }

    return var_5;
}

bugoutontimeout( var_0 )
{
    level scripts\engine\utility::waittill_any_two( "_encstr_AAE5185D0BF997359738EAF2A8D36D3F7160A7D12921073F8D18", "_encstr_8AA51618B3AFEBB03F2778F80EBF184B598A38285A433388" );
    scripts\mp\objidpoolmanager::returnobjectiveid( self.exfilgoalent.exfilobjid );
    thread forcelinkgoaltriggerwatcher( var_0 );
    var_0 thread exfilleavesequence( var_0.origin );
}

forcelinkgoaltriggerwatcher( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self notify( "_encstr_B6450EFBA2505CB7FF6AD87793125213" );
    self endon( "_encstr_B6450EFBA2505CB7FF6AD87793125213" );

    for (;;)
    {
        self waittill( "_encstr_8B5C081B58E0B7A213E6", var_1 );

        if ( var_1.team == self.exfilgoalent.team && !istrue( var_1.extracted ) )
        {
            var_1 thread playeranimlinktochopper( var_0 );
            var_0.exfilspace--;

            if ( var_0.exfilspace <= 0 )
                break;
        }
    }
}

exfilusetriggerused( var_0, var_1, var_2 )
{
    if ( !isdefined( self.exfilspace ) )
        self.exfilspace = 6;

    if ( self.exfilspace > 0 )
    {
        playerlinktochopper( var_0, self, self.exfilspace );
        thread disableotherseats( var_0, var_1, var_2 );
        self.exfilspace--;
    }
    else
    {
        thread exfilleavesequence();
        scripts\mp\objidpoolmanager::returnobjectiveid( self.extractzone.exfilgoalent.exfilobjid );
    }
}

waitforsquadthenleave( var_0 )
{
    var_1 = level.teamdata[var_0.team]["_encstr_8875080E3685E52B93B9"];

    foreach ( var_3 in var_1 )
    {
        if ( var_3 != var_0 )
        {
            var_3 thread scripts\mp\utility\print::tutorialprint( "_encstr_BD5B1ED96A89EBBC376F09712F07F4A9B1DDA455F3215F64C78F29297B70AD4D", 10 );
            continue;
        }

        var_3 thread scripts\mp\utility\print::tutorialprint( "_encstr_98CC24C5BF2708EE4DA187AF392496204368DE0C88E1512D37699BD7D13F59C8C7C852756075", 10 );
    }

    wait 10;
    thread exfilleavesequence( undefined, 1 );
}

disableotherseats( var_0, var_1, var_2 )
{
    foreach ( var_4 in self.interactiontriggers )
        var_4 disableplayeruse( var_0 );

    if ( isdefined( var_2 ) )
        var_0 thread enableexitprompt( var_1, self, var_2 );
}

enableexitprompt( var_0, var_1, var_2 )
{
    var_3 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self.origin );
    var_3 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_3 linkto( self );
    var_3 sethintstring( &"_encstr_8AA71B5931FDA9D4730CE07D2F179D0B9B69D189A809770C27606FFD2A" );
    var_3 setcursorhint( "_encstr_939A0CEC70DBF521459F5B47F73D" );
    var_3 sethintdisplayrange( 200 );
    var_3 sethintdisplayfov( 90 );
    var_3 setuserange( 200 );
    var_3 setusefov( 360 );
    var_3 sethintonobstruction( "_encstr_BECC05FC5321BA" );
    var_3 setuseholdduration( "_encstr_93370F8CAE27588ED27BB9FADC0DDB4EA3" );
    var_3 thread exfil_hopoff_think( var_1, self, var_0, var_2 );
    var_1.exitinteract = var_3;
}

exfil_hopoff_think( var_0, var_1, var_2, var_3 )
{
    makechopperseatplayerusable( var_1 );

    for (;;)
    {
        self waittill( "_encstr_8B5C081B58E0B7A213E6", var_1 );
        self makeunusable();
        var_1 stopanimscriptsceneevent();
        var_0 scripts\mp\anim::anim_player_solo( var_1, var_1.player_rig, "_encstr_BD341750BB4201C5D2C9A5339F6A290EB477C028E7ED7AB30B", "_encstr_ABEB13D8F2FAA7480E275838E75501C942D1C2D0CB" );
        var_1.player_rig unlink();
        var_1 unlink();
        var_3 makechopperseatteamusable( var_0.team );

        foreach ( var_5 in var_0.interactiontriggers )
            var_5 enableplayeruse( var_1 );

        var_0 notify( "_encstr_B78209C5982017FE69B0D2" );
        self delete();
    }
}

playerlinktochopper( var_0, var_1, var_2 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0.extracted = 1;
    var_0.spawnprotection = 1;
    var_0 scripts\mp\lightarmor::setlightarmorvalue( var_0, 1000, undefined, 0 );
    var_0 thread scripts\mp\hud_message::showsplash( "_encstr_BC9A16B730B02CB2A37581075BBDEAE47E38674FC8498B3B" );

    while ( !var_0 isonground() )
        waitframe();

    var_0 allowmovement( 0 );
    var_0 playerlinkto( var_1, "_encstr_B4F20E2D4E62AF0369CF60D85387792D" + var_2, 1.0, 180, -180, 180, 180, 0 );
}

playeranimlinktochopper( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AD571162494313EDC369036B80199FFB3950EB" );
    self endon( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );

    if ( !isdefined( var_1 ) )
    {
        for ( var_2 = 0; var_2 < var_0.passengers.size; var_2++ )
        {
            if ( var_0.passengers[var_2] == var_0.extractzone )
            {
                var_0.passengers[var_2] = self;
                var_1 = var_2;
            }
        }

        var_0 thread disableotherseats( self );
    }

    thread scripts\mp\infilexfil\infilexfil::infil_player_rig( "_encstr_B96B06ABDDA76860" + var_1, "_encstr_9BC813A0B775E3D91265C55631FA13ABDDD7D0309A" );
    self.player_rig linkto( var_0, "_encstr_ABEB13D8F2FAA7480E275838E75501C942D1C2D0CB", ( 0, 0, 0 ), ( 0, 0, 0 ) );

    switch ( var_1 )
    {
        case 0:
            self lerpviewangleclamp( 1, 0.25, 0.25, 35, 180, 90, 45 );
            break;
        case 1:
            self lerpviewangleclamp( 1, 0.25, 0.25, 180, 35, 90, 45 );
            break;
        case 4:
        case 2:
            self lerpviewangleclamp( 1, 0.25, 0.25, 75, 135, 90, 45 );
            break;
        case 5:
        case 3:
            self lerpviewangleclamp( 1, 0.25, 0.25, 135, 45, 90, 45 );
            break;
        default:
            self lerpviewangleclamp( 1, 0.25, 0.25, 45, 45, 45, 45 );
            break;
    }

    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self.extracted = 1;
    self.spawnprotection = 1;
    scripts\mp\lightarmor::setlightarmorvalue( self, 1000, undefined, 0 );
    rideloop( var_0 );
}

rideloop( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AD571162494313EDC369036B80199FFB3950EB" );
    self endon( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
    var_0 endon( "_encstr_B2A8075DB9C6BDB032" );

    while ( isdefined( var_0 ) )
        var_0 scripts\mp\anim::anim_player_solo( self, self.player_rig, "_encstr_9BC21236269CB09D7BF52B3CCCA51BF58DB7DEC1", "_encstr_ABEB13D8F2FAA7480E275838E75501C942D1C2D0CB" );
}

exfilleavesequence( var_0, var_1 )
{
    if ( isdefined( self.exitinteract ) )
        self.exitinteract makeunusable();

    thread _encstr_95D52C67B0E3D9B351060D95EFBF9A99A838F3D7C0F91B8E559E698FD3E1032131D8E73798105043A3B63D07BEF7::littlebirdleave();
    playannouncerbattlechatter( self.team, "_encstr_9F5F26F5B30343DE47D881AA28B153F39916717AC50E63E76B20EA82708F4E871186C9E568B1ABA8", 10 );
    thread doexfilsplashforpassengers();

    if ( isdefined( level.onexfilfinishedcallback ) )
        self [[ level.onexfilfinishedcallback ]]( var_0 );

    if ( isdefined( var_1 ) )
        waitthenendgame( self.team );
}

waitthenendgame( var_0 )
{
    wait 5;
    thread scripts\mp\gamelogic::endgame( var_0, game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_B22214F6314DAC361DB4D9B27D1BDB6BE0639547B291"] );
}

doexfilsplashforpassengers()
{
    wait 1;

    for ( var_0 = 0; var_0 < self.passengers.size; var_0++ )
    {
        if ( self.passengers[var_0] != self.extractzone )
            self.passengers[var_0] thread scripts\mp\hud_message::showsplash( "_encstr_BC9A16B730B02CB2A37581075BBDEAE47E38674FC8498B3B" );
    }
}

init_useprompt_interactions( var_0 )
{
    self.interactiontriggers = [];
    var_1 = self gettagorigin( "_encstr_AFCC0F6DE9F1AFC1AA837BE7A82A1D1DA2" );
    var_2 = self gettagorigin( "_encstr_B3CC0F7917E23818C17AC31925AFF8E6CF" );
    var_3 = self gettagorigin( "_encstr_A9CC0FD1859DBE38C26EE6569B3B2B9CCC" );
    var_4 = self gettagorigin( "_encstr_BACC0FC0E707B6B94292FE8DAD5AEB5B3C" );
    var_5 = self gettagorigin( "_encstr_BDCC0F610FFA2010F942CB012DA7E0EEB7" );
    var_6 = self gettagorigin( "_encstr_B9CC0F982AE7FF4BCF23EEED06EFD16D1B" );
    create_exfil_interaction( var_1, &"_encstr_B28B1A6A14CB21E91322BE8AF4D7D18A51EBF472D71A12A78205A829", 0, var_0 );
    create_exfil_interaction( var_2, &"_encstr_B28B1A6A14CB21E91322BE8AF4D7D18A51EBF472D71A12A78205A829", 2, var_0 );
    create_exfil_interaction( var_3, &"_encstr_B28B1A6A14CB21E91322BE8AF4D7D18A51EBF472D71A12A78205A829", 4, var_0 );
    create_exfil_interaction( var_4, &"_encstr_B28B1A6A14CB21E91322BE8AF4D7D18A51EBF472D71A12A78205A829", 1, var_0 );
    create_exfil_interaction( var_5, &"_encstr_B28B1A6A14CB21E91322BE8AF4D7D18A51EBF472D71A12A78205A829", 3, var_0 );
    create_exfil_interaction( var_6, &"_encstr_B28B1A6A14CB21E91322BE8AF4D7D18A51EBF472D71A12A78205A829", 5, var_0 );
}

create_exfil_interaction( var_0, var_1, var_2, var_3 )
{
    var_4 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0 );
    var_4 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_4 linkto( self );
    var_4 sethintstring( var_1 );
    var_4 setcursorhint( "_encstr_98110C0B790BBF87AE11E9F1A8F5" );
    var_4 sethintdisplayrange( 200 );
    var_4 sethintdisplayfov( 90 );
    var_4 setuserange( 72 );
    var_4 setusefov( 90 );
    var_4 sethintonobstruction( "_encstr_BECC05FC5321BA" );
    var_4 setuseholdduration( "_encstr_93370F8CAE27588ED27BB9FADC0DDB4EA3" );
    var_4 thread exfil_use_think( self, var_2, var_3 );
    self.interactiontriggers[self.interactiontriggers.size] = var_4;
}

exfil_use_think( var_0, var_1, var_2 )
{
    if ( isdefined( var_2 ) )
        makechopperseatplayerusable( var_2 );
    else
        makechopperseatteamusable( var_0.team );

    for (;;)
    {
        self waittill( "_encstr_8B5C081B58E0B7A213E6", var_2 );
        self makeunusable();
        var_0 exfilusetriggerused( var_2, var_1, self );
    }
}

makechopperseatteamusable( var_0 )
{
    self makeusable();
    thread _updatechopperseatteamusable( var_0 );
}

makechopperseatplayerusable( var_0 )
{
    self makeusable();
    thread _updatechopperseatplayerusable( var_0 );
}

_updatechopperseatteamusable( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        foreach ( var_2 in level.players )
        {
            if ( var_2.team == var_0 )
            {
                self showtoplayer( var_2 );
                self enableplayeruse( var_2 );
                continue;
            }

            self disableplayeruse( var_2 );
            self hidefromplayer( var_2 );
        }

        level waittill( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
    }
}

_updatechopperseatplayerusable( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        foreach ( var_2 in level.players )
        {
            if ( var_2 == var_0 )
            {
                self showtoplayer( var_2 );
                self enableplayeruse( var_2 );
                continue;
            }

            self disableplayeruse( var_2 );
            self hidefromplayer( var_2 );
        }

        level waittill( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
    }
}

playannouncerbattlechatter( var_0, var_1, var_2 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_3 = "_encstr_BAE405ABF74834";
    var_4 = "_encstr_B26908191EF56B1CB0D7" + var_3 + "_encstr_984C028E" + var_1 + "_encstr_984C028E" + var_2;

    if ( soundexists( var_4 ) )
    {
        foreach ( var_6 in level.players )
        {
            if ( var_6.team == var_0 )
                var_6 queuedialogforplayer( var_4, var_1, 2 );
        }
    }
}

votimeendingsoon()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level waittill( "_encstr_A95F17D62C8E360DF52BB9464B73D9D7D956272FBE37BD7B9B" );
    playannouncerbattlechatter( game["_encstr_941C0A6AF345075ED05BEAD3"], "_encstr_A6822BD06B73D2EE0BAB89AC032B93C5F58E13A3A4A9C94F226692AA98681FCA50260FFF8114DEB0DF6E0B6B22", 10 );
}

commander_play_sound_func( var_0, var_1, var_2 )
{
    foreach ( var_4 in self.infil.players )
        self playsoundtoplayer( var_0, var_4 );
}

script_model_exfil_anims()
{

}
