// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    if ( getdvar( "_encstr_9E700851BEE33DF1B547" ) == "_encstr_8A510E519897A1332E4A3898E243F5B9" )
        return;

    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    var_0[0] = scripts\mp\utility\game::getgametype();
    scripts\mp\gameobjects::main( var_0 );

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( scripts\mp\utility\game::getgametype(), 0, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 600 );
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 75 );
        scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
        scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
        scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
    }

    updategametypedvars();
    level.teambased = 1;
    level.onstartgametype = ::onstartgametype;
    level.getspawnpoint = ::getspawnpoint;
    level.onnormaldeath = ::onnormaldeath;
    level.modeonspawnplayer = ::onspawnplayer;

    if ( getdvarint( "_encstr_BE420C6EC64EF5437B8ECCB77B47", 0 ) != 0 )
        level.onplayerkilled = ::_id_12040;

    game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_8A110DB3B0DACAA32F0756F54723B5";

    if ( getdvarint( "_encstr_B8020A9E9AA69A6292517AA0" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_891904A1D8BE" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];
    else if ( getdvarint( "_encstr_93570B93F4A9629272A825B426" ) )
        game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"] = "_encstr_889708C9D0E7EBE819D9" + game["_encstr_B8DA073D799798C7C7"]["_encstr_B1F9099AC15967EB30E16D"];

    game["_encstr_B8DA073D799798C7C7"]["_encstr_A1B206E238A5E3F5"] = "_encstr_8C660A4DDA8F8B4D1FD0716D";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_9E240C10CE33016D6AEA39B0F244"] = "_encstr_8C660A4DDA8F8B4D1FD0716D";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B3420C3D576AC3C8736F09906BB2"] = "_encstr_8C660A4DDA8F8B4D1FD0716D";
    level.testtdmanywhere = getdvarint( "_encstr_B929106E8D93AFD146B505CD2FBB1AB2932B", 0 );
    level.tdmanywhere_dropheight = getdvarfloat( "_encstr_82A51C4312A339A3B18D75C00B47C8B513D320256A8852A98B797B97205D", 1000 );
    level.tdmanywhere_perpenoffset = getdvarfloat( "_encstr_B9A51EFF287B677B89F11ECDE387F2E5C3B0D77BE0938052C5809DC74477FABC", 2048 );
    level.tdmanywhere_distoffset = getdvarfloat( "_encstr_94761CE6C627FA4719B650CDBCEE43569CB2AF324B6E3AEBF633336E95D1", 4092 );

    if ( istrue( level.testtdmanywhere ) )
        scripts\cp_mp\parachute::initparachutedvars();

    if ( scripts\mp\utility\game::matchmakinggame() )
        level._id_132FE = ::_id_132FE;
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_B8AF11CFC7C6098FF8A331C4F9A8A6F313431F", 0 );
    scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
    setdynamicdvar( "_encstr_A2EB1067B0E3EFC37B8611D2EE3F3A978938", 0 );
}

onstartgametype()
{
    setclientnamemode( "_encstr_95900C2EDBD01F99D6B1DFEB878D" );

    if ( !isdefined( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] ) )
        game["_encstr_A6D60EE09BF413B9945185CB4797C583"] = 0;

    if ( game["_encstr_A6D60EE09BF413B9945185CB4797C583"] )
    {
        var_0 = game["_encstr_941C0A6AF345075ED05BEAD3"];
        var_1 = game["_encstr_95A70AA81FEE295D3A2F56DE"];
        game["_encstr_941C0A6AF345075ED05BEAD3"] = var_1;
        game["_encstr_95A70AA81FEE295D3A2F56DE"] = var_0;
    }

    foreach ( var_3 in level.teamnamelist )
    {
        scripts\mp\utility\game::setobjectivetext( var_3, &"_encstr_B1660F0D95899DE0E55B9BAF1730E9D111" );

        if ( level.splitscreen )
            scripts\mp\utility\game::setobjectivescoretext( var_3, &"_encstr_B1660F0D95899DE0E55B9BAF1730E9D111" );
        else
            scripts\mp\utility\game::setobjectivescoretext( var_3, &"_encstr_BA01157920948365435134856386AFD3CA99E191683A4B" );

        scripts\mp\utility\game::setobjectivehinttext( var_3, &"_encstr_BC1A14CFE1BCBDC8A9A39B47B677410107A14B5FF917" );
    }

    if ( isdefined( level.totalapacheresponses ) )
        [[ level.totalapacheresponses ]]();
    else
        initspawns();

    _encstr_A1E429F852FABB63A30BE831E0264973E59A7820FB57C7D0C312C7BDC457F247CA3358C872EF3D38BF3BDE::inittankspawns();

    if ( getdvarint( "_encstr_BE420C6EC64EF5437B8ECCB77B47", 0 ) != 0 )
        thread _id_11D09();
}

updategametypedvars()
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
}

initspawns()
{
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );

    if ( isdefined( scripts\cp_mp\utility\game_utility::getlocaleid() ) )
        scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_88380746E174F1D36C", "_encstr_A8E80F2F633A9549FE2228CDCB8CA0C052" );
    else
        scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_AA1608C17786F13312D3", "_encstr_A8E80F2F633A9549FE2228CDCB8CA0C052" );

    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    scripts\mp\spawnlogic::addstartspawnpoints( "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    scripts\mp\spawnlogic::addspawnpoints( game["_encstr_941C0A6AF345075ED05BEAD3"], "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    scripts\mp\spawnlogic::addspawnpoints( game["_encstr_95A70AA81FEE295D3A2F56DE"], "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    var_0 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
    var_1 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_89F7184A933073BFC00FCBB00B684597470A8213DEFE8B361071" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_9303101723E2CE585F5E839B464B688D6B97", var_0 );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", var_1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_B1090D98F3211171B757B62F41F7F8" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_B1090D98F3211171B757B62F41F7F8" );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997", 1, 1 );
    var_2 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_B1090D98F3211171B757B62F41F7F8" );
    var_3 = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_80E817B60EBEA3C8DAD737070BDD73FA9B2B1B7BB991C23997" );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_930E073E8FC00DDF69", var_2 );
    scripts\mp\spawnlogic::registerspawnset( "_encstr_A30C093385361B4CB06C6D", var_3 );

    if ( istrue( level.testtdmanywhere ) )
    {
        var_4 = getdvarfloat( "_encstr_87E1180B51063F5B688B190E9BC8641FAE0941F279D02B57B089", randomfloatrange( -4096, 4096 ) );
        var_5 = getdvarfloat( "_encstr_B2E118584FB25651F2F507A8C8FB51D91ACFB120BF768B3BFB90", randomfloatrange( -4096, 4096 ) );
        var_6 = getdvarfloat( "_encstr_A3E11806B19B012DA4CDC67337077B8253DD56BB8790EBD91551", randomfloatrange( 0, 512 ) );
        level.mapcenter = ( var_4, var_5, var_6 );
        tdmanywhere_debugshowlocs();
    }
    else
    {
        level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
        setmapcenter( level.mapcenter );
    }
}

getspawnpoint()
{
    var_0 = self.pers["_encstr_89EF05D46BA8FD"];
    var_1 = undefined;

    if ( istrue( level.testtdmanywhere ) )
    {
        var_2 = level.tdmanywherefrontline.anchorrt * randomfloatrange( level.tdmanywhere_perpenoffset * -1.0, level.tdmanywhere_perpenoffset );
        var_3 = undefined;

        if ( var_0 == "_encstr_BA840579D3F7F6" )
            var_3 = level.tdmanywherefrontline.anchordir * level.tdmanywhere_distoffset * -1.0;
        else
            var_3 = level.tdmanywherefrontline.anchordir * level.tdmanywhere_distoffset;

        var_1 = spawnstruct();
        var_1.origin = level.mapcenter + var_2 + var_3 + ( 0, 0, level.tdmanywhere_dropheight );
        var_1.angles = ( 0, 0, 0 );
        var_1.index = 1;
    }
    else if ( scripts\mp\spawnlogic::shoulduseteamstartspawn() )
    {
        if ( var_0 == game["_encstr_941C0A6AF345075ED05BEAD3"] )
        {
            scripts\mp\spawnlogic::activatespawnset( "_encstr_9303101723E2CE585F5E839B464B688D6B97", 1 );
            var_1 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_9303101723E2CE585F5E839B464B688D6B97" );
        }
        else
        {
            scripts\mp\spawnlogic::activatespawnset( "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23", 1 );
            var_1 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_BCE3103F7B31CAABEE0D8876AF80C2370B23" );
        }
    }
    else
    {
        scripts\mp\spawnlogic::activatespawnset( "_encstr_930E073E8FC00DDF69", 1 );
        var_1 = scripts\mp\spawnlogic::getspawnpoint( self, var_0, undefined, "_encstr_A30C093385361B4CB06C6D" );
    }

    return var_1;
}

onspawnplayer()
{
    self setclientomnvar( "_encstr_AD061ACF50F64D32C19E2CE9FEB94A1CDB18EF03F808AC19E9A5305B", 0 );

    if ( !istrue( level.testtdmanywhere ) )
        return;

    self setplayerangles( vectortoangles( level.mapcenter - self.origin ) );
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::oncommonnormaldeath( var_0, var_1, var_2, var_3, var_4, var_5 );
}

ontimelimit()
{
    var_0 = scripts\mp\gamescore::gethighestscoringteam();

    if ( game["_encstr_A96D0726D4272B4372"] == "_encstr_AA6D09DBD92B93E8D2D695" )
        var_0 = "_encstr_A1AB087390A396A22BC5";
    else if ( "_encstr_8A190423A45D" )
        var_0 = "_encstr_AA6D09DBD92B93E8D2D695";

    thread scripts\mp\gamelogic::endgame( var_0, game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_A40B13A3B4AD56AFD896B5D28EF593AC0BC6A15632"] );
}

tdmanywhere_debugshowlocs()
{
    thread scripts\mp\utility\debug::drawsphere( level.mapcenter, 128, 100, ( 0, 1, 0 ) );

    if ( !isdefined( level.tdmanywherefrontline ) )
        waitframe();

    var_0 = level.tdmanywherefrontline.anchordir * level.tdmanywhere_distoffset;
    var_1 = level.tdmanywherefrontline.anchorrt * level.tdmanywhere_perpenoffset;
    thread scripts\mp\utility\debug::drawline( level.mapcenter, level.mapcenter + var_0, 1000, ( 1, 0, 0 ) );
    thread scripts\mp\utility\debug::drawline( level.mapcenter, level.mapcenter - var_0, 1000, ( 1, 0, 0 ) );
    thread scripts\mp\utility\debug::drawline( level.mapcenter + var_0, level.mapcenter + var_0 + var_1, 1000, ( 0, 0, 1 ) );
    thread scripts\mp\utility\debug::drawline( level.mapcenter + var_0, level.mapcenter + var_0 - var_1, 1000, ( 0, 0, 1 ) );
    thread scripts\mp\utility\debug::drawline( level.mapcenter - var_0, level.mapcenter - var_0 + var_1, 1000, ( 0, 0, 1 ) );
    thread scripts\mp\utility\debug::drawline( level.mapcenter - var_0, level.mapcenter - var_0 - var_1, 1000, ( 0, 0, 1 ) );
}

_id_11D09()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level.outlinedplayers = [];
    level.spawn_player_vehicle = 0;
    var_0 = 0;
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    for (;;)
    {
        foreach ( var_2 in level.players )
        {
            if ( !isdefined( var_2.spawn_race_dogtags ) )
            {
                var_2.spawn_queue_think = 0;
                var_2.spawn_race_dogtags = var_2.origin;
                var_2.armorbox_used = var_2.origin;
            }

            var_2.spawn_queue_think = var_2.spawn_queue_think + distancesquared( var_2.spawn_race_dogtags, var_2.origin );
            var_2.spawn_race_dogtags = var_2.origin;
        }

        var_0 = var_0 + level.framedurationseconds;

        if ( var_0 > 3.0 )
        {
            if ( level.spawn_player_vehicle >= 2 )
            {
                level.spawn_player_vehicle = 0;

                foreach ( var_2 in level.players )
                {
                    if ( !isdefined( var_2.armorbox_used ) )
                        var_2.armorbox_used = var_2.origin;

                    var_2.playeriscinematiclayeron = distancesquared( var_2.armorbox_used, var_2.origin ) < 4225;
                    var_2.armorbox_used = var_2.origin;
                }
            }

            foreach ( var_2 in level.players )
            {
                var_7 = var_2 getentitynumber();
                var_8 = var_2.pers["_encstr_89EF05D46BA8FD"];

                if ( var_8 == "_encstr_BC850785638DA59537" )
                    var_9 = "_encstr_BA840579D3F7F6";
                else
                    var_9 = "_encstr_BC850785638DA59537";

                if ( isalive( var_2 ) && ( istrue( var_2.playeriscinematiclayeron ) || var_2.spawn_queue_think < 4225 && !istrue( var_2.spawn_real_letter ) ) )
                {
                    var_2.playeriscinematiclayeron = 0;

                    if ( !isdefined( level.outlinedplayers[var_7] ) )
                    {
                        level.outlinedplayers[var_7] = var_2;
                        var_2.outlineidfriend = scripts\mp\utility\outline::outlineenableforteam( var_2, var_8, "_encstr_8CA117D5B5F9D271D008578B40C9355B8143514D9E7B2A8759", "_encstr_B9760D6356B356D8FAB96CC9A507A3" );
                        var_2.outlineidenemy = scripts\mp\utility\outline::outlineenableforteam( var_2, var_9, "_encstr_BD9614CA9305F31C389B070EB750274BADA841E379D5", "_encstr_B9760D6356B356D8FAB96CC9A507A3" );
                        var_2 scripts\mp\utility\outline::_hudoutlineviewmodelenable( "_encstr_872E1B50979C204B0E3A5752638DB806B0ABCF570B0B01A5826AC2346B", 0 );
                    }
                }
                else
                {
                    if ( isalive( var_2 ) )
                        var_2.spawn_real_letter = 0;

                    var_2.playeriscinematiclayeron = 0;

                    if ( isdefined( level.outlinedplayers[var_7] ) )
                    {
                        scripts\mp\utility\outline::outlinedisable( var_2.outlineidfriend, var_2 );
                        scripts\mp\utility\outline::outlinedisable( var_2.outlineidenemy, var_2 );
                        var_2 scripts\mp\utility\outline::_hudoutlineviewmodeldisable();
                        var_2.outlineidfriend = undefined;
                        var_2.outlineidenemy = undefined;
                        level.outlinedplayers[var_7] = undefined;
                    }
                }

                var_2.spawn_queue_think = 0;
            }

            var_0 = 0;
        }

        level.spawn_player_vehicle++;
        waitframe();
    }
}

_id_12040( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    var_10 = self getentitynumber();

    if ( isdefined( level.outlinedplayers[var_10] ) )
    {
        scripts\mp\utility\outline::outlinedisable( self.outlineidfriend, self );
        scripts\mp\utility\outline::outlinedisable( self.outlineidenemy, self );
        self.outlineidfriend = undefined;
        self.outlineidenemy = undefined;
        level.outlinedplayers[var_10] = undefined;
    }

    self.spawn_real_letter = 1;
}

_id_132FE()
{
    var_0 = int( game["_encstr_B4040B6BBF898046C247E5C3DF"]["_encstr_BA840579D3F7F6"] );
    var_1 = int( game["_encstr_B4040B6BBF898046C247E5C3DF"]["_encstr_BC850785638DA59537"] );
    var_2 = var_0 - var_1;
    return var_2 < 10;
}
