// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    maintacopsinit();
    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();
    maintacopspostinit();
    level.startedfromtacops = 0;
    level.onstartgametype = ::onstartgametype;
}

maintacops()
{
    maintacopsinit();
    maintacopspostinit();
    level.startedfromtacops = 1;
    onstartgametype();
}

maintacopsinit()
{
    level.tacopssublevel = "_encstr_A3D408FB1A2803C0918C";
    level.currentmode = "_encstr_A3D408FB1A2803C0918C";
    setomnvar( "_encstr_8FDF13201A5979B917FF1097CBBFA3337E22783072", level.currentmode );
}

maintacopspostinit()
{
    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( "_encstr_A3D408FB1A2803C0918C", 0, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( "_encstr_A3D408FB1A2803C0918C", 10 );
        scripts\mp\utility\game::registerscorelimitdvar( "_encstr_A3D408FB1A2803C0918C", 85 );
        scripts\mp\utility\game::registerroundlimitdvar( "_encstr_A3D408FB1A2803C0918C", 1 );
        scripts\mp\utility\game::registerwinlimitdvar( "_encstr_A3D408FB1A2803C0918C", 1 );
        scripts\mp\utility\game::registernumlivesdvar( "_encstr_A3D408FB1A2803C0918C", 0 );
        scripts\mp\utility\game::registerhalftimedvar( "_encstr_A3D408FB1A2803C0918C", 0 );
        scripts\mp\utility\game::registerdogtagsenableddvar( "_encstr_A3D408FB1A2803C0918C", 0 );
    }

    updategametypedvars();
    setuphudelements();
    level.resetscoreonroundstart = 1;
    level.spawnedhostagecount = 0;
    _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::init();
    level.teambased = 1;
    level.onplayerconnect = ::onplayerconnect;
    level.onnormaldeath = ::onnormaldeath;
    level.modeonspawnplayer = ::onspawnplayer;
    level.onsuicidedeath = ::onsuicidedeath;
    level.ontimelimit = ::ontimelimit;
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchrulesdata();
    setdynamicdvar( "_encstr_A456155B708DB1B3B0F8383B05D95786D37042A1981BF7", getmatchrulesdata( "_encstr_9BE00A27E2318303E9FB431A", "_encstr_95BD09FA9318CBBBC90BA2" ) );
    setdynamicdvar( "_encstr_A9491540EA425F6B57AFC3467C8FF6ED6EA208F1629B53", getmatchrulesdata( "_encstr_9BE00A27E2318303E9FB431A", "_encstr_98CF090E27452AF2890827" ) );
    setdynamicdvar( "_encstr_87031C0B16DB5F344F0151C37CD28F8EA0C3748BB12339ABD8B91582C1C9", getmatchrulesdata( "_encstr_9BE00A27E2318303E9FB431A", "_encstr_A8511031C2E6B66885C18EAB93592A4BDAAC" ) );
    setdynamicdvar( "_encstr_80021A73C790D1DBB8FE9A13A3843F1570A719CA5BD864E35350826B", getmatchrulesdata( "_encstr_9BE00A27E2318303E9FB431A", "_encstr_94630E134AA721CD56159C64E1A04B44" ) );
    setdynamicdvar( "_encstr_BC1C163FE8BBA7BBDFA814CA25E7C1226128C773F050C5F3", getmatchrulesdata( "_encstr_9BE00A27E2318303E9FB431A", "_encstr_95EB0EB5CA3B58120BDC6D12BDCD5737" ) );
    setdynamicdvar( "_encstr_A31B15035AA3C8C0850781AF34EFD12B97C2396B42771D", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "_encstr_A3D408FB1A2803C0918C", 0 );
    setdynamicdvar( "_encstr_B248148FE74BC0D017A988E38BC7518FE36F3B2F9342", 0 );
}

seticonnames()
{
    level.waypointcolors["_encstr_80D819EBB123637DE06DCC9F0FD8C23B4D4B42D17BF5D7B53053C2"] = "_encstr_9BA4080D39CFFB5AB7C1";
    level.waypointbgtype["_encstr_80D819EBB123637DE06DCC9F0FD8C23B4D4B42D17BF5D7B53053C2"] = 1;
    level.waypointcolors["_encstr_A6120B6DDE8E1A7DAC73B2B6CB"] = "_encstr_80BF06CA78A2226B";
    level.waypointbgtype["_encstr_A6120B6DDE8E1A7DAC73B2B6CB"] = 1;
    level.icontarget = "_encstr_8B511ABC625E72604B453B5F92162A9BB3EDBC226CB1E30913BF9D18";
    level.iconneutral = "_encstr_B4730DA4C86902D740B84F733899AC";
    level.iconcapture = "_encstr_A6120B6DDE8E1A7DAC73B2B6CB";
    level.icondefend = "_encstr_875E0E5B98A38BF1ED88825A7031F507";
    level.iconcontested = "_encstr_A8C21D4F27339FD0D92D332ED4B970DDFBB7CBF5EBB9EE08E68319A3FB6538";
    level.icontaking = "_encstr_B74218983278C9C0975605E824DF08A3E5FA61B03A970DBBB74E";
    level.iconlosing = "_encstr_AF471AF7D743B078433DDD811891222DAAC0E0851C8E126F4A8FD888";
    level.iconbombcapture = "_encstr_8B3610DD58E538DE9673D1AFA3854ED9CAE8";
    level.iconbombdefend = "_encstr_944B10F7CF52BBADA31823A97083A7A7E825";
    level.iconrecover = "_encstr_80D819EBB123637DE06DCC9F0FD8C23B4D4B42D17BF5D7B53053C2";
    level.iconescort = "_encstr_BE761097FFEB47F8E1151B76FFC3A070F333";
    level.icondefendhvt = "_encstr_A3EA16549117FB27A4E2A8E95A7FFD91F33CC84EE74F6009";
    level.iconkill = "_encstr_AAEE1CDD58BC07BDB4B91DEB8D2CC1E8D53959AFD65AC6C6D7E4EDBAE619";
}

onstartgametype()
{
    createzones();
    seticonnames();
    scripts\mp\tac_ops\hostage_utility::hostagesysteminit();
    setdvar( "_encstr_A13D0B01FC9B272F2568A94191", 0.75 );
    level.zoneduration = 120;
    level.hostagestates = [];
    level.hostagecarrystates = [];
    level.debughostagegame = 1;
    createhvt();
    level.extractionlocent = getent( "_encstr_8AB0111ACE1D2A0FA393B0D88ED27BCD98F6C6", "_encstr_B8CE0BE43FC317DF690862BA48" );
    level.hostagecheckpointent = [];
    level.hostagecheckpointent[0] = scripts\engine\utility::getstructarray( "_encstr_88DA13842847E3C94198C71FC0FA901A2B300BF1AF", "_encstr_B8CE0BE43FC317DF690862BA48" );
    level.hostagecheckpointent[1] = scripts\engine\utility::getstructarray( "_encstr_80DA131A702673FE907BE7B70B18C25743C853D173", "_encstr_B8CE0BE43FC317DF690862BA48" );
    level.hostagecheckpointent[2] = scripts\engine\utility::getstructarray( "_encstr_B2DA1318E2DF350BDF65471F898050701F4A13664F", "_encstr_B8CE0BE43FC317DF690862BA48" );
    thread createhvtextractionsite();
    level.hostagehidespots = [];
    level.hostagehidespots[0] = level.hvtlocent;
    level.hostageexitpoints = [];
    level.hostageexitpoints[0] = level.objectives[0];
    scripts\mp\tac_ops\hostage_utility::spawnallhostages();
    level.hostages[0].outlineid = scripts\mp\utility\outline::outlineenableforteam( level.hostages[0].body, level.hostages[0].team, "_encstr_BCBD15F0DB9349B823C50898D7536139FB72F908B36E95", "_encstr_A34214771A396A17A9730F01D2B902A85E0B7810C8AA" );
    setdvar( "_encstr_A13D0B01FC9B272F2568A94191", 0.75 );
    level.zoneduration = 120;
    level.hostagestates = [];
    level.hostagecarrystates = [];
    level.debughostagegame = 1;
    level.objectives[0] scripts\mp\gameobjects::setkeyobject( level.hostages[0] );
    level.fixedlzs = [];
    level.fixedlzs[0] = level.objectives[0];
    initializefixedlzs();
    level thread watchpushtriggers();

    if ( !istrue( level.startedfromtacops ) )
    {
        var_0[0] = "_encstr_9318045AFDDD";
        scripts\mp\gameobjects::main( var_0 );
        _encstr_88C021DB28B338B3692366357B200F71BBBD50D7B75DF315B376BB01D8D77386F49017::commoninit();
        activatespawns();
    }

    var_1 = scripts\mp\utility\game::gettimelimit();
    level.extratime = 0;
    scripts\mp\utility\dvars::setoverridewatchdvar( "_encstr_AA250A1D7CF2EB9071A740A0", 6 );
    level.tacopssubmodetimeron = 1;
}

setusablebyteam( var_0 )
{
    foreach ( var_2 in level.players )
    {
        if ( var_2.team != var_0 )
        {
            self disableplayeruse( var_2 );
            continue;
        }

        self enableplayeruse( var_2 );
    }
}

updategametypedvars()
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::updatecommongametypedvars();
    level.banktime = scripts\mp\utility\dvars::dvarfloatvalue( "_encstr_95BD09FA9318CBBBC90BA2", 2, 0, 10 );
    level.bankrate = scripts\mp\utility\dvars::dvarintvalue( "_encstr_98CF090E27452AF2890827", 1, 1, 10 );
    level.bankcapturetime = scripts\mp\utility\dvars::dvarintvalue( "_encstr_A8511031C2E6B66885C18EAB93592A4BDAAC", 0, 0, 10 );
    level.megabanklimit = scripts\mp\utility\dvars::dvarintvalue( "_encstr_94630E134AA721CD56159C64E1A04B44", 5, 5, 15 );
    level.megabankbonus = scripts\mp\utility\dvars::dvarintvalue( "_encstr_95EB0EB5CA3B58120BDC6D12BDCD5737", 150, 0, 750 );
}

setuphudelements()
{
    level.iconenemyextract3d = "_encstr_BE5717EE1697C1DEA537E8D72B1EE8E458C61DFAACDC59DAE5";
    level.iconenemyextract2d = "_encstr_BE5717EE1697C1DEA537E8D72B1EE8E458C61DFAACDC59DAE5";
    level.iconfriendlyextract3d = "_encstr_A44A1AEE0B2F837BA573D1AF591E47C9586CD1AF99E4D2B2CDC8B197";
    level.iconfriendlyextract2d = "_encstr_A44A1AEE0B2F837BA573D1AF591E47C9586CD1AF99E4D2B2CDC8B197";
    level.iconfriendlyzone3d = "_encstr_8C301A34F1779B47C44208498BDB13314F96B4B84EF360ABEDCAC070";
    level.iconfriendlyzone2d = "_encstr_8C301A34F1779B47C44208498BDB13314F96B4B84EF360ABEDCAC070";
}

updateextracticons()
{
    scripts\mp\gameobjects::setobjectivestatusicons( level.iconfriendlyextract2d );
}

onspawnplayer()
{
    if ( isdefined( self.tagscarried ) )
        self setclientomnvar( "_encstr_B2730E373370AAAA98CDDF693BA0C7A3", self.tagscarried );

    scripts\mp\playerlogic::incrementalivecount( self.team );
    self.hostagecarried = undefined;
    scripts\mp\tac_ops\roles_utility::kitspawn();
}

onplayerconnect( var_0 )
{
    var_0.isscoring = 0;
    var_0 thread monitorjointeam();
}

monitorjointeam()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    for (;;)
    {
        self waittill( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
        var_0 = 0;

        if ( self.team == "_encstr_BC850785638DA59537" )
            var_0 = 1;
        else if ( self.team == "_encstr_BA840579D3F7F6" )
            var_0 = 2;

        self setclientomnvar( "_encstr_A2460F57D2FAE80B6CED8337F5A39516B5", var_0 );

        if ( !isdefined( level.startedfromtacops ) )
        {
            scripts\mp\supers::clearsuper();
            scripts\mp\tac_ops\roles_utility::latejointeamkitobjective();
        }
    }
}

createzones()
{
    var_0 = scripts\engine\utility::getstructarray( "_encstr_B1591760D2FAC101AF5D90F5288B2BB3A6CB61784A552B1E0F", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_1 = scripts\engine\utility::getstructarray( "_encstr_8A5917E0358350478A97B7DBFB6316302B4B8E3A5DF68010F0", "_encstr_B8CE0BE43FC317DF690862BA48" );
    level.fixedlzs = scripts\engine\utility::array_combine( var_0, var_1 );
    level.objectives = [];
}

zone_ondisableobjective()
{
    scripts\mp\gameobjects::disableobject();
    scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
}

initspawns()
{
    var_0 = level.tacopsspawns;
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_B469173B2311DD90982A73E9D96BA09F4BF3E7ABCB4A2B98BB", 1 );
    scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_A13D1511D8D7236FAC8B60F0210209D9DF7EB09F38F70B", 1 );
    var_0.to_hstg_spawns = [];
    var_0.to_hstg_spawns["_encstr_BC850785638DA59537"] = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_B469173B2311DD90982A73E9D96BA09F4BF3E7ABCB4A2B98BB" );
    var_0.to_hstg_spawns["_encstr_BA840579D3F7F6"] = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_A13D1511D8D7236FAC8B60F0210209D9DF7EB09F38F70B" );

    if ( var_0.to_hstg_spawns["_encstr_BC850785638DA59537"].size <= 0 )
    {
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BC850785638DA59537", "_encstr_829D16F22B88B3B248E53417B7D83EAF48668A6A307B772A" );
        var_0.to_hstg_spawns["_encstr_BC850785638DA59537"] = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_829D16F22B88B3B248E53417B7D83EAF48668A6A307B772A" );
    }

    if ( var_0.to_hstg_spawns["_encstr_BA840579D3F7F6"].size <= 0 )
    {
        scripts\mp\spawnlogic::addspawnpoints( "_encstr_BA840579D3F7F6", "_encstr_AD3B14F1383781B58DBAC09143624B7B1BEF0FF3893F" );
        var_0.to_hstg_spawns["_encstr_BA840579D3F7F6"] = scripts\mp\spawnlogic::getspawnpointarray( "_encstr_AD3B14F1383781B58DBAC09143624B7B1BEF0FF3893F" );
    }
}

getspawnpoint()
{
    var_0 = level.tacopsspawns;
    var_1 = self.pers["_encstr_89EF05D46BA8FD"];
    var_2 = scripts\mp\tac_ops_map::filterspawnpoints( var_0.to_hstg_spawns[var_1] );
    var_3 = undefined;
    return var_3;
}

activatespawns()
{
    scripts\mp\spawnlogic::setactivespawnlogic( "_encstr_A919048A11A9" );
    scripts\mp\tac_ops_map::setactivemapconfig( "_encstr_A3D408FB1A2803C0918C", "_encstr_BC850785638DA59537" );
    scripts\mp\tac_ops_map::setactivemapconfig( "_encstr_A3D408FB1A2803C0918C", "_encstr_BA840579D3F7F6" );
    level.getspawnpoint = ::getspawnpoint;
}

ontimelimit()
{
    endhostagegame( "_encstr_BC850785638DA59537" );
}

endhostagegame( var_0 )
{
    level.extratime = undefined;
    level notify( "_encstr_A89B0DAACCAB3BE3887127278001CB" );

    foreach ( var_2 in level.hostages )
    {
        var_2 scripts\mp\tac_ops\hostage_utility::removeminimapicons();

        if ( isdefined( var_2.useobj ) )
            var_2.useobj delete();

        var_2.body delete();
        var_2.head delete();
        var_2 delete();
    }

    level.hostages = [];

    foreach ( var_5 in level.activeextractions )
    {
        var_5 cleanuplz( 0 );
        var_5 _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::deactivatezone();
    }

    if ( isdefined( level.onphaseend ) )
        [[ level.onphaseend ]]( var_0 );

    scripts\mp\gamescore::_setteamscore( var_0, 1, 0 );
    thread scripts\mp\gamelogic::endgame( var_0, game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_B22214F6314DAC361DB4D9B27D1BDB6BE0639547B291"] );
}

onsuicidedeath( var_0 )
{
    if ( isdefined( var_0.hostagecarried ) )
        scripts\mp\tac_ops\hostage_utility::drophostage( var_0, var_0.hostagecarried, var_0.origin );
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4 )
{
    _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::oncommonnormaldeath( var_0, var_1, var_2, var_3, var_4 );

    if ( isdefined( var_0.hostagecarried ) )
        scripts\mp\tac_ops\hostage_utility::drophostage( var_0, var_0.hostagecarried, var_0.origin );

    if ( !isdefined( var_0.switching_teams ) )
        var_0 scripts\mp\playerlogic::decrementalivecount( var_0.team );
}

delayedhostagespawn( var_0, var_1, var_2 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_9BD2140B771EE3C1A039595A73781FBAE08BB7EBC943" );
    wait( var_0 );
    scripts\mp\tac_ops\hostage_utility::spawnrandomhostages( var_1, var_2 );
}

hostagecheckscoring()
{
    for ( var_0 = 0; var_0 < level.activeextractions.size; var_0++ )
    {
        var_1 = level.activeextractions[var_0];

        if ( distancesquared( self.origin, var_1.origin ) < 14400 )
        {
            iprintlnbold( "_encstr_A1DC1A678919FD7B2795C1091FFF6763A91980F1819135B7250D4854" );
            scripts\mp\tac_ops\hostage_utility::scorehostage( var_1.team, 3 );
            return 1;
        }
    }

    return 0;
}

initializefixedlzs()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_A89B0DAACCAB3BE3887127278001CB" );
    level.extractionteam = "_encstr_BC850785638DA59537";

    for ( var_0 = 0; var_0 < level.fixedlzs.size; var_0++ )
        level.inactiveextractions[var_0] = level.fixedlzs[var_0];

    thread waitprematchdone();
}

initializedynamiclzs()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_A89B0DAACCAB3BE3887127278001CB" );
    level.extractionteam = "_encstr_BA840579D3F7F6";

    for ( var_0 = 0; var_0 < 2; var_0++ )
    {
        level.inactiveextractions[var_0] = level.objective[var_0];
        level.inactiveextractions[var_0] updateextracticons();
        level.inactiveextractions[var_0] scripts\mp\gameobjects::setvisibleteam( "_encstr_AABA05236DC831" );
    }

    thread waitprematchdone();
}

waitprematchdone()
{
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
}

createhostagelz( var_0, var_1 )
{
    var_2 = level.inactiveextractions.size;
    var_3 = level.inactiveextractions[var_2 - 1];
    var_3.marker = var_0;
    level.inactiveextractions[var_2 - 1] = undefined;
    var_4 = level.activeextractions.size;
    level.activeextractions[var_4] = var_3;
    level.activeextractors[var_4] = self;
    var_5 = int( gettime() + 119000 );

    if ( istrue( var_1 ) )
        makelzextractionvisuals( var_3 );
}

makelzextractionvisuals( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = level.extractionpos;

    var_0.origin = var_1;

    if ( isdefined( var_0.trigger ) )
        var_0.trigger.origin = var_1;

    var_0.curorigin = var_1;
    var_0 scripts\mp\gameobjects::requestid( 1, 1 );
    var_0 updateextracticons();
    var_0 _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::activatezone();
    var_0.active = 1;
    var_0 scripts\mp\gameobjects::setvisibleteam( "_encstr_B9FC095F8BCCFF02D92B43" );
    var_0.scriptable = _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::setupscriptablevisuals( var_1, var_0 );
    var_0 _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::updateflagstate( var_0.team, 0 );

    if ( isdefined( var_0.team ) )
        updateservericons( var_0.team, 0 );

    level notify( "_encstr_8FBD0BBA97A04F464F80533BE4" );
    scripts\mp\utility\sound::playsoundonplayers( "_encstr_957514DA83BE6DB4B1C6E6E89CAC85D6BE9C58912C4E" );
    var_2 = spawnfx( level._effect["_encstr_9BB20F6B38F9D1CF5042AF9B6B3973E669"], var_1 );

    if ( isdefined( var_2 ) )
        triggerfx( var_2 );

    var_0.fxtoplay = var_2;
}

spawnextractchopper( var_0, var_1 )
{
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A89B0DAACCAB3BE3887127278001CB" );
    wait( var_1 );
    var_2 = level.extractionpos;
    var_3 = ( 0, 0, 0 );
    var_4 = 24000;
    var_5 = scripts\cp_mp\utility\killstreak_utility::removeextracthelipad();
    var_6 = var_5.origin[2];
    var_7 = getexplodedistance( var_6 );
    var_8 = 4000;
    var_9 = "_encstr_BD86075D3FD0DF78B5";
    var_10 = scripts\cp_mp\killstreaks\airstrike::getflightpath( var_2, var_3, var_4, var_5, var_6, var_8, var_7, var_9 );
    var_11 = fakestreakinfo();
    var_12 = scripts\mp\killstreaks\jackal::beginjackal( 0, var_10["_encstr_9C8C0B532531D30BB170921A50"], var_2, var_11, var_0 );
    return var_12;
}

fakestreakinfo()
{
    var_0 = spawnstruct();
    var_0.available = 1;
    var_0.firednotify = "_encstr_8C600EDECC9934C2E623EB665AC9CA46";
    var_0.isgimme = 1;
    var_0.kid = 5;
    var_0.lifeid = 0;
    var_0.madeavailabletime = gettime();
    var_0.scriptuseagetype = "_encstr_A35616901050D58F9B9DD153539DF933DB09C32DEA50A76A";
    var_0.streakname = "_encstr_BD86075D3FD0DF78B5";
    var_0.streaksetupinfo = undefined;
    var_0.variantid = -1;
    var_0.weaponname = "_encstr_B3B1167A9BD66F3DD7AC1762A90717F51E2FB6E377CFC80B";
    var_0.objweapon = getcompleteweaponname( var_0.weaponname );
    return var_0;
}

getexplodedistance( var_0 )
{
    var_1 = 850;
    var_2 = 1500;
    var_3 = var_1 / var_0;
    var_4 = var_3 * var_2;
    return var_4;
}

waitlzextractarrival( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_A89B0DAACCAB3BE3887127278001CB" );
    self endon( "_encstr_B43715271EF38AC6F75B5727105859B5565BDA2F438DB9" );
    thread extractvehicledeathwatcher();
    wait 119;

    foreach ( var_2 in level.jackals )
    {
        if ( !isdefined( var_2.lz ) || !isdefined( var_2.lz.marker ) )
            continue;

        if ( self.marker == var_2.lz.marker )
            var_2 notify( "_encstr_A820110F5813D2B26F9561A470379B891928DF" );
    }

    if ( level.objectives[0].ownerteam == "_encstr_BC850785638DA59537" )
    {
        scripts\mp\gamescore::_setteamscore( "_encstr_BC850785638DA59537", 1, 0 );
        thread scripts\mp\gamelogic::endgame( "_encstr_BC850785638DA59537", game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_B22214F6314DAC361DB4D9B27D1BDB6BE0639547B291"] );
    }
    else
    {
        scripts\mp\gamescore::_setteamscore( "_encstr_BA840579D3F7F6", 1, 0 );
        thread scripts\mp\gamelogic::endgame( "_encstr_BA840579D3F7F6", game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_B22214F6314DAC361DB4D9B27D1BDB6BE0639547B291"] );
    }
}

extractvehicledeathwatcher()
{
    level endon( "_encstr_A89B0DAACCAB3BE3887127278001CB" );
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A820110F5813D2B26F9561A470379B891928DF" );
    self waittill( "_encstr_B43715271EF38AC6F75B5727105859B5565BDA2F438DB9" );
    cleanuplz( 0 );
}

cleanuplz( var_0 )
{
    if ( var_0 )
        checkhostagescoring();

    cleanuplzvisuals();
    level.inactiveextractions[level.inactiveextractions.size] = self;
    level.activeextractors = scripts\engine\utility::array_remove_index( level.activeextractors, 0 );
    level.activeextractions = scripts\engine\utility::array_remove_index( level.activeextractions, 0 );
}

cleanuplzvisuals()
{
    if ( isdefined( self.scriptable ) )
    {
        _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::updateflagstate( "_encstr_9819045FD029", 0 );
        self.scriptable delete();
    }

    if ( isdefined( self.fxtoplay ) )
        self.fxtoplay delete();

    if ( isdefined( self.marker ) && isdefined( self.marker.visual ) )
    {
        self.marker.visual delete();
        scripts\mp\gameobjects::allowuse( "_encstr_AABA05236DC831" );
        scripts\mp\gameobjects::releaseid();
    }

    self.active = 0;
    updateservericons( "_encstr_82270B4FDE3795FAB9D05A993A", 0 );
    _encstr_B2A527687F82C009A3024079DA4E7F89F51FD8A09B2D5B7FFA6EEA6877B3AB9024CB7890578E91BF02::deactivatezone();
    self.active = 1;
    self.lastactivatetime = gettime();
}

checkhostagescoring()
{
    var_0 = [];
    var_1 = "_encstr_AABA05236DC831";

    foreach ( var_3 in level.hostages )
    {
        if ( var_3 hostagecheckscoring() )
            var_0[var_0.size] = var_3;

        var_1 = var_3.team;
    }

    level.hostages = scripts\engine\utility::array_remove_array( level.hostages, var_0 );
    tryhostagerespawn( var_1 );
}

tryhostagerespawn( var_0 )
{
    if ( level.hostages.size == 0 )
    {
        level notify( "_encstr_9BD2140B771EE3C1A039595A73781FBAE08BB7EBC943" );
        scripts\mp\tac_ops\hostage_utility::spawnrandomhostages( 2, var_0 );
        waitframe();
        var_1 = _encstr_88C021DB28B338B3692366357B200F71BBBD50D7B75DF315B376BB01D8D77386F49017::gettacopstimelimitms() / 1000;
        thread delayedhostagespawn( var_1 * 0.2, 2 );
        thread delayedhostagespawn( var_1 * 0.4, 2 );
        thread delayedhostagespawn( var_1 * 0.6, 2 );
    }
}

handlehostmigration( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_B9A10DD145CDB008EA27752B0782ED" );
    level endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level waittill( "_encstr_A33F15D07BB93AEBB6B43B9C2C472D7BDC7D4C59765ADC" );
    var_1 = scripts\mp\hostmigration::waittillhostmigrationdone();

    if ( var_1 > 0 )
        return;

    return;
}

updateservericons( var_0, var_1 )
{
    var_2 = -1;

    if ( var_1 )
        var_2 = -2;
    else
    {
        switch ( var_0 )
        {
            case "_encstr_BA840579D3F7F6":
            case "_encstr_BC850785638DA59537":
                var_3 = thread getownerteamplayer( var_0 );

                if ( isdefined( var_3 ) )
                    var_2 = var_3 getentitynumber();

                break;
            case "_encstr_B451162D673A6D1989367BD09B71B893C2FBEFA9E7422760":
                var_2 = -3;
                break;
            case "_encstr_82270B4FDE3795FAB9D05A993A":
            default:
                break;
        }
    }
}

getownerteamplayer( var_0 )
{
    var_1 = undefined;

    foreach ( var_3 in level.players )
    {
        if ( var_3.team == var_0 )
        {
            var_1 = var_3;
            break;
        }
    }

    return var_1;
}

setupextractioncallouts( var_0 )
{
    var_1 = 1;
    level.extractionteam = var_0;

    if ( !isdefined( level.extractionteam ) )
        var_1 = 2;
    else if ( level.extractionteam == "_encstr_BC850785638DA59537" )
        var_1 = 0;

    foreach ( var_3 in level.players )
    {
        if ( isdefined( var_1 ) )
            var_3 setclientomnvar( "_encstr_947811FB6040EB7BBF47792CC1B7881C29DFBB", var_1 );
    }
}

trycreateextractpoint( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        var_2 = 1;

    if ( level.activeextractions.size < 2 )
    {
        level.extractionpos = var_0;
        createhostagelz( var_1, var_2 );
        self iprintlnbold( "_encstr_B26626511E479358B11DB4B7CD40B1F6C1A32B390246B23836B7BCB24661101AB71B4610DEAE3A48" );
        return 1;
    }
    else
    {
        self iprintlnbold( "_encstr_B8242F2956E25D56B98E0422599B4BCAC8105A0150D8C60836DB0E3A2B27374085364EACB046CB04CA7304E47B573AB284" );
        return 0;
    }
}

getextractiontimeconst()
{
    return 120;
}

createhvt()
{
    var_0 = getent( "_encstr_BD370C99930BE6D03983A8E4ADE3", "_encstr_B8CE0BE43FC317DF690862BA48" );
    level.hvtlocent = var_0;
}

createhvtextractionsite()
{
    var_0 = getent( "_encstr_8AB0111ACE1D2A0FA393B0D88ED27BCD98F6C6", "_encstr_B8CE0BE43FC317DF690862BA48" );
    level.objectives = [];
    level.objectives[0] = var_0;
    var_1 = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::setupobjective( level.objectives[0] );
    scripts\engine\utility::delaythread( 3.0, ::delayset );
    var_1.onuse = ::hostagedompoint_onuse;
    level.objectives[0] = var_1;
    level.flagcapturetime = 0.1;
    level.flagneutralization = 0;
    waitframe();
    var_1 scripts\mp\gameobjects::setownerteam( "_encstr_9BA4080D39CFFB5AB7C1" );
    var_1 scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
    var_1 scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );
    var_1 scripts\mp\gameobjects::cancontestclaim( 1 );
    var_1 scripts\mp\gameobjects::setobjectivestatusicons( level.icondefend, level.iconfriendlyextract3d );
}

delayset()
{
    level.objectives[0] scripts\mp\gameobjects::setownerteam( "_encstr_BA840579D3F7F6" );
    level.objectives[0] scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );
    level.objectives[0] _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::updateflagstate( "_encstr_BA840579D3F7F6", 0 );
    level.objectives[0] scripts\mp\gameobjects::setobjectivestatusicons( level.icondefend, level.iconfriendlyextract3d );
}

watchpushtriggers()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_9B0E143498D77359D16837931849032A37253DAF7511" );
    var_0 = getentarray( "_encstr_9E03158EDEF50D37E8ECAF1CD5DCD0D7E84ED2763B569C", "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( !isdefined( var_0 ) || var_0.size <= 0 )
        return;

    var_1 = [];

    foreach ( var_3 in var_0 )
    {
        var_4 = int( var_3.script_noteworthy );
        var_1[var_4] = var_3;
    }

    var_6 = 0;

    for (;;)
    {
        wait 1.0;
        var_7 = var_1[var_6 + 1];

        if ( isdefined( var_7 ) )
        {
            foreach ( var_9 in level.hostages )
            {
                if ( var_9 istouching( var_7 ) )
                {
                    var_6++;
                    var_10 = "_encstr_9BC4093AF6D734DCA376FA" + var_6;
                    scripts\mp\tac_ops_map::setactivemapconfig( var_10, "_encstr_BC850785638DA59537" );
                    scripts\mp\tac_ops_map::setactivemapconfig( var_10, "_encstr_BA840579D3F7F6" );
                    level notify( "_encstr_8B58161ADB373A2CB359F56E0EC2DD37DCFA07EA9B0D2BC8" );
                }
            }
        }
    }
}

hostagedompoint_onuse( var_0 )
{
    _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onuse( var_0 );

    if ( var_0.team == "_encstr_BC850785638DA59537" )
    {
        if ( isdefined( var_0.hostagecarried ) )
        {
            var_1 = scripts\mp\tac_ops\hostage_utility::drophostage( var_0, var_0.hostagecarried, var_0.origin );
            var_1.trackedobject scripts\mp\gameobjects::deletetrackedobject();
            var_1 makeunusable();
            var_1.useobj unlink();
            var_1.useobj makeunusable();
        }

        var_0 thread trycreateextractpoint( var_0.origin, undefined, 0 );
        var_2 = _encstr_88C021DB28B338B3692366357B200F71BBBD50D7B75DF315B376BB01D8D77386F49017::gettacopstimeremainingms();

        if ( var_2 < getextractiontimeconst() * 1000 )
            _encstr_88C021DB28B338B3692366357B200F71BBBD50D7B75DF315B376BB01D8D77386F49017::extendtacopstimelimitms( getextractiontimeconst() * 1000 - var_2 );
        else
            _encstr_88C021DB28B338B3692366357B200F71BBBD50D7B75DF315B376BB01D8D77386F49017::reducetacopstimelimitms( var_2 - getextractiontimeconst() * 1000 );

        level.objectives[0].onuse = _encstr_9E7F211898C28383CB8760E558BF27EB18E74BB010797A7D47017210081F958AA85B5F::dompoint_onuse;
        level.objectives[0] scripts\mp\gameobjects::setkeyobject( undefined );
        level.objectives[0] scripts\mp\gameobjects::setvisibleteam( "_encstr_BC19047780DA" );
        level.objectives[0] scripts\mp\gameobjects::allowuse( "_encstr_80BF06CA78A2226B" );

        if ( scripts\mp\utility\teams::getteamdata( "_encstr_BC850785638DA59537", "_encstr_97580AC41D811F767F3072CB" ) )
        {
            level.topplayers = scripts\engine\utility::array_sort_with_func( scripts\mp\utility\teams::getteamdata( "_encstr_BC850785638DA59537", "_encstr_8875080E3685E52B93B9" ), ::compare_player_score );
            var_3 = level.topplayers[0] spawnextractchopper( self, 0 );
            var_4 = scripts\mp\utility\teams::getteamdata( "_encstr_BA840579D3F7F6", "_encstr_8875080E3685E52B93B9" );
            var_5 = var_4.size;
            var_5 = max( var_5, 1 );
            var_6 = 1666.67;
            var_3.health = int( var_5 * var_6 );
            var_3.maxhealth = var_3.health;
            level.objectives[0] thread copterdeathwatcher();
            var_3 thread copterhealthwatcher();
            setomnvar( "_encstr_BEF81E33B101707F4732B3DB590325E8A52FB19B2135B8338FDB69E3A2EF68E0", 1.0 );
            thread holdoutphase();
        }
    }
}

holdouttext()
{
    wait 7;
    _encstr_88C021DB28B338B3692366357B200F71BBBD50D7B75DF315B376BB01D8D77386F49017::teamprint( &"_encstr_93B027C76346D8B78975021AED81F59138133BD6F1E0C161697C8811A4092C2890A917FB4BB83807BA", &"_encstr_BCA6274FEBDE402F01CD8A8265797D19B08B434E496849E95154B2993C81549068219F73C32740BF32" );
}

copterhealthwatcher()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        self waittill( "_encstr_B8BE07320B5B16ECAC", var_0 );
        setomnvar( "_encstr_BEF81E33B101707F4732B3DB590325E8A52FB19B2135B8338FDB69E3A2EF68E0", self.health / self.maxhealth );
    }
}

copterdeathwatcher()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self waittill( "_encstr_B43715271EF38AC6F75B5727105859B5565BDA2F438DB9" );
    _encstr_88C021DB28B338B3692366357B200F71BBBD50D7B75DF315B376BB01D8D77386F49017::pausetacopstimer();
    wait 5;
    endhostagegame( "_encstr_BA840579D3F7F6" );
}

holdoutphase()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_B43715271EF38AC6F75B5727105859B5565BDA2F438DB9" );
    level notify( "_encstr_BAFA1CD0ED9B1D2CCE2BFA1AF6C6237BAB3A7DC1A1C29BB2BE4C56CEBAB9" );
    thread holdouttext();
    startcopteroutofbounds();
    wait( getextractiontimeconst() - 110.0 );
    scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_BC4317C003BF7039F2197D06FA594198E9B740D2374F08CDEA", "_encstr_BC850785638DA59537" );
    scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_A8F71721903188E75321E1EB8A0708F810DFB7A32023802E97", "_encstr_BA840579D3F7F6" );
    wait 10.0;
    scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_9E791319F0F55B1C13FADBCE367D63D3D7D0B71B8C", "_encstr_BC850785638DA59537" );
    wait 20.0;
    scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_88D51AD550C1F9EB919165EB2A178FF3494A82D771BCC0232382EA4A", "_encstr_BC850785638DA59537" );
    wait 55.0;
    scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_81B51A4D7BFEF0A1980F33675EA80B3081631A51781C6875B8A0D39A", "_encstr_BC850785638DA59537" );
    scripts\mp\tac_ops\radio_utility::queue_dialogue_for_team( "_encstr_AA071D19F0AFB60E137D165CD8B6AFC11A0BDC2B98F58D956E6E47966BB2C4", "_encstr_BA840579D3F7F6" );
}

startcopteroutofbounds()
{
    var_0 = getentarray( "_encstr_A2D9149BE701725F80ABC9CDA3A0978AEE0F170B6936", "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_1 = scripts\mp\utility\teams::getteamdata( "_encstr_BC850785638DA59537", "_encstr_8875080E3685E52B93B9" );

    foreach ( var_3 in var_1 )
    {
        foreach ( var_5 in var_0 )
            var_3 startphaseoob( var_5, "_encstr_B6E00EC1E739835DAB340FE9D5CFB33B" );
    }
}

startphaseoob( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_A89B0DAACCAB3BE3887127278001CB" );
}

compare_player_score( var_0, var_1 )
{
    return var_0.score >= var_1.score;
}
