// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    setup_callbacks();
    setup_bot_koth();
}

setup_callbacks()
{
    level.bot_funcs["_encstr_9B610FCEC26B2B3AF20756BE3A435ADC5B"] = ::deactivate_minigun;
    level.bot_funcs["_encstr_87071FC32A171DC087C77761E1EAC8F0DF529BAB82BF554011D179611A9538A65B"] = ::_id_132E0;
}

setup_bot_koth()
{
    scripts\mp\bots\bots_util::bot_waittill_bots_enabled();
    var_0 = 0;

    foreach ( var_2 in level.objectives )
    {
        var_2 thread _encstr_94EB299B3693B438E8DC79B5C19726F6A39B5E89DB8E9B7D9D586BB2E8F2C1CABE1BDE6B6BDEB917ECB936::monitor_zone_control();
        var_3 = 0;

        if ( istrue( var_2.trigger.trigger_off ) )
        {
            var_2.trigger scripts\engine\utility::trigger_on();
            var_3 = 1;
        }

        var_2.nodes = _encstr_94EB299B3693B438E8DC79B5C19726F6A39B5E89DB8E9B7D9D586BB2E8F2C1CABE1BDE6B6BDEB917ECB936::bot_get_valid_nodes_in_trigger( var_2.trigger );

        if ( var_3 )
            var_2.trigger scripts\engine\utility::trigger_off();
    }

    level.death_info_func = 1;

    if ( !var_0 )
    {
        level.deactivate_battle_station = 1;
        var_5 = level.zone;

        if ( !isdefined( var_5 ) )
            var_5 = scripts\engine\utility::random( level.objectives );

        _encstr_94EB299B3693B438E8DC79B5C19726F6A39B5E89DB8E9B7D9D586BB2E8F2C1CABE1BDE6B6BDEB917ECB936::custom_damageshield( [ var_5 ] );
        level.damagepercentmedium[var_5.trigger getentitynumber()] = 1;
        level.bot_gametype_precaching_done = 1;
        thread custom_damage_handler( var_5 );
    }
}

custom_damage_handler( var_0 )
{
    for ( var_1 = scripts\engine\utility::array_remove( level.objectives, var_0 ); var_1.size > 0; var_1 = scripts\engine\utility::array_remove( var_1, var_2 ) )
    {
        var_2 = undefined;
        var_3 = level.zone;

        if ( isdefined( var_3 ) && scripts\engine\utility::array_contains( var_1, var_3 ) )
            var_2 = var_3;
        else
            var_2 = scripts\engine\utility::random( var_1 );

        _encstr_94EB299B3693B438E8DC79B5C19726F6A39B5E89DB8E9B7D9D586BB2E8F2C1CABE1BDE6B6BDEB917ECB936::custom_damageshield( [ var_2 ] );
        level.damagepercentmedium[var_2.trigger getentitynumber()] = 1;
    }
}

deactivate_minigun()
{
    self notify( "_encstr_B2C30F1AA7D8A92F300312692B9B1F5D88" );
    self endon( "_encstr_B2C30F1AA7D8A92F300312692B9B1F5D88" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    while ( !isdefined( level.bot_gametype_precaching_done ) )
        wait 0.05;

    self botsetflag( "_encstr_97F30B439D23AFBAE3B882FA70", 0 );
    self botsetflag( "_encstr_958D139D93ACE62C9156EBBD98A995C63AD29DACCD", 1 );
    var_0 = undefined;
    var_1 = level.zone;

    for (;;)
    {
        wait 0.05;

        if ( self.health <= 0 )
            continue;

        if ( !isdefined( level.zone ) || !isdefined( level.damagepercentmedium[level.zone.trigger getentitynumber()] ) )
        {
            if ( scripts\mp\bots\bots_util::bot_is_defending() )
                scripts\mp\bots\bots_strategy::bot_defend_stop();

            self.initpayloadpunish = undefined;
            self [[ self.personality_update_function ]]();
            continue;
        }

        if ( var_1 != level.zone )
        {
            var_0 = undefined;
            var_1 = level.zone;
        }

        if ( !istrue( level.zone.trigger.trigger_off ) && isdefined( level.zoneendtime ) && !isdefined( var_0 ) && !level.zonerandomlocationorder && level.deactivate_battle_station )
        {
            var_2 = level.zoneendtime - gettime();

            if ( var_2 > 0 && var_2 < 10000 )
            {
                var_3 = level.zone scripts\mp\gameobjects::getownerteam() == self.team;

                if ( !var_3 )
                {
                    var_4 = level.zone._id_14713.radius * 6;

                    if ( var_2 < 5000 )
                        var_4 = level.zone._id_14713.radius * 3;

                    var_5 = distance( level.zone._id_14713.center, self.origin );

                    if ( var_5 > var_4 )
                        var_0 = deathsdoorsfx();
                }
                else
                {
                    var_6 = scripts\mp\bots\bots_util::bot_get_max_players_on_team( self.team );
                    var_7 = ceil( var_6 / 2 );

                    if ( var_2 < 5000 )
                        var_7 = ceil( var_6 / 3 );

                    var_8 = damagestateref( level.zone );

                    if ( var_8 + 1 > var_7 )
                        var_0 = deathsdoorsfx();
                }
            }
        }

        var_9 = level.zone;

        if ( istrue( var_0 ) )
        {
            var_10 = ( level.prevzoneindex + 1 ) % level.objectives.size;

            if ( var_10 == 0 )
                var_10 = 1;

            var_9 = level.objectives[scripts\engine\utility::string( var_10 )];
        }

        if ( !deactivate_gas_trap_puddles( var_9 ) )
            custom_ground_vehicle_death_func( var_9 );
    }
}

deathsdoorsfx()
{
    if ( level.zonerandomlocationorder )
        return 0;
    else
    {
        var_0 = self botgetdifficultysetting( "_encstr_A4EF0E2713E37768B50FF26CB78E2839" );
        var_1 = 0;

        if ( var_0 == 1 )
            var_1 = 0.1;
        else if ( var_0 == 2 )
            var_1 = 0.5;
        else if ( var_0 == 3 )
            var_1 = 0.8;

        return randomfloat( 1.0 ) < var_1;
    }
}

damagestateref( var_0 )
{
    return dangernotifyplayersinrange( var_0 ).size;
}

dangernotifyplayersinrange( var_0 )
{
    var_1 = [];

    foreach ( var_3 in level.participants )
    {
        if ( var_3 != self && scripts\mp\utility\entity::isteamparticipant( var_3 ) && istestclient( self, var_3 ) )
        {
            if ( var_3 istouching( level.zone.trigger ) )
            {
                if ( !isai( var_3 ) || var_3 deactivate_gas_trap_puddles( var_0 ) )
                    var_1[var_1.size] = var_3;
            }
        }
    }

    return var_1;
}

deactivate_gas_trap_puddles( var_0 )
{
    if ( !scripts\mp\bots\bots_util::bot_is_capturing() )
        return 0;

    return self.initpayloadpunish == var_0;
}

custom_ground_vehicle_death_func( var_0 )
{
    self.initpayloadpunish = var_0;
    var_1["_encstr_A93616CA378EE416CD8D567DC1B72DCD3A6EFAD2CD91591E"] = var_0.entrance_indices;
    var_1["_encstr_8A9715DBEC959C27D246ACEBEDE42D3BA5CDEB73DE91CA"] = var_0.get_wave_targetname;
    scripts\mp\bots\bots_strategy::bot_capture_zone( var_0.trigger.origin, var_0.nodes, var_0.trigger, var_1 );
}

_id_132E0( var_0 )
{
    if ( var_0 )
    {
        var_1 = level.zone scripts\mp\gameobjects::getownerteam();

        if ( var_1 == "_encstr_9BA4080D39CFFB5AB7C1" || var_1 == self.team )
            return 0;
    }

    return scripts\mp\bots\bots_strategy::should_start_cautious_approach_default( var_0 );
}
