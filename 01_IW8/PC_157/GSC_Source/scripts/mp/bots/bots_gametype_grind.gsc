// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    setup_callbacks();
    _encstr_BEDD27B91B27B4E03A3779DA0E97C4B78EE69726EDD1E6D7D9B06BCA1DBCE095BEC6B7E699E2D9B98D::setup_bot_conf();
}

setup_callbacks()
{
    level.bot_funcs["_encstr_9B610FCEC26B2B3AF20756BE3A435ADC5B"] = ::bot_grind_think;
}

bot_grind_think()
{
    self notify( "_encstr_A83210156F9378E092BC2079297C50ABCA97" );
    self endon( "_encstr_A83210156F9378E092BC2079297C50ABCA97" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self.grind_waiting_to_bank = 0;
    self.goal_zone = undefined;
    self.conf_camping_zone = 0;
    self.additional_tactical_logic_func = ::bot_grind_extra_think;

    if ( self botgetdifficultysetting( "_encstr_A4EF0E2713E37768B50FF26CB78E2839" ) > 0 )
        childthread enemy_watcher();

    _encstr_BEDD27B91B27B4E03A3779DA0E97C4B78EE69726EDD1E6D7D9B06BCA1DBCE095BEC6B7E699E2D9B98D::bot_conf_think();
}

bot_grind_extra_think()
{
    if ( !isdefined( self.tag_getting ) )
    {
        if ( self.tagscarried > 0 )
        {
            var_0 = squared( 500 + self.tagscarried * 250 );

            if ( game["_encstr_B4040B6BBF898046C247E5C3DF"][self.team] + self.tagscarried >= level.roundscorelimit )
                var_0 = squared( 5000 );
            else if ( !isdefined( self.enemy ) && !scripts\mp\bots\bots_util::bot_in_combat() )
                var_0 = squared( 1500 + self.tagscarried * 250 );

            var_1 = undefined;

            foreach ( var_3 in level.objectives )
            {
                var_4 = distancesquared( self.origin, var_3.trigger.origin );

                if ( var_4 < var_0 )
                {
                    var_0 = var_4;
                    var_1 = var_3;
                }
            }

            if ( isdefined( var_1 ) )
            {
                var_6 = 1;

                if ( self.grind_waiting_to_bank )
                {
                    if ( isdefined( self.goal_zone ) && self.goal_zone == var_1 )
                        var_6 = 0;
                }

                if ( var_6 )
                {
                    self.grind_waiting_to_bank = 1;
                    self.goal_zone = var_1;
                    self botclearscriptgoal();
                    self notify( "_encstr_A19B13E63A7B0E7DCEB7B4DC76EBA3DBF5A7DE7356" );
                    self notify( "_encstr_B4A2121773487B0E06D8CBC937906F178A78DD1B" );
                    self.conf_camping_zone = 0;
                    scripts\mp\bots\bots_personality::clear_camper_data();
                    scripts\mp\bots\bots_strategy::bot_abort_tactical_goal( "_encstr_94D509B52D36B1EB3A2C9D" );
                    childthread bot_goto_zone( var_1, "_encstr_94C2099887BA24607BE134" );
                }
            }

            if ( self.grind_waiting_to_bank )
            {
                if ( game["_encstr_B4040B6BBF898046C247E5C3DF"][self.team] + self.tagscarried >= level.roundscorelimit )
                    self botsetflag( "_encstr_A81A0D524893C755414348EDB90B01", 1 );
            }
        }
        else if ( self.grind_waiting_to_bank )
        {
            self.grind_waiting_to_bank = 0;
            self.goal_zone = undefined;
            self notify( "_encstr_A19B13E63A7B0E7DCEB7B4DC76EBA3DBF5A7DE7356" );
            self botclearscriptgoal();
        }

        if ( self.personality == "_encstr_BD9207539F80EB7FC5" && !self.conf_camping_tag && !self.grind_waiting_to_bank )
        {
            var_0 = undefined;
            var_1 = undefined;

            foreach ( var_3 in level.objectives )
            {
                var_4 = distancesquared( self.origin, var_3.trigger.origin );

                if ( !isdefined( var_0 ) || var_4 < var_0 )
                {
                    var_0 = var_4;
                    var_1 = var_3;
                }
            }

            if ( isdefined( var_1 ) )
            {
                if ( scripts\mp\bots\bots_personality::should_select_new_ambush_point() )
                {
                    if ( scripts\mp\bots\bots_personality::find_ambush_node( var_1.trigger.origin ) )
                    {
                        self.conf_camping_zone = 1;
                        self notify( "_encstr_A19B13E63A7B0E7DCEB7B4DC76EBA3DBF5A7DE7356" );
                        self.grind_waiting_to_bank = 0;
                        self botclearscriptgoal();
                        childthread bot_camp_zone( var_1, "_encstr_8B900559228717" );
                    }
                    else
                    {
                        self notify( "_encstr_B4A2121773487B0E06D8CBC937906F178A78DD1B" );
                        self.conf_camping_zone = 0;
                        scripts\mp\bots\bots_personality::clear_camper_data();
                    }
                }
            }
            else
                self.conf_camping_zone = 1;
        }
    }
    else
    {
        self notify( "_encstr_A19B13E63A7B0E7DCEB7B4DC76EBA3DBF5A7DE7356" );
        self.grind_waiting_to_bank = 0;
        self.goal_zone = undefined;
        self notify( "_encstr_B4A2121773487B0E06D8CBC937906F178A78DD1B" );
        self.conf_camping_zone = 0;
    }

    return self.grind_waiting_to_bank || self.conf_camping_zone;
}

bot_goto_zone( var_0, var_1 )
{
    self endon( "_encstr_A19B13E63A7B0E7DCEB7B4DC76EBA3DBF5A7DE7356" );

    if ( !isdefined( var_0.calculated_nearest_node ) )
    {
        var_0.nearest_node = getclosestnodeinsight( var_0.trigger.origin );
        var_0.calculated_nearest_node = 1;
    }

    var_2 = var_0.nearest_node;
    self botsetscriptgoal( var_2.origin, 32, var_1 );
    var_3 = scripts\mp\bots\bots_util::bot_waittill_goal_or_fail();
}

bot_camp_zone( var_0, var_1 )
{
    self endon( "_encstr_B4A2121773487B0E06D8CBC937906F178A78DD1B" );
    self botsetscriptgoalnode( self.node_ambushing_from, var_1, self.ambush_yaw );
    var_2 = scripts\mp\bots\bots_util::bot_waittill_goal_or_fail();

    if ( var_2 == "_encstr_AA7205F03A9609" )
    {
        if ( !isdefined( var_0.calculated_nearest_node ) )
        {
            var_0.nearest_node = getclosestnodeinsight( var_0.trigger.origin );
            var_0.calculated_nearest_node = 1;
        }

        var_3 = var_0.nearest_node;

        if ( isdefined( var_3 ) )
        {
            var_4 = findentrances( self.origin );
            var_4 = scripts\engine\utility::array_add( var_4, var_3 );
            childthread scripts\mp\bots\bots_util::bot_watch_nodes( var_4 );
        }
    }
}

enemy_watcher()
{
    self.default_meleechargedist = self botgetdifficultysetting( "_encstr_870A10ADFA1B15884EF0536DE72F49EB9F03" );

    for (;;)
    {
        if ( self botgetdifficultysetting( "_encstr_A4EF0E2713E37768B50FF26CB78E2839" ) < 2 )
            wait 0.5;
        else
            wait 0.2;

        if ( isdefined( self.enemy ) && isplayer( self.enemy ) && isdefined( self.enemy.tagscarried ) && self.enemy.tagscarried >= 3 && self botcanseeentity( self.enemy ) && distance( self.origin, self.enemy.origin ) <= 500 )
        {
            self botsetdifficultysetting( "_encstr_870A10ADFA1B15884EF0536DE72F49EB9F03", 500 );
            self botsetflag( "_encstr_B9230D1CE4ACCC56E4D75BCAD82BB2", 1 );
            continue;
        }

        self botsetdifficultysetting( "_encstr_870A10ADFA1B15884EF0536DE72F49EB9F03", self.default_meleechargedist );
        self botsetflag( "_encstr_B9230D1CE4ACCC56E4D75BCAD82BB2", 0 );
    }
}
