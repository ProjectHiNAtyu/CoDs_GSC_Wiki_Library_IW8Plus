// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

teleportthread( var_0 )
{
    self endon( "_encstr_B6140FE02AA519E973B961668B3BD0E90B" );
    self notify( "_encstr_BAD412556B4831DD58FD4B455B2D5908DE91467D" );
    self endon( "_encstr_BAD412556B4831DD58FD4B455B2D5908DE91467D" );
    var_1 = 5;
    var_2 = ( 0, 0, var_0 / var_1 );

    for ( var_3 = 0; var_3 < var_1; var_3++ )
    {
        self forceteleport( self.origin + var_2 );
        wait 0.05;
    }
}

teleportthreadex( var_0, var_1, var_2, var_3 )
{
    self endon( "_encstr_B6140FE02AA519E973B961668B3BD0E90B" );
    self notify( "_encstr_BAD412556B4831DD58FD4B455B2D5908DE91467D" );
    self endon( "_encstr_BAD412556B4831DD58FD4B455B2D5908DE91467D" );

    if ( var_0 == 0 || var_2 <= 0 )
        return;

    if ( var_1 > 0 )
        wait( var_1 );

    var_4 = ( 0, 0, var_0 / var_2 );

    if ( isdefined( var_3 ) && var_3 < 1.0 )
        self setflaggedanimknoball( "_encstr_81A00DB8D379DBDB2BDA4D57757203", self.traverseanim, self.traverseanimroot, 1, 0.2, var_3 );

    for ( var_5 = 0; var_5 < var_2; var_5++ )
    {
        self forceteleport( self.origin + var_4 );
        wait 0.05;
    }

    if ( isdefined( var_3 ) && var_3 < 1.0 )
        self setflaggedanimknoball( "_encstr_81A00DB8D379DBDB2BDA4D57757203", self.traverseanim, self.traverseanimroot, 1, 0.2, 1.0 );
}

dotraverse( var_0 )
{

}

handletraversenotetracks( var_0 )
{
    if ( var_0 == "_encstr_BEF60F31AA8E607D03F3115EEA37272864" )
        return handletraversedeathnotetrack();
    else if ( var_0 == "_encstr_98C10F8E2758ECCA4EDC56BE0B634B3BDC" )
        return handletraversealignment();
    else if ( var_0 == "_encstr_9EA30E092BF2DCC0822A51EE176A5817" )
        return handletraversedrop();
}

handletraversedeathnotetrack()
{
    if ( isdefined( self.traversedeathanim ) )
    {
        var_0 = self.traversedeathanim[self.traversedeathindex];
        self.deathanim = var_0[randomint( var_0.size )];
        self.traversedeathindex++;
    }
}

handletraversealignment()
{
    self animmode( "_encstr_9598079BED8D1BB4C1" );

    if ( isdefined( self.traverseheight ) && isdefined( self.traversestartnode.traverse_height ) )
    {
        var_0 = self.traversestartnode.traverse_height - self.traversestartz;
        thread teleportthread( var_0 - self.traverseheight );
    }
}

handletraversedrop()
{
    var_0 = self.origin + ( 0, 0, 32 );
    var_1 = physicstrace( var_0, self.origin + ( 0, 0, -512 ) );
    var_2 = distance( var_0, var_1 );
    var_3 = var_2 - 32 - 0.5;
    var_4 = self getanimtime( self.traverseanim );
    var_5 = getmovedelta( self.traverseanim, var_4, 1.0 );
    var_6 = getanimlength( self.traverseanim );
    var_7 = 0 - var_5[2];
    var_8 = var_7 - var_3;

    if ( var_7 < var_3 )
        var_9 = var_7 / var_3;
    else
        var_9 = 1;

    var_10 = ( var_6 - var_4 ) / 3.0;
    var_11 = ceil( var_10 * 20 );
    thread teleportthreadex( var_8, 0, var_11, var_9 );
    thread finishtraversedrop( var_1[2] );
}

finishtraversedrop( var_0 )
{
    self endon( "_encstr_B6140FE02AA519E973B961668B3BD0E90B" );
    var_0 = var_0 + 4.0;

    for (;;)
    {
        if ( self.origin[2] < var_0 )
        {
            self animmode( "_encstr_89D60887EA31EEA7DBEB" );
            break;
        }

        wait 0.05;
    }
}

donothingfunc()
{
    self animmode( "_encstr_A9370EF4B7CDD897EBC186E5CDB46C6E" );
    self waittill( "_encstr_B6140FE02AA519E973B961668B3BD0E90B" );
}

dog_jump_down( var_0, var_1, var_2, var_3 )
{

}

seeker_traversal()
{
    self waittill( "_encstr_B6140FE02AA519E973B961668B3BD0E90B" );
}
