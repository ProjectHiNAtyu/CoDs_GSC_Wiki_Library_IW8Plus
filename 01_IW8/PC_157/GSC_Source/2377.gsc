// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

perkpackage_initperkpackages()
{
    perkpackage_initpersdata();
    thread perkpackage_updateifchanged();
    thread perkpackage_checkifready();
}

perkpackage_checkifready()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A41712F05A531B5C6781D5588DD3E6FF3B22D0F0" );
    var_0 = 0;

    for (;;)
    {
        if ( !self.perkpackagedata.isusing && scripts\mp\supers::issuperready() )
        {
            if ( self.perkpackagedata.istwomode )
            {
                perkpackage_setstate( 1 );

                if ( 1 )
                {
                    self.perkpackagedata.super = "_encstr_BCEB0D5A2B83E55BD897FFD393FE03";
                    scripts\mp\supers::givesuper( self.perkpackagedata.super, 0, 1 );

                    if ( isdefined( level._id_122FF ) )
                        [[ level._id_122FF ]]();
                }
            }

            if ( var_0 && !istrue( self._id_133E7 ) )
                thread scripts\mp\supers::showsuperremindersplash();
        }

        self waittill( "_encstr_AFF20C03FD88D8CAEF6BA29031E8", var_0 );
    }
}

perkpackage_updateifchanged()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A41712F05A531B5C6781D5588DD3E6FF3B22D0F0" );
    var_0 = perkpackage_getfirstfieldupgrade();
    var_1 = perkpackage_getsecondfieldupgrade();
    var_2 = isdefined( self.super );
    var_3 = !isdefined( self.perkpackagedata.firstupgrade ) || self.perkpackagedata.firstupgrade != var_0;
    var_4 = !isdefined( self.perkpackagedata.secondupgrade ) || self.perkpackagedata.secondupgrade != var_1;

    if ( !var_2 || var_3 || var_4 || self.perkpackagedata.forcereset )
    {
        var_5 = scripts\mp\supers::getsuperid( var_0 );
        self setclientomnvar( "_encstr_BE5517EA96F5C1CAC9B5BE1C0BD8D6C2D9CAD79BAEE059E4C4", var_5 );
        var_6 = scripts\mp\supers::getsuperid( var_1 );
        self setclientomnvar( "_encstr_9F5517B5796F1BD38292D1B02A9E8771F71D282EDD7B61057A", var_6 );

        if ( isdefined( scripts\mp\supers::getcurrentsuper() ) )
        {
            if ( self.perkpackagedata.forcereset )
                scripts\mp\supers::setsuperbasepoints( 0 );
            else
            {
                var_7 = scripts\mp\supers::getcurrentsuperpoints();
                var_8 = var_7 - 0;
                var_8 = max( var_8, 0 );
                scripts\mp\supers::setsuperbasepoints( var_8 );
            }
        }

        if ( var_0 == "_encstr_AABA05236DC831" && var_1 == "_encstr_AABA05236DC831" )
        {
            self.perkpackagedata.istwomode = 0;
            perkpackage_setstate( 0 );
            self.perkpackagedata.super = undefined;
            scripts\mp\supers::clearsuper();
        }
        else if ( var_1 == "_encstr_AABA05236DC831" )
        {
            self.perkpackagedata.istwomode = 0;
            perkpackage_setstate( 3 );
            self.perkpackagedata.super = var_0;
            scripts\mp\supers::givesuper( self.perkpackagedata.super, 1, 0 );
        }
        else if ( var_0 == "_encstr_AABA05236DC831" )
        {
            self.perkpackagedata.istwomode = 0;
            perkpackage_setstate( 4 );
            self.perkpackagedata.super = var_1;
            scripts\mp\supers::givesuper( self.perkpackagedata.super, 1, 0 );
        }
        else
        {
            self.perkpackagedata.istwomode = 1;
            perkpackage_setstate( 0 );
            self.perkpackagedata.super = "_encstr_BCEB0D5A2B83E55BD897FFD393FE03";
            scripts\mp\supers::givesuper( self.perkpackagedata.super, 1, 0 );
        }

        if ( scripts\mp\supers::issuperready() && !istrue( self._id_133E7 ) )
            thread scripts\mp\supers::showsuperremindersplash();

        self.perkpackagedata.forcereset = 0;
        self.perkpackagedata.firstupgrade = var_0;
        self.perkpackagedata.secondupgrade = var_1;
    }
}

perkpackage_isreadytoupgrade()
{
    if ( !isdefined( self.perkpackagedata ) )
        return 0;

    if ( self.perkpackagedata.state != 1 )
        return 0;

    return 1;
}

perkpackage_setstate( var_0 )
{
    self setclientomnvar( "_encstr_B67F169311A1F0DDA3D2B65B5ACF8220C775BF1794961815", var_0 );
    self.perkpackagedata.state = var_0;
}

perkpackage_getfirstfieldupgrade()
{
    var_0 = self.loadoutfieldupgrade1;

    if ( isdefined( self._id_1217F ) )
        var_0 = self._id_1217F;

    return var_0;
}

perkpackage_getsecondfieldupgrade()
{
    var_0 = self.loadoutfieldupgrade2;

    if ( isdefined( self._id_12180 ) )
        var_0 = self._id_12180;

    return var_0;
}

perkpackage_initpersdata()
{
    self.perkpackagedata = self.pers["_encstr_B1D310B3EA730231F6CB775BF7DF59DFB342"];

    if ( !isdefined( self.perkpackagedata ) )
    {
        self.perkpackagedata = spawnstruct();
        self.perkpackagedata.state = 0;
        self.perkpackagedata.forcereset = 0;
        self.perkpackagedata.isusing = 0;
        self.perkpackagedata.firstupgrade = undefined;
        self.perkpackagedata.secondupgrade = undefined;
        self.perkpackagedata.super = "_encstr_BCEB0D5A2B83E55BD897FFD393FE03";
        self.perkpackagedata.istwomode = 0;
        self.pers["_encstr_B1D310B3EA730231F6CB775BF7DF59DFB342"] = self.perkpackagedata;

        if ( !isagent( self ) )
            self setclientomnvar( "_encstr_B67F169311A1F0DDA3D2B65B5ACF8220C775BF1794961815", self.perkpackagedata.state );
    }
}

perkpackage_getperkicon()
{
    return "_encstr_A3EF1BDB85631E2B26F278E91B7FD550373A51C7FB4B4627CC7A287872";
}

perkpackage_openselect()
{
    var_0 = perkpackagemenu_canactivatesuper();
    var_1 = perkpackage_isreadytoupgrade();

    if ( !var_0 )
        return 0;
    else if ( !var_1 )
        return 0;
    else
    {
        thread perkpackagemenu_openmenu();
        self notify( "_encstr_89B61538EA2217CF4FB3626F8F6716C38D629143C2FDAF" );
        return 1;
    }
}

perkpackagemenu_openmenu()
{
    scripts\common\utility::allow_killstreaks( 0 );
    scripts\common\utility::allow_offhand_weapons( 0 );
    self notifyonplayercommand( "_encstr_94C818230BEBE47B038018E9243AB58068AB197F786B13BA8A2B", "_encstr_BA5F07B2CDD6F6B6AC" );
    self notifyonplayercommand( "_encstr_ADC818E03DC327924360C27A58931DD7F89D4767CF6B77657502", "_encstr_AD0D0653443BF7B7" );
    thread perkpackagemenu_closeinputthink();
    var_0 = perkpackagemenu_menuthink();
    var_0 = istrue( var_0 );

    if ( isdefined( self ) )
    {
        self notify( "_encstr_B3131902C99E07493F9A7012B2113F23E8C15369705071DAD3908F" );

        if ( isalive( self ) )
        {
            self notifyonplayercommandremove( "_encstr_94C818230BEBE47B038018E9243AB58068AB197F786B13BA8A2B", "_encstr_BA5F07B2CDD6F6B6AC" );
            self notifyonplayercommandremove( "_encstr_ADC818E03DC327924360C27A58931DD7F89D4767CF6B77657502", "_encstr_AD0D0653443BF7B7" );
            var_1 = !var_0;
            scripts\mp\supers::superusefinished( var_1, 1 );
            scripts\common\utility::allow_killstreaks( 1 );
            scripts\common\utility::allow_offhand_weapons( 1 );
        }

        if ( var_0 )
            perkpackage_awardperkpackageupgrade();
        else
            self.perkpackagedata.super = "_encstr_BCEB0D5A2B83E55BD897FFD393FE03";
    }
}

perkpackagemenu_menuthink()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_A41712F05A531B5C6781D5588DD3E6FF3B22D0F0" );
    perkpackage_setstate( 2 );
    wait 0.3;
    var_0 = scripts\engine\utility::_id_143AF( "_encstr_94C818230BEBE47B038018E9243AB58068AB197F786B13BA8A2B", "_encstr_ADC818E03DC327924360C27A58931DD7F89D4767CF6B77657502", "_encstr_94FE165F3F43B75739DF1048A7558CD3EAA3406ED54A4F39", "_encstr_A3750609A5E61883" );
    var_1 = 0;

    if ( var_0 == "_encstr_94C818230BEBE47B038018E9243AB58068AB197F786B13BA8A2B" )
    {
        perkpackage_setstate( 3 );
        var_1 = 1;
    }
    else if ( var_0 == "_encstr_ADC818E03DC327924360C27A58931DD7F89D4767CF6B77657502" )
    {
        perkpackage_setstate( 4 );
        var_1 = 1;
    }
    else
    {
        perkpackage_setstate( 1 );
        var_1 = 0;
        wait 0.3;
    }

    if ( !perkpackagemenu_canactivatesuper() )
        var_1 = 0;

    return var_1;
}

perkpackagemenu_closeinputthink()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_A41712F05A531B5C6781D5588DD3E6FF3B22D0F0" );
    self endon( "_encstr_B3131902C99E07493F9A7012B2113F23E8C15369705071DAD3908F" );

    for (;;)
    {
        if ( !perkpackagemenu_canactivatesuper() )
            self notify( "_encstr_94FE165F3F43B75739DF1048A7558CD3EAA3406ED54A4F39" );

        wait 0.05;
    }
}

perkpackagemenu_canactivatesuper()
{
    if ( self usebuttonpressed() || self attackbuttonpressed() || self adsbuttonpressed() || self meleebuttonpressed() )
        return 0;

    if ( !scripts\common\utility::is_supers_allowed() )
        return 0;

    if ( self isonladder() )
        return 0;

    return 1;
}

perkpackage_awardperkpackageupgrade()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_A41712F05A531B5C6781D5588DD3E6FF3B22D0F0" );
    var_0 = undefined;

    if ( self.perkpackagedata.state == 3 )
        var_0 = perkpackage_getfirstfieldupgrade();
    else if ( self.perkpackagedata.state == 4 )
        var_0 = perkpackage_getsecondfieldupgrade();

    if ( isdefined( var_0 ) )
    {
        if ( isdefined( var_0 ) )
        {
            var_1 = scripts\mp\supers::getcurrentsuper();

            if ( !isdefined( var_1 ) || var_1.staticdata.ref != var_0 )
            {
                self.perkpackagedata.super = var_0;
                scripts\mp\supers::givesuper( self.perkpackagedata.super, 0, 1 );

                if ( 1 )
                {
                    var_2 = perkpackage_forceusesuper();

                    if ( !istrue( var_2 ) )
                    {
                        self notify( "_encstr_9E3019F0CD33D762B370D24A6883E9AB09A3649DD53E0FF379A84B" );
                        return;
                    }
                }
                else
                    thread perkpackagemenu_disableoffhanduse( 0.3 );
            }
        }
    }
}

perkpackage_forceusesuper()
{
    thread perkpackage_waitforsuperfinish();
    var_0 = scripts\mp\supers::getcurrentsuperref();
    var_1 = level.superglobals.staticsuperdata[var_0].weapon;
    var_2 = getcompleteweaponname( var_1 );
    thread perkpackagemenu_disableoffhanduse( 0.3 );
    var_3 = 0;

    if ( "_encstr_80B6119B6DCB1B02FE491F66B9D70AB1BE38D8" != var_1 )
    {
        self giveandfireoffhand( var_2 );
        var_3 = perkpackage_waitforsupercanceled( var_2 );
    }

    if ( istrue( var_3 ) )
        var_4 = 0;
    else
        var_4 = scripts\mp\supers::trysuperusebegin( var_2 );

    if ( !istrue( var_4 ) )
    {
        perkpackage_setstate( 1 );
        self.perkpackagedata.super = "_encstr_BCEB0D5A2B83E55BD897FFD393FE03";
        scripts\mp\supers::givesuper( self.perkpackagedata.super, 0, 1 );
    }

    return var_4;
}

perkpackage_waitforsuperfinish()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self.perkpackagedata.isusing = 1;
    perkpackage_waitforsuperfinishinternal();
    self.perkpackagedata.isusing = 0;
}

perkpackage_waitforsuperfinishinternal()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A41712F05A531B5C6781D5588DD3E6FF3B22D0F0" );
    self endon( "_encstr_9E3019F0CD33D762B370D24A6883E9AB09A3649DD53E0FF379A84B" );
    self waittill( "_encstr_9E01136EEA07AC27BEAEB9597D99D29BD26ED05623" );
}

perkpackage_waitforsupercanceled( var_0 )
{
    self endon( "_encstr_8C600EDECC9934C2E623EB665AC9CA46" );
    var_1 = undefined;
    var_2 = gettime();

    for (;;)
    {
        var_3 = self getheldoffhand();

        if ( isdefined( var_3 ) && var_3 == var_0 )
        {
            var_1 = var_3;
            break;
        }

        var_4 = gettime();

        if ( var_4 - var_2 > 400.0 )
            return 1;

        wait 0.05;
    }

    for (;;)
    {
        var_3 = self getheldoffhand();

        if ( !isdefined( var_3 ) || var_3 != var_1 )
            return 1;

        wait 0.05;
    }
}

perkpackagemenu_disableoffhanduse( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A41712F05A531B5C6781D5588DD3E6FF3B22D0F0" );
    scripts\common\utility::allow_offhand_primary_weapons( 0, "_encstr_A928129996CA1BC8FAABE03B3916912B7D3827ED" );
    scripts\common\utility::allow_offhand_secondary_weapons( 0, "_encstr_A928129996CA1BC8FAABE03B3916912B7D3827ED" );
    wait( var_0 );
    scripts\common\utility::allow_offhand_primary_weapons( 1, "_encstr_A928129996CA1BC8FAABE03B3916912B7D3827ED" );
    scripts\common\utility::allow_offhand_secondary_weapons( 1, "_encstr_A928129996CA1BC8FAABE03B3916912B7D3827ED" );
}

perkpackage_givedebug( var_0 )
{
    level.allowsupers = 1;
    perkpackage_giveimmediate( var_0 );
}

perkpackage_giveimmediate( var_0 )
{
    perkpackage_initpersdata();
    self.perkpackagedata.istwomode = 0;
    self.perkpackagedata.super = var_0;
    scripts\mp\supers::givesuper( self.perkpackagedata.super, 0, 1 );
}

_id_12300( var_0, var_1 )
{
    if ( !isdefined( var_0 ) )
        var_0 = "_encstr_AABA05236DC831";

    if ( !isdefined( var_1 ) )
        var_1 = "_encstr_AABA05236DC831";

    self._id_1217F = var_0;
    self._id_12180 = var_1;
    perkpackage_updateifchanged();
}

_id_12301()
{
    self._id_1217F = undefined;
    self._id_12180 = undefined;
}

perkpackage_reset()
{
    self.perkpackagedata.forcereset = 1;
    perkpackage_updateifchanged();
}
