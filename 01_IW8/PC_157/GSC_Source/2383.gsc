// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_138E7()
{
    level._id_120AD _calloutmarkerping_handleluinotify_acknowledgedcancel::friendlystatusdirty( ::_id_138ED, level );
    level._id_120AE _calloutmarkerping_handleluinotify_acknowledgedcancel::friendlystatusdirty( ::_id_138EE, level );
}

stoppingpower_beginuse()
{
    var_0 = self.lastweaponobj;
    var_1 = isundefinedweapon();

    if ( !scripts\mp\weapons::isnormallastweapon( var_0 ) || scripts\mp\utility\weapon::ismeleeonly( var_0 ) || scripts\mp\utility\weapon::isgamemodeweapon( var_0 ) || scripts\mp\utility\weapon::issinglehitweapon( var_0.basename ) || !_id_138EA( var_0 ) || _id_138E8( var_0 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) ]]( "_encstr_A29E18B0E13F8A0F5F6707121DC62BC5B9017838D127F5D3554D" );

        return 0;
    }

    var_2 = stoppingpower_cancelreload();

    if ( !istrue( var_2 ) )
        return 0;

    if ( self isalternatemode( var_0 ) )
    {
        var_1 = var_0;
        var_0 = var_0 getnoaltweapon();
    }
    else
        var_1 = var_0 getaltweapon();

    var_3 = [];
    var_4 = 0;
    var_5 = 0;

    if ( !nullweapon( var_1 ) )
        var_3[var_3.size] = var_1;

    var_3[var_3.size] = var_0;

    foreach ( var_7 in var_3 )
    {
        var_8 = scripts\mp\utility\weapon::turnexfiltoside( var_7 );

        if ( isnullweapon( var_7, var_0, 0 ) )
        {
            var_9 = scripts\mp\weapons::getammooverride( var_7 );
            var_10 = var_9 * 1;

            if ( var_8 )
                var_10 = var_10 * 2;

            thread stoppingpower_givehcr( self, var_7, var_10 );

            if ( 1 )
            {
                if ( var_8 )
                {
                    var_9 = self getweaponammoclip( var_7, "_encstr_B1AD05C65666E8" ) + self getweaponammoclip( var_7, "_encstr_9353062E718710C9" );
                    var_4 = self getweaponammostock( var_7 );
                    var_11 = var_9 + var_4;
                    var_12 = int( min( _id_138E4( var_7, var_11 ), var_11 + var_10 ) );
                    self setweaponammostock( var_7, var_12 );
                    self setweaponammoclip( var_7, 0, "_encstr_B1AD05C65666E8" );
                    self setweaponammoclip( var_7, 0, "_encstr_9353062E718710C9" );
                }
                else
                {
                    var_9 = self getweaponammoclip( var_7 );
                    var_4 = self getweaponammostock( var_7 );
                    var_11 = var_9 + var_4;
                    var_13 = _id_138E4( var_7, var_11 );
                    var_14 = var_11 + var_10;
                    var_5 = int( var_14 - var_13 );
                    var_15 = int( min( var_13, var_14 ) );

                    if ( var_7.basename == "_encstr_B3BD102DEEE0FAD85BD72326B1D63BBEAD0E" )
                        self setweaponammoclip( var_7, var_9 + var_10 );
                    else
                    {
                        self setweaponammoclip( var_7, 0 );

                        if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
                        {
                            var_16 = var_15 - var_4;
                            _encstr_88D5245E9613FBEB53533FF5BAD6047745CF934308BF634E225309500F27FBCFC3B3E560B3A7::delay_camera_normal( var_7, var_16 );
                        }
                        else
                            self setweaponammostock( var_7, var_15 );
                    }
                }
            }
        }
    }

    thread _id_138F0( var_0, var_4, var_5 );
    return 1;
}

_id_138E4( var_0, var_1 )
{
    var_2 = var_0.maxammo;

    if ( var_1 > var_2 )
        var_2 = var_1;

    return var_2;
}

_id_138EA( var_0 )
{
    if ( !self isalternatemode( var_0 ) )
        return 1;

    var_1 = var_0.underbarrel;
    return scripts\mp\weapons::turretoverridefunc( var_1 );
}

_id_138E8( var_0 )
{
    switch ( var_0.basename )
    {
        case "_encstr_B3BD102DEEE0FAD85BD72326B1D63BBEAD0E":
        case "_encstr_AFBF1B0B23486FCDC12F0CC2D9D1E9689BDE5CFF976D022D59A3D6BFE3":
        case "_encstr_AF0914835B5AA7CF404933567098FC90B02D0AD735CF":
        case "_encstr_9B660D018F3841EE3A23DBEE3639F0":
            return 1;
    }

    return 0;
}

_id_138F0( var_0, var_1, var_2 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    for (;;)
    {
        if ( self getcurrentprimaryweapon() != var_0 )
            break;

        var_3 = self getweaponammoclip( var_0 );

        if ( var_3 > 0 )
        {
            thread scripts\mp\hud_message::showsplash( "_encstr_B2CE1647C83760E21FCB8F3799FF579BDAF6135A1062628A" );

            if ( var_2 > 0 )
                self setweaponammostock( var_0, var_1 + var_2 );

            break;
        }

        waitframe();
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_BEF407B95DC1B227E6", "_encstr_97A0119BD583954E559BAC234BE6B437432B19" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_BEF407B95DC1B227E6", "_encstr_97A0119BD583954E559BAC234BE6B437432B19" ) ]]();
}

stoppingpower_givehcr( var_0, var_1, var_2 )
{
    var_3 = init_relic_steelballs( var_0, var_1, var_2 );
    _id_138E6( var_0, var_3 );
}

init_relic_steelballs( var_0, var_1, var_2 )
{
    var_3 = spawnstruct();
    var_3.player = var_0;
    var_3.objweapon = var_1;
    var_3.rounds = var_2;
    var_3.gavehcr = 0;
    var_3.kills = 0;
    return var_3;
}

_id_138E6( var_0, var_1 )
{
    if ( !isdefined( var_0.hcrdata ) )
        var_0.hcrdata = [];

    var_2 = scripts\mp\utility\weapon::getcompleteweaponnamenoalt( var_1.objweapon );
    var_3 = var_0.hcrdata[var_2];

    if ( isdefined( var_3 ) )
        var_3 thread stoppingpower_removehcr();

    var_0.hcrdata[var_2] = var_1;
    var_1 thread stoppingpower_clearhcrondeath();
    var_1 thread _id_138E2();
    var_1 thread _id_138E3();
    var_1 thread stoppingpower_givefastreload();
    var_0 thread stoppingpower_breaksprint();
    var_1 thread stoppingpower_watchhcrweaponchange();
    var_1 thread stoppingpower_watchhcrweaponfire();
}

_id_138ED( var_0, var_1, var_2 )
{
    if ( !isdefined( var_0 ) || !isdefined( var_1 ) )
        return;

    var_3 = var_1 _id_138E5( var_2 );

    if ( isdefined( var_3 ) )
    {
        var_4 = init_relic_steelballs( var_3.player, var_3.objweapon, var_3.rounds );
        var_0.hcrdata = var_4;
        var_3 thread stoppingpower_removehcr();
    }
}

_id_138EE( var_0, var_1, var_2 )
{
    var_3 = var_0.hcrdata;

    if ( !isdefined( var_3 ) )
        return;

    if ( !isdefined( var_3.player ) || !var_3.player hasweapon( var_3.objweapon ) )
        return;

    var_3.player = var_1;
    _id_138E6( var_1, var_3 );
}

_id_138E5( var_0 )
{
    if ( !isdefined( var_0 ) )
        return undefined;

    if ( !isdefined( self.hcrdata ) )
        return undefined;

    var_1 = scripts\mp\utility\weapon::getcompleteweaponnamenoalt( var_0 );
    return self.hcrdata[var_1];
}

stoppingpower_cancelreload()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self cancelreload();
    wait 0.05;
    return 1;
}

stoppingpower_watchhcrweaponchange()
{
    self endon( "_encstr_9F5B18E3B5604B9A5308026918B7178BDE1E7D65402B47AC2F01" );
    self.player endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    while ( self.player hasweapon( self.objweapon ) )
    {
        if ( _id_138E9( self.player getcurrentweapon() ) )
        {
            if ( !self.gavehcr )
            {
                self.player scripts\mp\utility\perk::giveperk( "_encstr_AFAB177F3A7D6B39B7C9FB8301F915382B3709ED4E13C0DFCF" );
                self.gavehcr = 1;
            }
        }
        else if ( self.gavehcr )
        {
            self.player scripts\mp\utility\perk::removeperk( "_encstr_AFAB177F3A7D6B39B7C9FB8301F915382B3709ED4E13C0DFCF" );
            self.gavehcr = 0;
        }

        self.player waittill( "_encstr_89390E4C39FEB818C099781C19966AEB" );
    }

    thread stoppingpower_removehcr();
}

stoppingpower_watchhcrweaponfire()
{
    self endon( "_encstr_9F5B18E3B5604B9A5308026918B7178BDE1E7D65402B47AC2F01" );
    self.player endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    while ( self.player hasweapon( self.objweapon ) )
    {
        self.player waittill( "_encstr_BE140D3FF56983E5E5C94AB288DB1F", var_0 );

        if ( _id_138E9( var_0 ) )
        {
            self.rounds--;

            if ( self.rounds <= 0 )
                break;
        }
    }

    self.player thread _id_138EF( self.objweapon );
    thread stoppingpower_removehcr();
}

_id_138EF( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( !isdefined( self ) )
        return;

    var_1 = scripts\mp\utility\weapon::getweaponrootname( var_0 );

    if ( var_1 != "_encstr_A25910D2EEC1AFE6B9D78D9CDBCDB9C4EDEE" )
        return;

    self.waittill_unload_complete = 1;
    scripts\engine\utility::_id_143C0( 2, "_encstr_BE140D3FF56983E5E5C94AB288DB1F", "_encstr_89390E4C39FEB818C099781C19966AEB" );
    self.waittill_unload_complete = undefined;
}

stoppingpower_removehcr()
{
    self notify( "_encstr_9F5B18E3B5604B9A5308026918B7178BDE1E7D65402B47AC2F01" );

    if ( isdefined( self.player ) )
    {
        if ( self.gavehcr )
            self.player scripts\mp\utility\perk::removeperk( "_encstr_AFAB177F3A7D6B39B7C9FB8301F915382B3709ED4E13C0DFCF" );

        _id_138E1();
    }
}

_id_138EB()
{
    self notify( "_encstr_9F5B18E3B5604B9A5308026918B7178BDE1E7D65402B47AC2F01" );

    if ( isdefined( self.player ) )
        _id_138E1();
}

_id_138E1()
{
    if ( isdefined( self.player.hcrdata ) )
    {
        var_0 = scripts\mp\utility\weapon::getcompleteweaponnamenoalt( self.objweapon );
        var_1 = self.player.hcrdata[var_0];

        if ( var_1 == self )
            self.player.hcrdata[var_0] = undefined;

        self.player scripts\cp\vehicles\vehicle_compass_cp::_id_12032( "_encstr_A10112E6EB883A0BA7DF7B8B30F8DD1D4113DF80", self.kills );
        scripts\mp\analyticslog::logevent_fieldupgradeexpired( self.player, level.superglobals.staticsuperdata["_encstr_A10112E6EB883A0BA7DF7B8B30F8DD1D4113DF80"].id, self.kills, 0 );
    }
}

_id_138EC( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_1 = scripts\mp\utility\weapon::getcompleteweaponnamenoalt( var_0 );
        var_2 = self.hcrdata[var_1];

        if ( isdefined( var_2 ) )
        {
            scripts\mp\utility\stats::incpersstat( "_encstr_87CD139B47ED07E0B4B93BA0BDBB5627B496361B6E", 1 );
            scripts\mp\supers::combatrecordsuperkill( "_encstr_A10112E6EB883A0BA7DF7B8B30F8DD1D4113DF80" );
            scripts\cp\vehicles\vehicle_compass_cp::_id_12094();
            var_2.kills++;
        }
    }
}

_id_138E9( var_0 )
{
    var_1 = self.player getammotype( self.objweapon );
    var_2 = self.player getammotype( var_0 );
    var_3 = var_1 == var_2;
    return isnullweapon( var_0, self.objweapon, 1 ) && var_3;
}

stoppingpower_clearhcrondeath()
{
    self.player endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_9F5B18E3B5604B9A5308026918B7178BDE1E7D65402B47AC2F01" );
    self.player waittill( "_encstr_A3750609A5E61883" );
    thread stoppingpower_removehcr();
}

_id_138E2()
{
    self.player endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_9F5B18E3B5604B9A5308026918B7178BDE1E7D65402B47AC2F01" );
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    thread stoppingpower_removehcr();
}

_id_138E3()
{
    self.player endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_9F5B18E3B5604B9A5308026918B7178BDE1E7D65402B47AC2F01" );
    self.player waittill( "_encstr_A3B9121941F80F72A3F0EA63B1872DBF31366594" );
    thread _id_138EB();
}

stoppingpower_givefastreload()
{
    self.player endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self.player scripts\mp\utility\perk::giveperk( "_encstr_B9FE151A83CF7E72792BC5D85FBB632B045BEBE0AF06AA" );
    self.player scripts\engine\utility::_id_143A6( "_encstr_BE140D3FF56983E5E5C94AB288DB1F", "_encstr_89390E4C39FEB818C099781C19966AEB", "_encstr_9F5B18E3B5604B9A5308026918B7178BDE1E7D65402B47AC2F01" );
    self.player scripts\mp\utility\perk::removeperk( "_encstr_B9FE151A83CF7E72792BC5D85FBB632B045BEBE0AF06AA" );
}

stoppingpower_breaksprint()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    scripts\common\utility::allow_sprint( 0 );
    wait 0.4;
    scripts\common\utility::allow_sprint( 1 );
}
