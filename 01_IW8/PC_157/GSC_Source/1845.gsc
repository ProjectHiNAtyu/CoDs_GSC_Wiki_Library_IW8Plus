// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

initfinalkillcam()
{
    level.finalkillcamenabled = level.finalkillcamtype == 0;
    level.finalkillcams = [];

    foreach ( var_1 in level.teamnamelist )
        level.finalkillcams[var_1] = undefined;

    level.finalkillcams["_encstr_AABA05236DC831"] = undefined;
    level.finalkillcam_winner = undefined;
    level.recordfinalkillcam = 1;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
    {
        level.finalkillcamenabled = 1;
        return;
    }
}

erasefinalkillcam()
{
    for ( var_0 = 0; var_0 < level.teamnamelist.size; var_0++ )
        level.finalkillcams[level.teamnamelist[var_0]] = undefined;

    level.finalkillcams["_encstr_AABA05236DC831"] = undefined;
    level.finalkillcam_winner = undefined;
}

preloadfinalkillcam()
{
    var_0 = undefined;

    if ( istrue( level.nukedetonated ) )
        return;

    if ( istrue( level.disable_back_light ) )
        return;

    if ( getdvarint( "_encstr_BA7E1C2A9960AF9A573B4FAF2F0A22D8614124F571286792BB2153477321", 0 ) == 1 )
        return;

    if ( istrue( level.skipfinalkillcam ) )
        return;

    if ( level.potgenabled )
    {
        if ( scripts\mp\potg::shouldskippotg() )
        {
            level.potgenabled = 0;
            level.finalkillcamtype = 0;
            level.finalkillcamenabled = 1;
        }
    }

    if ( level.finalkillcamenabled )
    {
        var_1 = level.finalkillcams[level.finalkillcam_winner];

        if ( !isdefined( var_1 ) )
        {
            scripts\mp\flags::levelflagset( "_encstr_B37618EF374D72E989C39FB09C4E2FB55F51200758C87303D053" );
            return;
        }

        var_0 = var_1.attacker;
    }
    else
    {
        var_2 = gettime();

        while ( !scripts\mp\potg::issystemfinalized() )
            waitframe();

        if ( scripts\mp\potg::shouldskippotg() == 0 )
        {
            var_3 = scripts\mp\potg::getfinalpotginfo();

            if ( !isdefined( var_3 ) )
            {
                scripts\mp\flags::levelflagset( "_encstr_B37618EF374D72E989C39FB09C4E2FB55F51200758C87303D053" );
                return;
            }

            var_0 = var_3.spectateentity;
        }
        else
        {
            level.potgenabled = 0;
            level.finalkillcamtype = 0;
            level.finalkillcamenabled = 1;
            var_1 = level.finalkillcams[level.finalkillcam_winner];

            if ( !isdefined( var_1 ) )
            {
                scripts\mp\flags::levelflagset( "_encstr_B37618EF374D72E989C39FB09C4E2FB55F51200758C87303D053" );
                return;
            }

            var_0 = var_1.attacker;
        }
    }

    if ( !isdefined( var_0 ) || !isplayer( var_0 ) )
    {
        scripts\mp\flags::levelflagset( "_encstr_B37618EF374D72E989C39FB09C4E2FB55F51200758C87303D053" );
        return;
    }

    var_4 = var_0 geteye();

    foreach ( var_6 in level.players )
    {
        var_6 loadcustomizationplayerview( var_0 );
        var_6 predictstreampos( var_4, 1 );
    }

    if ( level.potgenabled )
        wait 1.0;

    scripts\mp\flags::levelflagset( "_encstr_B37618EF374D72E989C39FB09C4E2FB55F51200758C87303D053" );
}

dopotgkillcam()
{
    if ( istrue( level.skipfinalkillcam ) || istrue( level.nukedetonated ) )
        return;

    level.showingfinalkillcam = 1;
    level.maxkillcamdelay = 0.0;

    foreach ( var_1 in level.players )
        var_1 thread dopotgkillcamforplayer();

    for (;;)
    {
        var_3 = 0;

        foreach ( var_1 in level.players )
        {
            if ( istrue( var_1.inpotgkillcam ) )
            {
                var_3 = 1;
                break;
            }
        }

        if ( !var_3 )
            break;

        waitframe();
    }

    level.showingfinalkillcam = 0;
}

dopotgkillcamforplayer()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self.inpotgkillcam = 1;
    scripts\mp\utility\player::restorebasevisionset( 0 );
    self setclientomnvar( "_encstr_8B2210E19A4A03D75761D81DF7B06370DD98", 4 );
    var_0 = scripts\mp\potg::getfinalpotginfo();

    if ( !isdefined( var_0 ) || !isdefined( var_0.spectateentity ) )
    {
        potgkillcamover();
        return;
    }

    thread scripts\mp\killcam::potg_killcam( var_0.spectateentity, var_0.psoffsettime, var_0.starttime, var_0.endtime );
    var_1 = scripts\engine\utility::_id_143B4( "_encstr_8A860E4CB2EC4BE6F56D5A36368DC2DA", "_encstr_81BC0E4A1A88992FA7880170C027C711" );

    if ( var_1 == "_encstr_81BC0E4A1A88992FA7880170C027C711" )
    {
        potgkillcamover();
        return;
    }

    thread scripts\mp\utility\game::setuipostgamefade( 1.0, self.killcamlength - 0.5 );
    self waittill( "_encstr_81BC0E4A1A88992FA7880170C027C711" );
    potgkillcamover();
}

potgkillcamover()
{
    self setclientomnvar( "_encstr_8B2210E19A4A03D75761D81DF7B06370DD98", 1 );
    self.inpotgkillcam = 0;
}

dofinalkillcam()
{
    if ( !level.finalkillcamenabled )
        return 0;

    if ( istrue( level.skipfinalkillcam ) || istrue( level.nukedetonated ) )
        return 0;

    level.showingfinalkillcam = 1;
    var_0 = "_encstr_AABA05236DC831";

    if ( isdefined( level.finalkillcam_winner ) )
        var_0 = level.finalkillcam_winner;

    var_1 = level.finalkillcams[var_0];

    if ( !isdefined( var_1 ) )
    {
        level.showingfinalkillcam = 0;
        return 0;
    }

    var_2 = var_1.attacker;
    var_3 = var_1.victim;

    if ( !isdefined( var_3 ) || !isdefined( var_2 ) )
    {
        level.showingfinalkillcam = 0;
        return 0;
    }

    var_4 = 20;
    var_5 = scripts\mp\utility\game::getsecondspassed() - var_1.timerecorded;

    if ( var_5 > var_4 )
    {
        level.showingfinalkillcam = 0;
        return 0;
    }

    level thread scripts\cp\vehicles\vehicle_compass_cp::processfinalkillchallenges( var_2, var_3 );
    var_6 = ( gettime() - var_3.deathtime ) / 1000;
    setglobalsoundcontext( "_encstr_98D20B375BBDAAE7B3B3026289", "_encstr_891308B7094538E6D79A", 0.1 );
    level.maxkillcamdelay = 0.0;

    foreach ( var_8 in level.players )
    {
        var_8 scripts\mp\utility\player::restorebasevisionset( 0 );
        var_8.killcamentitylookat = var_3 getentitynumber();
        var_8 scripts\mp\damage::updatedeathdetails( var_1.attackers, var_1.attackerdata, var_2 );

        if ( !scripts\mp\utility\weapon::iskillstreakweapon( var_1.objweapon.basename ) )
            var_8 scripts\mp\killcam::setkillcamnormalweaponomnvars( var_1.objweapon, var_1.smeansofdeath, var_1.einflictor, var_1.executionref );

        var_8 setclientomnvar( "_encstr_8B2210E19A4A03D75761D81DF7B06370DD98", 3 );
        var_8 setclientomnvar( "_encstr_9BA01ED0EAA957A83BFC262FC5CF731B0EA3B868E1FDDDA6E70CB517A37759F5", 1 );
        var_8 playlocalsound( "_encstr_AAF511F643E0CE2B30C83A7230765785112B66" );
        var_8 setclienttriggeraudiozonepartial( "_encstr_891308B7094538E6D79A", "_encstr_971904B5B43C" );
        var_8 thread scripts\mp\killcam::dokillcamfromstruct( var_1, var_6, 0, 1 );
    }

    wait( 0.15 + level.maxkillcamdelay );

    while ( anyplayersinkillcam() )
        waitframe();

    level.showingfinalkillcam = 0;
}

play_patrol_sequence_based_on_first_vehicle()
{
    self notify( "_encstr_B385165F30AFE3582D57D7541C7D6072389AA251804F5618" );
    var_0 = 1.0;
    var_1 = self.killcamlength - 0.5;

    if ( getdvar( "_encstr_A10E10BABF1EB12D4B819F18E8488BAA02E5", "_encstr_A40101" ) == "_encstr_9C8D0B4BABD087CAC90B93AA60" )
    {
        var_0 = 0;
        var_1 = 0;
    }

    thread scripts\mp\utility\game::setuipostgamefade( var_0, var_1 );
    self setclientomnvar( "_encstr_8B2210E19A4A03D75761D81DF7B06370DD98", 3 );
    thread watchplaybackend();
}

watchplaybackend()
{
    self endon( "_encstr_9E8F11FA39E3D89F06B291686A1D57311BDDF5" );
    self waittill( "_encstr_81BC0E4A1A88992FA7880170C027C711" );
    setglobalsoundcontext( "_encstr_98D20B375BBDAAE7B3B3026289", "_encstr_A40101", 0.5 );

    if ( scripts\mp\utility\game::getgametype() != "_encstr_9DB606854E567385" )
        self playlocalsound( "_encstr_A8D41293A330FB21C17B5CB591F90F205F77CB15" );

    self clearclienttriggeraudiozone( 4 );
    thread scripts\mp\playerlogic::spawnendofgame();
}

recordfinalkillcam( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 )
{
    if ( !scripts\mp\potg::shouldskippotg() )
        return;

    var_11 = spawnstruct();

    if ( isdefined( var_4 ) && isagent( var_4 ) )
    {
        var_11.agent_type = var_4.agent_type;
        var_11.lastspawntime = var_4.lastspawntime;
    }

    var_12 = scripts\mp\killcam::makekillcamdata( var_4, var_11, var_3, var_5, var_6, var_1 getentitynumber(), var_7, var_8, var_9, 12, var_2, var_1, var_10, var_2.pers["_encstr_ABCB0DBA7BBB6FCFC35D303D7628F7"], 0, 1 );
    var_12.timerecorded = scripts\mp\utility\game::getsecondspassed();

    if ( var_10 == "_encstr_87230ED5301DEFDF39A94821C9F38573" )
    {
        var_12.timerecorded = var_12.timerecorded - 3.0;
        var_12.timerecorded = max( 0, var_12.timerecorded );
    }

    var_12.attackers = var_1.attackers;
    var_12.attackerdata = var_1.attackerdata;

    if ( level.teambased && isdefined( var_2.team ) )
        level.finalkillcams[var_2.team] = var_12;
    else if ( !level.teambased )
        level.finalkillcams[var_2.guid] = var_12;

    level.finalkillcams["_encstr_AABA05236DC831"] = var_12;
}

waitskipkillcambuttonduringdeathtimer()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_A6E71B9081E8985F2F22C79ADFD13B58C1DAD55570B783F377DB5F6599" );
    self notifyonplayercommand( "_encstr_A4E80E2359163A43AFE4CAE6E02CEECD", "_encstr_88410B02AB0E5F15AFB8A883DC" );
    self notifyonplayercommand( "_encstr_A4E80E2359163A43AFE4CAE6E02CEECD", "_encstr_A4C60AACB01B1DD2B3583A2B" );
    self waittill( "_encstr_A4E80E2359163A43AFE4CAE6E02CEECD" );
    self notify( "_encstr_B2331C374722D1F091AD16895779801BC9C3B381AB7AA849AB8638617F2C" );
}

waitskipkillcamduringdeathtimer( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_B2331C374722D1F091AD16895779801BC9C3B381AB7AA849AB8638617F2C" );
    wait( var_0 );
    self notify( "_encstr_A6E71B9081E8985F2F22C79ADFD13B58C1DAD55570B783F377DB5F6599" );
}

skipkillcamduringdeathtimer( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( level.showingfinalkillcam )
        return 0;

    if ( !isai( self ) )
    {
        thread waitskipkillcambuttonduringdeathtimer();
        thread waitskipkillcamduringdeathtimer( var_0 );
        var_1 = scripts\engine\utility::_id_143AD( "_encstr_A6E71B9081E8985F2F22C79ADFD13B58C1DAD55570B783F377DB5F6599", "_encstr_B2331C374722D1F091AD16895779801BC9C3B381AB7AA849AB8638617F2C" );

        if ( isdefined( var_1 ) && var_1 == "_encstr_A6E71B9081E8985F2F22C79ADFD13B58C1DAD55570B783F377DB5F6599" )
        {
            self.skippedkillcam = 0;
            return 0;
        }
        else
        {
            self.skippedkillcam = 1;
            scripts\mp\utility\stats::incpersstat( "_encstr_B36510DCB54B3838CA1996D2B1B136B0B5E6", 1 );
            return 1;
        }
    }

    return 0;
}

anyplayersinkillcam()
{
    foreach ( var_1 in level.players )
    {
        if ( isdefined( var_1.killcam ) )
            return 1;
    }

    return 0;
}
