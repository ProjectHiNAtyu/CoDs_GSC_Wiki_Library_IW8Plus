// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    scripts\mp\killstreaks\killstreaks::registerkillstreak( "_encstr_9867080A50FD0FDBE03F", scripts\cp_mp\killstreaks\airdrop::tryuseairdropmarkerfromstruct );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_8F3B14AA9086535AB03195953150A4CB2189A0A2785D", ::airdrop_airdropmultipleinit );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_8CDD12888F7F38F74B5FC65E36123D61890B90E8", ::airdrop_registerscoreinfo );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_B65012B3B3C4E203C8C9C20621E051DA28B79723", ::airdrop_registeractionset );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_8FDE11208B97531B0FF50387CA7F213DBFC398", ::airdrop_updateuiprogress );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_8BD90FB08DB1DEEE281BD1D2DE9B3595D1", ::airdrop_allowactionset );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_B2BC1FA75DDAABAAD8AAD331AFC9D850B1C15B11809B4CBD499533433BB9451DE9", ::airdrop_unresolvedcollisionnearestnode );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_A9C610932716D8756FAAB8A013CB3628AE83", ::airdrop_awardkillstreak );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_B75315B986B7BBB4B436B1B947C9CA85AD9A381BB06E86", ::airdrop_showkillstreaksplash );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_B7EC101F9D6349F15B0F092395017B5A37BA", ::airdrop_gettargetmarker );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_BA211A3A2D16A3AA40A1052581C034BBB139E09328EFE76218C1252B", ::airdrop_airdropmultipledropcrates );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_98BB0FCFD8FB14EA5D359FCC266B92AC61", ::airdrop_outlinedisable );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_871C19C761E2584D3BBA6C30221B1EB87EF043FF094D201E9F3280", ::airdrop_capturelootcachecallback );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_A1A61B1053DA7FB00267D17BA7A1FF5691B5F7074BF23118E3D5E86CC0", ::airdrop_iskillstreakblockedforbots );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_A9EA1989F6E8A43769D236B16E8EC9CAB0B6A9570E83BD9C3A5932", ::airdrop_botiskillstreaksupported );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_B9D7197373B38170899D6079C781F8C55A33C3F7D70A56F0F9F34B", ::br_armor_plate_broken_remove );
}

airdrop_airdropmultipleinit()
{
    scripts\cp_mp\killstreaks\airdrop_multiple::airdrop_multiple_init();
}

airdrop_registerscoreinfo()
{
    scripts\mp\rank::registerscoreinfo( "_encstr_BC8F0CED4311BB6CA9F19BBFB0A1", "_encstr_989406CC014C5F05", 200 );
}

airdrop_registeractionset()
{
    var_0 = getdvarint( "_encstr_B1CD17C7CF3EF161B0BBFF7A305097EB166BEF5FBBEF4B5750", 1 );

    if ( var_0 )
    {
        scripts\mp\playeractions::registeractionset( "_encstr_938C09DB8E9963F70338CA", [ "_encstr_A9AF10E0F285CA19B35C28B0BD4FC89D8822", "_encstr_807805775B15A2", "_encstr_A8C706AFD3214275", "_encstr_A80F0EAFBBDF6B0710B68A93689853A2", "_encstr_B6190C6DB4C68DB9A327CA0B6DDC", "_encstr_BEF407B95DC1B227E6" ] );
        scripts\mp\playeractions::registeractionset( "_encstr_AD3B0D723DD7A1D7CA4AC04021A243", [ "_encstr_A9AF10E0F285CA19B35C28B0BD4FC89D8822", "_encstr_B92007DDCA2C0EF6DC", "_encstr_B6190C6DB4C68DB9A327CA0B6DDC", "_encstr_BEF407B95DC1B227E6" ] );
    }
    else
        scripts\mp\playeractions::registeractionset( "_encstr_938C09DB8E9963F70338CA", [ "_encstr_A9AF10E0F285CA19B35C28B0BD4FC89D8822", "_encstr_B92007DDCA2C0EF6DC", "_encstr_B6190C6DB4C68DB9A327CA0B6DDC", "_encstr_BEF407B95DC1B227E6" ] );
}

airdrop_updateuiprogress( var_0, var_1 )
{
    scripts\mp\gameobjects::updateuiprogress( var_0, var_1 );
}

airdrop_allowactionset( var_0, var_1 )
{
    scripts\mp\playeractions::allowactionset( var_0, var_1 );
}

airdrop_unresolvedcollisionnearestnode( var_0, var_1, var_2 )
{
    childthread scripts\mp\movers::unresolved_collision_nearest_node( var_0, var_1, var_2 );
}

airdrop_awardkillstreak( var_0, var_1, var_2 )
{
    if ( level.gametype == "_encstr_BC7205C8ABFDE7" || level.gametype == "_encstr_87E507D23766566CD1" )
    {
        var_3 = 0;
        var_4 = 0;
        var_5 = var_1;
    }
    else
    {
        var_3 = var_2.streakinfo.mpstreaksysteminfo.streaklifeid;
        var_4 = var_2.streakinfo.mpstreaksysteminfo._id_13913;
        var_5 = var_2.streakinfo.owner;
    }

    thread scripts\mp\killstreaks\killstreaks::awardkillstreak( var_0, "_encstr_8B180CD82C27950E1636B60BD995", var_3, var_4, var_5 );
    scripts\mp\utility\stats::incpersstat( "_encstr_B70515AAF852F738F0FA72FF6F2B03E7E610BD8540E534", 1 );
}

airdrop_showkillstreaksplash( var_0, var_1, var_2 )
{
    scripts\mp\hud_message::showkillstreaksplash( var_0, var_1, var_2 );
}

airdrop_gettargetmarker( var_0 )
{
    return scripts\mp\killstreaks\target_marker::gettargetmarker( var_0 );
}

airdrop_airdropmultipledropcrates( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    return scripts\cp_mp\killstreaks\airdrop_multiple::airdrop_multiple_dropcrates( var_0, var_1, var_2, var_3, var_4, var_5 );
}

airdrop_outlinedisable( var_0, var_1 )
{
    scripts\mp\utility\outline::outlinedisable( var_0, var_1 );
}

airdrop_capturelootcachecallback()
{
    return _encstr_BD2C2137D839B438E8E6CBDA0EBCCE586B2BD15E1C956E5E0EB15DCD462B9C5CB3CD8D::capturelootcachecallback;
}

airdrop_iskillstreakblockedforbots( var_0 )
{
    return scripts\mp\bots\bots_killstreaks::iskillstreakblockedforbots( var_0 );
}

airdrop_botiskillstreaksupported( var_0 )
{
    return scripts\mp\bots\bots_killstreaks::bot_is_killstreak_supported( var_0 );
}

br_armor_plate_broken_remove( var_0 )
{
    var_1 = "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D";
    var_2 = scripts\mp\killstreaks\killstreaks::createstreakitemstruct( var_1 );
    var_2.madeavailabletime = scripts\mp\matchdata::gettimefrommatchstart( gettime() );
    var_2.streaklifeid = self.lifeid;
    var_2._id_13913 = self.matchdatalifeindex;
    var_2.owner = self;
    var_2._id_121B0 = self getxuid();
    var_2.attackerisinflictor = scripts\mp\matchdata::gettimefrommatchstart( gettime() );
    scripts\mp\analyticslog::logevent_killstreakactivated( self, var_2.streaklifeid, var_2.streakname, var_2.isgimme, var_2.attackerisinflictor, self.origin );
    scripts\mp\killstreaks\killstreaks::combatrecordkillstreakuse( var_1 );
    scripts\mp\utility\dialog::playkillstreakusedialog( var_1 );
    var_3 = scripts\cp_mp\utility\killstreak_utility::createstreakinfo( var_1, self );
    var_3.mpstreaksysteminfo = var_2;
    scripts\cp_mp\killstreaks\juggernaut::tryusejuggernautfromstruct( var_3, var_0 );
}
