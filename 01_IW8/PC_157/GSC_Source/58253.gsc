// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

subscribetoquestlocale()
{
    init_vfx();
    init_dvars();
}

init_vfx()
{
    level._effect["_encstr_81382B0357A829E6FB9F213B77F238B8496D68983E0CC02852B70711976BF318EE49D1F0624320D5793B01EBBF"] = loadfx( "_encstr_A4B144CE330F974BBB70CB0E4EF61CBC37B127D23847B0138DCA6EE5EC33E1D7C493F54695D8ED37A30B6BA537853AD2BDCDBE6ED1B03AA5F6B9AFC6D2278DD8CAF589365D59" );
    level._effect["_encstr_9FBE2C9B32B3E058DA1FF1FB4BC5603D7F3AF0CDAA7B23F8F507A7C171EB90081B710968038FE9904103A1EB9995"] = loadfx( "_encstr_9C0C32CE99C3E5A5BBE0EB31C997969BD885374679595CD52D1CCB23568DB7DCBCEC99E1F5132733EB91956CED9BFAB9A3CA0BB5" );
    level._effect["_encstr_87202BEEA49AEF166D793A2270BFCD9B1199497E4F637F1D6D61B32B58D144BF2868CBE15E2993A767B8DB4330"] = loadfx( "_encstr_8BD7319CCE4B48636B3F39D8F3153B9BB371281D6FC74B93D4A3C2F0BADEFFF0E60EA48B87735327B1CA98C0F2B5E7A96792BF" );
    level._effect["_encstr_BCDF1C353312E7AFA98ED87E2123C3366B82FF2517E3D7831FD918814978"] = loadfx( "_encstr_B364339D33C397B4EE0EBEC4C9BC96B9B1C2374697592ED52D38F2C8B2B1B79B79B399E1FAC4E466AF32CA6C7B73D7DC8D9CE63387" );
}

init_dvars()
{
    if ( !isdefined( level.iswztrain ) )
    {
        level.iswztrain = spawnstruct();
        level.iswztrain.instances = [];
    }

    level.iswztrain.lifetime = getdvarfloat( "_encstr_AB5C1B032B2B9F5935B2ED2AD1FF539B03CB070867A15B7DCF3DE18A21", 13.0 );
    level.iswztrain.weaponswitchhintlogic = getdvarfloat( "_encstr_BDD727CD1B39FA32956CEDCDAF6EE80B1DD2DE9BD736B49995A396DAACAFD816CD47AFB1B427C663B2", -1 );
    level.iswztrain._id_142CD = getdvarfloat( "_encstr_A29D2353788589CBF9FE272E9843F34EE1B01A3A3155FC5F50563954AB8B0F1979B8B242F8", 0.1 );
    level.iswztrain.infinite_ammo = getdvarint( "_encstr_ADC820E33EC3F79F4B60828A99BF53C7BB93776658C86B277BE0EA23608F4E4F7008", 0 );
}

jugg_protect_jammer()
{
    self.jugg_pursue_target = undefined;
    var_0 = scripts\mp\equipment::getequipmentmaxammo( "_encstr_801C14955CEA960EFA32568DDE9BBEDC1D853A5AF673" );

    for ( var_1 = 0; var_1 < var_0; var_1++ )
        javelin_interact_monitor();
}

javelin_interact_monitor( var_0 )
{
    if ( !isdefined( self.jugg_pursue_target ) )
        self.jugg_pursue_target = [];

    if ( self.jugg_pursue_target.size < jug_trig_spawn() )
    {
        if ( !isdefined( var_0 ) )
            var_0 = 3;

        self.jugg_pursue_target[self.jugg_pursue_target.size] = var_0;
    }
}

jugg_modifyherodroptoplayerdamage()
{
    if ( isdefined( self.jugg_pursue_target ) && self.jugg_pursue_target.size > 0 )
    {
        var_0 = self.jugg_pursue_target[self.jugg_pursue_target.size - 1];
        self.jugg_pursue_target[self.jugg_pursue_target.size - 1] = undefined;
        return var_0;
    }

    return undefined;
}

jugg_modifyfalldamage()
{
    self.jugg_pursue_target = undefined;
}

jugg_go_to_node_callback( var_0, var_1 )
{
    jugg_modifyfalldamage();
}

jugg_getminigunweapon( var_0, var_1 )
{
    jugg_protect_jammer();
}

jug_trig_spawn()
{
    return scripts\mp\equipment::getequipmentmaxammo( "_encstr_801C14955CEA960EFA32568DDE9BBEDC1D853A5AF673" );
}

jug_reinforce()
{
    jug_encounter_test( undefined, 0, 0.15 );
}

jugg_dmg_debug()
{
    jug_encounter_test( undefined, 0, 0.15 );
}

jeep_initomnvars( var_0 )
{
    var_0 endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0.owner = self;
    var_0 setotherent( var_0.owner );
    var_0 setnodeploy( 1 );
    var_0.issuper = isdefined( var_0.owner.super ) && var_0.owner.super.staticdata.weapon == "_encstr_8256119AF01F0D6B267EB4D9958827153F1863";
    var_0.superid = level.superglobals.staticsuperdata["_encstr_BA23141B8317A7AAC1892D338710B9B7BDB9E32228E0"].id;
    var_0.usedcount = 0;
    var_0 scripts\cp_mp\ent_manager::registerspawn( 2, ::jug_reinforce );
    var_0 thread jeep_initcollision();
    var_0 thread jeep( var_0.owner );
    var_0 waittill( "_encstr_8AE90E7D08B8538A21DB77CF1155D2B3", var_1 );
    var_0.owner thread scripts\mp\weapons::monitordisownedgrenade( var_0.owner, var_0 );
    scripts\mp\utility\print::printgameaction( "_encstr_B2A80F1DC9F6C134BC04DC83C277CDB246", self );

    if ( !istrue( var_0.issuper ) )
    {
        var_0.ammo = jugg_modifyherodroptoplayerdamage();

        if ( !isdefined( var_0.ammo ) )
            var_0.ammo = 3;

        var_0 thread scripts\mp\weapons::makeexplosiveusabletag( "_encstr_9830081379E42703F8A3", 1 );
    }
    else
        var_0.ammo = 3;

    var_0.owner scripts\mp\weapons::onequipmentplanted( var_0, "_encstr_801C14955CEA960EFA32568DDE9BBEDC1D853A5AF673", ::jugg_dmg_debug );
    var_0 thread scripts\mp\weapons::monitordisownedequipment( var_0.owner, var_0 );
    var_0 scripts\mp\sentientpoolmanager::registersentient( "_encstr_B42E10610746F54F3F79B1219A812B9DC34E", var_0.owner );
    var_0.explosion = jeep_horn();
    var_2 = var_0.owner scripts\mp\utility\perk::_hasperk( "_encstr_871415CD83AC1BB416C6A3CBD7395D3BB35919F52BE2E0" );

    if ( var_2 )
        var_0.hasruggedeqp = 1;

    var_3 = scripts\engine\utility::ter_op( var_2, 200, 100 );
    var_4 = "_encstr_8CFB0986B4E856B8EA960E";
    var_0 thread scripts\mp\damage::monitordamage( var_3, var_4, ::jugg_canreload, ::jugg_canparachute, 0 );
    var_0 scripts\cp_mp\emp_debuff::set_apply_emp_callback( ::jugg_assault3_check_size );
    var_0 setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_B7180526C81F4B", 0 );
    var_0 thread javelin_forceclear();
}

javelin_forceclear()
{
    self endon( "_encstr_A3750609A5E61883" );
    self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_89E20BCFE353A865D75090D0EA" );
    wait 0.1;
    thread joininprogresstimeout();
    thread jugg_pursue_players( 1 );
    wait 0.4;
    self.headiconid = scripts\cp_mp\entityheadicons::setheadicon_factionimage( 0, 20, undefined, undefined, undefined, undefined, 1 );
    thread scripts\mp\weapons::outlineequipmentforowner( self );
    self._id_13B97 = gettime();
    self._id_13B96 = gettime() + level.iswztrain.lifetime * 1000;
    level.iswztrain.instances = scripts\engine\utility::array_add( level.iswztrain.instances, self );
    var_0 = self.origin - ( 0, 0, 125 );
    var_1 = 20;
    var_2 = var_0 + ( 0, 0, var_1 );
    var_3 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", var_2, 0, 250, 250 );
    scripts\mp\utility\trigger::makeenterexittrigger( var_3, ::jugg_combo, ::jugg_enter_combat_callback, undefined, undefined, ::jugg_get_priority_player );
    var_3.tracknonoobplayerlocation = self;
    var_3 enablelinkto();
    var_3 linkto( self );
    self.trigger = var_3;
    _encstr_A83527375FF36358943A0858E22728AFFAAFA1ABAB2A36DADA520ED34B55D05D71772933B3C6F4F0F3::init_tactical_boxes( 3, 0, 1, self.origin );
    _encstr_A83527375FF36358943A0858E22728AFFAAFA1ABAB2A36DADA520ED34B55D05D71772933B3C6F4F0F3::_id_13369();
    _encstr_A83527375FF36358943A0858E22728AFFAAFA1ABAB2A36DADA520ED34B55D05D71772933B3C6F4F0F3::_id_1316F( 250 );
    var_4 = level.iswztrain.lifetime;

    if ( isdefined( level.br_circle ) && _encstr_8A18233F26D6B373C5535613B3D5AABF583020D08BFDCE86F68B4649324ABAB809C65856C7::islastcircle() && level.iswztrain.weaponswitchhintlogic > 0 )
        var_4 = level.iswztrain.weaponswitchhintlogic;

    wait( var_4 );
    jug_encounter_test( undefined, 0, 0.15 );
    jugg_canuseweaponpickups();
    thread scripts\mp\equipment_interact::remoteinteractsetup( ::jug_encounter_test, 1, 1 );
    thread scripts\mp\perks\perk_equipmentping::runequipmentping();
}

jugg_idle_until_shot_or_near( var_0 )
{
    self.start_death_from_above_sequence = 1;
    thread jugg_modifyvehicletoplayerdamage();
    var_1 = int( ( var_0._id_13B96 - gettime() ) / 1000 );
}

jugg_managestockammo()
{
    self.start_death_from_above_sequence = 0;
    jugg_objective_struct();
}

jugg_disableoverlayonentergulag()
{
    if ( !isdefined( self.gastriggerstouching ) )
        self.gastriggerstouching = [];

    if ( self.gastriggerstouching.size > 0 )
    {
        foreach ( var_1 in self.gastriggerstouching )
        {
            if ( !isdefined( var_1 ) )
                continue;

            if ( scripts\engine\utility::array_contains( var_1.playersintrigger, self ) )
            {
                scripts\mp\equipment\gas_grenade::gas_onexittrigger( var_1 getentitynumber() );
                return 1;
            }
        }
    }

    return 0;
}

jugg_get_closest_attackable_player()
{
    if ( !isdefined( self.gastriggerstouching ) )
        self.gastriggerstouching = [];

    if ( self.gastriggerstouching.size > 0 )
    {
        foreach ( var_1 in self.gastriggerstouching )
        {
            if ( !isdefined( var_1 ) )
                continue;

            if ( scripts\engine\utility::array_contains( var_1.playersintrigger, self ) )
            {
                scripts\mp\equipment\gas_grenade::gas_onentertrigger( var_1 );
                return 1;
            }
        }
    }

    return 0;
}

jugg_combo( var_0, var_1 )
{
    var_2 = gettime() + 500 >= var_1.tracknonoobplayerlocation._id_13B96;

    if ( !var_2 && jugg_addtoactivejugglist( var_0 ) && !istrue( var_1.tracknonoobplayerlocation._id_122F2 ) )
    {
        var_3 = var_0;
        var_3.start_death_from_above_sequence = 1;
        var_3 jugg_idle_until_shot_or_near( var_1.tracknonoobplayerlocation );
        var_3 jugg_disableoverlayonentergulag();
        var_1.tracknonoobplayerlocation jugg_maze_killtrigger( var_3 );

        if ( scripts\cp_mp\gasmask::hasgasmask( var_3 ) )
        {
            var_3 _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::plunderrankupdate( "_encstr_89F50A5D53692EE8DA763811" );
            var_3 _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::plunderrankupdate( "_encstr_8B220CC7FA8B37D75460F81483B8" );
            var_3 _encstr_823124376CE42DC11DCD5EB6E0CB3BB0ADAC3A2FE056CDBC314EAF83A536DAAB079BE2D9B9B1::plunderrankupdate( "_encstr_B4041189FC8D8040927FC7E1AF3B9BC9271633" );
        }

        if ( isplayer( var_3 ) )
            var_3 scripts\mp\equipment\gas_grenade::gas_clear( 0 );
    }
}

jugg_enter_combat_callback( var_0, var_1 )
{
    if ( jugg_addtoactivejugglist( var_0 ) )
    {
        var_2 = var_0;
        var_2 jugg_managestockammo();
        var_2 jugg_get_closest_attackable_player();
    }
}

jugg_get_priority_player( var_0, var_1 )
{
    if ( jugg_addtoactivejugglist( var_0 ) || isdefined( var_0.vehicletype ) )
        return 0;

    return 1;
}

jugg_maze_killtrigger( var_0 )
{
    if ( !isdefined( self.trigger.participants ) )
        self.trigger.participants = [];

    if ( scripts\engine\utility::array_contains( self.trigger.participants, var_0 ) )
        return;

    self.trigger.participants = scripts\engine\utility::array_add( self.trigger.participants, var_0 );
}

jugg_addtoactivejugglist( var_0 )
{
    return isplayer( var_0 ) || isagent( var_0 ) || isbot( var_0 );
}

jugg_pursue_players( var_0 )
{
    var_1 = "_encstr_AA86070AB8A8FABC2B";

    if ( var_0 )
        playfxontag( scripts\engine\utility::getfx( "_encstr_87202BEEA49AEF166D793A2270BFCD9B1199497E4F637F1D6D61B32B58D144BF2868CBE15E2993A767B8DB4330" ), self, var_1 );
    else
        killfxontag( scripts\engine\utility::getfx( "_encstr_87202BEEA49AEF166D793A2270BFCD9B1199497E4F637F1D6D61B32B58D144BF2868CBE15E2993A767B8DB4330" ), self, var_1 );

    for ( var_2 = 1; var_2 <= 3; var_2++ )
    {
        var_3 = "_encstr_B8BF073A0BD9F5CC0F";

        if ( var_2 > 1 )
            var_3 = var_3 + scripts\engine\utility::string( var_2 );

        playfxontag( scripts\engine\utility::getfx( "_encstr_9FBE2C9B32B3E058DA1FF1FB4BC5603D7F3AF0CDAA7B23F8F507A7C171EB90081B710968038FE9904103A1EB9995" ), self, var_3 );
    }
}

jugg_protect_jammer_internal()
{
    killfxontag( scripts\engine\utility::getfx( "_encstr_87202BEEA49AEF166D793A2270BFCD9B1199497E4F637F1D6D61B32B58D144BF2868CBE15E2993A767B8DB4330" ), self, "_encstr_AA86070AB8A8FABC2B" );

    for ( var_0 = 1; var_0 <= 3; var_0++ )
    {
        var_1 = "_encstr_B8BF073A0BD9F5CC0F";

        if ( var_0 > 1 )
            var_1 = var_1 + scripts\engine\utility::string( var_0 );

        stopfxontag( scripts\engine\utility::getfx( "_encstr_9FBE2C9B32B3E058DA1FF1FB4BC5603D7F3AF0CDAA7B23F8F507A7C171EB90081B710968038FE9904103A1EB9995" ), self, var_1 );
    }
}

joininprogresstimeout()
{
    self endon( "_encstr_A3750609A5E61883" );
    self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_B15C12F9261B371343A12A7308BF0807B39F5264" );
    wait( jug_spawn_func() );
    self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_A204108EB970B9AB75492F73712803CD08E1" );
}

#using_animtree("_encstr_B1CF0CC7CF3E927058D976FD7148");

jug_spawn_func()
{
    return getanimlength( %_encstr_98D0204B2127DBD24828135F39A3A1D3194D55C91D8B53049058D773D03874BA95D4 );
}

jugg_assault3_check_size( var_0 )
{
    var_1 = var_0.victim;
    var_1 jug_trigger_spawn( var_0.attacker );
    var_1 jugg_canuseweaponpickups();
    var_1 thread jug_encounter_test( var_0.attacker, 1 );
}

jugg_modifyvehicletoplayerdamage()
{
    if ( isagent( self ) )
        return;

    if ( istrue( self.isx1ops ) )
        return;

    self.isx1ops = 1;
    stopfxontag( scripts\engine\utility::getfx( "_encstr_BCDF1C353312E7AFA98ED87E2123C3366B82FF2517E3D7831FD918814978" ), self, "_encstr_87DA078B11C012A35F" );
    waitframe();
    var_0 = playfxontagforclients( scripts\engine\utility::getfx( "_encstr_BCDF1C353312E7AFA98ED87E2123C3366B82FF2517E3D7831FD918814978" ), self, "_encstr_87DA078B11C012A35F", self );
}

jugg_objective_struct( var_0 )
{
    if ( isagent( self ) )
        return;

    if ( istrue( var_0 ) )
        killfxontag( scripts\engine\utility::getfx( "_encstr_BCDF1C353312E7AFA98ED87E2123C3366B82FF2517E3D7831FD918814978" ), self, "_encstr_87DA078B11C012A35F" );

    stopfxontag( scripts\engine\utility::getfx( "_encstr_BCDF1C353312E7AFA98ED87E2123C3366B82FF2517E3D7831FD918814978" ), self, "_encstr_87DA078B11C012A35F" );
    self.isx1ops = 0;
}

jugg_canparachute( var_0 )
{
    var_1 = var_0.attacker;
    var_2 = var_0.objweapon;
    var_3 = var_0.meansofdeath;
    var_4 = var_0.damage;
    var_5 = var_4;
    var_5 = scripts\mp\damage::handlemeleedamage( var_2, var_3, var_5 );
    var_5 = scripts\mp\damage::handleapdamage( var_2, var_3, var_5 );
    scripts\mp\weapons::equipmenthit( self.owner, var_1, var_2, var_3 );
    return var_5;
}

jugg_canuseweaponpickups()
{
    if ( !isdefined( self.trigger.participants ) )
        self.trigger.participants = [];

    var_0 = scripts\engine\utility::array_combine_unique( self.trigger.triggerenterents, self.trigger.participants );

    foreach ( var_2 in var_0 )
        var_2 jugg_enter_combat_callback( var_2, self.trigger );

    jugg_protect_jammer_internal();
    level.iswztrain.instances = scripts\engine\utility::array_remove( level.iswztrain.instances, self );
    _encstr_A83527375FF36358943A0858E22728AFFAAFA1ABAB2A36DADA520ED34B55D05D71772933B3C6F4F0F3::lastdirtyscore();
    waitframe();
    self.trigger delete();
    self notify( "_encstr_BEE809E453189A1FB6FBCA" );
}

jugg_canreload( var_0 )
{
    var_1 = var_0.attacker;
    jug_trigger_spawn( var_1 );
    thread jug_encounter_test( var_1, 1 );
}

jug_encounter_test( var_0, var_1, var_2 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    thread jeep_initdamage( var_0, var_1 );
    self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_8A311316361D2D3BB2442BB98E27ED2FD4A385C947", 0 );
    self._id_122F2 = 1;

    if ( !isdefined( var_2 ) )
        var_2 = 0.15;

    wait( var_2 );
    self.explosion delete();

    if ( isdefined( self ) )
        self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_A294111A10E15CDB51D5959BE59B77E03BD0D2", 0 );
}

jeep_initdamage( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self notify( "_encstr_BEE809E453189A1FB6FBCA" );
    self notify( "_encstr_A3750609A5E61883" );
    self setscriptablepartstate( "_encstr_80DD0C1AB12E0F71AB57D9A211F8", "_encstr_9819045FD029" );
    self.owner scripts\cp\vehicles\vehicle_compass_cp::_id_12032( "_encstr_AD2F0DD8973091DDC1331EA80A8AF3", self.usedcount, var_0, var_1 );
    scripts\mp\analyticslog::logevent_fieldupgradeexpired( self.owner, self.superid, self.usedcount, istrue( var_1 ) );
    level.mines[self getentitynumber()] = undefined;
    self setcandamage( 0 );

    if ( !istrue( self.issuper ) )
    {
        self makeunusable();
        scripts\mp\weapons::makeexplosiveunusuabletag();
    }

    scripts\cp_mp\entityheadicons::setheadicon_deleteicon( self.headiconid );
    self.headiconid = undefined;
    self.exploding = 1;

    if ( isdefined( self.owner ) )
    {
        self.owner notify( "_encstr_B7F50EE8C9ED0743F2D7EAC1C8B01D56", 0 );
        self.owner scripts\mp\weapons::removeequip( self );
    }

    jugg_canuseweaponpickups();
    self setscriptablepartstate( "_encstr_AFCD06E7E630CBC7", "_encstr_9BA4080D39CFFB5AB7C1", 0 );
    self setscriptablepartstate( "_encstr_8CCC08BAB3EB9177A5B7", "_encstr_A294111A10E15CDB51D5959BE59B77E03BD0D2", 0 );
    wait 2.0;
    scripts\cp_mp\ent_manager::deregisterspawn();
    self delete();
}

jug_trigger_spawn( var_0 )
{
    if ( istrue( scripts\cp_mp\utility\player_utility::playersareenemies( self.owner, var_0 ) ) )
    {
        var_0 notify( "_encstr_B6BB140AE56FC14D7781B0FDAF0869F3E818D827BDEB" );
        var_0 thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_B6BB140AE56FC14D7781B0FDAF0869F3E818D827BDEB" );
        var_0 thread scripts\mp\battlechatter_mp::equipmentdestroyed( self );
    }
}

jeep_horn()
{
    var_0 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self.origin );
    var_0.killcament = self;
    var_0.owner = self.owner;
    var_0.team = self.team;
    var_0.equipmentref = self.equipmentref;
    var_0.weapon_name = self.weapon_name;
    var_0 setotherent( var_0.owner );
    var_0 setentityowner( var_0.owner );
    var_0 setmodel( "_encstr_A4B2198E39ED3843BCBEDC2F6E4759B5F5B607BEB2873863EDC8AC" );
    var_0.explode1available = 1;
    return var_0;
}

jeep_initcollision()
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_8AE90E7D08B8538A21DB77CF1155D2B3" );
    var_0 = getdvarfloat( "_encstr_B2F01E4B12EBB0B88A7FE9D1813960EE771A46901AEBD5A9275DF53B949CD0B8", 0 );
    self setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_BECC05FC5321BA", 0 );
    wait( var_0 );
    self setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_B7180526C81F4B", 0 );
}

jeep( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_8AE90E7D08B8538A21DB77CF1155D2B3" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_1 = scripts\engine\utility::_id_143B9( 2, "_encstr_ADEC120BD083C04B706DA138630950D0175FFB83" );

    if ( var_1 == "_encstr_945408D1B4B556B7BA3A" )
        return;

    var_2 = undefined;
    var_3 = tablesort( self.origin, 500, 500 );
    var_3[var_3.size] = self;
    var_4 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 1, 1, 0, 1 );
    var_5 = self.origin;
    var_6 = -2000.0;
    var_7 = self.origin + ( 0.0, 0.0, var_6 );
    var_8 = scripts\engine\trace::ray_trace( var_5, var_7, var_3, var_4 );

    if ( var_8["_encstr_B130095358E1B3930B687D"] < 1.0 )
    {
        var_2 = var_8["_encstr_B60E07C9FD1C2055E3"];

        if ( isdefined( var_2 ) )
        {
            if ( tugofwar_tank( var_2 ) )
                self.origin = var_0.origin;
        }
    }
}

tugofwar_tank( var_0 )
{
    if ( isdefined( level._id_145F1 ) )
    {
        foreach ( var_2 in level._id_145F1._id_13C8D )
        {
            if ( var_2 == var_0 )
                return 1;
            else if ( isdefined( var_2.wz_tease ) && var_2.wz_tease == var_0 )
                return 1;
        }
    }

    return 0;
}

jugg_health_debug()
{
    if ( self.owner scripts\mp\equipment::hasequipment( "_encstr_801C14955CEA960EFA32568DDE9BBEDC1D853A5AF673" ) )
        self.owner javelin_interact_monitor( self.ammo );
}
