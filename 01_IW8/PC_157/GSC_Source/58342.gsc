// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_1380C( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( !isdefined( var_6 ) )
        var_6 = 1;

    if ( !isdefined( var_5 ) )
        var_5 = 1;

    ammo_manager();

    if ( !ammo_cache_used() )
        return;

    if ( isdefined( self._id_136E6 ) )
    {
        if ( isdefined( self._id_136E6.type ) && self._id_136E6.type == var_0 )
        {
            _id_12CBB( var_1 );
            return;
        }
        else
        {
            if ( isdefined( var_4 ) )
                self._id_136E6.sfx_ext_walla = 0;

            _id_138C8();
        }
    }

    self._id_136E6 = spawnstruct();
    self._id_136E6.type = var_0;
    self._id_136E6.sfx_infil_hackney_heli1_rope = isdefined( var_3 );
    self._id_136E6.sfx_ext_walla = isdefined( var_4 );
    thread ammo_crate_think( var_0, var_1, var_2, var_3, var_4, var_5, var_6 );
}

preinfilstreamfunc()
{
    if ( isdefined( self._id_136E6 ) && isdefined( self._id_136E6.type ) )
        return self._id_136E6.type;

    return undefined;
}

_id_12CBB( var_0 )
{
    if ( isdefined( self._id_136E6 ) && isdefined( self._id_136E6.type ) )
        self notify( "_encstr_BDE818DEC2BD886149B538906344C92B41C5B3220FB2BFA373B3", var_0 );
}

_id_138C8()
{
    if ( isdefined( self._id_136E6 ) && isdefined( self._id_136E6.type ) )
    {
        ammo_crate_spawn();
        var_0 = self._id_136E6.type;
        self._id_136E6 = undefined;
        self notify( "_encstr_9DB012B98E7B1CFACD832BB28CD74CF67BE61DBE" + var_0 );
    }
}

ammo_crate_think( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_9DB012B98E7B1CFACD832BB28CD74CF67BE61DBE" + var_0 );
    self notify( "_encstr_A153131243C0BA83105F733F6BA579E208888A5BDE" + var_0 );

    if ( istrue( var_6 ) )
        childthread ammo_crate_trial_think();

    childthread ammo_crates();
    childthread ammo_crate_use();
    childthread ammo_cache_setup( var_2, var_3, var_4, var_5 );
    self refreshsprinttime();
    ammobox_bufferedattachmentweapon( var_1 );
    _id_138C8();
}

ammo_crates()
{
    scripts\engine\utility::_id_143A5( "_encstr_A3750609A5E61883", "_encstr_8F3521838D859795C9FADCB247FAA59B995AE6163ACAEB37AEE095C9D7CD1C9396B9D1" );
    thread _id_138C8();
}

ammo_crate_trial_think()
{
    for (;;)
    {
        self waittill( "_encstr_B8BE07320B5B16ECAC", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 );

        if ( level.gametype == "_encstr_9507034B25" && ( var_4 == "_encstr_A43E119D6859218C97A9F7EFD14F4F98831E53" || var_4 == "_encstr_B7B50CA138DF6F7FE3ABC048AF3B" ) )
            continue;

        thread _id_138C8();
        return;
    }
}

ammo_crate_use()
{
    level scripts\engine\utility::_id_143A5( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    thread _id_138C8();
}

ammobox_bufferedattachmentweapon( var_0 )
{
    var_1 = gettime() + var_0 * 1000;
    self setclientomnvar( "_encstr_B4FC16BDD0276B8B38A8678112B5B3EF4B6D2FFB4B1F132B", var_1 );
    var_2 = _id_143CC( "_encstr_BDE818DEC2BD886149B538906344C92B41C5B3220FB2BFA373B3", var_0 );

    if ( isstring( var_2 ) && var_2 == "_encstr_945408D1B4B556B7BA3A" )
        return;
    else
        ammobox_bufferedattachmentweapon( var_2 );
}

ammo_cache_setup( var_0, var_1, var_2, var_3 )
{
    self.movespeedscaler = var_0;
    scripts\mp\weapons::updatemovespeedscale();

    if ( !_encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::shouldlink() )
    {
        scripts\mp\utility\perk::giveperk( "_encstr_B206166E0EACC6A52CC6A397EBB9C1E42D9B1DB556C62BB2" );
        scripts\mp\utility\perk::giveperk( "_encstr_9C1F1473C8438810CFF91D9951EF2B3AA3E6947621EB" );
        scripts\mp\utility\perk::giveperk( "_encstr_821213B263400BF2EF8183AFFF813A52188BEC3D18" );
    }

    if ( isdefined( var_1 ) )
        ammobox_addrandomweapon( var_1 );

    if ( isdefined( var_2 ) && ammo_cache_think() )
    {
        self._id_136E6.sfx_ext_walla = 1;
        self lerpfovbypreset( var_2 );
    }
    else
        self._id_136E6.sfx_ext_walla = 0;

    if ( var_3 )
        self setclientomnvar( "_encstr_A21F1BE543698A532B6BBAF311750B879811576CFB5017ABD80333BB79", 4 );
}

ammo_crate_spawn()
{
    if ( ammo_cache_used() )
    {
        if ( scripts\mp\utility\perk::_hasperk( "_encstr_94C9162F219AE69F03F8E0EA38AA91906BEB586BB0AF930B" ) )
            self.movespeedscaler = scripts\mp\utility\perk::lightweightscalar();
        else
            self.movespeedscaler = 1;

        scripts\mp\weapons::updatemovespeedscale();
    }

    if ( !_encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::shouldlink() )
    {
        scripts\mp\utility\perk::removeperk( "_encstr_B206166E0EACC6A52CC6A397EBB9C1E42D9B1DB556C62BB2" );
        scripts\mp\utility\perk::removeperk( "_encstr_9C1F1473C8438810CFF91D9951EF2B3AA3E6947621EB" );
        scripts\mp\utility\perk::removeperk( "_encstr_821213B263400BF2EF8183AFFF813A52188BEC3D18" );
    }

    ammo_restock();

    if ( ammo_cache_think() && self._id_136E6.sfx_ext_walla )
        self lerpfovbypreset( "_encstr_98791151FD0F98353BC396335BF7E630A554C7" );

    self setclientomnvar( "_encstr_A21F1BE543698A532B6BBAF311750B879811576CFB5017ABD80333BB79", 0 );
}

ammobox_addrandomweapon( var_0 )
{
    if ( isdefined( self._id_12147 ) )
        self._id_136E6.sfx_infil_hackney_heli1_rope = 0;
    else
    {
        self._id_136E6.sfx_infil_hackney_heli1_rope = 1;
        self._id_12147 = self.operatorcustomization.suit;
        self.operatorcustomization.suit = var_0;
        scripts\mp\utility\player::_setsuit( var_0 );
    }
}

ammo_restock()
{
    if ( !isdefined( self._id_12147 ) )
        return;

    if ( istrue( self._id_136E6.sfx_infil_hackney_heli1_rope ) )
    {
        self.operatorcustomization.suit = self._id_12147;
        scripts\mp\utility\player::_setsuit( self._id_12147 );
        self._id_12147 = undefined;
    }
}

ammo_cache_used()
{
    if ( ( !isdefined( self.isjuiced ) || !istrue( self.isjuiced ) ) && ( !isdefined( self.cranked ) || !istrue( self.cranked ) ) && ( !isdefined( self.isjuggernaut ) || !istrue( self.isjuggernaut ) ) && ( !isdefined( self.adrenalinepoweractive ) || !istrue( self.adrenalinepoweractive ) ) && !allassassin_initteamlist_timed( "_encstr_BC570CD37BBF600CD876854F9858" ) )
        return 1;

    return 0;
}

ammo_cache_think()
{
    if ( ( !isdefined( self.adrenalinepoweractive ) || !istrue( self.adrenalinepoweractive ) ) && !allassassin_initteamlist_timed( "_encstr_BC570CD37BBF600CD876854F9858" ) )
        return 1;

    return 0;
}

ammo_manager()
{
    if ( allassassin_initteamlist_timed( "_encstr_BC570CD37BBF600CD876854F9858" ) )
    {
        if ( isdefined( level._id_12838 ) && isdefined( level._id_12838.area1_targets ) )
        {
            foreach ( var_1 in level._id_12838.area1_targets )
            {
                if ( var_1._id_138FD == "_encstr_BC570CD37BBF600CD876854F9858" )
                {
                    var_2 = _keypadscriptableused_bunkeralt::_id_1249C( var_1._id_138FD );

                    if ( isdefined( var_2 ) )
                        var_2 thread _keypadscriptableused_bunkeralt::isempdamage();
                }
            }
        }
    }
}

allassassin_initteamlist_timed( var_0 )
{
    if ( !isdefined( level._id_12838 ) || !isdefined( level._id_12838.applyquest ) )
        return 0;

    var_1 = level._id_12838.applyquest[var_0];

    if ( isdefined( var_1 ) && scripts\engine\utility::array_contains( var_1, self ) )
        return 1;

    return 0;
}

_id_143CC( var_0, var_1 )
{
    var_2 = spawnstruct();
    thread _id_143CD( var_2, var_0 );
    thread scripts\engine\utility::waittill_timeout_proc( var_2, var_1 );
    var_2 waittill( "_encstr_AD620EEE2CD2A31DA563367D3839DBB1", var_3 );
    return var_3;
}

_id_143CD( var_0, var_1 )
{
    var_0 endon( "_encstr_AD620EEE2CD2A31DA563367D3839DBB1" );
    self waittill( var_1, var_2 );
    var_0 notify( "_encstr_AD620EEE2CD2A31DA563367D3839DBB1", var_2 );
}
