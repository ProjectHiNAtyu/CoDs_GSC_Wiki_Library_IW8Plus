// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

callback_hostmigration()
{
    level.hostmigrationreturnedplayercount = 0;

    if ( level.gameended )
        return;

    if ( drawentitybounds() )
        analyticsstreamerlogfilewritetobuffer();

    level thread hostmigrationconnectwatcher();

    foreach ( var_1 in level.characters )
        var_1.hostmigrationcontrolsfrozen = 0;

    level.hostmigrationtimer = 1;
    setdvar( "_encstr_9DE41383BA5793500477F7E16DACD0E65783984872", 1 );
    level.hostmigration = 1;
    level notify( "_encstr_A33F15D07BB93AEBB6B43B9C2C472D7BDC7D4C59765ADC" );
    scripts\mp\gamelogic::updatetimerpausedness();

    foreach ( var_1 in level.characters )
    {
        if ( !isdefined( var_1 ) )
            continue;

        var_1 thread hostmigrationtimerthink();

        if ( isplayer( var_1 ) )
        {
            var_1 setclientomnvar( "_encstr_AACB1107983EAB8A075EB42DC8B723540198DF", var_1.sessionstate );

            if ( drawentitybounds() )
                analyticsstreamerislogfilestreamingenabled( var_1.guid );
        }
    }

    level endon( "_encstr_A33F15D07BB93AEBB6B43B9C2C472D7BDC7D4C59765ADC" );
    hostmigrationwait();
    level.hostmigrationtimer = undefined;
    setdvar( "_encstr_9DE41383BA5793500477F7E16DACD0E65783984872", 0 );
    visionsetthermal( game["_encstr_BA4A0F471A5693D616D8F53B2DCD967BB9"] );
    level.hostmigration = 0;
    level notify( "_encstr_B6A51386ED9B1DF5DA9676938547D2B7DCD756DCC8" );
    scripts\mp\gamelogic::updatetimerpausedness();
    level thread [[ level.updategameevents ]]();
}

hostmigrationconnectwatcher()
{
    level endon( "_encstr_B6A51386ED9B1DF5DA9676938547D2B7DCD756DCC8" );
    level endon( "_encstr_A33F15D07BB93AEBB6B43B9C2C472D7BDC7D4C59765ADC" );
    level waittill( "_encstr_87940A7F075A88E8ABD37951", var_0 );
    var_0 thread hostmigrationtimerthink();

    if ( isplayer( var_0 ) )
        var_0 setclientomnvar( "_encstr_AACB1107983EAB8A075EB42DC8B723540198DF", var_0.sessionstate );
}

hostmigrationwait()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level.ingraceperiod = 25;
    thread scripts\mp\gamelogic::matchstarttimer( "_encstr_AD7914BB854BA35AE6B3AF99DE93EB073658F2B2C937", 20.0 );
    hostmigrationwaitforplayers();
    level.ingraceperiod = 10;
    thread scripts\mp\gamelogic::matchstarttimer( "_encstr_9BB91229576C1E7026C8456AAD408032172F637A", 5.0 );
    wait 5;
    level.ingraceperiod = 0;

    foreach ( var_1 in level.players )
    {
        var_1 setclientomnvar( "_encstr_B4A919A51461E3C1316EA8C703FDC9E8DDA96E6AABB5A16FE7B410", 0 );
        var_1 setclientomnvar( "_encstr_932315EAA5F56B2CE86CD0D72D9BFAC14E7B3B9356B937", 1 );
    }

    if ( istrue( level.forfeitinprogress ) && !istrue( level.forfeit_aborted ) )
        setomnvar( "_encstr_B87014CB57B91FA28B9B0B7766414F662B69F3025BCB", "_encstr_82B017E7B342981BC9F013D96CDD90480F34189C76FFC92CEA" );
}

hostmigrationwaitforplayers()
{
    level endon( "_encstr_BA3E1C0DEDE63AB65A9D93B0D1A5B7B9AF569BF657760D0E1B85E556E437" );
    wait 15;
}

hostmigrationname( var_0 )
{
    if ( !isdefined( var_0 ) )
        return "_encstr_BC0F0E873959B5BDCE5946EBAC373AF1";

    var_1 = -1;
    var_2 = "_encstr_AD4C0247";

    if ( isdefined( var_0.entity_number ) )
        var_1 = var_0.entity_number;

    if ( isplayer( var_0 ) && isdefined( var_0.name ) )
        var_2 = var_0.name;

    if ( isplayer( var_0 ) )
        return "_encstr_BAF809E08D0B5EACE401E1" + var_2 + "_encstr_824C0272";

    if ( isagent( var_0 ) && scripts\mp\utility\entity::isgameparticipant( var_0 ) )
        return "_encstr_8B9F1470DF23BB3CA710535A30D126A7F9B5969CC742" + var_1 + "_encstr_824C0272";

    if ( isagent( var_0 ) )
        return "_encstr_9C3518A0F0C8C13359EEE1130E3CFBC87BF3C19BEF2FE09B5EA9" + var_1 + "_encstr_824C0272";

    return "_encstr_A99C119BAD53488833F31193DB2BC320E9962A" + var_1 + "_encstr_824C0272";
}

hostmigrationtimerthink_internal()
{
    level endon( "_encstr_A33F15D07BB93AEBB6B43B9C2C472D7BDC7D4C59765ADC" );
    level endon( "_encstr_B6A51386ED9B1DF5DA9676938547D2B7DCD756DCC8" );

    while ( !scripts\mp\utility\player::isreallyalive( self ) )
        self waittill( "_encstr_983508635BE787C548A1" );

    self.hostmigrationcontrolsfrozen = 1;
    scripts\mp\utility\player::_freezecontrols( 1, undefined, "_encstr_B46B13315FD3DD81992FB3291371581879EF83A3B3" );
    level waittill( "_encstr_B6A51386ED9B1DF5DA9676938547D2B7DCD756DCC8" );
}

hostmigrationtimerthink()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    hostmigrationtimerthink_internal();

    if ( self.hostmigrationcontrolsfrozen )
    {
        scripts\mp\utility\player::_freezecontrols( 0, undefined, "_encstr_B46B13315FD3DD81992FB3291371581879EF83A3B3" );
        self.hostmigrationcontrolsfrozen = undefined;
    }
}

waittillhostmigrationdone()
{
    if ( !isdefined( level.hostmigrationtimer ) )
        return 0;

    var_0 = gettime();
    level waittill( "_encstr_B6A51386ED9B1DF5DA9676938547D2B7DCD756DCC8" );
    return gettime() - var_0;
}

waittillhostmigrationstarts( var_0 )
{
    if ( isdefined( level.hostmigrationtimer ) )
        return;

    level endon( "_encstr_A33F15D07BB93AEBB6B43B9C2C472D7BDC7D4C59765ADC" );
    wait( var_0 );
}

waitlongdurationwithhostmigrationpause( var_0 )
{
    if ( var_0 == 0 )
        return;

    var_1 = gettime();
    var_2 = gettime() + var_0 * 1000;

    while ( gettime() < var_2 )
    {
        waittillhostmigrationstarts( ( var_2 - gettime() ) / 1000 );

        if ( isdefined( level.hostmigrationtimer ) )
        {
            var_3 = waittillhostmigrationdone();
            var_2 = var_2 + var_3;
        }
    }

    waittillhostmigrationdone();
    return gettime() - var_1;
}

waittill_notify_or_timeout_hostmigration_pause( var_0, var_1 )
{
    self endon( var_0 );

    if ( var_1 == 0 )
        return;

    var_2 = gettime();
    var_3 = gettime() + var_1 * 1000;

    while ( gettime() < var_3 )
    {
        waittillhostmigrationstarts( ( var_3 - gettime() ) / 1000 );

        if ( isdefined( level.hostmigrationtimer ) )
        {
            var_4 = waittillhostmigrationdone();
            var_3 = var_3 + var_4;
        }
    }

    waittillhostmigrationdone();
    return gettime() - var_2;
}

waitlongdurationwithgameendtimeupdate( var_0 )
{
    if ( var_0 == 0 )
        return;

    var_1 = gettime();
    var_2 = gettime() + var_0 * 1000;

    while ( gettime() < var_2 )
    {
        waittillhostmigrationstarts( ( var_2 - gettime() ) / 1000 );

        while ( isdefined( level.hostmigrationtimer ) )
        {
            var_2 = var_2 + 1000;
            setgameendtime( int( var_2 ) );
            wait 1;
        }
    }

    while ( isdefined( level.hostmigrationtimer ) )
    {
        var_2 = var_2 + 1000;
        setgameendtime( int( var_2 ) );
        wait 1;
    }

    return gettime() - var_1;
}
