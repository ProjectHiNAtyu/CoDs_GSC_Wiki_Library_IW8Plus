// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

guy_enter( var_0, var_1 )
{
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( !isdefined( self ) || !isalive( self ) )
        return;

    if ( !isdefined( self.vehicletype ) )
        return;

    var_2 = scripts\common\vehicle_code::get_vehicle_classname();
    var_3 = level.vehicle.templates.aianims[var_2];
    self.attachedguys[self.attachedguys.size] = var_0;
    var_4 = set_pos( var_0, var_3 );

    if ( !isdefined( var_4 ) )
        return;

    if ( var_4 == 0 )
        var_0.drivingvehicle = 1;

    var_5 = anim_pos( self, var_4 );
    self.usedpositions[var_4] = 1;
    var_0.vehicle_position = var_4;
    var_0.vehicle_idling = 0;

    if ( isdefined( var_5.delay ) )
    {
        var_0.delay = var_5.delay;

        if ( isdefined( var_5.delayinc ) )
            self.delayer = var_0.delay;
    }

    if ( isdefined( var_5.delayinc ) )
    {
        self.delayer = self.delayer + var_5.delayinc;
        var_0.delay = self.delayer;
    }

    var_0.ridingvehicle = self;
    var_0.orghealth = var_0.health;
    var_0.vehicle_idle = var_5.idle;
    var_0.vehicle_standattack = var_5.standattack;

    if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
    {
        var_0.deathanim = var_5.death;
        var_0.deathanimscript = var_5.deathscript;
    }

    var_0.standing = 0;
    var_0.allowdeath = 1;

    if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
    {
        if ( isdefined( var_0.deathanim ) && !isdefined( var_0.magic_bullet_shield ) && vehicle_allows_rider_death() )
        {
            if ( var_0.vehicle_position != 0 || vehicle_allows_driver_death() )
            {
                var_0.allowdeath = !isdefined( var_0.script_allowdeath ) || var_0.script_allowdeath;

                if ( isdefined( var_5.death_no_ragdoll ) )
                    var_0.noragdoll = var_5.death_no_ragdoll;
            }
        }
    }
    else if ( !isdefined( var_0.magic_bullet_shield ) && vehicle_allows_rider_death() )
    {
        var_0.allowdeath = !isdefined( var_0.script_allowdeath ) || var_0.script_allowdeath;

        if ( isdefined( var_5.death_no_ragdoll ) )
            var_0.noragdoll = var_5.death_no_ragdoll;
    }

    if ( !isdefined( var_0.classname ) )
        return;

    if ( var_0.classname == "_encstr_93DC0DCD1B272D3847AF5BED23B2C6" )
    {
        if ( isdefined( var_5.death ) && var_0.allowdeath && ( !isdefined( var_0.script_allowdeath ) || var_0.script_allowdeath ) )
            thread guy_death( var_0, var_5 );
    }

    self.riders[self.riders.size] = var_0;

    if ( var_0.classname != "_encstr_93DC0DCD1B272D3847AF5BED23B2C6" && scripts\common\ai::spawn_failed( var_0 ) )
        return;

    var_6 = self gettagorigin( var_5.sittag );
    var_7 = self gettagangles( var_5.sittag );

    if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
        link_to_sittag( var_0, var_5.sittag, var_5.sittag_origin_offset, var_5.sittag_angles_offset, var_5.linktoblend );
    else if ( !var_0 scripts\vehicle\vehicle_common::hasvehicle() )
    {
        var_8 = vehicle_getinstart( var_4 );
        var_0 scripts\vehicle\vehicle_common::entervehicle( self, 1, var_8, var_5 );
    }

    if ( isai( var_0 ) )
    {
        if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
            var_0 forceteleport( var_6, var_7 );

        if ( isdefined( var_0.a ) )
            var_0.a.disablelongdeath = 1;

        if ( isdefined( var_5.bhasgunwhileriding ) && !var_5.bhasgunwhileriding )
            var_0 scripts\common\ai::gun_remove();

        if ( guy_should_man_turret( var_5 ) )
            thread guy_man_turret( var_0, var_4, var_1 );
    }
    else
    {
        if ( isdefined( var_5.bhasgunwhileriding ) && !var_5.bhasgunwhileriding )
            detach_models_with_substr( var_0, "_encstr_B80108EE2BB0837B737D" );

        var_0.origin = var_6;
        var_0.angles = var_7;
    }

    if ( var_4 == 0 )
    {
        self.driver = var_0;

        if ( getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) || isdefined( var_3[0].death ) )
            thread driverdead( var_0 );
    }

    self notify( "_encstr_BCA80CF14359D995CAE3F3A5DF12", var_0, var_4 );
    var_0 notify( "_encstr_9FD20763A8F9BC8A29" );
    scripts\engine\utility::ent_flag_clear( "_encstr_B78209C5982017FE69B0D2" );
    thread guy_handle( var_0, var_4 );

    if ( isdefined( var_5.rider_func ) )
    {
        var_0 [[ var_5.rider_func ]]();
        return;
    }

    if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
    {
        if ( isdefined( var_5.getin_idle_func ) )
            thread [[ var_5.getin_idle_func ]]( var_0, var_4 );
        else
            thread guy_idle( var_0, var_4 );
    }
}

vehicle_allows_driver_death()
{
    if ( !isdefined( self.script_allow_driver_death ) )
        return 0;

    return self.script_allow_driver_death;
}

vehicle_allows_rider_death()
{
    if ( !isdefined( self.script_allow_rider_deaths ) )
        return 1;

    return self.script_allow_rider_deaths;
}

guy_should_man_turret( var_0 )
{
    if ( !isdefined( var_0.mgturret ) )
        return 0;

    if ( !isdefined( self.script_nomg ) )
        return 1;

    return !self.script_nomg;
}

handle_attached_guys()
{
    var_0 = scripts\common\vehicle_code::get_vehicle_classname();
    self.attachedguys = [];

    if ( !( isdefined( level.vehicle.templates.aianims ) && isdefined( level.vehicle.templates.aianims[var_0] ) ) )
        return;

    var_1 = level.vehicle.templates.aianims[var_0].size;

    if ( isdefined( self.script_noteworthy ) && self.script_noteworthy == "_encstr_981B0B67A80E9FFA23CD29DFB8" )
        thread ai_wait_go();

    self.runningtovehicle = [];
    self.usedpositions = [];
    self.getinorgs = [];
    self.delayer = 0;
    var_2 = level.vehicle.templates.aianims[var_0];

    for ( var_3 = 0; var_3 < var_1; var_3++ )
    {
        self.usedpositions[var_3] = 0;

        if ( isdefined( self.script_nomg ) && self.script_nomg && isdefined( var_2[var_3].bisgunner ) && var_2[var_3].bisgunner )
            self.usedpositions[1] = 1;
    }
}

load_ai_goddriver( var_0 )
{
    load_ai( var_0, 1 );
}

guy_death( var_0, var_1 )
{
    waittillframeend;
    var_0 setcandamage( 1 );
    var_0 endon( "_encstr_A3750609A5E61883" );
    var_0.allowdeath = 0;
    var_0.health = 10150;

    if ( isdefined( var_0.script_startinghealth ) )
        var_0.health = var_0.health + var_0.script_startinghealth;

    var_0 endon( "_encstr_89450C706B8F0F78B54F9FC7651B" );

    if ( isdefined( var_0.magic_bullet_shield ) && var_0.magic_bullet_shield )
    {
        while ( isdefined( var_0.magic_bullet_shield ) && var_0.magic_bullet_shield )
            wait 0.05;
    }

    while ( var_0.health > 10000 )
        var_0 waittill( "_encstr_B8BE07320B5B16ECAC" );

    thread guy_deathimate_me( var_0, var_1 );
}

guy_deathimate_me( var_0, var_1 )
{
    var_2 = gettime() + getanimlength( var_1.death ) * 1000;
    var_3 = var_0.angles;
    var_4 = var_0.origin;
    var_0 = convert_guy_to_drone( var_0 );
    detach_models_with_substr( var_0, "_encstr_B80108EE2BB0837B737D" );
    var_0 linkto( self );
    var_0 notsolid();
    var_0 setanim( var_1.death );

    if ( isai( var_0 ) )
        var_0 scripts\engine\utility::script_func( "_encstr_AA1216E85B89706792527087EE6A79B9E1A740508B57E8F7" );
    else
        detach_models_with_substr( var_0, "_encstr_B80108EE2BB0837B737D" );

    if ( isdefined( var_1.death_delayed_ragdoll ) )
    {
        var_0 unlink();

        if ( isdefined( var_0.fnpreragdoll ) )
            var_0 [[ var_0.fnpreragdoll ]]();

        var_0 startragdoll();
        wait( var_1.death_delayed_ragdoll );
        var_0 delete();
        return;
    }
}

load_ai( var_0, var_1, var_2 )
{
    self endon( "_encstr_A3750609A5E61883" );

    if ( var_0.size )
    {
        if ( !isdefined( var_1 ) )
            var_1 = 0;

        scripts\engine\utility::ent_flag_clear( "_encstr_B78209C5982017FE69B0D2" );
        scripts\engine\utility::ent_flag_clear( "_encstr_9FD20763A8F9BC8A29" );
        scripts\engine\utility::array_levelthread( var_0, ::get_in_vehicle, var_1, var_2 );
        scripts\engine\utility::array_wait( var_0, "_encstr_9FD20763A8F9BC8A29" );
    }

    scripts\engine\utility::ent_flag_set( "_encstr_9FD20763A8F9BC8A29" );
}

is_rider( var_0 )
{
    for ( var_1 = 0; var_1 < self.riders.size; var_1++ )
    {
        if ( self.riders[var_1] == var_0 )
            return 1;
    }

    return 0;
}

get_in_vehicle( var_0, var_1, var_2 )
{
    if ( is_rider( var_0 ) )
        return;

    if ( !handle_detached_guys_check() )
        return;

    guy_runtovehicle( var_0, self, var_1, var_2 );
}

handle_detached_guys_check()
{
    if ( vehicle_hasavailablespots() )
        return 1;

    if ( !scripts\common\utility::issp() )
        var_0 = self.classname_mp;
    else
        var_0 = self.class;
}

vehicle_hasavailablespots()
{
    if ( level.vehicle.templates.aianims[scripts\common\vehicle_code::get_vehicle_classname()].size - self.runningtovehicle.size )
        return 1;
    else
        return 0;
}

guy_runtovehicle_loaded( var_0, var_1 )
{
    var_1 endon( "_encstr_A3750609A5E61883" );
    var_1 endon( "_encstr_88010D5325F0DBC1C97012BAB83507" );

    if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
    {
        var_2 = var_0 scripts\engine\utility::_id_143AE( "_encstr_B3530B1BBDDC767D8CCAB03A86", "_encstr_A3750609A5E61883", "_encstr_BA130FCAE6E82B279532B3B2865A8DB195" );

        if ( var_2 != "_encstr_BA130FCAE6E82B279532B3B2865A8DB195" && isdefined( var_0.forced_startingposition ) )
            var_1.usedpositions[var_0.forced_startingposition] = 0;
    }
    else if ( !var_0 scripts\vehicle\vehicle_common::waitforentervehicle() && isdefined( var_0.forced_startingposition ) )
        var_1.usedpositions[var_0.forced_startingposition] = 0;

    var_1.runningtovehicle = scripts\engine\utility::array_remove( var_1.runningtovehicle, var_0 );
    vehicle_loaded_if_full( var_1 );
}

vehicle_loaded_if_full( var_0 )
{
    if ( isdefined( var_0.vehicletype ) && isdefined( var_0.vehicle_loaded_notify_size ) )
    {
        if ( var_0.riders.size == var_0.vehicle_loaded_notify_size )
            var_0 scripts\engine\utility::ent_flag_set( "_encstr_9FD20763A8F9BC8A29" );
    }
    else if ( !var_0.runningtovehicle.size && var_0.riders.size )
    {
        if ( var_0.usedpositions[0] )
            var_0 scripts\engine\utility::ent_flag_set( "_encstr_9FD20763A8F9BC8A29" );
        else if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
            var_0 thread vehicle_reload();
    }
}

vehicle_reload()
{
    var_0 = self.riders;
    scripts\common\vehicle::vehicle_unload();
    scripts\engine\utility::ent_flag_wait( "_encstr_B78209C5982017FE69B0D2" );
    var_0 = scripts\engine\utility::array_removedead( var_0 );
    thread scripts\common\vehicle::vehicle_load_ai( var_0 );
}

remove_magic_bullet_shield_from_guy_on_unload_or_death( var_0 )
{
    scripts\engine\utility::_id_143A5( "_encstr_B2A8075DB9C6BDB032", "_encstr_A3750609A5E61883" );
    var_0 scripts\common\ai::stop_magic_bullet_shield();
}

choose_vehicle_position( var_0, var_1, var_2 )
{
    var_0 endon( "_encstr_88010D5325F0DBC1C97012BAB83507" );
    self endon( "_encstr_88010D5325F0DBC1C97012BAB83507" );

    if ( !isdefined( var_2 ) )
        var_2 = 0;

    var_3 = undefined;
    var_4 = 0;

    if ( isdefined( var_0.script_startingposition ) )
        var_3 = vehicle_getinstart( var_0.script_startingposition );
    else if ( !self.usedpositions[0] )
    {
        var_3 = vehicle_getinstart( 0 );

        if ( var_2 )
        {
            var_0 thread scripts\common\ai::magic_bullet_shield();
            thread remove_magic_bullet_shield_from_guy_on_unload_or_death( var_0 );
        }
    }
    else if ( var_1.availablepositions.size )
        var_3 = scripts\engine\utility::getclosest( var_0.origin, var_1.availablepositions );
    else
        var_3 = undefined;

    return var_3;
}

guy_runtovehicle( var_0, var_1, var_2, var_3 )
{
    var_0 endon( "_encstr_88010D5325F0DBC1C97012BAB83507" );
    var_1 endon( "_encstr_88010D5325F0DBC1C97012BAB83507" );
    var_4 = 1;

    if ( !isdefined( var_2 ) )
        var_2 = 0;

    var_5 = level.vehicle.templates.aianims[var_1 scripts\common\vehicle_code::get_vehicle_classname()];

    if ( isdefined( var_1.runtovehicleoverride ) )
    {
        var_1 thread [[ var_1.runtovehicleoverride ]]( var_0 );
        return;
    }

    var_1 endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    var_1.runningtovehicle[var_1.runningtovehicle.size] = var_0;
    thread guy_runtovehicle_loaded( var_0, var_1 );
    var_6 = [];
    var_7 = undefined;
    var_8 = 0;
    var_9 = getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" );

    for ( var_10 = 0; var_10 < var_5.size; var_10++ )
    {
        if ( isdefined( var_5[var_10].getin ) )
            var_9 = 1;
    }

    if ( !var_9 )
    {
        var_0 notify( "_encstr_BA130FCAE6E82B279532B3B2865A8DB195" );

        if ( getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
        {
            var_7 = choose_vehicle_position( var_0, get_availablepositions( var_3 ), var_2 );
            var_0.forced_startingposition = var_7.vehicle_position;
            var_1.usedpositions[var_7.vehicle_position] = 1;
            var_0 scripts\vehicle\vehicle_common::entervehicle( self, 1, var_7, anim_pos( self, var_0.forced_startingposition ) );
        }

        var_1 guy_enter( var_0, var_4 );
        return;
    }

    if ( !isdefined( var_0.get_in_moving_vehicle ) )
    {
        while ( var_1 vehicle_getspeed() > 1 )
            wait 0.05;
    }

    var_11 = var_1 get_availablepositions( var_3 );

    if ( !var_11.availablepositions.size && var_11.nonanimatedpositions.size )
    {
        var_0 notify( "_encstr_BA130FCAE6E82B279532B3B2865A8DB195" );
        var_1 guy_enter( var_0, var_4 );
        return;
    }

    var_7 = choose_vehicle_position( var_0, var_11, var_2 );

    if ( !isdefined( var_7 ) )
        return;

    var_8 = var_7.origin;
    var_12 = var_7.angles;
    var_0.forced_startingposition = var_7.vehicle_position;
    var_1.usedpositions[var_7.vehicle_position] = 1;

    if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
    {
        var_0.script_moveoverride = 1;
        var_0 notify( "_encstr_A6F51307940558784F3AE870C2D7A5E85116B7912D" );
        var_0 scripts\common\ai::set_forcegoal();
        var_0 scripts\common\ai::disable_arrivals();
        var_0.goalradius = 64;
        var_0 setgoalpos( var_8 );
        var_0 waittill( "_encstr_AA7205F03A9609" );
        var_0 scripts\common\ai::enable_arrivals();
        var_0 scripts\common\ai::unset_forcegoal();
        var_0 notify( "_encstr_94F21198DE1639465ADCCEFA67B234966C1B95" );
    }
    else
    {
        var_0 scripts\vehicle\vehicle_common::requestentervehicle( self, 0, var_7, anim_pos( self, var_7.vehicle_position ) );
        var_0 scripts\vehicle\vehicle_common::waitforarrivedatvehicle();
    }

    var_13 = anim_pos( var_1, var_7.vehicle_position );

    if ( isdefined( var_13.delay ) )
    {
        var_0.delay = var_13.delay;

        if ( isdefined( var_13.delayinc ) )
            self.delayer = var_0.delay;
    }

    if ( isdefined( var_13.delayinc ) )
    {
        self.delayer = self.delayer + var_13.delayinc;
        var_0.delay = self.delayer;
    }

    if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
        var_1 link_to_sittag( var_0, var_13.sittag, var_13.sittag_origin_offset, var_13.sittag_angles_offset, var_13.linktoblend );

    var_0.allowdeath = 0;
    var_13 = var_5[var_7.vehicle_position];

    if ( isdefined( var_7 ) )
    {
        if ( isdefined( var_13.vehicle_getinanim ) )
        {
            var_14 = isdefined( var_0.no_vehicle_getoutanim );

            if ( !var_14 && !isagent( var_0 ) )
            {
                if ( isdefined( var_13.vehicle_getoutanim ) )
                    var_1 clearanim( var_13.vehicle_getoutanim, 0 );

                if ( isdefined( var_13.vehicle_getoutanim_combat ) )
                    var_1 clearanim( var_13.vehicle_getoutanim_combat, 0 );

                if ( isdefined( var_13.vehicle_getoutanim_combat_run ) )
                    var_1 clearanim( var_13.vehicle_getoutanim_combat_run, 0 );
            }

            var_1 = var_1 getanimatemodel();
            var_1 thread setanimrestart_once( var_13.vehicle_getinanim, var_13.vehicle_getinanim_clear );
            var_1 thread scripts\common\notetrack::start_notetrack_wait( var_1, "_encstr_AF7212FD8792A31B4C7FC619A52138F00ACB4B57", undefined, undefined, var_13.vehicle_getinanim );
        }

        if ( isdefined( var_13.vehicle_getinsoundtag ) )
            var_8 = var_1 gettagorigin( var_13.vehicle_getinsoundtag );
        else
            var_8 = var_1.origin;

        if ( isdefined( var_13.vehicle_getinsound ) )
            playworldsound( var_13.vehicle_getinsound, var_8 );

        var_15 = undefined;
        var_16 = undefined;

        if ( isdefined( var_13.getin_enteredvehicletrack ) )
        {
            var_15 = [];
            var_15[0] = var_13.getin_enteredvehicletrack;
            var_16 = [];
            var_16[0] = ::entered_vehicle_notify;
            var_1 link_to_sittag( var_0, var_13.sittag, var_13.sittag_origin_offset, var_13.sittag_angles_offset, var_13.linktoblend );
        }

        if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
            var_1 animontag( var_0, var_13.sittag, var_13.getin, var_15, var_16, undefined, var_13.sittag_origin_offset, var_13.sittag_angles_offset );
    }

    if ( getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
        var_0 scripts\vehicle\vehicle_common::waitforentervehicle();

    var_0 notify( "_encstr_BA130FCAE6E82B279532B3B2865A8DB195" );
    var_1 guy_enter( var_0, var_4 );
}

entered_vehicle_notify()
{
    self notify( "_encstr_BA130FCAE6E82B279532B3B2865A8DB195" );
}

driverdead( var_0 )
{
    if ( scripts\common\vehicle::ishelicopter() )
        return;

    self.driver = var_0;
    self endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_89450C706B8F0F78B54F9FC7651B" );
    var_0 waittill( "_encstr_A3750609A5E61883" );

    if ( getdvarint( "_encstr_BA221E49811B97EE588B0B3F85C034C33D39934008F523A4A0E3321CBB80BB63", 0 ) == 1 )
        return;

    if ( isdefined( self.vehicle_keeps_going_after_driver_dies ) )
        return;

    self notify( "_encstr_A3D00C145640B33F855A121A48F1" );
    self.deaddriver = 1;

    if ( isdefined( self.hasstarted ) && self.hasstarted )
    {
        self setwaitspeed( 0 );
        self vehicle_setspeed( 0, 20, 20 );
        self waittill( "_encstr_82F313BBC573E793FF7B79107A29FB49D318903F80" );
    }

    if ( !istrue( self.donotunloadondriverdeath ) )
        scripts\common\vehicle::vehicle_unload();
}

guy_becomes_real_ai( var_0, var_1 )
{
    if ( isai( var_0 ) )
        return var_0;

    if ( istrue( var_0.drone_delete_on_unload ) )
        var_0 delete();
    else
    {
        var_0 = scripts\engine\utility::script_func( "_encstr_BE3B13B28B1F33F5D5B5C19A37BAFD62673BB397AA", var_0 );

        if ( scripts\common\utility::issp() )
            var_2 = self.classname;
        else
            var_2 = self.classname_mp;

        var_3 = level.vehicle.templates.aianims[var_2].size;
        var_4 = anim_pos( self, var_1 );
        link_to_sittag( var_0, var_4.sittag, var_4.sittag_origin_offset, var_4.sittag_angles_offset, var_4.linktoblend );
        var_0.vehicle_idle = var_4.idle;

        if ( !istrue( var_0.disable_vehicle_idle ) )
            thread guy_idle( var_0, var_1 );
    }
}

link_to_sittag( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( var_2 ) )
        var_2 = ( 0, 0, 0 );

    if ( !isdefined( var_3 ) )
        var_3 = ( 0, 0, 0 );

    if ( !isdefined( var_4 ) )
        var_4 = 0;

    if ( var_4 && !isdefined( var_0.script_drone ) )
        var_0 linktoblendtotag( self, var_1, 0 );
    else
        var_0 linkto( self, var_1, var_2, var_3 );
}

anim_pos( var_0, var_1 )
{
    return level.vehicle.templates.aianims[var_0 scripts\common\vehicle_code::get_vehicle_classname()][var_1];
}

guy_deathhandle( var_0, var_1 )
{
    var_0 waittill( "_encstr_A3750609A5E61883" );

    if ( !isdefined( self ) )
        return;

    self.riders = scripts\engine\utility::array_remove( self.riders, var_0 );
    self.usedpositions[var_1] = 0;
}

setup_aianimthreads()
{
    if ( !isdefined( level.vehicle.aianimthread ) )
        level.vehicle.aianimthread = [];

    if ( !isdefined( level.vehicle.aianimcheck ) )
        level.vehicle.aianimcheck = [];

    level.vehicle.aianimthread["_encstr_9BC505B4461BB2"] = ::guy_idle;
    level.vehicle.aianimthread["_encstr_B2A8075DB9C6BDB032"] = ::guy_unload;
}

guy_handle( var_0, var_1 )
{
    var_0.vehicle_idling = 1;
    thread guy_deathhandle( var_0, var_1 );
}

driver_idle_speed( var_0, var_1 )
{
    var_0 endon( "_encstr_B25B0843334CE29EA048" );
    self endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    var_2 = anim_pos( self, var_1 );

    for (;;)
    {
        if ( self vehicle_getspeed() == 0 )
            var_0.vehicle_idle = var_2.idle_animstop;
        else
            var_0.vehicle_idle = var_2.idle_anim;

        wait 0.25;
    }
}

guy_idle( var_0, var_1, var_2 )
{
    var_0 endon( "_encstr_B25B0843334CE29EA048" );

    if ( !isdefined( var_2 ) )
        self endon( "_encstr_A3750609A5E61883" );

    var_0 endon( "_encstr_A3750609A5E61883" );
    var_0.vehicle_idling = 1;
    var_0 notify( "_encstr_825407AAA0318C6761" );

    if ( !isdefined( var_0.vehicle_idle ) )
        return;

    var_3 = anim_pos( self, var_1 );

    if ( isdefined( var_3.mgturret ) )
        return;

    if ( isdefined( var_3.idle_animstop ) && isdefined( var_3.idle_anim ) )
        thread driver_idle_speed( var_0, var_1 );

    for (;;)
    {
        var_0 notify( "_encstr_9BC505B4461BB2" );
        play_new_idle( var_0, var_3 );
    }
}

play_new_idle( var_0, var_1 )
{
    if ( isdefined( var_0.vehicle_idle_override ) )
    {
        animontag( var_0, var_1.sittag, var_0.vehicle_idle_override, undefined, undefined, undefined, var_1.sittag_origin_offset, var_1.sittag_angles_offset );
        return;
    }

    if ( isdefined( var_1.idleoccurrence ) )
    {
        var_2 = randomoccurrance( var_0, var_1.idleoccurrence );
        animontag( var_0, var_1.sittag, var_0.vehicle_idle[var_2], undefined, undefined, undefined, var_1.sittag_origin_offset, var_1.sittag_angles_offset );
        return;
    }

    if ( isdefined( var_0.playerpiggyback ) && isdefined( var_1.player_idle ) )
    {
        animontag( var_0, var_1.sittag, var_1.player_idle, undefined, undefined, undefined, var_1.sittag_origin_offset, var_1.sittag_angles_offset );
        return;
    }

    if ( isdefined( var_1.vehicle_idle ) )
        thread setanimrestart_once( var_1.vehicle_idle );

    animontag( var_0, var_1.sittag, var_0.vehicle_idle, undefined, undefined, undefined, var_1.sittag_origin_offset, var_1.sittag_angles_offset );
}

randomoccurrance( var_0, var_1 )
{
    var_2 = [];
    var_3 = 0;

    for ( var_4 = 0; var_4 < var_1.size; var_4++ )
    {
        var_3 = var_3 + var_1[var_4];
        var_2[var_4] = var_3;
    }

    var_5 = randomint( var_3 );

    for ( var_4 = 0; var_4 < var_1.size; var_4++ )
    {
        if ( var_5 < var_2[var_4] )
            return var_4;
    }
}

guy_unload_que( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self.unloadque = scripts\engine\utility::array_add( self.unloadque, var_0 );
    var_0 scripts\engine\utility::_id_143A5( "_encstr_A3750609A5E61883", "_encstr_A4350A93D381335508C8430B" );
    self.unloadque = scripts\engine\utility::array_remove( self.unloadque, var_0 );

    if ( !self.unloadque.size )
    {
        scripts\engine\utility::ent_flag_set( "_encstr_B78209C5982017FE69B0D2" );
        self.unload_group = "_encstr_AA1608C07786F13312D3";
        self.maxdogtags = undefined;
    }
}

riders_unloadable( var_0 )
{
    if ( !self.riders.size )
        return 0;

    for ( var_1 = 0; var_1 < self.riders.size; var_1++ )
    {
        if ( !isalive( self.riders[var_1] ) && !isdefined( self.riders[var_1].isvehicle ) )
            continue;

        if ( check_unloadgroup( self.riders[var_1].vehicle_position, var_0 ) )
            return 1;
    }

    return 0;
}

get_unload_group()
{
    var_0 = [];
    var_1 = [];
    var_2 = "_encstr_AA1608C07786F13312D3";

    if ( isdefined( self.unload_group ) )
        var_2 = self.unload_group;

    var_1 = level.vehicle.templates.unloadgroups[scripts\common\vehicle_code::get_vehicle_classname()][var_2];

    if ( !isdefined( var_1 ) )
        var_1 = level.vehicle.templates.unloadgroups[scripts\common\vehicle_code::get_vehicle_classname()]["_encstr_AA1608C07786F13312D3"];

    foreach ( var_4 in var_1 )
        var_0[var_4] = var_4;

    return var_0;
}

check_unloadgroup( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = self.unload_group;

    var_2 = scripts\common\vehicle_code::get_vehicle_classname();

    if ( !isdefined( level.vehicle.templates.unloadgroups[var_2] ) )
        return 1;

    if ( !isdefined( level.vehicle.templates.unloadgroups[var_2][var_1] ) )
        return 1;

    var_3 = level.vehicle.templates.unloadgroups[var_2][var_1];

    for ( var_4 = 0; var_4 < var_3.size; var_4++ )
    {
        if ( var_0 == var_3[var_4] )
            return 1;
    }

    return 0;
}

getoutrig_model_idle( var_0, var_1, var_2 )
{
    self endon( "_encstr_9D210AA54E93C8EB37A24878" );

    for (;;)
        animontag( var_0, var_1, var_2 );
}

getoutrig_model( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = scripts\common\vehicle_code::get_vehicle_classname();

    if ( var_4 )
    {
        thread getoutrig_model_idle( var_1, var_2, level.vehicle.templates.attachedmodels[var_5][var_0.fastroperig].idleanim );
        self waittill( "_encstr_9D210AA54E93C8EB37A24878" );
    }

    self.unloadque = scripts\engine\utility::array_add( self.unloadque, var_1 );
    thread getoutrig_abort( var_1, var_2, var_3 );

    if ( !scripts\common\vehicle_code::vehicle_iscrashing() )
        animontag( var_1, var_2, var_3 );

    var_1 unlink();

    if ( !isdefined( self ) )
    {
        var_1 delete();
        return;
    }

    self.unloadque = scripts\engine\utility::array_remove( self.unloadque, var_1 );

    if ( !self.unloadque.size )
        self notify( "_encstr_B78209C5982017FE69B0D2" );

    self.fastroperig[var_0.fastroperig] = undefined;
    wait 10;
    var_1 delete();
}

getoutrig_model_new( var_0, var_1, var_2, var_3, var_4 )
{
    self endon( "_encstr_A3750609A5E61883" );
    var_5 = scripts\common\vehicle_code::get_vehicle_classname();
    thread scripts\engine\utility::delete_on_death( var_1 );
    var_6 = self gettagorigin( var_2 );
    var_7 = self gettagangles( var_2 );
    var_8 = level.vehicle.templates.attachedmodels[var_5][var_0.fastroperig].idleanim;
    var_9 = getstartorigin( var_6, var_7, var_8 );
    var_10 = getstartangles( var_6, var_7, var_8 );
    var_10 = self.angles;
    var_11 = var_1 gettagorigin( "_encstr_9561095ABF5588B2E579CF", 1 );
    var_12 = var_11 - self.origin;

    if ( var_4 )
    {
        var_1.origin = var_9;
        var_1.angles = var_10;
        thread scripts\engine\utility::script_func( "_encstr_9B370E990B9B8E39DB38ACBE85CDB4AD", var_1, var_8, "_encstr_B25C0E6733CD028548AB840FE0E0D4FA" );
        scripts\engine\utility::ent_flag_wait( "_encstr_B78209C5982017FE69B0D2" );
    }

    var_6 = self gettagorigin( var_2 );
    var_7 = self gettagangles( var_2 );
    var_13 = self.angles - var_10;
    var_13 = ( angleclamp( var_13[0] ), angleclamp( var_13[1] ), angleclamp( var_13[2] ) );
    var_14 = rotatevector( var_12, var_13 ) + self.origin;
    var_15 = scripts\engine\trace::ray_trace( var_14, var_14 - ( 0, 0, 1000 ), self, scripts\engine\trace::create_world_contents() );
    var_16 = var_14[2] - 400;

    if ( isdefined( var_15["_encstr_B7260923C89E8F3378E72E"] ) )
        var_16 = var_15["_encstr_B7260923C89E8F3378E72E"][2];

    var_17 = ( var_6[0], var_6[1], var_16 );

    if ( istrue( level.vehicle.templates.attachedmodels[var_5][var_0.fastroperig].dropusestraceorigin ) )
        var_17 = ( var_14[0], var_14[1], var_16 );

    thread getoutrig_abort( var_1, undefined, var_3, var_17 );

    if ( !scripts\common\vehicle_code::vehicle_iscrashing() )
    {
        var_1 unlink();
        var_1.origin = var_17;
        thread scripts\engine\utility::script_func( "_encstr_9B370E990B9B8E39DB38ACBE85CDB4AD", var_1, var_3, "_encstr_BE980E2F983BD7EB29FE940FEC2B326C" );
    }

    self.fastroperig[var_0.fastroperig] = undefined;
    wait 10;
    var_1 delete();
}

getoutrig_disable_abort_notify_after_riders_out()
{
    wait 0.05;

    while ( isalive( self ) && self.unloadque.size > 2 )
        wait 0.05;

    if ( !isalive( self ) || scripts\common\vehicle_code::vehicle_iscrashing() )
        return;

    self notify( "_encstr_9FFD182F983BD7EB29FE940F7021627321089BAFB17112727D95" );
}

getoutrig_abort_while_deploying()
{
    self endon( "_encstr_94272456CD32BE9DCA47DBBA3AC9A53BEB2C89B74E3AFAEEA15A8D95D719B2C1C6DBBC2D739D" );

    while ( !scripts\common\vehicle_code::vehicle_iscrashing() )
        wait 0.05;

    var_0 = [];

    foreach ( var_2 in self.riders )
    {
        if ( isalive( var_2 ) )
            scripts\engine\utility::array_add_safe( var_0, var_2 );
    }

    scripts\engine\utility::array_delete( var_0 );
    self notify( "_encstr_A31318A09BE627C85FB47864805770C3C16218C092BD8BA01BDF" );
    var_0 = undefined;
}

getoutrig_abort( var_0, var_1, var_2, var_3 )
{
    var_4 = getanimlength( var_2 );
    var_5 = var_4 - 1.0;

    if ( self.vehicletype == "_encstr_A3A20569892603" )
        var_5 = var_4 - 0.5;

    var_6 = 0.8;
    self endon( "_encstr_9FFD182F983BD7EB29FE940F7021627321089BAFB17112727D95" );
    thread getoutrig_disable_abort_notify_after_riders_out();
    thread getoutrig_abort_while_deploying();
    scripts\engine\utility::waittill_notify_or_timeout( "_encstr_A31318A09BE627C85FB47864805770C3C16218C092BD8BA01BDF", var_6 );
    self notify( "_encstr_94272456CD32BE9DCA47DBBA3AC9A53BEB2C89B74E3AFAEEA15A8D95D719B2C1C6DBBC2D739D" );

    while ( !isdefined( self.vehiclecrashing ) )
        waitframe();

    if ( isdefined( var_0 ) )
    {
        if ( !isdefined( var_1 ) && isdefined( var_3 ) )
        {
            var_0 unlink();
            var_0.origin = var_3;

            if ( !scripts\common\utility::issp() )
            {
                var_7 = var_0 scripts\asm\asm::asm_lookupanimfromalias( "_encstr_81610D9A403B274A8045C1C051E8D7", var_2 );
                var_8 = var_0 scripts\asm\asm::asm_getxanim( "_encstr_81610D9A403B274A8045C1C051E8D7", var_7 );
                var_9 = getstartorigin( self.origin, self.angles, var_8 );
                var_10 = getstartangles( self.origin, self.angles, var_8 );
                var_0 dontinterpolate();
                var_0 forceteleport( var_9, var_10 );
                var_0 animmode( "_encstr_AA970ACDDBCEE4C267B4E8E5" );
                var_0 aisetanim( "_encstr_81610D9A403B274A8045C1C051E8D7", var_7 );
            }
            else
                var_0 animscripted( "_encstr_BE980E2F983BD7EB29FE940FEC2B326C", var_0.origin, var_0.angles, var_2, undefined, undefined, 0 );
        }
        else
            thread animontag( var_0, var_1, var_2 );

        waittillframeend;
        var_0 setanimtime( var_2, var_5 / var_4 );
    }

    var_11 = self;

    if ( isdefined( self.original_attacker ) )
        var_11 = self.original_attacker;

    for ( var_12 = 0; var_12 < self.riders.size; var_12++ )
    {
        if ( !isdefined( self.riders[var_12] ) )
            continue;

        if ( !isdefined( self.riders[var_12].ragdoll_getout_death ) )
            continue;

        if ( self.riders[var_12].ragdoll_getout_death != 1 )
            continue;

        if ( !isdefined( self.riders[var_12].ridingvehicle ) )
            continue;

        self.riders[var_12].forcefallthroughonropes = 1;

        if ( isalive( self.riders[var_12] ) )
            thread animontag_ragdoll_death_fall( self.riders[var_12], self, var_11 );
    }
}

setanimrestart_once( var_0, var_1 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_B42F10623FC0F5973F7435D0D2D72B90C349" );

    if ( !isdefined( var_1 ) )
        var_1 = 1;

    var_2 = getanimlength( var_0 );
    self endon( "_encstr_A3750609A5E61883" );
    thread scripts\engine\utility::script_func( "_encstr_8998121037C8B05F52D7284DAD9A85BE29836070", self, var_0 );
    wait( var_2 );

    if ( scripts\common\utility::issp() && var_1 )
        self clearanim( var_0, 0 );
}

#using_animtree("_encstr_93DC0DCD1B272D3847AF5BED23B2C6");

getout_rigspawn( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        var_2 = 1;

    var_3 = scripts\common\vehicle_code::get_vehicle_classname();

    if ( isdefined( self.attach_model_override ) && isdefined( self.attach_model_override[var_1.fastroperig] ) )
        var_4 = 1;
    else
        var_4 = 0;

    if ( !isdefined( var_1.fastroperig ) || isdefined( self.fastroperig[var_1.fastroperig] ) || var_4 )
        return;

    var_5 = var_0 gettagorigin( level.vehicle.templates.attachedmodels[var_3][var_1.fastroperig].tag );
    var_6 = var_0 gettagangles( level.vehicle.templates.attachedmodels[var_3][var_1.fastroperig].tag );
    self.fastroperiganimating[var_1.fastroperig] = 1;
    var_7 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_5 );
    var_7.angles = var_6;
    var_7.origin = var_5;
    var_7 useanimtree( #animtree );
    var_7 setmodel( level.vehicle.templates.attachedmodels[var_3][var_1.fastroperig].model );
    self.fastroperig[var_1.fastroperig] = var_7;
    var_7 linkto( var_0, level.vehicle.templates.attachedmodels[var_3][var_1.fastroperig].tag );

    if ( getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
        thread getoutrig_model_new( var_1, var_7, level.vehicle.templates.attachedmodels[var_3][var_1.fastroperig].tag, level.vehicle.templates.attachedmodels[var_3][var_1.fastroperig].dropanim, var_2 );
    else
        thread getoutrig_model( var_1, var_7, level.vehicle.templates.attachedmodels[var_3][var_1.fastroperig].tag, level.vehicle.templates.attachedmodels[var_3][var_1.fastroperig].dropanim, var_2 );

    return var_7;
}

check_sound_tag_dupe( var_0 )
{
    if ( !isdefined( self.sound_tag_dupe ) )
        self.sound_tag_dupe = [];

    var_1 = 0;

    if ( !isdefined( self.sound_tag_dupe[var_0] ) )
        self.sound_tag_dupe[var_0] = 1;
    else
        var_1 = 1;

    thread check_sound_tag_dupe_reset( var_0 );
    return var_1;
}

check_sound_tag_dupe_reset( var_0 )
{
    wait 0.05;

    if ( !isdefined( self ) )
        return;

    self.sound_tag_dupe[var_0] = 0;
    var_1 = getarraykeys( self.sound_tag_dupe );

    for ( var_2 = 0; var_2 < var_1.size; var_2++ )
    {
        if ( self.sound_tag_dupe[var_1[var_2]] )
            return;
    }

    self.sound_tag_dupe = undefined;
}

vehicle_play_exit_anim( var_0, var_1, var_2 )
{
    var_3 = level.vehicle.templates.aianims[scripts\common\vehicle_code::get_vehicle_classname()];
    var_4 = getanimatemodel();

    if ( !isdefined( var_1 ) )
        var_1 = var_0.vehicle_getoutanim;

    if ( !isdefined( var_2 ) )
        var_2 = var_0.vehicle_getoutanim_clear;

    if ( isdefined( var_1 ) )
    {
        var_4 thread setanimrestart_once( var_1, var_2 );
        var_5 = 0;

        if ( isdefined( var_0.vehicle_getoutsoundtag ) )
        {
            var_5 = check_sound_tag_dupe( var_0.vehicle_getoutsoundtag );
            var_6 = var_4 gettagorigin( var_0.vehicle_getoutsoundtag );
        }
        else
            var_6 = var_4.origin;

        if ( isdefined( var_0.vehicle_getoutsound ) && !var_5 )
            playworldsound( var_0.vehicle_getoutsound, var_6 );

        var_5 = undefined;
    }
}

vehicle_end_loop_sounds( var_0, var_1 )
{
    var_2 = anim_pos( self, var_1 );

    if ( isdefined( var_0.playerpiggyback ) && isdefined( var_2.player_getout_sound_loop ) )
        level.player thread scripts\engine\utility::script_func( "_encstr_A83818E78C67CA3135027898FA4BFDA1472760C81D331363DB4B", var_2.player_getout_sound_loop );

    if ( isdefined( var_2.getoutloopsnd ) )
        var_0 thread scripts\engine\utility::script_func( "_encstr_A83818E78C67CA3135027898FA4BFDA1472760C81D331363DB4B", var_2.getoutloopsnd );

    if ( isdefined( var_0.playerpiggyback ) && isdefined( var_2.player_getout_sound_end ) )
        level.player thread scripts\engine\utility::script_func( "_encstr_A6701478D10B50DFA0B3C26ADE88F38148ADF4F94978", var_2.player_getout_sound_end );
}

_id_1286B()
{
    if ( isdefined( self.maxdogtags ) )
        return;

    self.maxdogtags = [];

    for ( var_0 = 0; var_0 < level.vehicle.templates.aianims[scripts\common\vehicle_code::get_vehicle_classname()].size; var_0++ )
    {
        var_1 = level.vehicle.templates.aianims[scripts\common\vehicle_code::get_vehicle_classname()][var_0];

        if ( isdefined( var_1.vehicle_getoutanim ) )
        {
            var_2 = getanimname( var_1.vehicle_getoutanim );
            self.maxdogtags[var_2] = spawnstruct();
            self.maxdogtags[var_2].open = 0;
            self.maxdogtags[var_2]._id_1212C = 0;
        }
    }
}

wait_for_open_door( var_0, var_1 )
{
    var_0 endon( "_encstr_A4350A93D381335508C8430B" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    _id_1286B();

    while ( !istrue( var_0.requestopendoor ) )
        waitframe();

    if ( isdefined( var_1.vehicle_getoutanim ) )
    {
        var_2 = getanimname( var_1.vehicle_getoutanim );

        if ( !self.maxdogtags[var_2].open )
        {
            var_3 = var_1.vehicle_getoutanim;
            var_4 = var_1.vehicle_getoutanim_clear;

            if ( isdefined( var_0.requestopendoorparams ) )
            {
                if ( var_0.requestopendoorparams == "_encstr_A3380BD8F6B526B01DD793ABB9" && isdefined( var_1.vehicle_getoutanim_combat_run ) )
                {
                    var_3 = var_1.vehicle_getoutanim_combat_run;
                    var_4 = var_1.vehicle_getoutanim_combat_run_clear;
                }
                else if ( var_0.requestopendoorparams == "_encstr_877C076CED5B1316D1" && isdefined( var_1.vehicle_getoutanim_combat ) )
                {
                    var_3 = var_1.vehicle_getoutanim_combat;
                    var_4 = var_1.vehicle_getoutanim_combat_clear;
                }
            }

            vehicle_play_exit_anim( var_1, var_3, var_4 );
            self.maxdogtags[var_2].open = 1;
        }

        if ( isdefined( var_1.fastroperig ) && !isdefined( self.fastroperig[var_1.fastroperig] ) )
        {
            var_5 = getanimatemodel();
            var_6 = getout_rigspawn( var_5, var_1, 1 );
        }
    }
}

guy_setup_rope( var_0, var_1 )
{
    if ( isdefined( var_1.fastroperig ) )
    {
        thread wait_for_open_door( var_0, var_1 );
        var_0 scripts\vehicle\vehicle_common::setuprope();
    }
    else
    {

    }
}

guy_unload( var_0, var_1 )
{
    var_2 = 0;

    if ( isdefined( var_0.isvehicle ) )
        var_2 = 1;

    var_3 = anim_pos( self, var_1 );
    var_4 = self.vehicletype;

    if ( !check_unloadgroup( var_1 ) )
    {
        if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
            thread guy_idle( var_0, var_1 );

        return;
    }

    if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) && !isdefined( var_3.getout ) )
    {
        thread guy_idle( var_0, var_1 );
        return;
    }

    thread guy_unload_que( var_0 );
    self endon( "_encstr_A3750609A5E61883" );

    if ( isai( var_0 ) && isalive( var_0 ) )
        var_0 endon( "_encstr_A3750609A5E61883" );

    var_5 = 0;

    if ( isdefined( var_0.getoffvehiclefunc ) )
    {
        var_6 = var_0 [[ var_0.getoffvehiclefunc ]]();

        if ( isdefined( var_6 ) && var_6 )
            var_5 = 1;
    }

    if ( isdefined( var_0.onrotatingvehicleturret ) )
    {
        var_0.onrotatingvehicleturret = undefined;

        if ( isdefined( var_0.getoffvehiclefunc ) )
            var_0 [[ var_0.getoffvehiclefunc ]]();
    }

    if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
    {
        vehicle_play_exit_anim( var_3 );
        var_7 = 0;

        if ( isdefined( var_3.getout_timed_anim ) )
            var_7 = var_7 + getanimlength( var_3.getout_timed_anim );

        if ( isdefined( var_3.delay ) )
            var_7 = var_7 + var_3.delay;

        if ( isdefined( var_0.delay ) )
            var_7 = var_7 + var_0.delay;

        if ( var_7 > 0 )
        {
            if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
                thread guy_idle( var_0, var_1 );

            wait( var_7 );
        }
    }

    if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
    {
        var_0.deathanim = undefined;
        var_0.deathanimscript = undefined;
    }

    var_0 notify( "_encstr_B25B0843334CE29EA048" );

    if ( isdefined( var_3.bhasgunwhileriding ) && !var_3.bhasgunwhileriding )
    {
        if ( !isdefined( var_0.disable_gun_recall ) )
            var_0 scripts\common\ai::gun_recall();
    }

    if ( isai( var_0 ) )
        var_0 pushplayer( 1 );

    if ( isdefined( var_3.bnoanimunload ) )
        var_5 = 1;
    else if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) && !isdefined( var_3.getout ) || !isdefined( self.script_unloadmgguy ) && ( isdefined( var_3.bisgunner ) && var_3.bisgunner ) || isdefined( self.script_keepdriver ) && var_1 == 0 )
    {
        thread guy_idle( var_0, var_1 );
        return;
    }

    if ( var_0 should_give_orghealth() )
        var_0.health = var_0.orghealth;

    var_0.orghealth = undefined;

    if ( isai( var_0 ) && isalive( var_0 ) )
        var_0 endon( "_encstr_A3750609A5E61883" );

    var_0.allowdeath = 0;

    if ( isdefined( var_3.exittag ) )
        var_8 = var_3.exittag;
    else
        var_8 = var_3.sittag;

    if ( isdefined( var_0.get_out_override ) )
        var_9 = var_0.get_out_override;
    else if ( scripts\engine\utility::ent_flag( "_encstr_BC9307A8DFFD1F1F88" ) && isdefined( var_3.getout_landed ) )
        var_9 = var_3.getout_landed;
    else if ( isdefined( var_0.playerpiggyback ) && isdefined( var_3.player_getout ) )
        var_9 = var_3.player_getout;
    else
        var_9 = var_3.getout;

    if ( !var_5 )
    {
        if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
            thread guy_unlink_on_death( var_0 );

        if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) && isdefined( var_3.fastroperig ) )
        {
            if ( !isdefined( self.fastroperig[var_3.fastroperig] ) )
            {
                if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
                    thread guy_idle( var_0, var_1 );

                var_10 = getanimatemodel();
                var_11 = getout_rigspawn( var_10, var_3, 1 );
            }
        }

        if ( isdefined( var_3.getoutsnd ) )
            var_0 thread scripts\engine\utility::script_func( "_encstr_81A51123D9F7B01FC29015EB217B18312388A8", var_3.getoutsnd, "_encstr_82190B82777152776E5311C9DC", 1 );

        if ( isdefined( var_0.playerpiggyback ) && isdefined( var_3.player_getout_sound ) )
            var_0 thread scripts\engine\utility::script_func( "_encstr_81A51123D9F7B01FC29015EB217B18312388A8", var_3.player_getout_sound );

        if ( isdefined( var_3.getoutloopsnd ) )
            var_0 thread scripts\engine\utility::script_func( "_encstr_8FF0152B88C1893227481AD2A0CBCA5CAE28DB0F20B9CF", var_3.getoutloopsnd );

        if ( isdefined( var_0.playerpiggyback ) && isdefined( var_3.player_getout_sound_loop ) )
            level.player thread scripts\engine\utility::script_func( "_encstr_8FF0152B88C1893227481AD2A0CBCA5CAE28DB0F20B9CF", var_3.player_getout_sound_loop );

        var_0 notify( "_encstr_B25B0843334CE29EA048" );
        var_0 notify( "_encstr_89450C706B8F0F78B54F9FC7651B" );
        var_12 = 0;

        if ( !isai( var_0 ) && !var_2 )
            var_12 = 1;

        if ( !isdefined( var_0.script_stay_drone ) && !var_2 )
            var_0 = guy_becomes_real_ai( var_0, var_1 );

        if ( !isalive( var_0 ) && !var_2 )
            return;

        if ( !var_2 )
            var_0.ragdoll_getout_death = 1;

        if ( isdefined( var_3.ragdoll_getout_death ) )
        {
            var_0.ragdoll_getout_death = 1;

            if ( isdefined( var_3.ragdoll_fall_anim ) )
                var_0.ragdoll_fall_anim = var_3.ragdoll_fall_anim;
        }

        if ( var_12 )
        {
            self.riders = scripts\engine\utility::array_add( self.riders, var_0 );
            thread guy_deathhandle( var_0, var_1 );
            thread guy_unload_que( var_0 );
            var_0.ridingvehicle = self;
        }

        if ( isai( var_0 ) )
            var_0 endon( "_encstr_A3750609A5E61883" );

        var_0 notify( "_encstr_B25B0843334CE29EA048" );
        var_0 notify( "_encstr_89450C706B8F0F78B54F9FC7651B" );

        if ( isdefined( var_3.littlebirde_getout_unlinks ) && var_3.littlebirde_getout_unlinks )
            thread stable_unlink( var_0 );

        if ( isalive( var_0 ) && isai( var_0 ) && guy_resets_goalpos( var_0 ) )
        {
            var_0.goalradius = 600;
            var_0 setgoalpos( var_0.origin );
        }

        if ( isdefined( var_3.getout_secondary ) )
        {
            animontag( var_0, var_8, var_9 );
            var_13 = var_8;

            if ( isdefined( var_3.getout_secondary_tag ) )
                var_13 = var_3.getout_secondary_tag;

            animontag( var_0, var_13, var_3.getout_secondary, undefined, undefined, undefined, var_3.sittag_origin_offset, var_3.sittag_angles_offset );
        }
        else
        {
            var_14 = 0;

            if ( isdefined( var_3.getout_hover_loop ) && isdefined( var_3.getout_hover_land ) )
            {
                thread guy_unload_land( var_0, var_8, var_3.getout, var_3.getout_hover_loop, var_3.getout_hover_land );
                var_14 = 1;
            }
            else if ( !var_2 )
                var_0.anim_end_early = 1;

            if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
                animontag( var_0, var_8, var_9, undefined, undefined, undefined, var_3.sittag_origin_offset, var_3.sittag_angles_offset );
            else
            {
                thread wait_for_open_door( var_0, var_3 );
                var_0 scripts\vehicle\vehicle_common::exitvehicle();
            }

            if ( var_14 )
                var_0 waittill( "_encstr_9DA911A05F96713D8355F108EEEA1F19E7C340" );
        }

        if ( isdefined( var_0.playerpiggyback ) && isdefined( var_3.player_getout_sound_loop ) )
            level.player thread scripts\engine\utility::stop_loop_sound_on_entity( var_3.player_getout_sound_loop );

        if ( isdefined( var_3.getoutloopsnd ) )
            var_0 thread scripts\engine\utility::stop_loop_sound_on_entity( var_3.getoutloopsnd );

        if ( isdefined( var_0.playerpiggyback ) && isdefined( var_3.player_getout_sound_end ) )
            level.player thread scripts\engine\utility::script_func( "_encstr_A6701478D10B50DFA0B3C26ADE88F38148ADF4F94978", var_3.player_getout_sound_end );
    }
    else if ( !isai( var_0 ) )
    {
        if ( istrue( var_0.drone_delete_on_unload ) )
        {
            var_0 delete();
            return;
        }

        var_0 = scripts\engine\utility::script_func( "_encstr_BE3B13B28B1F33F5D5B5C19A37BAFD62673BB397AA", var_0 );
    }

    self.riders = scripts\engine\utility::array_remove( self.riders, var_0 );
    self.usedpositions[var_1] = 0;
    var_0.ridingvehicle = undefined;
    var_0.drivingvehicle = undefined;

    if ( !isalive( self ) && !isdefined( var_3.unload_ondeath ) )
    {
        var_0 delete();
        return;
    }

    if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
        var_0 unlink();

    if ( !isdefined( var_0.magic_bullet_shield ) )
        var_0.allowdeath = 1;

    if ( isalive( var_0 ) || var_2 )
    {
        if ( isai( var_0 ) )
            var_0.a.disablelongdeath = !var_0 isbadguy();

        var_0.forced_startingposition = undefined;

        if ( isai( var_0 ) )
        {
            if ( isdefined( var_3.getoutstance ) )
            {
                var_0.desired_anim_pose = var_3.getoutstance;
                var_0 allowedstances( "_encstr_9C3D071B63023B26C3" );
                var_0 thread scripts\engine\utility::script_func( "_encstr_9829146EF8785DD99DC18B97E14DE2869060A275F3A0" );
                var_0 allowedstances( "_encstr_B1AD06374716DC8C", "_encstr_9C3D071B63023B26C3", "_encstr_9F24062875D5FD98" );
            }

            var_0 pushplayer( 0 );
        }
        else if ( var_2 )
        {
            var_0.vspawner.origin = var_0.origin;
            var_0.vspawner.angles = var_0.angles;

            if ( isdefined( var_0.vspawner.target ) )
                var_0.vspawner scripts\common\vehicle::spawn_vehicle_and_gopath();
            else
                var_15 = var_0.vspawner scripts\common\utility::spawn_vehicle();

            var_0 delete();
        }

        if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) )
            var_0 notify( "_encstr_A4350A93D381335508C8430B" );
    }

    if ( isdefined( var_0.script_noteworthy ) && var_0.script_noteworthy == "_encstr_8041143D75A3B9F147D120337B1FB5B6BF16B120C92B" )
    {
        var_0 delete();
        return;
    }

    if ( isdefined( var_3.getout_delete ) && var_3.getout_delete )
    {
        var_0 delete();
        return;
    }

    var_0 guy_cleanup_vehiclevars();
}

guy_unload_land( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = self gettagorigin( var_1 );
    var_6 = self gettagangles( var_1 );
    var_7 = getstartorigin( var_5, var_6, var_2 );
    var_8 = getstartangles( var_5, var_6, var_2 );
    var_9 = getmovedelta( var_2, 0, 1 );
    var_10 = scripts\engine\utility::spawn_tag_origin();
    var_10.origin = var_7;
    var_10.angles = var_8;
    var_11 = var_10 localtoworldcoords( var_9 );
    var_10 thread scripts\engine\utility::delete_on_notify( "_encstr_AD4209812FB3DDC4B7BD8F" );
    var_12 = var_11;
    var_13 = scripts\common\utility::groundpos( var_12 );
    var_14 = getstartorigin( var_5, var_6, var_4 );
    var_9 = getmovedelta( var_4, 0, 1 );
    var_15 = var_14 + var_9;
    var_16 = var_14[2] - var_15[2];
    var_17 = var_13 + ( 0, 0, var_16 );
    var_0.allowdeath = 0;
    var_0 setcandamage( 0 );
    var_0 endon( "_encstr_A3750609A5E61883" );
    wait( getanimlength( var_2 ) - 0.1 );
    var_0 unlink();
    var_0 notify( "_encstr_81F1117BA8DC4050059DF6B04F8328E0757631" );
    var_0 stopanimscripted();
    var_10.origin = var_0.origin;
    var_10.angles = var_0.angles;
    var_10 dontinterpolate();
    var_0 dontinterpolate();
    var_0 linkto( var_10, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_0.allowdeath = 1;
    var_0 setcandamage( 1 );
    var_0.unload_loopanim = var_3;

    if ( isai( var_0 ) )
        var_0 scripts\engine\utility::script_func( "_encstr_8F4A0F85B9B5F50BCD2DADC6BA6E8EF6AD", ::guy_fall_loop, ::guy_fall_loop_end );
    else
        var_0 thread guy_fall_loop();

    var_18 = length( ( 0, 0, var_17[2] ) - ( 0, 0, var_12[2] ) );
    var_19 = 350;
    var_20 = var_18 / var_19;
    var_10 moveto( var_17, var_20 );
    var_10 waittill( "_encstr_AD4209812FB3DDC4B7BD8F" );
    var_0 unlink();
    var_0 animscripted( "_encstr_A6760E1927DBC1E6439607FA1BC2CD91", var_0.origin, var_0.angles, var_4 );
    wait( getanimlength( var_4 ) );
    var_0 notify( "_encstr_9DA911A05F96713D8355F108EEEA1F19E7C340" );
    var_0 notify( "_encstr_9BDA11CA106B5731902DA774CB28C9BB808802" );
}

guy_fall_loop()
{
    if ( isai( self ) )
    {
        if ( scripts\engine\utility::actor_is3d() )
            self orientmode( "_encstr_A1440E5972E66F264FBA0751473AC7D2", self.angles );
        else
            self orientmode( "_encstr_AF4A0B50E703F11942D5F4096F", self.angles[1] );

        self animmode( "_encstr_A9370EF4B7CDD897EBC186E5CDB46C6E", 1 );
        self clearanim( scripts\asm\asm::asm_getbodyknob(), 0.2 );
    }

    self setanim( self.unload_loopanim, 1 );
    self waittill( "_encstr_A6760E1927DBC1E6439607FA1BC2CD91" );
}

guy_fall_loop_end()
{

}

guy_resets_goalpos( var_0 )
{
    if ( isdefined( var_0.script_delayed_playerseek ) )
        return 0;

    if ( istrue( var_0 scripts\engine\utility::script_func( "_encstr_A3C70D5F21BF7B4ADB9671D8B12A70" ) ) )
        return 0;

    if ( isdefined( var_0.qsetgoalpos ) )
        return 0;

    if ( !isdefined( var_0.target ) )
        return 1;

    var_1 = getnodearray( var_0.target, "_encstr_B8CE0BE43FC317DF690862BA48" );
    var_2 = scripts\engine\utility::getstructarray( var_0.target, "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( var_1.size > 0 || var_2.size > 0 )
        return 0;

    var_3 = getent( var_0.target, "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( isdefined( var_3 ) && var_3.classname == "_encstr_B9790CD986C487804D9A645D173D" )
        return 0;

    return 1;
}

animontag( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    var_0 notify( "_encstr_81F1117BA8DC4050059DF6B04F8328E0757631" );
    var_0 endon( "_encstr_81F1117BA8DC4050059DF6B04F8328E0757631" );

    if ( !isdefined( var_6 ) )
        var_6 = ( 0, 0, 0 );

    if ( !isdefined( var_7 ) )
        var_7 = ( 0, 0, 0 );

    if ( !isdefined( var_5 ) )
        var_5 = "_encstr_884A0ED2B013E5077895C9C7A5603B2F";

    if ( isdefined( self.modeldummy ) )
        var_8 = self.modeldummy;
    else
        var_8 = self;

    if ( !isdefined( var_1 ) || !scripts\engine\utility::hastag( var_8.model, var_1 ) )
    {
        var_9 = var_0.origin;
        var_10 = var_0.angles;
    }
    else
    {
        var_9 = var_8 gettagorigin( var_1 );
        var_10 = var_8 gettagangles( var_1 ) + var_7;
        var_11 = anglestoaxis( var_10 );
        var_12 = [ "_encstr_A42E08DEC88B5BE9CD38", "_encstr_9353062E718710C9", "_encstr_8F070350FB" ];

        for ( var_13 = 0; var_13 < var_11.size; var_13++ )
            var_9 = var_9 + var_11[var_12[var_13]] * var_6[var_13];
    }

    if ( isdefined( var_0.ragdoll_getout_death ) && !isdefined( var_0.no_vehicle_ragdoll ) )
        level thread animontag_ragdoll_death( var_0, self );

    if ( !scripts\common\utility::issp() )
    {
        var_0 dontinterpolate();

        if ( isai( var_0 ) )
        {
            var_14 = var_0 scripts\asm\asm::asm_lookupanimfromalias( "_encstr_81610D9A403B274A8045C1C051E8D7", var_2 );
            var_15 = var_0 scripts\asm\asm::asm_getxanim( "_encstr_81610D9A403B274A8045C1C051E8D7", var_14 );
            var_16 = getstartorigin( self.origin, self.angles, var_15 );
            var_17 = getstartangles( self.origin, self.angles, var_15 );
            var_0 forceteleport( var_16, var_17 );
            var_0 animmode( "_encstr_AA970ACDDBCEE4C267B4E8E5" );
            var_0 aisetanim( "_encstr_81610D9A403B274A8045C1C051E8D7", var_14 );
        }
    }
    else
        var_0 animscripted( var_5, var_9, var_10, var_2 );

    if ( isai( var_0 ) )
        thread donotetracks( var_0, var_8, var_5 );

    if ( isdefined( var_0.anim_end_early ) )
    {
        var_0.anim_end_early = undefined;
        var_18 = getanimlength( var_2 ) - 0.25;

        if ( var_18 > 0 )
            wait( var_18 );

        if ( getdvarint( "_encstr_93E40A69B3105F595192471F", 0 ) == 1 )
            var_0 stopanimscripted();

        var_0.interval = 0;
        var_0 thread recover_interval();
    }
    else
    {
        if ( isdefined( var_3 ) )
        {
            for ( var_13 = 0; var_13 < var_3.size; var_13++ )
            {
                var_0 waittillmatch( var_5, var_3[var_13] );
                var_0 thread [[ var_4[var_13] ]]();
            }
        }

        var_0 waittillmatch( var_5, "_encstr_B41804CA7391" );
    }

    var_0 notify( "_encstr_9BDA11CA106B5731902DA774CB28C9BB808802" );
    var_0.ragdoll_getout_death = undefined;
}

recover_interval()
{
    self endon( "_encstr_A3750609A5E61883" );
    wait 2;

    if ( self.interval == 0 )
        self.interval = 80;
}

animontag_ragdoll_death( var_0, var_1 )
{
    if ( isdefined( var_0.magic_bullet_shield ) && var_0.magic_bullet_shield )
        return;

    if ( !isai( var_0 ) )
        var_0 setcandamage( 1 );

    var_0 endon( "_encstr_9BDA11CA106B5731902DA774CB28C9BB808802" );
    var_2 = undefined;
    var_3 = undefined;
    var_4 = var_1.health <= 0;

    for (;;)
    {
        if ( !var_4 && !( isdefined( var_1 ) && var_1.health > 0 ) )
            break;

        var_0 waittill( "_encstr_B8BE07320B5B16ECAC", var_2, var_3 );

        if ( isdefined( var_0.forcefallthroughonropes ) )
            break;

        if ( !isdefined( var_2 ) )
            continue;

        if ( var_2 < 1 )
            continue;

        if ( !isdefined( var_3 ) )
            continue;

        if ( isplayer( var_3 ) )
            break;
    }

    if ( !isalive( var_0 ) )
        return;

    thread animontag_ragdoll_death_fall( var_0, var_1, var_3 );
}

animontag_ragdoll_death_fall( var_0, var_1, var_2 )
{
    var_0.deathanim = undefined;
    var_0.deathfunction = undefined;
    var_0.anim_disablepain = 1;

    if ( isdefined( var_0.ragdoll_fall_anim ) )
    {
        var_3 = getmovedelta( var_0.ragdoll_fall_anim, 0, 1 );
        var_4 = physicstrace( var_0.origin + ( 0, 0, 16 ), var_0.origin - ( 0, 0, 10000 ) );
        var_5 = distance( var_0.origin + ( 0, 0, 16 ), var_4 );

        if ( abs( var_3[2] + 16 ) <= abs( var_5 ) )
        {
            var_0 thread scripts\engine\utility::script_func( "_encstr_A6701478D10B50DFA0B3C26ADE88F38148ADF4F94978", "_encstr_813B162197BEF8EE4A6F57396F12355877AF69D87D11F82C" );
            var_0 animscripted( "_encstr_AB610EBF871B4BC298E030812DF3B060", var_0.origin, var_0.angles, var_0.ragdoll_fall_anim );
            var_0 waittillmatch( "_encstr_AB610EBF871B4BC298E030812DF3B060", "_encstr_A8B50EB3C0497B6B581282F77B3FB2F0" );
        }
    }

    if ( !isdefined( var_0 ) )
        return;

    var_0.deathanim = undefined;
    var_0.deathfunction = undefined;
    var_0.anim_disablepain = 1;
    var_0 notify( "_encstr_939F0B277B1CCAD746562C47D0", var_2 );
    var_0 kill( var_2.origin, var_2 );

    if ( isdefined( var_0.script_stay_drone ) )
    {
        var_0 notsolid();
        var_6 = getweaponmodel( var_0.weapon );
        var_7 = var_0.weapon;

        if ( isdefined( var_6 ) )
        {
            var_0 detach( var_6, "_encstr_A1AC113BE001AF83334F1AD5209F0B51A910B3" );
            var_8 = var_0 gettagorigin( "_encstr_A1AC113BE001AF83334F1AD5209F0B51A910B3" );
            var_9 = var_0 gettagangles( "_encstr_A1AC113BE001AF83334F1AD5209F0B51A910B3" );
            level.gun = spawn( "_encstr_B80108EE2BB0837B737D" + createheadicon( var_7 ), ( 0, 0, 0 ) );
            level.gun.angles = var_9;
            level.gun.origin = var_8;
        }
    }
    else
        var_0 scripts\engine\utility::script_func( "_encstr_AA1216E85B89706792527087EE6A79B9E1A740508B57E8F7" );

    if ( isdefined( var_0.fnpreragdoll ) )
        var_0 [[ var_0.fnpreragdoll ]]();

    var_0 startragdoll();
}

donotetracks( var_0, var_1, var_2 )
{
    var_0 endon( "_encstr_9BC505B4461BB2" );
    var_0 endon( "_encstr_B25B0843334CE29EA048" );
    var_1 endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    var_0 scripts\engine\utility::script_func( "_encstr_9D0B128EE00B0ABF69904B47A0A16C03F38E9482", var_2 );
}

animatemoveintoplace( var_0, var_1, var_2, var_3 )
{
    var_0 animscripted( "_encstr_BAB70BDAB7CECA8EEDB9C1ED47", var_1, var_2, var_3 );
    var_0 waittillmatch( "_encstr_BAB70BDAB7CECA8EEDB9C1ED47", "_encstr_B41804CA7391" );
}

guy_vehicle_death( var_0, var_1 )
{
    if ( !isalive( var_0 ) )
        return;

    if ( isdefined( self.no_rider_death ) )
        return;

    var_2 = anim_pos( self, var_0.vehicle_position );

    if ( isdefined( var_2.explosion_death ) )
        return guy_blowup( var_0 );

    var_3 = scripts\common\vehicle_code::get_vehicle_classname();

    if ( isdefined( level.vehicle.templates.rider_death_func ) && isdefined( level.vehicle.templates.rider_death_func[var_3] ) )
    {
        self [[ level.vehicle.templates.rider_death_func[var_3] ]]();
        return;
    }

    if ( isdefined( var_2.unload_ondeath ) && isdefined( self ) )
    {
        if ( isdefined( self.dontunloadondeath ) && self.dontunloadondeath )
            return;

        thread guy_idle( var_0, var_0.vehicle_position, 1 );
        wait( var_2.unload_ondeath );

        if ( isdefined( var_0 ) && isdefined( self ) )
        {
            self.groupedanim_pos = var_0.vehicle_position;
            animate_guys( "_encstr_B2A8075DB9C6BDB032" );
        }

        return;
    }

    if ( isdefined( var_0 ) )
    {
        if ( isdefined( var_0.ragdoll_getout_death ) )
            return;

        var_0 delete();
    }
}

ai_wait_go()
{
    self endon( "_encstr_A3750609A5E61883" );
    self waittill( "_encstr_9FD20763A8F9BC8A29" );
    scripts\common\vehicle_paths::gopath( self );
}

set_pos( var_0, var_1 )
{
    var_2 = var_0.script_startingposition;

    if ( isdefined( var_0.forced_startingposition ) )
        var_2 = var_0.forced_startingposition;

    if ( isdefined( var_2 ) )
        return var_2;

    for ( var_3 = 0; var_3 < self.usedpositions.size; var_3++ )
    {
        if ( self.usedpositions[var_3] )
            continue;

        if ( isdefined( var_0.isvehicle ) && !isdefined( var_1[var_3].isvehicle ) )
            continue;

        if ( !isdefined( var_0.isvehicle ) && isdefined( var_1[var_3].isvehicle ) )
            continue;

        return var_3;
    }

    if ( isdefined( var_0.isvehicle ) && var_0.isvehicle )
        return;

    return;
}

guy_man_turret( var_0, var_1, var_2 )
{
    var_3 = anim_pos( self, var_1 );
    var_4 = self.mgturret[var_3.mgturret];

    if ( !isalive( var_0 ) )
        return;

    var_4 endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_A3750609A5E61883" );

    if ( isdefined( var_2 ) && var_2 && isdefined( var_3.passenger_2_turret_func ) )
        [[ var_3.passenger_2_turret_func ]]( self, var_0, var_1, var_4 );

    scripts\common\vehicle_code::set_turret_team( var_4 );
    var_4 setdefaultdroppitch( 0 );
    wait 0.1;
    var_0 endon( "_encstr_ABC514C9FFEF70553975597BC35D7021E45033A33060" );
    level thread scripts\common\vehicle_code::vehicle_turret_difficulty( var_4, scripts\common\utility::getdifficulty() );
    var_4 scripts\engine\utility::self_func( "_encstr_950115CDCA8E47AE9393ACD1A5EC37DBC92B3BDBC2C6B9", 1 );
    var_5 = "_encstr_B1AD06374716DC8C";

    if ( isdefined( var_3.turretpos ) )
        var_5 = var_3.turretpos;

    var_0 scripts\engine\utility::script_func( "_encstr_AD930BBB57DA76DD90BAEE5149", var_4, var_5 );
}

guy_unlink_on_death( var_0 )
{
    var_0 endon( "_encstr_A4350A93D381335508C8430B" );
    var_0 waittill( "_encstr_A3750609A5E61883" );

    if ( isdefined( var_0 ) )
        var_0 unlink();
}

guy_blowup( var_0 )
{
    if ( !isdefined( var_0.vehicle_position ) )
        return;

    var_1 = var_0.vehicle_position;
    var_2 = anim_pos( self, var_1 );

    if ( !isdefined( var_2.explosion_death ) )
        return;

    var_0.deathanim = var_2.explosion_death;
    var_3 = self.angles;
    var_4 = var_0.origin;

    if ( isdefined( var_2.explosion_death_offset ) )
    {
        var_4 = var_4 + anglestoforward( var_3 ) * var_2.explosion_death_offset[0];
        var_4 = var_4 + anglestoright( var_3 ) * var_2.explosion_death_offset[1];
        var_4 = var_4 + anglestoup( var_3 ) * var_2.explosion_death_offset[2];
    }

    var_0 = convert_guy_to_drone( var_0 );
    detach_models_with_substr( var_0, "_encstr_B80108EE2BB0837B737D" );
    var_0 notsolid();
    var_0.origin = var_4;
    var_0.angles = var_3;
    var_0 animscripted( "_encstr_AD080A8B303154A2EB186C65", var_4, var_3, var_2.explosion_death );
    var_5 = 0.3;

    if ( isdefined( var_2.explosion_death_ragdollfraction ) )
        var_5 = var_2.explosion_death_ragdollfraction;

    var_6 = getanimlength( var_2.explosion_death );
    var_7 = gettime() + var_6 * 1000;
    wait( var_6 * var_5 );
    var_8 = ( 0, 0, 1 );
    var_9 = var_0.origin;

    if ( getdvar( "_encstr_B6700B62E413298A2DA6415A35" ) == "_encstr_B34C0233" )
    {
        var_0 delete();
        return;
    }

    if ( isai( var_0 ) )
        var_0 scripts\engine\utility::script_func( "_encstr_AA1216E85B89706792527087EE6A79B9E1A740508B57E8F7" );
    else
        detach_models_with_substr( var_0, "_encstr_B80108EE2BB0837B737D" );

    while ( !var_0 isragdoll() && gettime() < var_7 )
    {
        var_9 = var_0.origin;
        wait 0.05;
        var_8 = var_0.origin - var_9;

        if ( isdefined( var_0.fnpreragdoll ) )
            var_0 [[ var_0.fnpreragdoll ]]();

        var_0 startragdoll();
    }

    wait 0.05;
    var_8 = var_8 * 20000;

    for ( var_10 = 0; var_10 < 3; var_10++ )
    {
        if ( isdefined( var_0 ) )
            var_9 = var_0.origin;

        wait 0.05;
    }

    if ( !var_0 isragdoll() )
        var_0 delete();
}

#using_animtree("_encstr_A40101");

convert_guy_to_drone( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = 0;

    var_2 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0.origin );
    var_2.angles = var_0.angles;
    var_2 setmodel( var_0.model );
    var_3 = var_0 getattachsize();

    for ( var_4 = 0; var_4 < var_3; var_4++ )
        var_2 attach( var_0 getattachmodelname( var_4 ), var_0 getattachtagname( var_4 ) );

    var_2 useanimtree( #animtree );

    if ( isdefined( var_0.team ) )
        var_2.team = var_0.team;

    if ( !var_1 )
        var_0 delete();

    var_2 scripts\engine\utility::self_func( "_encstr_B6530BCFBBC222166008070E60" );
    return var_2;
}

vehicle_animate( var_0, var_1 )
{
    self useanimtree( var_1 );
    self setanim( var_0 );
}

vehicle_getinstart( var_0 )
{
    var_1 = anim_pos( self, var_0 );
    return vehicle_getanimstart( var_1.getin, var_1.sittag, var_0, var_1.canshootinvehicle );
}

vehicle_getanimstart( var_0, var_1, var_2, var_3 )
{
    var_4 = spawnstruct();
    var_5 = undefined;
    var_6 = undefined;
    var_7 = self gettagorigin( var_1 );
    var_8 = self gettagangles( var_1 );

    if ( !getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) || isdefined( var_0 ) )
    {
        var_5 = getstartorigin( var_7, var_8, var_0 );
        var_6 = getstartangles( var_7, var_8, var_0 );
    }
    else
    {
        var_5 = var_7;
        var_6 = var_8;
    }

    var_4.origin = var_5;
    var_4.angles = var_6;
    var_4.vehicle_position = var_2;
    var_4.canshootinvehicle = var_3;
    return var_4;
}

is_position_in_group( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        return 1;

    var_3 = var_0 scripts\common\vehicle_code::get_vehicle_classname();
    var_4 = level.vehicle.templates.unloadgroups[var_3][var_2];

    foreach ( var_6 in var_4 )
    {
        if ( var_6 == var_1 )
            return 1;
    }

    return 0;
}

get_availablepositions( var_0 )
{
    var_1 = level.vehicle.templates.aianims[scripts\common\vehicle_code::get_vehicle_classname()];
    var_2 = [];
    var_3 = [];

    for ( var_4 = 0; var_4 < self.usedpositions.size; var_4++ )
    {
        if ( self.usedpositions[var_4] )
            continue;

        if ( ( getdvarint( "_encstr_89911B563758898D56EBEC2BA1B41BB1B2AFB0B4F557372DE6B3EB2451" ) || isdefined( var_1[var_4].getin ) ) && is_position_in_group( self, var_4, var_0 ) )
        {
            var_2[var_2.size] = vehicle_getinstart( var_4 );
            continue;
        }

        var_3[var_3.size] = var_4;
    }

    var_5 = spawnstruct();
    var_5.availablepositions = var_2;
    var_5.nonanimatedpositions = var_3;
    return var_5;
}

getanimatemodel()
{
    if ( isdefined( self.modeldummy ) )
        return self.modeldummy;
    else
        return self;
}

detach_models_with_substr( var_0, var_1 )
{
    var_2 = var_0 getattachsize();
    var_3 = [];
    var_4 = [];
    var_5 = 0;

    for ( var_6 = 0; var_6 < var_2; var_6++ )
    {
        var_7 = var_0 getattachmodelname( var_6 );
        var_8 = var_0 getattachtagname( var_6 );

        if ( issubstr( var_7, var_1 ) )
        {
            var_3[var_5] = var_7;
            var_4[var_5] = var_8;
        }
    }

    for ( var_6 = 0; var_6 < var_3.size; var_6++ )
        var_0 detach( var_3[var_6], var_4[var_6] );
}

should_give_orghealth()
{
    if ( !isai( self ) )
        return 0;

    if ( !isdefined( self.orghealth ) )
        return 0;

    return !isdefined( self.magic_bullet_shield );
}

stable_unlink( var_0 )
{
    self waittill( "_encstr_8229126EE8B08963B2BE99DB39AFD59B8D5AE66D" );

    if ( isalive( var_0 ) )
        var_0 unlink();
}

animate_guys( var_0 )
{
    var_1 = [];

    foreach ( var_3 in self.riders )
    {
        if ( isai( var_3 ) && !isalive( var_3 ) )
            continue;

        if ( isdefined( level.vehicle.aianimcheck[var_0] ) && ![[ level.vehicle.aianimcheck[var_0] ]]( var_3, var_3.vehicle_position ) )
            continue;

        if ( isdefined( level.vehicle.aianimthread[var_0] ) )
        {
            var_3 notify( "_encstr_B25B0843334CE29EA048" );
            thread [[ level.vehicle.aianimthread[var_0] ]]( var_3, var_3.vehicle_position );
            var_1[var_1.size] = var_3;
            continue;
        }
    }

    return var_1;
}

guy_cleanup_vehiclevars()
{
    self.vehicle_idling = undefined;
    self.standing = undefined;
    self.vehicle_position = undefined;
    self.delay = undefined;
}
