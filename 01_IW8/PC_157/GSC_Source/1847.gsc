// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level._effect["_encstr_A21313F548DE4B8148C0E23763DF408A5183C9B60F"] = loadfx( "_encstr_9E532D5DD6B0D2137F1F7E2083C65C630E3BE9C9775C80E576D3518A99CB0FE127951D6DE987782D8FFB83B833B3C3" );
    level._effect["_encstr_9D1313CC632CCD1A07BD4BB9A3AF6D5AB136EBE6C8"] = loadfx( "_encstr_AA522D14B7AB770857FAE960C3D72139C21A839F4D12ADD367EB28C097B6BB270A03082CA4AA691B2F87B28A0BCE72" );
    level._effect["_encstr_9813133E61799F54A938AAD2889FCCAF70D9BFA326"] = loadfx( "_encstr_A3692D1B4889BDD7837B3F3577A0A335E38882F39803257B70440E2898D1C33107AB6A0A4BE71C33562E436624392B" );
    level._effect["_encstr_A9CF1699B185E634E0EDD2E61DFA3B5DB966D22756BECD98"] = loadfx( "_encstr_BEEC33301BF898AB0360C8E94ABE8DB849D7487857B108596E1B5C6BE942E906B767E040F7570D013142C1FF3D3A6FCB49F2A8D85B" );
    level._effect["_encstr_B2311A2D53F25EA8802DD0C81347A095FA8793D7E3AB2B98A6C77822"] = loadfx( "_encstr_9F8D3074FFBBD58C07F29685A01E9A989893C8304D3F7E935D2BD090AF8A73596753D0DB88997A06B860E2FAC937105D8AA8" );
    level._effect["_encstr_A2C01733B158B90D38F62D9B1DF5C1BA366E2B7DE68BEAC219"] = loadfx( "_encstr_A9E12DEC330F5EB4BB83BEB5E0979936C2E6D0077B2DDCE879EC99E1F533E0EB0EAEC6CDACD7B9E2D55846173B99F0" );
    level._effect["_encstr_9415179804362BC0A875AA308301A14563C66FB7312255F9D3"] = loadfx( "_encstr_A85C2D67663C5E2DEEE0F5B61C7999B10B9BD00EDB4BCD47976733E1AF9907F538BAB16E59EB59E656D65E17D9991E" );
    var_0 = getdvar( "_encstr_89271693D75D794920D98250EB180768382851F2C04AA8EF", 0 );
    level.flashpoint_objectives = getdvar( "_encstr_BA151AE636E4FA66B1B09B3407DBA5B9D1FA7B4CA6951BE8A5D92BDC", 0 ) == "_encstr_AF4C02EA";
    level.iconflashpointfriendly = "_encstr_A1391521F6A8FBE9DF88DA0338F7D163A36BB5AE9D106F";
    level.iconflashpointenemy = "_encstr_8A84122DB1ED73F537EEDB3932CDBECA73565B97";
    level.iconflashpointcontested = "_encstr_8817162747C89A27E883BDC2D9D01F0290C5DB6F0FED92D4";
    level.iconflashpointneutral = "_encstr_A36714EA60A7ED0F03DC0F2A7D2B47B5EBB843D3E809";
    level.flashpoint_struct = spawnstruct();
    level.flashpoint_struct.flashpoints = [];
    level.flashpointdebugactive = getdvarint( "_encstr_A4B01A6EB14EAF3336C2DC0D0EF65AB9472256C4BA76A01B8ED2CEAC", 0 );

    if ( istrue( level.flashpoint_usebigmapsettings ) )
        level.flashpointmindist = 16777216;
    else
        level.flashpointmindist = 4194304;

    if ( 0 || var_0 == "_encstr_AF4C02EA" )
    {
        thread flashpoint_systemthink();
        level.flashpointactive = 1;
    }
    else
        level.flashpointactive = 0;

    thread flashpoint_systemtoggle();
}

flashpoint_systemtoggle()
{
    for (;;)
    {
        if ( getdvar( "_encstr_89271693D75D794920D98250EB180768382851F2C04AA8EF", 0 ) != "_encstr_B34C0233" )
        {
            if ( level.flashpoint_objectives )
                thread flashpoint_systemthink();

            level.flashpointactive = 1;

            foreach ( var_1 in level.players )
            {
                if ( !isdefined( var_1.flashpoint_trackingevents ) )
                    flashpoint_trackplayerevents( var_1 );
            }
        }
        else
        {
            level notify( "_encstr_BC7D1381219A480E8B62C6E9DA97BEB8F28F031DC4" );
            level.flashpointactive = 0;

            if ( level.flashpoint_objectives )
            {
                foreach ( var_4 in level.flashpoint_struct.flashpoints )
                    flashpoint_shutdown( var_4 );
            }
        }

        wait 1;
    }
}

flashpoint_systemthink()
{
    level endon( "_encstr_BC7D1381219A480E8B62C6E9DA97BEB8F28F031DC4" );

    for (;;)
    {
        foreach ( var_1 in level.flashpoint_struct.flashpoints )
        {
            var_2 = gettime();

            if ( var_2 - var_1.lasteventtime > 12500 )
            {
                flashpoint_shutdown( var_1 );
                continue;
            }

            if ( isdefined( var_1.objective ) && var_2 - var_1.lasteventtime >= 7500 && !istrue( var_1.endingsoon ) )
                flashpoint_endingsoon( var_1 );

            var_3 = getarraykeys( var_1.events );

            foreach ( var_5 in var_3 )
            {
                if ( var_2 - var_5 > 12500 )
                    var_1.events = scripts\engine\utility::array_remove_key( var_1.events, var_5 );
            }
        }

        foreach ( var_9 in level.players )
        {
            if ( !isdefined( var_9.flashpoint_trackingevents ) )
                thread flashpoint_trackplayerevents( var_9 );
        }

        wait 1;
    }
}

flashpoint_processnewevent( var_0, var_1, var_2, var_3 )
{
    if ( !level.flashpointactive )
        return;

    var_4 = ( 0, 0, 0 );

    if ( 0 )
        var_4 = ( randomfloatrange( -1000, 1000 ), randomfloatrange( -1000, 1000 ), 0 );

    if ( var_3 == "_encstr_8B5D085760CDB6423D6D" )
    {
        var_5 = var_0.origin + ( 0, 0, 32 );

        if ( 0 )
            var_5 = var_5 + var_4;

        thread playvfx( var_5, "_encstr_9D1313CC632CCD1A07BD4BB9A3AF6D5AB136EBE6C8" );
    }
    else
    {
        var_5 = ( 0, 0, 0 );

        if ( level.flashpoint_objectives )
            var_5 = vectorlerp( var_0.origin + ( 0, 0, 48 ), var_1.origin + ( 0, 0, 48 ), 0.25 );
        else
            var_5 = var_1.origin + ( 0, 0, 48 );

        if ( 0 )
            var_5 = var_5 + var_4;

        if ( level.flashpoint_objectives )
        {
            var_6 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_5 );
            var_7 = var_6 scripts\engine\utility::array_sort_with_func( level.flashpoint_struct.flashpoints, ::sortlocationsbydistance );
            var_6 delete();

            foreach ( var_9 in var_7 )
            {
                if ( distancesquared( var_9.curorigin, var_5 ) < level.flashpointmindist )
                {
                    flashpoint_updatepoint( var_9, var_5, var_2, var_3 );
                    return;
                }
            }

            if ( level.flashpoint_struct.flashpoints.size >= 2 )
                flashpoint_clearoldestpoint();

            flashpoint_createnew( var_5, var_2, var_3 );
        }

        thread playvfx( var_5, "_encstr_9D1313CC632CCD1A07BD4BB9A3AF6D5AB136EBE6C8" );
    }
}

flashpoint_createnew( var_0, var_1, var_2 )
{
    var_3 = spawnstruct();
    var_3.curorigin = var_0;
    var_3.lasteventtime = var_1;
    var_3.team = "_encstr_A40101";
    flashpoint_addeventtoqueue( var_3, var_1, var_2 );
    level.flashpoint_struct.flashpoints[level.flashpoint_struct.flashpoints.size] = var_3;
}

flashpoint_createmarker( var_0 )
{
    var_0.objective = scripts\mp\gameobjects::createobjidobject( var_0.curorigin, "_encstr_9BA4080D39CFFB5AB7C1", ( 0, 0, 0 ), undefined, "_encstr_BC19047780DA" );
    scripts\mp\objidpoolmanager::objective_set_play_intro( var_0.objective.objidnum, 0 );
    var_0.objective.lockupdatingicons = 0;
    scripts\mp\objidpoolmanager::update_objective_icon( var_0.objective.objidnum, level.iconflashpointneutral );
    scripts\mp\objidpoolmanager::update_objective_setbackground( var_0.objective.objidnum, 2 );
    var_0.objective.lockupdatingicons = 1;
}

flashpoint_updatepoint( var_0, var_1, var_2, var_3 )
{
    var_0 notify( "_encstr_8C9D0B5738D9E16D1323AFE310" );
    var_0 endon( "_encstr_8C9D0B5738D9E16D1323AFE310" );
    level endon( "_encstr_BC7D1381219A480E8B62C6E9DA97BEB8F28F031DC4" );

    if ( !isdefined( var_0.objective ) && var_0.events.size >= 5 )
        flashpoint_createmarker( var_0 );

    var_0.endingsoon = 0;
    var_0.lasteventtime = gettime();

    if ( isdefined( var_0.objective ) && level.flashpoint_objectives )
        scripts\mp\objidpoolmanager::objective_set_pulsate( var_0.objective.objidnum, 0 );
    else
        var_0.curorigin = vectorlerp( var_0.curorigin, var_1, 0.75 );

    thread playvfx( var_1, "_encstr_9D1313CC632CCD1A07BD4BB9A3AF6D5AB136EBE6C8" );
    flashpoint_addeventtoqueue( var_0, var_2, var_3 );
}

flashpoint_addeventtoqueue( var_0, var_1, var_2 )
{
    if ( !isdefined( var_0.events ) )
        var_0.events = [];

    var_0.events[var_1] = var_2;

    if ( var_0.events.size > 8 )
    {
        var_3 = [];
        var_4 = 0;

        foreach ( var_7, var_6 in var_0.events )
        {
            if ( var_4 > var_0.events.size - 8 )
                var_3[var_7] = var_6;

            var_4++;
        }

        var_0.events = var_3;
    }
}

flashpoint_shutdown( var_0 )
{
    var_0 notify( "_encstr_8C9D0B5738D9E16D1323AFE310" );

    if ( isdefined( var_0.objective ) && level.flashpoint_objectives )
    {
        var_0.objective scripts\mp\gameobjects::setvisibleteam( "_encstr_AABA05236DC831" );
        var_0.objective scripts\mp\gameobjects::releaseid();
        var_0.objective.visibleteam = "_encstr_AABA05236DC831";
        var_0.objective = undefined;
    }

    level.flashpoint_struct.flashpoints = scripts\engine\utility::array_remove( level.flashpoint_struct.flashpoints, var_0 );
}

flashpoint_endingsoon( var_0 )
{
    var_0.endingsoon = 1;

    if ( level.flashpoint_objectives )
        scripts\mp\objidpoolmanager::objective_set_pulsate( var_0.objective.objidnum, 1 );
}

flashpoint_checkforownerupdate( var_0 )
{
    var_1 = 0;
    var_2 = 0;
    var_3 = "_encstr_98C80A3DCF9681A3176A69D1";
    var_4 = var_0.team;

    foreach ( var_6 in var_0.events )
    {
        if ( var_6 == "_encstr_A8830DDAE803011F66D2D7C2CBA4C3" )
        {
            var_1++;
            continue;
        }

        if ( var_6 == "_encstr_9E210FD6B43636F5892FEB0BB136A5CA6E" )
            var_2++;
    }

    if ( ( var_1 - 1 > var_2 || var_2 == 0 ) && var_0.team != "_encstr_BA840579D3F7F6" && var_1 != 0 )
    {
        if ( level.flashpoint_objectives )
        {
            scripts\mp\objidpoolmanager::update_objective_ownerteam( var_0.objidnum, "_encstr_BA840579D3F7F6" );
            scripts\mp\objidpoolmanager::update_objective_sethot( var_0.objidnum, 0 );
        }

        var_0.team = "_encstr_BA840579D3F7F6";
        var_3 = "_encstr_81AE159118738317989FDCEF6745830CAF3AD86B78337A";
    }
    else if ( ( var_2 - 1 > var_1 || var_1 == 0 ) && var_0.team != "_encstr_BC850785638DA59537" && var_2 != 0 )
    {
        if ( level.flashpoint_objectives )
        {
            scripts\mp\objidpoolmanager::update_objective_ownerteam( var_0.objidnum, "_encstr_BC850785638DA59537" );
            scripts\mp\objidpoolmanager::update_objective_sethot( var_0.objidnum, 0 );
        }

        var_0.team = "_encstr_BC850785638DA59537";
        var_3 = "_encstr_B75317A977B43A36341051B70205D8B1A52BB908A7EEE6CAC9";
    }
    else if ( var_0.team != "_encstr_9BA4080D39CFFB5AB7C1" && var_2 != 0 && var_1 != 0 )
    {
        if ( level.flashpoint_objectives )
        {
            scripts\mp\objidpoolmanager::update_objective_ownerteam( var_0.objidnum, undefined );
            scripts\mp\objidpoolmanager::update_objective_sethot( var_0.objidnum, 1 );
        }

        var_0.team = "_encstr_9BA4080D39CFFB5AB7C1";
        var_3 = "_encstr_AD62146AEED2A3D8A1012ABD10A1DB373A2BDC3AB291";
    }
}

sortlocationsbydistance( var_0, var_1 )
{
    return distancesquared( var_0.curorigin, self.origin ) < distancesquared( var_1.curorigin, self.origin );
}

flashpoint_clearoldestpoint()
{
    var_0 = undefined;

    foreach ( var_2 in level.flashpoint_struct.flashpoints )
    {
        if ( !isdefined( var_0 ) )
        {
            var_0 = var_2;
            continue;
        }

        if ( var_2.lasteventtime > var_0.lasteventtime )
            var_0 = var_2;
    }

    flashpoint_shutdown( var_0 );
}

playvfx( var_0, var_1 )
{
    playfx( scripts\engine\utility::getfx( var_1 ), var_0 );
}

flashpoint_trackplayerevents( var_0 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_BC7D1381219A480E8B62C6E9DA97BEB8F28F031DC4" );
    var_0.flashpoint_trackingevents = 1;

    for (;;)
    {
        var_0 waittill( "_encstr_81750D2656CE4B73BECC5AE4A59BB3" );
        wait 1.0;
        flashpoint_processnewevent( var_0, undefined, gettime(), "_encstr_8B5D085760CDB6423D6D" );
        wait 0.25;
    }
}

flashpoint_spawnselectionvfx()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self notify( "_encstr_BAAE1ADB41A0326318D7C3DA3BE8A7AF60DB43449328FD2BBB885A62" );
    self endon( "_encstr_BAAE1ADB41A0326318D7C3DA3BE8A7AF60DB43449328FD2BBB885A62" );

    while ( self.inspawnselection )
    {
        foreach ( var_1 in level.players )
        {
            if ( !isalive( var_1 ) )
                continue;

            if ( self.team != var_1.team )
            {
                if ( istrue( level.spawnselectionshowenemy ) )
                    playfxontagforclients( level._effect["_encstr_9415179804362BC0A875AA308301A14563C66FB7312255F9D3"], var_1, "_encstr_A93008E0529FF7E1B73D", self );

                continue;
            }

            if ( istrue( level.spawnselectionshowfriendly ) )
            {
                if ( self.squadindex == var_1.squadindex )
                {
                    playfxontagforclients( level._effect["_encstr_A2C01733B158B90D38F62D9B1DF5C1BA366E2B7DE68BEAC219"], var_1, "_encstr_A93008E0529FF7E1B73D", self );
                    continue;
                }

                playfxontagforclients( level._effect["_encstr_B2311A2D53F25EA8802DD0C81347A095FA8793D7E3AB2B98A6C77822"], var_1, "_encstr_A93008E0529FF7E1B73D", self );
            }
        }

        wait 1.1;
    }
}
