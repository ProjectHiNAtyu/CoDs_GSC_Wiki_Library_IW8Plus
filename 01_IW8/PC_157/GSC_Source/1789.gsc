// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init( var_0, var_1 )
{
    var_2 = scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) && [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) ]]() == "_encstr_9507034B25";

    if ( var_2 )
        var_3 = removestructfromlevelarray( var_1 );
    else
        var_3 = 180;

    if ( !isdefined( level.plundermusicfourth ) )
    {
        if ( var_2 )
            level.plundermusicfourth = getdvarfloat( "_encstr_9DEB161B41164FAEA8FF2F31BF0936B7327E83E2AB6327E3", 0 );
        else
            level.plundermusicfourth = 0.2;
    }

    self.gasmaskhealth = var_3;
    self.plunderpads = var_3;
    self.plundersilentcountdownendtime = var_1;
    var_4 = 2;

    if ( unlocked_escape_door( var_1 ) )
        var_4 = 3;

    if ( isdefined( var_0 ) )
        self.gasmaskhealth = var_0;

    if ( var_2 )
        level.plunderonfirstpickup = self.gasmaskhealth / 6;

    level.plunderpads = var_3;
    self setclientomnvar( "_encstr_B15C14ED237E33D74BA08922E08B0C8BD69E4C714683", var_4 );
    self setclientomnvar( "_encstr_8CE412ABD2D7CEB0B9AD859B6DD7322CB658B3AC", self.gasmaskhealth / var_3 );
}

unlocked_escape_door( var_0 )
{
    return isdefined( var_0 ) && var_0 == "_encstr_81E81D133936F6DEA3AFB25C575AE0BE7616CDAD85DCD67D19EAC98598D82B";
}

removestructfromlevelarray( var_0 )
{
    if ( unlocked_escape_door( var_0 ) )
        return level.br_pickups.counts["_encstr_81E81D133936F6DEA3AFB25C575AE0BE7616CDAD85DCD67D19EAC98598D82B"];
    else
        return level.br_pickups.counts["_encstr_BD71153280C9D5B78B509D815DF0131177A0AB5A708F8C"];
}

respawnplayers( var_0 )
{
    return floor( var_0 * 6 + 0.5 );
}

processdamage( var_0 )
{
    var_1 = scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) && [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) ]]() == "_encstr_9507034B25";
    var_2 = self.gasmaskhealth / self.plunderpads;
    self.gasmaskhealth = self.gasmaskhealth - var_0;
    self.gasmaskhealth = max( 0, self.gasmaskhealth );
    var_3 = self.gasmaskhealth / self.plunderpads;
    self setclientomnvar( "_encstr_8CE412ABD2D7CEB0B9AD859B6DD7322CB658B3AC", var_3 );

    if ( self.gasmaskhealth <= 0 )
    {
        if ( var_1 && scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_80EA0832F1DE8877AF3B", "_encstr_81160F6DDAFFA82A8782E32C6ABFD249DA" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_80EA0832F1DE8877AF3B", "_encstr_81160F6DDAFFA82A8782E32C6ABFD249DA" ) ]]();
        else
            breakgasmask();
    }
    else if ( var_1 )
    {
        var_4 = respawnplayers( var_2 );
        var_5 = respawnplayers( var_3 );

        if ( var_4 > var_5 )
            self playsoundtoplayer( "_encstr_BED6164EEE67AA818B11477F98604712D58F9684C06152DA", self );
    }

    if ( !isdefined( self.gasdamagebuffer ) )
        self.gasdamagebuffer = 0;

    self.gasdamagebuffer = self.gasdamagebuffer + var_0 * level.plundermusicfourth;
    var_6 = floor( self.gasdamagebuffer );

    if ( var_6 >= 1 )
    {
        self dodamage( var_6, self.origin, self, undefined, "_encstr_A43E119D6859218C97A9F7EFD14F4F98831E53" );
        self.gasdamagebuffer = self.gasdamagebuffer - var_6;
    }
}

lights_setup_plane( var_0, var_1 )
{
    var_2 = scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) && [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) ]]() == "_encstr_9507034B25";

    if ( !var_2 )
        return 0;

    if ( !isdefined( self.plunderpads ) )
        self.plunderpads = removestructfromlevelarray( self.plundersilentcountdownendtime );

    var_3 = var_0 / self.plunderpads;
    var_4 = var_1 / self.plunderpads;
    var_5 = respawnplayers( var_3 );
    var_6 = respawnplayers( var_4 );
    return var_5 != var_6;
}

equipgasmask()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self playsoundtoplayer( "_encstr_9E1A132E8E07CAA1AB31675F7880A7F2CDB0322576", self );
    var_0 = getcompleteweaponname( "_encstr_AABA05236DC831" );
    var_1 = self getcurrentweapon();

    if ( !isnullweapon( var_1, var_0 ) )
        self forceplaygestureviewmodel( "_encstr_93EB0FD07F9B0E0D4A0A78FE69F27773FE" );

    self.gasmaskswapinprogress = 1;
    wait 0.338;
    self.gasmaskswapinprogress = 0;
    self.gasmaskequipped = 1;
    scripts\cp_mp\killstreaks\white_phosphorus::enableloopingcoughaudiosupression();
    var_2 = "_encstr_A10B0C48D338FF47472AE2F99020";

    if ( scripts\cp_mp\utility\game_utility::_id_140AA() )
        var_2 = "_encstr_9B2210F0EB1D69C79F1AAD06B7833F570897";

    if ( istrue( self.operatorcustomization.spawn_carriables_from_prefabs_percentage ) )
        self attach( var_2 );

    createoverlay();

    if ( isdefined( self.operatorcustomization.gender ) && self.operatorcustomization.gender == "_encstr_BD290799CAB585B156" )
        self _meth_87A9( "_encstr_9E6C0F54BED33BF1AB7F31F02FDD8941DA" );
    else
        self _meth_87A9( "_encstr_B14F0D0CE11757CB9382F14AC3680A" );
}

removegasmask()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( !istrue( self.gasmaskequipped ) )
        return;

    self playsoundtoplayer( "_encstr_B47514E6463FF2E9E3692F2730D89F3A15D4211A21CD", self );
    var_0 = getcompleteweaponname( "_encstr_AABA05236DC831" );
    var_1 = self getcurrentweapon();

    if ( !isnullweapon( var_1, var_0 ) )
        self forceplaygestureviewmodel( "_encstr_A1560D5F855B4FB3FBB8EA33F1EBEA" );

    self.gasmaskswapinprogress = 1;
    wait 0.521;
    self.gasmaskswapinprogress = 0;
    self.gasmaskequipped = 0;
    scripts\cp_mp\killstreaks\white_phosphorus::disableloopingcoughaudiosupression();
    var_2 = "_encstr_A10B0C48D338FF47472AE2F99020";

    if ( scripts\cp_mp\utility\game_utility::_id_140AA() )
        var_2 = "_encstr_9B2210F0EB1D69C79F1AAD06B7833F570897";

    if ( istrue( self.operatorcustomization.spawn_carriables_from_prefabs_percentage ) )
        self detach( var_2 );

    destroyoverlay();

    if ( isdefined( self.operatorcustomization.gender ) && self.operatorcustomization.gender == "_encstr_BD290799CAB585B156" )
        self _meth_87A9( "_encstr_BD290799CAB585B156" );
    else
        self _meth_87A9( "_encstr_A40101" );
}

breakgasmask()
{
    if ( !istrue( self.gasmaskequipped ) )
        return;

    self.gasmaskequipped = 0;
    self playsoundtoplayer( "_encstr_BED6164EEE67AA818B11477F98604712D58F9684C06152DA", self );
    var_0 = "_encstr_A10B0C48D338FF47472AE2F99020";

    if ( scripts\cp_mp\utility\game_utility::_id_140AA() )
        var_0 = "_encstr_9B2210F0EB1D69C79F1AAD06B7833F570897";

    if ( istrue( self.operatorcustomization.spawn_carriables_from_prefabs_percentage ) )
        self detach( var_0 );

    destroyoverlay();

    if ( isdefined( self.operatorcustomization.gender ) && self.operatorcustomization.gender == "_encstr_BD290799CAB585B156" )
        self _meth_87A9( "_encstr_BD290799CAB585B156" );
    else
        self _meth_87A9( "_encstr_A40101" );

    self playsoundtoplayer( "_encstr_A3D619A3CB2884509F9031501F7741803B7AB87D89A552978B73BB", self );
    self setclientomnvar( "_encstr_B15C14ED237E33D74BA08922E08B0C8BD69E4C714683", 0 );
    self setclientomnvar( "_encstr_8CE412ABD2D7CEB0B9AD859B6DD7322CB658B3AC", 0 );
}

createoverlay( var_0, var_1 )
{
    self.gasmaskoverlay = newclienthudelem( self );
    self.gasmaskoverlay.x = 0;
    self.gasmaskoverlay.y = 0;
    self.gasmaskoverlay.alignx = "_encstr_B1AD05C65666E8";
    self.gasmaskoverlay.aligny = "_encstr_B91904EC4718";
    self.gasmaskoverlay.horzalign = "_encstr_BC940BE9D5F91D47B0ABBD851E";
    self.gasmaskoverlay.vertalign = "_encstr_BC940BE9D5F91D47B0ABBD851E";
    self.gasmaskoverlay setshader( "_encstr_82D317CEB06E5BC29BB67DDE3BB2391B85F2EBC856B1472C23", 640, 480 );
    self.gasmaskoverlay.sort = -10;
    self.gasmaskoverlay.archived = 1;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) )
    {
        if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) ]]() == "_encstr_9507034B25" )
        {
            self.gasmaskoverlay.alpha = 0.0;

            if ( isdefined( var_0 ) )
            {
                if ( isdefined( var_1 ) )
                    wait( var_1 );

                if ( isdefined( self.gasmaskoverlay ) )
                    self.gasmaskoverlay fadeovertime( var_0 );
            }
        }
    }

    if ( isdefined( self.gasmaskoverlay ) )
    {
        self.gasmaskoverlay.alpha = 1.0;
        self.gasmaskoverlay.lowresbackground = 1;
    }
}

_id_1312F()
{
    if ( isdefined( self.gasmaskoverlay ) )
        self.gasmaskoverlay setshader( "_encstr_944D1EE7CF13CF2E973091AAE083A28309AB579C555813F6FD794A7340F75F53", 640, 480 );
}

patch_weapons_on_rack_cleararea( var_0 )
{
    self.gasmaskoverlay.alpha = 1.0;
    self.gasmaskoverlay fadeovertime( var_0 );
    self.gasmaskoverlay.alpha = 0.0;
}

destroyoverlay( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( !isdefined( self.gasmaskoverlay ) )
        return;

    if ( isdefined( var_0 ) )
    {
        if ( isdefined( var_1 ) )
            wait( var_1 );

        if ( isdefined( self.gasmaskoverlay ) )
        {
            patch_weapons_on_rack_cleararea( var_0 );
            wait( var_0 );
        }
    }

    if ( isdefined( self.gasmaskoverlay ) )
    {
        self.gasmaskoverlay destroy();
        self.gasmaskoverlay = undefined;
    }
}

hasgasmask( var_0 )
{
    return isdefined( var_0.gasmaskhealth );
}
