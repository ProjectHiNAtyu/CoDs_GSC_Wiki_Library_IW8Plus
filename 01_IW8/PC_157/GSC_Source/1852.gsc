// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

gethighestscoringteam()
{
    var_0 = 0;
    var_1 = undefined;
    var_2 = 0;

    foreach ( var_4 in level.teamnamelist )
    {
        var_5 = game["_encstr_B4040B6BBF898046C247E5C3DF"][var_4];

        if ( !isdefined( var_1 ) || var_5 > var_0 )
        {
            var_0 = var_5;
            var_1 = var_4;
            var_2 = 0;
            continue;
        }

        if ( var_5 == var_0 )
            var_2 = 1;
    }

    if ( var_2 )
        return "_encstr_8A190423A45D";
    else
        return var_1;
}

remove_hunter_class( var_0 )
{
    var_1 = 0;
    var_2 = undefined;

    foreach ( var_4 in level.teamnamelist )
    {
        if ( isdefined( var_0 ) && var_4 == var_0 )
            continue;

        var_5 = game["_encstr_B4040B6BBF898046C247E5C3DF"][var_4];

        if ( !isdefined( var_2 ) || var_5 > var_1 )
        {
            var_1 = var_5;
            var_2 = var_4;
        }
    }

    return [ var_2, game["_encstr_B4040B6BBF898046C247E5C3DF"][var_2] ];
}

_id_14026()
{
    level notify( "_encstr_B144196F3831A18303E58F865157CA675B0873F358091D5A6B80D3" );
    level endon( "_encstr_B144196F3831A18303E58F865157CA675B0873F358091D5A6B80D3" );
    waittillframeend;
    var_0 = setteamplacement( game["_encstr_B4040B6BBF898046C247E5C3DF"], "_encstr_8867058D65CB65" );
    var_1 = undefined;
    var_2 = 0;

    foreach ( var_4 in var_0 )
    {
        var_5 = game["_encstr_B4040B6BBF898046C247E5C3DF"][var_4];

        if ( !isdefined( var_1 ) || var_5 < var_1 )
        {
            var_1 = var_5;
            var_2++;
        }

        game["_encstr_B6920F5B30DB4D5380B7639D594963D327"][var_4] = var_2;
    }
}

run_common_functions_stealth()
{
    return game["_encstr_B6920F5B30DB4D5380B7639D594963D327"];
}

hidesafecircle( var_0, var_1 )
{
    return var_0.score > var_1.score;
}

gethighestscoringplayer()
{
    updateplacement();

    if ( !level.placement["_encstr_A61904730372"].size )
        return undefined;
    else
        return level.placement["_encstr_A61904730372"][0];
}

ishighestscoringplayertied()
{
    if ( level.placement["_encstr_A61904730372"].size > 1 )
    {
        var_0 = _getplayerscore( level.placement["_encstr_A61904730372"][0] );
        var_1 = _getplayerscore( level.placement["_encstr_A61904730372"][1] );
        return var_0 == var_1;
    }

    return 0;
}

getlosingplayers()
{
    updateplacement();
    var_0 = level.placement["_encstr_A61904730372"];
    var_1 = [];

    foreach ( var_3 in var_0 )
    {
        if ( var_3 == level.placement["_encstr_A61904730372"][0] )
            continue;

        var_1[var_1.size] = var_3;
    }

    return var_1;
}

giveplayerscore( var_0, var_1, var_2 )
{
    if ( istrue( level.ignorescoring ) && !issubstr( var_0, "_encstr_A9BD0716B96E4BCDE8" ) )
    {
        var_3 = scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" && !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

        if ( !var_3 )
            return;
    }

    if ( !level.teambased )
    {
        foreach ( var_5 in level.players )
        {
            if ( scripts\mp\utility\game::issimultaneouskillenabled() )
            {
                if ( var_5 != self )
                    continue;

                if ( level.roundscorelimit > 1 && var_5.pers["_encstr_93FB06DC6CBDE4CA"] >= level.roundscorelimit )
                    return;
            }
            else if ( level.roundscorelimit > 1 && var_5.pers["_encstr_93FB06DC6CBDE4CA"] >= level.roundscorelimit )
                return;
        }
    }

    var_5 = self;

    if ( isdefined( self.owner ) && !isbot( self ) )
        var_5 = self.owner;

    if ( !isplayer( var_5 ) )
        return;

    var_7 = var_1;

    if ( isdefined( level.onplayerscore ) )
        var_1 = [[ level.onplayerscore ]]( var_0, var_5, var_1, var_2 );

    if ( var_1 == 0 )
        return;

    var_5.pers["_encstr_93FB06DC6CBDE4CA"] = int( max( var_5.pers["_encstr_93FB06DC6CBDE4CA"] + var_1, 0 ) );
    var_5 scripts\mp\playerstats_interface::addtoplayerstat( int( var_7 ), "_encstr_87270B6B16E88DA14D470B1DE6", "_encstr_93FB06DC6CBDE4CA" );

    if ( var_5.pers["_encstr_93FB06DC6CBDE4CA"] >= 65000 )
        var_5.pers["_encstr_93FB06DC6CBDE4CA"] = 65000;

    var_5.score = var_5.pers["_encstr_93FB06DC6CBDE4CA"];
    var_8 = var_5.score;
    var_5 scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_93FB06DC6CBDE4CA", var_8 );
    var_5 scripts\mp\gamelogic::checkplayerscorelimitsoon();
    var_5 thread scripts\mp\gamelogic::checkscorelimit();
    var_5 scripts\mp\utility\script::bufferednotify( "_encstr_A3711656C23937CA23D79B8DB72759F5895D66CCACE45691", var_1 );
    scripts\mp\analyticslog::logevent_reportgamescore( var_1, gettime(), scripts\mp\rank::getscoreinfocategory( var_0, "_encstr_875B08551481933BB339" ) );
    var_5 scripts\common\utility::_id_13E0A( level._id_11B2F, var_0 );
    var_5 scripts\cp_mp\pet_watch::addobjectivescorecharge( var_0, int( var_7 ) );
}

_setplayerscore( var_0, var_1 )
{
    if ( var_1 == var_0.pers["_encstr_93FB06DC6CBDE4CA"] )
        return;

    if ( var_1 < 0 )
        return;

    var_0.pers["_encstr_93FB06DC6CBDE4CA"] = var_1;
    var_0.score = var_0.pers["_encstr_93FB06DC6CBDE4CA"];
    var_0 thread scripts\mp\gamelogic::checkscorelimit();
}

_getplayerscore( var_0 )
{
    if ( !isdefined( var_0 ) )
        var_0 = self;

    return var_0.pers["_encstr_93FB06DC6CBDE4CA"];
}

checkffascorejip()
{
    if ( level.roundscorelimit > 0 )
    {
        var_0 = self.score / level.roundscorelimit * 100;

        if ( var_0 > level.scorepercentagecutoff )
        {
            setnojipscore( 1, 1 );
            level.nojip = 1;
        }
    }
}

giveteamscoreforobjective( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( scripts\mp\utility\game::cantiebysimultaneouskill() )
        var_2 = 1;

    if ( !isdefined( var_2 ) )
        var_2 = 0;

    if ( istrue( level.gameended ) && !var_2 )
        return;

    if ( istrue( level.ignorescoring ) )
        return;

    if ( istrue( level.dontendonscore ) && _getteamscore( var_0 ) >= level.scorelimit )
        return;

    if ( var_2 )
    {
        if ( level.roundscorelimit > 1 && game["_encstr_B4040B6BBF898046C247E5C3DF"][var_0] >= level.roundscorelimit )
            return;
    }
    else if ( level.roundscorelimit > 1 && !istrue( level.dontendonscore ) )
    {
        foreach ( var_7 in level.teamnamelist )
        {
            if ( level scripts\mp\utility\game::vehicle_collision_ignorefuturemultievent( var_7 ) )
                continue;

            if ( game["_encstr_B4040B6BBF898046C247E5C3DF"][var_7] >= level.roundscorelimit )
                return;
        }
    }

    _setteamscore( var_0, _getteamscore( var_0 ) + var_1, var_2 );
    level notify( "_encstr_AAE6124D0FB9B733E3D95B420BDB2127B178B2D5", var_0, _getteamscore( var_0 ) );

    if ( isdefined( level.onteamscore ) )
        [[ level.onteamscore ]]( var_0, _getteamscore( var_0 ), var_3 );

    if ( isdefined( var_5 ) )
        var_9 = var_5;
    else
        var_9 = freight_lift_door_switch( var_2 );

    if ( !istrue( var_4 ) )
        _id_12762( var_9, var_2, level.waswinning );

    if ( var_9 != "_encstr_AABA05236DC831" )
    {
        level.waswinning = var_9;
        var_10 = _getteamscore( var_9 );
        var_11 = level.roundscorelimit;

        if ( var_10 == 0 || var_11 == 0 )
            return;

        var_12 = var_10 / var_11 * 100;

        if ( !scripts\mp\utility\game::isroundbased() && isdefined( level.nojip ) && !level.nojip )
        {
            if ( var_12 > level.scorepercentagecutoff )
            {
                setnojipscore( 1, 1 );
                level.nojip = 1;
            }
        }
    }

    if ( !level.onlinegame )
        _id_119C1();
}

_id_12762( var_0, var_1, var_2 )
{
    if ( !level.splitscreen && var_0 != "_encstr_AABA05236DC831" && var_0 != var_2 && gettime() - level.lastscorestatustime > 5000 && scripts\mp\utility\game::getscorelimit() != 1 )
    {
        if ( isdefined( level.delayleadtakendialog ) )
            level thread playleadtakendialog( var_1 );
        else
        {
            level.lastscorestatustime = gettime();
            scripts\mp\utility\dialog::leaderdialog( "_encstr_8CE60B63CA58C8AF3A2CAD2BCD", var_0, "_encstr_A96D0726D4272B4372" );

            if ( var_2 != "_encstr_AABA05236DC831" )
                scripts\mp\utility\dialog::leaderdialog( "_encstr_AFC70A63CA5846FAB17BE647", var_2, "_encstr_A96D0726D4272B4372" );
        }
    }
}

playleadtakendialog( var_0 )
{
    wait( level.delayleadtakendialog );
    level.lastscorestatustime = gettime();
    var_1 = freight_lift_door_switch( var_0 );
    scripts\mp\utility\dialog::leaderdialog( "_encstr_8CE60B63CA58C8AF3A2CAD2BCD", var_1, "_encstr_A96D0726D4272B4372" );

    foreach ( var_3 in level.teamnamelist )
    {
        if ( var_3 != var_1 )
            scripts\mp\utility\dialog::leaderdialog( "_encstr_AFC70A63CA5846FAB17BE647", var_3, "_encstr_A96D0726D4272B4372" );
    }
}

freight_lift_door_switch( var_0 )
{
    var_1 = level.teamnamelist;

    if ( !isdefined( level.waswinning ) )
        level.waswinning = "_encstr_AABA05236DC831";

    var_2 = "_encstr_AABA05236DC831";
    var_3 = 0;

    if ( level.waswinning != "_encstr_AABA05236DC831" )
    {
        var_2 = level.waswinning;
        var_3 = game["_encstr_B4040B6BBF898046C247E5C3DF"][level.waswinning];
    }

    var_4 = 1;

    foreach ( var_6 in var_1 )
    {
        if ( var_6 == level.waswinning )
            continue;

        if ( game["_encstr_B4040B6BBF898046C247E5C3DF"][var_6] > var_3 )
        {
            var_2 = var_6;
            var_3 = game["_encstr_B4040B6BBF898046C247E5C3DF"][var_6];
            var_4 = 1;
            continue;
        }

        if ( game["_encstr_B4040B6BBF898046C247E5C3DF"][var_6] == var_3 )
        {
            var_4 = var_4 + 1;
            var_2 = "_encstr_AABA05236DC831";
        }
    }

    return var_2;
}

_setteamscore( var_0, var_1, var_2 )
{
    if ( var_1 < 0 )
        var_1 = 0;

    if ( var_1 == game["_encstr_B4040B6BBF898046C247E5C3DF"][var_0] )
        return;

    game["_encstr_B4040B6BBF898046C247E5C3DF"][var_0] = var_1;
    updateteamscore( var_0 );

    if ( !istrue( level.dontendonscore ) )
        thread scripts\mp\gamelogic::roundend_checkscorelimit( var_0, var_2 );
}

updateteamscore( var_0 )
{
    if ( scripts\mp\utility\game::vehicle_collision_ignorefuturemultievent( var_0 ) )
        return;

    var_1 = 0;

    if ( !scripts\mp\utility\game::isroundbased() || !scripts\mp\utility\game::isobjectivebased() || scripts\mp\utility\game::ismoddedroundgame() )
        var_1 = _getteamscore( var_0 );
    else
        var_1 = game["_encstr_BD1B0AB298DBD25C53F9F7EB"][var_0];

    setteamscore( var_0, int( var_1 ) );
    level thread _id_14026();
}

updatetotalteamscore( var_0 )
{
    if ( !isdefined( game["_encstr_AF670B8EF6E8B0C6A66CDE4EAC"] ) )
    {
        game["_encstr_AF670B8EF6E8B0C6A66CDE4EAC"] = [];

        foreach ( var_2 in level.teamnamelist )
            game["_encstr_AF670B8EF6E8B0C6A66CDE4EAC"][var_2] = 0;
    }

    var_4 = scripts\mp\utility\game::getwingamebytype();

    switch ( var_4 )
    {
        case "_encstr_BD1B0AB298DBD25C53F9F7EB":
            game["_encstr_B4040B6BBF898046C247E5C3DF"][var_0] = game["_encstr_BD1B0AB298DBD25C53F9F7EB"][var_0];
            break;
        case "_encstr_B4040B6BBF898046C247E5C3DF":
            if ( scripts\mp\utility\game::inovertime() )
                game["_encstr_B4040B6BBF898046C247E5C3DF"][var_0] = game["_encstr_892C1181AB32C0D815EAF3A8D5FD391E4A0313"][var_0] + game["_encstr_BCB20EDBD956394796B62B4D6C7B9395"][var_0] + game["_encstr_B4040B6BBF898046C247E5C3DF"][var_0];
            else if ( scripts\mp\utility\game::resetscoreonroundstart() )
            {
                game["_encstr_AF670B8EF6E8B0C6A66CDE4EAC"][var_0] = game["_encstr_AF670B8EF6E8B0C6A66CDE4EAC"][var_0] + game["_encstr_B4040B6BBF898046C247E5C3DF"][var_0];
                game["_encstr_B4040B6BBF898046C247E5C3DF"][var_0] = game["_encstr_AF670B8EF6E8B0C6A66CDE4EAC"][var_0];
            }

            break;
    }

    setteamscore( var_0, int( game["_encstr_B4040B6BBF898046C247E5C3DF"][var_0] ) );
}

updateovertimescore()
{
    if ( game["_encstr_886315DEB3CAE4475AB6954AEDEACD19DCA01B16BCB232"] == 0 )
    {
        if ( !isdefined( game["_encstr_892C1181AB32C0D815EAF3A8D5FD391E4A0313"] ) )
        {
            game["_encstr_892C1181AB32C0D815EAF3A8D5FD391E4A0313"] = [];

            foreach ( var_1 in level.teamnamelist )
                game["_encstr_892C1181AB32C0D815EAF3A8D5FD391E4A0313"][var_1] = 0;
        }

        foreach ( var_1 in level.teamnamelist )
            game["_encstr_892C1181AB32C0D815EAF3A8D5FD391E4A0313"][var_1] = game["_encstr_B4040B6BBF898046C247E5C3DF"][var_1] + game["_encstr_AF670B8EF6E8B0C6A66CDE4EAC"][var_1];
    }

    if ( !isdefined( game["_encstr_BCB20EDBD956394796B62B4D6C7B9395"] ) )
    {
        game["_encstr_BCB20EDBD956394796B62B4D6C7B9395"] = [];

        foreach ( var_1 in level.teamnamelist )
            game["_encstr_BCB20EDBD956394796B62B4D6C7B9395"][var_1] = 0;
    }

    foreach ( var_1 in level.teamnamelist )
        game["_encstr_BCB20EDBD956394796B62B4D6C7B9395"][var_1] = game["_encstr_BCB20EDBD956394796B62B4D6C7B9395"][var_1] + ( game["_encstr_B4040B6BBF898046C247E5C3DF"][var_1] - game["_encstr_892C1181AB32C0D815EAF3A8D5FD391E4A0313"][var_1] );

    if ( !scripts\mp\utility\game::iswinbytworulegametype() )
    {
        game["_encstr_B4040B6BBF898046C247E5C3DF"][game["_encstr_941C0A6AF345075ED05BEAD3"]] = 0;
        setteamscore( game["_encstr_941C0A6AF345075ED05BEAD3"], 0 );
        game["_encstr_B4040B6BBF898046C247E5C3DF"][game["_encstr_95A70AA81FEE295D3A2F56DE"]] = 0;
        setteamscore( game["_encstr_95A70AA81FEE295D3A2F56DE"], 0 );

        if ( scripts\mp\utility\game::istimetobeatvalid() && game["_encstr_B1D40F332A0F051175EA6B5BE49350DFD7"] == game["_encstr_941C0A6AF345075ED05BEAD3"] )
        {
            game["_encstr_B4040B6BBF898046C247E5C3DF"][game["_encstr_941C0A6AF345075ED05BEAD3"]] = game["_encstr_97FD1053FB8B020CB071FFF7D8EFF36A4D05"];
            updateteamscore( game["_encstr_941C0A6AF345075ED05BEAD3"] );
            game["_encstr_BCB20EDBD956394796B62B4D6C7B9395"][game["_encstr_941C0A6AF345075ED05BEAD3"]] = game["_encstr_BCB20EDBD956394796B62B4D6C7B9395"][game["_encstr_941C0A6AF345075ED05BEAD3"]] - game["_encstr_97FD1053FB8B020CB071FFF7D8EFF36A4D05"];
        }

        if ( scripts\mp\utility\game::istimetobeatvalid() && game["_encstr_B1D40F332A0F051175EA6B5BE49350DFD7"] == game["_encstr_95A70AA81FEE295D3A2F56DE"] )
        {
            game["_encstr_B4040B6BBF898046C247E5C3DF"][game["_encstr_95A70AA81FEE295D3A2F56DE"]] = game["_encstr_97FD1053FB8B020CB071FFF7D8EFF36A4D05"];
            updateteamscore( game["_encstr_95A70AA81FEE295D3A2F56DE"] );
            game["_encstr_BCB20EDBD956394796B62B4D6C7B9395"][game["_encstr_95A70AA81FEE295D3A2F56DE"]] = game["_encstr_BCB20EDBD956394796B62B4D6C7B9395"][game["_encstr_95A70AA81FEE295D3A2F56DE"]] - game["_encstr_97FD1053FB8B020CB071FFF7D8EFF36A4D05"];
        }
    }
}

_getteamscore( var_0 )
{
    return int( game["_encstr_B4040B6BBF898046C247E5C3DF"][var_0] );
}

removedisconnectedplayerfromplacement()
{
    if ( !isdefined( level.placement ) || !isdefined( level.placement["_encstr_A61904730372"] ) )
        return;

    var_0 = 0;
    var_1 = level.placement["_encstr_A61904730372"].size;
    var_2 = 0;

    for ( var_3 = 0; var_3 < var_1; var_3++ )
    {
        if ( level.placement["_encstr_A61904730372"][var_3] == self )
            var_2 = 1;

        if ( var_2 )
            level.placement["_encstr_A61904730372"][var_3] = level.placement["_encstr_A61904730372"][var_3 + 1];
    }

    if ( !var_2 )
        return;

    level.placement["_encstr_A61904730372"][var_1 - 1] = undefined;

    if ( level.teambased )
        updateteamplacement();
}

updateplacement()
{
    var_0 = [];

    foreach ( var_2 in level.players )
    {
        if ( isdefined( var_2.connectedpostgame ) )
            continue;

        if ( var_2.pers["_encstr_89EF05D46BA8FD"] == "_encstr_A68C0A5803A5D151A2B310A6" || var_2.pers["_encstr_89EF05D46BA8FD"] == "_encstr_B33E0979A77828123F58A2" || var_2.pers["_encstr_89EF05D46BA8FD"] == "_encstr_AABA05236DC831" )
            continue;

        var_0[var_0.size] = var_2;
    }

    for ( var_4 = 1; var_4 < var_0.size; var_4++ )
    {
        var_2 = var_0[var_4];
        var_5 = var_2.score;

        for ( var_6 = var_4 - 1; var_6 >= 0 && getbetterplayer( var_2, var_0[var_6] ) == var_2; var_6-- )
            var_0[var_6 + 1] = var_0[var_6];

        var_0[var_6 + 1] = var_2;
    }

    level.placement["_encstr_A61904730372"] = var_0;

    if ( level.teambased )
        updateteamplacement();
}

getbetterplayer( var_0, var_1 )
{
    if ( isdefined( level.lastplayerwins ) )
        return level.lastplayerwins;

    if ( var_0.score > var_1.score )
        return var_0;

    if ( var_1.score > var_0.score )
        return var_1;

    if ( var_0.deaths < var_1.deaths )
        return var_0;

    if ( var_1.deaths < var_0.deaths )
        return var_1;

    if ( scripts\engine\utility::cointoss() )
        return var_0;
    else
        return var_1;
}

updateteamplacement()
{
    var_0 = level.placement["_encstr_A61904730372"];
    var_1 = [];

    foreach ( var_3 in var_0 )
    {
        var_4 = var_3.pers["_encstr_89EF05D46BA8FD"];

        if ( !isdefined( var_1[var_4] ) )
            var_1[var_4] = [];

        var_1[var_4][var_1[var_4].size] = var_3;
    }

    foreach ( var_7 in level.teamnamelist )
    {
        if ( isdefined( var_1[var_7] ) )
        {
            level.placement[var_7] = var_1[var_7];
            continue;
        }

        level.placement[var_7] = [];
    }
}

processassist( var_0, var_1, var_2 )
{
    if ( isdefined( level.assists_disabled ) )
        return;

    processassist_regularmp( var_0, var_1, var_2 );
}

processassist_regularmp( var_0, var_1, var_2 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( isdefined( var_1 ) && var_1.basename == "_encstr_9EDB195BB8D8784731B31367338BC37F23EDCBE9674807CA777DF3" )
        return;

    if ( !isdefined( var_2 ) )
        var_2 = 0;

    var_3 = undefined;
    var_4 = undefined;
    var_5 = undefined;

    if ( isdefined( var_0.ismarkedtarget ) )
    {
        var_4 = var_0.attackers;
        var_3 = 1;
    }

    if ( isdefined( var_0.markedbyboomperk ) )
        var_5 = var_0.markedbyboomperk;

    wait 0.05;
    scripts\mp\utility\script::waittillslowprocessallowed();
    var_6 = self.pers["_encstr_89EF05D46BA8FD"];

    if ( !scripts\mp\utility\teams::isgameplayteam( var_6 ) )
        return;

    if ( var_6 == var_0.pers["_encstr_89EF05D46BA8FD"] && level.teambased )
        return;

    var_7 = undefined;
    var_8 = "_encstr_A9BD0716B96E4BCDE8";

    if ( !level.teambased )
        var_8 = "_encstr_A1A70B5053C67F5383D7F52BB7";

    var_9 = scripts\mp\rank::getscoreinfovalue( var_8 );

    if ( !level.teambased )
    {
        var_7 = var_9 + var_9 * var_2;
        thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_A1A70B5053C67F5383D7F52BB7", var_1, var_7 );
    }
    else if ( isdefined( var_5 ) && scripts\engine\utility::array_contains_key( var_5, scripts\mp\utility\player::getuniqueid() ) )
        thread scripts\mp\utility\points::givestreakpointswithtext( "_encstr_8F250C199FE0244FBD66930A681C", var_1, undefined );
    else
    {
        var_7 = var_9 + var_9 * var_2;
        thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_A9BD0716B96E4BCDE8", var_1, var_7 );
    }

    if ( level.teambased )
    {
        var_10 = scripts\common\utility::playersinsphere( self.origin, 300 );

        foreach ( var_12 in var_10 )
        {
            if ( self.team != var_12.team || self == var_12 )
                continue;

            if ( !scripts\mp\utility\player::isreallyalive( var_12 ) )
                continue;

            self.modifiers["_encstr_9B220BB1C315B0FB801CA94589"] = 1;
            break;
        }
    }

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_950B130F210D8AD1B820BBC07EC8E1535581EF83E3" ) && isdefined( self.hardlineactive ) )
    {
        if ( self.hardlineactive["_encstr_A9F30862E89734A7EBE6"] == 1 )
        {
            if ( !scripts\mp\utility\weapon::iskillstreakweapon( var_1 ) && !scripts\mp\utility\weapon::issuperweapon( var_1 ) )
                thread scripts\mp\utility\points::givestreakpointswithtext( "_encstr_A2A910B037DC4BE6E8AF34B09319B15AE656", var_1, 1 );
        }

        self notify( "_encstr_A2A910B037DC4BE6E8AF34B09319B15AE656" );
    }

    scripts\mp\playerstats_interface::addtoplayerstat( 1, "_encstr_ADBC0C49D2972E100B43E1C38C32", "_encstr_A9F30862E89734A7EBE6" );

    if ( isdefined( self.pers["_encstr_A9F30862E89734A7EBE6"] ) && self.pers["_encstr_A9F30862E89734A7EBE6"] < 998 )
    {
        scripts\mp\utility\stats::incpersstat( "_encstr_A9F30862E89734A7EBE6", 1 );
        self.assists = scripts\mp\utility\stats::getpersstat( "_encstr_A9F30862E89734A7EBE6" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_A9F30862E89734A7EBE6", self.assists );
    }

    scripts\mp\utility\script::bufferednotify( "_encstr_AFF11011FE90B88AC4DFD230712FADAABD7D", self.modifiers );
    thread scripts\cp\vehicles\vehicle_compass_cp::onplayerkillassist( var_0 );
}

processshieldassist( var_0 )
{
    if ( isdefined( level.assists_disabled ) )
        return;

    processshieldassist_regularmp( var_0 );
}

processshieldassist_regularmp( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    wait 0.05;
    scripts\mp\utility\script::waittillslowprocessallowed();

    if ( !scripts\mp\utility\teams::isgameplayteam( self.pers["_encstr_89EF05D46BA8FD"] ) )
        return;

    if ( self.pers["_encstr_89EF05D46BA8FD"] == var_0.pers["_encstr_89EF05D46BA8FD"] )
        return;

    thread scripts\mp\utility\points::giveunifiedpoints( "_encstr_AAEC0ECD1AB456B1327D586ECD2DCDE8" );
    scripts\mp\playerstats_interface::addtoplayerstat( 1, "_encstr_ADBC0C49D2972E100B43E1C38C32", "_encstr_A9F30862E89734A7EBE6" );

    if ( self.pers["_encstr_A9F30862E89734A7EBE6"] < 998 )
    {
        scripts\mp\utility\stats::incpersstat( "_encstr_A9F30862E89734A7EBE6", 1 );
        self.assists = scripts\mp\utility\stats::getpersstat( "_encstr_A9F30862E89734A7EBE6" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_A9F30862E89734A7EBE6", self.assists );
    }

    thread scripts\cp\vehicles\vehicle_compass_cp::onplayerkillassist( var_0 );
}

initassisttrackers()
{
    self notify( "_encstr_9DF6132D9BD247146E37B49B1D2A9C2C8D6DCA93B9" );
    self.buffedbyplayers = [];
    self.debuffedbyplayers = [];
}

trackdebuffassist( var_0, var_1, var_2 )
{
    if ( !isdefined( var_1.debuffedbyplayers[var_2] ) )
        var_1.debuffedbyplayers[var_2] = [];

    if ( scripts\mp\utility\game::lpcfeaturegated() && var_1.debuffedbyplayers[var_2].size >= getdvarint( "_encstr_93F0176B31661FFEF8CF15E17931022F06A882A2BDBD83B7D8", 4 ) && getdvarint( "_encstr_93F0176B31661FFEF8CF15E17931022F06A882A2BDBD83B7D8", 4 ) > 0 )
        return 0;

    if ( !isdefined( var_1.debuffedbyplayers[var_2][var_0 getentitynumber()] ) )
        var_1.debuffedbyplayers[var_2][var_0 getentitynumber()] = 0;

    var_1.debuffedbyplayers[var_2][var_0 getentitynumber()]++;
    return 1;
}

untrackdebuffassist( var_0, var_1, var_2 )
{
    if ( isdefined( var_0 ) )
    {
        if ( isdefined( var_1.debuffedbyplayers[var_2] ) && isdefined( var_1.debuffedbyplayers[var_2][var_0 getentitynumber()] ) )
        {
            var_1.debuffedbyplayers[var_2][var_0 getentitynumber()]--;

            if ( var_1.debuffedbyplayers[var_2][var_0 getentitynumber()] <= 0 )
                var_1.debuffedbyplayers[var_2][var_0 getentitynumber()] = undefined;

            var_3 = 1;

            foreach ( var_6, var_5 in var_1.debuffedbyplayers[var_2] )
            {
                if ( var_5 > 0 )
                {
                    var_3 = 0;
                    break;
                }
            }

            if ( var_3 && isdefined( var_2 ) && isdefined( var_1.debuffedbyplayers ) )
            {
                var_1.debuffedbyplayers[var_2] = undefined;
                return;
            }
        }
        else
        {

        }
    }
}

trackdebuffassistfortime( var_0, var_1, var_2, var_3, var_4 )
{
    var_1 endon( "_encstr_9DF6132D9BD247146E37B49B1D2A9C2C8D6DCA93B9" );
    var_1 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_5 = trackdebuffassist( var_0, var_1, var_2 );

    if ( !var_5 )
        return;

    if ( isdefined( var_4 ) && isstring( var_4 ) )
        var_1 scripts\engine\utility::waittill_notify_or_timeout( var_4, var_3 );
    else
        wait( var_3 );

    untrackdebuffassist( var_0, var_1, var_2 );
}

isdebuffedbyweapon( var_0, var_1 )
{
    if ( scripts\mp\utility\game::runleanthreadmode() )
        return 0;

    if ( isdefined( var_0.debuffedbyplayers[var_1] ) )
    {
        foreach ( var_4, var_3 in var_0.debuffedbyplayers[var_1] )
        {
            if ( var_3 <= 0 )
                continue;

            if ( !isdefined( level.playersbyentitynumber[var_4] ) )
                continue;

            return 1;
        }
    }

    return 0;
}

isdebuffedbyweaponandplayer( var_0, var_1, var_2 )
{
    if ( scripts\mp\utility\game::runleanthreadmode() )
        return 0;

    if ( !isdefined( var_1.debuffedbyplayers[var_2] ) )
        return 0;

    if ( !isdefined( var_1.debuffedbyplayers[var_2][var_0 getentitynumber()] ) )
        return 0;

    if ( var_1.debuffedbyplayers[var_2][var_0 getentitynumber()] <= 0 )
        return 0;

    return 1;
}

getdebuffattackersbyweapon( var_0, var_1 )
{
    if ( scripts\mp\utility\game::runleanthreadmode() )
        return undefined;

    var_2 = [];

    if ( isplayer( var_0 ) )
    {
        if ( isdefined( var_0.debuffedbyplayers[var_1] ) )
        {
            foreach ( var_5, var_4 in var_0.debuffedbyplayers[var_1] )
            {
                if ( var_4 <= 0 )
                    continue;

                if ( !isdefined( level.playersbyentitynumber[var_5] ) )
                    continue;

                var_2[var_2.size] = level.playersbyentitynumber[var_5];
            }
        }
    }

    return var_2;
}

trackbuffassist( var_0, var_1, var_2 )
{
    if ( scripts\mp\utility\game::runleanthreadmode() )
        return;

    if ( var_0 != var_1 )
    {
        if ( !isdefined( var_1.buffedbyplayers[var_2] ) )
            var_1.buffedbyplayers[var_2] = [];

        if ( scripts\mp\utility\game::lpcfeaturegated() && var_1.buffedbyplayers[var_2].size >= getdvarint( "_encstr_93F0176B31661FFEF8CF15E17931022F06A882A2BDBD83B7D8", 4 ) && getdvarint( "_encstr_93F0176B31661FFEF8CF15E17931022F06A882A2BDBD83B7D8", 4 ) > 0 )
            return 0;

        if ( !isdefined( var_1.buffedbyplayers[var_2][var_0 getentitynumber()] ) )
            var_1.buffedbyplayers[var_2][var_0 getentitynumber()] = 0;

        var_1.buffedbyplayers[var_2][var_0 getentitynumber()]++;
        return 1;
    }
}

untrackbuffassist( var_0, var_1, var_2 )
{
    if ( scripts\mp\utility\game::runleanthreadmode() )
        return;

    if ( isdefined( var_1 ) )
    {
        if ( isdefined( var_1.buffedbyplayers[var_2] ) && isdefined( var_1.buffedbyplayers[var_2][var_0 getentitynumber()] ) )
        {
            var_1.buffedbyplayers[var_2][var_0 getentitynumber()]--;

            if ( var_1.buffedbyplayers[var_2][var_0 getentitynumber()] <= 0 )
                var_1.buffedbyplayers[var_2][var_0 getentitynumber()] = undefined;
        }
        else
        {

        }
    }
}

trackbuffassistfortime( var_0, var_1, var_2, var_3, var_4 )
{
    if ( scripts\mp\utility\game::runleanthreadmode() )
        return;

    var_1 endon( "_encstr_9DF6132D9BD247146E37B49B1D2A9C2C8D6DCA93B9" );
    var_1 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_5 = trackbuffassist( var_0, var_1, var_2 );

    if ( !var_5 )
        return;

    if ( isdefined( var_4 ) && isstring( var_4 ) )
        var_1 scripts\engine\utility::waittill_notify_or_timeout( var_4, var_3 );
    else
        wait( var_3 );

    untrackbuffassist( var_0, var_1, var_2 );
}

awardbuffdebuffassists( var_0, var_1 )
{
    var_2 = [];

    foreach ( var_10, var_4 in var_1.debuffedbyplayers )
    {
        foreach ( var_9, var_6 in var_4 )
        {
            if ( var_6 <= 0 )
                continue;

            var_7 = level.playersbyentitynumber[var_9];

            if ( isdefined( var_7 ) && var_7.team != "_encstr_A68C0A5803A5D151A2B310A6" && var_7.team != "_encstr_B33E0979A77828123F58A2" && var_7 scripts\mp\utility\player::isenemy( var_1 ) )
            {
                var_8 = var_7.guid;

                if ( !isdefined( var_2[var_8] ) )
                    var_2[var_8] = var_7;
            }
        }
    }

    foreach ( var_4 in var_0.buffedbyplayers )
    {
        foreach ( var_9, var_13 in var_4 )
        {
            if ( var_13 <= 0 )
                continue;

            var_7 = level.playersbyentitynumber[var_9];

            if ( isdefined( var_7 ) && var_7.team != "_encstr_A68C0A5803A5D151A2B310A6" && var_7.team != "_encstr_B33E0979A77828123F58A2" && var_7 scripts\mp\utility\player::isenemy( var_1 ) )
            {
                var_8 = var_7.guid;

                if ( !isdefined( var_2[var_8] ) )
                    var_2[var_8] = var_7;
            }
        }
    }

    foreach ( var_8, var_7 in var_2 )
    {
        if ( !isdefined( var_1.attackerdata ) || !isdefined( var_1.attackerdata[var_7.guid] ) )
            scripts\mp\damage::addattacker( var_1, var_7, undefined, isundefinedweapon(), 0, undefined, undefined, undefined, undefined, undefined );
    }
}

gamemodeusesdeathmatchscoring( var_0 )
{
    return var_0 == "_encstr_8807031CC1" || var_0 == "_encstr_B620095BED4C089022D393";
}

_id_119C1()
{
    var_0 = level.teamnamelist[0];
    var_1 = level.teamnamelist[1];
    var_2 = getteamscore( var_0 );
    var_3 = getteamscore( var_1 );
    getentitylessscriptablearray( "_encstr_939C184663DBCED75667ACE6E8BEDC36BD9CCAFAB1A12CE6CE2B", [ "_encstr_A9320CE0121E93A6960768D71DEF", var_0, "_encstr_8FE70CAC13D0859FFE0612EAA8BD", var_1, "_encstr_BDD90D63D1701581F7D7AFD78F7E6A", var_2, "_encstr_B2D90D9B4297B9F18A5F1F378742F8", var_3 ] );
}
