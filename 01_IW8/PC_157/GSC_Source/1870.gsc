// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

haslightarmor( var_0 )
{
    return getlightarmorvalue( var_0 ) > 0;
}

getlightarmorvalue( var_0 )
{
    if ( isdefined( var_0.lightarmorhp ) )
        return var_0.lightarmorhp;

    return 0;
}

setlightarmorvalue( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_2 ) )
        var_2 = 1;

    if ( !isdefined( var_3 ) )
        var_3 = 1;

    if ( lightarmor_lightarmor_disabled( var_0 ) )
    {
        var_1 = 0;
        var_2 = 1;
    }

    var_4 = getlightarmorvalue( var_0 );

    if ( !var_2 && var_4 > var_1 )
        var_1 = var_4;

    if ( var_4 <= 0 && var_1 > 0 )
    {
        lightarmor_set( var_0, var_1, var_3 );
        return;
    }

    if ( var_4 > 0 && var_1 <= 0 )
    {
        lightarmor_unset( var_0 );
        return;
    }

    var_0.lightarmorhp = var_1;

    if ( isplayer( var_0 ) && var_4 <= var_1 && var_1 > 0 && var_3 == 1 )
        thread lightarmor_setfx( var_0 );

    if ( isplayer( var_0 ) )
        lightarmor_updatehud( var_0 );
}

init()
{
    level._effect["_encstr_9827162D1808586B87C5AFAFED50F38D48A3E47213A01623"] = loadfx( "_encstr_B4B428CD461E62A6AF2BA918222B48C81DCA63C7FEEFA0E0EF2380D83A6F08903622D5C39552DABCFBBB" );
}

lightarmor_set( var_0, var_1, var_2 )
{
    var_0 notify( "_encstr_B3140F0548140B0B2F8B40F2E3568F23E5" );
    var_0.lightarmorhp = var_1;
    lightarmor_updatehud( var_0 );
    thread lightarmor_monitordeath( var_0 );

    if ( isplayer( var_0 ) && var_2 == 1 )
        thread lightarmor_setfx( var_0 );
}

lightarmor_unset( var_0 )
{
    var_0 notify( "_encstr_A983118DB4EC0D8E5093D6B74EAF5D9B9BAC8E" );
    var_0.lightarmorhp = undefined;
    lightarmor_updatehud( var_0 );

    if ( isplayer( var_0 ) )
    {

    }

    var_0 notify( "_encstr_8CBD135AE340F5EB85D682DAB96BBBA18875CDDF25" );
}

lightarmor_modifydamage( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 )
{
    var_11 = 0;
    var_12 = 0;
    var_13 = var_0.lightarmorhp;

    if ( !isdefined( var_10 ) )
        var_10 = 1;

    if ( !var_11 )
    {
        if ( var_4 == "_encstr_8FA10CBC37F487A99F9C0DE438C7" )
            var_11 = 1;
    }

    if ( !var_11 )
    {
        if ( isexplosivedamagemod( var_4 ) )
        {
            if ( isdefined( var_9 ) && isdefined( var_9.stuckenemyentity ) && var_9.stuckenemyentity == var_0 )
                var_11 = 1;
        }
    }

    if ( !var_11 )
    {
        if ( scripts\mp\utility\weapon::issuperdamagesource( var_5 ) )
            var_11 = 1;
    }

    if ( !var_11 )
    {
        var_12 = min( var_2 + var_3, var_0.lightarmorhp );
        var_13 = var_13 - ( var_2 + var_3 );

        if ( !var_10 )
            var_0.lightarmorhp = var_0.lightarmorhp - ( var_2 + var_3 );

        var_2 = 0;
        var_3 = 0;

        if ( var_13 <= 0 )
        {
            var_2 = abs( var_13 );
            var_3 = 0;

            if ( !var_10 )
                lightarmor_unset( var_0 );
        }
    }

    if ( !var_10 )
        lightarmor_updatehud( self );

    if ( var_12 > 0 && var_2 == 0 )
        var_2 = 1;

    return [ var_12, var_2, var_3 ];
}

lightarmor_lightarmor_disabled( var_0 )
{
    if ( var_0 scripts\mp\heavyarmor::hasheavyarmor() )
        return 1;

    return 0;
}

lightarmor_monitordeath( var_0 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 endon( "_encstr_B3140F0548140B0B2F8B40F2E3568F23E5" );
    var_0 endon( "_encstr_A983118DB4EC0D8E5093D6B74EAF5D9B9BAC8E" );
    var_0 waittill( "_encstr_A3750609A5E61883" );
    thread lightarmor_unset( var_0 );
}

lightarmor_updatehud( var_0 )
{
    if ( !isplayer( var_0 ) )
        return;
}

lightarmor_setfx( var_0 )
{

}
