// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    var_0 = spawnstruct();
    level.superglobals = var_0;
    var_0.staticsuperdata = [];
    var_0.superweapons = [];
    var_0.superearnratemultiplier = 1.0;
    var_0.supersbyid = [];
    var_0.supersbyoffhand = [];
    var_0._id_13987 = [];
    var_0.pointeventdata = [];
    loadsupertable();
    loadpointstable();
    registersupers();
    initsuperdvars();
    scripts\mp\utility\spawn_event_aggregator::registeronplayerspawncallback( ::clearsuperreminderondeath );
    thread watchforgameend();

    if ( getdvarint( "_encstr_98E41837B139F5E65DC12B9C98DBE8A3B2272F8A9B58C4D85919", 0 ) > 0 )
        thread watchsuperlottery();

    if ( level.allowsupers )
        level thread handlesuperearnovertime();

    scripts\mp\equipment\tactical_cover::tac_cover_init();
    scripts\mp\equipment\support_box::supportbox_init();
    scripts\mp\equipment\ammo_box::ammobox_init();
    scripts\mp\supers\super_stoppingpower::_id_138E7();
    _luidecision::_id_11ED7();
    scripts\mp\utility\spawn_event_aggregator::registeronplayerspawncallback( ::_id_13978 );
    _debug_rooftop_heli_start::subscribetoquestlocale();
    level.setsuperweapondisabled = ::setsuperweapondisabled;
    scripts\cp_mp\utility\script_utility::registersharedfunc( "_encstr_BEB4068F1B5BA3AB", "_encstr_82FC179BC1D57FEC61EB7875FD4176F77D3F236248A5BF25F0", ::_id_144FA );
}

loadsupertable()
{
    var_0 = scripts\mp\utility\game::getgametype() == "_encstr_9507034B25";
    var_1 = 1;

    for (;;)
    {
        var_2 = tablelookupbyrow( "_encstr_8798128AD96AF773A335B32B077190F7CA061E7D", var_1, 0 );

        if ( !isdefined( var_2 ) || var_2 == "_encstr_A40101" )
            break;

        var_3 = readsupertablecell( var_1, 3, 1 );

        if ( istrue( var_3 ) && !var_0 )
        {
            var_1++;
            continue;
        }

        var_4 = spawnstruct();
        level.superglobals.staticsuperdata[var_2] = var_4;
        var_4.id = var_1;
        var_4.ref = var_2;
        var_4.weapon = readsupertablecell( var_1, 1 );
        var_5 = undefined;

        if ( scripts\mp\utility\game::isanymlgmatch() )
            var_5 = readsupertablecell( var_1, 28, 1 );

        if ( !isdefined( var_5 ) )
            var_5 = readsupertablecell( var_1, 2, 1 );

        var_4.pointsneeded = var_5;
        var_6 = undefined;

        if ( scripts\mp\utility\game::isanymlgmatch() )
            var_6 = readsupertablecell( var_1, 26, 1 );

        if ( !isdefined( var_6 ) )
            var_6 = readsupertablecell( var_1, 4, 1 );

        var_4.usetime = var_6;
        var_4.maxactivations = readsupertablecell( var_1, 5, 1 );
        var_4._id_12ACD = readsupertablecell( var_1, 6, 1 );
        var_4.useweapon = readsupertablecell( var_1, 11 );
        var_4.useweaponclipammo = readsupertablecell( var_1, 12, 1 );
        var_4.useweaponstockammo = readsupertablecell( var_1, 13, 1 );
        var_4.useweapontrackstats = readsupertablecell( var_1, 31, 1 ) > 0;
        var_4.movespeed = readsupertablecell( var_1, 14, 1 );
        var_7 = undefined;

        if ( scripts\mp\utility\game::isanymlgmatch() )
            var_7 = readsupertablecell( var_1, 27, 1 );

        if ( !isdefined( var_7 ) )
            var_7 = readsupertablecell( var_1, 15, 1 );

        var_4.graceperiod = var_7;
        var_4.maxactivationsalt = readsupertablecell( var_1, 16, 1 );
        var_4.usedelay = readsupertablecell( var_1, 18, 1 );
        var_4.ending_mortars = readsupertablecell( var_1, 19, 1 );
        var_4.archetype = readsupertablecell( var_1, 17 );
        var_4.isweapon = readsupertablecell( var_1, 20, 1 );
        var_4.canuseinlaststand = readsupertablecell( var_1, 32, 1 ) > 0;
        var_4.packextrascore0 = [];

        if ( isdefined( var_4.useweapon ) )
            var_4.useweapon = asmdevgetallstates( var_4.useweapon );

        level.superglobals.supersbyid[var_1] = var_2;

        if ( !isdefined( var_4.weapon ) )
            level.superglobals.staticsuperdata[var_2] = undefined;
        else
            level.superglobals.supersbyoffhand[var_4.weapon] = var_4;

        if ( !isdefined( var_4.pointsneeded ) )
            level.superglobals.staticsuperdata[var_2] = undefined;

        if ( isdefined( var_4.maxactivations ) )
        {
            if ( var_4.maxactivations > 0 )
                var_4.activatepenalty = 1.0 / var_4.maxactivations;
            else
                var_4.activatepenalty = 1.0;
        }

        if ( isdefined( var_4.maxactivationsalt ) )
        {
            if ( var_4.maxactivationsalt > 0 )
                var_4.activatepenaltyalt = 1.0 / var_4.maxactivationsalt;
        }

        if ( isdefined( var_4.useweapon ) )
            level.superglobals.superweapons[var_4.useweapon.basename] = var_4;

        if ( var_4.weapon == "_encstr_9C6F0AE4E5794B9623A0FB57" )
            var_4.weapon = "_encstr_80B6119B6DCB1B02FE491F66B9D70AB1BE38D8";

        if ( isdefined( var_4.graceperiod ) )
            var_4.graceperiod = var_4.graceperiod * 1000.0;
        else
            var_4.graceperiod = 0.0;

        var_1++;
    }

    var_8 = tablelookup( "_encstr_82EB16AD07F2B957E0AC9C9C85D156D12C4C8D59C5B1B967", 0, scripts\mp\utility\game::getgametype(), 1 );

    if ( isdefined( var_8 ) && var_8 != "_encstr_A40101" )
        level.superglobals.superearnratemultiplier = float( var_8 );
}

readsupertablecell( var_0, var_1, var_2 )
{
    var_3 = tablelookupbyrow( "_encstr_8798128AD96AF773A335B32B077190F7CA061E7D", var_0, var_1 );

    if ( var_3 == "_encstr_A40101" )
        return undefined;

    if ( istrue( var_2 ) )
    {
        if ( issubstr( var_3, "_encstr_B74C028B" ) )
            var_3 = float( var_3 );
        else
            var_3 = int( var_3 );
    }

    return var_3;
}

loadpointstable()
{
    var_0 = 2;
    var_1 = scripts\mp\utility\game::getgametype();

    for (;;)
    {
        var_2 = tablelookupbyrow( "_encstr_9F5E18FDB76847DB6150536B188BD5935B1D796AC1496A664F20", 0, var_0 );

        if ( !isdefined( var_2 ) || var_2 == "_encstr_A40101" )
        {
            var_0 = undefined;
            break;
        }

        if ( var_2 == var_1 )
            break;

        var_0++;
    }

    var_3 = 0;

    for (;;)
    {
        var_3++;
        var_4 = tablelookupbyrow( "_encstr_9F5E18FDB76847DB6150536B188BD5935B1D796AC1496A664F20", var_3, 0 );

        if ( !isdefined( var_4 ) || var_4 == "_encstr_A40101" )
            break;

        var_5 = undefined;

        if ( isdefined( var_0 ) )
        {
            var_5 = tablelookupbyrow( "_encstr_9F5E18FDB76847DB6150536B188BD5935B1D796AC1496A664F20", var_3, var_0 );

            if ( isdefined( var_5 ) && var_5 == "_encstr_A40101" )
                var_5 = undefined;
        }

        if ( !isdefined( var_5 ) )
            var_5 = tablelookupbyrow( "_encstr_9F5E18FDB76847DB6150536B188BD5935B1D796AC1496A664F20", var_3, 1 );

        var_5 = float( var_5 );

        if ( var_5 <= 0 )
            continue;

        level.superglobals.pointeventdata[var_4] = var_5;
    }
}

registersupers()
{
    registersuper( "_encstr_A9BB0B37BA0E2BC9BEA395CDA3", undefined, undefined, ::testsuperbeginuse, undefined );
    registersuper( "_encstr_9F520E9B5DEB774267C0EBD29869FF7F", undefined, undefined, ::bradleybeginuse, undefined );
    registersuper( "_encstr_A61115930B9F3F32497FA8A73158BF3B50E14BCAF0FDAB", undefined, undefined, ::choppergunnerbeginuse, undefined );
    registersuper( "_encstr_94C116A0D78B350347E32AC74B9BD809F150724F570547ED", undefined, undefined, ::cruisepredatorbeginuse, undefined );
    registersuper( "_encstr_AD161A46A3FB33BBAF2B70F05FA1D363520D28C73C73A7A36AA7B0F8", undefined, undefined, ::precisionairstrikebeginuse, undefined );
    registersuper( "_encstr_A670127BE38857DBB893D2FA1990874BF0A3EBF5", undefined, undefined, ::tomastrikebeginuse, undefined );
    registersuper( "_encstr_898B119BBAC12BC9BE1C85D8FA9B2BCD3A272F", undefined, undefined, ::pacsentrybeginuse, undefined );
    registersuper( "_encstr_B4841137EA83594EF5899CBECA1EA34E0B8DA3", undefined, undefined, ::brcircleextract, undefined );
    registersuper( "_encstr_AAC20A87A37F1232C19B76BB", undefined, undefined, ::uavbeginuse, undefined );
    registersuper( "_encstr_9F3A10E7E343579DC7BB57BB41A7D830AA03", undefined, ::taccoverunset, ::taccoverbeginuse, undefined );
    registersuper( "_encstr_9E5F122867C0014D5102253E5D9ACFE92AF7482B", undefined, ::recondroneunset, ::recondronebeginuse, ::recondroneenduse );
    registersuper( "_encstr_945B10A37F413BB229050570FE6172C7A589", undefined, undefined, ::empdronebeginuse, undefined );
    registersuper( "_encstr_A10112E6EB883A0BA7DF7B8B30F8DD1D4113DF80", undefined, ::supportboxunset, ::stoppingpowerbeginuse, undefined );
    registersuper( "_encstr_87CB1520EBA20B8BB7BC67669C3F73CB8D62C943023EA1", ::laststandhealonset, ::laststandhealunset, ::laststandhealbeginuse, undefined );
    registersuper( "_encstr_AAEF16CD5D3856C9AFC959ADBD8E95BE91B21DB7DC584756", ::remotedetonateonset, undefined, ::remotedetonatebeginuse, undefined );
    registersuper( "_encstr_AD2F0DD8973091DDC1331EA80A8AF3", ::trophyonset, undefined, undefined, undefined );
    registersuper( "_encstr_B65F0FD745322B1E5F2B7943124FDE808F", undefined, undefined, ::scramblebeginuse, ::scrambleusefinished );
    registersuper( "_encstr_A86C12EBDBF8A0B6610B6B6B238B73B0857591A1", undefined, undefined, ::deadsilencebeginuse, ::deadsilenceenduse );
    registersuper( "_encstr_BD1811F295D1624AD6E0CFDFA1481E4B43AEBB", ::tacinsertonset, ::tacinsertonunset, undefined, undefined );
    registersuper( "_encstr_B4F610A33B508F1370C93A2210A8838250D9", undefined, undefined, undefined, undefined );
    registersuper( "_encstr_82341137AEE0ACC9D785E4B6DE9CFA324EED38", undefined, undefined, undefined, undefined );
    registersuper( "_encstr_9C2F12AB6DDB47527778EAA2287F0DF7F1560F20", undefined, undefined, ::superweapondropbeginuse, undefined );
    registersuper( "_encstr_BCEB0D5A2B83E55BD897FFD393FE03", ::_id_13988, ::_id_13989, ::superselectbeginuse, undefined );
    registersuper( "_encstr_A1440DFB33226FB2B73A235103077D", undefined, undefined, ::_id_1397F, undefined );
    registersuper( "_encstr_9D35125E9D2B411521CBA8881305DBDED322E857", undefined, undefined, ::_id_1398B, undefined );
    registersuper( "_encstr_82FE13DB43D7676A01ED6D78CB3835AFE8D943828B", undefined, undefined, ::_id_1398D, undefined );
    registersuper( "_encstr_9D3F1092F5B1022AB663D7CFD86EF4BB778F", undefined, undefined, ::_id_1398B, undefined );
    registersuper( "_encstr_B25810CB5338E70B6880C20A485D33D113C5", undefined, ::_id_13981, ::_id_13980, ::vehicle_createspawnselectionlittlebirdmarker );

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
    {
        registersuper( "_encstr_BA23141B8317A7AAC1892D338710B9B7BDB9E32228E0", ::jugg_removefromactivejugglist, ::jugg_setherodropscriptable, undefined, undefined );
        registersuper( "_encstr_81970F37BA0ECA277DB9DB6758D726B7E1", undefined, undefined, ::_id_11ED6, undefined );
        registersuper( "_encstr_8BD2111EDD6B0155610A88B0E3045779CB7F27", undefined, undefined, ::_id_13983, undefined );
    }

    _id_12B3C( "_encstr_945B10A37F413BB229050570FE6172C7A589", "_encstr_B2931468F730D6F113F510ADC10BD9D9914F58411FE8" );
    _id_12B3C( "_encstr_945B10A37F413BB229050570FE6172C7A589", "_encstr_97641895ADC1F52339B773CAFACDBDDCAF073616F2AC9CD7DA1C" );
    _id_12B3C( "_encstr_945B10A37F413BB229050570FE6172C7A589", "_encstr_9D0D1F7248C1C98B5BB8666558205F4D77386A8A40B3FA2FB193629D6E4BD7D591" );
    _id_12B3C( "_encstr_9C2F12AB6DDB47527778EAA2287F0DF7F1560F20", "_encstr_A8AB150CBD4F133FB3166358A0772F32B5C3A59B818D90" );
}

registersuper( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = level.superglobals.staticsuperdata[var_0];

    if ( !isdefined( var_5 ) )
        return;

    var_5.setfunc = var_1;
    var_5.unsetfunc = var_2;
    var_5.beginusefunc = var_3;
    var_5.endusefunc = var_4;
    var_5.isregistered = 1;
}

_id_12B3C( var_0, var_1 )
{
    if ( !isstring( var_1 ) )
        var_1 = var_1.basename;

    var_2 = level.superglobals.staticsuperdata[var_0];
    var_2.packextrascore0[var_2.packextrascore0.size] = var_1;
    level.superglobals._id_13987[var_1] = var_2;
}

_id_13978()
{
    _id_14021();
    updatesuperuistate();
}

givesuper( var_0, var_1, var_2 )
{
    if ( getdvarint( "_encstr_98AC166AD920EF9B1D410F5B6FD0C20138C0E2F330A89B62" ) != 0 )
        return;

    clearsuper( var_1 );

    if ( var_0 == "_encstr_A40101" )
        return;

    var_3 = level.superglobals.staticsuperdata[var_0];

    if ( !isdefined( var_3 ) )
        return;

    var_4 = spawnstruct();
    self.super = var_4;
    var_4.staticdata = var_3;
    var_4.allowrefund = 1;
    var_4.numkills = 0;
    var_4.wasrefunded = 0;
    var_4.canstow = 0;
    var_4.basepoints = 0;
    var_4.extrapoints = 0;
    var_4.usestarttime = undefined;
    var_4.usepercent = 0.0;
    var_4._id_12187 = undefined;
    _id_131C7( 0 );
    _id_13985( var_0 );
    self setclientomnvar( "_encstr_AB3D0DBAA5BEB9EA1CAC4EF593CACC", var_0 );
    var_5 = self.pers["_encstr_B849101A6B40A59B9673673739381216C833"];

    if ( !isdefined( var_5 ) )
        var_5 = 0;

    self.pers["_encstr_B849101A6B40A59B9673673739381216C833"] = undefined;
    setsuperbasepoints( var_5 );
    var_6 = self.pers["_encstr_BCB5112B85514712B04B195AC18A380C608BB3"];

    if ( !isdefined( var_6 ) )
        var_6 = 0;

    self.pers["_encstr_BCB5112B85514712B04B195AC18A380C608BB3"] = undefined;
    setsuperextrapoints( var_6 );

    if ( !isdefined( self.pers["_encstr_B3410EDBBDFB60C3F7B0A067CD884B38"] ) )
        _id_131C6( 0 );

    if ( istrue( var_2 ) )
    {
        givesuperpoints( getsuperpointsneeded() );
        var_4.madeavailabletime = gettime();
        scripts\mp\analyticslog::logevent_superearned( var_4.madeavailabletime );
    }

    if ( !issuperweapondisabled() )
    {
        scripts\cp_mp\utility\inventory_utility::_giveweapon( var_3.weapon );
        var_7 = scripts\engine\utility::ter_op( issuperready(), 1, 0 );
        self setweaponammoclip( var_3.weapon, var_7 );
        self assignweaponoffhandspecial( var_3.weapon );
    }

    thread watchforsuperusebegin();
    thread handlespectating();

    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" || level.allowsupers )
    {
        thread watchforrespawn();
        thread storesupercooldownforroundchange();
        thread handleteamchange();
    }
}

handlesuperearnovertime()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" )
        scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    var_0 = gettime();
    waitframe();

    for (;;)
    {
        var_1 = level.players.size;
        var_2 = ( gettime() - var_0 ) / 50;

        if ( var_2 < 11 )
        {
            wait( ( 11 - var_2 ) * 0.05 );
            var_2 = 11;
        }

        var_0 = gettime();

        for ( var_3 = 0; var_3 < var_1; var_3 = var_3 + 15 )
        {
            for ( var_4 = 0; var_4 < 15; var_4++ )
            {
                var_5 = var_3 + var_4;
                var_6 = level.players[var_5];

                if ( !isdefined( var_6 ) )
                    continue;

                if ( istrue( var_6.pausesuperpointsovertime ) )
                    continue;

                if ( !scripts\mp\utility\player::isreallyalive( var_6 ) )
                    continue;

                if ( isdefined( var_6 getcurrentsuper() ) && !var_6 getcurrentsuper().isinuse )
                    var_6 givesuperpoints( 0, "_encstr_81EF05232C5D4D", 0, var_2 );
            }

            waitframe();
        }

        waitframe();
    }
}

clearsuper( var_0 )
{
    var_1 = getcurrentsuper();

    if ( isdefined( var_1 ) && isdefined( var_1.staticdata ) )
        _id_13986( var_1.staticdata.ref );

    if ( istrue( var_0 ) && isdefined( var_1 ) )
        storesuperpoints();

    self clearoffhandspecial();

    if ( isdefined( var_1 ) )
        scripts\cp_mp\utility\inventory_utility::_takeweapon( var_1.staticdata.weapon );

    if ( level.codcasterenabled && !isagent( self ) )
        self setspecialactive( 0 );

    self notify( "_encstr_BD810D8A339025DBB5E6234B2B9DF3" );
    self.super = undefined;
    thread _calloutmarkerping_handleluinotify_added::_id_1313D( "_encstr_801A0FD55ABE37AE83B2277DE61DC21D59", 0 );
    self setclientomnvar( "_encstr_AB3D0DBAA5BEB9EA1CAC4EF593CACC", "_encstr_AABA05236DC831" );
}

_id_13985( var_0 )
{
    if ( !isdefined( var_0 ) )
        return;

    if ( var_0 == "_encstr_AABA05236DC831" || var_0 == "_encstr_A40101" )
        return;

    var_1 = level.superglobals.staticsuperdata[var_0];

    if ( !isdefined( var_1 ) )
        return;

    var_2 = var_1.setfunc;

    if ( !isdefined( var_2 ) )
        return;

    self thread [[ var_2 ]]();
}

_id_13986( var_0 )
{
    if ( !isdefined( var_0 ) )
        return;

    if ( var_0 == "_encstr_AABA05236DC831" || var_0 == "_encstr_A40101" )
        return;

    var_1 = level.superglobals.staticsuperdata[var_0];

    if ( !isdefined( var_1 ) )
        return;

    var_2 = var_1.unsetfunc;

    if ( !isdefined( var_2 ) )
        return;

    self thread [[ var_2 ]]();
}

setsuperbasepoints( var_0, var_1 )
{
    var_2 = getcurrentsuper();
    var_2.basepoints = clamp( var_0, 0, getsuperpointsneeded() );

    if ( istrue( var_1 ) )
        return;

    superpointschanged();
}

setsuperextrapoints( var_0, var_1 )
{
    var_2 = getcurrentsuper();
    var_2.extrapoints = clamp( var_0, 0, getsuperpointsneeded() );

    if ( istrue( var_1 ) )
        return;

    superpointschanged();
}

superpointschanged()
{
    var_0 = getcurrentsuper();

    if ( getcurrentsuperpoints() >= getsuperpointsneeded() )
        superearned();
    else
        self setweaponammoclip( var_0.staticdata.weapon, 0 );

    _id_14021();
    updatesuperuistate();
}

givesuperpoints( var_0, var_1, var_2, var_3 )
{
    if ( istrue( game["_encstr_87010E111E3823354DC251C560F3ED0A"] ) || !level.allowsupers )
        return;

    if ( isdefined( var_1 ) )
        var_0 = getsuperpointsforevent( var_1 );

    if ( isdefined( var_3 ) )
        var_0 = var_0 * var_3;

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_815E1FA78312F64B314DD34AB91E8836DB3F5D77437A4D704CE9FB635FD2B0E5A2" ) )
        var_0 = var_0 * getdvarfloat( "_encstr_98351F53F96EF78950AB030C4B18413B1B110A9A0645D3FFA8930CE52720963BB5" );

    if ( getdvarint( "_encstr_AACE176EC69CEB32A5DC0B13B1CA9AEA0ECA270ABDB4734737", 0 ) && !istrue( var_2 ) )
        return;

    if ( isdefined( var_1 ) && var_1 == "_encstr_81EF05232C5D4D" )
        var_4 = var_0 * level.superfastchargerate;
    else
        var_4 = var_0 * level.superpointsmod;

    if ( var_4 <= 0 )
        return;

    var_5 = getcurrentsuper();

    if ( !isdefined( var_5 ) || issuperready() || var_5.isinuse || issuperexpended() )
    {
        updatesppm( var_0, 0, var_1 );
        return;
    }

    var_6 = min( var_4 + var_5.basepoints, getsuperpointsneeded() );
    setsuperbasepoints( var_6 );
    scripts\mp\analyticslog::logevent_reportsuperscore( var_4, gettime() );
    updatesppm( var_0, 1, var_1 );
}

_id_14021()
{
    var_0 = getcurrentsuper();

    if ( !isdefined( var_0 ) )
        return;

    if ( scripts\mp\utility\player::isinkillcam() || !isalive( self ) )
    {
        var_0._id_11FCD = undefined;
        return;
    }

    var_1 = 0.0;

    if ( var_0.isinuse )
        var_1 = getsuperuseuiprogress();
    else if ( !issuperexpended() )
    {
        var_2 = getsuperpointsneeded();
        var_1 = clamp( getcurrentsuperbasepoints() / var_2, 0.0, 1.0 );
    }

    if ( !isdefined( var_0._id_11FCD ) || var_1 != var_0._id_11FCD )
        self setclientomnvar( "_encstr_A20B12C524899FDB70FFF0A1933AD0FF034FBE4E", var_1 );

    self setplayersupermeterprogress( var_1 );
    var_0._id_11FCD = var_1;
}

updatesuperuistate()
{
    var_0 = getcurrentsuper();

    if ( !isdefined( var_0 ) )
        return;

    if ( scripts\mp\utility\player::isinkillcam() || !isalive( self ) )
    {
        var_0.state = undefined;
        return;
    }

    var_1 = var_0.state;
    var_2 = 1;

    if ( issuperexpended() )
        var_2 = 4;
    else if ( issuperready() )
        var_2 = 2;
    else if ( issuperinuse() )
        var_2 = 3;

    if ( !isdefined( var_1 ) || var_2 != var_1 )
        thread _calloutmarkerping_handleluinotify_added::_id_1313D( "_encstr_801A0FD55ABE37AE83B2277DE61DC21D59", var_2 );

    var_0.state = var_2;
}

watchforrespawn()
{
    var_0 = getcurrentsuper();
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_BD810D8A339025DBB5E6234B2B9DF3" );

    for (;;)
    {
        self waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
        givesuperweapon( var_0 );
    }
}

storesupercooldownforroundchange()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_BD810D8A339025DBB5E6234B2B9DF3" );
    scripts\mp\flags::levelflagwait( "_encstr_B9CF0A3B2A658BAEF726E566" );

    if ( istrue( game["_encstr_A4A90E389CC28D1DA5C6AC49B75D9B32"] ) )
        return;

    storesuperpoints();
}

handlespectating()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_BD810D8A339025DBB5E6234B2B9DF3" );
    self waittill( "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
    thread clearsuper( 1 );
}

handleteamchange()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_BD810D8A339025DBB5E6234B2B9DF3" );
    var_0 = self.team;
    self waittill( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );

    if ( self.team != var_0 )
    {
        self.currentfirstupgrade = undefined;
        thread clearsuper( 0 );
    }
}

handlepointdecay()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_BD810D8A339025DBB5E6234B2B9DF3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = getcurrentsuper();
    var_1 = getdvarfloat( "_encstr_AD5E15D06F600776ABD0894A186C0199A9681953DA4C32", 6.0 ) * level.framedurationseconds;

    for (;;)
    {
        if ( !issupercharging() )
        {
            waitframe();
            continue;
        }

        var_2 = max( var_0.extrapoints - var_1, 0 );
        setsuperextrapoints( var_2 );
        waitframe();
    }
}

superearned()
{
    var_0 = getcurrentsuper();
    self setweaponammoclip( var_0.staticdata.weapon, 1 );
    var_1 = !var_0.wasrefunded;
    self notify( "_encstr_AFF20C03FD88D8CAEF6BA29031E8", var_1 );

    if ( var_1 )
    {
        self.pers["_encstr_A2A50DB9AEE0569CB98A8539B92B19"]++;
        self notify( "_encstr_A4E80D9B5D07B293AFCAC2E4DCACC8" );
        recordsuperearnedanalytics( var_0 );
    }

    var_0.madeavailabletime = gettime();
    var_0.numkills = 0;
    scripts\mp\analyticslog::logevent_superearned( var_0.madeavailabletime );
    setsuperextrapoints( 0, 1 );
    setsuperbasepoints( getsuperpointsneeded(), 1 );

    if ( isdefined( self.matchdatalifeindex ) )
        scripts\mp\analyticslog::logevent_fieldupgradeearned( self, var_0.staticdata.id );
}

watchforsuperusebegin()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_BD810D8A339025DBB5E6234B2B9DF3" );

    for (;;)
    {
        self waittill( "_encstr_872215EBAF391FD44BE0890340A34AF7F0804679C6414B", var_0 );
        var_1 = trysuperusebegin( var_0 );

        if ( !istrue( var_1 ) )
            continue;

        self waittill( "_encstr_9E01136EEA07AC27BEAEB9597D99D29BD26ED05623" );
    }
}

trysuperusebegin( var_0 )
{
    if ( !scripts\mp\utility\player::isreallyalive( self ) )
        return 0;

    if ( var_0.basename != getcurrentsuper().staticdata.weapon )
        return 0;

    if ( !scripts\common\utility::is_supers_allowed() )
        return 0;

    return beginsuperuse();
}

beginsuperuse()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    var_0 = getcurrentsuper();
    self notify( "_encstr_88E30E37BA0E5939EBE63A16C9D19591" );
    scripts\mp\gamelogic::sethasdonecombat( self, 1 );

    if ( var_0.staticdata.weapon == "_encstr_9FBC0F3B03937730DA3487F5471EE9B13B" )
        self playlocalsound( "_encstr_8F0617B08BF0BF6BDF602FA85AE3D68D8DE389A0C2BA612007" );
    else
    {

    }

    if ( isdefined( var_0 ) && !var_0.isinuse )
    {
        var_1 = !istrue( self.inlaststand ) || var_0.staticdata.canuseinlaststand;
        var_2 = 1;

        if ( isdefined( var_0.staticdata.useweapon ) )
        {
            if ( scripts\mp\arbitrary_up::isinarbitraryup() && superdisabledinarbitraryup( var_0.staticdata.ref ) )
            {
                superdisabledinarbitraryupmessage();
                var_2 = 0;
            }
            else if ( !var_1 )
                var_2 = 0;
            else
                var_2 = trygiveuseweapon( var_0.staticdata.useweapon, var_0.staticdata.useweaponclipammo, var_0.staticdata.useweaponstockammo );
        }

        if ( var_2 && var_1 && ( !isdefined( var_0.staticdata.beginusefunc ) || istrue( self [[ var_0.staticdata.beginusefunc ]]() ) ) )
        {
            var_3 = [];
            var_3[0] = "_encstr_BE3D16930B9F3F324953B3AD6FE8BC4B4B639A7AB1E0D3EE";
            var_3[1] = "_encstr_93F00F6BF367F7FA91970FE96188843F85";
            setsuperbasepoints( 0 );
            setsuperextrapoints( 0 );
            _id_131C7( 1 );
            var_0.allowrefund = scripts\engine\utility::ter_op( var_0.staticdata.graceperiod > 0, 1, 0 );
            var_0.usestarttime = gettime();
            var_0.usepercent = 1.0;
            self notify( "_encstr_BC16120795C2F0EEAF9BAB114167A5981A0CA391" );
            thread updateusetimedecay();

            if ( isdefined( self.matchdatalifeindex ) )
                scripts\mp\analyticslog::logevent_fieldupgradeactivated( self, var_0.staticdata.id );

            combatrecordsuperuse( var_0.staticdata.ref );

            if ( level.codcasterenabled )
                self setspecialactive( 1 );

            scripts\mp\utility\print::printgameaction( "_encstr_980A159B5D38B227805DCD2B8037E858E48EAC8C08A501" + var_0.staticdata.ref, self );
            return 1;
        }
        else
        {
            if ( isdefined( var_0.staticdata.useweapon ) && var_2 )
                thread switchandtakesuperuseweapon();

            if ( istrue( self.inlaststand ) )
                thread _id_144FA( var_0.staticdata.weapon );
            else
                self setweaponammoclip( var_0.staticdata.weapon, 1 );
        }
    }

    return 0;
}

activatesuper( var_0, var_1 )
{
    var_2 = getcurrentsuper();

    if ( !isdefined( var_0 ) )
        var_0 = 0;

    if ( var_0 && isdefined( var_2.staticdata.activatepenaltyalt ) )
        reducesuperusepercent( var_2.staticdata.activatepenaltyalt, var_1 );
    else if ( isdefined( var_2.staticdata.activatepenalty ) )
        reducesuperusepercent( var_2.staticdata.activatepenalty, var_1 );

    return 1;
}

updateusetimedecay()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_9E01136EEA07AC27BEAEB9597D99D29BD26ED05623" );
    var_0 = getcurrentsuper();

    if ( !isdefined( var_0.staticdata.usetime ) )
    {
        waitframe();
        superusefinished();
        return;
    }

    if ( var_0.staticdata.usetime < 0 )
        return;

    for (;;)
    {
        waitframe();

        if ( isdefined( var_0.staticdata.usedelay ) )
        {
            var_1 = gettime() - var_0.usestarttime;

            if ( var_1 < var_0.staticdata.usedelay )
                continue;
        }

        var_2 = level.framedurationseconds / var_0.staticdata.usetime;
        reducesuperusepercent( var_2 );
        _id_14021();
        updatesuperuistate();
    }
}

reducesuperusepercent( var_0, var_1, var_2 )
{
    var_3 = getcurrentsuper();
    var_3.usepercent = max( var_3.usepercent - var_0, 0.0 );

    if ( istrue( var_1 ) )
        var_3.allowrefund = 0;

    if ( !isdefined( var_2 ) || var_2 == 0 )
        superusedurationupdated();
}

resetsuperusepercent()
{
    var_0 = getcurrentsuper();
    var_0.usepercent = 1.0;
    superusedurationupdated();
}

superusedurationupdated()
{
    var_0 = getcurrentsuper();

    if ( isbot( self ) )
    {
        if ( isdefined( var_0.staticdata.useweapon ) && var_0.staticdata.isweapon == 1 )
        {
            var_1 = self getammocount( var_0.staticdata.useweapon );

            if ( isdefined( var_1 ) && var_1 > 0 )
            {
                superusefinished();
                return;
            }
        }
    }

    if ( var_0.usepercent <= 0.0 )
        superusefinished();
}

superusefinished( var_0, var_1, var_2, var_3 )
{
    var_4 = getcurrentsuper();
    self notify( "_encstr_BE3D16930B9F3F324953B3AD6FE8BC4B4B639A7AB1E0D3EE" );
    var_5 = 0;

    if ( !isdefined( var_3 ) || var_3 == 0 )
        var_5 = shouldrefundsuper();

    _id_131C7( 0 );
    var_4.canstow = 0;
    var_6 = undefined;

    if ( isdefined( var_4.staticdata.endusefunc ) )
    {
        if ( !isdefined( var_1 ) )
            var_1 = 0;

        var_6 = self [[ var_4.staticdata.endusefunc ]]( var_1 );
    }

    if ( var_5 || istrue( var_0 ) || istrue( var_6 ) )
    {
        _id_131C6( 0 );
        var_4.wasrefunded = 1;
        setsuperbasepoints( getsuperpointsneeded() );
    }
    else if ( istrue( var_2 ) )
    {
        _id_131C6( 0 );
        var_7 = getsuperpointsneeded() * var_4.usepercent;
        var_4.wasrefunded = 1;
        setsuperbasepoints( var_7 );
    }
    else
    {
        _id_131C6( 1 );
        var_4.lastfinishtime = gettime();
        var_4.wasrefunded = 0;
    }

    thread switchandtakesuperuseweapon();
    var_8 = var_4.usestarttime - var_4.madeavailabletime;
    scripts\mp\analyticslog::logevent_superended( var_4.staticdata.ref, var_8, 0, var_4.numkills );

    if ( level.codcasterenabled )
        self setspecialactive( 0 );

    scripts\mp\utility\print::printgameaction( "_encstr_9F52139B5DEB77429978FB92BA7B3D0B214D504D5F" + var_4.staticdata.ref, self );

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
    {
        if ( !level.allowsupers )
        {
            if ( !istrue( var_0 ) )
            {
                self setclientomnvar( "_encstr_B67F169311A1F0DDA3D2B65B5ACF8220C775BF1794961815", 0 );
                self setclientomnvar( "_encstr_A20B12C524899FDB70FFF0A1933AD0FF034FBE4E", 0 );
            }
        }
        else if ( var_4.staticdata.ending_mortars )
        {
            clearsuper();
            self setclientomnvar( "_encstr_B67F169311A1F0DDA3D2B65B5ACF8220C775BF1794961815", 0 );
            self setclientomnvar( "_encstr_A20B12C524899FDB70FFF0A1933AD0FF034FBE4E", 0 );
            thread _calloutmarkerping_handleluinotify_added::_id_1313D( "_encstr_801A0FD55ABE37AE83B2277DE61DC21D59", 0 );
        }
    }

    self notify( "_encstr_9E01136EEA07AC27BEAEB9597D99D29BD26ED05623" );
    scripts\cp\vehicles\vehicle_compass_cp::_id_12097( var_4, var_5 );
}

refundsuper()
{
    var_0 = getcurrentsuper();

    if ( isdefined( var_0 ) )
    {
        if ( var_0.isinuse )
            superusefinished( 1 );
        else
            givesuperpoints( getsuperpointsneeded() );
    }
}

handledeath()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( !issuperinuse() )
        return;

    var_0 = getcurrentsuper();
    var_1 = var_0.staticdata._id_12ACD;
    superusefinished( var_1, 1 );
}

monitoruseweaponfiring( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_9E01136EEA07AC27BEAEB9597D99D29BD26ED05623" );
    self endon( "_encstr_BD810D8A339025DBB5E6234B2B9DF3" );

    for (;;)
    {
        self waittill( "_encstr_BE140D3FF56983E5E5C94AB288DB1F", var_1 );

        if ( isnullweapon( var_1, var_0, 1 ) )
            activatesuper( var_1.isalternate, 1 );
    }
}

trygiveuseweapon( var_0, var_1, var_2 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    scripts\cp_mp\utility\inventory_utility::_giveweapon( var_0 );
    self setweaponammoclip( var_0, var_1 );
    self setweaponammostock( var_0, var_2 );
    var_3 = scripts\cp_mp\utility\inventory_utility::domonitoredweaponswitch( var_0, isbot( self ) );

    if ( var_3 )
    {
        thread manageuseweapon( var_0 );
        thread monitoruseweaponfiring( var_0 );
        return 1;
    }

    scripts\cp_mp\utility\inventory_utility::abortmonitoredweaponswitch( var_0 );
    return 0;
}

manageuseweapon( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_9E01136EEA07AC27BEAEB9597D99D29BD26ED05623" );
    var_1 = getcurrentsuper();
    var_1.useweaponswapped = undefined;
    var_2 = 0;

    for (;;)
    {
        var_3 = self getcurrentweapon();

        if ( !var_1.canstow && !isnullweapon( var_0, var_3, 1 ) )
        {
            if ( var_3.basename == "_encstr_9FD512776833878B01D1B46D4ACD024CA0C1FF9B" || var_3.basename == "_encstr_A9781094237297838D732B2363A14ADF186B" )
                var_2 = 1;

            break;
        }

        waitframe();
    }

    if ( issuperinuse() )
    {
        var_1.useweaponswapped = 1;
        superusefinished( undefined, undefined, var_2 );
    }
}

switchandtakesuperuseweapon()
{
    self endon( "_encstr_A3750609A5E61883" );
    var_0 = getcurrentsuper();
    var_1 = var_0.staticdata.useweapon;

    if ( !isdefined( var_1 ) )
        return;

    if ( scripts\cp_mp\utility\inventory_utility::isswitchingtoweaponwithmonitoring( var_1 ) )
    {
        scripts\cp_mp\utility\inventory_utility::abortmonitoredweaponswitch( var_1 );
        return;
    }

    self notify( "_encstr_93F00F6BF367F7FA91970FE96188843F85" );
    scripts\cp_mp\utility\inventory_utility::getridofweapon( var_1 );
}

storesuperpoints()
{
    var_0 = getcurrentsuper();

    if ( !isdefined( var_0 ) )
        return;

    if ( issupercharging() || issuperready() )
    {
        self.pers["_encstr_B849101A6B40A59B9673673739381216C833"] = var_0.basepoints;
        self.pers["_encstr_BCB5112B85514712B04B195AC18A380C608BB3"] = var_0.extrapoints;
    }
    else if ( issuperinuse() && shouldrefundsuper() )
    {
        var_1 = getsuperpointsneeded();
        self.pers["_encstr_93060C23BBD00F937788FA92F33E"] = var_0.usepercent * var_1;
        self.pers["_encstr_BCB5112B85514712B04B195AC18A380C608BB3"] = 0;
    }
    else
    {
        self.pers["_encstr_B849101A6B40A59B9673673739381216C833"] = 0;
        self.pers["_encstr_BCB5112B85514712B04B195AC18A380C608BB3"] = 0;
    }
}

getsuperuseuiprogress()
{
    var_0 = getcurrentsuper();
    return var_0.usepercent;
}

getcurrentsuperbasepoints()
{
    return getcurrentsuper().basepoints;
}

getcurrentsuperextrapoints()
{
    return getcurrentsuper().basepoints;
}

getcurrentsuperpoints()
{
    var_0 = getcurrentsuper();
    return var_0.basepoints + var_0.extrapoints;
}

getsuperpointsneeded()
{
    var_0 = getcurrentsuper();
    var_1 = var_0.staticdata.pointsneeded;

    if ( isdefined( var_0._id_12187 ) )
        var_1 = var_0._id_12187;

    return var_1;
}

issuperready()
{
    var_0 = getcurrentsuper();

    if ( !isdefined( var_0 ) || var_0.isinuse )
        return 0;

    return getcurrentsuperpoints() >= getsuperpointsneeded();
}

issuperinuse()
{
    return isdefined( getcurrentsuper() ) && getcurrentsuper().isinuse;
}

_id_131C7( var_0 )
{
    var_1 = getcurrentsuper();
    var_1.isinuse = var_0;
    updatesuperuistate();
}

issupercharging()
{
    return !issuperready() && !issuperinuse();
}

issuperexpended()
{
    if ( getdvarint( "_encstr_BC5A1526C36B4E4FF3B39050398F11E36F6625975AFBF1", 1 ) == 0 )
        return 0;

    return istrue( self.pers["_encstr_B3410EDBBDFB60C3F7B0A067CD884B38"] );
}

_id_131C6( var_0 )
{
    self.pers["_encstr_B3410EDBBDFB60C3F7B0A067CD884B38"] = var_0;
    updatesuperuistate();
}

getcurrentsuper()
{
    return self.super;
}

getcurrentsuperref()
{
    var_0 = getcurrentsuper();

    if ( !isdefined( var_0 ) )
        return undefined;

    return var_0.staticdata.ref;
}

shouldrefundsuper()
{
    var_0 = getcurrentsuper();
    var_1 = var_0.staticdata.graceperiod;
    var_2 = undefined;

    if ( isdefined( var_0 ) && isdefined( var_0.usestarttime ) )
        var_2 = gettime() - var_0.usestarttime;

    if ( !isdefined( var_2 ) || var_2 >= var_1 )
        return 0;

    if ( var_0.numkills > 0 )
        return 0;

    return var_0.allowrefund;
}

getsuperrefforsuperuseweapon( var_0 )
{
    if ( !isstring( var_0 ) )
        var_0 = var_0.basename;

    if ( !isdefined( level.superglobals ) || !isdefined( level.superglobals.superweapons ) || !isdefined( level.superglobals.superweapons[var_0] ) )
        return undefined;

    return level.superglobals.superweapons[var_0].ref;
}

getsuperrefforsuperoffhand( var_0 )
{
    if ( !isstring( var_0 ) )
        var_0 = var_0.basename;

    if ( !isdefined( level.superglobals.supersbyoffhand[var_0] ) )
        return undefined;

    return level.superglobals.supersbyoffhand[var_0].ref;
}

roundkillexecute( var_0 )
{
    if ( !isstring( var_0 ) )
        var_0 = var_0.basename;

    if ( !isdefined( level.superglobals._id_13987[var_0] ) )
        return undefined;

    return level.superglobals._id_13987[var_0].ref;
}

getsuperrefforsuperweapon( var_0 )
{
    if ( !isdefined( level.superglobals ) )
        return undefined;

    if ( !isstring( var_0 ) )
        var_0 = var_0.basename;

    var_1 = getsuperrefforsuperuseweapon( var_0 );

    if ( isdefined( var_1 ) )
        return var_1;

    var_2 = getsuperrefforsuperoffhand( var_0 );

    if ( isdefined( var_2 ) )
        return var_2;

    var_2 = roundkillexecute( var_0 );

    if ( isdefined( var_2 ) )
        return var_2;

    return undefined;
}

shouldtracksuperweaponstats( var_0 )
{
    var_1 = getsuperrefforsuperweapon( var_0 );

    if ( isdefined( var_1 ) )
    {
        var_2 = level.superglobals.staticsuperdata[var_1];
        return var_2.useweapontrackstats;
    }

    return undefined;
}

getsuperid( var_0 )
{
    if ( !isdefined( var_0 ) || !isdefined( level.superglobals ) || !isdefined( level.superglobals.staticsuperdata ) || !isdefined( level.superglobals.staticsuperdata[var_0] ) || var_0 == "_encstr_AABA05236DC831" )
        return 0;

    return level.superglobals.staticsuperdata[var_0].id;
}

getmovespeedforsuperweapon( var_0 )
{
    var_1 = getsuperrefforsuperweapon( var_0 );

    if ( !isdefined( var_1 ) )
        return undefined;

    return level.superglobals.staticsuperdata[var_1].movespeed;
}

getrootsuperref( var_0 )
{
    return getsubstr( var_0, 6 );
}

allowsuperweaponstow()
{
    var_0 = getcurrentsuper();

    if ( !isdefined( var_0 ) || !var_0.isinuse )
        return;

    var_0.canstow = 1;
}

unstowsuperweapon()
{
    var_0 = getcurrentsuper();

    if ( !isdefined( var_0 ) || !var_0.canstow )
        return;

    if ( !var_0.isinuse || !isdefined( var_0.staticdata.useweapon ) )
    {
        var_0.canstow = 0;
        return;
    }

    scripts\cp_mp\utility\inventory_utility::domonitoredweaponswitch( var_0.staticdata.useweapon );
    var_0.canstow = 0;
}

getsuperpointsforevent( var_0 )
{
    var_1 = level.superglobals.pointeventdata[var_0];

    if ( !isdefined( var_1 ) )
        return 0;

    return var_1;
}

watchforgameend()
{
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( scripts\mp\utility\game::waslastround() )
    {
        foreach ( var_1 in level.players )
            var_1 writesppmstats();
    }
}

getsppmdata()
{
    if ( getdvarint( "_encstr_B6CD0E13F1EBCF1B3B983DAFA1376347", 0 ) == 0 )
        return;

    if ( isai( self ) )
        return;

    if ( !isdefined( self.sppmdata ) )
    {
        self.sppmdata = self.pers["_encstr_A13B093B7F4BF72FFB903A"];

        if ( !isdefined( self.sppmdata ) )
        {
            self.sppmdata = spawnstruct();
            self.sppmdata.totalpoints = 0;
            self.sppmdata.totalappliedpoints = 0;
            self.sppmdata.eventtotals = [];
            self.pers["_encstr_A13B093B7F4BF72FFB903A"] = self.sppmdata;
        }
    }

    return self.sppmdata;
}

updatesppm( var_0, var_1, var_2 )
{
    if ( getdvarint( "_encstr_B6CD0E13F1EBCF1B3B983DAFA1376347", 0 ) == 0 )
        return;

    if ( isai( self ) )
        return;

    var_3 = getsppmdata();
    var_3.totalpoints = var_3.totalpoints + var_0;

    if ( istrue( var_1 ) )
        var_3.totalappliedpoints = var_3.totalappliedpoints + var_0;

    if ( !isdefined( var_2 ) )
        var_2 = "_encstr_A2500A039865CFC728B5151C";

    if ( !isdefined( var_3.eventtotals[var_2] ) )
        var_3.eventtotals[var_2] = var_0;
    else
        var_3.eventtotals[var_2] = var_3.eventtotals[var_2] + var_0;
}

writesppmstats()
{
    if ( getdvarint( "_encstr_B6CD0E13F1EBCF1B3B983DAFA1376347", 0 ) == 0 )
        return;

    if ( isai( self ) )
        return;

    var_0 = getsppmdata();
    var_1 = scripts\mp\persistence::statgetchildbuffered( "_encstr_A2460627DEABDC23", "_encstr_801A0BD15ADA560A63B09795C8", 1 ) / 60.0;
    var_2 = 0.0;
    var_3 = 0.0;

    if ( var_1 > 0.0 )
    {
        var_2 = var_0.totalpoints / var_1;
        var_3 = var_0.totalappliedpoints / var_1;
    }

    var_4 = "_encstr_A40101";
    var_5 = -1;

    foreach ( var_8, var_7 in var_0.eventtotals )
    {
        if ( var_7 > var_5 )
        {
            var_5 = var_7;
            var_4 = var_8;
        }
    }

    getentitylessscriptablearray( "_encstr_B2740E570166EAAA98C3DB69DB28D042", [ "_encstr_AB19053283EBFD", var_2, "_encstr_97130DE683E0D6EB858338C64B5619", var_3, "_encstr_87AC099DB05B59ADF619AC", scripts\mp\utility\game::getgametype(), "_encstr_BA8D06E75935489E", self.kills, "_encstr_B1140CCBFA6A73A133F29F8FE510", var_1, "_encstr_89F70BBA31267371805DDDAE21", var_4, "_encstr_9FE30FDCB14ED21CA3D7B3594EDC4B7B37", getscriptdataversion() ] );
}

modifysuperequipmentdamage( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = var_3;

    if ( isdefined( self.owner ) && isdefined( var_0 ) && var_0 == self.owner )
        var_5 = int( ceil( var_3 * 0.5 ) );

    return var_5;
}

updateactivesupers( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    var_8 = isdefined( var_0 ) && isplayer( var_0 );
    var_9 = var_5.basename == "_encstr_89F511713BBB2818C13559D05DB9E85501B7F1" || var_5.basename == "_encstr_B40F16E88627DEDDD2DCCE5BDC4BCCCAEBCC2D392BBE5B0E" || var_5.basename == "_encstr_BE851A55744BB78B09E36810FB51E1EBE15FC1550E8355B0EB0F30C0" || var_5.basename == "_encstr_89F817DB90A61F7BE06DDFAB1598477F588933B2B871273583";
    var_10 = var_9 && isdefined( var_0 ) && isdefined( var_0.classname ) && var_0.classname == "_encstr_A28D080FA2D39DC7FAFA";
    var_11 = isdefined( var_1 ) && isplayer( var_1 ) && var_1 != var_2;

    if ( var_11 )
    {
        var_12 = var_1 getcurrentsuper();

        if ( var_8 || var_10 )
        {
            if ( isdefined( var_12 ) && var_12.staticdata.ref == "_encstr_A86C12EBDBF8A0B6610B6B6B238B73B0857591A1" && var_1 issuperinuse() )
                var_1 thread scripts\mp\supers\super_deadsilence::superdeadsilence_onkill();
        }

        if ( var_8 && var_0 scripts\mp\utility\perk::_hasperk( "_encstr_AFAB177F3A7D6B39B7C9FB8301F915382B3709ED4E13C0DFCF" ) )
            var_1 thread scripts\mp\supers\super_stoppingpower::_id_138EC( var_5 );
    }
}

watchsuperdelay()
{
    level endon( "_encstr_BA9F108E4DFB91A5910A78387230C7292BC4" );
    level endon( "_encstr_87F00AE4BDABE623EB959B8C" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( scripts\mp\utility\game::isanymlgmatch() )
        level.superdelay = 0;
    else
        level.superdelay = getdvarfloat( "_encstr_8FFC0FB9B1277DDCAB1C2BE4119536585E", 0 );

    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" )
        scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    if ( level.superdelay == 0 )
    {
        level.superdelaystarttime = gettime();
        level.superdelayendtime = level.superdelaystarttime;
        level notify( "_encstr_BA9F108E4DFB91A5910A78387230C7292BC4" );
    }

    level.superdelaystarttime = gettime();
    level.superdelayendtime = level.superdelaystarttime + level.superdelay * 1000;
    level notify( "_encstr_8080127F3BBB6BB8A9376250B0D07723B5465B08" );

    while ( gettime() < level.superdelayendtime )
        waitframe();

    level notify( "_encstr_BA9F108E4DFB91A5910A78387230C7292BC4" );
}

watchplayersuperdelayweapon()
{
    level endon( "_encstr_87F00AE4BDABE623EB959B8C" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A9920E6F396DCAAAF84196A538D0D7A3" );
    self notify( "_encstr_AF911C2CCED35780D83370B8FF123FA33B77262DA72A1BEAE70F88E8EF56" );

    if ( superdelaypassed() )
        return;

    scripts\common\utility::allow_supers( 0, "_encstr_8AEC0CAFC86B0D4BCF45279D3F6B" );
    scripts\engine\utility::waittill_any_ents( level, "_encstr_BA9F108E4DFB91A5910A78387230C7292BC4", self, "_encstr_AF911C2CCED35780D83370B8FF123FA33B77262DA72A1BEAE70F88E8EF56" );
    scripts\common\utility::allow_supers( 1, "_encstr_8AEC0CAFC86B0D4BCF45279D3F6B" );
}

superdelaypassed()
{
    return isdefined( level.superdelayendtime ) && gettime() >= level.superdelayendtime;
}

cancelsuperdelay()
{
    level.superdelay = 0;
    level.superdelaystarttime = gettime();
    level.superdelayendtime = level.superdelaystarttime;
    level notify( "_encstr_BA9F108E4DFB91A5910A78387230C7292BC4" );
}

setsuperweapondisabled( var_0 )
{
    self.issuperdisabled = var_0;

    if ( !var_0 )
        endsuperdisableweapon();
    else
    {
        self notify( "_encstr_B96714AB9BB8E0F6214B330F77DA31387FF2B361C204" );
        thread watchsuperdisableplayer();
    }
}

issuperweapondisabled()
{
    return istrue( self.issuperdisabled );
}

watchsuperdisableplayer()
{
    self endon( "_encstr_BD810D8A339025DBB5E6234B2B9DF3" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_87F00AE4BDABE623EB959B8C" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self notify( "_encstr_A828129AEBC0251B98F98FEFDB3EC29D117155A7" );
    self endon( "_encstr_A828129AEBC0251B98F98FEFDB3EC29D117155A7" );
    var_0 = getcurrentsuper();

    if ( isdefined( var_0 ) )
    {
        var_1 = var_0.staticdata.weapon;
        scripts\cp_mp\utility\inventory_utility::_takeweapon( var_1 );
        givesuperdisableweapon();
    }

    thread cleanupsuperdisableweapon();

    if ( !istrue( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) ) )
        level waittill( "_encstr_8080127F3BBB6BB8A9376250B0D07723B5465B08" );

    for (;;)
    {
        self waittill( "_encstr_872215EBAF391FD44BE0890340A34AF7F0804679C6414B", var_2 );

        if ( var_2.basename != "_encstr_89A60F636F10D563CFA9F209EFE09F0397" )
            continue;

        self setweaponammoclip( var_2, 99 );

        if ( issuperready() )
        {
            var_3 = ( level.superdelayendtime - gettime() ) / 1000;
            var_3 = int( max( 0, ceil( var_3 ) ) );

            if ( var_3 > 0 )
                scripts\mp\hud_message::showerrormessage( "_encstr_B86E1C48B33AE7E11BBD167B7003F3FFA3880790C746A47746AD5F85DFD0", var_3 );
            else
                scripts\mp\hud_message::showerrormessage( "_encstr_A2A516A60A5E3555288A49A97DAA938265059213288431A8" );
        }
    }
}

cleanupsuperdisableweapon()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_87F00AE4BDABE623EB959B8C" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level endon( "_encstr_A828129AEBC0251B98F98FEFDB3EC29D117155A7" );
    self notify( "_encstr_ABD11D5BFB39D283DEFD53B73A30493009325FF57FBF2055D9593B0FF06801" );
    self endon( "_encstr_ABD11D5BFB39D283DEFD53B73A30493009325FF57FBF2055D9593B0FF06801" );

    for (;;)
    {
        self waittill( "_encstr_BD810D8A339025DBB5E6234B2B9DF3" );
        scripts\cp_mp\utility\inventory_utility::_takeweapon( "_encstr_89A60F636F10D563CFA9F209EFE09F0397" );
    }
}

endsuperdisableweapon()
{
    var_0 = getcurrentsuper();

    if ( isdefined( var_0 ) )
    {
        var_1 = var_0.staticdata.weapon;
        var_2 = scripts\engine\utility::ter_op( issuperready(), 1, 0 );
        scripts\cp_mp\utility\inventory_utility::_giveweapon( var_1 );
        self setweaponammoclip( var_1, var_2 );
        self assignweaponoffhandspecial( var_1 );
        scripts\cp_mp\utility\inventory_utility::_takeweapon( "_encstr_89A60F636F10D563CFA9F209EFE09F0397" );
    }

    self notify( "_encstr_A828129AEBC0251B98F98FEFDB3EC29D117155A7" );
}

givesuperdisableweapon()
{
    scripts\cp_mp\utility\inventory_utility::_giveweapon( "_encstr_89A60F636F10D563CFA9F209EFE09F0397" );
    self setweaponammoclip( "_encstr_89A60F636F10D563CFA9F209EFE09F0397", 99 );
    self assignweaponoffhandspecial( "_encstr_89A60F636F10D563CFA9F209EFE09F0397" );
}

givesuperweapon( var_0 )
{
    if ( superdelaypassed() )
    {
        if ( !self hasweapon( var_0.staticdata.weapon ) )
        {
            var_1 = scripts\engine\utility::ter_op( issuperready(), 1, 0 );
            scripts\cp_mp\utility\inventory_utility::_giveweapon( var_0.staticdata.weapon );
            self setweaponammoclip( var_0.staticdata.weapon, var_1 );
            self assignweaponoffhandspecial( var_0.staticdata.weapon );
        }
    }
    else
        givesuperdisableweapon();
}

watchobjuse( var_0, var_1 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AB490EBDC44DEBC8E45896DCFA2BB9C8" );
    self endon( "_encstr_9F2C0D7E168A91AE24F348A8E37D81" );

    if ( scripts\mp\utility\game::getgametype() == "_encstr_BD07030251" || scripts\mp\utility\game::getgametype() == "_encstr_AD0703D788" || scripts\mp\utility\game::getgametype() == "_encstr_9507035309" )
    {
        if ( istrue( var_1 ) )
            self waittill( "_encstr_9F6610CAB5994B36395F800A66930A8B5BDD" );
    }
    else if ( !isdefined( self.carryobject ) )
        self waittill( "_encstr_B7920E671DE221A080A964EF2159ED8B" );
    else
        wait 0.05;

    while ( issuperinuse() )
    {
        reducesuperusepercent( var_0 );
        wait 0.05;
    }
}

combatrecordsuperuse( var_0 )
{
    if ( !scripts\mp\utility\stats::canrecordcombatrecordstats() )
        return;

    if ( var_0 == "_encstr_8BD2111EDD6B0155610A88B0E3045779CB7F27" )
        return;

    var_1 = self getplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_87A10B6203C3CA43AA0B0FEB7B", var_0, "_encstr_B1E405576EACCD" );
    self setplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_87A10B6203C3CA43AA0B0FEB7B", var_0, "_encstr_B1E405576EACCD", var_1 + 1 );
}

combatrecordsuperkill( var_0 )
{
    if ( !scripts\mp\utility\stats::canrecordcombatrecordstats() )
        return;

    var_1 = self getplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_87A10B6203C3CA43AA0B0FEB7B", var_0, "_encstr_BA8D06E75935489E" );
    self setplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_87A10B6203C3CA43AA0B0FEB7B", var_0, "_encstr_BA8D06E75935489E", var_1 + 1 );
}

hide_plunderboxes( var_0, var_1 )
{
    if ( !scripts\mp\utility\stats::canrecordcombatrecordstats() )
        return;

    if ( !isdefined( var_1 ) )
        var_1 = 1;

    var_2 = relic_fastbleedout_returnfunc( var_0 );
    self setplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_87A10B6203C3CA43AA0B0FEB7B", var_0, "_encstr_AF6206F9147B8F63", var_2 + var_1 );
}

relic_fastbleedout_returnfunc( var_0 )
{
    return self getplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_87A10B6203C3CA43AA0B0FEB7B", var_0, "_encstr_AF6206F9147B8F63" );
}

superdisabledinarbitraryup( var_0 )
{
    if ( var_0 == "_encstr_B36512DCBA83B239BE5BD2C6C9BD47BAC9E4B247" || var_0 == "_encstr_8938124E3BBA109649F8C81A1D8A5BC520078810" )
        return 1;

    return 0;
}

superdisabledinarbitraryupmessage()
{
    scripts\mp\hud_message::showerrormessage( "_encstr_8B621DE59FE78995CFE19B971947B610BDBF7C2DEFE5B0CD76B983EB01BF60" );
}

bradleybeginuse()
{
    return scripts\cp_mp\vehicles\light_tank::light_tank_tryuse();
}

choppergunnerbeginuse()
{
    return scripts\mp\killstreaks\killstreaks::trytriggerkillstreakfromsuper( "_encstr_AF330F47C0F793D23B32CF4A6D0E7592DA" );
}

cruisepredatorbeginuse()
{
    return scripts\mp\killstreaks\killstreaks::trytriggerkillstreakfromsuper( "_encstr_B87010AA3BE80F83CFA7075A6D614F65EDBB" );
}

scramblebeginuse()
{
    var_0 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self.origin + ( 0, 0, 400 ) );
    self.scrambleent = var_0;
    self.scrambleent setmodel( "_encstr_AA7D1206B503692D19E3C070FAADC5808F77817F" );
    self.scrambleent linkto( self );
    self.scrambleent.owner = self;
    self.scrambleent.team = self.team;
    self.scrambleent setotherent( self );
    self.scrambleent setscriptablepartstate( "_encstr_8AEB0DAF782B09BAB5412751365523", "_encstr_9707035F3B", 0 );
    thread scripts\cp_mp\killstreaks\helper_drone::spawn_ai_single( self );
    return 1;
}

scrambleusefinished( var_0 )
{
    self.scrambleent unlink();
    self.scrambleent delete();
    scripts\cp_mp\killstreaks\helper_drone::helperdrone_endscramblereffect();
}

trophyonset()
{
    return scripts\mp\equipment\trophy_system::trophy_onsuperset();
}

jugg_removefromactivejugglist()
{
    return _debug_rooftop_heli_start::jugg_getminigunweapon();
}

jugg_setherodropscriptable()
{
    return _debug_rooftop_heli_start::jugg_go_to_node_callback();
}

tacinsertonset()
{
    scripts\mp\equipment\tac_insert::tacinsert_set();
}

tacinsertonunset()
{
    scripts\mp\equipment\tac_insert::tacinsert_unset();
}

remotedetonateonset()
{

}

remotedetonatebeginuse()
{

}

precisionairstrikebeginuse()
{
    return scripts\mp\killstreaks\killstreaks::trytriggerkillstreakfromsuper( "_encstr_B7F514E0C9AC364BE65ADEB9BEB05A279BA327D2ADB2" );
}

tomastrikebeginuse()
{
    return scripts\mp\killstreaks\killstreaks::trytriggerkillstreakfromsuper( "_encstr_8CE60CA3DE5BC2AFB98EC94B6D59" );
}

pacsentrybeginuse()
{
    return scripts\mp\killstreaks\killstreaks::trytriggerkillstreakfromsuper( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5" );
}

brcircleextract()
{

}

uavbeginuse()
{
    return scripts\mp\killstreaks\killstreaks::trytriggerkillstreakfromsuper( "_encstr_B61904AEB067" );
}

taccoverbeginuse()
{
    return scripts\mp\equipment\tactical_cover::tac_cover_on_fired_super();
}

taccoverunset()
{
    return scripts\mp\equipment\tactical_cover::tac_cover_on_take_super();
}

recondronebeginuse()
{
    return scripts\cp_mp\killstreaks\helper_drone::recondrone_beginsuper();
}

recondroneenduse( var_0 )
{
    return scripts\cp_mp\killstreaks\helper_drone::recondrone_endsuper( var_0 );
}

recondroneunset()
{
    scripts\cp_mp\killstreaks\helper_drone::recondrone_unsetsuper();
}

empdronebeginuse()
{
    return scripts\cp_mp\killstreaks\emp_drone_targeted::empdrone_beginsuper();
}

deadsilencebeginuse()
{
    return scripts\mp\supers\super_deadsilence::superdeadsilence_beginsuper();
}

deadsilenceenduse( var_0 )
{
    return scripts\mp\supers\super_deadsilence::superdeadsilence_endsuper( var_0 );
}

supportboxunset()
{
    scripts\mp\equipment\support_box::supportbox_unset();
}

laststandhealonset()
{
    return scripts\mp\supers\laststand_heal::laststandheal_onset();
}

laststandhealunset()
{
    return scripts\mp\supers\laststand_heal::laststandheal_unset();
}

laststandhealbeginuse()
{
    return scripts\mp\supers\laststand_heal::laststandheal_beginuse();
}

stoppingpowerbeginuse()
{
    return scripts\mp\supers\super_stoppingpower::stoppingpower_beginuse();
}

_id_11ED6()
{
    return _luidecision::_id_11ED6();
}

superweapondropbeginuse()
{
    return scripts\mp\equipment\weapon_drop::weapondrop_beginsuper();
}

_id_13988()
{
    var_0 = scripts\mp\perks\perkpackage::perkpackage_getfirstfieldupgrade();
    _id_13985( var_0 );
    self.super.firstupgrade = var_0;
    var_1 = scripts\mp\perks\perkpackage::perkpackage_getsecondfieldupgrade();
    _id_13985( var_1 );
    self.super.secondupgrade = var_1;
    var_2 = level.superglobals.staticsuperdata[var_0];
    var_3 = 0;

    if ( isdefined( var_2 ) )
        var_3 = var_2.pointsneeded;

    var_2 = level.superglobals.staticsuperdata[var_1];
    var_4 = 0;

    if ( isdefined( var_2 ) )
        var_4 = var_2.pointsneeded;

    var_5 = max( var_3, var_4 );
    self.super._id_12187 = var_5;
}

_id_13989()
{
    var_0 = self.super.firstupgrade;
    _id_13986( var_0 );
    var_1 = self.super.secondupgrade;
    _id_13986( var_1 );
}

superselectbeginuse()
{
    return scripts\mp\perks\perkpackage::perkpackage_openselect();
}

testsuperbeginuse()
{
    thread testsuperrefundwatcher();
    return 1;
}

_id_1397F()
{
    return 1;
}

_id_1398B()
{
    return 1;
}

_id_1398D()
{
    return 1;
}

_id_13984()
{
    return 1;
}

_id_13981()
{
    _donewithcorpse::vehicle_cp_create();
}

_id_13980()
{
    return _donewithcorpse::vehicle_compass_init();
}

vehicle_createspawnselectionlittlebirdmarker( var_0 )
{
    _donewithcorpse::vehicle_compass_playerspawnedcallback();
}

_id_13983()
{
    return 1;
}

testsuperrefundwatcher()
{
    self endon( "_encstr_9E01136EEA07AC27BEAEB9597D99D29BD26ED05623" );

    for (;;)
    {
        if ( self buttonpressed( "_encstr_B9D60935E7F19DC18E11C6" ) )
            superusefinished( 0, 0, 1 );
        else if ( self buttonpressed( "_encstr_A1D609FA1D3FE37D355909" ) )
            superusefinished( 1 );

        waitframe();
    }
}

showsuperremindersplash()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( !istrue( self.superreminderset ) )
    {
        self notify( "_encstr_9B6418E6D07BBBA9EA0756E4292B5BD27332CAC99AC1B158B986" );
        self endon( "_encstr_9B6418E6D07BBBA9EA0756E4292B5BD27332CAC99AC1B158B986" );
        self.superreminderset = 1;
        self setclientomnvar( "_encstr_BCB8124B990FC2D3E3C51577A3C7280C60CBD24B", 1 );
        wait 0.5;
        thread clearsuperremindersplash();
    }
    else
    {
        thread clearsuperremindersplash();
        self endon( "_encstr_9B6418E6D07BBBA9EA0756E4292B5BD27332CAC99AC1B158B986" );
        waitframe();
        thread showsuperremindersplash();
        return;
    }
}

clearsuperremindersplash()
{
    self notify( "_encstr_9B6418E6D07BBBA9EA0756E4292B5BD27332CAC99AC1B158B986" );
    self.superreminderset = undefined;
    self setclientomnvar( "_encstr_BCB8124B990FC2D3E3C51577A3C7280C60CBD24B", 0 );
}

clearsuperreminderondeath( var_0 )
{
    if ( !isplayer( var_0 ) )
        return;

    thread clearsuperreminderondeathinternal( var_0 );
}

clearsuperreminderondeathinternal( var_0 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 waittill( "_encstr_A3750609A5E61883" );
    var_0 clearsuperremindersplash();
}

initsuperdvars()
{
    setdvarifuninitialized( "_encstr_AD5E15D06F600776ABD0894A186C0199A9681953DA4C32", 6.0 );
}

watchsuperlottery()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = getdvarint( "_encstr_B23016076FC3487085EA514B1D7780156A83ABE1EF4A2F78", 60 );
    var_1 = getdvarint( "_encstr_ADD21CABBAD081807730AD9A0310E8AB451BF3891EDB9DB0AC1FD9D4CB60", 45 );
    var_2 = getdvarint( "_encstr_88D21C5E9613E0DB736375EAB5D78DFD4D0A4323F8FBA13B63623A810E43", 90 );
    var_3 = var_2 - var_1;
    waitframe();

    if ( !istrue( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) ) )
        level waittill( "_encstr_8BF80EDBDA10705A600880871A60DF03" );

    wait( var_0 );
    var_4 = undefined;
    var_5 = undefined;
    var_6 = [];
    var_7 = [];

    foreach ( var_9 in level.teamnamelist )
    {
        var_6[var_9] = undefined;
        var_7[var_9] = [];
    }

    for (;;)
    {
        var_4 = var_5;
        var_5 = getdvarint( "_encstr_98E41837B139F5E65DC12B9C98DBE8A3B2272F8A9B58C4D85919", 0 ) > 0;

        if ( !isdefined( var_4 ) || var_4 != var_5 )
        {
            if ( var_5 )
                level notify( "_encstr_A2531463FB6FCFC201B7040C4B18C8B79891EA1A41CD" );
            else
                level notify( "_encstr_93AF153F1BD7BA9A8130CBD36928C9E0236FFFE381F572" );
        }

        foreach ( var_9 in level.teamnamelist )
        {
            if ( !isdefined( var_6[var_9] ) )
            {
                var_6[var_9] = gettime() + ( var_1 + randomint( var_3 ) ) * 1000;
                continue;
            }

            if ( var_6[var_9] <= gettime() )
            {
                var_12 = scripts\mp\utility\teams::getteamdata( var_9, "_encstr_8875080E3685E52B93B9" );

                if ( var_12.size > 0 )
                {
                    var_12 = scripts\engine\utility::array_randomize( var_12 );
                    var_13 = [];
                    var_14 = undefined;

                    foreach ( var_16 in var_12 )
                    {
                        if ( !scripts\engine\utility::array_contains( var_7[var_9], var_16 ) )
                        {
                            if ( isdefined( var_16 getcurrentsuper() ) )
                            {
                                var_14 = var_16;
                                break;
                            }
                        }
                        else if ( isdefined( var_16 getcurrentsuper() ) )
                            var_13[var_13.size] = var_16;
                    }

                    if ( !isdefined( var_14 ) )
                    {
                        if ( isdefined( var_13[0] ) )
                            var_14 = var_13[0];
                        else
                            var_14 = var_12[0];
                    }

                    if ( var_5 )
                        childthread awardsuperlottery( var_14 );

                    var_7[var_7.size] = var_14;
                }

                var_6[var_9] = undefined;
            }
        }

        waitframe();
    }
}

_id_144FA( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self waittill( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );
    self setweaponammoclip( var_0, 1 );
}

awardsuperlottery( var_0 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 endon( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
    level endon( "_encstr_93AF153F1BD7BA9A8130CBD36928C9E0236FFFE381F572" );
    var_0 notify( "_encstr_9CD71216BBB09C91A6EA832B93C4F61DA356C95E" );
    var_0 endon( "_encstr_9CD71216BBB09C91A6EA832B93C4F61DA356C95E" );

    for (;;)
    {
        var_1 = var_0 getcurrentsuper();

        if ( !isdefined( var_1 ) )
            return;

        if ( !var_0 issuperinuse() )
            break;

        waitframe();
    }

    var_0 givesuperpoints( getsuperpointsneeded(), undefined, 1 );
}

getscriptdataversion()
{
    if ( getdvarint( "_encstr_A15E10625792E0F820DF807310CE5B9F0B48", 0 ) != 0 )
        return 254;

    if ( getdvarint( "_encstr_9D0F0D1338C5C9DB98BF7174458333", 0 ) != 0 )
        return 7;

    return 254;
}

recordsuperearnedanalytics( var_0 )
{
    if ( getdvarint( "_encstr_8B9F1403DE2317BA8BD8026BB9F376EBD8A89C89EDE9", 0 ) == 0 )
        return;

    var_1 = scripts\mp\persistence::statgetchildbuffered( "_encstr_A2460627DEABDC23", "_encstr_801A0BD15ADA560A63B09795C8", 1 ) / 60.0;
    getentitylessscriptablearray( "_encstr_888F17B26BDEE7F23899F4D77730BA2786268AFAB33887AD70", [ "_encstr_9CC20A9BBA832B9CAF932BCC", var_0.staticdata.ref, "_encstr_87BF0AF359AA4080FBB2B0B9", var_1, "_encstr_87AC099DB05B59ADF619AC", scripts\mp\utility\game::getgametype(), "_encstr_9FE30FDCB14ED21CA3D7B3594EDC4B7B37", getscriptdataversion(), "_encstr_BC9C0DAC859373AC32AFC67B5DB9A3", self.pers["_encstr_A2A50DB9AEE0569CB98A8539B92B19"] ] );
}
