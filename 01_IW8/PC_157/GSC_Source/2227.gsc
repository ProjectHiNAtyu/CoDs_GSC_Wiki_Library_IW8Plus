// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3", "_encstr_80C50550FA44C9" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3", "_encstr_80C50550FA44C9" ) ]]();

    if ( !isdefined( level.grenade_effect ) )
        level.grenade_effect = ::choppersupport_movetolocation;

    level._effect["_encstr_81A01A1BBB771BF15A9A504EB3E33920B26359B86370D0970344B0D8"] = loadfx( "_encstr_950B381B0D834ED108AA71C59BF2EBE2518187EBCDA5129BA20B3788967820DA3711477B2FD61B5880302A938E1068E38157978F27F0761618FA" );
    level.choppersupports = [];
    init_chopper_support_vo();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3", "_encstr_9E831C18A84398308FEB4366442B29F998A381589878FE6F4DA6920F8803" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3", "_encstr_9E831C18A84398308FEB4366442B29F998A381589878FE6F4DA6920F8803" ) ]]( "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3", 12 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) ]]( "_encstr_BA3B11C0E23F8DC0D70CCD28F2272859691A58", 1, "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) ]]( "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3", 36, "_encstr_BA3B11C0E23F8DC0D70CCD28F2272859691A58" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) ]]( "_encstr_808E0F48828D317103B7DE406CDBFEFB32", 1, "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) ]]( "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3", 13, "_encstr_808E0F48828D317103B7DE406CDBFEFB32" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) ]]( "_encstr_A45E1539B897587167FB1946232F3BD82F59393B677D90", 1, "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) ]]( "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3", 100, "_encstr_A45E1539B897587167FB1946232F3BD82F59393B677D90" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) ]]( "_encstr_AA9E139F78F82C0A91C8702DCB5FC291AB72B76F68", 1, "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) ]]( "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3", 24, "_encstr_AA9E139F78F82C0A91C8702DCB5FC291AB72B76F68" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) ]]( "_encstr_A90B13C38210FBDF596792D180BB50C7EF3B9FBAF0", 1, "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) ]]( "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3", 26, "_encstr_A90B13C38210FBDF596792D180BB50C7EF3B9FBAF0" );

    level.heli_structs_entrances = scripts\cp_mp\utility\game_utility::removematchingents_bykey( "_encstr_B18E116AB37043BF8823A765D5B082AF372902" );
    level.heli_structs_goals = scripts\cp_mp\utility\game_utility::removematchingents_bykey( "_encstr_932A0D4A733110E9C53B7767FF0691" );
    level.heli_structs_paths = scripts\cp_mp\utility\game_utility::removematchingents_bykey( "_encstr_9E830DD8188903A8ABEF58A24909E4" );
    level.incomingallchoppersupports = 0;
    level.incomingchoppersupports["_encstr_BC850785638DA59537"] = 0;
    level.incomingchoppersupports["_encstr_BA840579D3F7F6"] = 0;
}

init_chopper_support_vo()
{
    game["_encstr_B8DA073D799798C7C7"]["_encstr_80031D63D1781ACBBD5BE913830F8395C88127E44B90A403487102FA69ECEF"] = "_encstr_80271C96409723D16F1BB9D0034289984BE4309BA557681114D178181A9C";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_A6041B87E3B27FC835CAB60B33088338BB7B07134FAA503049657981DF"] = "_encstr_A4CC1BC9221FA718CFE237670D72E0E0837BC6105A7FD170A4F74BB304";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_AAE61D5B03D8F332E3B0E923A0E1EA5793F59FD82DA1A338EF1832DAF817E7"] = "_encstr_AFCC1BE6E0F0F1C1EA82B962CB5B0827B8453F2C8D114173BA108AA8BB";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_AA641EE7B9D06310701B999A93B058EA36E98F770D0CBAFFA8864B666B309593"] = "_encstr_B6781780EBE23FEFBF761EA3708B6270DB6BB12A2879C7308D";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_A40117A2D04F924B29462703DD53939DDD88E90BF0014A7F20"] = "_encstr_A40117A2D04F924B29462703DD53939DDD88E90BF0014A7F20";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_8C08173643BDC1E02BE4FAE6BA0EE0BD3947AF991B163956B9"] = "_encstr_8C08173643BDC1E02BE4FAE6BA0EE0BD3947AF991B163956B9";
    game["_encstr_B8DA073D799798C7C7"]["_encstr_A21016F3BB604B9A4BE8815BC8B952FF7B1D476BCEC91FA4"] = "_encstr_A21016F3BB604B9A4BE8815BC8B952FF7B1D476BCEC91FA4";
}

tryusechoppersupport( var_0 )
{
    var_1 = scripts\cp_mp\utility\killstreak_utility::createstreakinfo( var_0, self );
    return tryusechoppersupportfromstruct( var_1 );
}

tryusechoppersupportfromstruct( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( isdefined( level.killstreaktriggeredfunc ) )
    {
        if ( !level [[ level.killstreaktriggeredfunc ]]( var_0 ) )
            return 0;
    }

    if ( !scripts\cp_mp\vehicles\vehicle_tracking::reservevehicle() )
        return 0;

    var_1 = scripts\cp_mp\killstreaks\killstreakdeploy::streakdeploy_dogesturedeploy( var_0, getcompleteweaponname( "_encstr_B3B1167A9BD66F3DD7AC1762A90717F51E2FB6E377CFC80B" ) );

    if ( !istrue( var_1 ) )
    {
        scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();
        return 0;
    }

    level.incomingallchoppersupports++;
    var_2 = 1;

    if ( scripts\cp_mp\utility\game_utility::islargemap() )
        var_2 = 2;

    if ( level.choppersupports.size >= var_2 || level.choppersupports.size + level.incomingallchoppersupports > var_2 )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) ]]( "_encstr_B29B22930315913F13256D2B09A35621C4364017428E7E99F82BE788978F99B74B8B2760" );

        level.incomingallchoppersupports--;
        scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();
        return 0;
    }

    if ( scripts\cp_mp\utility\game_utility::islargemap() && level.teambased )
    {
        var_3 = 1;
        level.incomingchoppersupports[self.team]++;

        if ( scripts\cp_mp\utility\killstreak_utility::getnumactivekillstreakperteam( self.team, level.choppersupports ) + level.incomingchoppersupports[self.team] > var_3 )
        {
            level.incomingallchoppersupports--;
            level.incomingchoppersupports[self.team]--;

            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) )
                [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) ]]( "_encstr_8A6726A5253113A95149A8A069A65E350A0BD76429298A721162ACD7A9AA8214F492457D24A8319E" );

            scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();
            return 0;
        }
    }

    if ( isdefined( level.killstreakbeginusefunc ) )
    {
        if ( !level [[ level.killstreakbeginusefunc ]]( var_0 ) )
        {
            scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();
            return 0;
        }
    }

    var_4 = usechoppersupport( self, var_0 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_8F0A13980A279728BB7CAE255AA7119F070358F0D3" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_8F0A13980A279728BB7CAE255AA7119F070358F0D3" ) ]]( "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3", self.origin );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_957515E82BC2AD28B116F2CA9C6885E4C8D41CB12C6E43" ) )
        self thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_957515E82BC2AD28B116F2CA9C6885E4C8D41CB12C6E43" ) ]]( "_encstr_AB8815AE6E568CEB6CA1BD0783B227FA3757E0387BC9D1", self );

    return var_4;
}

usechoppersupport( var_0, var_1 )
{
    var_2 = spawnchopper( var_0, var_1 );
    level.incomingallchoppersupports--;

    if ( scripts\cp_mp\utility\game_utility::islargemap() && level.teambased )
        level.incomingchoppersupports[var_0.team]--;

    if ( !isdefined( var_2 ) )
        return 0;

    var_2 thread startchopper( var_0, var_1 );

    if ( isdefined( level.killstreakfinishusefunc ) )
        level thread [[ level.killstreakfinishusefunc ]]( var_1 );

    return 1;
}

spawnchopper( var_0, var_1 )
{
    var_2 = ( 0, 0, 1750 );
    var_4 = var_0.origin - anglestoforward( var_0.angles ) * 15000 + var_2;
    var_5 = var_0.origin + anglestoforward( var_0.angles ) * 2000 + var_2;
    var_6 = var_0.angles;
    var_7 = getdvarint( "_encstr_93BC1DC6F7032FCE38E8F2FB6FCA5802CF3B70B0A380AEE51F34D274F8F5FD", 45 );
    var_9 = undefined;

    if ( isdefined( level.heli_structs_entrances ) && level.heli_structs_entrances.size > 0 )
    {
        var_10 = randomint( level.heli_structs_entrances.size );
        var_11 = level.heli_structs_entrances[var_10];
        var_9 = choppersupport_findtargetstruct( var_11.script_linkto, level.heli_structs_goals );

        if ( isdefined( var_9 ) )
        {
            var_12 = var_11.origin * ( 1, 1, 0 ) + var_2;
            var_13 = var_9.origin * ( 1, 1, 0 ) + var_2;
            var_14 = vectornormalize( var_13 - var_12 );
            var_4 = var_13 - var_14 * 15000;
            var_5 = var_13;
            var_6 = vectortoangles( var_14 );
        }
        else
        {

        }
    }
    else
    {

    }

    var_21 = "_encstr_BE5013B327D8AA1772C4A120DEEA958E28CF58189F";

    if ( scripts\cp_mp\utility\player_utility::getplayersuperfaction( var_0 ) )
        var_21 = "_encstr_AFEC18BB896018E9A1C3BB7F3B5BC3874891B507A1810D4286C1";

    scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();
    var_22 = scripts\cp_mp\vehicles\vehicle_tracking::_spawnhelicopter( var_0, var_4, var_6, "_encstr_800B1793D8213967E868A8A075F3CF7A73087B9AC8A1E19703", var_21 );

    if ( !isdefined( var_22 ) )
        return undefined;

    var_22.speed = 100;
    var_22.accel = 50;
    var_22.lifetime = var_7;
    var_22.team = var_0.team;
    var_22.owner = var_0;
    var_22.angles = var_6;
    var_22.streakinfo = var_1;
    var_22.streakname = var_1.streakname;
    var_22.flaresreservecount = 1;
    var_22.currentdamagestate = 0;
    var_22.pathstart = var_4;
    var_22.pathgoal = var_5;
    var_22.currentaction = "_encstr_B408071CB04739BDC6";
    var_22.currenttarget = undefined;
    var_22.currentpatrolstruct = var_9;
    var_22.heightoffset = var_2;
    var_22.infil_complete = var_2[2] - 750;
    var_22._id_13766 = 50;
    var_22._id_13767 = 25;
    var_22._id_13768 = undefined;
    var_22._id_11C43 = 7;
    var_22._id_11C44 = 12;
    var_22 setvehicleteam( var_22.team );
    var_22.health = 3500;
    var_22.maxhealth = 3500;
    var_22 scripts\mp\sentientpoolmanager::registersentient( "_encstr_B2860FEF13897ACB10E3FFC6F871C1E25E", var_0 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_9B6B1603F76C8DFBEB22F9E7B029E18C071D9354B4BEC907" ) )
        var_22 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_9B6B1603F76C8DFBEB22F9E7B029E18C071D9354B4BEC907" ) ]]( var_1.streakname, "_encstr_95221A842B78FB2358DAAA42E6A683F5B8A93D1AC710C373FF30D34B", undefined, "_encstr_B18418472D5B2BB7AB8EBEB10DBD07C195C9D7CDAB0E38F6E41D", "_encstr_93452261567C70A04BF397F9AF7375C80728291971DB8868F3CBEBDD2F5B3D20B005B393" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_982C226DD28DB1DCE839CA0BB6A62BA3419C59D4F6918816B6857695A1851BD8C40B1BB5" ) )
        var_22 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_982C226DD28DB1DCE839CA0BB6A62BA3419C59D4F6918816B6857695A1851BD8C40B1BB5" ) ]]( var_1.streakname );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_AA8E233AD44A51EBF4B35860CF0BE1A931FDAE3DA5121935C9277058DF7339211A262FCE84" ) )
        var_22 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_AA8E233AD44A51EBF4B35860CF0BE1A931FDAE3DA5121935C9277058DF7339211A262FCE84" ) ]]( var_1.streakname, ::choppersupport_modifydamage );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_80C31B408A05F94BFB42858F231FF18167D298A332161B60B37A9FF60B" ) )
        var_22 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_80C31B408A05F94BFB42858F231FF18167D298A332161B60B37A9FF60B" ) ]]( var_1.streakname, ::choppersupport_handledeathdamage );

    level.choppersupports[level.choppersupports.size] = var_22;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_9F1B1AA9C213557B261381B32E1719839BDA6373CB4F77E88DE197B1" ) )
        var_22 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_9F1B1AA9C213557B261381B32E1719839BDA6373CB4F77E88DE197B1" ) ]]( var_1.streakname, "_encstr_B2860FEF13897ACB10E3FFC6F871C1E25E", var_0, 0, 1, 100 );

    var_22 setmaxpitchroll( 15, 15 );
    var_22 vehicle_setspeed( var_22.speed, var_22.accel );
    var_22 sethoverparams( 50, 5, 2.5 );
    var_22 setturningability( 0.5 );
    var_22 setyawspeed( 100, 25, 25, 0.1 );
    var_22 setotherent( var_0 );
    var_22 setcandamage( 1 );
    var_22 setneargoalnotifydist( 768 );
    var_22 setscriptablepartstate( "_encstr_8A981098D8A59BB6D2E6ECEB8DD2EC43D16E", "_encstr_9707035F3B", 0 );
    var_22 setscriptablepartstate( "_encstr_B27F071F887829DA85", "_encstr_9707035F3B", 0 );
    var_23 = "_encstr_93BC2044EF6BB2D03DEBF51E6E0CCE099F381F3DD24083F3C73DD3729BFD75A877CD";

    if ( scripts\cp_mp\utility\player_utility::getplayersuperfaction( var_0 ) )
        var_23 = "_encstr_82D225ECB20D0EBE6B96B1BEB0B439D785D0EDE856B16386F54757E4C95947D7BB6BFA95C2E6E8";

    var_22.frontturret = spawnturret( "_encstr_88710C0763169AF7A3330A1229D8", var_22 gettagorigin( "_encstr_BA56117341503723E5BD9BDFA9984A5268C8EB" ), "_encstr_A1BF1ABFE8D2D9CBDB2E2098B3A358B74DDCC8A337103A8FDC012777" );
    var_22.frontturret setmodel( var_23 );
    var_22.frontturret.owner = var_0;
    var_22.frontturret.team = var_0.team;
    var_22.frontturret.angles = var_22.angles;
    var_22.frontturret.streakinfo = var_1;
    var_22.frontturret.turreton = 1;
    var_22.frontturret.name = "_encstr_ADAF0D262B5830C3B9B37BD0F3175C";
    var_22.frontturret.attackingtarget = undefined;
    var_22.frontturret linkto( var_22 );
    var_22.frontturret setturretteam( var_0.team );
    var_22.frontturret setturretmodechangewait( 0 );
    var_22.frontturret setmode( "_encstr_8190077059F813F2FC" );
    var_22.frontturret setotherent( var_0 );
    var_22.frontturret setdefaultdroppitch( 45 );
    var_22.frontturret.groundtargetent = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self.origin );
    var_22.frontturret.groundtargetent setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_22.frontturret.groundtargetent dontinterpolate();
    var_22.rearturret = spawnturret( "_encstr_88710C0763169AF7A3330A1229D8", var_22 gettagorigin( "_encstr_89A1109BE73741FB7D2DDB30D4A79AE727F2" ), "_encstr_A1BF1ABFE8D2D9CBDB2E2098B3A358B74DDCC8A337103A8FDC012777" );
    var_22.rearturret setmodel( var_23 );
    var_22.rearturret.owner = var_0;
    var_22.rearturret.team = var_0.team;
    var_22.rearturret.angles = var_22.angles;
    var_22.rearturret.streakinfo = var_1;
    var_22.rearturret.turreton = 1;
    var_22.rearturret.name = "_encstr_A4F50C8A539293E77BDBC3032D03";
    var_22.rearturret.attackingtarget = undefined;
    var_22.rearturret linkto( var_22 );
    var_22.rearturret setturretteam( var_0.team );
    var_22.rearturret setturretmodechangewait( 0 );
    var_22.rearturret setmode( "_encstr_8190077059F813F2FC" );
    var_22.rearturret setotherent( var_0 );
    var_22.rearturret setdefaultdroppitch( 45 );
    var_22.rearturret.groundtargetent = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self.origin );
    var_22.rearturret.groundtargetent setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_22.rearturret.groundtargetent dontinterpolate();
    var_22.killcament = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_22 gettagorigin( "_encstr_B9F80B1037D7466783452DB89F" ) );
    var_22.killcament linkto( var_22, "_encstr_B9F80B1037D7466783452DB89F", ( -600, 0, 1000 ), ( 0, 0, 0 ) );
    var_22.frontturret.killcament = var_22.killcament;
    var_22.rearturret.killcament = var_22.killcament;
    level notify( "_encstr_876717C021F36FF3F650C2A02AE1224EB7690F680710BB775B", var_22 );
    return var_22;
}

startchopper( var_0, var_1 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self setvehgoalpos( self.pathgoal, 1 );
    var_2 = undefined;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_936006576AC048BA", "_encstr_82011B33295F7BA3A850CD124B28D5B22201EFAB81F0A36440D9C51D41" ) )
    {
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_936006576AC048BA", "_encstr_82011B33295F7BA3A850CD124B28D5B22201EFAB81F0A36440D9C51D41" ) ]]( var_0, var_1.streakname );
        var_2 = 2.0;
    }

    var_0 thread scripts\cp_mp\utility\killstreak_utility::playkillstreakoperatordialog( "_encstr_9BE405709A9D69" + var_1.streakname, 1, var_2 );
    thread choppersupport_monitorowner();
    thread choppersupport_neargoalsettings();
    self playsoundonmovingent( "_encstr_9EDA1CD8A369C0733DB31F6D3279AF1703E8D78065213F6B29628F8E5903" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B20E070DACE628057F", "_encstr_A8DE16A1C2DC8C63B292B936F6D696B9EC35474B9B9D2BE4" ) )
        self thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B20E070DACE628057F", "_encstr_A8DE16A1C2DC8C63B292B936F6D696B9EC35474B9B9D2BE4" ) ]]( ::choppersupport_handlemissiledetection );
}

choppersupport_monitorowner()
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );

    if ( !isdefined( self.owner ) || self.owner.team != self.team )
    {
        thread choppersupport_leave();
        return;
    }

    self.owner scripts\engine\utility::_id_143A5( "_encstr_B2170C4AD884CDC823B9DB9D9F42", "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    thread choppersupport_leave();
}

choppersupport_neargoalsettings()
{
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_A3750609A5E61883" );
    self waittill( "_encstr_A4D10A68F227A6614FFF4B59" );
    self vehicle_setspeed( int( self.speed / 2 ), int( self.accel / 3 ) );
    thread choppersupport_watchlifetime();
    thread choppersupport_watchdestoyed();
    thread choppersupport_watchgameendleave();
    thread grab_players_inside();
    thread choppersupport_patrolfield( 1 );
    thread choppersupport_engageturrettarget( self.frontturret );
    thread choppersupport_engageturrettarget( self.rearturret );
}

choppersupport_handlemissiledetection( var_0, var_1, var_2, var_3 )
{
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        if ( !isdefined( var_2 ) )
            break;

        var_4 = var_2 getpointinbounds( 0, 0, 0 );
        var_5 = distance( self.origin, var_4 );

        if ( var_5 < 4000 && var_2.flaresreservecount > 0 )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B20E070DACE628057F", "_encstr_AA670F12AB403BE7DD3F2AB321AE7BF720" ) )
                [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B20E070DACE628057F", "_encstr_AA670F12AB403BE7DD3F2AB321AE7BF720" ) ]]( var_2 );

            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B20E070DACE628057F", "_encstr_A1B007F0B92643EC63" ) )
                var_2 thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B20E070DACE628057F", "_encstr_A1B007F0B92643EC63" ) ]]( undefined, var_3 );

            if ( isdefined( var_2.streakinfo ) )
                var_2 scripts\cp_mp\utility\killstreak_utility::playkillstreakoperatordialog( "_encstr_8C08173643BDC1E02BE4FAE6BA0EE0BD3947AF991B163956B9" );

            var_6 = undefined;

            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B20E070DACE628057F", "_encstr_A38307199538C67B97" ) )
                var_6 = var_2 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B20E070DACE628057F", "_encstr_A38307199538C67B97" ) ]]();

            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_A92D21AE07462C47AC4D6C932CC1283737A59B8E88B0E8C2237BC9D8591A93CA8CA53A" ) )
                var_2 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_A92D21AE07462C47AC4D6C932CC1283737A59B8E88B0E8C2237BC9D8591A93CA8CA53A" ) ]]( var_0 );

            self missile_settargetent( var_6 );
            self notify( "_encstr_9F201840B8DF9B42049717B3495B53E7B2F7D8EBE15F1C721A51" );
            return;
        }

        waitframe();
    }
}

choppersupport_engageturrettarget( var_0 )
{
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        if ( !istrue( var_0.turreton ) || istrue( var_0._id_13E86 ) )
        {
            waitframe();
            continue;
        }

        var_1 = choppersupport_gettargets( var_0, 6000, 1, 1 );

        if ( isdefined( var_1 ) && var_1.size > 0 )
        {
            var_2 = choppersupport_acquireturrettarget( var_0, var_1 );

            if ( isdefined( var_2 ) && var_2 == "_encstr_B6680F331BE76FD0172CFFF559BA50389F" )
                scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 1 );

            if ( !choppersupport_checkifactivetargets() )
            {
                if ( istrue( self.chopper_boss_explosion ) && isdefined( self.intro_enemy_respawner ) )
                    self thread [[ self.intro_enemy_respawner ]]();
                else if ( isdefined( self._id_1220C ) )
                    self thread [[ self._id_1220C ]]();
                else
                    thread choppersupport_patrolfield();
            }
        }

        wait 0.05;
    }
}

choppersupport_acquireturrettarget( var_0, var_1 )
{
    self notify( "_encstr_9591102FB848111AD3BDC72FA18F134F3083" );
    var_2 = undefined;
    [var_4, var_5, var_6] = choppersupport_getbesttarget( var_0, var_1 );

    if ( isdefined( var_4 ) )
    {
        var_7 = undefined;

        if ( istrue( var_6 ) )
            var_7 = var_4 scripts\cp_mp\utility\player_utility::getvehicle();

        choppersupport_setcurrenttarget( var_0, var_4 );

        if ( istrue( var_5 ) && self.currenttarget == var_4 && !istrue( self.chopper_boss_explosion ) )
            self thread [[ level.grenade_effect ]]( var_4, 1 );

        choppersupport_fireonturrettarget( var_0, var_4, var_7, 1, var_5 );
        var_2 = "_encstr_B6680F331BE76FD0172CFFF559BA50389F";
    }
    else
        var_2 = "_encstr_A9DF13C6B7CDE8B47357CA7DE6B25839C6D0D2E63B";

    return var_2;
}

choppersupport_setcurrenttarget( var_0, var_1 )
{
    var_0 settargetentity( var_0.groundtargetent );
    var_0.attackingtarget = var_1;

    if ( !isdefined( self.currenttarget ) )
    {
        self.currenttarget = var_1;
        self setlookatent( self.currenttarget );
    }
}

choppersupport_clearcurrenttarget( var_0 )
{
    if ( isdefined( self.currenttarget ) && self.currenttarget == var_0.attackingtarget )
        self.currenttarget = undefined;

    if ( istrue( var_0._id_13A71 ) )
        var_0._id_13A71 = undefined;

    var_0.attackingtarget = undefined;
    var_0 cleartargetentity();
    var_0.groundtargetent unlink();
    var_1 = choppersupport_getactivetargets();

    if ( self.currentaction != "_encstr_B408071CB04739BDC6" )
    {
        if ( var_1.size == 0 )
            self clearlookatent();
    }

    var_0 notify( "_encstr_BA2D0C0AE08273A18419538CB3D3" );
}

choppersupport_fireonturrettarget( var_0, var_1, var_2, var_3, var_4 )
{
    if ( self.currentaction != "_encstr_A31C0A412BBBD77884318D87" )
        self.currentaction = "_encstr_A31C0A412BBBD77884318D87";

    if ( istrue( var_3 ) && isdefined( self.owner ) && self.owner scripts\cp_mp\utility\player_utility::_isalive() && ( !isdefined( self.lastfiretime ) || self.lastfiretime + 15000 <= gettime() ) )
    {
        scripts\cp_mp\utility\killstreak_utility::playkillstreakoperatordialog( "_encstr_AA641EE7B9D06310701B999A93B058EA36E98F770D0CBAFFA8864B666B309593" );
        self.lastfiretime = gettime();
    }

    choppersupport_watchforlosttarget( var_0 );
    thread greenlight( var_0 );
    thread choppersupport_watchtargetlos( var_0, var_2 );
    thread choppersupport_watchtargettimeout( var_0 );
    thread grab_entities_inside( var_0 );
    var_5 = weaponfiretime( "_encstr_A1BF1ABFE8D2D9CBDB2E2098B3A358B74DDCC8A337103A8FDC012777" );
    var_6 = 0;
    var_7 = 100;

    if ( isdefined( self._id_13766 ) )
        var_7 = self._id_13766;

    var_8 = 20;

    if ( isdefined( self._id_11C43 ) )
        var_8 = self._id_11C43;

    var_9 = 40;

    if ( isdefined( self._id_11C44 ) )
        var_9 = self._id_11C44;

    if ( istrue( var_4 ) )
    {
        var_10 = 3750;

        while ( istrue( goalyaw( var_0, var_1 ) ) )
        {
            if ( distance2dsquared( self.origin, var_1.origin ) < var_10 * var_10 )
                break;

            waitframe();
        }
    }

    thread grenade_chances( var_0 );

    while ( istrue( goalyaw( var_0, var_1 ) ) )
    {
        if ( istrue( var_0._id_13A71 ) )
        {
            if ( isdefined( self.currenttarget ) && var_1 == self.currenttarget && !istrue( self.chopper_boss_explosion ) )
                self [[ level.grenade_effect ]]( self.currenttarget, 1 );
            else
                var_0 notify( "_encstr_8B031EC6A1DB1CE095939AEAC10EDB9CA3FAE885E49D2BE821277BB52B893DD4" );
        }
        else if ( var_0 choppersupport_turretlookingattarget() )
        {
            var_11 = undefined;

            if ( isdefined( var_2 ) )
                var_11 = var_1.origin;
            else
                var_11 = var_1 gettagorigin( "_encstr_8BE10B4DF5DA2C5A9B39B7EDE8" );

            choppersupport_setattackpoint( var_0, var_1, var_11, var_7 );

            if ( var_6 == var_8 )
            {
                var_7 = 50;

                if ( isdefined( self._id_13767 ) )
                    var_7 = self._id_13767;
            }
            else if ( var_6 == var_9 )
            {
                var_7 = undefined;

                if ( isdefined( self._id_13768 ) )
                    var_7 = self._id_13768;
            }

            var_0 shootturret( "_encstr_A94F0AD158D9BECCD80BE6A1" );
            var_6++;

            if ( isdefined( var_0.streakinfo ) )
                var_0.streakinfo.shots_fired++;
        }

        scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_5 );
    }
}

goalyaw( var_0, var_1 )
{
    return isdefined( self ) && isdefined( var_0 ) && isdefined( var_1 ) && !isdefined( self.iscrashing ) && !isdefined( self.isleaving ) && isdefined( var_0.attackingtarget );
}

choppersupport_setattackpoint( var_0, var_1, var_2, var_3 )
{
    var_4 = var_2;

    if ( isdefined( var_3 ) )
    {
        var_5 = [ self, var_0 ];
        var_6 = randomint( var_3 );
        var_7 = randomint( 360 );
        var_8 = var_2[0] + var_6 * cos( var_7 );
        var_9 = var_2[1] + var_6 * sin( var_7 );
        var_10 = var_2[2];
        var_4 = ( var_8, var_9, var_10 );
        var_0.groundtargetent.origin = var_4;
    }
    else if ( !var_0.groundtargetent islinked() )
        var_0.groundtargetent linkto( var_1, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", ( 0, 0, 30 ), ( 0, 0, 0 ) );
}

choppersupport_turretlookingattarget()
{
    var_0 = 0.992;
    var_1 = anglestoforward( self gettagangles( "_encstr_A94F0AD158D9BECCD80BE6A1" ) );
    var_2 = vectornormalize( self.groundtargetent.origin - self.origin );
    var_3 = vectordot( var_1, var_2 );

    if ( isdefined( self gettargetentity( 1 ) ) && var_3 >= var_0 )
        return 1;

    return 0;
}

choppersupport_watchforlosttarget( var_0 )
{
    thread choppersupport_watchforlosttargetaction( var_0, "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    thread choppersupport_watchforlosttargetaction( var_0, "_encstr_9F861DD3F8D2281340D3510D87B08043D10FEF6F105F38348AEF711133A7A2" );
    thread choppersupport_watchforlosttargetaction( var_0, "_encstr_BD9D1F8D86F61C382BE4A9571C0EBD27E8F5472C4ED959E813CACCE8922CDCD959" );
    thread choppersupport_watchforlosttargetaction( var_0, "_encstr_8B031EC6A1DB1CE095939AEAC10EDB9CA3FAE885E49D2BE821277BB52B893DD4" );
    thread choppersupport_watchforlosttargetaction( var_0, "_encstr_ADCF1D7BCC7FA13BD7D8B78B70FB6AE0856F3B58D3B17809BC03D790303370" );
    thread choppersupport_watchforlosttargetaction( var_0, "_encstr_88931F8D34DE0E839539D4570E0EDEC93ABED12CE4B3B2A3C4B0373A351D85738C" );
}

choppersupport_watchforlosttargetaction( var_0, var_1 )
{
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_AB0808DFB97F822F1899" );
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_ABBD09A7AB72DE2819ED91" );
    var_0 endon( "_encstr_BA2D0C0AE08273A18419538CB3D3" );
    var_2 = var_0;

    if ( var_1 == "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" )
        var_2 = var_0.attackingtarget;

    var_2 waittill( var_1 );
    choppersupport_clearcurrenttarget( var_0 );
}

greenlight( var_0 )
{
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_AB0808DFB97F822F1899" );
    self endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_BA2D0C0AE08273A18419538CB3D3" );

    if ( !scripts\cp_mp\utility\game_utility::update_ai_volumes() )
        return;

    var_1 = self.pathgoal;

    for (;;)
    {
        if ( isdefined( var_0.attackingtarget ) )
        {
            if ( distance2dsquared( var_1, self.origin ) > 100000000 )
            {
                if ( !istrue( self.spawn_lbravo ) )
                    self.spawn_lbravo = 1;

                var_0 notify( "_encstr_9F861DD3F8D2281340D3510D87B08043D10FEF6F105F38348AEF711133A7A2" );
                break;
            }
        }

        waitframe();
    }
}

grenade_chances( var_0 )
{
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_AB0808DFB97F822F1899" );
    self endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_BA2D0C0AE08273A18419538CB3D3" );

    for (;;)
    {
        if ( isdefined( var_0.attackingtarget ) )
        {
            var_1 = var_0.attackingtarget;

            if ( distance2dsquared( var_0.origin, var_1.origin ) > 20250000 )
            {
                wait 2;
                var_0 notify( "_encstr_BD9D1F8D86F61C382BE4A9571C0EBD27E8F5472C4ED959E813CACCE8922CDCD959" );
                break;
            }
        }

        waitframe();
    }
}

choppersupport_watchtargetlos( var_0, var_1 )
{
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_AB0808DFB97F822F1899" );
    self endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_BA2D0C0AE08273A18419538CB3D3" );
    var_2 = undefined;
    var_3 = 500;
    var_4 = scripts\engine\trace::create_contents( 0, 1, 0, 1, 0, 1, 0, 1, 1 );
    var_5 = [ var_0 ];

    if ( isdefined( var_1 ) )
    {
        var_5[var_5.size] = var_1;
        var_6 = var_1 getlinkedchildren();

        if ( isdefined( var_6 ) && var_6.size > 0 )
            var_5 = scripts\engine\utility::array_combine( var_5, var_6 );
    }

    for (;;)
    {
        if ( !istrue( var_0._id_13A71 ) && isdefined( var_0.attackingtarget ) )
        {
            var_7 = scripts\engine\trace::ray_trace_passed( var_0 gettagorigin( "_encstr_A1E80BC072BFD721F70A4635FC" ), var_0.attackingtarget gettagorigin( "_encstr_87DA078B11C012A35F" ), var_5, var_4 );

            if ( !istrue( var_7 ) )
            {
                if ( !isdefined( var_2 ) )
                    var_2 = gettime();

                if ( gettime() - var_2 > var_3 )
                    var_0._id_13A71 = 1;
            }
            else
                var_2 = undefined;
        }

        wait 0.25;
    }
}

choppersupport_watchtargettimeout( var_0 )
{
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_AB0808DFB97F822F1899" );
    self endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_BA2D0C0AE08273A18419538CB3D3" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 5 );
    var_0 notify( "_encstr_ADCF1D7BCC7FA13BD7D8B78B70FB6AE0856F3B58D3B17809BC03D790303370" );
}

grab_entities_inside( var_0 )
{
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_AB0808DFB97F822F1899" );
    self endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_BA2D0C0AE08273A18419538CB3D3" );

    for (;;)
    {
        if ( isdefined( var_0.attackingtarget ) && istrue( var_0.attackingtarget.inlaststand ) )
        {
            var_0 notify( "_encstr_88931F8D34DE0E839539D4570E0EDEC93ABED12CE4B3B2A3C4B0373A351D85738C" );
            break;
        }

        waitframe();
    }
}

choppersupport_isactivetarget( var_0 )
{
    var_1 = 0;

    if ( !isdefined( var_0 ) )
        return 0;

    if ( isdefined( self.frontturret.attackingtarget ) )
    {
        if ( self.frontturret.attackingtarget == var_0 )
            var_1 = 1;
    }

    if ( isdefined( self.rearturret.attackingtarget ) )
    {
        if ( self.rearturret.attackingtarget == var_0 )
            var_1 = 1;
    }

    return var_1;
}

choppersupport_checkifactivetargets()
{
    return isdefined( self.frontturret.attackingtarget ) || isdefined( self.rearturret.attackingtarget );
}

choppersupport_getactivetargets()
{
    var_0 = [];

    if ( isdefined( self.frontturret.attackingtarget ) )
        var_0[var_0.size] = self.frontturret.attackingtarget;

    if ( isdefined( self.rearturret.attackingtarget ) )
        var_0[var_0.size] = self.rearturret.attackingtarget;

    return var_0;
}

choppersupport_patrolfield( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_ABBD09A7AB72DE2819ED91" );
    self endon( "_encstr_9591102FB848111AD3BDC72FA18F134F3083" );

    if ( isdefined( self.owner ) )
        self.owner endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( isdefined( self._id_1220C ) )
        self [[ self._id_1220C ]]( var_0 );
    else
    {
        if ( self.currentaction != "_encstr_B408071CB04739BDC6" )
            self.currentaction = "_encstr_B408071CB04739BDC6";
        else if ( self.currentaction == "_encstr_B408071CB04739BDC6" && !istrue( var_0 ) )
            return;

        self clearlookatent();
        var_1 = 500;

        if ( goodjobplayer() )
            var_1 = 50;

        self setneargoalnotifydist( var_1 );
        var_2 = 0;

        for (;;)
        {
            if ( self.currentaction == "_encstr_A31C0A412BBBD77884318D87" )
            {
                if ( !istrue( var_2 ) )
                    var_2 = 1;

                waitframe();
                continue;
            }

            if ( !istrue( var_0 ) && istrue( var_2 ) )
            {
                scripts\cp_mp\utility\killstreak_utility::playkillstreakoperatordialog( "_encstr_A40117A2D04F924B29462703DD53939DDD88E90BF0014A7F20" );
                var_2 = 0;
            }

            var_3 = choppersupport_findclosestpatrolstruct();

            if ( isdefined( var_3 ) && !istrue( self.chopper_boss_explosion ) )
                self [[ level.grenade_effect ]]( var_3, 1 );
            else
            {
                var_5 = [];
                var_6 = ( 0, 0, 0 );
                var_7 = self.pathgoal;

                foreach ( var_9 in level.players )
                {
                    if ( var_9 == self.owner )
                        continue;

                    if ( level.teambased && var_9.team == self.owner.team )
                        continue;

                    if ( !var_9 scripts\cp_mp\utility\player_utility::_isalive() )
                        continue;

                    var_6 = var_6 + var_9.origin;
                    var_5[var_5.size] = var_9;
                }

                if ( isdefined( var_6 ) && var_5.size > 0 && !istrue( self.chopper_boss_explosion ) )
                {
                    var_11 = var_6 / var_5.size;
                    self [[ level.grenade_effect ]]( var_11 );
                }
            }

            scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 0.1 );
        }
    }
}

choppersupport_findclosestpatrolstruct()
{
    var_0 = scripts\engine\utility::array_combine( level.heli_structs_goals, level.heli_structs_paths );
    var_1 = undefined;
    var_2 = undefined;
    var_3 = undefined;

    foreach ( var_5 in var_0 )
    {
        if ( isdefined( self.currentpatrolstruct ) && var_5 == self.currentpatrolstruct )
            continue;

        var_6 = distance2dsquared( var_5.origin, self.origin );

        if ( !isdefined( var_3 ) || var_6 < var_3 )
        {
            var_3 = var_6;
            var_2 = var_5;
        }
    }

    if ( isdefined( var_2 ) )
    {
        var_1 = choppersupport_findtargetstruct( var_2.script_linkto, var_0 );
        self.currentpatrolstruct = var_2;
    }

    return var_1;
}

choppersupport_canseeenemy( var_0 )
{
    var_1 = 0;
    var_2 = scripts\engine\trace::create_contents( 0, 1, 0, 1, 1, 0 );
    var_3 = [ var_0 gettagorigin( "_encstr_87DA078B11C012A35F" ), var_0 gettagorigin( "_encstr_8BE10B4DF5DA2C5A9B39B7EDE8" ), var_0 gettagorigin( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" ) ];

    for ( var_4 = 0; var_4 < var_3.size; var_4++ )
    {
        if ( !scripts\engine\trace::ray_trace_passed( self.origin, var_3[var_4], self, var_2 ) )
            continue;

        var_1 = 1;
        break;
    }

    return var_1;
}

choppersupport_movetolocation( var_0, var_1 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_ABBD09A7AB72DE2819ED91" );
    var_2 = undefined;
    var_3 = var_0;

    if ( !isvector( var_0 ) )
        var_3 = var_0.origin;

    var_4 = [ self, self.frontturret, self.rearturret ];

    for (;;)
    {
        var_5 = self.origin;
        var_6 = var_3 * ( 1, 1, 0 ) + ( 0, 0, self.origin[2] );
        var_7 = scripts\engine\trace::sphere_trace( var_5, var_6, 256, var_4 );
        var_8 = 0;
        var_9 = var_3[0];
        var_10 = var_3[1];

        if ( isdefined( var_7 ) )
        {
            if ( var_7["_encstr_871C08D169E3584B33BA"] != "_encstr_B94B0D11A9A3180B73FA4E506233CD" )
            {
                var_9 = var_7["_encstr_B7260923C89E8F3378E72E"][0];
                var_10 = var_7["_encstr_B7260923C89E8F3378E72E"][1];
                var_8 = 1;
            }
        }

        if ( istrue( self.evasivemaneuvers ) )
        {
            var_11 = var_9 + randomintrange( -500, 500 );
            var_12 = var_10 + randomintrange( -500, 500 );
            var_13 = getcorrectheight( var_11, var_12, 350 );
            var_2 = ( var_11, var_12, var_13 );
        }
        else
        {
            var_13 = getcorrectheight( var_9, var_10, 20 );
            var_2 = ( var_9, var_10, var_13 );
        }

        var_14 = 0;

        if ( istrue( var_1 ) && !istrue( var_8 ) )
            var_14 = var_1;

        self setvehgoalpos( var_2, var_14 );
        scripts\engine\utility::_id_143A5( "_encstr_A4D10A68F227A6614FFF4B59", "_encstr_BAED1828AF5F18EDD97F24A7D2921541BF67C8C037E5B3A373E2" );

        if ( !istrue( var_8 ) )
            break;
    }
}

debugtimedelta( var_0, var_1 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_ABBD09A7AB72DE2819ED91" );
    var_2 = undefined;
    var_3 = var_0;

    if ( !isvector( var_0 ) )
        var_3 = var_0.origin;

    if ( getdvarint( "_encstr_B95C24B9B19CFA360DDEE01C9539BEE6571CC17B4E8EAFAEE6ACFA5B4B9BFAB91C85B1B4739D" ) > 0 )
        var_3 = going_to( var_3 );

    var_4 = [ self, self.frontturret, self.rearturret ];

    for (;;)
    {
        var_5 = self.origin;
        var_6 = var_3;

        if ( istrue( self.chopper_boss_explosion ) && isdefined( self.intro_driver_logic ) )
            break;
        else
        {
            var_7 = 20;
            var_8 = scripts\engine\utility::ter_op( istrue( self.evasivemaneuvers ), 350, var_7 );
            var_9 = getcorrectheight( var_3[0], var_3[1], var_8 );
            var_6 = ( var_6[0], var_6[1], var_9 );
            var_10 = 512;
            var_11 = scripts\engine\trace::sphere_trace( var_5, var_6, var_10, var_4 );
            var_12 = 0;
            var_13 = var_6[0];
            var_14 = var_6[1];
            var_15 = var_6[2];

            if ( isdefined( var_11 ) )
            {
                if ( var_11["_encstr_871C08D169E3584B33BA"] != "_encstr_B94B0D11A9A3180B73FA4E506233CD" )
                {
                    var_13 = var_11["_encstr_B7260923C89E8F3378E72E"][0];
                    var_14 = var_11["_encstr_B7260923C89E8F3378E72E"][1];
                    var_15 = getcorrectheight( var_13, var_14, var_8 );
                    var_12 = 1;
                }
            }

            if ( istrue( self.evasivemaneuvers ) )
            {
                var_13 = var_13 + randomintrange( -500, 500 );
                var_14 = var_14 + randomintrange( -500, 500 );
                var_15 = getcorrectheight( var_13, var_14, var_8 );
            }

            var_16 = 0;

            if ( istrue( var_1 ) && !istrue( var_12 ) )
                var_16 = var_1;

            var_2 = ( var_13, var_14, var_15 );
            self setvehgoalpos( var_2, var_16 );
            scripts\engine\utility::_id_143A5( "_encstr_A4D10A68F227A6614FFF4B59", "_encstr_BAED1828AF5F18EDD97F24A7D2921541BF67C8C037E5B3A373E2" );

            if ( !istrue( var_12 ) )
                break;
        }
    }
}

going_to( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_ABBD09A7AB72DE2819ED91" );

    if ( !isdefined( level._id_119E7 ) || level._id_119E7.size == 0 )
        return var_0;

    var_1 = 0;
    var_2 = var_0[2];
    var_3 = getdvarfloat( "_encstr_954A2060CA62BF69AB7F2F274DFBD6AF0B63F0F8B3BB07604796A09E30DF194335BA", 1500 );

    for ( var_4 = 0; !var_4 && var_1 < 360; var_0 = ( var_0[0], var_0[1], var_2 ) )
    {
        for ( var_5 = 0; var_5 < level._id_119E7.size; var_5++ )
        {
            if ( self == level._id_119E7[var_5] )
                continue;

            var_4 = distance2d( var_0, level._id_119E7[var_5].pathgoal ) >= var_3;

            if ( !var_4 )
                break;
        }

        if ( var_4 )
            return var_0;

        var_1 = var_1 + 10;
        var_0 = rotatepointaroundvector( self._id_1220D, var_0, var_1 );
    }

    return var_0;
}

choppersupport_leave()
{
    self endon( "_encstr_A3750609A5E61883" );
    self playsoundonmovingent( "_encstr_8724195B37BE8DA1BD078359E4D7E6EA3883DBC9D1EBC6B2B0B359" );
    self setmaxpitchroll( 0, 0 );
    self notify( "_encstr_982D088DCA2CD95ADCB3" );
    self.isleaving = 1;
    self clearlookatent();
    var_0 = self.origin + anglestoforward( ( 0, randomint( 360 ), 0 ) ) * 500;
    var_0 = var_0 + ( 0, 0, 1000 );
    self setvehgoalpos( var_0, 1 );
    self setneargoalnotifydist( 100 );
    self waittill( "_encstr_A4D10A68F227A6614FFF4B59" );
    var_1 = getpathend();
    self setmaxpitchroll( 15, 15 );
    self vehicle_setspeed( self.speed, self.accel );
    self setvehgoalpos( var_1, 1 );
    self waittill( "_encstr_AA7205F03A9609" );
    self stoploopsound();
    self notify( "_encstr_88CF14D834ED071C569C35BA0707BD39D1EB76EDCD59" );
    thread choppersupport_cleanup();
}

choppersupport_cleanup( var_0 )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AAB0079B102F47FF38", "_encstr_811B1068E0F8A86BFF803D6F717F9B0802F0" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AAB0079B102F47FF38", "_encstr_811B1068E0F8A86BFF803D6F717F9B0802F0" ) ]]( "_encstr_B9901ADAA5B1D8DCD14EB285AD802BB932958C08A510530B36ADC2B1", self.owner );

    if ( isdefined( self.frontturret ) )
    {
        self.frontturret setentityowner( undefined );
        self.frontturret.groundtargetent delete();
        self.frontturret delete();
    }

    if ( isdefined( self.rearturret ) )
    {
        self.rearturret setentityowner( undefined );
        self.rearturret.groundtargetent delete();
        self.rearturret delete();
    }

    if ( isdefined( self.killcament ) )
        self.killcament delete();

    if ( isdefined( self.has_ammo_drain_passive ) )
        self [[ self.has_ammo_drain_passive ]]();

    if ( isdefined( self.streakinfo ) )
        self.streakinfo.onspray = istrue( var_0 );

    if ( !istrue( self._id_12AA4 ) )
    {
        if ( isdefined( self.streakinfo ) )
            self.owner scripts\cp_mp\utility\killstreak_utility::_id_12AA7( self.streakinfo );
    }

    if ( isdefined( level.choppersupports ) )
        level.choppersupports = scripts\engine\utility::array_remove( level.choppersupports, self );

    scripts\cp_mp\vehicles\vehicle_tracking::_deletevehicle( self );
}

choppersupport_watchlifetime()
{
    self endon( "_encstr_A3750609A5E61883" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( self.lifetime );
    thread choppersupport_leave();
}

choppersupport_watchgameendleave()
{
    if ( isdefined( self.owner ) )
        self.owner endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_ABBD09A7AB72DE2819ED91" );
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self._id_12AA4 = 1;

    if ( isdefined( self.streakinfo ) )
        self.owner scripts\cp_mp\utility\killstreak_utility::_id_12AA7( self.streakinfo );

    thread choppersupport_leave();
}

grab_players_inside()
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_ABBD09A7AB72DE2819ED91" );

    if ( !scripts\cp_mp\utility\game_utility::update_ai_volumes() )
        return;

    for (;;)
    {
        if ( istrue( self.spawn_lbravo ) )
        {
            self.frontturret.turreton = 0;
            self.rearturret.turreton = 0;
            var_0 = 8000;

            for (;;)
            {
                if ( distance2dsquared( self.origin, self.pathgoal ) <= var_0 * var_0 )
                {
                    self.spawn_lbravo = undefined;
                    self.frontturret.turreton = 1;
                    self.rearturret.turreton = 1;
                    break;
                }

                waitframe();
            }
        }

        waitframe();
    }
}

choppersupport_gettargets( var_0, var_1, var_2, var_3 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    var_4 = [];
    var_5 = level.players;

    if ( scripts\cp_mp\utility\game_utility::islargemap() )
    {
        var_6 = 4500;

        if ( isdefined( var_1 ) )
            var_6 = var_1;

        var_5 = scripts\common\utility::playersinsphere( self.origin, var_6 );
    }

    for ( var_7 = 0; var_7 < var_5.size; var_7++ )
    {
        var_8 = var_5[var_7];
        [var_10, var_11, var_12] = choppersupport_istarget( var_0, var_8, var_2, var_3 );

        if ( istrue( var_10 ) )
        {
            var_13 = spawnstruct();
            var_13.player = var_8;
            var_13._id_12FA2 = var_11;
            var_13._id_13A93 = var_12;
            var_4[var_4.size] = var_13;
        }
        else
            continue;

        wait 0.05;
    }

    return var_4;
}

choppersupport_istarget( var_0, var_1, var_2, var_3 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );

    if ( isdefined( self.va_standard_spawnpoint_valid ) && ![[ self.va_standard_spawnpoint_valid ]]( var_1 ) )
        return [ 0, 0, 0 ];

    if ( !goliath_init( var_1 ) )
        return [ 0, 0, 0 ];

    if ( isdefined( self.owner ) && var_1 == self.owner )
        return [ 0, 0, 0 ];

    if ( !isdefined( var_1.pers["_encstr_89EF05D46BA8FD"] ) )
        return [ 0, 0, 0 ];

    if ( level.teambased && var_1.pers["_encstr_89EF05D46BA8FD"] == self.team )
        return [ 0, 0, 0 ];

    if ( var_1.pers["_encstr_89EF05D46BA8FD"] == "_encstr_A68C0A5803A5D151A2B310A6" )
        return [ 0, 0, 0 ];

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B40D05E05627D6", "_encstr_80C90886B0370A95E4D6" ) )
    {
        if ( var_1 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B40D05E05627D6", "_encstr_80C90886B0370A95E4D6" ) ]]( "_encstr_BC8613CD83AC8DA5161B47CBBE4CD84B3732B2CBAC" ) )
            return [ 0, 0, 0 ];
    }

    if ( istrue( var_1.inlaststand ) )
        return [ 0, 0, 0 ];

    if ( scripts\cp_mp\parachute::isparachutegametype() && ( var_1 isparachuting() || var_1 isskydiving() ) )
        return [ 0, 0, 0 ];

    var_5 = 0;

    if ( istrue( var_2 ) )
    {
        if ( distance2dsquared( self.origin, var_1.origin ) > 20250000 )
        {
            if ( distance2dsquared( self.origin, var_1.origin ) > 36000000 )
                return [ 0, 0, 0 ];

            var_5 = 1;
        }
    }

    var_6 = scripts\engine\trace::create_contents( 0, 1, 0, 1, 0, 1, 0, 1, 1 );
    var_7 = [ var_0 ];
    var_8 = 0;

    if ( istrue( var_3 ) )
    {
        var_8 = var_1 scripts\cp_mp\utility\player_utility::isinvehicle();

        if ( istrue( var_8 ) )
        {
            var_9 = var_1 scripts\cp_mp\utility\player_utility::getvehicle();
            var_7[var_7.size] = var_9;
            var_10 = var_9 getlinkedchildren();

            if ( isdefined( var_10 ) && var_10.size > 0 )
                var_7 = scripts\engine\utility::array_combine( var_7, var_10 );
        }
    }

    var_11 = scripts\engine\trace::ray_trace_passed( var_0 gettagorigin( "_encstr_A1E80BC072BFD721F70A4635FC" ), var_1 gettagorigin( "_encstr_87DA078B11C012A35F" ), var_7, var_6 );

    if ( !istrue( var_11 ) )
        return [ 0, 0, 0 ];

    return [ 1, var_5, var_8 ];
}

goliath_init( var_0 )
{
    return isdefined( var_0 ) && var_0 scripts\cp_mp\utility\player_utility::_isalive() && var_0.sessionstate == "_encstr_8F7508BB18675378EBC7";
}

choppersupport_getbesttarget( var_0, var_1 )
{
    var_2 = undefined;
    var_3 = undefined;
    var_4 = undefined;
    var_5 = undefined;

    foreach ( var_7 in var_1 )
    {
        if ( !goliath_init( var_7.player ) )
            continue;

        if ( choppersupport_isactivetarget( var_7.player ) && !istrue( var_7._id_13A93 ) )
            continue;

        var_8 = 0;
        var_9 = 0;
        var_10 = abs( vectortoangles( var_7.player.origin - self.origin )[1] );
        var_11 = abs( self gettagangles( "_encstr_A94F0AD158D9BECCD80BE6A1" )[1] );
        var_10 = abs( var_10 - var_11 );
        var_12 = var_7.player getweaponslistitems();

        foreach ( var_14 in var_12 )
        {
            var_15 = weaponclass( var_14 );

            if ( var_15 == "_encstr_98080F93DBB1B556D11B85ABB936D059E4" )
                var_10 = var_10 - 40;
        }

        if ( istrue( var_7._id_12FA2 ) )
        {
            var_8 = 1;
            var_10 = var_10 + 40;
        }

        if ( istrue( var_7._id_13A93 ) )
        {
            var_9 = 1;
            var_10 = var_10 + 20;
        }

        if ( !isdefined( var_2 ) || var_2 > var_10 )
        {
            var_2 = var_10;
            var_3 = var_7.player;
            var_5 = var_9;
            var_4 = var_8;
        }
    }

    return [ var_3, var_4, var_5 ];
}

getcorrectheight( var_0, var_1, var_2 )
{
    var_3 = self.heightoffset[2];
    var_4 = tracegroundpoint( var_0, var_1 );
    var_5 = var_4 + var_3;
    var_5 = var_5 + randomint( var_2 );
    return var_5;
}

choppersupport_watchdestoyed()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_88CF14D834ED071C569C35BA0707BD39D1EB76EDCD59" );
    var_0 = self.owner;
    self waittill( "_encstr_A3750609A5E61883" );

    if ( !isdefined( self ) )
        return;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_A31813405B47D363452BB9AD256E70B48712FB0832" ) )
    {
        if ( ![[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_A31813405B47D363452BB9AD256E70B48712FB0832" ) ]]( self.killedbyweapon ) )
            choppersupport_crash( 100 );
    }

    choppersupport_explode();
}

choppersupport_explode()
{
    self notify( "_encstr_AB0808DFB97F822F1899" );
    self radiusdamage( self.origin, 1000, 200, 200, self.owner, "_encstr_A45C0E4B9FDF3165A3B93C4491BFA4A9", "_encstr_A1BF1ABFE8D2D9CBDB2E2098B3A358B74DDCC8A337103A8FDC012777" );
    self setscriptablepartstate( "_encstr_AB0808DFB97F822F1899", "_encstr_9707035F3B", 0 );

    if ( isdefined( self.intermissionspawntime ) )
        [[ self.intermissionspawntime ]]();

    if ( isdefined( self.lootfunc ) )
        self [[ self.lootfunc ]]();

    wait 0.35;
    choppersupport_cleanup( 1 );
}

choppersupport_crash( var_0 )
{
    var_1 = 0;
    self endon( "_encstr_AB0808DFB97F822F1899" );
    self setscriptablepartstate( "_encstr_8B9E06135641A77C", "_encstr_9707035F3B", 0 );

    if ( isdefined( self.killcament ) )
    {
        self.killcament unlink();
        self.killcament.origin = self.origin + ( 0, 0, 100 );
    }

    self clearlookatent();
    self notify( "_encstr_ABBD09A7AB72DE2819ED91" );
    self.iscrashing = 1;
    self vehicle_setspeed( var_0, 20, 20 );
    self setneargoalnotifydist( 100 );
    var_2 = undefined;

    if ( istrue( self.chopper_boss_explosion ) && isdefined( self.interaction_is_floor_is_lava_client ) )
    {
        self setneargoalnotifydist( 300 );
        var_1 = 1;
        var_2 = [[ self.interaction_is_floor_is_lava_client ]]();
    }
    else
        var_2 = choppersupport_findcrashposition( 3500, 500, 1000 );

    if ( !isdefined( var_2 ) )
        return;

    if ( istrue( level._id_14088 ) && isscriptabledefined() )
    {
        var_3 = getclosestpointonnavmesh( var_2 );
        var_2 = goto_goal_and_snipe( var_3 + ( 0, 0, 1500 ), var_3 );
    }

    if ( isdefined( self.streakinfo ) )
        scripts\cp_mp\utility\killstreak_utility::playkillstreakoperatordialog( "_encstr_A21016F3BB604B9A4BE8815BC8B952FF7B1D476BCEC91FA4", 1 );

    self setvehgoalpos( var_2, var_1 );
    thread choppersupport_spinout( var_0 );
    self vehicle_turnengineoff();
    self waittill( "_encstr_A4D10A68F227A6614FFF4B59" );

    if ( isdefined( self.streakinfo ) )
        scripts\cp_mp\utility\dialog_utility::playoperatorstaticinterrupt();
}

choppersupport_findcrashposition( var_0, var_1, var_2 )
{
    var_3 = self.origin;
    var_4 = self.infil_complete;
    var_5 = undefined;
    var_6 = anglestoforward( self.angles );
    var_7 = anglestoright( self.angles );
    var_8 = var_3 + var_6 * var_0 - ( 0, 0, var_4 );

    if ( scripts\engine\trace::ray_trace_passed( var_3, var_8, self ) )
    {
        var_5 = var_8;
        return var_5;
    }

    var_8 = var_3 - var_6 * var_0 - ( 0, 0, var_4 );

    if ( scripts\engine\trace::ray_trace_passed( var_3, var_8, self ) )
    {
        var_5 = var_8;
        return var_5;
    }

    var_8 = var_3 + var_7 * var_0 - ( 0, 0, var_4 );

    if ( scripts\engine\trace::ray_trace_passed( var_3, var_8, self ) )
    {
        var_5 = var_8;
        return var_5;
    }

    var_8 = var_3 - var_7 * var_0 - ( 0, 0, var_4 );

    if ( scripts\engine\trace::ray_trace_passed( var_3, var_8, self ) )
    {
        var_5 = var_8;
        return var_5;
    }

    var_8 = var_3 + 0.707 * var_0 * ( var_6 + var_7 ) - ( 0, 0, var_4 );

    if ( scripts\engine\trace::ray_trace_passed( var_3, var_8, self ) )
    {
        var_5 = var_8;
        return var_5;
    }

    var_8 = var_3 + 0.707 * var_0 * ( var_6 - var_7 ) - ( 0, 0, var_4 );

    if ( scripts\engine\trace::ray_trace_passed( var_3, var_8, self ) )
    {
        var_5 = var_8;
        return var_5;
    }

    var_8 = var_3 + 0.707 * var_0 * ( var_7 - var_6 ) - ( 0, 0, var_4 );
    var_9 = scripts\engine\trace::ray_trace( var_3, var_8, self );

    if ( scripts\engine\trace::ray_trace_passed( var_3, var_8, self ) )
    {
        var_5 = var_8;
        return var_5;
    }

    var_8 = var_3 + 0.707 * var_0 * ( -1 * var_6 - var_7 ) - ( 0, 0, var_4 );

    if ( scripts\engine\trace::ray_trace_passed( var_3, var_8, self ) )
    {
        var_5 = var_8;
        return var_5;
    }

    return var_5;
}

goto_goal_and_snipe( var_0, var_1 )
{
    var_2 = var_1;
    var_3 = 335;
    var_4 = [ self, self.frontturret, self.rearturret ];
    var_5 = scripts\engine\trace::sphere_trace( var_0, var_1, var_3, var_4 );

    if ( isdefined( var_5 ) && var_5["_encstr_871C08D169E3584B33BA"] != "_encstr_B94B0D11A9A3180B73FA4E506233CD" )
        var_2 = var_5["_encstr_B7260923C89E8F3378E72E"];

    return var_2;
}

choppersupport_spinout( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self setyawspeed( var_0, 50, 50, 0.5 );

    while ( isdefined( self ) )
    {
        self settargetyaw( self.angles[1] + var_0 * 0.4 );
        wait 0.5;
    }
}

tracenewpoint( var_0, var_1, var_2 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_B1691086B150AD42F61B7B271917BBF7A8FB" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self endon( "_encstr_8C7909C3C9D07BBD881565" );
    var_3 = scripts\engine\trace::sphere_trace( self.origin, ( var_0, var_1, var_2 ), 256, self, undefined, 1 );

    if ( var_3["_encstr_AACA0C1F789BBECA2755F3A8C7C3"] != "_encstr_AD0C0E0BCD3BEB739BE00AA1389FADBF" )
        return 0;

    var_4 = ( var_0, var_1, var_2 );
    return var_4;
}

tracegroundpoint( var_0, var_1 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_B1691086B150AD42F61B7B271917BBF7A8FB" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    var_2 = -99999;
    var_3 = self.origin[2] + 2000;
    var_4 = level.averagealliesz;
    var_5 = [ self ];

    if ( isdefined( self.dropcrates ) )
    {
        foreach ( var_7 in self.dropcrates )
            var_5[var_5.size] = var_7;
    }

    var_9 = scripts\engine\trace::sphere_trace( ( var_0, var_1, var_3 ), ( var_0, var_1, var_2 ), 800, var_5, undefined, 1 );

    if ( var_9["_encstr_B7260923C89E8F3378E72E"][2] < var_4 )
        var_10 = var_4;
    else
        var_10 = var_9["_encstr_B7260923C89E8F3378E72E"][2];

    return var_10;
}

beginevasivemaneuvers()
{
    self endon( "_encstr_A3750609A5E61883" );
    self notify( "_encstr_BAED1828AF5F18EDD97F24A7D2921541BF67C8C037E5B3A373E2" );
    self endon( "_encstr_BAED1828AF5F18EDD97F24A7D2921541BF67C8C037E5B3A373E2" );
    self.evasivemaneuvers = 1;
    var_0 = scripts\engine\utility::_id_143B9( 3.0, "_encstr_A3750609A5E61883" );

    if ( var_0 == "_encstr_945408D1B4B556B7BA3A" )
        self.evasivemaneuvers = 0;
}

getcorrectheightescort( var_0, var_1, var_2, var_3 )
{
    var_4 = 200;

    if ( isdefined( var_3 ) )
        var_4 = var_3;

    var_5 = tracegroundpoint( var_0, var_1 );
    var_6 = var_5 + var_4;
    var_6 = var_6 + randomint( var_2 );
    return var_6;
}

choppersupport_modifydamage( var_0 )
{
    var_1 = var_0.attacker;
    var_2 = var_0.objweapon;
    var_3 = var_0.meansofdeath;
    var_4 = var_0.damage;
    var_5 = var_0.idflags;
    self.currenthealth = self.health - var_4;

    if ( self.currenthealth <= 1500 && self.currentdamagestate == 0 )
    {
        self.currentdamagestate = 1;
        self setscriptablepartstate( "_encstr_B1291298F623F2EB460BD60BEC59FAD85A76343A", "_encstr_9707035F3B" );

        if ( isdefined( self.streakinfo ) )
            scripts\cp_mp\utility\killstreak_utility::playkillstreakoperatordialog( "_encstr_80031D63D1781ACBBD5BE913830F8395C88127E44B90A403487102FA69ECEF" );
    }
    else if ( self.currenthealth <= 1000 && self.currentdamagestate == 1 )
    {
        self.currentdamagestate = 2;
        self setscriptablepartstate( "_encstr_97BC13D218214F716990429AB8B3B9D7F975515DA1", "_encstr_9707035F3B" );

        if ( isdefined( self.streakinfo ) )
            scripts\cp_mp\utility\killstreak_utility::playkillstreakoperatordialog( "_encstr_A6041B87E3B27FC835CAB60B33088338BB7B07134FAA503049657981DF" );
    }
    else if ( self.currenthealth <= 500 && self.currentdamagestate == 2 )
    {
        self.currentdamagestate = 3;
        self setscriptablepartstate( "_encstr_A34112C47B32BCEB32B06B58EC56EB43CA85CE5E", "_encstr_9707035F3B" );

        if ( isdefined( self.streakinfo ) )
            scripts\cp_mp\utility\killstreak_utility::playkillstreakoperatordialog( "_encstr_AAE61D5B03D8F332E3B0E923A0E1EA5793F59FD82DA1A338EF1832DAF817E7" );
    }

    return 1;
}

choppersupport_handledeathdamage( var_0 )
{
    self.killedbyweapon = var_0.objweapon;

    if ( istrue( self.usefuncoverride ) && isdefined( level._id_13457 ) )
    {
        if ( isdefined( var_0.objweapon ) )
            [[ level._id_13457._id_1346A ]]( var_0.objweapon.basename );
        else
            [[ level._id_13457._id_1346A ]]( "_encstr_AABA05236DC831" );
    }

    return 1;
}

choppersipport_randommovement()
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_B1691086B150AD42F61B7B271917BBF7A8FB" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );
    self.lastaction = "_encstr_B4DD0FEAB1521D50BA0508C3C58A90D8D3";
    var_0 = self.defendloc;
    var_1 = getrandompoint( self.origin );
    self setvehgoalpos( var_1, 1 );
    thread scripts\cp_mp\utility\debug_utility::drawline( self.origin, var_1, 5, ( 1, 0, 1 ) );
    self waittill( "_encstr_AA7205F03A9609" );
}

getrandompoint( var_0 )
{
    self clearlookatent();

    if ( distance2dsquared( self.origin, self.owner.origin ) > 4194304 )
    {
        var_1 = self.owner.origin[0];
        var_2 = self.owner.origin[1];
        var_3 = getcorrectheight( var_1, var_2, 20 );
        var_4 = ( var_1, var_2, var_3 );
        self setlookatent( self.owner );
        return var_4;
    }
    else
    {
        var_5 = self.angles[1];
        var_6 = int( var_5 - 60 );
        var_7 = int( var_5 + 60 );
        var_8 = randomintrange( var_6, var_7 );
        var_9 = ( 0, var_8, 0 );
        var_10 = self.origin + anglestoforward( var_9 ) * randomintrange( 400, 800 );
        var_11 = var_10[0];
        var_12 = var_10[1];
        var_13 = getcorrectheight( var_11, var_12, 20 );
        var_14 = tracenewpoint( var_11, var_12, var_13 );

        if ( var_14 != 0 )
            return var_14;

        var_11 = randomfloatrange( var_0[0] - 1200, var_0[0] + 1200 );
        var_12 = randomfloatrange( var_0[1] - 1200, var_0[1] + 1200 );
        var_15 = ( var_11, var_12, var_13 );
        return var_15;
    }
}

getnewpoint( var_0, var_1 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_B1691086B150AD42F61B7B271917BBF7A8FB" );
    self endon( "_encstr_982D088DCA2CD95ADCB3" );

    if ( !isdefined( var_1 ) )
        return;

    var_2 = [];

    foreach ( var_4 in level.players )
    {
        if ( var_4 == self )
            continue;

        if ( !level.teambased || var_4.team != self.team )
            var_2[var_2.size] = var_4.origin;
    }

    if ( var_2.size > 0 )
    {
        var_6 = averagepoint( var_2 );
        var_7 = var_6[0];
        var_8 = var_6[1];
    }
    else
    {
        var_9 = level.mapcenter;
        var_10 = level.mapsize / 4;
        var_7 = randomfloatrange( var_9[0] - var_10, var_9[0] + var_10 );
        var_8 = randomfloatrange( var_9[1] - var_10, var_9[1] + var_10 );
    }

    var_11 = getcorrectheight( var_7, var_8, 20 );
    var_12 = tracenewpoint( var_7, var_8, var_11 );

    if ( var_12 != 0 )
        return var_12;

    var_7 = randomfloatrange( var_0[0] - 1200, var_0[0] + 1200 );
    var_8 = randomfloatrange( var_0[1] - 1200, var_0[1] + 1200 );
    var_11 = getcorrectheight( var_7, var_8, 20 );
    var_13 = ( var_7, var_8, var_11 );
    return var_13;
}

getpathstart( var_0 )
{
    var_1 = 100;
    var_2 = 15000;
    var_3 = randomfloat( 360 );
    var_4 = ( 0, var_3, 0 );
    var_5 = var_0 + anglestoforward( var_4 ) * ( -1 * var_2 );
    var_5 = var_5 + ( ( randomfloat( 2 ) - 1 ) * var_1, ( randomfloat( 2 ) - 1 ) * var_1, 0 );
    return var_5;
}

getpathend()
{
    var_0 = 150;
    var_1 = 15000;
    var_2 = self.angles[1];
    var_3 = ( 0, var_2, 0 );
    var_4 = self.origin + anglestoforward( var_3 ) * var_1;
    return var_4;
}

choppersupport_findtargetstruct( var_0, var_1 )
{
    var_2 = undefined;

    foreach ( var_4 in var_1 )
    {
        if ( var_4.script_linkname == var_0 )
        {
            var_2 = var_4;
            break;
        }
    }

    return var_2;
}

goodjobplayer()
{
    var_0 = 0;

    switch ( level.mapname )
    {
        case "_encstr_B1110BDDD007984FF3EB671D71":
        case "_encstr_8C200C3DB1A98AFBEB6BBA22B0BD":
            var_0 = 1;
            break;
    }

    return var_0;
}
