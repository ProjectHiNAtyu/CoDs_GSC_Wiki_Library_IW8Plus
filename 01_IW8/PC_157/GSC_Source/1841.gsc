// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.equipment = spawnstruct();
    inititems();
    loadtable();
    timeoflastexecute();
    scripts\mp\utility\spawn_event_aggregator::registeronplayerspawncallback( ::equiponplayerspawned );
}

inititems()
{
    level.equipment.callbacks = [];
    var_0 = level.equipment;
    scripts\mp\equipment_interact::equipmentinteract_init();

    if ( !istrue( game["_encstr_87010E111E3823354DC251C560F3ED0A"] ) )
    {
        scripts\mp\perks\headgear::init();
        scripts\mp\equipment\tactical_cover::tac_cover_init();
        scripts\mp\equipment\trophy_system::trophy_init();
        scripts\mp\equipment\decoy_grenade::decoy_init();
        _donewithcorpse::vehicle_compass_setteamfriendlyto();
        scripts\mp\equipment\at_mine::at_mine_init();
        scripts\mp\equipment\tac_insert::tacinsert_init();
    }

    scripts\mp\equipment\claymore::claymore_init();
    scripts\mp\equipment\molotov::molotov_init();
    scripts\mp\equipment\weapon_drop::weapondrop_init();
    scripts\cp_mp\equipment\throwing_knife::throwing_knife_init();
    _encstr_9CB1296EC6C94BC1A36EE55BC179B28BBAD2E0B5AC37E8CBDCEAADC42B9CCDFA9D4ECA9B851956E2D9B936::init();
    var_0.callbacks["_encstr_97960D838F1BFBD00744C9E02DE528"]["_encstr_986F074AC837EC6B01"] = scripts\mp\perks\headgear::runheadgear;
    var_0.callbacks["_encstr_97960D838F1BFBD00744C9E02DE528"]["_encstr_97CE07B73745B0B52B"] = scripts\mp\perks\headgear::removeheadgear;
    var_0.callbacks["_encstr_930F1135B3F80C9BF0492A53D1B01785E065AD"]["_encstr_BAE208BD37C8A59CAC46"] = scripts\mp\equipment\adrenaline::onequipmentfired;
    var_0.callbacks["_encstr_930F1135B3F80C9BF0492A53D1B01785E065AD"]["_encstr_97CE07B73745B0B52B"] = scripts\mp\equipment\adrenaline::onequipmenttaken;
    var_0.callbacks["_encstr_97A0132BC5ABA50ED79BAC39ABD6AF760B23D92B47"]["_encstr_BAE208BD37C8A59CAC46"] = _findnewlocaleplacement::_id_13057;
    var_0.callbacks["_encstr_97A0132BC5ABA50ED79BAC39ABD6AF760B23D92B47"]["_encstr_97CE07B73745B0B52B"] = _findnewlocaleplacement::_id_13058;
    var_0.callbacks["_encstr_813D09FB4173601F5F2A93"]["_encstr_986F074AC837EC6B01"] = scripts\mp\equipment\c4::c4_set;
    var_0.callbacks["_encstr_87870DB2E25D2DE07D1D39B7C11ACB"]["_encstr_986F074AC837EC6B01"] = scripts\mp\equipment\trophy_system::trophy_set;
    var_0.callbacks["_encstr_87870DB2E25D2DE07D1D39B7C11ACB"]["_encstr_97CE07B73745B0B52B"] = scripts\mp\equipment\trophy_system::trophy_unset;
    var_0.callbacks["_encstr_801C14955CEA960EFA32568DDE9BBEDC1D853A5AF673"]["_encstr_97CE07B73745B0B52B"] = _debug_rooftop_heli_start::jugg_go_to_node_callback;
    var_0.callbacks["_encstr_801C14955CEA960EFA32568DDE9BBEDC1D853A5AF673"]["_encstr_986F074AC837EC6B01"] = _debug_rooftop_heli_start::jugg_getminigunweapon;
    var_0.callbacks["_encstr_9E2115CAB8BAB4077D8E0D93BDBBA5DCECD7B6CD4B99B2"]["_encstr_986F074AC837EC6B01"] = scripts\cp_mp\equipment\throwing_knife::throwing_knife_ongive;
    var_0.callbacks["_encstr_9E2115CAB8BAB4077D8E0D93BDBBA5DCECD7B6CD4B99B2"]["_encstr_97CE07B73745B0B52B"] = scripts\cp_mp\equipment\throwing_knife::throwing_knife_ontake;
    var_0.callbacks["_encstr_811F1A225BCDDF627961F8EA7F10EC7B7C365A1A202CA79168A3FAC5"]["_encstr_986F074AC837EC6B01"] = scripts\cp_mp\equipment\throwing_knife::throwing_knife_ongive;
    var_0.callbacks["_encstr_811F1A225BCDDF627961F8EA7F10EC7B7C365A1A202CA79168A3FAC5"]["_encstr_97CE07B73745B0B52B"] = scripts\cp_mp\equipment\throwing_knife::throwing_knife_ontake;
    var_0.callbacks["_encstr_A6BF1E6983C8E727BF8BC83B98832BA2CA21CAD08B2527297584877FD10AE16E"]["_encstr_986F074AC837EC6B01"] = scripts\cp_mp\equipment\throwing_knife::throwing_knife_ongive;
    var_0.callbacks["_encstr_A6BF1E6983C8E727BF8BC83B98832BA2CA21CAD08B2527297584877FD10AE16E"]["_encstr_97CE07B73745B0B52B"] = scripts\cp_mp\equipment\throwing_knife::throwing_knife_ontake;
    var_0.callbacks["_encstr_888E1B324BDDCF728991E8FA4F20FC0B0C266A0AD03CB7E1688511FC71"]["_encstr_986F074AC837EC6B01"] = scripts\cp_mp\equipment\throwing_knife::throwing_knife_ongive;
    var_0.callbacks["_encstr_888E1B324BDDCF728991E8FA4F20FC0B0C266A0AD03CB7E1688511FC71"]["_encstr_97CE07B73745B0B52B"] = scripts\cp_mp\equipment\throwing_knife::throwing_knife_ontake;
    var_0.callbacks["_encstr_95C70E56E2572D83FAB5B7B17B47BD9D"]["_encstr_986F074AC837EC6B01"] = scripts\mp\equipment\molotov::molotov_on_give;
    var_0.callbacks["_encstr_95C70E56E2572D83FAB5B7B17B47BD9D"]["_encstr_97CE07B73745B0B52B"] = scripts\mp\equipment\molotov::molotov_on_take;
    var_0.callbacks["_encstr_AB701059B8AB4B38FAE88536D78DB7ECCAE4"]["_encstr_986F074AC837EC6B01"] = scripts\mp\equipment\tactical_cover::tac_cover_on_give;
    var_0.callbacks["_encstr_AB701059B8AB4B38FAE88536D78DB7ECCAE4"]["_encstr_97CE07B73745B0B52B"] = scripts\mp\equipment\tactical_cover::tac_cover_on_take;
    var_0.callbacks["_encstr_AB701059B8AB4B38FAE88536D78DB7ECCAE4"]["_encstr_BAE208BD37C8A59CAC46"] = scripts\mp\equipment\tactical_cover::tac_cover_on_fired;
    var_0.callbacks["_encstr_807E112733EB73A8A93322B141D446233D8243"]["_encstr_986F074AC837EC6B01"] = scripts\mp\equipment\tac_insert::tacinsert_set;
    var_0.callbacks["_encstr_807E112733EB73A8A93322B141D446233D8243"]["_encstr_97CE07B73745B0B52B"] = scripts\mp\equipment\tac_insert::tacinsert_unset;
    var_0.callbacks["_encstr_BA5B1156C5579607EB3196E6DE6CAE8D2C4EDC"]["_encstr_986F074AC837EC6B01"] = _debug_rooftop_activesat::closeobjectiveiconid;
    var_0.callbacks["_encstr_BA5B1156C5579607EB3196E6DE6CAE8D2C4EDC"]["_encstr_97CE07B73745B0B52B"] = _debug_rooftop_activesat::codeloc;
    var_0.callbacks["_encstr_B84B129FEB68A9BB187F2F6F273CA31D18715767"]["_encstr_A8FE10BDCD0563B02F59274458B558EC2B46"] = scripts\mp\equipment\gas_grenade::gas_onplayerdamaged;
    var_0.callbacks["_encstr_B7170CA597AD402701388597A361"]["_encstr_A8FE10BDCD0563B02F59274458B558EC2B46"] = scripts\mp\equipment\flash_grenade::onplayerdamaged;
    var_0.callbacks["_encstr_A30B11B2680B841B3E7EA7AE06036F4A5B7B8A"]["_encstr_A8FE10BDCD0563B02F59274458B558EC2B46"] = scripts\mp\equipment\concussion_grenade::onplayerdamaged;
    var_0.callbacks["_encstr_B7F90F0AD0B30C93A67D285D1688BF13CB"]["_encstr_A8FE10BDCD0563B02F59274458B558EC2B46"] = scripts\mp\equipment\thermite::thermite_onplayerdamaged;
    var_0.callbacks["_encstr_95C70E56E2572D83FAB5B7B17B47BD9D"]["_encstr_A8FE10BDCD0563B02F59274458B558EC2B46"] = scripts\mp\equipment\molotov::molotov_on_player_damaged;
    var_0.callbacks["_encstr_8F0C16CA191D4402D1F507159597C2A33E921B0D06A87AD2"]["_encstr_A8FE10BDCD0563B02F59274458B558EC2B46"] = _encstr_9CB1296EC6C94BC1A36EE55BC179B28BBAD2E0B5AC37E8CBDCEAADC42B9CCDFA9D4ECA9B851956E2D9B936::_encstr_B284127F1D10BBD4B882FF027EA8E1A2D797DFAB;
    var_0.callbacks["_encstr_806E0E6F1B98592B88E3CB6FD34B128D"]["_encstr_819F0F60A357FBCD5A9A5EC3B6021761A4"] = scripts\mp\equipment\at_mine::at_mine_onownerchanged;
    var_0.callbacks["_encstr_93A70F2BE25DA50ED76CD8C2E56BF639AC"]["_encstr_819F0F60A357FBCD5A9A5EC3B6021761A4"] = scripts\mp\equipment\claymore::claymore_onownerchanged;
    var_0.callbacks["_encstr_813D09FB4173601F5F2A93"]["_encstr_819F0F60A357FBCD5A9A5EC3B6021761A4"] = scripts\mp\equipment\c4::c4_onownerchanged;
    var_0.callbacks["_encstr_8F560D522BBDAF12E9CD4145EB10DA"]["_encstr_819F0F60A357FBCD5A9A5EC3B6021761A4"] = _donewithcorpse::vehicle_compass_updateallvisibilityforplayer;
    var_0.callbacks["_encstr_806E0E6F1B98592B88E3CB6FD34B128D"]["_encstr_986C144AC831EF7F239ECFE13D097330C9C0B23360E3"] = scripts\mp\equipment\at_mine::at_mine_delete;
    var_0.callbacks["_encstr_93A70F2BE25DA50ED76CD8C2E56BF639AC"]["_encstr_986C144AC831EF7F239ECFE13D097330C9C0B23360E3"] = scripts\mp\equipment\claymore::claymore_delete;
    var_0.callbacks["_encstr_87870DB2E25D2DE07D1D39B7C11ACB"]["_encstr_986C144AC831EF7F239ECFE13D097330C9C0B23360E3"] = scripts\mp\equipment\trophy_system::trophy_delete;
    var_0.callbacks["_encstr_813D09FB4173601F5F2A93"]["_encstr_986C144AC831EF7F239ECFE13D097330C9C0B23360E3"] = scripts\mp\equipment\c4::c4_delete;
    var_0.callbacks["_encstr_A95317955C5DD20EBE9BDC85079B1A7BE8EB7627599B581959"]["_encstr_986C144AC831EF7F239ECFE13D097330C9C0B23360E3"] = scripts\mp\equipment\snapshot_grenade::snapshot_grenade_delete;
    thread watchlethaldelay();
    scripts\mp\utility\disconnect_event_aggregator::registerondisconnecteventcallback( ::onownerdisconnect );
}

getcallback( var_0, var_1 )
{
    if ( !isdefined( level.equipment.callbacks[var_0] ) )
        return undefined;

    return level.equipment.callbacks[var_0][var_1];
}

loadtable()
{
    level.equipment.table = [];
    var_0 = 1;

    for (;;)
    {
        var_1 = tablelookupbyrow( "_encstr_AF31117FC3B7C2921B29E0EA7D0E4126CBF643", var_0, 1 );

        if ( !isdefined( var_1 ) || var_1 == "_encstr_A40101" )
            break;

        var_2 = tolower( var_1 );
        var_3 = spawnstruct();
        var_3.ref = var_2;
        var_4 = tablelookupbyrow( "_encstr_AF31117FC3B7C2921B29E0EA7D0E4126CBF643", var_0, 6 );

        if ( var_4 != "_encstr_AABA05236DC831" )
        {
            var_5 = tablelookupbyrow( "_encstr_AF31117FC3B7C2921B29E0EA7D0E4126CBF643", var_0, 19 );
            var_6 = undefined;

            if ( var_5 != "_encstr_A40101" )
            {
                var_7 = getcompleteweaponname( var_4 );

                if ( !nullweapon( var_7 ) )
                    var_6 = [ var_5 ];
            }

            var_3.objweapon = getcompleteweaponname( var_4, var_6 );
        }

        var_3.id = var_0;
        var_3.image = tablelookupbyrow( "_encstr_AF31117FC3B7C2921B29E0EA7D0E4126CBF643", var_0, 4 );
        var_3.defaultslot = scripts\engine\utility::ter_op( tablelookupbyrow( "_encstr_AF31117FC3B7C2921B29E0EA7D0E4126CBF643", var_0, 7 ) == "_encstr_9B4C028A", "_encstr_B98F0AC7D5B99F4DDBA8353B", "_encstr_987F080E394BDAC2E45E" );
        var_3.scavengerammo = int( tablelookupbyrow( "_encstr_AF31117FC3B7C2921B29E0EA7D0E4126CBF643", var_0, 10 ) );
        var_3.ispassive = tolower( tablelookupbyrow( "_encstr_AF31117FC3B7C2921B29E0EA7D0E4126CBF643", var_0, 11 ) ) == "_encstr_87EF0558DBA3CB";
        var_3.usecellspawns = tablelookupbyrow( "_encstr_AF31117FC3B7C2921B29E0EA7D0E4126CBF643", var_0, 8 ) != "_encstr_9C0703B6B7";
        var_8 = tablelookupbyrow( "_encstr_AF31117FC3B7C2921B29E0EA7D0E4126CBF643", var_0, 12 );

        if ( var_8 == "_encstr_AABA05236DC831" )
        {

        }
        else if ( var_8 == "_encstr_A40101" )
        {
            if ( var_4 != "_encstr_AABA05236DC831" )
                var_3.damageweaponnames = [ var_4 ];
        }
        else
        {
            var_9 = [];

            if ( var_4 != "_encstr_AABA05236DC831" )
                var_9[var_9.size] = var_4;

            var_10 = strtok( var_8, "_encstr_884C02C6" );

            foreach ( var_12 in var_10 )
                var_9[var_9.size] = var_12;

            var_3.damageweaponnames = var_9;
        }

        level.equipment.table[var_2] = var_3;
        var_0++;
    }
}

getequipmenttableinfo( var_0 )
{
    return level.equipment.table[var_0];
}

giveequipment( var_0, var_1 )
{
    if ( !isdefined( self.equipment ) )
        self.equipment = [];

    if ( var_0 == "_encstr_AABA05236DC831" )
        return;

    var_2 = getequipmenttableinfo( var_0 );

    if ( var_1 == "_encstr_BEB4068F1B5BA3AB" )
    {
        var_3 = level.br_pickups.br_superreference[level.br_pickups.br_equipnametoscriptable[var_0]];
        var_2.id = scripts\mp\supers::getsuperid( var_3 );
    }

    takeequipment( var_1 );

    if ( isdefined( var_2.objweapon ) )
    {
        self giveweapon( var_2.objweapon );

        if ( is_equipment_slot_allowed( var_1 ) && !var_2.ispassive )
        {
            if ( var_1 == "_encstr_987F080E394BDAC2E45E" )
                self assignweaponoffhandprimary( var_2.objweapon );
            else if ( var_1 == "_encstr_B98F0AC7D5B99F4DDBA8353B" )
                self assignweaponoffhandsecondary( var_2.objweapon );
            else if ( var_1 == "_encstr_BEB4068F1B5BA3AB" )
                self assignweaponoffhandspecial( var_2.objweapon );
        }
    }

    sethudslot( var_1, var_2.id );
    self.equipment[var_1] = var_0;
    var_4 = getcallback( var_0, "_encstr_986F074AC837EC6B01" );

    if ( isdefined( var_4 ) )
        self thread [[ var_4 ]]( var_0, var_1 );

    updateuiammocount( var_1 );
    var_5 = var_0 == "_encstr_9E2115CAB8BAB4077D8E0D93BDBBA5DCECD7B6CD4B99B2" || var_0 == "_encstr_811F1A225BCDDF627961F8EA7F10EC7B7C365A1A202CA79168A3FAC5" || var_0 == "_encstr_A6BF1E6983C8E727BF8BC83B98832BA2CA21CAD08B2527297584877FD10AE16E" || var_0 == "_encstr_888E1B324BDDCF728991E8FA4F20FC0B0C266A0AD03CB7E1688511FC71";

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9DB606854E567385" && var_5 )
        return;

    thread watchlethaldelayplayer( var_0, var_1 );
    return;
}

takeequipment( var_0 )
{
    var_1 = getcurrentequipment( var_0 );

    if ( !isdefined( var_1 ) )
        return;

    var_2 = getequipmenttableinfo( var_1 );

    if ( isdefined( var_2.objweapon ) )
    {
        if ( self hasweapon( var_2.objweapon ) )
        {
            scripts\cp_mp\utility\inventory_utility::_takeweapon( var_2.objweapon );

            if ( var_0 == "_encstr_987F080E394BDAC2E45E" )
                self clearoffhandprimary();
            else if ( var_0 == "_encstr_B98F0AC7D5B99F4DDBA8353B" )
                self clearoffhandsecondary();
        }
    }

    sethudslot( var_0, 0 );
    self.equipment[var_0] = undefined;
    var_3 = getcallback( var_1, "_encstr_97CE07B73745B0B52B" );

    if ( isdefined( var_3 ) )
        self thread [[ var_3 ]]( var_1, var_0 );

    updateuiammocount( var_0 );
    self notify( "_encstr_B41111CA1757D2C1DACADCA3BEA32CD6ACCDEB" + var_1 );
}

equiponplayerdamaged( var_0 )
{
    var_1 = var_0.objweapon.basename;

    foreach ( var_10, var_3 in level.equipment.table )
    {
        var_4 = getcallback( var_10, "_encstr_A8FE10BDCD0563B02F59274458B558EC2B46" );

        if ( isdefined( var_4 ) && isdefined( var_3.damageweaponnames ) )
        {
            foreach ( var_6 in var_3.damageweaponnames )
            {
                if ( var_6 == var_1 )
                {
                    var_7 = gettime();
                    var_8 = [[ var_4 ]]( var_0 );
                    return var_8;
                }
            }
        }
    }
}

ondestroyedbytrophy()
{
    if ( isdefined( self.equipmentref ) )
    {
        var_0 = getcallback( self.equipmentref, "_encstr_986C144AC831EF7F239ECFE13D097330C9C0B23360E3" );

        if ( isdefined( var_0 ) )
        {
            self thread [[ var_0 ]]();
            return 1;
        }
        else if ( scripts\mp\weapons::isplantedequipment( self ) )
        {
            thread scripts\mp\weapons::deleteexplosive();
            return 1;
        }
    }

    return 0;
}

disableslotinternal( var_0 )
{
    if ( var_0 == "_encstr_987F080E394BDAC2E45E" )
        self clearoffhandprimary();
    else if ( var_0 == "_encstr_B98F0AC7D5B99F4DDBA8353B" )
        self clearoffhandsecondary();
    else if ( var_0 == "_encstr_BEB4068F1B5BA3AB" )
        self clearoffhandspecial();
}

enableslotinternal( var_0 )
{
    var_1 = getcurrentequipment( var_0 );

    if ( !isdefined( var_1 ) )
        return;

    var_2 = getequipmenttableinfo( var_1 );

    if ( isdefined( var_2.objweapon ) && !var_2.ispassive && self hasweapon( var_2.objweapon ) )
    {
        if ( var_0 == "_encstr_987F080E394BDAC2E45E" )
            self assignweaponoffhandprimary( var_2.objweapon );
        else if ( var_0 == "_encstr_B98F0AC7D5B99F4DDBA8353B" )
            self assignweaponoffhandsecondary( var_2.objweapon );
        else if ( var_0 == "_encstr_BEB4068F1B5BA3AB" )
            self assignweaponoffhandspecial( var_2.objweapon );
    }
}

allow_equipment( var_0, var_1 )
{
    allow_equipment_slot( "_encstr_987F080E394BDAC2E45E", var_0, var_1 );
    allow_equipment_slot( "_encstr_B98F0AC7D5B99F4DDBA8353B", var_0, var_1 );
}

allow_equipment_slot( var_0, var_1, var_2 )
{
    var_3 = scripts\common\input_allow::allow_input_internal( "_encstr_A95A0B562EAE960ED62BB947FA" + var_0, var_1, var_2 );

    if ( !isdefined( var_3 ) )
        return;

    if ( var_1 )
        enableslotinternal( var_0 );
    else
        disableslotinternal( var_0 );
}

is_equipment_slot_allowed( var_0 )
{
    return scripts\common\input_allow::is_input_allowed_internal( "_encstr_A95A0B562EAE960ED62BB947FA" + var_0 );
}

sethudslot( var_0, var_1 )
{
    if ( var_0 != "_encstr_BEB4068F1B5BA3AB" )
        self setclientomnvar( "_encstr_AB4011BAA5BEB2E25D2D0ED62BDCE87DA532D7" + var_0, var_1 );
    else
        self setclientomnvar( "_encstr_BE5517EA96F5C1CAC9B5BE1C0BD8D6C2D9CAD79BAEE059E4C4", var_1 );
}

getcurrentequipment( var_0 )
{
    if ( !isdefined( self.equipment ) )
        return undefined;

    return self.equipment[var_0];
}

clearallequipment()
{
    if ( !isdefined( self.equipment ) )
        return;

    foreach ( var_2, var_1 in self.equipment )
        takeequipment( var_2 );
}

getequipmentmaxammo( var_0 )
{
    var_1 = getequipmenttableinfo( var_0 );

    if ( !isdefined( var_1 ) )
        return undefined;

    if ( !isdefined( var_1.objweapon ) )
        return 0;

    if ( level.gametype != "_encstr_9507034B25" )
    {
        var_2 = scripts\mp\utility\perk::_hasperk( "_encstr_AB501BB93856B14B0BB18EF2F52B1ED14E16DBCC991A1637230BDADABD" );
        var_3 = weaponmaxammo( var_1.objweapon, var_2 );

        switch ( var_0 )
        {
            case "_encstr_9B8210CA17572D07AF1AC47DB95673B9BD9C":
            case "_encstr_BA5B1156C5579607EB3196E6DE6CAE8D2C4EDC":
            case "_encstr_AB701059B8AB4B38FAE88536D78DB7ECCAE4":
                break;
            default:
                var_3--;
                break;
        }

        var_4 = findequipmentslot( var_0 );

        if ( isdefined( var_4 ) && scripts\mp\utility\perk::_hasperk( "_encstr_81D117CDC159D84B58B1D1F2AFAC1E3A39B0F5465616C8C6BC" ) && var_4 == "_encstr_987F080E394BDAC2E45E" )
            var_3++;
    }
    else
    {
        var_5 = level.br_pickups.br_equipnametoscriptable[var_1.ref];
        var_3 = level.br_pickups.maxcounts[var_5];

        if ( !isdefined( var_3 ) )
            var_3 = 0;

        if ( var_0 == "_encstr_BC6E11CBC753B3884F4E5388F54AC0794ABBB3" )
        {
            if ( scripts\mp\utility\perk::_hasperk( "_encstr_958A1CCD83AC362D85C68EE5D789C9BEB9E89CEDB99D5927D7C2C9DAEDE4" ) )
                var_3 = getdvarint( "_encstr_B7331BB2D7AAD1EE1E962AE53BB0094A638E851008EDBB07229A09BF30", 5 );

            if ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::should_use_velo_forward() )
                var_3 = var_3 + getdvarint( "_encstr_AF2317D3F80509539B60B8AC0723378257D05ADA51E77BAB73", 3 );
        }
    }

    return var_3;
}

getequipmentstartammo( var_0 )
{
    var_1 = getequipmenttableinfo( var_0 );

    if ( !isdefined( var_1 ) )
        return undefined;

    if ( !isdefined( var_1.objweapon ) )
        return 0;

    var_2 = scripts\mp\utility\perk::_hasperk( "_encstr_AB501BB93856B14B0BB18EF2F52B1ED14E16DBCC991A1637230BDADABD" );
    return weaponstartammo( var_1.objweapon, var_2 );
}

getequipmentammo( var_0 )
{
    var_1 = getequipmenttableinfo( var_0 );

    if ( !isdefined( var_1 ) )
        return undefined;

    if ( !isdefined( var_1.objweapon ) )
        return 0;

    return self getammocount( var_1.objweapon );
}

setequipmentammo( var_0, var_1 )
{
    var_2 = getequipmenttableinfo( var_0 );

    if ( !isdefined( var_2.objweapon ) )
        return;

    self setweaponammoclip( var_2.objweapon, var_1 );
    updateuiammocount( findequipmentslot( var_0 ) );
}

incrementequipmentammo( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = 1;

    var_2 = getequipmentammo( var_0 );
    var_3 = int( min( var_2 + var_1, getequipmentmaxammo( var_0 ) ) );
    setequipmentammo( var_0, var_3 );
}

decrementequipmentammo( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = 1;

    var_2 = getequipmentammo( var_0 );
    var_1 = int( min( var_1, var_2 ) );

    if ( var_1 > 0 )
    {
        var_3 = int( min( var_2 - var_1, getequipmentmaxammo( var_0 ) ) );
        setequipmentammo( var_0, var_3 );
    }
}

incrementequipmentslotammo( var_0, var_1 )
{
    var_2 = getcurrentequipment( var_0 );

    if ( !isdefined( var_2 ) )
        return undefined;

    if ( !isdefined( var_1 ) )
        var_1 = 1;

    var_3 = getequipmentammo( var_2 );
    var_4 = int( min( var_3 + var_1, getequipmentmaxammo( var_2 ) ) );
    setequipmentammo( var_2, var_4 );
}

decrementequipmentslotammo( var_0, var_1 )
{
    var_2 = getcurrentequipment( var_0 );

    if ( !isdefined( var_2 ) )
        return undefined;

    if ( !isdefined( var_1 ) )
        var_1 = 1;

    var_3 = getequipmentammo( var_2 );
    var_4 = int( min( var_3 - var_1, getequipmentmaxammo( var_2 ) ) );
    setequipmentammo( var_2, var_4 );
}

getequipmentslotammo( var_0 )
{
    var_1 = getcurrentequipment( var_0 );

    if ( !isdefined( var_1 ) )
        return undefined;

    return getequipmentammo( var_1 );
}

setequipmentslotammo( var_0, var_1 )
{
    var_2 = getcurrentequipment( var_0 );

    if ( !isdefined( var_2 ) )
        return undefined;

    return setequipmentammo( var_2, var_1 );
}

mapequipmentweaponforref( var_0 )
{
    switch ( var_0.basename )
    {
        case "_encstr_874513A9024703D06DC2631FEAD6A0C3EF9AA6902B":
            return getcompleteweaponname( "_encstr_B9C40C1EFA1EBBB22FC305A93AF3" );
        case "_encstr_A1730ED1DBB801200B0219525A878B43":
            return getcompleteweaponname( "_encstr_B2430B07CCC710135D9A29B0E3" );
        case "_encstr_B89B0FB411E85A7F7B5B8A11C1CC7F5598":
        case "_encstr_9D8D0F1D34CAC9ADA51D597D16837DB5E0":
            return getcompleteweaponname( "_encstr_94410C2B9B052323CB8D7A561F82" );
    }

    return var_0;
}

getequipmentreffromweapon( var_0 )
{
    var_0 = mapequipmentweaponforref( var_0 );

    foreach ( var_2 in level.equipment.table )
    {
        if ( isdefined( var_2.objweapon ) && var_0 == var_2.objweapon )
            return var_2.ref;
    }

    return undefined;
}

getweaponfromequipmentref( var_0 )
{
    foreach ( var_2 in level.equipment.table )
    {
        if ( isdefined( var_2.ref ) && var_0 == var_2.ref )
            return var_2.objweapon;
    }

    return undefined;
}

hasequipment( var_0 )
{
    if ( !isdefined( self.equipment ) )
        return 0;

    foreach ( var_2 in self.equipment )
    {
        if ( var_2 == var_0 )
            return 1;
    }

    return 0;
}

findequipmentslot( var_0 )
{
    if ( !isdefined( self.equipment ) )
        return undefined;

    foreach ( var_3, var_2 in self.equipment )
    {
        if ( var_2 == var_0 )
            return var_3;
    }
}

isequipmentlethal( var_0 )
{
    return isequipmentprimary( var_0 );
}

isequipmentprimary( var_0 )
{
    if ( isdefined( level.equipment.table[var_0] ) )
        return level.equipment.table[var_0].defaultslot == "_encstr_987F080E394BDAC2E45E";
    else
        return 0;
}

isequipmenttactical( var_0 )
{
    return isequipmentsecondary( var_0 );
}

isequipmentsecondary( var_0 )
{
    if ( isdefined( level.equipment.table[var_0] ) )
        return level.equipment.table[var_0].defaultslot == "_encstr_B98F0AC7D5B99F4DDBA8353B";
    else
        return 0;
}

unset_force_aitype_suicidebomber( var_0 )
{
    if ( isdefined( level.equipment.table[var_0] ) )
        return istrue( level.equipment.table[var_0].usecellspawns );
    else
        return 0;
}

updateuiammocount( var_0 )
{
    if ( !isdefined( self.equipment ) )
        return;

    var_1 = 0;
    var_2 = getcurrentequipment( var_0 );

    if ( isdefined( var_2 ) )
        var_1 = getequipmentslotammo( var_0 );

    if ( var_0 == "_encstr_987F080E394BDAC2E45E" )
    {
        self setclientomnvar( "_encstr_981E15236F39F7A8AF87AB066D7560B8129383B5FF223E", var_1 );
        self setpowerprogress( "_encstr_987F080E394BDAC2E45E", var_1 );
    }
    else if ( var_0 == "_encstr_B98F0AC7D5B99F4DDBA8353B" )
    {
        self setclientomnvar( "_encstr_822B1F5D2DBEC1F6BB95C9FA6E59C6F6DCC858E4E5BECDD5B6FAC6D016933B9537", var_1 );
        self setpowerprogress( "_encstr_B98F0AC7D5B99F4DDBA8353B", var_1 );
    }
    else if ( var_0 == "_encstr_A1B507EB87CA015BB8" )
    {
        self setclientomnvar( "_encstr_8211223B7721655095BCE358A766B0B0BAABF789FF6AB9A3D01928534D7308D7A33F0B07", var_1 );

        if ( scripts\mp\utility\game::unset_relic_grounded() )
            _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::updatebrscoreboardstat( "_encstr_828F102FD217484DBA72B0609A063F43437C", var_1 );
    }
}

equiponplayerspawned()
{
    thread watchoffhandfired();
}

resetequipment()
{
    self.equipment = [];
}

executeoffhandfired( var_0 )
{
    foreach ( var_6, var_2 in self.equipment )
    {
        var_3 = getequipmenttableinfo( var_2 );

        if ( isdefined( var_3.objweapon ) && var_0 == var_3.objweapon )
        {
            if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
                _encstr_890626F852FABB63A30BE831E0264973E59A7820FB57C7D0C312D83FC647500B0BA248E8766F3F91::branalytics_equipmentuse( self, var_0 );

            var_4 = getequipmentreffromweapon( var_0 );
            scripts\mp\damage::hide_name_fx_from_players( var_4 );
            var_5 = getcallback( var_2, "_encstr_BAE208BD37C8A59CAC46" );

            if ( isdefined( var_5 ) )
                self thread [[ var_5 ]]( var_2, var_6, var_0 );

            updateuiammocount( var_6 );
            break;
        }
    }
}

watchoffhandfired()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    for (;;)
    {
        self waittill( "_encstr_8C600EDECC9934C2E623EB665AC9CA46", var_0 );
        executeoffhandfired( var_0 );
    }
}

givescavengerammo()
{
    foreach ( var_3, var_1 in self.equipment )
    {
        var_2 = getequipmenttableinfo( var_1 );

        if ( var_2.scavengerammo > 0 )
            incrementequipmentammo( var_1, var_2.scavengerammo );
    }
}

getdefaultslot( var_0 )
{
    var_1 = getequipmenttableinfo( var_0 );

    if ( !isdefined( var_1 ) )
        return undefined;

    return var_1.defaultslot;
}

watchlethaldelay()
{
    level endon( "_encstr_8BBD1181DD6BB003DD39F0F022B60BEE874E1D" );
    level endon( "_encstr_87F00AE4BDABE623EB959B8C" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    var_0 = initstandardloadout();

    if ( var_0 )
        level.lethaldelaystarttime = gettime();
    else
        level.lethaldelaystarttime = scripts\mp\utility\game::gettimepassed();

    if ( level.lethaldelay == 0 )
    {
        level.lethaldelayendtime = level.lethaldelaystarttime;
        level notify( "_encstr_8BBD1181DD6BB003DD39F0F022B60BEE874E1D" );
    }

    level.lethaldelayendtime = level.lethaldelaystarttime + level.lethaldelay * 1000;
    level notify( "_encstr_AABD132BEFC590D870EFE1EF0C6FCF081F1B12A369" );

    for (;;)
    {
        var_1 = undefined;

        if ( var_0 )
            var_1 = gettime();
        else
            var_1 = scripts\mp\utility\game::gettimepassed();

        if ( var_1 >= level.lethaldelayendtime )
            break;

        waitframe();
    }

    level notify( "_encstr_8BBD1181DD6BB003DD39F0F022B60BEE874E1D" );
}

watchlethaldelayplayer( var_0, var_1 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_87F00AE4BDABE623EB959B8C" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( lethaldelaypassed() )
        return;

    self notify( "_encstr_8C4D18BBC2E8363413B247430BC611CAC62C2F0AC60B97569CBE" + var_1 );
    self endon( "_encstr_8C4D18BBC2E8363413B247430BC611CAC62C2F0AC60B97569CBE" + var_1 );
    self endon( "_encstr_B41111CA1757D2C1DACADCA3BEA32CD6ACCDEB" + var_0 );

    if ( !isdefined( self.weapon_xp_iw8_sh_charlie725 ) || !istrue( self.weapon_xp_iw8_sh_charlie725[var_1] ) )
    {
        if ( !isdefined( self.weapon_xp_iw8_sh_charlie725 ) )
            self.weapon_xp_iw8_sh_charlie725 = [];

        self.weapon_xp_iw8_sh_charlie725[var_1] = 1;
        allow_equipment_slot( var_1, 0 );
    }

    watchlethaldelayfeedbackplayer( self, var_1 );

    if ( isdefined( self.weapon_xp_iw8_sh_charlie725 ) && istrue( self.weapon_xp_iw8_sh_charlie725[var_1] ) )
    {
        self.weapon_xp_iw8_sh_charlie725[var_1] = undefined;

        if ( self.weapon_xp_iw8_sh_charlie725.size == 0 )
            self.weapon_xp_iw8_sh_charlie725 = undefined;

        allow_equipment_slot( var_1, 1 );
    }
}

watchlethaldelayfeedbackplayer( var_0, var_1 )
{
    level endon( "_encstr_8BBD1181DD6BB003DD39F0F022B60BEE874E1D" );

    if ( !istrue( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) ) )
        level waittill( "_encstr_AABD132BEFC590D870EFE1EF0C6FCF081F1B12A369" );

    var_2 = "_encstr_AD0D0653443BF7B7";

    if ( var_1 != "_encstr_987F080E394BDAC2E45E" )
        var_2 = "_encstr_BA5F07B2CDD6F6B6AC";

    if ( !isai( var_0 ) )
        var_0 notifyonplayercommand( "_encstr_A34010D82B3A342C36AF0B1D8E56AD83E87D" + var_1, var_2 );

    var_3 = initstandardloadout();

    for (;;)
    {
        self waittill( "_encstr_A34010D82B3A342C36AF0B1D8E56AD83E87D" + var_1 );
        var_4 = undefined;

        if ( var_3 )
            var_4 = gettime();
        else
            var_4 = scripts\mp\utility\game::gettimepassed();

        var_5 = ( level.lethaldelayendtime - var_4 ) / 1000;
        var_5 = int( max( 0, ceil( var_5 ) ) );
        var_0 scripts\mp\hud_message::showerrormessage( "_encstr_B4F11DB102E689A55C23F191A7BF7F55A83B3F2B6D78DDCC756731919BE754", var_5 );
    }
}

cancellethaldelay()
{
    level.lethaldelay = 0;

    if ( initstandardloadout() )
        level.lethaldelaystarttime = gettime();
    else
        level.lethaldelaystarttime = scripts\mp\utility\game::gettimepassed();

    level.lethaldelayendtime = level.lethaldelaystarttime;
    level notify( "_encstr_8BBD1181DD6BB003DD39F0F022B60BEE874E1D" );
}

lethaldelaypassed()
{
    if ( isdefined( level.lethaldelay ) && level.lethaldelay == 0 )
        return 1;

    if ( isdefined( level.lethaldelayendtime ) )
    {
        var_0 = undefined;

        if ( initstandardloadout() )
            var_0 = gettime();
        else
            var_0 = scripts\mp\utility\game::gettimepassed();

        return var_0 > level.lethaldelayendtime;
    }

    return 0;
}

initstandardloadout()
{
    var_0 = scripts\mp\utility\game::getgametype();

    if ( var_0 == "_encstr_BA07038803" || var_0 == "_encstr_BC7205C8ABFDE7" || var_0 == "_encstr_B7D7054F3030F9" )
        return 1;

    return 0;
}

onownerdisconnect( var_0 )
{
    var_1 = var_0 scripts\mp\weapons::getallequip();

    foreach ( var_3 in var_1 )
        var_3 notify( "_encstr_A34911F6BB375939F5462DE66CDE3737AC36E8" );
}

hackequipment( var_0 )
{
    self.ishacked = 1;
    var_0 scripts\mp\gamelogic::sethasdonecombat( var_0, 1 );
    var_0 scripts\cp\vehicles\vehicle_compass_cp::_id_1203D( self.equipmentref );
    changeowner( var_0 );

    if ( level.teambased )
        self filteroutplayermarks( var_0.team );
    else
        self filteroutplayermarks( var_0 );

    var_0 scripts\mp\killstreaks\killstreaks::givescoreforhack();
}

changeowner( var_0 )
{
    var_1 = self.owner;
    self setentityowner( var_0 );
    self.owner = var_0;
    self.team = var_0.team;
    self setotherent( var_0 );
    var_1 scripts\mp\weapons::removeequip( self );
    self.owner scripts\mp\weapons::updateplantedarray( self );
    var_2 = getcallback( self.equipmentref, "_encstr_819F0F60A357FBCD5A9A5EC3B6021761A4" );
    self notify( "_encstr_89420DD04B8385A0FE40E3C5775FD8" );

    if ( isdefined( var_2 ) )
        self [[ var_2 ]]( var_1 );
}

scriptablescleanupbatchsize( var_0, var_1, var_2 )
{
    foreach ( var_4 in var_0 )
    {
        if ( istrue( var_4.gulag ) )
            continue;

        var_4._id_12FB1 = var_4 getcurrentequipment( var_1 );
        var_4._id_12FB0 = getequipmentslotammo( var_1 );
        var_4 takeequipment( var_1 );
        var_4 giveequipment( var_2, var_1 );
    }
}

_id_13A30( var_0, var_1, var_2, var_3 )
{
    foreach ( var_5 in var_0 )
    {
        if ( istrue( var_5.gulag ) )
            continue;

        var_6 = var_5 getcurrentequipment( var_1 );

        if ( !istrue( var_3 ) && isdefined( var_6 ) && var_2 != var_6 )
            continue;

        var_5 takeequipment( var_1 );
        var_7 = var_5._id_12FB1;
        var_8 = var_5._id_12FB0;

        if ( isdefined( var_7 ) )
        {
            var_5 giveequipment( var_7, var_1 );
            var_5._id_12FB1 = undefined;

            if ( isdefined( var_8 ) )
            {
                var_5 setequipmentammo( var_7, var_8 );
                var_5._id_12FB0 = undefined;
            }
        }
    }
}

debughackequipment()
{
    for (;;)
    {
        if ( getdvarint( "_encstr_9B9317076FC348C8956E53E91C79389A688FB3BBBB5A2DC0BC" ) != 0 )
        {
            var_0 = level.players[0];
            var_1 = undefined;

            for ( var_2 = 1; var_2 < level.players.size; var_2++ )
            {
                if ( var_0 scripts\mp\utility\player::isenemy( level.players[var_2] ) )
                {
                    var_1 = level.players[var_2];
                    break;
                }
            }

            if ( !isdefined( var_1 ) )
            {
                iprintlnbold( "_encstr_81C03A938001D4B67BAFDAD56713BA8A01689BB2E0580D7E4F9DA48FD649632571101A6BA0F953728D20AF8736DB2AC099F8BF57F80BB10B9BC535FB" );
                continue;
            }

            var_3 = var_0 scripts\mp\weapons::getallequip();
            var_4 = undefined;

            if ( var_3.size > 0 )
                var_4 = var_3[0];

            if ( !isdefined( var_4 ) )
            {
                iprintlnbold( "_encstr_A35351B524F218BD8E5341634FE286CAB5BB9B8B1E40307432FA5341421A45184353696035B5F22FAAF74F7B5AF21C5AEDEA4B385A1580E853CA6967721BD630BF07F1D183472117DA9FF323DFC2A7805D1D5B" );
                continue;
            }

            var_4 hackequipment( var_1 );
        }

        waitframe();
    }
}

debugemp()
{
    for (;;)
    {
        if ( getdvarint( "_encstr_8A70136E36E4BE1DAC37D12AA928E84E2B73581959" ) != 0 )
        {
            if ( level.players.size < 2 )
            {
                iprintlnbold( "_encstr_A2CD3093CA2B1902C23A08B1AC2CE64708A3BBBD0807B12CE52B9CDC40E8DE40DCB127D71DB237478A5314D14E56CD583259" );
                continue;
            }

            var_0 = level.players[1];
            var_0 scripts\mp\utility\weapon::_launchgrenade( "_encstr_9CD20F566B38D79DE4CA730B2356F55B83", ( 0, 0, 0 ), ( 0, 0, 0 ), 0.05, 0 );
        }

        waitframe();
    }
}

debugempdrone()
{
    for (;;)
    {
        if ( getdvarint( "_encstr_807111EA59A06F6B95C7CB0793D7B09AA0CDE7" ) != 0 )
        {
            if ( level.players.size < 2 )
            {
                iprintlnbold( "_encstr_9C012E44DA1FB582260C31B1050ED005B263FBE8F623F9B0F8F59D87683368E7178AD3961BAFAE509FE521D142DDA81D" );
                continue;
            }

            var_0 = level.players[0];
            var_1 = level.players[1];
            var_2 = spawnstruct();
            var_2.streakname = "_encstr_8B2C0AD847800621C305E07D";
            var_2.owner = var_1;
            var_2.id = scripts\cp_mp\utility\killstreak_utility::getuniquekillstreakid( var_1 );
            var_2.lifeid = 0;
            var_3 = var_0.origin;
            var_4 = var_1 scripts\cp_mp\killstreaks\emp_drone_targeted::empdrone_createdrone( var_2, var_3 );
        }

        waitframe();
    }
}

debugdestroyempdrones()
{
    for (;;)
    {
        if ( getdvarint( "_encstr_B66E189B369CAFA395B9D12AD44111E4F6DCB21159DCE8C9EDBC" ) != 0 )
        {
            foreach ( var_1 in level.activekillstreaks )
            {
                if ( isdefined( var_1.streakinfo ) && var_1.streakinfo.streakname == "_encstr_8B2C0AD847800621C305E07D" )
                    var_1 scripts\cp_mp\killstreaks\emp_drone::empdrone_destroy();
            }
        }

        waitframe();
    }
}

timeoflastexecute()
{
    level.weapon_xp_iw8_pi_papa320 = [];
    var_0 = 0;

    foreach ( var_2 in level.equipment.table )
    {
        if ( !var_2.usecellspawns )
            continue;

        if ( var_2.id <= 0 )
            continue;

        if ( var_2.defaultslot == "_encstr_B98F0AC7D5B99F4DDBA8353B" )
            continue;

        level.weapon_xp_iw8_pi_papa320[var_2.ref] = 1 << var_0;
        var_0++;
    }
}
