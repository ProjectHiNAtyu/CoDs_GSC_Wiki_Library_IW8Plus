// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_80C50550FA44C9" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_80C50550FA44C9" ) ]]();

    level._effect["_encstr_8766154129EB61FE78F801C02AEBF345B90A136B0988FB"] = loadfx( "_encstr_B18B33BB11E35EBC5081A76DE96AC48F01C863233B351F74BA3596709F200EBB3DA37A9AE619D7EDB81386778740D377DDD02312AA" );
    level._effect["_encstr_A2F8162EF31E247B5791D98A4B59C347D19A89972D1BF21F"] = loadfx( "_encstr_A22A371BF0CAE75A3FCB09BDD7A7B2799048F79BC8C1E122F7844FF0A8E72A2AD910375FA8395F0A3F96962AADF712D826C8AFCBA0788642A9" );
    level.carepackagedropnodes = getentarray( "_encstr_936416178AF8CDFBD13A4070CF911F90BA9D59010BE00D8B", "_encstr_B8CE0BE43FC317DF690862BA48" );
    initkillstreak();
    initheli();
    initcratedata();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_8F3B14AA9086535AB03195953150A4CB2189A0A2785D" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_8F3B14AA9086535AB03195953150A4CB2189A0A2785D" ) ]]();
}

initkillstreak()
{

}

initheli()
{
    level.littlebirds = [];

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_8CDD12888F7F38F74B5FC65E36123D61890B90E8" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_8CDD12888F7F38F74B5FC65E36123D61890B90E8" ) ]]();
}

initcratedata()
{
    var_0 = spawnstruct();
    var_0.configs = [];
    var_0.crates = [];
    var_0.usablecrates = [];
    level.cratedata = var_0;
    level.cratedata._id_13F28 = pow( getdvarfloat( "_encstr_BD422966E81A7F033B4349EF87FE2BBD6B3FE533C779E36A526348A05028F3734079909B1B30B8C1FFD2FA", 2 ), 2 );
    level.mpplayerallowcrateuse = scripts\common\utility::allow_crate_use;
    level.cratedata.mountmantlemodel = getent( "_encstr_9B4C11DB7F7B7FD1D0C79FD001C98939C9BD0B", "_encstr_B8CE0BE43FC317DF690862BA48" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_B65012B3B3C4E203C8C9C20621E051DA28B79723" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_B65012B3B3C4E203C8C9C20621E051DA28B79723" ) ]]();

    var_2 = "_encstr_A20703C962";

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) )
        var_2 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) ]]();

    switch ( var_2 )
    {
        case "_encstr_95570B6C1CFABB85D995FADC9D":
        case "_encstr_829E0C122B88E773A0D5293E9338":
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_B8061DEC56E8A3B06BB253F6239535E0ACD85A99A58DA139B0D1561158472C" ) )
                [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_B8061DEC56E8A3B06BB253F6239535E0ACD85A99A58DA139B0D1561158472C" ) ]]();
        case "_encstr_9507034B25":
            initbattleroyalecratedata();
            initbattleroyaleloadoutcratedata();
            teammateoutlineids();
            teamplunderexfil();
            teammatereviveweaponwaitputaway();
            teamplunderexfilshowviponly();
            teamplacement();

            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_97D51F8ADE0D77C357D81A92D16FBF0FE7471503FBF18FCE8778C2FB8801368319" ) )
            {
                var_3 = spawnstruct();
                var_3.model = relic_landlocked_do_explosion();
                var_3._id_140A1 = 0.5;
                var_3._id_1409F = 3;
                var_3.usefov = 180;
                [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_97D51F8ADE0D77C357D81A92D16FBF0FE7471503FBF18FCE8778C2FB8801368319" ) ]]( var_3 );
            }
        case "_encstr_BD19047616EB":
            initarmcratedata();
            initkillstreakcratedata();
            initbattleroyalecratedata();
        case "_encstr_BC7205C8ABFDE7":
        case "_encstr_87E507D23766566CD1":
            initdropzonekillstreakcratedata();
            break;
        default:
            initkillstreakcratedata();
    }

    initcratedropdata();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_9F2322A3D88FD8E31C97A3B7444B32E7D3D593BAEB9725639FD1FBA568A92A7896036FC4" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_9F2322A3D88FD8E31C97A3B7444B32E7D3D593BAEB9725639FD1FBA568A92A7896036FC4" ) ]]( ::_id_13C46 );

    thread watchallcrateusability();
}

getleveldata( var_0 )
{
    var_1 = level.cratedata.configs[var_0];

    if ( !isdefined( var_1 ) )
    {
        var_1 = getemptyleveldata();
        level.cratedata.configs[var_0] = var_1;
    }

    return var_1;
}

getemptyleveldata()
{
    var_0 = spawnstruct();
    var_0.friendlymodel = "_encstr_ADBA2188B293ABB84E62FBBF9BB670650BAAC1F09AE7D5A93219AF35929C80B8E3921A";
    var_0.enemymodel = "_encstr_BC531E79B963F83186C32009CA5EF5B1EB59F6E209E7211FBADF19D0F277934A";
    var_0.dummymodel = "_encstr_94861EB5D263D2D12C9CCBFA3685932B0EB01BAD8576CAAF0313FA1957DA6BF2";
    var_0.setplayerbeingrevivedextrainfo = 27.5;
    var_0.mountmantlemodel = getdefaultmountmantlemodel();
    var_0.objweapon = isundefinedweapon();
    var_0.timeout = 90;
    var_0.headiconoffset = 0;
    var_0.headicondrawrange = 10000;
    var_0.headiconnaturalrange = 400;
    var_0.minimapicon = "_encstr_97C919B41BED9B7DDAB49B4BDA16387D8DB027561C85C6DA0B7659";
    var_0.usetag = "_encstr_9830081379E42703F8A3";
    var_0.userange = 128;
    var_0.breakuserangesqr = 30625;
    var_0.usefov = 360;
    var_0.usepriority = 0;
    var_0.ownerusetime = 0.5;
    var_0.otherusetime = 3;
    var_0.friendlyuseonly = 0;
    var_0.navobstaclebounds = ( 30, 10, 64 );
    var_0.navobstacleupdatedistsqr = 64;
    var_0.dangerzoneheight = 1000;
    var_0.dangerzoneradius = 128;
    var_0.activatecallback = undefined;
    var_0.deactivatecallback = undefined;
    var_0.capturecallback = undefined;
    var_0.rerollcallback = undefined;
    var_0.destroycallback = undefined;
    var_0.destroyoncapture = 1;
    var_0.onecaptureperplayer = 0;
    var_0.destroyvisualscallback = getdefaultdestroyvisualscallback();
    var_0.destroyvisualsdeletiondelay = getdefaultdestroyvisualsdeletiondelay();
    var_0.capturevisualscallback = getdefaultcapturevisualscallback();
    var_0.capturevisualsdeletiondelay = getdefaultcapturevisualsdeletiondelay();
    var_0.capturestring = &"_encstr_81621F38A4A9A3423905EDF12F5919FB433C4121C096030ED103FFE843F1D47717";
    var_0.rerollstring = &"_encstr_985B1DF4849384576C1D3F91976E6E691CF32F465D6F73B1612B588744AD64";
    var_0.headicon = "_encstr_89AF251ABA32FA4B6CBD37AF0D2BC28CF5B5D2B1C6E61D935985DAAF3658392B8358C6B50B9DAC";
    var_0.supportsreroll = 0;
    var_0.supportsownercapture = 1;
    var_0.supportsothercapture = 1;
    return var_0;
}

hasleveldata( var_0 )
{
    return isdefined( level.cratedata.configs[var_0] );
}

createcrate( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    var_10 = getleveldata( var_2 );

    if ( var_10.supportsownercapture )
    {

    }

    if ( var_10.supportsreroll )
    {

    }

    var_11 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_3 );
    var_11.angles = var_4;

    if ( !istrue( var_7 ) && var_2 != "_encstr_9B73183A10F10BA3A1A8729753C96B977FA8B7A702CF45F7D825" || var_2 != "_encstr_B4D516C9DEFC28B9C2E7457757AAF1F8BFF51021075FE86D" )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B60E07C9FD1C2055E3", "_encstr_BAFB13E8EDABD80DD2733B901646A2934BB39D95C9" ) )
        {
            if ( var_11 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B60E07C9FD1C2055E3", "_encstr_BAFB13E8EDABD80DD2733B901646A2934BB39D95C9" ) ]]() )
            {
                var_11 delete();
                return undefined;
            }
        }
    }

    var_11.owner = var_0;
    var_11.team = var_1;
    var_11.objweapon = var_10.objweapon;
    var_11.cratetype = var_2;
    var_11.useobject = undefined;
    var_11.navobstacle = undefined;
    var_11.headiconid = undefined;
    var_11.minimapid = undefined;
    var_11.dangerzoneid = undefined;
    var_11.navobstacleid = undefined;
    var_11.destination = var_5;
    var_11.headiconactive = 0;
    var_11.minimapiconactive = 0;
    var_11.hasnophysics = istrue( var_6 );
    var_11.physicsactivated = 0;
    var_11.isdestroyed = 0;
    var_11.data = var_8;
    var_11.skipminimapicon = var_9;
    var_11.headicon = var_10.headicon;
    var_11.minimapicon = var_10.minimapicon;
    var_11.capturestring = var_10.capturestring;
    var_11.rerollstring = var_10.rerollstring;
    var_11.supportsreroll = var_10.supportsreroll;

    if ( level.gametype == "_encstr_87E507D23766566CD1" )
        var_11.validate_station = 1;

    var_11 setmodel( var_10.dummymodel );
    var_11 setnodeploy( 1 );
    var_11 setcandamage( 0 );
    var_11 makeunusable();
    var_11 enableplayermarks( "_encstr_B6CE0B0BB00A031B7B88355740" );

    if ( level.teambased )
        var_11 filteroutplayermarks( var_11.team );
    else
        var_11 filteroutplayermarks( var_11.owner );

    var_12 = undefined;

    if ( isdefined( var_10.friendlymodel ) )
    {
        var_12 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_3 );
        var_12.angles = var_4;
        var_12.crate = var_11;
        var_12 setmodel( var_10.friendlymodel );
        var_12 linkto( var_11 );
        var_11.childoutlineents = [ var_12 ];
    }
    else
        var_12 = var_11;

    var_11.friendlymodel = var_12;
    var_13 = undefined;

    if ( isdefined( var_10.enemymodel ) )
    {
        if ( level.teambased )
        {

        }
        else
        {

        }

        var_13 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_3 );
        var_13.angles = var_4;
        var_13.cratedata = var_11;
        var_13 setmodel( var_10.enemymodel );
        var_13 linkto( var_11 );
    }

    var_11.enemymodel = var_13;

    if ( isdefined( var_11.enemymodel ) )
        var_11 thread watchvisibility();

    var_14 = undefined;

    if ( !var_11.hasnophysics )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) )
        {
            if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) ]]() != "_encstr_9507034B25" )
            {
                var_14 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_3 + ( 0, 0, 300 ) );
                var_14 setscriptmoverkillcam( "_encstr_97440AC1EBAB51188231BD83" );

                if ( isdefined( self.scenenode ) )
                {
                    if ( var_7 )
                        var_14 thread looselinkto( var_11, ( 0, 0, 0 ) );
                    else
                        var_14 linkto( var_11 );
                }
            }
        }
    }

    if ( isdefined( var_11.owner ) )
        var_11.owner.unset_relic_ammo_drain = 1;

    var_11.killcament = var_14;
    var_15 = var_11 createmountmantlemodel();

    if ( !var_15 )
        var_11.unresolved_collision_func = ::crateunresolvedcollisioncallback;

    var_11 addtolists();

    if ( !scripts\engine\utility::is_equal( level.script, "_encstr_B7230A1F490882CD611BD39B" ) )
        var_11 thread watchcratedestroyearly();

    if ( var_11.hasnophysics )
        var_11 activatecratefirsttime();
    else if ( var_7 )
        var_11 infinite_chopper();

    return var_11;
}

activatecratefirsttime()
{
    activatecrate( 1 );
}

activatecrate( var_0 )
{
    self notify( "_encstr_82030E7737D57A9EE8538F1E8BB0C4F2" );
    self.unset_relic_amped = undefined;

    if ( istrue( self.destroyonactivate ) )
    {
        thread destroycrate();
        return;
    }

    _createnavobstacle();
    self notify( "_encstr_87590E602B99638DB13FC2784B48F32D" );

    if ( istrue( self.waitforobjectiveactivate ) )
        self waittill( "_encstr_8BCA13A70D98975FEDF083BA1E4F870B68DD2124AB" );

    if ( istrue( var_0 ) && self.cratetype != "_encstr_B4D516C9DEFC28B9C2E7457757AAF1F8BFF51021075FE86D" && !istrue( self.skipminimapicon ) )
        createminimapicon();

    _createheadicon();
    makecrateusable();
    var_1 = getleveldata( self.cratetype );

    if ( isdefined( var_1.activatecallback ) )
        self thread [[ var_1.activatecallback ]]( var_0 );
}

deactivatecrate( var_0 )
{
    if ( istrue( var_0 ) )
        destroyminimapicon();

    _destroyheadicon();
    makecrateunusable();
    var_1 = getleveldata( self.cratetype );

    if ( isdefined( var_1.deactivatecallback ) )
        self thread [[ var_1.deactivatecallback ]]( var_0 );
}

capturecrate( var_0 )
{
    var_1 = getleveldata( self.cratetype );

    if ( isdefined( self.owner ) && istrue( self.owner.unset_relic_ammo_drain ) )
        self.owner.unset_relic_ammo_drain = 0;

    if ( isdefined( var_1.capturecallback ) )
        self thread [[ var_1.capturecallback ]]( var_0 );

    if ( var_1.destroyoncapture )
    {
        var_2 = 0;

        if ( isdefined( var_1.capturevisualscallback ) )
        {
            self thread [[ var_1.capturevisualscallback ]]( self.friendlymodel );

            if ( isdefined( self.enemymodel ) )
                self thread [[ var_1.capturevisualscallback ]]( self.enemymodel );

            var_2 = var_1.capturevisualsdeletiondelay;
        }

        thread deletecrate( var_2 );
    }
}

destroycrate( var_0 )
{
    if ( istrue( self.isdestroyed ) )
        return;

    if ( !isdefined( var_0 ) )
    {
        if ( isdefined( self.scenenode ) )
        {
            if ( isdefined( self.animdroptime ) )
            {
                if ( gettime() >= self.animdroptime )
                {
                    self.destroyonactivate = 1;
                    return;
                }
                else
                    var_0 = 1;
            }
        }
        else if ( istrue( self.physicsactivated ) )
        {
            if ( !istrue( self._id_12332 ) )
            {
                self.destroyonactivate = 1;
                return;
            }
        }
    }

    self.destroyonactivate = undefined;
    var_1 = getleveldata( self.cratetype );

    if ( isdefined( self.owner ) && istrue( self.owner.unset_relic_ammo_drain ) )
        self.owner.unset_relic_ammo_drain = 0;

    if ( isdefined( var_1.destroycallback ) )
        self thread [[ var_1.destroycallback ]]( var_0 );

    if ( !istrue( var_0 ) )
    {
        var_2 = undefined;

        if ( !istrue( self.physicsactivated ) || !istrue( self._id_12332 ) )
        {
            if ( isdefined( var_1.destroyvisualscallback ) )
            {
                self thread [[ var_1.destroyvisualscallback ]]( self.friendlymodel );

                if ( isdefined( self.enemymodel ) )
                    self thread [[ var_1.destroyvisualscallback ]]( self.enemymodel );

                var_2 = var_1.destroyvisualsdeletiondelay;
            }
        }
        else if ( isdefined( var_1.capturevisualscallback ) )
        {
            self thread [[ var_1.capturevisualscallback ]]( self.friendlymodel );

            if ( isdefined( self.enemymodel ) )
                self thread [[ var_1.capturevisualscallback ]]( self.enemymodel );

            var_2 = var_1.capturevisualsdeletiondelay;
        }

        thread deletecrate( var_2 );
    }
    else
        thread lastactivateinstruct();
}

deletecrate( var_0 )
{
    if ( istrue( self.isdestroyed ) )
        return;

    self notify( "_encstr_A3750609A5E61883" );
    self.isdestroyed = 1;
    level notify( "_encstr_93941EED9D2F9BBB9383F035696F87886AC569F14882480C294FFE804D2D05CC" + self.origin );
    var_1 = isdefined( self.friendlymodel ) && self.friendlymodel != self;

    if ( isdefined( self.scenenode ) )
    {
        if ( isdefined( self.scenenode.crates ) )
            self.scenenode.crates[self getentitynumber()] = undefined;

        if ( isdefined( self.scenenode.crate ) )
            self.scenenode.crate = undefined;

        self.scenenode = undefined;
    }

    removefromlists( self getentitynumber() );
    self disableplayermarks( "_encstr_B6CE0B0BB00A031B7B88355740" );
    self setcandamage( 0 );
    self setnonstick( 1 );

    if ( var_1 )
        self hide();

    makecrateunusable();

    if ( isdefined( self.useobject ) )
        self.useobject delete();

    destroydangerzone();
    _destroynavobstacle();
    destroymountmantlemodel();
    infilweaponraise();
    destroyminimapicon();
    _destroyheadicon();

    if ( isdefined( self.killcament ) )
        self.killcament delete();

    if ( level.script == "_encstr_A2D508A7F1A04A67707B" && getdvarint( "_encstr_A37D0F7B22DBA0189A5F0995B7C418FF2F", 0 ) )
    {
        var_2 = spawnfx( level._effect["_encstr_827B17B90B48C72B50E3017A2A378FF1B08320059579CF4B87"], self.origin );
        triggerfx( var_2 );
        self setscriptablepartstate( "_encstr_B193064B48286D1C", "_encstr_81CE0AA1A51959FA98BDD1D0" );
    }

    wait( var_0 );

    if ( var_1 )
        self.friendlymodel delete();

    if ( isdefined( self.enemymodel ) )
        self.enemymodel delete();

    self delete();
}

lastactivateinstruct()
{
    var_0 = level.framedurationseconds;

    if ( isdefined( self getlinkedscriptableinstance() ) && self getscriptablehaspart( "_encstr_A9430BE4892FC82DB432B0A09B" ) )
        self setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_BECC05FC5321BA", 1 );

    deletecrate( var_0 );
}

watchcratedestroyearly()
{
    self endon( "_encstr_A3750609A5E61883" );
    var_0 = getleveldata( self.cratetype );

    if ( isdefined( var_0.timeout ) )
    {

    }

    watchcratedestroyearlyinternal( var_0.timeout );

    if ( istrue( self.nevertimeout ) )
        return;

    thread destroycrate();
}

watchcratedestroyearlyinternal( var_0 )
{
    if ( isdefined( self.owner ) )
    {
        self.owner endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
        self.owner endon( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
        self.owner endon( "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
    }

    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( var_0 ) )
        scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_0 );
    else
        level waittill( "_encstr_97A00833BD9395CE5993" );
}

lb_mg_dmg_factor_tail_rotor()
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B60E07C9FD1C2055E3", "_encstr_BAFB13E8EDABD80DD2733B901646A2934BB39D95C9" ) )
    {
        if ( self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B60E07C9FD1C2055E3", "_encstr_BAFB13E8EDABD80DD2733B901646A2934BB39D95C9" ) ]]() )
            thread destroycrate();
    }
}

initcratedropdata()
{
    var_0 = spawnstruct();
    var_0.helis = [];
    var_1 = scripts\cp_mp\utility\killstreak_utility::removeextracthelipad();

    if ( isdefined( var_1 ) )
    {
        var_0.heliheight = var_1.origin[2] - 750;

        if ( issubstr( level.mapname, "_encstr_B6D7070B37D22FC286" ) )
            var_0.heliheight = var_1.origin[2] + 500;
    }
    else
        var_0.heliheight = 850;

    var_0.heliheightoffset = 128;
    level.cratedropdata = var_0;
    initscriptedhelidropdata();
}

initscriptedhelidropdata()
{
    initscriptedhelidropanims();
}

#using_animtree("_encstr_93DC0DCD1B272D3847AF5BED23B2C6");

#using_animtree("_encstr_A40101");

#using_animtree("_encstr_A40101");

#using_animtree("_encstr_A40101");

initscriptedhelidropanims()
{
    level.scr_animtree["_encstr_98E50D36B03956BE1C851BDAC2D9CA"] = #animtree;
    level.scr_anim["_encstr_98E50D36B03956BE1C851BDAC2D9CA"]["_encstr_8F541232293E9FD990DB4343F33B1F2F6D238A8B"] = %_encstr_B4481A69909F892B72A278083ACCE3C1AF17E6D20817767DDD4BB878;
    level.scr_animname["_encstr_98E50D36B03956BE1C851BDAC2D9CA"]["_encstr_8F541232293E9FD990DB4343F33B1F2F6D238A8B"] = "_encstr_B4481A69909F892B72A278083ACCE3C1AF17E6D20817767DDD4BB878";
    level.scr_animtree["_encstr_B696139AA04DFFDF9327F3E3CF99FF899743636338"] = #animtree;
    level.scr_anim["_encstr_B696139AA04DFFDF9327F3E3CF99FF899743636338"]["_encstr_8F541232293E9FD990DB4343F33B1F2F6D238A8B"] = %_encstr_BCB41FCA800FC6D6C3C511498144488F0127837ACE524839C3335D8E036933C83E;
    level.scr_animname["_encstr_B696139AA04DFFDF9327F3E3CF99FF899743636338"]["_encstr_8F541232293E9FD990DB4343F33B1F2F6D238A8B"] = "_encstr_BCB41FCA800FC6D6C3C511498144488F0127837ACE524839C3335D8E036933C83E";
    initscriptedhelidropvehicleanims();
    teamplunderexfilvipuav();
}

#using_animtree("_encstr_B20A1AAD0EEBEC950D961BC6ACB97DC28DDD58E537F563B71691CA46");

#using_animtree("_encstr_A40101");

initscriptedhelidropvehicleanims()
{
    level.scr_animtree["_encstr_80F3123208E5A787FB5F8B8B6721576179B04AEA"] = #animtree;
    level.scr_anim["_encstr_80F3123208E5A787FB5F8B8B6721576179B04AEA"]["_encstr_8F541232293E9FD990DB4343F33B1F2F6D238A8B"] = %_encstr_A89E1C0D8199BEEF56D97B92E12227779077B48A1D0B838FE891B21B8888;
}

#using_animtree("_encstr_93DC0DCD1B272D3847AF5BED23B2C6");

#using_animtree("_encstr_A40101");

#using_animtree("_encstr_A40101");

#using_animtree("_encstr_A40101");

#using_animtree("_encstr_A40101");

#using_animtree("_encstr_A40101");

teamplunderexfilvipuav()
{
    level.scr_anim["_encstr_98E50D36B03956BE1C851BDAC2D9CA"]["_encstr_B4081198393698CC03FA2327B7E0AF1A4BECD0"] = %_encstr_8C19200A58670E578375B0D91EC81F574B8952E2C0FFC9937863A1DE385BA20B498A;
    level.scr_animname["_encstr_98E50D36B03956BE1C851BDAC2D9CA"]["_encstr_B4081198393698CC03FA2327B7E0AF1A4BECD0"] = "_encstr_8C19200A58670E578375B0D91EC81F574B8952E2C0FFC9937863A1DE385BA20B498A";
    level.scr_anim["_encstr_98E50D36B03956BE1C851BDAC2D9CA"]["_encstr_A4D9107913BFB7B22A7FD1F567E209514F8A"] = %_encstr_AAE61F550FDEBF76CD081B0210D7AE777160A3DBA76107FF89F0B2EA09B7F36283;
    level.scr_animname["_encstr_98E50D36B03956BE1C851BDAC2D9CA"]["_encstr_A4D9107913BFB7B22A7FD1F567E209514F8A"] = "_encstr_AAE61F550FDEBF76CD081B0210D7AE777160A3DBA76107FF89F0B2EA09B7F36283";
    level.scr_anim["_encstr_98E50D36B03956BE1C851BDAC2D9CA"]["_encstr_95D910989CD889CC18D78C93BD38AFB1DE77"] = %_encstr_B6C51FDA03A09F4E88EB5851FF1816C7D59EB222AB04B74790FB4956EFF28A62A7;
    level.scr_animname["_encstr_98E50D36B03956BE1C851BDAC2D9CA"]["_encstr_95D910989CD889CC18D78C93BD38AFB1DE77"] = "_encstr_B6C51FDA03A09F4E88EB5851FF1816C7D59EB222AB04B74790FB4956EFF28A62A7";
    level.scr_anim["_encstr_B696139AA04DFFDF9327F3E3CF99FF899743636338"]["_encstr_B4081198393698CC03FA2327B7E0AF1A4BECD0"] = %_encstr_BAED2550FB6759F30B7F27A7D6B23B0185AF40B86BF111B9032395A06F1A3388E617C2AADED8C3;
    level.scr_animname["_encstr_B696139AA04DFFDF9327F3E3CF99FF899743636338"]["_encstr_B4081198393698CC03FA2327B7E0AF1A4BECD0"] = "_encstr_BAED2550FB6759F30B7F27A7D6B23B0185AF40B86BF111B9032395A06F1A3388E617C2AADED8C3";
    level.scr_anim["_encstr_B696139AA04DFFDF9327F3E3CF99FF899743636338"]["_encstr_A4D9107913BFB7B22A7FD1F567E209514F8A"] = %_encstr_A66024DFE88613629DCD9AD62677BADF6929237790394BBABB5D27419C117369D0C186AE1ABB;
    level.scr_animname["_encstr_B696139AA04DFFDF9327F3E3CF99FF899743636338"]["_encstr_A4D9107913BFB7B22A7FD1F567E209514F8A"] = "_encstr_A66024DFE88613629DCD9AD62677BADF6929237790394BBABB5D27419C117369D0C186AE1ABB";
    level.scr_anim["_encstr_B696139AA04DFFDF9327F3E3CF99FF899743636338"]["_encstr_95D910989CD889CC18D78C93BD38AFB1DE77"] = %_encstr_88812429AFA1B939F0711F217FB280D7AFB1BAC1CB19819BEDF5A7A6339C100C2A39924F37A0;
    level.scr_animname["_encstr_B696139AA04DFFDF9327F3E3CF99FF899743636338"]["_encstr_95D910989CD889CC18D78C93BD38AFB1DE77"] = "_encstr_88812429AFA1B939F0711F217FB280D7AFB1BAC1CB19819BEDF5A7A6339C100C2A39924F37A0";
}

placecrate( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    return createcrate( var_0, var_1, var_2, var_3, var_4, undefined, 1, 0, var_5, var_6 );
}

dropcrate( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    if ( !isdefined( var_5 ) )
    {
        var_8 = getcratedropcaststart( var_3, 0 );
        var_5 = getcratedropdestination( var_8, getcratedropcastend( var_8, 0 ) );
    }

    return createcrate( var_0, var_1, var_2, var_3, var_4, var_5, undefined, 1, var_6, var_7 );
}

dropcratefrommanualheli( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    var_3 = getcratedropcaststart( var_3, 1 );
    var_9 = var_3[2];

    if ( !isdefined( var_7 ) )
    {
        var_7 = getcratedropdestination( var_3, getcratedropcastend( var_3, 1 ) );

        if ( !isdefined( var_7 ) )
            return undefined;
    }

    var_10 = spawnstruct();
    var_10.owner = var_0;
    var_10.team = var_1;
    var_10.hasowner = isdefined( var_0 );
    var_4 = var_4 * ( 0, 1, 0 );
    var_11 = var_3 + -1 * anglestoforward( var_4 ) * var_5;
    var_10.dropposition = var_3;
    var_10.exitposition = var_3 + anglestoforward( var_4 ) * var_6;
    var_12 = undefined;

    if ( isdefined( var_8 ) )
        var_12 = var_8.vehicleisreserved;

    var_13 = createheli( var_0, var_1, var_11, var_4, var_12 );
    var_13.dropstruct = var_10;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) )
    {
        if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) ]]() == "_encstr_9507034B25" )
            var_13 vehicle_setspeed( 100, 60 );
        else
            var_13 vehicle_setspeed( 200, 100 );
    }

    var_13 setmaxpitchroll( 15, 15 );
    var_13 setscriptablepartstate( "_encstr_B38A07C696D9A13ACD", "_encstr_B30B07E216CBFFC4C2", 1 );
    var_10.heli = var_13;
    var_14 = createcrate( var_0, var_1, var_2, var_11, var_13.angles, var_7, undefined, 0, var_8 );
    var_14.dropstruct = var_10;
    var_14 linkto( var_13, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", ( 16, 0, -156 ), ( 0, 0, 0 ) );
    var_10.crate = var_14;
    var_10 thread watchdropcratefrommanualheli();
    return var_10;
}

watchdropcratefrommanualheli()
{
    self endon( "_encstr_A3750609A5E61883" );
    watchdropcratefrommanualheliinternal();

    if ( isdefined( self.crate ) )
        self.crate thread destroycrate();

    if ( isdefined( self.heli ) )
        self.heli thread destroyheli();
}

watchdropcratefrommanualheliinternal()
{
    if ( self.hasowner )
    {
        self.owner endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
        self.owner endon( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
        self.owner endon( "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
    }

    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self.heli setvehgoalpos( self.dropposition, 1 );
    self.heli scripts\engine\utility::waittill_notify_or_timeout( "_encstr_A3750609A5E61883", 2 );

    if ( !isdefined( self.heli ) || istrue( self.heli.isdestroyed ) )
    {
        thread docratedropfrommanualheli();
        return;
    }

    self.heli setyawspeed( 40, 20, 20, 0.3 );

    if ( distancesquared( self.heli.origin, self.dropposition ) > 5184 )
    {
        self.heli scripts\engine\utility::_id_143A5( "_encstr_A3750609A5E61883", "_encstr_AA7205F03A9609" );

        if ( !isdefined( self.heli ) || istrue( self.heli.isdestroyed ) )
        {
            thread docratedropfrommanualheli();
            return;
        }

        self.heli scripts\engine\utility::waittill_notify_or_timeout( "_encstr_A3750609A5E61883", 0.25 );

        if ( isdefined( self.crate ) && !istrue( self.crate.isdestroyed ) )
            thread docratedropfrommanualheli();

        if ( !isdefined( self.heli ) || istrue( self.heli.isdestroyed ) )
            return;

        self.heli scripts\engine\utility::waittill_notify_or_timeout( "_encstr_A3750609A5E61883", 0.5 );

        if ( !isdefined( self.heli ) || istrue( self.heli.isdestroyed ) )
            return;

        if ( distancesquared( self.heli.origin, self.exitposition ) > 5184 )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) )
            {
                if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) ]]() == "_encstr_9507034B25" )
                    self.heli vehicle_setspeed( 100, 60 );
                else
                    self.heli vehicle_setspeed( 150, 50 );
            }

            self.heli setvehgoalpos( self.exitposition, 1 );
            self.heli scripts\engine\utility::_id_143A5( "_encstr_A3750609A5E61883", "_encstr_AA7205F03A9609" );
        }
    }
}

docratedropfrommanualheli()
{
    var_0 = self.crate;
    self.crate.dropstruct = undefined;
    self.crate = undefined;
    var_0 infinite_chopper();
}

createcrateforscripteddrop( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 )
{
    var_11 = createcrate( var_0, var_1, var_2, var_8.origin, var_8.angles, var_3, var_4, var_5, var_6 );

    if ( !isdefined( var_11 ) )
        return undefined;

    var_11.scenenode = var_8;
    var_11.streakinfo = var_7;

    if ( !isdefined( var_8.crates ) )
        var_8.crates = [];

    var_8.crates[var_11 getentitynumber()] = var_11;
    var_11.friendlymodel setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_BECC05FC5321BA", 0 );

    if ( isdefined( var_11.enemymodel ) )
        var_11.enemymodel setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_BECC05FC5321BA", 0 );

    var_11.animname = var_9;
    var_11 scripts\common\anim::setanimtree();
    var_12 = level.scr_anim[var_9][var_10];
    var_13 = getanimlength( var_12 ) * 1000;
    var_11.animdroptime = gettime() + getnotetracktimes( var_12, "_encstr_AB591103EF13CF4A9350F22A08E3C9834B4098" )[0] * var_13;
    var_11.animstoptrailtime = gettime() + getnotetracktimes( var_12, "_encstr_8A9916D8C2C95907C2366D2CECCAEBA3C92C2D63BE95DC91" )[0] * var_13;
    var_11.animendtime = gettime() + var_13;
    var_8.latestanimendtime = scripts\engine\utility::ter_op( var_11.animendtime > var_8.latestanimendtime, var_11.animendtime, var_8.latestanimendtime );
    return var_11;
}

createchuteforscripteddrop( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_0.chutes ) )
        var_0.chutes = [];

    var_4 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0.origin );
    var_4.angles = var_0.origin;
    var_4.scenenode = var_0;
    var_4.crate = var_1;
    var_4.crateanimdroptime = var_1.animdroptime;
    var_0.chutes[var_4 getentitynumber()] = var_4;
    var_4 setmodel( "_encstr_9733233451834986081091111A5E120817C2436FEBE6A62A293A47063098D3AFF73A98B1F1" );
    var_4 setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_BECC05FC5321BA", 0 );
    var_4.animname = var_2;
    var_4 scripts\common\anim::setanimtree();
    var_5 = level.scr_anim[var_2][var_3];
    var_6 = getanimlength( var_5 ) * 1000;
    var_4.animendtime = gettime() + getanimlength( level.scr_anim[var_2][var_3] ) * 1000;
    var_4.animunhidetime = gettime() + getnotetracktimes( var_5, "_encstr_9E0A0D4A38936BE786DD0E30FBC9AF" )[0] * var_6;
    var_4.animendtime = gettime() + var_6;
    var_0.latestanimendtime = scripts\engine\utility::ter_op( var_4.animendtime > var_0.latestanimendtime, var_4.animendtime, var_0.latestanimendtime );
    return var_4;
}

destroychute()
{
    if ( isdefined( self.scenenode ) )
        self.scenenode.chutes[self getentitynumber()] = undefined;

    self delete();
}

dropcratefromscriptedheli( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_BE381AB62B5372E350B9317A639A74A7AB33A3B70A340AD6C26336C4" ) && scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_B4FD13B19078AFD718506FB112A36FAD43E07FBFCD" ) )
    {
        if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_BE381AB62B5372E350B9317A639A74A7AB33A3B70A340AD6C26336C4" ) ]]() >= [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_B4FD13B19078AFD718506FB112A36FAD43E07FBFCD" ) ]]() )
            return undefined;
    }

    var_8 = getcratedropcaststart( var_3, 1 );
    var_9 = var_4 * ( 0, 1, 0 );

    if ( !isdefined( var_5 ) )
    {
        var_5 = getcratedropdestination( var_8, getcratedropcastend( var_8, 1 ) );

        if ( !isdefined( var_5 ) )
            return undefined;
    }

    var_10 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_8 );
    var_10.angles = var_9;
    var_10 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_10.owner = var_0;
    var_10.team = var_1;
    var_10.hasowner = isdefined( var_0 );
    var_11 = undefined;

    if ( isdefined( var_6 ) )
        var_11 = var_6.vehicleisreserved;

    var_12 = createheli( var_0, var_1, var_8, var_9, var_11, var_7 );

    if ( !isdefined( var_12 ) )
    {
        var_10 delete();
        return undefined;
    }

    var_12.scenenode = var_12;
    var_12 setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_BECC05FC5321BA", 0 );
    var_12.animname = "_encstr_80F3123208E5A787FB5F8B8B6721576179B04AEA";
    var_10.heli = var_12;
    var_10.heliendtime = gettime() + getanimlength( level.scr_anim["_encstr_80F3123208E5A787FB5F8B8B6721576179B04AEA"]["_encstr_8F541232293E9FD990DB4343F33B1F2F6D238A8B"] ) * 1000;
    var_10.latestanimendtime = var_10.heliendtime;
    var_13 = createcrateforscripteddrop( var_0, var_1, var_2, var_5, undefined, 0, var_6, var_7, var_10, "_encstr_98E50D36B03956BE1C851BDAC2D9CA", "_encstr_8F541232293E9FD990DB4343F33B1F2F6D238A8B" );

    if ( !isdefined( var_13 ) )
        return undefined;

    var_14 = createchuteforscripteddrop( var_10, var_13, "_encstr_B696139AA04DFFDF9327F3E3CF99FF899743636338", "_encstr_8F541232293E9FD990DB4343F33B1F2F6D238A8B" );

    if ( !isdefined( var_14 ) )
        return undefined;

    var_14 setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_BECC05FC5321BA", 0 );
    var_10 thread watchdropcratefromscriptedheli();
    return var_10;
}

watchdropcratefromscriptedheli()
{
    self endon( "_encstr_A3750609A5E61883" );
    scripts\common\anim::anim_first_frame_solo( self.heli, "_encstr_8F541232293E9FD990DB4343F33B1F2F6D238A8B" );

    foreach ( var_1 in self.crates )
        scripts\common\anim::anim_first_frame_solo( var_1, "_encstr_8F541232293E9FD990DB4343F33B1F2F6D238A8B" );

    foreach ( var_4 in self.chutes )
        scripts\common\anim::anim_first_frame_solo( var_4, "_encstr_8F541232293E9FD990DB4343F33B1F2F6D238A8B" );

    watchdropcratefromscriptedheliinternal();

    if ( isdefined( self.heli ) )
        self.heli thread destroyheli();

    foreach ( var_1 in self.crates )
    {
        if ( isdefined( var_1 ) )
            var_1 thread destroycrate();
    }

    foreach ( var_4 in self.chutes )
    {
        if ( isdefined( var_4 ) )
            var_4 thread destroychute();
    }

    self delete();
}

watchdropcratefromscriptedheliinternal()
{
    var_0 = undefined;

    while ( gettime() <= self.latestanimendtime )
    {
        if ( self.hasowner )
        {
            if ( !isdefined( self.ownerdisconnected ) )
            {
                if ( isdefined( self.owner ) )
                {
                    if ( !isdefined( self.ownerjoinedteam ) )
                    {
                        if ( self.team != self.owner.team )
                            self.ownerjoinedteam = 1;
                    }
                }
                else
                    self.ownerdisconnected = 1;
            }
        }

        if ( !isdefined( var_0 ) )
            var_0 = 1;
        else if ( var_0 )
        {
            if ( isdefined( self.heli ) )
            {
                self.heli setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_B7180526C81F4B", 0 );
                self.heli setscriptablepartstate( "_encstr_B38A07C696D9A13ACD", "_encstr_B30B07E216CBFFC4C2", 1 );
                thread scripts\common\anim::anim_single_solo( self.heli, "_encstr_8F541232293E9FD990DB4343F33B1F2F6D238A8B" );
            }

            foreach ( var_2 in self.crates )
            {
                if ( isdefined( var_2 ) )
                {
                    var_2.friendlymodel setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_B7180526C81F4B", 0 );

                    if ( isdefined( var_2.enemymodel ) )
                        var_2.enemymodel setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_B7180526C81F4B", 0 );

                    thread scripts\common\anim::anim_single_solo( var_2, "_encstr_8F541232293E9FD990DB4343F33B1F2F6D238A8B" );
                }
            }

            foreach ( var_5 in self.chutes )
            {
                if ( isdefined( var_5 ) )
                    thread scripts\common\anim::anim_single_solo( var_5, "_encstr_8F541232293E9FD990DB4343F33B1F2F6D238A8B" );
            }

            var_0 = 0;
        }
        else
        {
            var_7 = istrue( self.ownerdisconnected ) || istrue( self.ownerjoinedteam );

            if ( isdefined( self.heli ) )
            {
                if ( var_7 || gettime() > self.heliendtime )
                    self.heli destroyheli();
            }

            foreach ( var_2 in self.crates )
            {
                if ( isdefined( var_2 ) )
                {
                    if ( gettime() > var_2.animendtime )
                    {
                        if ( var_7 )
                            var_2 thread destroycrate();

                        thread docratedropfromscripted( var_2 );
                        continue;
                    }

                    if ( gettime() > var_2.animdroptime )
                    {
                        if ( gettime() > var_2.animstoptrailtime )
                        {
                            var_2.friendlymodel setscriptablepartstate( "_encstr_89A606647398D382", "_encstr_9BA4080D39CFFB5AB7C1", 1 );

                            if ( isdefined( var_2.enemymodel ) )
                                var_2.enemymodel setscriptablepartstate( "_encstr_89A606647398D382", "_encstr_9BA4080D39CFFB5AB7C1", 1 );
                        }
                        else
                        {
                            var_2.friendlymodel setscriptablepartstate( "_encstr_89A606647398D382", "_encstr_B30B07E216CBFFC4C2", 1 );

                            if ( isdefined( var_2.enemymodel ) )
                                var_2.enemymodel setscriptablepartstate( "_encstr_89A606647398D382", "_encstr_B30B07E216CBFFC4C2", 1 );
                        }

                        if ( var_7 )
                            var_2 thread destroycrate();

                        continue;
                    }

                    if ( var_7 )
                    {
                        var_2 thread destroycrate();
                        continue;
                    }

                    if ( !isdefined( self.heli ) || istrue( self.heli.isdestroyed ) )
                        thread docratedropfromscripted( var_2 );
                }
            }

            foreach ( var_5 in self.chutes )
            {
                if ( isdefined( var_5 ) )
                {
                    if ( gettime() > var_5.animendtime )
                    {
                        var_5 thread destroychute();
                        continue;
                    }

                    if ( gettime() <= var_5.crateanimdroptime && ( !isdefined( var_5.crate ) || !isdefined( self.crates[var_5.crate getentitynumber()] ) ) )
                    {
                        var_5 thread destroychute();
                        continue;
                    }

                    if ( gettime() > var_5.animunhidetime )
                        var_5 setscriptablepartstate( "_encstr_A9430BE4892FC82DB432B0A09B", "_encstr_B7180526C81F4B", 0 );
                }
            }
        }

        waitframe();
    }
}

docratedropfromscripted( var_0 )
{
    var_0.scenenode = undefined;
    self.crates[var_0 getentitynumber()] = undefined;
    var_0.animname = undefined;
    var_0.animendtime = undefined;
    var_0.animdroptime = undefined;
    var_0.animstoptrailtime = undefined;
    var_0 notify( "_encstr_B97F0ECEE84A4368F0E8FBC2E053593C" );
    var_0 stopanimscripted();
    var_0 infinite_chopper();
}

getcratedropcaststart( var_0, var_1 )
{
    var_2 = undefined;

    if ( istrue( var_1 ) )
        var_2 = var_0 * ( 1, 1, 0 ) + ( 0, 0, getscriptedhelidropheight() );
    else
        var_2 = var_0 + ( 0, 0, 25 );

    return var_2;
}

getcratedropcastend( var_0, var_1 )
{
    return var_0 + ( 0, 0, -1 * scripts\engine\utility::ter_op( istrue( var_1 ), 8000, 8000 ) );
}

getcratedropdestination( var_0, var_1 )
{
    var_2 = undefined;
    var_3 = physics_createcontents( [ "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_941116D7F47B0FC88317C8B07BCC017DD35AD8D44D52D773", "_encstr_A18816F8C3E1EFFCFF5A92BF8363BBF55BCBD9C3538DF74D", "_encstr_B7F9145B18AB8AF721FE235718AB8F95E96811E39843", "_encstr_9DD6156A78B803FAD687D7EF95056246B86329B453E0D5" ] );
    var_4 = getcratedropignorelist();
    var_5 = physics_raycast( var_0, var_1, var_3, var_4, 0, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3", 1 );

    if ( isdefined( var_5 ) && var_5.size > 0 )
        var_2 = var_5[0]["_encstr_B7260923C89E8F3378E72E"];

    return var_2;
}

getcratedropignorelist()
{
    if ( isdefined( level.cratedata.helis ) && isdefined( level.cratedata.ac130s ) )
        return scripts\engine\utility::array_combine_multiple( [ level.cratedropdata.helis, level.cratedropdata.ac130s, level.cratedata.crates ] );
    else
        return scripts\engine\utility::array_combine_multiple( [ level.cratedropdata.helis, level.cratedata.crates ] );
}

createheli( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = undefined;
    var_7 = "_encstr_BA6717039A6BDB39E5D16917C1CC18D0C3421B69539FA090FA";

    if ( isdefined( var_0 ) && scripts\cp_mp\utility\player_utility::getplayersuperfaction( var_0 ) )
        var_7 = "_encstr_A9901C3B2BEB5F87B8E0DD6999E0D261B1BDA3DFA580D175F08BD3613083";

    if ( istrue( var_4 ) )
        scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();

    if ( isdefined( var_0 ) )
        var_6 = scripts\cp_mp\vehicles\vehicle_tracking::_spawnhelicopter( var_0, var_2, var_3, "_encstr_93930F6B1F3351B983929022655110C88B", var_7 );
    else
        var_6 = scripts\cp_mp\vehicles\vehicle_tracking::_spawnhelicopter( level.players[randomint( level.players.size )], var_2, var_3, "_encstr_93930F6B1F3351B983929022655110C88B", var_7 );

    if ( !isdefined( var_6 ) )
        return undefined;

    if ( !isdefined( var_1 ) )
        var_1 = "_encstr_9BA4080D39CFFB5AB7C1";

    if ( var_1 != "_encstr_9BA4080D39CFFB5AB7C1" )
        var_6 setvehicleteam( var_1 );

    var_6.owner = var_0;
    var_6.team = var_1;
    var_8 = undefined;
    var_9 = undefined;
    var_10 = undefined;

    if ( isdefined( level.heliconfigs ) )
    {
        var_11 = level.heliconfigs["_encstr_9867080A50FD0FDBE03F"];
        var_6.health = var_11.maxhealth;
        var_8 = var_11.callout;
        var_9 = var_11.vodestroyed;
        var_10 = var_11.scorepopup;
    }
    else
        var_6.health = 999999;

    var_6.helitype = "_encstr_9867080A50FD0FDBE03F";

    if ( isdefined( var_0 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_9F1B1AA9C213557B261381B32E1719839BDA6373CB4F77E88DE197B1" ) )
            var_6 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_9F1B1AA9C213557B261381B32E1719839BDA6373CB4F77E88DE197B1" ) ]]( "_encstr_9867080A50FD0FDBE03F", "_encstr_B2860FEF13897ACB10E3FFC6F871C1E25E", var_0, 0, 0 );

        if ( var_1 != "_encstr_9BA4080D39CFFB5AB7C1" )
            var_6 scripts\mp\sentientpoolmanager::registersentient( "_encstr_B2860FEF13897ACB10E3FFC6F871C1E25E", var_0 );
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_9B6B1603F76C8DFBEB22F9E7B029E18C071D9354B4BEC907" ) )
        var_6 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_9B6B1603F76C8DFBEB22F9E7B029E18C071D9354B4BEC907" ) ]]( "_encstr_93930F6B1F3351B983929022655110C88B", var_10, var_9, undefined, var_8 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_982C226DD28DB1DCE839CA0BB6A62BA3419C59D4F6918816B6857695A1851BD8C40B1BB5" ) )
        var_6 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_982C226DD28DB1DCE839CA0BB6A62BA3419C59D4F6918816B6857695A1851BD8C40B1BB5" ) ]]( "_encstr_93930F6B1F3351B983929022655110C88B" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_AA8E233AD44A51EBF4B35860CF0BE1A931FDAE3DA5121935C9277058DF7339211A262FCE84" ) )
        var_6 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_AA8E233AD44A51EBF4B35860CF0BE1A931FDAE3DA5121935C9277058DF7339211A262FCE84" ) ]]( "_encstr_93930F6B1F3351B983929022655110C88B" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_80C31B408A05F94BFB42858F231FF18167D298A332161B60B37A9FF60B" ) )
        var_6 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_80C31B408A05F94BFB42858F231FF18167D298A332161B60B37A9FF60B" ) ]]( "_encstr_93930F6B1F3351B983929022655110C88B", ::destroyhelicallback );

    var_6 setcandamage( 0 );
    var_6 thread watchhelidestroyearly();
    return var_6;
}

watchhelidestroyearly()
{
    self endon( "_encstr_A3750609A5E61883" );
    watchhelidestroyearlyinternal();
    thread destroyheli();
}

watchhelidestroyearlyinternal()
{
    self endon( "_encstr_A3750609A5E61883" );

    if ( isdefined( self.owner ) )
    {
        self.owner endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
        self.owner endon( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
        self.owner endon( "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
    }

    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level waittill( "_encstr_97A00833BD9395CE5993" );
}

destroyheli()
{
    thread deleteheli( 0 );
}

deleteheli( var_0 )
{
    self notify( "_encstr_A3750609A5E61883" );
    self.isdestroyed = 1;

    if ( isdefined( self.scenenode ) )
    {
        self.scenenode.heli = undefined;
        self.scenenode = undefined;
    }

    removehelidroppingcratefromlist( self getentitynumber() );
    wait( var_0 );
    scripts\cp_mp\vehicles\vehicle_tracking::_deletevehicle( self );
}

destroyhelicallback( var_0 )
{
    destroyheli();
}

getscriptedhelidropheightbase()
{
    return level.cratedropdata.heliheight;
}

getscriptedhelidropheight()
{
    return getscriptedhelidropheightbase() + level.cratedropdata.helis.size * level.cratedropdata.heliheightoffset;
}

addhelidroppingcratetolist( var_0 )
{
    var_1 = var_0 getentitynumber();
    level.cratedropdata.helis[var_1] = var_0;
}

removehelidroppingcratefromlist( var_0 )
{
    level.cratedropdata.helis[var_0] = undefined;
}

makecrateusable()
{
    var_0 = getleveldata( self.cratetype );

    if ( istrue( var_0.hasnointeraction ) )
        return;

    level.cratedata.usablecrates[self getentitynumber()] = self;
    self.isusable = 1;

    if ( var_0.supportsownercapture && var_0.supportsothercapture )
    {
        thread watchcrateuse( 1 );
        var_1 = self.useobject;

        if ( !isdefined( var_1 ) )
        {
            var_1 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self gettagorigin( var_0.usetag ) );
            var_1 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
            var_1 linkto( self );
            var_1 makeunusable();
            self.useobject = var_1;
        }

        thread watchcrateuse( 2, var_1 );
    }
    else if ( var_0.supportsownercapture )
        thread watchcrateuse( 1 );
    else
        thread watchcrateuse( 2 );
}

watchcrateuse( var_0, var_1 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_AF24128921EFE9CFD242F84839ED6BE31FCA8175" );

    if ( isdefined( var_1 ) )
        var_1 endon( "_encstr_A3750609A5E61883" );

    if ( var_0 == 1 )
    {
        self.owner endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
        self.owner endon( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
        self.owner endon( "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
        self.owner.unset_relic_ammo_drain = 1;
    }

    var_2 = getleveldata( self.cratetype );
    var_3 = gettriggerobject( var_1 );
    var_3.usetype = var_0;
    var_3 setcursorhint( "_encstr_939A0CEC70DBF521459F5B47F73D" );
    var_3 sethintonobstruction( "_encstr_B7180526C81F4B" );
    var_3 sethinttag( var_2.usetag );
    var_3 sethintdisplayrange( var_2.userange );
    var_3 sethintdisplayfov( var_2.usefov );
    var_3 setuserange( var_2.userange );
    var_3 setusefov( var_2.usefov );
    var_3 setusepriority( var_2.usepriority );
    var_3 setuseholdduration( "_encstr_88C20E3998B33933533F7207B8280675" );

    if ( var_3.usetype == 1 && self.supportsreroll )
        var_3 sethintstring( self.rerollstring );
    else
        var_3 sethintstring( self.capturestring );

    var_3.userate = 1;
    var_3.curprogress = 0;

    if ( isdefined( var_3._id_140A0 ) )
        var_3.usetime = var_3._id_140A0;
    else if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) )
        var_3.usetime = scripts\engine\utility::ter_op( var_0 == 1, var_2.ownerusetime, var_2.otherusetime );

    var_3.inuse = 0;
    var_3.playerusing = undefined;

    for (;;)
    {
        var_3 waittill( "_encstr_8B5C081B58E0B7A213E6", var_4 );

        if ( level.gametype == "_encstr_9507034B25" )
        {
            if ( self.cratetype == "_encstr_A81A191238309BD1CFC64AD7A93731C041FC6711D721BA9AA23DE8" )
            {
                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_A9D313B84A46FB6CFF57849929B317A32EB2D088F2" ) )
                {
                    var_5 = var_4 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_A9D313B84A46FB6CFF57849929B317A32EB2D088F2" ) ]]();

                    if ( var_5 )
                    {
                        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) )
                            var_4 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) ]]( "_encstr_AA29228274E0B9774C5B2109D7A3E54D996F0C309B28EBFC1F1F19399F9A051340449535" );

                        continue;
                    }
                }
            }

            if ( istrue( var_4.isjuggernaut ) && !var_4 vehicle_isfriendlytoplayer( self.cratetype ) )
            {
                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) )
                    var_4 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) ]]( "_encstr_8C23201BC3314517752F3860142E2E0C01378F876FF19D1B90C791583DAF9F3229A9" );

                continue;
            }
        }

        if ( canstartusingcrate( var_4, var_1 ) )
        {
            startusingcrate( var_4, var_1 );
            var_4.unset_relic_ammo_drain = 1;
            var_3.playerusing = var_4;
            var_6 = watchcrateuseinternal( var_4, var_1 );

            if ( isdefined( var_4 ) )
                stopusingcrate( var_4, var_1 );

            var_3.playerusing = undefined;

            if ( istrue( var_6 ) )
            {
                if ( isdefined( var_4 ) )
                    var_4.unset_relic_ammo_drain = 0;

                if ( var_2.onecaptureperplayer && self.cratetype != "_encstr_B4D516C9DEFC28B9C2E7457757AAF1F8BFF51021075FE86D" )
                {
                    if ( !isdefined( self.playerscaptured ) )
                        self.playerscaptured = [];

                    self.playerscaptured[var_4 getentitynumber()] = var_4;
                }

                if ( !isdefined( self.targetname ) || self.targetname != "_encstr_B68B185E73BAD7A90CDF68B1834A2DFB029A4B488C2257B0ECE7" )
                    thread capturecrate( var_4 );
            }
        }
    }
}

watchcrateuseinternal( var_0, var_1 )
{
    var_2 = gettriggerobject( var_1 );

    if ( var_2.usetype != 1 )
    {
        var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
        var_0 endon( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
        var_0 endon( "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
    }

    var_2.id = "_encstr_98E50D36B03956BE1C851BDAC2D9CA";
    var_2.userate = scripts\engine\utility::ter_op( isdefined( var_0.objectivescaler ), var_0.objectivescaler, 1 );
    playusesound( var_0, var_1 );

    while ( isdefined( var_0 ) && var_0 scripts\cp_mp\utility\player_utility::_isalive() && cankeepusingcrate( var_0, var_1 ) && var_0 usebuttonpressed() )
    {
        var_2.curprogress = var_2.curprogress + level.framedurationseconds * var_2.userate;

        if ( var_2.curprogress >= var_2.usetime )
        {
            var_2.curprogress = 0.0;
            return 1;
        }

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_8FDE11208B97531B0FF50387CA7F213DBFC398" ) )
            var_0 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_8FDE11208B97531B0FF50387CA7F213DBFC398" ) ]]( var_2, 1 );

        waitframe();
    }

    var_2.curprogress = 0.0;
    return 0;
}

makecrateunusable()
{
    self notify( "_encstr_AF24128921EFE9CFD242F84839ED6BE31FCA8175" );
    level.cratedata.usablecrates[self getentitynumber()] = undefined;
    self.isusable = 0;

    if ( isdefined( self.playerusing ) )
        stopusingcrate( self.playerusing );

    self.playerusing = undefined;
    self makeunusable();

    if ( isdefined( self.useobject ) )
    {
        if ( isdefined( self.useobject.playerusing ) )
            stopusingcrate( self.useobject.playerusing, self.useobject );

        self.useobject makeunusable();
    }
}

startusingcrate( var_0, var_1 )
{
    var_2 = gettriggerobject( var_1 );
    var_3 = getleveldata( self.cratetype );

    if ( istrue( var_0.isjuggernaut ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_8BD90FB08DB1DEEE281BD1D2DE9B3595D1" ) )
            var_0 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_8BD90FB08DB1DEEE281BD1D2DE9B3595D1" ) ]]( "_encstr_AD3B0D723DD7A1D7CA4AC04021A243", 0 );
    }
    else
    {
        var_4 = getdvarint( "_encstr_B1CD17C7CF3EF161B0BBFF7A305097EB166BEF5FBBEF4B5750", 1 );

        if ( var_4 )
            var_0 thread br_bunker_alt();

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_8BD90FB08DB1DEEE281BD1D2DE9B3595D1" ) )
            var_0 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_8BD90FB08DB1DEEE281BD1D2DE9B3595D1" ) ]]( "_encstr_938C09DB8E9963F70338CA", 0 );
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_8FDE11208B97531B0FF50387CA7F213DBFC398" ) )
        var_0 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_8FDE11208B97531B0FF50387CA7F213DBFC398" ) ]]( var_2, 0 );
}

br_bunker_alt()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\cp_mp\utility\weapon_utility::_id_12EB2();
    var_0 = getcompleteweaponname( "_encstr_9CFD10FB7769CB572D4E9A9391FD47098019" );
    scripts\cp_mp\utility\inventory_utility::_giveweapon( var_0 );
    thread br_checkforlaststandfinish( var_0 );
    self switchtoweapon( var_0 );
}

br_checkforlaststandfinish( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self waittill( "_encstr_9DE70E410BAF1D08C96DF7C35FAF98ED" );

    if ( scripts\cp_mp\utility\inventory_utility::isswitchingtoweaponwithmonitoring( var_0 ) )
        scripts\cp_mp\utility\inventory_utility::abortmonitoredweaponswitch( var_0 );
    else
    {
        scripts\cp_mp\utility\inventory_utility::_takeweapon( var_0 );

        if ( isdefined( self.lastdroppableweaponobj ) )
        {
            var_1 = scripts\cp_mp\utility\weapon_utility::_id_12CC7( self.lastdroppableweaponobj );
            self switchtoweapon( var_1 );
            thread scripts\cp_mp\utility\inventory_utility::forcevalidweapon( var_1 );
        }
    }
}

stopusingcrate( var_0, var_1 )
{
    var_2 = gettriggerobject( var_1 );
    var_3 = getleveldata( self.cratetype );

    if ( istrue( var_0.isjuggernaut ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_8BD90FB08DB1DEEE281BD1D2DE9B3595D1" ) )
            var_0 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_8BD90FB08DB1DEEE281BD1D2DE9B3595D1" ) ]]( "_encstr_AD3B0D723DD7A1D7CA4AC04021A243", 1 );
    }
    else if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_8BD90FB08DB1DEEE281BD1D2DE9B3595D1" ) )
        var_0 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_8BD90FB08DB1DEEE281BD1D2DE9B3595D1" ) ]]( "_encstr_938C09DB8E9963F70338CA", 1 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_8FDE11208B97531B0FF50387CA7F213DBFC398" ) )
        var_0 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_8FDE11208B97531B0FF50387CA7F213DBFC398" ) ]]( var_2, 0 );

    stopusesound( var_0, var_1 );
    var_0 notify( "_encstr_9DE70E410BAF1D08C96DF7C35FAF98ED" );
}

canstartusingcrate( var_0, var_1, var_2 )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_B90B18CD38B2B1962CC60DC29BCAD736C29B55CD5986C9168EB2" ) )
    {
        if ( !var_0 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_B90B18CD38B2B1962CC60DC29BCAD736C29B55CD5986C9168EB2" ) ]]() )
            return 0;
    }

    if ( !var_0 scripts\common\utility::is_crate_use_allowed() )
        return 0;

    if ( !var_0 scripts\cp_mp\utility\player_utility::_isalive() )
        return 0;

    if ( var_0 isonladder() )
        return 0;

    if ( isdefined( self.playerscaptured ) && isdefined( self.playerscaptured[var_0 getentitynumber()] ) )
        return 0;

    if ( istrue( self.issquadonlycrate ) )
    {
        if ( isdefined( self.playersused ) && scripts\engine\utility::array_contains( self.playersused, var_0 ) )
            return 0;

        if ( var_0.squadindex != self.squadindex || var_0.team != self.team )
            return 0;
    }

    if ( istrue( self.validate_station ) )
    {
        if ( isdefined( self.playersused ) && scripts\engine\utility::array_contains( self.playersused, var_0 ) )
            return 0;

        if ( var_0.team != self.team )
            return 0;
    }

    if ( isbot( var_0 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_A9EA1989F6E8A43769D236B16E8EC9CAB0B6A9570E83BD9C3A5932" ) )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) )
            {
                if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AD420C8425BBCCC1B5ABC36B921B" ) ]]() != "_encstr_BC7205C8ABFDE7" && ![[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_A9EA1989F6E8A43769D236B16E8EC9CAB0B6A9570E83BD9C3A5932" ) ]]( self.cratetype ) )
                    return 0;
            }
        }

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_A1A61B1053DA7FB00267D17BA7A1FF5691B5F7074BF23118E3D5E86CC0" ) )
        {
            if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_A1A61B1053DA7FB00267D17BA7A1FF5691B5F7074BF23118E3D5E86CC0" ) ]]( self.cratetype ) )
                return 0;
        }
    }

    if ( !self.isusable )
        return 0;

    if ( !isdefined( var_2 ) )
        var_2 = 1;

    if ( var_2 )
        return canstartusingcratetriggerobject( var_0, var_1 );

    if ( level.gametype == "_encstr_9507034B25" && var_0 isskydiving() )
        return 0;

    if ( istrue( var_0.inlaststand ) )
        return 0;

    return 1;
}

canstartusingcratetriggerobject( var_0, var_1 )
{
    var_2 = gettriggerobject( var_1 );

    if ( isdefined( var_2.playerusing ) && var_2.playerusing != var_0 )
        return 0;

    if ( var_2.usetype == 1 && ( !isdefined( self.owner ) || var_0 != self.owner ) )
        return 0;

    if ( var_2.usetype == 2 && ( isdefined( self.owner ) && var_0 == self.owner ) )
        return 0;

    if ( level.teambased && isdefined( self.team ) && self.team != "_encstr_9BA4080D39CFFB5AB7C1" )
    {
        var_3 = getleveldata( self.cratetype );

        if ( var_3.friendlyuseonly && var_0.team != self.team )
            return 0;
    }

    return 1;
}

cankeepusingcrate( var_0, var_1 )
{
    if ( !scripts\common\utility::is_crate_use_allowed() )
        return 0;

    if ( !var_0 scripts\cp_mp\utility\player_utility::_isalive() )
        return 0;

    if ( var_0 meleebuttonpressed() )
        return 0;

    if ( var_0 isinexecutionvictim() )
        return 0;

    if ( istrue( var_0.inlaststand ) )
        return 0;

    var_2 = getleveldata( self.cratetype );

    if ( isdefined( var_2.breakuserangesqr ) && distancesquared( var_0.origin, gettriggerobject( var_1 ).origin ) >= var_2.breakuserangesqr )
        return 0;

    if ( !self.isusable )
        return 0;

    return 1;
}

_id_11A9C( var_0, var_1 )
{
    var_0 enableplayeruse( var_1 );

    if ( isdefined( var_0.useobject ) )
        var_0.useobject enableplayeruse( var_1 );

    if ( !var_0 canstartusingcrate( var_1, var_0.useobject, 0 ) )
    {
        var_0 disableplayeruse( var_1 );

        if ( isdefined( var_0.useobject ) )
            var_0.useobject disableplayeruse( var_1 );
    }
    else
    {
        if ( !var_0 canstartusingcratetriggerobject( var_1, undefined ) )
            var_0 disableplayeruse( var_1 );

        if ( isdefined( var_0.useobject ) )
        {
            if ( !var_0 canstartusingcratetriggerobject( var_1, var_0.useobject ) )
                var_0.useobject disableplayeruse( var_1 );
        }
    }
}

_id_14485()
{
    for (;;)
    {
        foreach ( var_1 in level.cratedata.usablecrates )
        {
            if ( !isdefined( var_1 ) )
            {
                thread scripts\engine\utility::error( "_encstr_AF0B278798734BCD50BBB93F9098BBB18A2FFA6766C5DFF94BB37A3CE1CAB5E2C8333A9B869CC1228D" );
                continue;
            }

            var_1 makeusable();
            var_1 activatekeypressed();

            if ( isdefined( var_1.useobject ) )
            {
                var_1.useobject makeusable();
                var_1.useobject activatekeypressed();
            }

            var_2 = level.players;

            if ( level.teambased && isdefined( var_1.team ) && var_1.team != "_encstr_9BA4080D39CFFB5AB7C1" )
            {
                var_3 = getleveldata( var_1.cratetype );

                if ( var_3.friendlyuseonly )
                    var_2 = level.teamdata[var_1.team]["_encstr_A31C0D41AACF5C484A3493BB25AAB0"];
            }

            foreach ( var_5 in var_2 )
            {
                var_6 = distancesquared( var_1.origin, var_5.origin ) < 57600.0;

                if ( var_6 )
                    _id_11A9C( var_1, var_5 );
            }
        }

        wait 0.1;
    }
}

watchallcrateusability()
{
    if ( getdvarint( "_encstr_B65F1FD753B2D197873B9943F23B40D08EBB5117ED5A786EFB62F669CB578DB0A2", 0 ) )
    {
        thread _id_14485();
        return;
    }

    for (;;)
    {
        foreach ( var_1 in level.cratedata.usablecrates )
        {
            if ( !isdefined( var_1 ) )
            {
                thread scripts\engine\utility::error( "_encstr_AF0B278798734BCD50BBB93F9098BBB18A2FFA6766C5DFF94BB37A3CE1CAB5E2C8333A9B869CC1228D" );
                continue;
            }

            var_1 makeusable();

            if ( isdefined( var_1.useobject ) )
                var_1.useobject makeusable();

            foreach ( var_3 in level.players )
                _id_11A9C( var_1, var_3 );
        }

        wait 0.1;
    }
}

playusesound( var_0, var_1 )
{
    var_2 = gettriggerobject( var_1 );

    if ( var_2.usetype == 1 )
        var_0 playloopsound( "_encstr_B6221A982A67208F63DFEFB9E75AC288F7C74650138ED83EE9BF8B81" );
    else
        var_0 playloopsound( "_encstr_93AC1EF527098F360A81BE87B9CA0212F8B5160A1F4230F8B37BCA8B41FB875B" );
}

stopusesound( var_0, var_1 )
{
    var_2 = gettriggerobject( var_1 );

    if ( var_2.usetype == 1 )
        var_0 stoploopsound( "_encstr_B6221A982A67208F63DFEFB9E75AC288F7C74650138ED83EE9BF8B81" );
    else
        var_0 stoploopsound( "_encstr_93AC1EF527098F360A81BE87B9CA0212F8B5160A1F4230F8B37BCA8B41FB875B" );

    if ( var_0 scripts\cp_mp\utility\player_utility::_isalive() )
        var_0 playsoundonmovingent( "_encstr_8212193563910B7266932F8B83869A4128A9213EF940EFDB37A3EB" );
}

gettriggerobject( var_0 )
{
    return scripts\engine\utility::ter_op( isdefined( var_0 ), var_0, self );
}

infinite_chopper( var_0, var_1 )
{
    var_2 = getleveldata( self.cratetype );

    if ( isdefined( var_2.ingame ) )
        self thread [[ var_2.ingame ]]();

    if ( !isdefined( var_0 ) )
        var_0 = ( 0, 0, 0 );

    if ( !isdefined( var_1 ) )
        var_1 = ( 0, 0, 0 );

    self unlink();
    self physicslaunchserver( var_0, var_1 );
    var_3 = self physics_getbodyid( 0 );
    physics_setbodycenterofmassnormal( var_3, ( 0, 0, -1 ) );
    self.physicsactivated = 1;
    createdangerzone();
    thread _id_11CFE();
    thread _id_11D0B();
    thread _id_11D17();
}

infilweaponraise()
{
    if ( !istrue( self.physicsactivated ) )
        return;

    self.physicsactivated = undefined;
    self._id_12332 = undefined;
    self physicsstopserver();
    headicon_z_offset();
    _id_11D0C();
    _id_11D18();
    generatecodestoshow();
}

_id_11CFE()
{
    self endon( "_encstr_A3750609A5E61883" );
    self notify( "_encstr_B373202D2F4DF2D985DA3F6095C62F372B1D984538CE634330C7B8B2FBD0D51953FF" );
    self endon( "_encstr_B373202D2F4DF2D985DA3F6095C62F372B1D984538CE634330C7B8B2FBD0D51953FF" );
    var_0 = 0.1;
    thread _id_11CFD( var_0, 8 );
    var_1 = 0;
    var_2 = 0;
    self.unset_relic_amped = 1;
    var_3 = undefined;
    var_4 = undefined;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_9E79101BE03691590BA35D4EB21D0BA359C8" ) )
        var_4 = scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_9E79101BE03691590BA35D4EB21D0BA359C8" );

    for (;;)
    {
        var_5 = registeronplayerjointeamnospectatorcallback();
        var_6 = registeronplayerdisconnect();

        if ( isdefined( var_5 ) && isdefined( var_6 ) )
        {
            if ( var_5 <= 5.0 && var_6 <= 1.0 )
            {
                var_1++;
                var_2 = 0;

                if ( var_1 == 6 )
                {
                    self._id_12332 = 1;
                    var_3 = self.origin;
                    thread activatecrate( self.unset_relic_amped );

                    if ( isdefined( var_4 ) && [[ var_4 ]]() )
                    {
                        _id_11D0C();

                        if ( isdefined( self.killcament ) )
                            self.killcament delete();
                    }

                    var_0 = 0.1;
                    thread _id_11CFD( var_0, 3, 3 );
                    lb_mg_dmg_factor_tail_rotor();
                }
            }
            else
            {
                if ( isdefined( var_3 ) )
                {
                    if ( distancesquared( self.origin, var_3 ) <= 2500 )
                    {
                        wait( var_0 );
                        continue;
                    }
                }

                var_2++;
                var_1 = 0;

                if ( var_2 == 1 )
                {
                    self._id_12332 = undefined;
                    thread deactivatecrate();
                    var_0 = 0.1;
                    thread _id_11CFD( var_0, 8 );
                }
            }

            wait( var_0 );
            continue;
        }

        waitframe();
    }
}

_id_11CFD( var_0, var_1, var_2 )
{
    headicon_z_offset();
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_BE8F191B36951639FAB0B32BE40BD959BED9B236EDB14BE85AB2B9" );
    self.x1ops2 = [];
    self.buildrespawnlist = [];
    self._id_1428A = 0;
    self._id_14285 = 0;
    self._id_14287 = var_1;

    if ( isdefined( var_2 ) )
    {
        var_2 = int( clamp( var_2, 0, var_1 ) );

        if ( var_2 > 0 )
        {
            for ( var_3 = 0; var_3 < var_2; var_3++ )
            {
                self.x1ops2[self._id_1428A + var_3] = 0;
                self.buildrespawnlist[self._id_1428A + var_3] = 0;
            }
        }
    }

    for (;;)
    {
        var_4 = self physics_getbodyid( 0 );
        var_5 = physics_getbodylinvel( var_4 );
        var_6 = physics_getbodyangvel( var_4 );
        self.x1ops2[self._id_14285] = length( var_5 );
        self.buildrespawnlist[self._id_14285] = length( var_6 );
        self._id_14285++;
        var_7 = self._id_14285 - self._id_1428A;

        if ( var_7 > var_1 )
        {
            var_8 = scripts\engine\utility::mod( var_7, var_1 );

            for ( var_3 = 0; var_3 < var_8; var_3++ )
            {
                self.x1ops2[self._id_1428A + var_3] = undefined;
                self.buildrespawnlist[self._id_1428A + var_3] = undefined;
            }

            self._id_1428A = self._id_1428A + var_8;
        }

        self.checkrequiredteamstreamcount = undefined;
        self.checkreload = undefined;
        wait( var_0 );
    }
}

registeronplayerjointeamnospectatorcallback()
{
    if ( isdefined( self.checkrequiredteamstreamcount ) )
        return self.checkrequiredteamstreamcount;

    if ( !isdefined( self.x1ops2 ) )
        return undefined;

    if ( self._id_14285 - self._id_1428A < self._id_14287 )
        return undefined;

    forcestuckdamageclear();
    return self.checkrequiredteamstreamcount;
}

registeronplayerdisconnect()
{
    if ( isdefined( self.checkreload ) )
        return self.checkreload;

    if ( !isdefined( self.buildrespawnlist ) )
        return undefined;

    if ( self._id_14285 - self._id_1428A < self._id_14287 )
        return undefined;

    forcestuckdamageclear();
    return self.checkreload;
}

forcestuckdamageclear()
{
    var_0 = 0;
    var_1 = 0;

    for ( var_2 = self._id_1428A; var_2 < self._id_14285; var_2++ )
    {
        var_0 = var_0 + self.x1ops2[var_2];
        var_1 = var_1 + self.buildrespawnlist[var_2];
    }

    self.checkrequiredteamstreamcount = var_0 / self._id_14287;
    self.checkreload = var_1 / self._id_14287;
}

headicon_z_offset()
{
    self notify( "_encstr_BE8F191B36951639FAB0B32BE40BD959BED9B236EDB14BE85AB2B9" );
    self.x1ops2 = undefined;
    self.buildrespawnlist = undefined;
    self._id_14287 = undefined;
    self._id_1428A = undefined;
    self._id_14285 = undefined;
    self.checkrequiredteamstreamcount = undefined;
    self.checkreload = undefined;
}

_id_11D0B( var_0 )
{
    _id_11D0C();
    self endon( "_encstr_9F7011B5F6375AE8ED93A4B5382CD81DA2378C" );
    self._id_11D0E = 1;
    self playloopsound( "_encstr_B77A18DA07D76CC29359AF0758365B85ECAC7D91C9F61CAFB138" );
    self physics_registerforcollisioncallback();
    _id_11D0D( var_0 );

    if ( isdefined( self ) )
        thread _id_11D0C();
}

_id_11D0D( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );

    if ( isdefined( var_0 ) )
        wait( var_0 );

    var_1 = 0;

    for (;;)
    {
        self waittill( "_encstr_B3510AD8BDD8C6A56ED2B737", var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 );

        if ( isdefined( var_9 ) )
        {
            if ( isdefined( var_9.classname ) && var_9.classname == "_encstr_B6BB1A7BE66DFB49419988F9DBD971B3C261A8647C9A6037D511D389" )
                thread br_badcircleareas( var_9 );

            getkioskyawoffsetoverride( var_9 );
        }

        if ( isdefined( var_9 ) && start_chants_on_movement( var_9 ) )
        {
            if ( var_9 scripts\cp_mp\killstreaks\helper_drone::unset_relic_noks() )
                var_9 thread scripts\cp_mp\killstreaks\helper_drone::helperdronedestroyed();
        }

        if ( gettime() - var_1 >= 200 )
        {
            var_1 = gettime();
            var_10 = physics_getsurfacetypefromflags( var_5 );
            var_11 = getsubstr( var_10["_encstr_81BA051A9AA88B"], 9 );

            if ( var_11 == "_encstr_A9140E55C708BA5715991B6361E3DB22" )
                var_11 = "_encstr_879D0FE30F92BBF7631A868B39686E413A";

            if ( var_11 == "_encstr_AD140E4522AA1D1E847F704857A170DB" )
                var_11 = "_encstr_899D0FBBAF359331FD03DB88C17F9D0F76";

            _id_1273B( var_6, var_7, var_8, var_11 );
        }
    }
}

getkioskyawoffsetoverride( var_0 )
{
    if ( isdefined( var_0.script_noteworthy ) && isstartstr( var_0.script_noteworthy, "_encstr_8260071350E9A12A6F" ) && !isdefined( self getlinkedparent() ) )
    {
        if ( isdefined( self._id_13CC8 ) )
        {
            if ( self._id_13CC8 == var_0 )
                return;
            else
                generatecodestoshow();
        }

        self._id_13CC8 = var_0;
        self._id_13CC7 = 4;
        thread getknivesoutsetting( var_0 );
    }
}

getknivesoutsetting( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_B88315C6AFFD124DA0C98BE738383F2BA7288B3A071B3A" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    var_1 = getleveldata( self.cratetype );
    var_2 = scripts\engine\trace::create_contents( 0, 1, 0, 0, 0, 1, 1, 0, 0 );
    var_3 = [ self ];

    foreach ( var_5 in self getlinkedchildren( 1 ) )
        var_3[var_3.size] = var_5;

    self._id_13CCE = 0;
    self._id_13CD0 = 0;

    while ( self._id_13CCE < 5 )
    {
        var_7 = self.origin + anglestoup( self.angles ) * var_1.setplayerbeingrevivedextrainfo;
        var_8 = var_7 + ( 0, 0, -200 );
        var_9 = scripts\engine\trace::ray_trace( var_7, var_8, var_3, var_2 );

        if ( var_9.size > 0 && isdefined( var_9["_encstr_B60E07C9FD1C2055E3"] ) && var_9["_encstr_B60E07C9FD1C2055E3"] == self._id_13CC8 )
        {
            var_10 = combineangles( invertangles( var_0.angles ), var_0.origin - var_9["_encstr_B7260923C89E8F3378E72E"] );

            if ( !isdefined( self._id_13CCF ) )
            {

            }
            else if ( distancesquared( var_10, self._id_13CCF ) > 25 )
            {
                self._id_13CCE++;
                self._id_13CD0 = 0;
            }
            else if ( vectordot( var_10, self._id_13CCF ) < 0.997 )
            {
                self._id_13CCE++;
                self._id_13CD0 = 0;
            }
            else
            {
                self._id_13CD0++;

                if ( self._id_13CD0 >= 4 )
                {
                    self linkto( var_0 );
                    activatecrate( self.unset_relic_amped );
                    thread infilweaponraise();
                    break;
                }
            }

            self._id_13CCF = var_10;
        }
        else
            break;

        wait 0.05;
    }

    thread generatecodestoshow();
}

generatecodestoshow()
{
    self notify( "_encstr_B88315C6AFFD124DA0C98BE738383F2BA7288B3A071B3A" );
    self._id_13CC8 = undefined;
    self._id_13CCF = undefined;
    self._id_13CCE = undefined;
    self._id_13CD0 = undefined;
}

br_badcircleareas( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    var_1 = gettime();

    while ( gettime() - var_1 < 3000 )
    {
        var_0 dodamage( 100, var_0.origin, self, self, "_encstr_8A4E0A41A7FB067762A99949" );
        wait 0.5;
    }
}

_id_11D0C()
{
    if ( !istrue( self._id_11D0E ) )
        return;

    self notify( "_encstr_9F7011B5F6375AE8ED93A4B5382CD81DA2378C" );
    self._id_11D0E = undefined;
    self stoploopsound( "_encstr_B77A18DA07D76CC29359AF0758365B85ECAC7D91C9F61CAFB138" );
    self physics_unregisterforcollisioncallback();
}

start_chants_on_movement( var_0 )
{
    if ( !istrue( self._id_12332 ) )
    {
        if ( isdefined( var_0.classname ) )
        {
            if ( var_0.classname == "_encstr_B74E0BBBF6393646A93885BBE6" )
                return 0;
            else if ( var_0.classname == "_encstr_AB440F9BD8932D071DAFB3CA435A3663B2" )
            {
                if ( var_0 scripts\cp_mp\killstreaks\helper_drone::unset_relic_noks() )
                {
                    var_1 = getleveldata( self.cratetype );
                    var_2 = self.origin + anglestoup( self.angles ) * var_1.setplayerbeingrevivedextrainfo;
                    return var_0.origin[2] <= var_2[2];
                }
            }
        }
    }

    return 0;
}

_id_11D17()
{
    _id_11D18();
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_9E8317E8F8C58320A783DFA54913A7CD9CE54A70885BF72D4C" );
    var_0 = self;

    if ( isdefined( self.mountmantlemodel ) )
        var_0 = self.mountmantlemodel;

    var_1 = undefined;

    if ( isdefined( self.owner ) )
        var_1 = self.owner;

    while ( isdefined( var_0 ) )
    {
        var_0 waittill( "_encstr_B3410EBBA4D980B22B89A063F7E84B38", var_2, var_3 );

        if ( isdefined( var_2 ) && ( isplayer( var_2 ) || isagent( var_2 ) ) && var_2 scripts\cp_mp\utility\player_utility::_isalive() )
        {
            var_4 = var_3[2] <= -8;
            var_5 = 0;
            var_6 = undefined;

            if ( var_2 tagexists( "_encstr_8BE10B4DF5DA2C5A9B39B7EDE8" ) )
            {
                var_6 = var_2 gettagorigin( "_encstr_8BE10B4DF5DA2C5A9B39B7EDE8" );
                var_7 = getleveldata( self.cratetype );
                var_8 = self.origin + anglestoup( self.angles ) * var_7.setplayerbeingrevivedextrainfo;
                var_5 = var_6[2] <= var_8[2];
            }

            if ( var_4 && var_5 )
            {
                var_9 = var_1;

                if ( !isdefined( var_9 ) )
                    var_9 = var_2;
            }
        }
    }
}

_id_11D18()
{
    self notify( "_encstr_9E8317E8F8C58320A783DFA54913A7CD9CE54A70885BF72D4C" );
}

_id_1273B( var_0, var_1, var_2, var_3 )
{
    playfx( scripts\engine\utility::getfx( "_encstr_8766154129EB61FE78F801C02AEBF345B90A136B0988FB" ), var_0, var_1 );

    if ( var_2 < 150 )
        self playsurfacesound( "_encstr_BAC81B2D07D6B76ED52BD11B18CF2477096597D4107BFF3483C03A2258", var_3 );
    else if ( var_2 < 300 )
        self playsurfacesound( "_encstr_B75C1B08A3DF2E900AF5376119B638E7D76AC6B05A6B4898E5D853BF14", var_3 );
    else
        self playsurfacesound( "_encstr_BEEB1CE843DF11BB5337C8670E7A97194F8FF1B84FBFC80F0ADD57E7E663", var_3 );

    self stoploopsound( "_encstr_B77A18DA07D76CC29359AF0758365B85ECAC7D91C9F61CAFB138" );
}

createdangerzone()
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_9E79101BE03691590BA35D4EB21D0BA359C8" ) && [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_9E79101BE03691590BA35D4EB21D0BA359C8" ) ]]() )
        return;

    if ( !scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_BA8A06D740769010", "_encstr_AD3113526089EAFB19944664A7C09FAF0D093A5A80" ) )
        return;

    destroydangerzone();
    var_0 = getleveldata( self.cratetype );
    var_1 = undefined;

    if ( isdefined( self.owner ) && isdefined( self.team ) )
        var_1 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_BA8A06D740769010", "_encstr_AD3113526089EAFB19944664A7C09FAF0D093A5A80" ) ]]( self.destination, var_0.dangerzoneradius, var_0.dangerzoneheight, self.team, 30.0, self.owner, 1 );
    else if ( isdefined( self.team ) )
        var_1 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_BA8A06D740769010", "_encstr_AD3113526089EAFB19944664A7C09FAF0D093A5A80" ) ]]( self.destination, var_0.dangerzoneradius, var_0.dangerzoneheight, self.team, 30.0 );
    else
        var_1 = spawnuniversaldangerzone( self.destination, var_0.dangerzoneradius, var_0.dangerzoneheight, 30.0 );

    self.dangerzoneid = var_1;
    return var_1;
}

spawnuniversaldangerzone( var_0, var_1, var_2, var_3 )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_BA8A06D740769010", "_encstr_AD3113526089EAFB19944664A7C09FAF0D093A5A80" ) )
    {
        var_4 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_BA8A06D740769010", "_encstr_AD3113526089EAFB19944664A7C09FAF0D093A5A80" ) ]]( var_0, var_1, var_2, undefined, var_3, level.players[randomint( level.players.size )], 1 );
        self.dangerzoneid = var_4;
        return var_4;
    }
}

destroydangerzone()
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_BA8A06D740769010", "_encstr_87ED17B0CB2AE129D77E35AF46AF91ADC09273A880BD6B0377" ) && scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_BA8A06D740769010", "_encstr_9385168A339025DBB567130ACB182B1E20AF15F225D82D5F" ) )
    {
        var_0 = self.dangerzoneid;

        if ( isdefined( var_0 ) && [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_BA8A06D740769010", "_encstr_87ED17B0CB2AE129D77E35AF46AF91ADC09273A880BD6B0377" ) ]]( var_0 ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_BA8A06D740769010", "_encstr_9385168A339025DBB567130ACB182B1E20AF15F225D82D5F" ) ]]( var_0 );

        self.dangerzoneid = undefined;
    }
}

_createnavobstacle()
{
    self notify( "_encstr_9B5312CFD0E9290B9B7006FBC8BDB3E4B1B00B5F" );
    self endon( "_encstr_9B5312CFD0E9290B9B7006FBC8BDB3E4B1B00B5F" );

    if ( isdefined( self.navobstacleid ) )
        destroynavobstacle( self.navobstacleid );

    var_0 = getleveldata( self.cratetype );
    var_1 = createnavobstaclebybounds( self.origin, var_0.navobstaclebounds, self.angles );
    self.navobstacleid = var_1;
    childthread _watchnavobstacle( var_1, self.origin, var_0.navobstacleupdatedistsqr );
    return var_1;
}

_watchnavobstacle( var_0, var_1, var_2 )
{
    self endon( "_encstr_A3750609A5E61883" );

    while ( distancesquared( var_1, self.origin ) < var_2 )
        wait 0.5;

    thread _createnavobstacle();
}

_destroynavobstacle()
{
    self notify( "_encstr_9B5312CFD0E9290B9B7006FBC8BDB3E4B1B00B5F" );

    if ( isdefined( self.navobstacleid ) )
        destroynavobstacle( self.navobstacleid );

    self.navobstacleid = undefined;
}

createmountmantlemodel()
{
    var_0 = getleveldata( self.cratetype );

    if ( isdefined( var_0.mountmantlemodel ) )
    {
        if ( isdefined( self.mountmantlemodel ) )
            self.mountmantlemodel delete();

        var_1 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self.origin );
        var_1 dontinterpolate();
        var_1.angles = self.angles;
        var_1.owner = self.owner;
        var_1.unresolved_collision_func = ::crateunresolvedcollisioncallback;
        var_1.killcament = self.killcament;
        var_1.mountmantlemodel = 1;
        var_1 clonebrushmodeltoscriptmodel( level.cratedata.mountmantlemodel );
        var_1 linkto( self );
        self.mountmantlemodel = var_1;
        var_1.crate = self;
        return 1;
    }

    return 0;
}

destroymountmantlemodel()
{
    if ( isdefined( self.mountmantlemodel ) )
        self.mountmantlemodel delete();

    self.mountmantlemodel = undefined;
}

crateunresolvedcollisioncallback( var_0, var_1 )
{
    if ( level.cratedata._id_13F28 > 0 )
    {
        if ( lengthsquared( var_1 ) <= level.cratedata._id_13F28 )
            return;
    }

    var_2 = self.objweapon;

    if ( isdefined( self.init_airdrop_anims ) )
        var_2 = self.crate.objweapon;

    var_0 dodamage( 1000, var_0.origin, self.owner, self, "_encstr_8A4E0A41A7FB067762A99949", var_2 );
    self endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( isplayer( var_0 ) && var_0 scripts\cp_mp\utility\player_utility::_isalive() )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_B2BC1FA75DDAABAAD8AAD331AFC9D850B1C15B11809B4CBD499533433BB9451DE9" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_B2BC1FA75DDAABAAD8AAD331AFC9D850B1C15B11809B4CBD499533433BB9451DE9" ) ]]( var_0, undefined, self );
    }
}

_createheadicon()
{
    if ( istrue( self.disallowheadiconid ) )
        return;

    scripts\cp_mp\entityheadicons::setheadicon_deleteicon( self.headiconid );
    var_0 = getleveldata( self.cratetype );
    var_1 = undefined;

    if ( isdefined( self.headicon ) )
    {
        if ( level.teambased && isdefined( self.team ) )
        {
            if ( !scripts\cp_mp\utility\game_utility::isrealismenabled() )
                var_1 = scripts\cp_mp\entityheadicons::setheadicon_singleimage( self.team, self.headicon, var_0.headiconoffset, 1, var_0.headicondrawrange, var_0.headiconnaturalrange, undefined, 1 );

            if ( isdefined( var_1 ) )
            {
                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_9D670B9A63A923C771E35C53E9" ) )
                {
                    if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_9D670B9A63A923C771E35C53E9" ) ]]() )
                        removeclientfromheadiconmask( var_1, "_encstr_A68C0A5803A5D151A2B310A6" );
                }
            }
        }
        else if ( isdefined( self.owner ) )
        {
            if ( !scripts\cp_mp\utility\game_utility::isrealismenabled() )
                var_1 = scripts\cp_mp\entityheadicons::setheadicon_singleimage( self.owner, self.headicon, var_0.headiconoffset, 1, var_0.headicondrawrange, var_0.headiconnaturalrange, undefined, 1 );

            if ( isdefined( var_1 ) )
            {
                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_9D670B9A63A923C771E35C53E9" ) )
                {
                    if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_9D670B9A63A923C771E35C53E9" ) ]]() )
                        removeclientfromheadiconmask( var_1, "_encstr_A68C0A5803A5D151A2B310A6" );
                }
            }
        }
        else if ( !scripts\cp_mp\utility\game_utility::isrealismenabled() )
            scripts\cp_mp\entityheadicons::setheadicon_singleimage( level.teamnamelist, self.headicon, var_0.headiconoffset, 1, var_0.headicondrawrange, var_0.headiconnaturalrange );
    }

    self.headiconid = var_1;
    self.headiconactive = 1;
    return var_1;
}

_destroyheadicon()
{
    scripts\cp_mp\entityheadicons::setheadicon_deleteicon( self.headiconid );
    self.headiconid = undefined;
    self.headiconactive = 0;
}

createminimapicon()
{
    destroyminimapicon();
    var_0 = getleveldata( self.cratetype );
    var_1 = undefined;

    if ( isdefined( self.minimapicon ) && !istrue( self.visibilitymanuallycontrolled ) )
    {
        var_2 = undefined;

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_B1B0107EA86179137789A2249886F3E006E5" ) )
            var_2 = scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_B1B0107EA86179137789A2249886F3E006E5" );

        if ( isdefined( var_2 ) )
        {
            if ( level.teambased && isdefined( self.team ) )
                var_1 = self [[ var_2 ]]( self.minimapicon, self.team, 1, 1, 0 );
            else if ( isdefined( self.owner ) )
                var_1 = self [[ var_2 ]]( self.minimapicon, undefined, 1, 1, 0 );
            else
                var_1 = self [[ var_2 ]]( self.minimapicon, undefined, 0, 1, 0 );
        }
    }

    self.minimapid = var_1;
    self.minimapiconactive = 1;
    return var_1;
}

destroyminimapicon()
{
    if ( isdefined( self.minimapid ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_AB771293936D032238ACA6AC81386C9AC43BC7C3" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_AB771293936D032238ACA6AC81386C9AC43BC7C3" ) ]]( self.minimapid );
    }

    self.minimapid = undefined;
    self.minimapiconactive = 0;
}

watchvisibility()
{
    self endon( "_encstr_A3750609A5E61883" );

    foreach ( var_1 in level.players )
        updatevisibilityforplayer( var_1 );

    waitframe();
    childthread watchvisibilityinternal();
}

watchvisibilityinternal()
{
    for (;;)
    {
        level waittill( "_encstr_B2170C4AD884CDC823B9DB9D9F42", var_0 );
        updatevisibilityforplayer( var_0 );
    }
}

updatevisibilityforplayer( var_0 )
{
    self.friendlymodel hidefromplayer( var_0 );
    self.enemymodel hidefromplayer( var_0 );

    if ( var_0.team == "_encstr_A68C0A5803A5D151A2B310A6" )
    {
        self.friendlymodel showtoplayer( var_0 );
        return;
    }

    if ( level.teambased && isdefined( self.team ) )
    {
        if ( var_0.team == self.team )
            self.friendlymodel showtoplayer( var_0 );
        else
            self.enemymodel showtoplayer( var_0 );

        return;
    }

    if ( !level.teambased && isdefined( self.owner ) )
    {
        if ( var_0 == self.owner )
            self.friendlymodel showtoplayer( var_0 );
        else
            self.enemymodel showtoplayer( var_0 );

        return;
    }
}

looselinkto( var_0, var_1, var_2 )
{
    self endon( "_encstr_A3750609A5E61883" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    self notify( "_encstr_B1820CE457F05207B1B0421A3F08" );
    self endon( "_encstr_8AA90FB1BDEDE659624B9B5B45DBA8E623" );

    while ( istrue( self.physicsactivated ) )
    {
        self.origin = var_0.origin + var_1;
        waitframe();
    }

    self linkto( var_0 );
}

addtolists()
{
    level.cratedata.crates[self getentitynumber()] = self;
}

removefromlists( var_0 )
{
    if ( !isdefined( level.cratedata ) )
        return;

    level.cratedata.crates[var_0] = undefined;
}

getrandomkeyfromweightsarray( var_0, var_1 )
{
    if ( isdefined( var_1 ) )
    {
        if ( !isarray( var_1 ) )
            var_1 = [ var_1 ];
    }

    var_2 = [];
    var_3 = [];
    var_4 = 0;

    foreach ( var_11, var_6 in var_0 )
    {
        if ( var_6 > 0 )
        {
            var_7 = 0;

            if ( isdefined( var_1 ) )
            {
                if ( var_1.size > 0 )
                {
                    foreach ( var_10, var_9 in var_1 )
                    {
                        if ( var_9 == var_11 )
                        {
                            var_1[var_10] = undefined;
                            var_7 = 1;
                            break;
                        }
                    }
                }
                else
                    var_1 = undefined;
            }

            if ( !var_7 )
            {
                var_4 = var_4 + var_6;
                var_2[var_2.size] = var_11;
                var_3[var_3.size] = var_4;
            }
        }
    }

    var_12 = randomint( var_4 );
    var_11 = undefined;

    for ( var_13 = 0; var_13 < var_2.size; var_13++ )
    {
        var_4 = var_3[var_13];

        if ( var_12 < var_4 )
        {
            var_11 = var_2[var_13];
            break;
        }
    }

    return var_11;
}

getdefaultcapturevisualscallback()
{
    return ::defaultcapturevisualscallback;
}

#using_animtree("_encstr_B1CF0CC7CF3E927058D976FD7148");

getdefaultcapturevisualsdeletiondelay()
{
    return getanimlength( %_encstr_ADB1272D6B40501220F45B48F36777FF09061A50C08F88DF72C537DB93BB8F7F5B6FCCC6F8DDA9480F );
}

#using_animtree("_encstr_A40101");

defaultcapturevisualscallback( var_0 )
{
    if ( !isdefined( self ) )
        return;

    if ( istrue( self.isdummyarmcrate ) )
        return;

    if ( !isdefined( var_0 ) )
        return;

    var_1 = getanimlength( %_encstr_ADB1272D6B40501220F45B48F36777FF09061A50C08F88DF72C537DB93BB8F7F5B6FCCC6F8DDA9480F );

    if ( isdefined( var_1 ) )
        var_1 = max( 0, var_1 - 0.05 );

    var_0 setscriptablepartstate( "_encstr_AFCD06E7E630CBC7", "_encstr_9EEB08EFAF2B15984A67", 0 );
    var_0 setscriptablepartstate( "_encstr_9EEB08EFAF2B15984A67", "_encstr_94AD0637D1C24ED1", 0 );
    var_0 notsolid();

    if ( isdefined( var_1 ) )
        scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_1 );

    playfx( scripts\engine\utility::getfx( "_encstr_A2F8162EF31E247B5791D98A4B59C347D19A89972D1BF21F" ), self.origin, anglestoforward( self.angles ), anglestoup( self.angles ) );
}

getdefaultdestroyvisualsdeletiondelay()
{
    return 0;
}

getdefaultdestroyvisualscallback()
{
    return ::defaultdestroyvisualscallback;
}

defaultdestroyvisualscallback( var_0 )
{

}

getdefaultmountmantlemodel()
{
    return level.cratedata.mountmantlemodel;
}

getnumdroppedcrates()
{
    if ( !isdefined( level.cratedata ) )
        return 0;

    return level.cratedata.crates.size;
}

_id_13C46()
{
    if ( !isdefined( self.numactivejuggdrops ) )
    {
        if ( self ismantling() )
        {
            var_0 = self getmovingplatformparent();

            if ( isdefined( var_0 ) && isdefined( var_0.crate ) )
            {
                self.num_shot_taken_to_next_damage_state = var_0;
                self.num_times_stealth_broken_tv_station_interior = var_0.crate;
            }

            self.numactivejuggdrops = gettime() + 1000;
        }
    }
    else if ( gettime() >= self.numactivejuggdrops )
    {
        self.num_shot_taken_to_next_damage_state = undefined;
        self.num_times_stealth_broken_tv_station_interior = undefined;
        self.numactivejuggdrops = undefined;
    }
    else
    {
        foreach ( var_2 in level.cratedata.crates )
        {
            if ( isdefined( var_2 ) && istrue( var_2.physicsactivated ) && !istrue( var_2._id_12332 ) )
            {
                if ( isdefined( self.num_shot_taken_to_next_damage_state ) )
                {
                    if ( isdefined( var_2.mountmantlemodel ) )
                    {
                        if ( self.num_shot_taken_to_next_damage_state != var_2.mountmantlemodel )
                        {
                            if ( self istouching( var_2.mountmantlemodel ) )
                            {
                                self.num_shot_taken_to_next_damage_state = undefined;
                                self.num_times_stealth_broken_tv_station_interior = undefined;
                                self.numactivejuggdrops = undefined;

                                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B8BE07320B5B16ECAC", "_encstr_BDE609C802B5E86FC4B93D" ) )
                                    self thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B8BE07320B5B16ECAC", "_encstr_BDE609C802B5E86FC4B93D" ) ]]();
                                else
                                    self suicide();

                                return;
                            }
                        }
                    }

                    if ( self.num_times_stealth_broken_tv_station_interior != var_2 )
                    {
                        if ( self istouching( var_2 ) )
                        {
                            self.num_shot_taken_to_next_damage_state = undefined;
                            self.num_times_stealth_broken_tv_station_interior = undefined;
                            self.numactivejuggdrops = undefined;

                            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B8BE07320B5B16ECAC", "_encstr_BDE609C802B5E86FC4B93D" ) )
                                self thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B8BE07320B5B16ECAC", "_encstr_BDE609C802B5E86FC4B93D" ) ]]();
                            else
                                self suicide();

                            return;
                        }
                    }
                }
                else if ( self istouching( var_2 ) || isdefined( var_2.mountmantlemodel ) && self istouching( var_2.mountmantlemodel ) )
                {
                    self.num_shot_taken_to_next_damage_state = undefined;
                    self.num_times_stealth_broken_tv_station_interior = undefined;
                    self.numactivejuggdrops = undefined;

                    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B8BE07320B5B16ECAC", "_encstr_BDE609C802B5E86FC4B93D" ) )
                        self thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B8BE07320B5B16ECAC", "_encstr_BDE609C802B5E86FC4B93D" ) ]]();
                    else
                        self suicide();

                    return;
                }
            }
        }
    }
}

overridecapturestring( var_0 )
{
    if ( isdefined( self.capturestring ) && self.capturestring == var_0 )
        return;

    self.capturestring = var_0;
    var_1 = [ self ];

    if ( isdefined( self.useobject ) )
        var_1[var_1.size] = self.useobject;

    foreach ( var_3 in var_1 )
    {
        if ( !self.supportsreroll || var_3.usetype == 2 )
            var_3 sethintstring( self.capturestring );
    }
}

overridererollstring( var_0 )
{
    if ( isdefined( self.rerollstring ) && self.rerollstring == var_0 )
        return;

    self.rerollstring = var_0;
    var_1 = [ self ];

    if ( isdefined( self.useobject ) )
        var_1[var_1.size] = self.useobject;

    foreach ( var_3 in var_1 )
    {
        if ( self.supportsreroll && var_3.usetype == 1 )
            var_3 sethintstring( self.rerollstring );
    }
}

overrideheadicon( var_0 )
{
    if ( !isdefined( self.headicon ) && !isdefined( var_0 ) )
        return;

    if ( isdefined( self.headicon ) && isdefined( var_0 ) && self.headicon == var_0 )
        return;

    if ( !isdefined( var_0 ) )
    {
        self.headicon = undefined;
        _destroyheadicon();
    }
    else
    {
        self.headicon = var_0;

        if ( self.headiconactive )
        {
            if ( isdefined( self.headiconid ) )
                setheadiconfriendlyimage( self.headiconid, var_0 );
            else
                _createheadicon();
        }
    }
}

overrideminimapicon( var_0 )
{
    if ( !isdefined( self.minimapicon ) && !isdefined( var_0 ) )
        return;

    if ( isdefined( self.minimapicon ) && isdefined( var_0 ) && self.minimapicon == var_0 )
        return;

    if ( !isdefined( var_0 ) )
    {
        self.minimapicon = undefined;
        destroyminimapicon();
    }
    else
    {
        self.minimapicon = var_0;

        if ( self.minimapiconactive )
        {
            if ( isdefined( self.minimapid ) )
                scripts\mp\objidpoolmanager::update_objective_icon( self.minimapid, var_0 );
            else
                createminimapicon();
        }
    }
}

overridesupportsreroll( var_0 )
{
    if ( self.supportsreroll == var_0 )
        return;

    self.supportsreroll = var_0;

    if ( self.supportsreroll )
    {
        var_1 = [ self ];

        if ( isdefined( self.useobject ) )
            var_1[var_1.size] = self.useobject;

        foreach ( var_3 in var_1 )
        {
            if ( var_3.usetype == 1 )
                var_3 sethintstring( self.rerollstring );
        }
    }
}

initkillstreakcratedata()
{
    level.cratedata.ksweights = [];
    level.cratedata.kscapturestrings = [];
    level.cratedata.ksrerollstrings = [];
    var_0 = ::killstreakcrateactivatecallback;
    var_1 = ::killstreakcratecapturecallback;
    var_2 = getleveldata( "_encstr_B6CE0B0BB00A031B7B88355740" );
    var_2.activatecallback = var_0;
    var_2.capturecallback = var_1;
    var_2 = getleveldata( "_encstr_A4EB14176702F150A44A71C934A770B8E997D795CF4B" );
    var_2.activatecallback = var_0;
    var_2.capturecallback = var_1;
    var_2.supportsownercapture = 0;
    var_2.enemymodel = undefined;
    addkillstreakcratedata( "_encstr_8262160BC849A9EB6FE5423DD833F17FD32BF39750E3E312", undefined, undefined, 120 );
    addkillstreakcratedata( "_encstr_8BD90EB62CB9EAC28DFAD1EAE49C56D1", undefined, undefined, 120 );
    addkillstreakcratedata( "_encstr_970316AA19E011BA56B9CF9BF70D134768A1293773C0CAE2", undefined, undefined, 120 );
    addkillstreakcratedata( "_encstr_B61904AEB067", undefined, undefined, 120 );
    addkillstreakcratedata( "_encstr_8CE60CA3DE5BC2AFB98EC94B6D59", undefined, undefined, 170 );
    addkillstreakcratedata( "_encstr_B7F514E0C9AC364BE65ADEB9BEB05A279BA327D2ADB2", undefined, undefined, 170 );
    addkillstreakcratedata( "_encstr_B87010AA3BE80F83CFA7075A6D614F65EDBB", undefined, undefined, 170 );
    addkillstreakcratedata( "_encstr_87060BC3FA139D30C0C75F63EE", undefined, undefined, 50 );
    addkillstreakcratedata( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", undefined, undefined, 50 );
    addkillstreakcratedata( "_encstr_A2C00813C958328DB297", undefined, undefined, 50 );
    addkillstreakcratedata( "_encstr_AF330F47C0F793D23B32CF4A6D0E7592DA", undefined, undefined, 10 );
    addkillstreakcratedata( "_encstr_8BFA1059C1A8717A6058B8E5FAB037E3D628", undefined, undefined, 10 );
    addkillstreakcratedata( "_encstr_ABFD089D57CD370DD21C", undefined, undefined, 10 );
    addkillstreakcratedata( "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3", undefined, undefined, 10 );
    addkillstreakcratedata( "_encstr_A2980A513FE33518CF0C312B", undefined, undefined, 10 );
    addkillstreakcratedata( "_encstr_B26111DBB297152BF150C9CF7BE2B050139BD3", undefined, undefined, 10 );
    addkillstreakcratedata( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", undefined, undefined, 5 );
    var_3 = 50;
    thread initkillstreakcratedatalate( var_3 );
}

initdropzonekillstreakcratedata()
{
    level.cratedata.ksweights = [];
    level.cratedata.kscapturestrings = [];
    level.cratedata.ksrerollstrings = [];
    var_0 = ::killstreakcrateactivatecallback;
    var_1 = ::killstreakcratecapturecallback;
    var_2 = getleveldata( "_encstr_B6CE0B0BB00A031B7B88355740" );
    var_2.activatecallback = var_0;
    var_2.capturecallback = var_1;
    var_2 = getleveldata( "_encstr_A4EB14176702F150A44A71C934A770B8E997D795CF4B" );
    var_2.activatecallback = var_0;
    var_2.capturecallback = var_1;
    var_2.supportsownercapture = 0;
    var_2.enemymodel = undefined;
    var_3 = 0;
    addkillstreakcratedata( "_encstr_8262160BC849A9EB6FE5423DD833F17FD32BF39750E3E312", undefined, undefined, 100 );
    addkillstreakcratedata( "_encstr_8BD90EB62CB9EAC28DFAD1EAE49C56D1", undefined, undefined, 100 );
    addkillstreakcratedata( "_encstr_B61904AEB067", undefined, undefined, 100 );
    addkillstreakcratedata( "_encstr_8CE60CA3DE5BC2AFB98EC94B6D59", undefined, undefined, 65 );
    addkillstreakcratedata( "_encstr_B7F514E0C9AC364BE65ADEB9BEB05A279BA327D2ADB2", undefined, undefined, 65 );
    addkillstreakcratedata( "_encstr_87060BC3FA139D30C0C75F63EE", undefined, undefined, 65 );
    addkillstreakcratedata( "_encstr_B87010AA3BE80F83CFA7075A6D614F65EDBB", undefined, undefined, 65 );
    addkillstreakcratedata( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", undefined, undefined, 35 );
    addkillstreakcratedata( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", undefined, undefined, 35 );
    addkillstreakcratedata( "_encstr_B26111DBB297152BF150C9CF7BE2B050139BD3", undefined, undefined, 35 );
    addkillstreakcratedata( "_encstr_AF330F47C0F793D23B32CF4A6D0E7592DA", undefined, undefined, 35 );
    addkillstreakcratedata( "_encstr_8BFA1059C1A8717A6058B8E5FAB037E3D628", undefined, undefined, 15 );
    addkillstreakcratedata( "_encstr_ABFD089D57CD370DD21C", undefined, undefined, 15 );
    addkillstreakcratedata( "_encstr_A9D7101B9AC5C12BBF4298863D9353B7EAC3", undefined, undefined, 15 );
    addkillstreakcratedata( "_encstr_A2980A513FE33518CF0C312B", undefined, undefined, 15 );

    if ( level.gametype != "_encstr_87E507D23766566CD1" )
    {
        addkillstreakcratedata( "_encstr_970316AA19E011BA56B9CF9BF70D134768A1293773C0CAE2", undefined, undefined, 100 );
        addkillstreakcratedata( "_encstr_A2C00813C958328DB297", undefined, undefined, 35 );
        var_3 = 25;
        thread initkillstreakcratedatalate( var_3 );
    }
}

initkillstreakcratedatalate( var_0 )
{
    waittillframeend;
    var_1 = scripts\engine\utility::ter_op( scripts\cp_mp\vehicles\light_tank::light_tank_supported(), var_0, 0 );
    addkillstreakcratedata( "_encstr_A2C00813C958328DB297", undefined, undefined, var_1 );
}

addkillstreakcratedata( var_0, var_1, var_2, var_3 )
{
    level.cratedata.kscapturestrings[var_0] = var_1;
    level.cratedata.ksrerollstrings[var_0] = var_2;
    level.cratedata.ksweights[var_0] = var_3;
}

getkillstreakcratedatabystreakname( var_0, var_1 )
{
    var_2 = spawnstruct();
    var_2.streakname = var_0;
    var_2.supportsreroll = var_1;
    return var_2;
}

overridekillstreakcrateweight( var_0, var_1 )
{
    level.cratedata.ksweights[var_0] = var_1;
}

killstreakcrateactivatecallback( var_0 )
{
    var_1 = self.data;
    var_2 = level.cratedata.kscapturestrings[var_1.streakname];

    if ( isdefined( var_2 ) )
        overridecapturestring( var_2 );

    var_3 = level.cratedata.ksrerollstrings[var_1.streakname];

    if ( isdefined( var_3 ) )
        overridererollstring( var_3 );

    var_4 = var_1.supportsreroll;

    if ( isdefined( var_4 ) )
        overridesupportsreroll( var_4 );
}

killstreakcratecapturecallback( var_0 )
{
    var_1 = self.data.streakname;
    var_2 = 0;

    switch ( var_1 )
    {
        case "_encstr_A2C00813C958328DB297":
            if ( !scripts\cp_mp\vehicles\light_tank::light_tank_supported() )
                var_1 = "_encstr_9CB30B0EC28DFACD2BCD8E9CE5";

            break;
        case "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D":
            if ( !istrue( var_0.isjuggernaut ) )
            {
                var_2 = 1;

                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_B9D7197373B38170899D6079C781F8C55A33C3F7D70A56F0F9F34B" ) )
                    var_0 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_B9D7197373B38170899D6079C781F8C55A33C3F7D70A56F0F9F34B" ) ]]( var_2 );
                else
                    var_0 scripts\cp_mp\killstreaks\juggernaut::tryusejuggernaut( var_2 );
            }

            break;
    }

    if ( !istrue( var_2 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_A9C610932716D8756FAAB8A013CB3628AE83" ) )
            var_0 thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_A9C610932716D8756FAAB8A013CB3628AE83" ) ]]( var_1, self.owner, self );

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_B75315B986B7BBB4B436B1B947C9CA85AD9A381BB06E86" ) )
            var_0 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_B75315B986B7BBB4B436B1B947C9CA85AD9A381BB06E86" ) ]]( var_1, undefined, 1 );
    }

    if ( isdefined( self.owner ) && var_0 == self.owner )
        return;

    if ( isdefined( self.team ) )
    {
        if ( var_0.team != self.team )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AAB0079B102F47FF38", "_encstr_878E12CEB4CEB2AA9BD23396CA9141ED4B37E837" ) )
                var_0 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AAB0079B102F47FF38", "_encstr_878E12CEB4CEB2AA9BD23396CA9141ED4B37E837" ) ]]( "_encstr_AFE00908EF2269878A6F16" );

            if ( isdefined( self.owner ) )
            {
                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_82C20B5B2C57809643FB93BFC3" ) )
                    self.owner [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_82C20B5B2C57809643FB93BFC3" ) ]]( "_encstr_B2231186B44D2C36DAB291AF854B9C23E47BC1", undefined, var_0 );
            }
        }
        else
        {

        }
    }
    else
    {

    }
}

getrandomkillstreak( var_0 )
{
    var_1 = getrandomkeyfromweightsarray( level.cratedata.ksweights, var_0 );
    return var_1;
}

placekillstreakcrate( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( var_2 ) || var_2 == "_encstr_AF120712EF90CB8D8B" )
        var_2 = getrandomkillstreak();

    var_5 = scripts\engine\utility::ter_op( isdefined( var_0 ), "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_A4EB14176702F150A44A71C934A770B8E997D795CF4B" );
    var_6 = getkillstreakcratedatabystreakname( var_2, 0 );
    var_7 = placecrate( var_0, var_1, var_5, var_3, var_4, var_6 );

    if ( !isdefined( var_7 ) )
        return undefined;

    if ( isdefined( var_0 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_957515E82BC2AD28B116F2CA9C6885E4C8D41CB12C6E43" ) )
            level thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_957515E82BC2AD28B116F2CA9C6885E4C8D41CB12C6E43" ) ]]( "_encstr_B14D0DAEE6CAC8BE85D2C923937B83", var_0 );
    }

    return var_7;
}

dropkillstreakcrate( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( !isdefined( var_2 ) || var_2 == "_encstr_AF120712EF90CB8D8B" )
        var_2 = getrandomkillstreak();

    var_6 = scripts\engine\utility::ter_op( isdefined( var_0 ), "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_A4EB14176702F150A44A71C934A770B8E997D795CF4B" );
    var_7 = getkillstreakcratedatabystreakname( var_2, 0 );
    var_8 = dropcrate( var_0, var_1, var_6, var_3, var_4, var_5, var_7 );

    if ( !isdefined( var_8 ) )
        return undefined;

    if ( isdefined( var_0 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_957515E82BC2AD28B116F2CA9C6885E4C8D41CB12C6E43" ) )
            level thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_957515E82BC2AD28B116F2CA9C6885E4C8D41CB12C6E43" ) ]]( "_encstr_B14D0DAEE6CAC8BE85D2C923937B83", var_0 );
    }

    return var_8;
}

dropkillstreakcratefromscriptedheli( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    if ( !isdefined( var_2 ) || var_2 == "_encstr_AF120712EF90CB8D8B" )
        var_2 = getrandomkillstreak();

    var_8 = scripts\engine\utility::ter_op( isdefined( var_0 ), "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_A4EB14176702F150A44A71C934A770B8E997D795CF4B" );
    var_9 = getkillstreakcratedatabystreakname( var_2, 0 );
    var_9.vehicleisreserved = var_6;
    var_10 = dropcratefromscriptedheli( var_0, var_1, var_8, var_3, var_4, var_5, var_9, var_7 );

    if ( !isdefined( var_10 ) )
        return undefined;
    else if ( !isdefined( var_10.crates ) || !isdefined( scripts\engine\utility::array_get_first_item( var_10.crates ) ) )
        return undefined;

    if ( isdefined( var_0 ) )
    {
        var_0 thread br_c130spawndone( var_7 );

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_957515E82BC2AD28B116F2CA9C6885E4C8D41CB12C6E43" ) )
            level thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_957515E82BC2AD28B116F2CA9C6885E4C8D41CB12C6E43" ) ]]( "_encstr_B14D0DAEE6CAC8BE85D2C923937B83", var_0 );
    }

    return var_10;
}

br_c130spawndone( var_0, var_1 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( level.gametype == "_encstr_BC7205C8ABFDE7" || level.gametype == "_encstr_87E507D23766566CD1" )
        return;

    var_2 = undefined;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_936006576AC048BA", "_encstr_82011B33295F7BA3A850CD124B28D5B22201EFAB81F0A36440D9C51D41" ) )
    {
        scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 0.75 );
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_936006576AC048BA", "_encstr_82011B33295F7BA3A850CD124B28D5B22201EFAB81F0A36440D9C51D41" ) ]]( self, var_0.streakname );
        var_2 = 1.5;
    }

    var_3 = var_0.streakname;

    if ( isdefined( var_1 ) )
        var_3 = var_1;

    thread scripts\cp_mp\utility\killstreak_utility::playkillstreakoperatordialog( "_encstr_9BE405709A9D69" + var_3, 1, var_2 );
}

dropkillstreakcratefrommanualheli( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( !isdefined( var_2 ) || var_2 == "_encstr_AF120712EF90CB8D8B" )
        var_2 = getrandomkillstreak();

    var_7 = scripts\engine\utility::ter_op( isdefined( var_0 ), "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_A4EB14176702F150A44A71C934A770B8E997D795CF4B" );
    var_8 = getkillstreakcratedatabystreakname( var_2, 0 );
    var_8.vehicleisreserved = var_6;
    var_9 = dropcratefrommanualheli( var_0, var_1, var_7, var_3, var_4, 30000, 30000, var_5, var_8 );

    if ( !isdefined( var_9 ) )
        return undefined;
    else if ( !isdefined( var_9.crate ) )
        return undefined;

    if ( isdefined( var_0 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_957515E82BC2AD28B116F2CA9C6885E4C8D41CB12C6E43" ) )
            level thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_957515E82BC2AD28B116F2CA9C6885E4C8D41CB12C6E43" ) ]]( "_encstr_B14D0DAEE6CAC8BE85D2C923937B83", var_0 );
    }

    return var_9.crate;
}

tryairdroptriggered( var_0 )
{
    var_1 = var_0.streakname;
    var_2 = var_1;
    var_3 = undefined;

    if ( !isdefined( var_2 ) )
        var_2 = "_encstr_9867080A50FD0FDBE03F";

    var_4 = 4;

    if ( scripts\cp_mp\utility\game_utility::islargemap() )
        var_4 = 10;

    var_5 = 1;

    if ( ( level.littlebirds.size >= var_4 || level.fauxvehiclecount >= var_4 ) && var_2 != "_encstr_BA710DE3870315B85F2AD6E8173F68" )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) ]]( "_encstr_A89E192BF3017527453F2890E43E1EFDB17987A96B990F7BE05741" );

        return 0;
    }
    else if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_BE381AB62B5372E350B9317A639A74A7AB33A3B70A340AD6C26336C4" ) && scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_B4FD13B19078AFD718506FB112A36FAD43E07FBFCD" ) )
    {
        if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_BE381AB62B5372E350B9317A639A74A7AB33A3B70A340AD6C26336C4" ) ]]() >= [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_B4FD13B19078AFD718506FB112A36FAD43E07FBFCD" ) ]]() || level.fauxvehiclecount + var_5 >= [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_B4FD13B19078AFD718506FB112A36FAD43E07FBFCD" ) ]]() )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) )
                self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) ]]( "_encstr_BA8B1EA7793D498E7339BD25B0B7784105870733D915B9F01360142CD8E31501" );

            return 0;
        }
    }

    var_6 = getdvarint( "_encstr_9DDD13DBF00D3167F0EE94BA08BBD74279C842D298", 0 );

    if ( var_2 == "_encstr_9867080A50FD0FDBE03F" && var_6 )
        var_0.deployweaponobj = getcompleteweaponname( "_encstr_81171961CDBAC0287F61A1A85BE35E20521FEBC14F2248634F1ABA" );

    return 1;
}

airdropmarkerswitchended( var_0, var_1 )
{
    if ( istrue( var_1 ) )
        thread airdrop_watchplayerweapon( var_0 );
}

airdrop_watchplayerweapon( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self notifyonplayercommand( "_encstr_A81D0E0238E0C7558DC65CC3A0033720", "_encstr_A25C0E0EB07FAB174090D3F4380BFAA2" );
    self notifyonplayercommand( "_encstr_A81D0E0238E0C7558DC65CC3A0033720", "_encstr_825C0E23CB1013B7A0D013EAD805CA5B" );
    self notifyonplayercommand( "_encstr_A81D0E0238E0C7558DC65CC3A0033720", "_encstr_AA5C0E13FB2023E7F080639A8855FACB" );
    self notifyonplayercommand( "_encstr_A81D0E0238E0C7558DC65CC3A0033720", "_encstr_AB5C0E86296FC9F83062830A50E34635" );
    var_1 = scripts\engine\utility::_id_143AD( "_encstr_A81D0E0238E0C7558DC65CC3A0033720", "_encstr_B3C216770F8AA7D8C679DB539CA4C0D301CFF9E3FB03E548" );

    if ( !isdefined( var_1 ) )
        return;

    var_0 notify( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );
}

airdropvisualmarkerfired( var_0 )
{
    var_0.airdroptype = var_0.streakname;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_BC5008F4B573F81FC5B2", "_encstr_AF5F1A0F751683C5F039159BB5781DDB648B9387D7C9BA9BB8030D63" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_BC5008F4B573F81FC5B2", "_encstr_AF5F1A0F751683C5F039159BB5781DDB648B9387D7C9BA9BB8030D63" ) ]]();

    var_1 = undefined;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_B7EC101F9D6349F15B0F092395017B5A37BA" ) )
        var_1 = self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_B7EC101F9D6349F15B0F092395017B5A37BA" ) ]]( var_0 );

    if ( !isdefined( var_1.location ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_BC5008F4B573F81FC5B2", "_encstr_945B1AD23F6715A50A05C504DDC175D0D58930A06E0A3BA96845882C" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_BC5008F4B573F81FC5B2", "_encstr_945B1AD23F6715A50A05C504DDC175D0D58930A06E0A3BA96845882C" ) ]]();

        return 0;
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_8F0A13980A279728BB7CAE255AA7119F070358F0D3" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_8F0A13980A279728BB7CAE255AA7119F070358F0D3" ) ]]( var_0.airdroptype, self.origin );

    airdropvisualmarkeractivate( var_1, var_0.airdroptype, var_0 );
    return 1;
}

airdropvisualmarkeractivate( var_0, var_1, var_2 )
{
    var_3 = scripts\engine\utility::drop_to_ground( var_0.location, 50, -200, ( 0, 0, 1 ) );
    var_3 = var_3 + ( 0, 0, 1 );
    var_4 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_3 );
    var_4 setmodel( "_encstr_B1341977F801B8C205ED313341BF7A6A8940C7C3489EFB4A6F7287" );
    var_4.angles = ( 0, 90, 90 );
    var_5 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_3 );
    var_5 setmodel( "_encstr_B83113372F11567891EB51EE5579B09A6A83E7B3BB" );
    var_5 setscriptablepartstate( "_encstr_BE72069FCF8ACAA8", "_encstr_9707035F3B", 0 );

    if ( isdefined( var_0.visual ) )
        var_0.visual delete();
}

tryuseairdropmarker()
{
    var_0 = scripts\cp_mp\utility\killstreak_utility::createstreakinfo( "_encstr_9867080A50FD0FDBE03F", self );
    return tryuseairdropmarkerfromstruct( var_0 );
}

tryuseairdropmarkerfromstruct( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0.deployweaponobj = getcompleteweaponname( "_encstr_9DAF1232AC831B7BE5FA0BB44E194EF683BE5BE0" );
    var_1 = undefined;

    switch ( var_0.streakname )
    {
        case "_encstr_9867080A50FD0FDBE03F":
            var_1 = 1;
            break;
        default:
            var_1 = 0;
    }

    if ( var_1 )
    {
        if ( !scripts\cp_mp\vehicles\vehicle_tracking::reservevehicle() )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) )
                self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) ]]( "_encstr_B29B22930315913F13256D2B09A35621C4364017428E7E99F82BE788978F99B74B8B2760" );

            return 0;
        }
    }

    if ( !tryairdroptriggered( var_0 ) )
    {
        if ( var_1 )
            scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();

        return 0;
    }

    if ( isdefined( level.killstreaktriggeredfunc ) )
    {
        if ( !level [[ level.killstreaktriggeredfunc ]]( var_0 ) )
        {
            if ( var_1 )
                scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();

            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) )
                self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) ]]( "_encstr_B29B22930315913F13256D2B09A35621C4364017428E7E99F82BE788978F99B74B8B2760" );

            return 0;
        }
    }

    var_2 = scripts\cp_mp\killstreaks\killstreakdeploy::streakdeploy_doweaponfireddeploy( var_0, var_0.deployweaponobj, "_encstr_AD620DEC4ECA7358912BAF99B43959", undefined, ::airdropmarkerswitchended, ::airdropmarkerfired, undefined, ::airdropmarkertaken );

    if ( !istrue( var_2 ) )
    {
        if ( var_1 )
            scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();

        return 0;
    }

    if ( isdefined( level.killstreakbeginusefunc ) )
    {
        if ( !level [[ level.killstreakbeginusefunc ]]( var_0 ) )
            return 0;
    }

    return 1;
}

airdropmarkerfired( var_0, var_1, var_2 )
{
    var_0.airdroptype = var_0.streakname;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_AF5F1A0F751683C5F039159BB5781DDB648B9387D7C9BA9BB8030D63" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_AF5F1A0F751683C5F039159BB5781DDB648B9387D7C9BA9BB8030D63" ) ]]();

    var_2.owner = self;
    var_2 thread airdropmarkeractivate( var_0.airdroptype, undefined, var_0 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_8F0A13980A279728BB7CAE255AA7119F070358F0D3" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_8F0A13980A279728BB7CAE255AA7119F070358F0D3" ) ]]( var_0.airdroptype, self.origin );

    var_0.airdropmarkerfired = 1;
    var_0 notify( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );
    return "_encstr_80E3087F5B1E9ACD38F3";
}

airdropmarkeractivate( var_0, var_1, var_2 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_3 = self.owner.angles;
    self waittill( "_encstr_AB0808DFB97F822F1899", var_4 );
    var_5 = self.owner;

    if ( !isdefined( var_5 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_BC5008F4B573F81FC5B2", "_encstr_945B1AD23F6715A50A05C504DDC175D0D58930A06E0A3BA96845882C" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_BC5008F4B573F81FC5B2", "_encstr_945B1AD23F6715A50A05C504DDC175D0D58930A06E0A3BA96845882C" ) ]]();

        scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();
        return;
    }

    waitframe();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_BC5008F4B573F81FC5B2", "_encstr_945B1AD23F6715A50A05C504DDC175D0D58930A06E0A3BA96845882C" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_BC5008F4B573F81FC5B2", "_encstr_945B1AD23F6715A50A05C504DDC175D0D58930A06E0A3BA96845882C" ) ]]();

    var_7 = undefined;

    if ( var_0 == "_encstr_9867080A50FD0FDBE03F" )
        var_7 = dropkillstreakcratefromscriptedheli( var_5, var_5.team, undefined, var_4, var_3 + ( 0, 180, 0 ), var_4, 1, var_2 );
    else if ( var_0 == "_encstr_B3381117D8DBFCBB7F9F79ED05119389E3989F" )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_BA211A3A2D16A3AA40A1052581C034BBB139E09328EFE76218C1252B" ) )
            var_7 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_BA211A3A2D16A3AA40A1052581C034BBB139E09328EFE76218C1252B" ) ]]( var_5, var_5.team, var_4, var_3 + ( 0, 180, 0 ), var_4, var_2 );
    }

    if ( !isdefined( var_7 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) )
            var_5 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_801904A15DC8", "_encstr_A4851193A81077FF205DAFBA4BF03A3F4FE14A" ) ]]( "_encstr_80D02644BCF1DCB9AD256F77FFF6A61E11244CDE74C187E10D15D753D998A849814C72932F696148" );

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_9D321A579F6FA339246A60682303CD99C73B7C56EF27CF5152B3E0B0" ) )
            var_5 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_9D321A579F6FA339246A60682303CD99C73B7C56EF27CF5152B3E0B0" ) ]]( var_2.mpstreaksysteminfo, "_encstr_93610627DB28CDDB" );

        return;
    }

    var_5 scripts\cp_mp\utility\killstreak_utility::_id_12AA7( var_2 );
}

airdropmarkertaken( var_0 )
{
    if ( istrue( var_0.airdropmarkerfired ) )
    {
        if ( isdefined( level.killstreakfinishusefunc ) )
            level thread [[ level.killstreakfinishusefunc ]]( var_0 );
    }

    if ( isdefined( var_0.airdroptype ) && !istrue( var_0.airdropmarkerfired ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_BC5008F4B573F81FC5B2", "_encstr_945B1AD23F6715A50A05C504DDC175D0D58930A06E0A3BA96845882C" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_BC5008F4B573F81FC5B2", "_encstr_945B1AD23F6715A50A05C504DDC175D0D58930A06E0A3BA96845882C" ) ]]();
    }
}

initbattleroyalecratedata()
{
    var_0 = getleveldata( "_encstr_8CD40E1316D1A38DCAEB39DB2F2C6356" );
    var_0.capturestring = &"_encstr_973D0C6A0AE5124A7D86A450A22A";
    var_0.enemymodel = undefined;
    var_0.supportsownercapture = 0;
    var_0.headicon = undefined;
    var_0.usepriority = -1;
    var_0.usefov = 180;
    var_0.timeout = undefined;
    var_0.activatecallback = ::brcrateactivatecallback;
    var_0.capturecallback = ::brcratecapturecallback;
}

getbrcratedatabytype( var_0 )
{
    var_1 = spawnstruct();
    var_1.type = var_0;
    return var_1;
}

brcrateactivatecallback( var_0 )
{
    if ( istrue( var_0 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_B268189C59764BDC3A5939A14EC23A56197B93A1C656B037BA38" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_B268189C59764BDC3A5939A14EC23A56197B93A1C656B037BA38" ) ]]( self );
    }
}

brcratecapturecallback( var_0 )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_A16513DA16D6CA9447B26BB92327DEAD1A4EB03A95" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_A16513DA16D6CA9447B26BB92327DEAD1A4EB03A95" ) ]]( var_0 );
}

dropbrcratefromscriptedheli( var_0 )
{
    var_1 = scripts\engine\utility::ter_op( scripts\engine\utility::cointoss(), "_encstr_B92007DDCA2C0EF6DC", "_encstr_9C9A0B213BDBAAA648152B8E9B" );
    var_2 = dropcratefromscriptedheli( undefined, undefined, "_encstr_8CD40E1316D1A38DCAEB39DB2F2C6356", var_0, ( 0, randomfloat( 360 ), 0 ), var_0, getbrcratedatabytype( var_1 ) );

    if ( !isdefined( var_2 ) )
        return undefined;
    else if ( !isdefined( var_2.crates ) || !isdefined( scripts\engine\utility::array_get_first_item( var_2.crates ) ) )
        return undefined;

    return var_2.crate;
}

dropbrcratefrommanualheli( var_0 )
{
    var_1 = scripts\engine\utility::ter_op( scripts\engine\utility::cointoss(), "_encstr_B92007DDCA2C0EF6DC", "_encstr_9C9A0B213BDBAAA648152B8E9B" );
    var_2 = dropcratefrommanualheli( undefined, undefined, "_encstr_8CD40E1316D1A38DCAEB39DB2F2C6356", var_0, ( 0, randomfloat( 360 ), 0 ), 30000, 30000, var_0, getbrcratedatabytype( var_1 ) );

    if ( !isdefined( var_2 ) )
        return undefined;
    else if ( !isdefined( var_2.crate ) )
        return undefined;

    return var_2.crate;
}

teamplacement()
{
    var_0 = getleveldata( "_encstr_B1351943C043A41213707A354BC3CA7DCE68E7EFF818D7DA5570C2" );
    var_0.dummymodel = relic_landlocked_do_explosion( "_encstr_98F90BDA40D8BFAC8149FAFF79" );
    var_0.friendlymodel = undefined;
    var_0.enemymodel = undefined;
    var_0.mountmantlemodel = undefined;
    var_0.supportsownercapture = 0;
    var_0.headicon = undefined;
    var_0.usepriority = -1;
    var_0.usefov = 180;
    var_0.timeout = undefined;
    var_0.friendlyuseonly = 0;
    var_0.ownerusetime = 0.5;
    var_0.otherusetime = 0.5;
    var_0.destroyoncapture = 0;
}

missionbasetimer( var_0, var_1, var_2 )
{
    return dropcrate( undefined, var_0, "_encstr_B1351943C043A41213707A354BC3CA7DCE68E7EFF818D7DA5570C2", var_1, ( 0, randomfloat( 360 ), 0 ), var_2 );
}

initbattleroyaleloadoutcratedata()
{
    var_0 = getleveldata( "_encstr_B4D516C9DEFC28B9C2E7457757AAF1F8BFF51021075FE86D" );
    var_0.capturestring = &"_encstr_89C614A928BC214AAFD0A482512AEB893D2811A7AA15";
    var_0.dummymodel = relic_landlocked_do_explosion();
    var_0.friendlymodel = undefined;
    var_0.enemymodel = undefined;
    var_0.mountmantlemodel = undefined;
    var_0.supportsownercapture = 0;
    var_0.headicon = undefined;
    var_0.usepriority = -1;
    var_0.usefov = 180;
    var_0.timeout = undefined;
    var_0.friendlyuseonly = 1;
    var_0.ownerusetime = 0.5;
    var_0.otherusetime = 0.5;
    var_0.activatecallback = ::brloadoutcrateactivatecallback;
    var_0.capturecallback = ::brloadoutcratecapturecallback;
    var_0.destroycallback = ::dropradius;
    var_0.destroyoncapture = 0;
    var_0.onecaptureperplayer = 1;
}

brloadoutcrateactivatecallback( var_0 )
{
    if ( istrue( var_0 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_B268189C59764BDC3A5939A14EC23A56197B93A1C656B037BA38" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_B268189C59764BDC3A5939A14EC23A56197B93A1C656B037BA38" ) ]]( self );

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_896A1EDECD647AA6B99F15834F9ABEC42BDD493BEF2B23D11B536B297B12BD65" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_896A1EDECD647AA6B99F15834F9ABEC42BDD493BEF2B23D11B536B297B12BD65" ) ]]( self );
    }
}

brloadoutcratecapturecallback( var_0 )
{
    giveweaponsfromdropbag( var_0 );
}

dropspecialistbonus( var_0 )
{
    if ( !isdefined( self.numuses ) )
        self.numuses = 0;

    if ( !isdefined( self.playersused ) )
        self.playersused = [];

    if ( !isdefined( self.playerscaptured ) )
        self.playerscaptured = [];

    self.playerscaptured[var_0 getentitynumber()] = var_0;
    self.playersused[self.playersused.size] = var_0;
    self.numuses++;

    if ( isdefined( self.playeroutlines ) )
    {
        foreach ( var_2 in self.playeroutlines )
        {
            if ( isdefined( self.outlines ) && isdefined( self.outlines[var_2] ) && isdefined( self.outlines[var_2].playersvisibleto ) )
            {
                if ( self.outlines[var_2].playersvisibleto.size == 1 && self.outlines[var_2].playersvisibleto[0] == var_0 )
                {
                    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_98BB0FCFD8FB14EA5D359FCC266B92AC61" ) )
                        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_98BB0FCFD8FB14EA5D359FCC266B92AC61" ) ]]( var_2, self );

                    self.playeroutlines = scripts\engine\utility::array_remove( self.playeroutlines, var_2 );
                    break;
                }
            }
        }
    }

    if ( self.numuses >= level.teamdata[var_0.team]["_encstr_97580AC41D811F767F3072CB"] )
    {
        if ( isdefined( self.playeroutlines ) )
        {
            foreach ( var_5 in self.playeroutlines )
            {
                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_98BB0FCFD8FB14EA5D359FCC266B92AC61" ) )
                    [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_98BB0FCFD8FB14EA5D359FCC266B92AC61" ) ]]( var_5, self );
            }
        }

        if ( isdefined( self.choosenlocation ) && isdefined( self.choosenlocation.inuse ) )
            self.choosenlocation.inuse = 0;

        thread destroycrate();
    }
}

dropradius( var_0 )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_A6431A9AF3187BD5B013BC8F03502EC3A7AB6244F9DEAB12D84BB58C" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_A6431A9AF3187BD5B013BC8F03502EC3A7AB6244F9DEAB12D84BB58C" ) ]]( var_0 );
}

giveweaponsfromdropbag( var_0 )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_986516894E7DEC2DD9CA2293DE0E245876C4BD8519EDBA3A" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_986516894E7DEC2DD9CA2293DE0E245876C4BD8519EDBA3A" ) ]]( var_0 );
}

dropbrloadoutcrate( var_0, var_1, var_2 )
{
    return dropcrate( undefined, var_0, "_encstr_B4D516C9DEFC28B9C2E7457757AAF1F8BFF51021075FE86D", var_1, ( 0, randomfloat( 360 ), 0 ), var_2 );
}

teammateoutlineids()
{
    var_0 = getleveldata( "_encstr_9B73183A10F10BA3A1A8729753C96B977FA8B7A702CF45F7D825" );

    if ( getdvar( "_encstr_A10E10BABF1EB12D4B819F18E8488BAA02E5", "_encstr_A40101" ) == "_encstr_BE180432D63D" || getdvar( "_encstr_A10E10BABF1EB12D4B819F18E8488BAA02E5", "_encstr_A40101" ) == "_encstr_89E10946E1536E6DD6A2B0" )
        var_0.capturestring = &"_encstr_9CFA1A03C85DB129E371F49C9833F851AA71899B5F3ED1EFE3C9CFC5";
    else
        var_0.capturestring = &"_encstr_A6491EA467579725FBF8FE9CEF563198881560516A258F6326CF7FDF0B3FDACF";

    var_0.dummymodel = relic_landlocked_do_explosion();
    var_0.friendlymodel = undefined;
    var_0.enemymodel = undefined;
    var_0.mountmantlemodel = undefined;
    var_0.supportsownercapture = 0;
    var_0.headicon = undefined;
    var_0.usepriority = -1;
    var_0.usefov = 180;
    var_0.timeout = 600;
    var_0.friendlyuseonly = 1;
    var_0.ownerusetime = 0.5;
    var_0.otherusetime = 0.5;
    var_0.activatecallback = ::dialog_wait_think;
    var_0.capturecallback = ::dialog_wait_think_civ;
    var_0.destroycallback = ::dialogqueue;
    var_0.ingame = ::dialogueindex;
    var_0.destroyoncapture = 1;
}

dialog_wait_think( var_0 )
{

}

dialog_wait_think_civ( var_0 )
{
    self setscriptablepartstate( "_encstr_AB2B0EB7984DCA1BE8969D59AF6B1638", "_encstr_808209170DAA678824B362", 0 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9BAA0FFEA2AFB9BB12E7E1B8DB1FF5F0EB", "_encstr_9820170F0EFFD7D9B14269A32D70F1A0C23FA593B3222D9BD5" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9BAA0FFEA2AFB9BB12E7E1B8DB1FF5F0EB", "_encstr_9820170F0EFFD7D9B14269A32D70F1A0C23FA593B3222D9BD5" ) ]]( var_0 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9BAA0FFEA2AFB9BB12E7E1B8DB1FF5F0EB", "_encstr_A684115D35CBC1CB142748D8C74C818B235FC5" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9BAA0FFEA2AFB9BB12E7E1B8DB1FF5F0EB", "_encstr_A684115D35CBC1CB142748D8C74C818B235FC5" ) ]]( var_0 );

    if ( isdefined( self._id_13428 ) )
    {
        self._id_13428 setscriptablepartstate( "_encstr_9DA80D78578FB0132112730C2DBA79", "_encstr_9819045FD029", 0 );
        self._id_13428 delete();
    }

    if ( isdefined( level.focus_fire_attacker_timeout ) )
        level.focus_fire_attacker_timeout = scripts\engine\utility::array_remove( level.focus_fire_attacker_timeout, self );
}

dialogqueue( var_0 )
{
    self setscriptablepartstate( "_encstr_AB2B0EB7984DCA1BE8969D59AF6B1638", "_encstr_808209170DAA678824B362", 0 );

    if ( isdefined( self._id_13428 ) )
    {
        self._id_13428 setscriptablepartstate( "_encstr_9DA80D78578FB0132112730C2DBA79", "_encstr_9819045FD029", 0 );
        self._id_13428 delete();
    }

    if ( isdefined( level.focus_fire_attacker_timeout ) )
        level.focus_fire_attacker_timeout = scripts\engine\utility::array_remove( level.focus_fire_attacker_timeout, self );
}

dialogueindex()
{
    self setscriptablepartstate( "_encstr_ADF30C8D27C23A2BBE85EA915A7B", "_encstr_A9A107B96F4C308EC2", 0 );
}

minshotstostage3acc( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_7 = 250;
    var_8 = level.fnhidefoundintel;
    var_9 = 1000;
    var_10 = 10500;
    var_11 = 7500;
    var_12 = 3000;
    var_13 = var_1 + ( 0, 0, var_9 );
    var_14 = "_encstr_9B73183A10F10BA3A1A8729753C96B977FA8B7A702CF45F7D825";

    if ( isdefined( var_3 ) )
        var_14 = var_3;

    if ( !isdefined( var_5 ) )
        var_5 = 0;

    var_15 = createcrate( undefined, undefined, var_14, var_0, ( 0, 0, 0 ), var_1, undefined, 0 );

    if ( isdefined( var_15 ) )
    {
        var_15.skipminimapicon = 1;

        if ( !var_5 && var_13[2] < var_0[2] )
        {
            var_16 = undefined;
            var_17 = distance( var_0, var_13 );

            if ( var_17 >= var_10 )
                var_16 = "_encstr_B4081198393698CC03FA2327B7E0AF1A4BECD0";
            else if ( var_17 >= var_11 )
                var_16 = "_encstr_A4D9107913BFB7B22A7FD1F567E209514F8A";
            else if ( var_17 >= var_12 )
                var_16 = "_encstr_95D910989CD889CC18D78C93BD38AFB1DE77";

            if ( isdefined( var_16 ) )
            {
                var_18 = 1000;
                var_19 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_13 + ( 0, 0, var_18 ) );
                var_19.angles = var_2;
                var_19 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
                var_15.animname = "_encstr_98E50D36B03956BE1C851BDAC2D9CA";
                var_15.dropanim = level.scr_anim[var_15.animname][var_16];
                var_15.animlength = getanimlength( var_15.dropanim );
                var_15 scripts\common\anim::setanimtree();
                var_20 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_15.origin );
                var_20.angles = var_15.angles;
                var_20.animname = "_encstr_B696139AA04DFFDF9327F3E3CF99FF899743636338";
                var_20.dropanim = level.scr_anim[var_20.animname][var_16];
                var_20.animlength = getanimlength( var_20.dropanim );
                var_20 setmodel( "_encstr_B8CB262B05693F9F688063A780209CF1D7AFB26777A342E3B1885F9F7839425AAFB3FBDB55B70A22" );
                var_20 scripts\common\anim::setanimtree();
                var_19 thread scripts\common\anim::anim_single_solo( var_15, var_16 );
                var_19 thread scripts\common\anim::anim_single_solo( var_20, var_16 );
                var_15 thread _id_14492();
                var_20 thread _id_14493( var_19 );
            }
            else
                var_15 infinite_chopper();
        }
        else
            var_15 infinite_chopper();

        var_21 = "_encstr_A9D7101B0AC2F1A9E35F0F902BEFF0B3AD62";
        var_22 = getdvarint( "_encstr_8CF61B37B1E4F532DAA7EB85969CC84EB7C1EB4B9B9D0B6BACD7BD13A9", 1 );

        if ( var_22 )
            var_21 = "_encstr_AB85166C2C370D8C4EBDC1F51BB7D66BF6E6BEBB7BC9B132";

        if ( isdefined( var_4 ) )
            var_21 = var_4;

        var_15 setscriptablepartstate( "_encstr_AB2B0EB7984DCA1BE8969D59AF6B1638", var_21, 0 );
        var_15 setscriptablepartstate( "_encstr_ADF30C8D27C23A2BBE85EA915A7B", "_encstr_95200C902370BE67DB5BBB92C0A4", 0 );
        var_15._id_13428 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_1 );
        var_15._id_13428 setmodel( "_encstr_8CE6145BE6D7C2B4398CC97B0ED7B14EB01DB2EB269C" );

        if ( !istrue( var_6 ) )
            var_15._id_13428 setscriptablepartstate( "_encstr_9DA80D78578FB0132112730C2DBA79", "_encstr_9707035F3B", 0 );

        var_23 = getleveldata( var_14 );

        if ( isdefined( var_23._id_127FD ) )
            var_15 thread [[ var_23._id_127FD ]]();
    }

    return var_15;
}

_id_14492()
{
    self endon( "_encstr_A3750609A5E61883" );
    wait( self.animlength );

    if ( isdefined( self ) )
    {
        self stopanimscripted();
        infinite_chopper();
    }
}

_id_14493( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    wait( self.animlength );

    if ( isdefined( self ) )
        self delete();

    if ( isdefined( var_0 ) )
        var_0 delete();
}

teamplunderexfil()
{
    var_0 = getleveldata( "_encstr_942A1B4C163AD1C6B27D39B7BC858D56D71B1AED830E594EEBC67BF6A3" );
    var_0.capturestring = &"_encstr_BCCA1D6FF9C0101D99AE2A2587515C58D64FEF9B4385C8D76975523BBF69A5";
    var_0.dummymodel = relic_landlocked_do_explosion();
    var_0.friendlymodel = undefined;
    var_0.enemymodel = undefined;
    var_0.mountmantlemodel = undefined;
    var_0.supportsownercapture = 0;
    var_0.headicon = undefined;
    var_0.usepriority = -1;
    var_0.usefov = 180;
    var_0.timeout = 600;
    var_0.friendlyuseonly = 1;
    var_0.ownerusetime = 0.5;
    var_0.otherusetime = 0.5;
    var_0.activatecallback = ::dummy_model;
    var_0.capturecallback = ::dvarlocations;
    var_0.destroycallback = ::dwell_aggro;
    var_0.destroyoncapture = 1;
}

dummy_model( var_0 )
{

}

dvarlocations( var_0 )
{
    self setscriptablepartstate( "_encstr_AB2B0EB7984DCA1BE8969D59AF6B1638", "_encstr_808209170DAA678824B362", 0 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_8A480F89397DD8EDBD1D6C43DE8338CAE4", "_encstr_A6FD17C177CDB0AEABF2F3FBBA2B78B025F34553F437F1FEA7" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_8A480F89397DD8EDBD1D6C43DE8338CAE4", "_encstr_A6FD17C177CDB0AEABF2F3FBBA2B78B025F34553F437F1FEA7" ) ]]( var_0 );

    if ( isdefined( self._id_13428 ) )
    {
        self._id_13428 setscriptablepartstate( "_encstr_9DA80D78578FB0132112730C2DBA79", "_encstr_9819045FD029", 0 );
        self._id_13428 delete();
    }
}

dwell_aggro( var_0 )
{
    self setscriptablepartstate( "_encstr_AB2B0EB7984DCA1BE8969D59AF6B1638", "_encstr_808209170DAA678824B362", 0 );

    if ( isdefined( self._id_13428 ) )
    {
        self._id_13428 setscriptablepartstate( "_encstr_9DA80D78578FB0132112730C2DBA79", "_encstr_9819045FD029", 0 );
        self._id_13428 delete();
    }
}

missionbonustimer( var_0, var_1 )
{
    var_2 = dropcrate( undefined, undefined, "_encstr_942A1B4C163AD1C6B27D39B7BC858D56D71B1AED830E594EEBC67BF6A3", var_0, ( 0, randomfloat( 360 ), 0 ), var_1 );

    if ( isdefined( var_2 ) )
    {
        var_2.skipminimapicon = 1;
        var_3 = "_encstr_A9D7101B0AC2F1A9E35F0F902BEFF0B3AD62";
        var_4 = getdvarint( "_encstr_8CF61B37B1E4F532DAA7EB85969CC84EB7C1EB4B9B9D0B6BACD7BD13A9", 1 );

        if ( var_4 )
            var_3 = "_encstr_AB85166C2C370D8C4EBDC1F51BB7D66BF6E6BEBB7BC9B132";

        var_2 setscriptablepartstate( "_encstr_AB2B0EB7984DCA1BE8969D59AF6B1638", var_3, 0 );
        var_2._id_13428 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_1 );
        var_2._id_13428 setmodel( "_encstr_8CE6145BE6D7C2B4398CC97B0ED7B14EB01DB2EB269C" );
        var_2._id_13428 setscriptablepartstate( "_encstr_9DA80D78578FB0132112730C2DBA79", "_encstr_9707035F3B", 0 );
    }

    return var_2;
}

missionid( var_0, var_1 )
{
    var_2 = dropcrate( undefined, undefined, "_encstr_942A1B4C163AD1C6B27D39B7BC858D56D71B1AED830E594EEBC67BF6A3", var_0, ( 0, randomfloat( 360 ), 0 ), var_1 );

    if ( isdefined( var_2 ) )
    {
        var_2.skipminimapicon = 1;
        var_2 setscriptablepartstate( "_encstr_AB2B0EB7984DCA1BE8969D59AF6B1638", "_encstr_9B951101771156A89FEAF3A9924738162A9B93", 0 );
        var_2._id_13428 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_1 );
        var_2._id_13428 setmodel( "_encstr_8CE6145BE6D7C2B4398CC97B0ED7B14EB01DB2EB269C" );
        var_2._id_13428 setscriptablepartstate( "_encstr_9DA80D78578FB0132112730C2DBA79", "_encstr_AFBD0E39612F9F8C80710820DBEFEF78", 0 );
    }

    return var_2;
}

initplundercratedata()
{
    var_0 = getleveldata( "_encstr_ADC90AF536E1F75E4360F23A" );
    var_0.capturestring = &"_encstr_8A8F16D482F2153568BEA1828621A8F5AA3554F590949345";
    var_0.usetag = "_encstr_8CB40B4BB398B1C0A81FDF6BEA";
    var_0.userange = 200;
    var_0.usefov = 160;
    var_0.usepriority = 0;
    var_0.friendlymodel = "_encstr_A911226BCF0448894ACAF3E8E613EB93757F90E81BA70127B373E78EFC1A3558DDE7FAD2";
    var_0.enemymodel = undefined;
    var_0.mountmantlemodel = undefined;
    var_0.supportsownercapture = 0;
    var_0.headicon = undefined;
    var_0.usepriority = -10000;
    var_0.headicon = undefined;
    var_0.minimapicon = undefined;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9867080A50FD0FDBE03F", "_encstr_871C19C761E2584D3BBA6C30221B1EB87EF043FF094D201E9F3280" ) )
        var_0.capturecallback = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9867080A50FD0FDBE03F", "_encstr_871C19C761E2584D3BBA6C30221B1EB87EF043FF094D201E9F3280" ) ]]();

    var_0.destroyoncapture = 0;
    var_0.onecaptureperplayer = 1;
    var_0.capturevisualscallback = undefined;
    var_0.destroyvisualscallback = undefined;
    var_0.timeout = undefined;
}

getplcratedata( var_0 )
{
    var_1 = spawnstruct();
    var_1.contents = var_0;
    return var_1;
}

placeplcrate( var_0, var_1, var_2 )
{
    var_3 = placecrate( undefined, undefined, "_encstr_ADC90AF536E1F75E4360F23A", var_1, var_2, getplcratedata( var_0 ) );
    return var_3;
}

initarmcratedata()
{
    level.cratedata.armweights = [];
    level.cratedata.armcapturestrings = [];
    var_0 = getleveldata( "_encstr_A1820D0B276BF5DCBDEBB777B9564E" );
    var_0.activatecallback = ::armcrateactivatecallback;
    var_0.capturecallback = ::armcratecapturecallback;
    var_0.supportsownercapture = 0;
    var_0.enemymodel = undefined;
    var_0.headicondrawrange = 5000;
    var_0.timeout = 180;
    addarmcratedata( "_encstr_B61904AEB067", undefined, 5, 10 );
    addarmcratedata( "_encstr_8BD90EB62CB9EAC28DFAD1EAE49C56D1", undefined, 5, 5 );
    addarmcratedata( "_encstr_B87010AA3BE80F83CFA7075A6D614F65EDBB", undefined, 4, 40 );
    addarmcratedata( "_encstr_970316AA19E011BA56B9CF9BF70D134768A1293773C0CAE2", undefined, 4, 20 );
    addarmcratedata( "_encstr_B7F514E0C9AC364BE65ADEB9BEB05A279BA327D2ADB2", undefined, 3, 60 );
    addarmcratedata( "_encstr_8CE60CA3DE5BC2AFB98EC94B6D59", undefined, 2, 40 );
    addarmcratedata( "_encstr_AF330F47C0F793D23B32CF4A6D0E7592DA", undefined, 2, 30 );
    addarmcratedata( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", undefined, 2, 30 );
    addarmcratedata( "_encstr_ABFD089D57CD370DD21C", undefined, 2, 30 );
    thread initarmcratedatalate();
}

initarmcratedatalate()
{
    waittillframeend;
    var_0 = scripts\engine\utility::ter_op( scripts\cp_mp\vehicles\light_tank::light_tank_supported(), 50, 0 );
    addarmcratedata( "_encstr_A2C00813C958328DB297", undefined, 4, var_0 );
}

addarmcratedata( var_0, var_1, var_2, var_3 )
{
    level.cratedata.armdefconlevels[var_0] = var_2;
    level.cratedata.armweights[var_0] = var_3;
    level.cratedata.armcapturestrings[var_0] = var_1;
}

getarmcratedatabystreakname( var_0 )
{
    var_1 = spawnstruct();
    var_1.streakname = var_0;
    return var_1;
}

armcrateactivatecallback( var_0 )
{
    var_1 = self.data;
    var_2 = level.cratedata.armcapturestrings[var_1.streakname];

    if ( isdefined( var_2 ) )
        overridecapturestring( var_2 );
}

armcratecapturecallback( var_0 )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_89490FEF389CE32CE3DA99987CAB11B920" ) )
        var_0 thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_B6CE0B0BB00A031B7B88355740", "_encstr_89490FEF389CE32CE3DA99987CAB11B920" ) ]]( self.data.streakname, 0, 0, self.owner );
}

getrandomarmkillstreak( var_0 )
{
    var_1 = getarmkillsteakstoexcludebyteamdefconlevel( var_0 );
    var_2 = getrandomkeyfromweightsarray( level.cratedata.armweights, var_1 );
    return var_2;
}

getarmkillsteakstoexcludebyteamdefconlevel( var_0 )
{
    var_1 = level.defconlevel;
    var_2 = undefined;

    if ( var_1 > 1 )
    {
        var_2 = [];

        foreach ( var_5, var_4 in level.cratedata.armdefconlevels )
        {
            if ( var_1 > var_4 )
                var_2[var_2.size] = var_5;
        }
    }

    return var_2;
}

droparmcratefromscriptedheli( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( var_1 ) || var_1 == "_encstr_AF120712EF90CB8D8B" )
        var_1 = getrandomarmkillstreak( var_0 );

    var_5 = getarmcratedatabystreakname( var_1 );
    var_6 = dropcratefromscriptedheli( undefined, var_0, "_encstr_A1820D0B276BF5DCBDEBB777B9564E", var_2, var_3, var_4, var_5 );

    if ( !isdefined( var_6 ) )
        return undefined;
    else if ( !isdefined( var_6.crates ) || !isdefined( scripts\engine\utility::array_get_first_item( var_6.crates ) ) )
        return undefined;

    foreach ( var_8 in var_6.crates )
        return var_8;
}

teammatereviveweaponwaitputaway()
{
    var_0 = getleveldata( "_encstr_A81A191238309BD1CFC64AD7A93731C041FC6711D721BA9AA23DE8" );
    var_0.capturestring = &"_encstr_B9DE24C4FCFCD11EF98B4353F7D140B94185AF5F8D12C1DCE0D7477DF74985B9302CF5D48B50";
    var_0.dummymodel = relic_landlocked_do_explosion( "_encstr_A81A191238309BD1CFC64AD7A93731C041FC6711D721BA9AA23DE8" );
    var_0.friendlymodel = undefined;
    var_0.enemymodel = undefined;
    var_0.mountmantlemodel = undefined;
    var_0.supportsownercapture = 0;
    var_0.headicon = undefined;
    var_0.usepriority = -1;
    var_0.usefov = 180;
    var_0.timeout = undefined;
    var_0.friendlyuseonly = 1;
    var_0.ownerusetime = 0.5;
    var_0.otherusetime = 0.5;
    var_0.capturecallback = ::display_dont_have_weapon_message;
    var_0.destroycallback = ::display_fx_names_after_plane_spawns;
    var_0.activatecallback = ::display_cypher_updated;
    var_0.ingame = ::display_headicon_to_players;
    var_0._id_127FD = ::display_hint_for_all;
    var_0.destroyoncapture = 1;
}

display_cypher_updated( var_0 )
{
    scripts\cp_mp\killstreaks\juggernaut::oncrateactivated( var_0 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A3750E05B269E80D2FDA09D3720FC5D0", "_encstr_B7E210724DEE1D02D305146A50A7BD6AEB63" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A3750E05B269E80D2FDA09D3720FC5D0", "_encstr_B7E210724DEE1D02D305146A50A7BD6AEB63" ) ]]( var_0 );
}

display_dont_have_weapon_message( var_0 )
{
    self setscriptablepartstate( "_encstr_AB2B0EB7984DCA1BE8969D59AF6B1638", "_encstr_808209170DAA678824B362", 0 );

    if ( isdefined( self._id_13428 ) )
    {
        self._id_13428 setscriptablepartstate( "_encstr_9DA80D78578FB0132112730C2DBA79", "_encstr_9819045FD029", 0 );
        self._id_13428 delete();
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A3750E05B269E80D2FDA09D3720FC5D0", "_encstr_B89F0B62E017120F0BCD2D03D5" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A3750E05B269E80D2FDA09D3720FC5D0", "_encstr_B89F0B62E017120F0BCD2D03D5" ) ]]( var_0 );

    scripts\cp_mp\killstreaks\juggernaut::oncratecaptured( var_0 );
}

display_fx_names_after_plane_spawns( var_0 )
{
    self setscriptablepartstate( "_encstr_AB2B0EB7984DCA1BE8969D59AF6B1638", "_encstr_808209170DAA678824B362", 0 );

    if ( isdefined( self._id_13428 ) )
    {
        self._id_13428 setscriptablepartstate( "_encstr_9DA80D78578FB0132112730C2DBA79", "_encstr_9819045FD029", 0 );
        self._id_13428 delete();
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A3750E05B269E80D2FDA09D3720FC5D0", "_encstr_B6DA0FDE37864E0BD19588B2B93AC9B7BC" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A3750E05B269E80D2FDA09D3720FC5D0", "_encstr_B6DA0FDE37864E0BD19588B2B93AC9B7BC" ) ]]( var_0 );
}

display_headicon_to_players( var_0, var_1 )
{
    self setscriptablepartstate( "_encstr_ADF30C8D27C23A2BBE85EA915A7B", "_encstr_A9A107B96F4C308EC2", 0 );
}

display_hint_for_all()
{
    self setscriptablepartstate( "_encstr_B193064B48286D1C", "_encstr_B9FC095F8BCCFF02D92B43", 0 );
}

modeallowmeleevehicledamage( var_0, var_1, var_2 )
{
    var_3 = scripts\cp_mp\utility\killstreak_utility::createstreakinfo( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", self );
    return dropcrate( undefined, var_0, "_encstr_A81A191238309BD1CFC64AD7A93731C041FC6711D721BA9AA23DE8", var_1, ( 0, randomfloat( 360 ), 0 ), var_2, var_3, 1 );
}

_id_13669( var_0, var_1 )
{
    var_2 = 4096;

    if ( istrue( self.umbra ) )
        var_2 = 10000;

    var_3 = modeallowmeleevehicledamage( self.team, var_0 + ( 0, 0, var_2 ), var_0 + ( 0, 0, 512 ) );
    var_3 endon( "_encstr_A3750609A5E61883" );
    move_payload_to_back_of_super( var_3 );
    give_deployable_crate( var_3 );
    var_4 = [];

    foreach ( var_6 in level.teamdata[self.team]["_encstr_A31C0D41AACF5C484A3493BB25AAB0"] )
    {

    }
}

move_payload_to_back_of_super( var_0 )
{
    var_0 setotherent( self );
    var_0 setscriptablepartstate( "_encstr_AB2B0EB7984DCA1BE8969D59AF6B1638", "_encstr_93F50BFAF3ECFFB1D0AF0AEC41" );
}

give_deployable_crate( var_0 )
{
    var_0 setotherent( self );
    var_0 setscriptablepartstate( "_encstr_B193064B48286D1C", "_encstr_B9FC095F8BCCFF02D92B43" );
}

vehicle_isfriendlytoplayer( var_0 )
{
    var_1 = 1;

    switch ( var_0 )
    {
        case "_encstr_A81A191238309BD1CFC64AD7A93731C041FC6711D721BA9AA23DE8":
            var_1 = 0;
            break;
        case "_encstr_B4D516C9DEFC28B9C2E7457757AAF1F8BFF51021075FE86D":
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", "_encstr_982F146CC2CD55DCCAABCA0B07DE7382A5D8DA5707CD" ) )
            {
                var_2 = self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", "_encstr_982F146CC2CD55DCCAABCA0B07DE7382A5D8DA5707CD" ) ]]();

                if ( !istrue( var_2 ) )
                    var_1 = 0;
            }

            break;
    }

    return var_1;
}

teamplunderexfilshowviponly()
{
    var_0 = getleveldata( "_encstr_AD0E1E1AC7FBA375A3997BA280832DBFF6356193E5E037FE4981221A80CB2677" );
    var_0.capturestring = &"_encstr_B4251FEB3AD9AF250FA5FDF1BE1A22594AC99CA073FFE027B803B6E57FDBB7B583";
    var_0.dummymodel = "_encstr_9DDE2213B7F4F0DB0B88F76FD72F7223CA77667FD0020DA6126907016311E1EBF5F0A11F";
    var_0.friendlymodel = undefined;
    var_0.enemymodel = undefined;
    var_0.mountmantlemodel = undefined;
    var_0.supportsownercapture = 0;
    var_0.headicon = undefined;
    var_0.usepriority = -1;
    var_0.usefov = 180;
    var_0.timeout = undefined;
    var_0.friendlyuseonly = 1;
    var_0.ownerusetime = 0.5;
    var_0.otherusetime = 0.5;
    var_0.capturecallback = ::endoperatorsfxondisconnect;
    var_0.activatecallback = ::endofmatchdatasent;
    var_0.destroycallback = ::endprematchskydiving;
    var_0.ingame = ::endptui;
    var_0.destroyoncapture = 1;
}

endoperatorsfxondisconnect( var_0 )
{
    self setscriptablepartstate( "_encstr_AB2B0EB7984DCA1BE8969D59AF6B1638", "_encstr_808209170DAA678824B362", 0 );

    if ( isdefined( self._id_13428 ) )
    {
        self._id_13428 setscriptablepartstate( "_encstr_9DA80D78578FB0132112730C2DBA79", "_encstr_9819045FD029", 0 );
        self._id_13428 delete();
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_80431365FDFF730A564B971B1168EFF4D748182BD8", "_encstr_B89F0B62E017120F0BCD2D03D5" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_80431365FDFF730A564B971B1168EFF4D748182BD8", "_encstr_B89F0B62E017120F0BCD2D03D5" ) ]]( var_0 );
}

modifydestructibledamage( var_0 )
{
    var_1 = 4096;
    var_2 = var_0 + ( 0, 0, var_1 );
    var_3 = var_0 + ( 0, 0, 512 );
    level._id_12CE8.plundereventtime = spawnfx( level._effect["_encstr_9BBA16F7A7E2A2307F3B0159232148EFAA074153732A7EC8"], level._id_12CE8.level_carepackage_give_player_killstreak_incendiary_launcher - ( 0, 0, 60 ) );
    triggerfx( level._id_12CE8.plundereventtime );
    var_4 = dropcrate( undefined, undefined, "_encstr_AD0E1E1AC7FBA375A3997BA280832DBFF6356193E5E037FE4981221A80CB2677", var_2, ( 0, randomfloat( 360 ), 0 ), var_3 );
    var_4.skipminimapicon = 1;
    endround_timescalefactor( var_4 );
}

endofmatchdatasent( var_0 )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_80431365FDFF730A564B971B1168EFF4D748182BD8", "_encstr_B7E210724DEE1D02D305146A50A7BD6AEB63" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_80431365FDFF730A564B971B1168EFF4D748182BD8", "_encstr_B7E210724DEE1D02D305146A50A7BD6AEB63" ) ]]( var_0 );
}

endprematchskydiving( var_0 )
{
    self setscriptablepartstate( "_encstr_AB2B0EB7984DCA1BE8969D59AF6B1638", "_encstr_808209170DAA678824B362", 0 );

    if ( isdefined( self._id_13428 ) )
    {
        self._id_13428 setscriptablepartstate( "_encstr_9DA80D78578FB0132112730C2DBA79", "_encstr_9819045FD029", 0 );
        self._id_13428 delete();
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_80431365FDFF730A564B971B1168EFF4D748182BD8", "_encstr_B6DA0FDE37864E0BD19588B2B93AC9B7BC" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_80431365FDFF730A564B971B1168EFF4D748182BD8", "_encstr_B6DA0FDE37864E0BD19588B2B93AC9B7BC" ) ]]( var_0 );
}

endptui( var_0, var_1 )
{
    self setscriptablepartstate( "_encstr_ADF30C8D27C23A2BBE85EA915A7B", "_encstr_A9A107B96F4C308EC2", 0 );
}

endround_timescalefactor( var_0 )
{
    var_0 setscriptablepartstate( "_encstr_AB2B0EB7984DCA1BE8969D59AF6B1638", "_encstr_94DD16BB0F62B1ACABDAFA5E6BE52D3FAA2F1E136713334C" );
    var_0 setscriptablepartstate( "_encstr_8C7B0CD3485047B709117269C378", "_encstr_9707035F3B" );
    var_0 setscriptablepartstate( "_encstr_9FC6113A658FF9A7070350B0C9DE9B71E717B0", "_encstr_9707035F3B" );
}

relic_landlocked_do_explosion( var_0 )
{
    var_1 = level.script == "_encstr_A2D508A7F1A04A67707B" && getdvarint( "_encstr_A37D0F7B22DBA0189A5F0995B7C418FF2F", 0 );
    var_2 = "_encstr_A40101";

    if ( var_1 )
        var_2 = "_encstr_A3CA1E3B7ABFF9CA38509319BE4B1961EF1B086B777B1AB1199511690769DD93";
    else if ( isdefined( var_0 ) && var_0 == "_encstr_A81A191238309BD1CFC64AD7A93731C041FC6711D721BA9AA23DE8" && istrue( level._id_12184 ) )
        var_2 = "_encstr_8149203DFBC0EF5B83A8A3D938DB9297FB57BBA3074907A909DAC902984F4C6F71CC";
    else if ( isdefined( var_0 ) && var_0 == "_encstr_98F90BDA40D8BFAC8149FAFF79" )
        var_2 = "_encstr_9F18210852FF4ED0282F8F893953088093E961B3FA0B754943E7AF911F2A82400FC3D3";
    else
        var_2 = "_encstr_87D31B3AA031BC33F1EEA9970E9963C7718842D2588F776703F687A29E";

    return var_2;
}
