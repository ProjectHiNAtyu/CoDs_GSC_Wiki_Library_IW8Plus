// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

ray_trace( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_7 = scripts\engine\utility::ter_op( isdefined( var_3 ), var_3, create_default_contents() );
    var_8 = scripts\engine\utility::ter_op( isdefined( var_5 ), var_5, 0 );
    var_9 = physics_raycast( var_0, var_1, var_7, var_2, 0, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3", var_8, var_6 );

    if ( var_9.size )
        var_9 = var_9[0];
    else
        var_9 = internal_pack_default_trace( var_1 );

    if ( isdefined( var_4 ) && var_4 )
        var_9 = convert_surface_flag( var_9 );

    return var_9;
}

ray_trace_ents( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = scripts\engine\utility::ter_op( isdefined( var_3 ), var_3, create_default_contents() );
    var_7 = scripts\engine\utility::ter_op( isdefined( var_5 ), var_5, 0 );
    var_8 = savepotgdata( var_0, var_1, var_6, var_2, 0, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3", var_7 );

    if ( var_8.size )
        var_8 = var_8[0];
    else
        var_8 = internal_pack_default_trace( var_1 );

    if ( isdefined( var_4 ) && var_4 )
        var_8 = convert_surface_flag( var_8 );

    return var_8;
}

_bullet_trace( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    var_9 = [ "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_B7F9145B18AB8AF721FE235718AB8F95E96811E39843", "_encstr_A18816F8C3E1EFFCFF5A92BF8363BBF55BCBD9C3538DF74D", "_encstr_B7D018B89C4B13AC473342305523920D607E50E3571038A69138", "_encstr_9DD6156A78B803FAD687D7EF95056246B86329B453E0D5" ];

    if ( var_2 )
    {
        var_9[var_9.size] = "_encstr_9F57173778F77BCBC6133048DA5B9B90BB0B28AFC43FE22B6A";
        var_9[var_9.size] = "_encstr_B874166814E073EA0FAE63B79B8107BB5BD25F7F1821CF8A";
    }

    if ( isdefined( var_4 ) && var_4 )
        var_9[var_9.size] = "_encstr_A8011987A827AB1B16E3C0980AEBCBC0CB5B98F32CFFD057BD2A50";

    if ( isdefined( var_6 ) && var_6 )
        var_9[var_9.size] = "_encstr_8ADD1C8334E5DC4BD89BB1DEDC4759373A37EBECCA432D1BC6AC8DD8D238";

    if ( !isdefined( var_7 ) || !var_7 )
        var_9[var_9.size] = "_encstr_98C1190E865EE6D26CDC36DE73A32B73E8E6EB6C1B5A0EB91AED1D";

    if ( !isdefined( var_8 ) || var_8 )
        var_9[var_9.size] = "_encstr_941116D7F47B0FC88317C8B07BCC017DD35AD8D44D52D773";

    if ( isdefined( var_5 ) && var_5 )
        return ray_trace_detail( var_0, var_1, var_3, physics_createcontents( var_9 ), 1 );
    else
        return ray_trace( var_0, var_1, var_3, physics_createcontents( var_9 ), 1 );
}

_bullet_trace_passed( var_0, var_1, var_2, var_3 )
{
    return ray_trace_passed( var_0, var_1, var_3, create_default_contents( !var_2 ) );
}

ray_trace_detail( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_7 = scripts\engine\utility::ter_op( isdefined( var_3 ), var_3, create_default_contents() );
    var_8 = scripts\engine\utility::ter_op( isdefined( var_5 ), var_5, 0 );

    if ( isdefined( var_6 ) )
        var_9 = physics_raycast( var_0, var_1, var_7, var_2, 1, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3", var_8, var_6 );
    else
        var_9 = physics_raycast( var_0, var_1, var_7, var_2, 1, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3", var_8 );

    if ( var_9.size )
        var_9 = var_9[0];
    else
        var_9 = internal_pack_default_trace( var_1 );

    if ( isdefined( var_4 ) && var_4 )
        var_9 = convert_surface_flag( var_9 );

    return var_9;
}

ray_trace_get_all_results( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = scripts\engine\utility::ter_op( isdefined( var_3 ), var_3, create_default_contents() );
    var_6 = physics_raycast( var_0, var_1, var_5, var_2, 0, "_encstr_A9C4110E43F2DCA58D9B2EBA5927BCFA853636" );

    if ( isdefined( var_4 ) && var_4 )
    {
        foreach ( var_9, var_8 in var_6 )
            var_6[var_9] = convert_surface_flag( var_8 );
    }

    return var_6;
}

ray_trace_passed( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\engine\utility::ter_op( isdefined( var_3 ), var_3, create_default_contents() );
    return !physics_raycast( var_0, var_1, var_4, var_2, 0, "_encstr_B3C411793B0B26E8CB729B139FA21048E2BBE3" );
}

ray_trace_detail_passed( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\engine\utility::ter_op( isdefined( var_3 ), var_3, create_default_contents() );
    return !physics_raycast( var_0, var_1, var_4, var_2, 1, "_encstr_B3C411793B0B26E8CB729B139FA21048E2BBE3" );
}

can_see_origin( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = 1;

    if ( !scripts\engine\math::point_in_fov( var_0 ) )
        return 0;

    return ray_trace_passed( self geteye(), var_0, self, create_contents( var_1, 1, 0, 1, 0, 1 ) );
}

sphere_trace( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, create_default_contents() );
    var_7 = physics_spherecast( var_0, var_1, var_2, var_6, var_3, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3" );

    if ( var_7.size )
        var_7 = var_7[0];
    else
        var_7 = internal_pack_default_trace( var_1 );

    if ( isdefined( var_5 ) && var_5 )
        var_7 = convert_surface_flag( var_7 );

    return var_7;
}

sphere_trace_get_all_results( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_7 = scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, create_default_contents() );
    var_8 = physics_spherecast( var_0, var_1, var_2, var_7, var_3, "_encstr_A9C4110E43F2DCA58D9B2EBA5927BCFA853636", undefined, var_6 );

    if ( isdefined( var_5 ) && var_5 )
    {
        for ( var_9 = 0; var_9 < var_8.size; var_9++ )
            var_8[var_9] = convert_surface_flag( var_8[var_9] );
    }

    return var_8;
}

sphere_trace_passed( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, create_default_contents() );
    return !physics_spherecast( var_0, var_1, var_2, var_5, var_3, "_encstr_B3C411793B0B26E8CB729B139FA21048E2BBE3" );
}

sphere_get_closest_point( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, create_default_contents() );
    var_7 = physics_getclosestpointtosphere( var_0, var_1, var_2, var_6, var_3, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3" );

    if ( var_7.size )
        var_7 = var_7[0];
    else
        var_7 = internal_pack_default_trace( var_0 );

    if ( isdefined( var_5 ) && var_5 )
        var_7 = convert_surface_flag( var_7 );

    return var_7;
}

capsule_trace( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    if ( !isdefined( var_4 ) )
        var_4 = ( 0, 0, 0 );

    var_8 = scripts\engine\utility::ter_op( isdefined( var_6 ), var_6, create_default_contents() );
    var_9 = convert_capsule_data( var_0, var_1, var_2, var_3, var_4 );
    var_10 = physics_capsulecast( var_9["_encstr_93970C6BC3676EF001A32103CAB3"], var_9["_encstr_AB580A146671D70FEF60A27A"], var_2, var_9["_encstr_8B0D0C0292508E011881CAA761C8"], var_4, var_8, var_5, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3" );

    if ( var_10.size )
        var_10 = var_10[0];
    else
        var_10 = internal_pack_default_trace( var_1 );

    if ( isdefined( var_7 ) && var_7 )
        var_10 = convert_surface_flag( var_10 );

    return var_10;
}

capsule_trace_get_all_results( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    if ( !isdefined( var_4 ) )
        var_4 = ( 0, 0, 0 );

    var_8 = scripts\engine\utility::ter_op( isdefined( var_6 ), var_6, create_default_contents() );
    var_9 = convert_capsule_data( var_0, var_1, var_2, var_3, var_4 );
    var_10 = physics_capsulecast( var_9["_encstr_93970C6BC3676EF001A32103CAB3"], var_9["_encstr_AB580A146671D70FEF60A27A"], var_2, var_9["_encstr_8B0D0C0292508E011881CAA761C8"], var_4, var_8, var_5, "_encstr_A9C4110E43F2DCA58D9B2EBA5927BCFA853636" );

    if ( isdefined( var_7 ) && var_7 )
    {
        foreach ( var_12 in var_10 )
            var_12 = convert_surface_flag( var_12 );
    }

    return var_10;
}

capsule_trace_passed( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( !isdefined( var_4 ) )
        var_4 = ( 0, 0, 0 );

    var_7 = scripts\engine\utility::ter_op( isdefined( var_6 ), var_6, create_default_contents() );
    var_8 = convert_capsule_data( var_0, var_1, var_2, var_3, var_4 );
    return !physics_capsulecast( var_8["_encstr_93970C6BC3676EF001A32103CAB3"], var_8["_encstr_AB580A146671D70FEF60A27A"], var_2, var_8["_encstr_8B0D0C0292508E011881CAA761C8"], var_4, var_7, var_5, "_encstr_B3C411793B0B26E8CB729B139FA21048E2BBE3" );
}

capsule_get_closest_point( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    if ( !isdefined( var_3 ) )
        var_3 = ( 0, 0, 0 );

    var_8 = scripts\engine\utility::ter_op( isdefined( var_6 ), var_6, create_default_contents() );
    var_9 = convert_capsule_data( var_0, undefined, var_1, var_2, var_3 );
    var_10 = physics_getclosestpointtocapsule( var_9["_encstr_93970C6BC3676EF001A32103CAB3"], var_1, var_9["_encstr_8B0D0C0292508E011881CAA761C8"], var_3, var_4, var_8, var_5, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3" );

    if ( var_10.size )
        var_10 = var_10[0];
    else
        var_10 = internal_pack_default_trace( var_0 );

    if ( isdefined( var_7 ) && var_7 )
        var_10 = convert_surface_flag( var_10 );

    return var_10;
}

player_trace( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( !isplayer( self ) )
        return;

    if ( !isdefined( var_2 ) )
        var_2 = self getplayerangles();

    var_7 = scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, create_default_contents() );

    if ( !isdefined( var_6 ) )
        var_6 = 0;

    var_8 = physics_charactercast( var_0, var_1, self, var_6, var_2, var_7, var_3, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3" );

    if ( var_8.size )
        var_8 = var_8[0];
    else
        var_8 = internal_pack_default_trace( var_1 );

    if ( isdefined( var_5 ) && var_5 )
        var_8 = convert_surface_flag( var_8 );

    return var_8;
}

player_trace_get_all_results( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( !isplayer( self ) )
        return;

    if ( !isdefined( var_2 ) )
        var_2 = self getplayerangles();

    var_7 = scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, create_default_contents() );

    if ( !isdefined( var_6 ) )
        var_6 = 0;

    var_8 = physics_charactercast( var_0, var_1, self, var_6, var_2, var_7, var_3, "_encstr_A9C4110E43F2DCA58D9B2EBA5927BCFA853636" );

    if ( isdefined( var_5 ) && var_5 )
    {
        foreach ( var_10 in var_8 )
            var_10 = convert_surface_flag( var_10 );
    }

    return var_8;
}

player_trace_passed( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( !isplayer( self ) )
        return;

    if ( !isdefined( var_2 ) )
        var_2 = self getplayerangles();

    var_6 = scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, create_default_contents() );

    if ( !isdefined( var_5 ) )
        var_5 = 0;

    return !physics_charactercast( var_0, var_1, self, var_5, var_2, var_6, var_3, "_encstr_B3C411793B0B26E8CB729B139FA21048E2BBE3" );
}

player_get_closest_point_static( var_0, var_1, var_2, var_3 )
{
    return player_get_closest_point( self.origin, self.angles, var_0, var_1, var_2, var_3 );
}

player_get_closest_point( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( !isplayer( self ) )
        return;

    if ( !isdefined( var_1 ) )
        var_1 = self getplayerangles();

    if ( !isdefined( var_2 ) )
        var_2 = 0;

    if ( isarray( var_3 ) )
        var_3 = scripts\engine\utility::array_add( var_3, self );
    else
        var_3 = self;

    var_6 = scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, create_default_contents() );
    var_7 = physics_getclosestpointtocharacter( var_0, self, 0, var_1, var_2, var_6, var_3, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3" );

    if ( var_7.size )
        var_7 = var_7[0];
    else
        var_7 = internal_pack_default_trace( var_0 );

    if ( isdefined( var_5 ) && var_5 )
        var_7 = convert_surface_flag( var_7 );

    return var_7;
}

ai_trace( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( !isai( self ) )
        return;

    if ( !isdefined( var_2 ) )
        var_2 = self.angles;

    var_7 = scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, create_solid_ai_contents() );

    if ( !isdefined( var_6 ) )
        var_6 = 0;

    var_8 = physics_charactercast( var_0, var_1, self, var_6, var_2, var_7, var_3, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3" );

    if ( var_8.size )
        var_8 = var_8[0];
    else
        var_8 = internal_pack_default_trace( var_1 );

    if ( isdefined( var_5 ) && var_5 )
        var_8 = convert_surface_flag( var_8 );

    return var_8;
}

ai_trace_get_all_results( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( !isai( self ) )
        return;

    if ( !isdefined( var_2 ) )
        var_2 = self.angles;

    var_7 = scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, create_solid_ai_contents() );

    if ( !isdefined( var_6 ) )
        var_6 = 0;

    var_8 = physics_charactercast( var_0, var_1, self, var_6, var_2, var_7, var_3, "_encstr_A9C4110E43F2DCA58D9B2EBA5927BCFA853636" );

    if ( isdefined( var_5 ) && var_5 )
    {
        foreach ( var_10 in var_8 )
            var_10 = convert_surface_flag( var_10 );
    }

    return var_8;
}

ai_trace_passed( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( !isai( self ) )
        return;

    if ( !isdefined( var_2 ) )
        var_2 = self.angles;

    var_6 = scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, create_solid_ai_contents() );

    if ( !isdefined( var_5 ) )
        var_5 = 0;

    return !physics_charactercast( var_0, var_1, self, var_5, var_2, var_6, var_3, "_encstr_B3C411793B0B26E8CB729B139FA21048E2BBE3" );
}

ai_get_closest_point( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( !isai( self ) )
        return;

    if ( !isdefined( var_1 ) )
        var_1 = self.angles;

    if ( !isdefined( var_2 ) )
        var_2 = 0;

    var_6 = scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, create_solid_ai_contents() );
    var_7 = physics_getclosestpointtocharacter( var_0, self, 0, var_1, var_2, var_6, var_3, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3" );

    if ( var_7.size )
        var_7 = var_7[0];
    else
        var_7 = internal_pack_default_trace( var_0 );

    if ( isdefined( var_5 ) && var_5 )
        var_7 = convert_surface_flag( var_7 );

    return var_7;
}

create_solid_ai_contents( var_0 )
{
    var_1 = [ "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_8F9917383497B9B4B19BD8DB733ACACD1D37EB58D26CC6D238", "_encstr_941116D7F47B0FC88317C8B07BCC017DD35AD8D44D52D773", "_encstr_B7D018B89C4B13AC473342305523920D607E50E3571038A69138" ];

    if ( !isdefined( var_0 ) || !var_0 )
        var_1 = scripts\engine\utility::array_add( var_1, "_encstr_9F57173778F77BCBC6133048DA5B9B90BB0B28AFC43FE22B6A" );

    return physics_createcontents( var_1 );
}

init_gas_trap_cloud()
{
    var_0 = [ "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_BA411B0E0DF2B9B4D8CD1BB7B9D1B2B93A37D707C6162FAC9C8DB196E0", "_encstr_9F57173778F77BCBC6133048DA5B9B90BB0B28AFC43FE22B6A", "_encstr_B874166814E073EA0FAE63B79B8107BB5BD25F7F1821CF8A", "_encstr_941116D7F47B0FC88317C8B07BCC017DD35AD8D44D52D773" ];
    return physics_createcontents( var_0 );
}

init_ground_vehicle( var_0, var_1 )
{
    var_2 = [ "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_B7F9145B18AB8AF721FE235718AB8F95E96811E39843", "_encstr_940C1AD7F47B0FC88317C8B07BCC017DD35AD8D70CA2EF73616F9860", "_encstr_B7D018B89C4B13AC473342305523920D607E50E3571038A69138" ];

    if ( !istrue( var_0 ) )
    {
        var_2[var_2.size] = "_encstr_B874166814E073EA0FAE63B79B8107BB5BD25F7F1821CF8A";
        var_2[var_2.size] = "_encstr_9F57173778F77BCBC6133048DA5B9B90BB0B28AFC43FE22B6A";
    }

    if ( !istrue( var_1 ) )
        var_2[var_2.size] = "_encstr_B352181CA1F237A56CE6B1B7E647AC373A6EFA99DE36D2C2762B";

    return physics_createcontents( var_2 );
}

create_ainosight_contents()
{
    var_0 = [ "_encstr_940C1AD7F47B0FC88317C8B07BCC017DD35AD8D70CA2EF73616F9860" ];
    return physics_createcontents( var_0 );
}

create_world_contents()
{
    var_0 = [ "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_A18816F8C3E1EFFCFF5A92BF8363BBF55BCBD9C3538DF74D", "_encstr_B7F9145B18AB8AF721FE235718AB8F95E96811E39843" ];
    return physics_createcontents( var_0 );
}

create_glass_contents()
{
    var_0 = [ "_encstr_941116D7F47B0FC88317C8B07BCC017DD35AD8D44D52D773" ];
    return physics_createcontents( var_0 );
}

create_ainoshoot_contents()
{
    var_0 = [ "_encstr_BC171A01888040635FFBA950527B2DE09B0BD79B21AD58B65B12203B" ];
    return physics_createcontents( var_0 );
}

create_item_contents()
{
    var_0 = [ "_encstr_9DD6156A78B803FAD687D7EF95056246B86329B453E0D5" ];
    return physics_createcontents( var_0 );
}

create_itemclip_contents()
{
    var_0 = [ "_encstr_A8011987A827AB1B16E3C0980AEBCBC0CB5B98F32CFFD057BD2A50" ];
    return physics_createcontents( var_0 );
}

create_vehicle_contents()
{
    var_0 = [ "_encstr_B7D018B89C4B13AC473342305523920D607E50E3571038A69138" ];
    return physics_createcontents( var_0 );
}

create_shotclip_contents()
{
    var_0 = [ "_encstr_98C1190E865EE6D26CDC36DE73A32B73E8E6EB6C1B5A0EB91AED1D", "_encstr_BD431CE7B0D853097F67676D6BE477B61B072950F79BD30A5247185850D0" ];
    return physics_createcontents( var_0 );
}

create_playerclip_contents()
{
    var_0 = [ "_encstr_BA411B0E0DF2B9B4D8CD1BB7B9D1B2B93A37D707C6162FAC9C8DB196E0" ];
    return physics_createcontents( var_0 );
}

create_character_contents()
{
    var_0 = [ "_encstr_9F57173778F77BCBC6133048DA5B9B90BB0B28AFC43FE22B6A", "_encstr_B874166814E073EA0FAE63B79B8107BB5BD25F7F1821CF8A" ];
    return physics_createcontents( var_0 );
}

create_default_contents( var_0 )
{
    if ( !isdefined( var_0 ) )
        var_0 = 0;

    return create_contents( !var_0, 1, 1, 1, 0, 1 );
}

create_contents( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    var_9 = 0;

    if ( isdefined( var_0 ) && var_0 )
        var_9 = var_9 + create_character_contents();

    if ( isdefined( var_1 ) && var_1 )
        var_9 = var_9 + create_world_contents();

    if ( isdefined( var_2 ) && var_2 )
        var_9 = var_9 + create_glass_contents();

    if ( isdefined( var_3 ) && var_3 )
        var_9 = var_9 + create_shotclip_contents();

    if ( isdefined( var_4 ) && var_4 )
        var_9 = var_9 + create_item_contents();

    if ( isdefined( var_5 ) && var_5 )
        var_9 = var_9 + create_vehicle_contents();

    if ( isdefined( var_6 ) && var_6 )
        var_9 = var_9 + create_playerclip_contents();

    if ( isdefined( var_7 ) && var_7 )
        var_9 = var_9 + create_ainosight_contents();

    if ( isdefined( var_8 ) && var_8 )
        var_9 = var_9 + create_itemclip_contents();

    return var_9;
}

create_all_contents()
{
    var_0 = [ "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_B352181CA1F237A56CE6B1B7E647AC373A6EFA99DE36D2C2762B", "_encstr_88D01F1C342F375A36DC36B7E6479537D16EF5CEAC1A96C6B159A3E42DCE9DB29C", "_encstr_941116D7F47B0FC88317C8B07BCC017DD35AD8D44D52D773", "_encstr_A18816F8C3E1EFFCFF5A92BF8363BBF55BCBD9C3538DF74D", "_encstr_BC171A01888040635FFBA950527B2DE09B0BD79B21AD58B65B12203B", "_encstr_BD431CE7B0D853097F67676D6BE477B61B072950F79BD30A5247185850D0", "_encstr_9DD6156A78B803FAD687D7EF95056246B86329B453E0D5", "_encstr_8ADD1C8334E5DC4BD89BB1DEDC4759373A37EBECCA432D1BC6AC8DD8D238", "_encstr_A8011987A827AB1B16E3C0980AEBCBC0CB5B98F32CFFD057BD2A50", "_encstr_B7F9145B18AB8AF721FE235718AB8F95E96811E39843", "_encstr_940C1AD7F47B0FC88317C8B07BCC017DD35AD8D70CA2EF73616F9860", "_encstr_98C1190E865EE6D26CDC36DE73A32B73E8E6EB6C1B5A0EB91AED1D", "_encstr_B874166814E073EA0FAE63B79B8107BB5BD25F7F1821CF8A", "_encstr_BA411B0E0DF2B9B4D8CD1BB7B9D1B2B93A37D707C6162FAC9C8DB196E0", "_encstr_8F9917383497B9B4B19BD8DB733ACACD1D37EB58D26CC6D238", "_encstr_B2DE204063B9D36B827216280DCB4BB81C97B1A0BF768B238A5D95ADE2F287C1753B", "_encstr_A80723E2CA9F68A706DB4F07AAF4D5363D167F5B3D96DFD5E6B8DBA3DD8BA55BFB72A71D0A", "_encstr_B7D018B89C4B13AC473342305523920D607E50E3571038A69138", "_encstr_B63817834397E6B48D37C6F6CD3A2BCD8E9BF55BC2B98EC656", "_encstr_9F57173778F77BCBC6133048DA5B9B90BB0B28AFC43FE22B6A", "_encstr_82B3189BD35E1B07097E62D5681B28084BB2419B6BFB286D9AC9", "_encstr_9FA41ED3503A6B8AE79EF6ED08A1020EE3E0F75BC891A9B21D35BA64E4BFDADA" ];
    return physics_createcontents( var_0 );
}

convert_surface_flag( var_0 )
{
    var_1 = physics_getsurfacetypefromflags( var_0["_encstr_949F0DA64FD0E8BF9FC9E418A77973"] );
    var_0["_encstr_93BC0DC6AF03CBCF33EDB4382F0FCB"] = var_1["_encstr_A48F06A5B991CA0F"];
    var_0["_encstr_AACA0C1F789BBECA2755F3A8C7C3"] = var_1["_encstr_81BA051A9AA88B"];
    return var_0;
}

convert_capsule_data( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( var_4 ) )
        var_4 = ( 0, 0, 0 );

    var_5 = var_3 * 0.5;
    var_6 = anglestoforward( var_4 );
    var_7 = anglestoup( var_4 );
    var_8 = [];
    var_8["_encstr_93970C6BC3676EF001A32103CAB3"] = var_0 + var_7 * var_5;

    if ( isdefined( var_1 ) )
        var_8["_encstr_AB580A146671D70FEF60A27A"] = var_1 + var_7 * var_5;

    var_8["_encstr_8A46076AD9D099BB5E"] = var_2;
    var_8["_encstr_9B6107C2DC3B63B2E6"] = var_4;
    var_8["_encstr_8B0D0C0292508E011881CAA761C8"] = var_5;
    return var_8;
}

draw_trace( var_0, var_1, var_2, var_3 )
{

}

draw_trace_hit( var_0, var_1, var_2, var_3, var_4 )
{

}

draw_trace_type( var_0, var_1, var_2 )
{

}

internal_pack_default_trace( var_0 )
{
    var_1 = [];
    var_1["_encstr_B130095358E1B3930B687D"] = 1;
    var_1["_encstr_949F0DA64FD0E8BF9FC9E418A77973"] = 0;
    var_1["_encstr_A138092CF32B9366E5287A"] = 0;
    var_1["_encstr_B7260923C89E8F3378E72E"] = var_0;
    var_1["_encstr_8B320F8A639B5B058EE8CFB7C803F1526D"] = var_0;
    var_1["_encstr_930E073E8FC00DDF69"] = ( 0, 0, 0 );
    var_1["_encstr_8BCC0F1F673AE5E88BF31E30DD627097F2"] = ( 0, 0, 0 );
    var_1["_encstr_871C08D169E3584B33BA"] = "_encstr_B94B0D11A9A3180B73FA4E506233CD";
    return var_1;
}

internal_create_debug_data( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{

}
