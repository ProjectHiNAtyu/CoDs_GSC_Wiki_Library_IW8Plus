// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    scripts\mp\killstreaks\killstreaks::registerkillstreak( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", ::tryuseremotetankfromstruct );
    level.tanksettings = [];
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"] = spawnstruct();
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].timeout = 60.0;
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].maxhealth = 3000;
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].hitstokill = 10;
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].streakname = "_encstr_9CB30B0EC28DFACD2BCD8E9CE5";
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].modelbase = "_encstr_B601149D590DE07DDA9636FA1BDC23FADD1A7B1DCAD8";
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].modelbasealt = "_encstr_BE601967AC1A83EBDAB4B1F58DB98C7DDDA1DBE8B236EB592C9B8E";
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].modeldestroyed = "_encstr_B601149D590DE07DDA9636FA1BDC23FADD1A7B1DCAD8";
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].mgturretmodelbase = "_encstr_95941BEBD9304899D1B3EB2F91087277A00D25F371A8E7E3359DABDFD9";
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].mgturretmodelbasealt = "_encstr_BC01206390B0F831137BCD09D12DBA57FB608F9378E827CB4B8E52BFC5A762310328";
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].mgturretinfo = "_encstr_B8C015E3F7CF776B6DD38B0391D6551D4ACE31CB3932F0";
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].sentrymodeon = "_encstr_8190077059F813F2FC";
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].sentrymodeoff = "_encstr_81FD0F630D75B34B6377920CF0B2D09EB3";
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].vehicleinfo = "_encstr_BE1B123B5634FA380B8DF5CD593747275EAFB51C";
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].stringcannotplace = &"_encstr_8BBF2012F18B3467D3E9F9D1503A470C376E05901367BC154DF131F9E805A9A64FC6";
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].scorepopup = "_encstr_94B3152B730EF3C2D08AC78F6683195AF0B7D78BC9366B";
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].vodestroyed = "_encstr_94B3152B730EF3C2D08AC78F6683195AF0B7D78BC9366B";
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].destroyedsplash = "_encstr_9DF01DF770F0EC7263B541871557FBBA38286793E92B597ADFCED73D853D63";
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].premoddamagefunc = undefined;
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].postmoddamagefunc = ::tank_modifydamageresponse;
    level.tanksettings["_encstr_AFAC0C7D7F756724B550FBB312D8"].deathfunc = ::tank_destroycallback;
    level._effect["_encstr_AD1314C6A72A277B959740D06BA3567B238AB1C07F02"] = loadfx( "_encstr_AA47314B1910FF5A7CB1C707490822E118E08253732B79B278355B4B2FCCDA2508883A1D6879046AA7196BDFB37323D6785170" );
    level._effect["_encstr_A11B1872418087A36D67034F1D0259C5508B6DBDD9686F0A3119"] = loadfx( "_encstr_9BB3366B38F9CDA713EBAF85E73067E469C0A3C3E0AB1697C0349E986843332F93582B0AA807CFF7231D5FBC1DA98B34BFF8237332FD474B" );
    level._effect["_encstr_9CC31A93B26B7B1DB2FAA3C2CD6DD76CE4C2E856FA950F38B1F623AC"] = loadfx( "_encstr_9FB62F63758B46D910A249CD83FA13FA69898FE3C5BDEA83AA733F909EE02872B531071755C81258783EF4DD53427EBA93" );
    level.remote_tank_armor_bulletdamage = 0.5;
    initmines();
    init_pac_sentry_vo();
    level.incomingallremotetanks = 0;
    level.incomingremotetanks["_encstr_BC850785638DA59537"] = 0;
    level.incomingremotetanks["_encstr_BA840579D3F7F6"] = 0;
    level.remotetanks = [];

    foreach ( var_1 in level.tanksettings )
    {
        if ( isdefined( var_1.hitstokill ) )
            scripts\mp\vehicles\damage::set_vehicle_hit_damage_data( var_1.streakname, var_1.hitstokill );
    }

    scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_setclearancecheckminradius( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", 32 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) ]]( "_encstr_BA3B11C0E23F8DC0D70CCD28F2272859691A58", 1, "_encstr_9CB30B0EC28DFACD2BCD8E9CE5" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) ]]( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", 18, "_encstr_BA3B11C0E23F8DC0D70CCD28F2272859691A58" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) ]]( "_encstr_808E0F48828D317103B7DE406CDBFEFB32", 1, "_encstr_9CB30B0EC28DFACD2BCD8E9CE5" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) ]]( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", 7, "_encstr_808E0F48828D317103B7DE406CDBFEFB32" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) ]]( "_encstr_A45E1539B897587167FB1946232F3BD82F59393B677D90", 1, "_encstr_9CB30B0EC28DFACD2BCD8E9CE5" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) ]]( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", 25, "_encstr_A45E1539B897587167FB1946232F3BD82F59393B677D90" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) ]]( "_encstr_AA9E139F78F82C0A91C8702DCB5FC291AB72B76F68", 1, "_encstr_9CB30B0EC28DFACD2BCD8E9CE5" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) ]]( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", 8, "_encstr_AA9E139F78F82C0A91C8702DCB5FC291AB72B76F68" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9366214882CB7771679858C048AF9BA976EA40603A6F532B3F9650C64EA740BB5E62E8" ) ]]( "_encstr_A90B13C38210FBDF596792D180BB50C7EF3B9FBAF0", 1, "_encstr_9CB30B0EC28DFACD2BCD8E9CE5" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_AB6E0F9DB2434BB163CA7D4658B5B0CECA", "_encstr_9F03212F2BE5B9BD90E01EA519E9C9D3A5BBDFDF8785607158C95F6DD3390D5A17CF4B" ) ]]( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", 15, "_encstr_A90B13C38210FBDF596792D180BB50C7EF3B9FBAF0" );

    scripts\mp\vehicles\damage::set_weapon_hit_damage_data_for_vehicle( "_encstr_BCAE08D8D0F5B607F538", 5, "_encstr_9CB30B0EC28DFACD2BCD8E9CE5" );
    scripts\cp_mp\utility\killstreak_utility::registervisibilityomnvarforkillstreak( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", "_encstr_8A86148E342D9346F50E5939B9BDDCBE435719F5DBE6", 11 );
    scripts\cp_mp\utility\killstreak_utility::registervisibilityomnvarforkillstreak( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", "_encstr_957714CC4BE46E3A7D07CAE4DCEDB9BED05D197DEDCD", 12 );
}

initmines()
{
    var_0 = scripts\cp_mp\vehicles\vehicle_mines::vehicle_mines_getleveldataforvehicle( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", 1 );
    var_0.frontextents = 32;
    var_0.backextents = 32;
    var_0.leftextents = 22;
    var_0.rightextents = 22;
    var_0.bottomextents = 10;
    var_0.distancetobottom = 20;
}

init_pac_sentry_vo()
{
    game["_encstr_B8DA073D799798C7C7"]["_encstr_B11D180E2CC6F53756E63A39E5FA5BB4CD374BB1B2BE63ED1BB5"] = "_encstr_B11D180E2CC6F53756E63A39E5FA5BB4CD374BB1B2BE63ED1BB5";
}

weapongivenremotetank( var_0 )
{
    return 1;
}

deployweapontaken( var_0 )
{
    self notify( "_encstr_B1B117FC70CD780F34D8A4699085F2401FF99730A743F1154E" );
}

tryuseremotetank()
{
    var_0 = scripts\cp_mp\utility\killstreak_utility::createstreakinfo( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", self );
    return tryuseremotetankfromstruct( var_0 );
}

tryuseremotetankfromstruct( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( isdefined( level.killstreaktriggeredfunc ) )
    {
        if ( !level [[ level.killstreaktriggeredfunc ]]( var_0 ) )
            return 0;
    }

    level thread scripts\mp\battlechatter_mp::trysaylocalsound( self, "_encstr_943A1BA3232FB982E369139E4362D36F5A89C7C84018FF021785406AA3" );
    var_1 = getcompleteweaponname( "_encstr_889914F7B33FEBE023D5739DB9528B86C07E8F498A0B" );
    var_2 = scripts\cp_mp\killstreaks\killstreakdeploy::streakdeploy_doweapontabletdeploy( var_0, ::weapongivenremotetank, undefined, undefined, ::deployweapontaken );

    if ( !istrue( var_2 ) )
        return 0;

    if ( isdefined( level.killstreakbeginusefunc ) )
    {
        if ( !level [[ level.killstreakbeginusefunc ]]( var_0 ) )
        {
            var_0 notify( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );
            return 0;
        }
    }

    if ( !scripts\cp_mp\vehicles\vehicle_tracking::reservevehicle() )
    {
        scripts\mp\hud_message::showerrormessage( &"_encstr_BA8B1EA7793D498E7339BD25B0B7784105870733D915B9F01360142CD8E31501" );
        return 0;
    }

    scripts\mp\utility\killstreak::incrementfauxvehiclecount();
    var_3 = 1;

    if ( scripts\mp\utility\killstreak::currentactivevehiclecount() >= scripts\mp\utility\killstreak::maxvehiclesallowed() || level.fauxvehiclecount + var_3 >= scripts\mp\utility\killstreak::maxvehiclesallowed() )
    {
        scripts\mp\hud_message::showerrormessage( "_encstr_BA8B1EA7793D498E7339BD25B0B7784105870733D915B9F01360142CD8E31501" );
        var_0 notify( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );
        scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();
        return 0;
    }

    level.incomingallremotetanks++;
    var_4 = 2;

    if ( scripts\cp_mp\utility\game_utility::islargemap() )
        var_4 = 4;

    if ( level.remotetanks.size >= var_4 || level.remotetanks.size + level.incomingallremotetanks > var_4 )
    {
        scripts\mp\hud_message::showerrormessage( "_encstr_BA8B1EA7793D498E7339BD25B0B7784105870733D915B9F01360142CD8E31501" );
        level.incomingallremotetanks--;
        var_0 notify( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );
        scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();
        return 0;
    }

    if ( level.teambased )
    {
        var_5 = 1;

        if ( scripts\cp_mp\utility\game_utility::islargemap() )
            var_5 = 2;

        level.incomingremotetanks[self.team]++;

        if ( scripts\cp_mp\utility\killstreak_utility::getnumactivekillstreakperteam( self.team, level.remotetanks ) + level.incomingremotetanks[self.team] > var_5 )
        {
            level.incomingallremotetanks--;
            level.incomingremotetanks[self.team]--;
            scripts\mp\hud_message::showerrormessage( "_encstr_9D9F22C4B381D873AFB9273F192777B0F353590F865380A675714F3FE17CD5F8514ED5B5" );
            var_0 notify( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );
            scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();
            return 0;
        }
    }

    if ( level.gameended )
    {
        var_0 notify( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );
        return 0;
    }

    var_6 = starttankdropoff( var_0 );
    level.incomingallremotetanks--;

    if ( level.teambased )
        level.incomingremotetanks[self.team]--;

    if ( !istrue( var_6 ) )
    {
        scripts\mp\hud_message::showerrormessage( "_encstr_BE361DBCACABFD8F4DF511589F39D86DED517F07D81709D4B0C10BE02886FF" );
        scripts\mp\utility\killstreak::decrementfauxvehiclecount();
        return 0;
    }

    return 1;
}

getpathstart( var_0, var_1 )
{
    var_2 = 100;
    var_3 = 15000;
    var_4 = ( 0, var_1, 0 );
    var_5 = var_0 + anglestoforward( var_4 ) * ( -1 * var_3 );
    var_5 = var_5 + ( ( randomfloat( 2 ) - 1 ) * var_2, ( randomfloat( 2 ) - 1 ) * var_2, 0 );
    return var_5;
}

getpathend( var_0, var_1 )
{
    var_2 = 150;
    var_3 = 15000;
    var_4 = ( 0, var_1, 0 );
    var_5 = var_0 + anglestoforward( var_4 + ( 0, 90, 0 ) ) * var_3;
    var_5 = var_5 + ( ( randomfloat( 2 ) - 1 ) * var_2, ( randomfloat( 2 ) - 1 ) * var_2, 0 );
    return var_5;
}

starttankdropoff( var_0 )
{
    self disablephysicaldepthoffieldscripting();
    var_1 = tank_findsafespawn( 100 );

    if ( !isdefined( var_1 ) )
    {
        var_0 notify( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );
        return 0;
    }

    var_3 = getdvarint( "_encstr_ADDE1AC399CE87E208CF4F6BEB582B8BF3B6FA9AE3A5371A58337F4E", 1 );
    var_4 = undefined;
    var_5 = undefined;

    if ( !var_3 )
    {
        var_6 = scripts\engine\utility::drop_to_ground( var_1, 50, -200, ( 0, 0, 1 ) );
        var_6 = var_6 + ( 0, 0, 1 );
        var_5 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_6 );
        var_5 setmodel( "_encstr_B1341977F801B8C205ED313341BF7A6A8940C7C3489EFB4A6F7287" );
        var_5.angles = ( 0, 90, 90 );
        var_4 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_6 );
        var_4 setmodel( "_encstr_B83113372F11567891EB51EE5579B09A6A83E7B3BB" );
        var_4 setscriptablepartstate( "_encstr_BE72069FCF8ACAA8", "_encstr_9707035F3B", 0 );
        var_5 playsound( "_encstr_A9DB18B2C0100332F0979BDF9D876A45E9A9E8FA5839D1DB31AF" );
    }

    self.restoreangles = self getplayerangles();
    scripts\mp\utility\player::_freezecontrols( 1 );
    scripts\common\utility::allow_fire( 0 );
    var_3 = getdvarint( "_encstr_ADDE1AC399CE87E208CF4F6BEB582B8BF3B6FA9AE3A5371A58337F4E", 0 );

    if ( !var_3 )
    {
        var_7 = self.angles[1];
        var_8 = var_1 * ( 1, 1, 0 ) + ( 0, 0, 850 );
        var_9 = getpathstart( var_8, var_7 );
        var_10 = getpathend( var_8, var_7 );
        var_8 = var_8 + anglestoforward( ( 0, var_7, 0 ) ) * -50;
        var_11 = createdropoffheli( self, var_9, var_8 );
        var_11.droptype = "_encstr_9CB30B0EC28DFACD2BCD8E9CE5";
        var_11 setvehgoalpos( var_8, 1 );
        var_11 thread tank_finishdropoffsequence( self, var_1, var_10, var_0, var_4, var_5 );
    }
    else
    {
        scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();
        var_12 = createtank( "_encstr_AFAC0C7D7F756724B550FBB312D8", self, var_0, var_1, undefined, var_3 );

        if ( !isdefined( var_12 ) )
        {
            scripts\mp\utility\killstreak::decrementfauxvehiclecount();
            scripts\mp\utility\player::_freezecontrols( 0 );
            scripts\common\utility::allow_fire( 1 );
            return 0;
        }

        scripts\common\utility::allow_fire( 1 );
        thread startusingtank( var_12, var_3 );
    }

    scripts\cp_mp\utility\killstreak_utility::playkillstreakoperatordialog( "_encstr_9BE405709A9D69" + var_0.streakname, 1 );
    scripts\common\utility::_id_13E0A( level._id_11B2A, "_encstr_9CB30B0EC28DFACD2BCD8E9CE5", self.origin );
    thread scripts\mp\hud_util::teamplayercardsplash( "_encstr_B4C1102F4F9F61B9DB217A9906E79A93D268", self );
    return 1;
}

createdropoffheli( var_0, var_1, var_2 )
{
    var_3 = vectortoangles( var_2 - var_1 );
    var_4 = "_encstr_93930F6B1F3351B983929022655110C88B";
    var_5 = spawnhelicopter( var_0, var_1, var_3, var_4, "_encstr_BD5414AE611AF1E11559E0D0B75375202BC2A6C9B3B8" );

    if ( !isdefined( var_5 ) )
        return;

    var_5 playloopsound( "_encstr_A1911D6351B8A7E2D72B6F7B1B680AD9C0185A6B2B78219AB8C35F5B07A9A3" );
    var_5.maxhealth = 500;
    var_5.owner = var_0;
    var_5.team = var_0.team;
    var_5.isairdrop = 1;
    var_5 setmaxpitchroll( 15, 15 );
    var_5 vehicle_setspeed( 250, 175 );
    var_5.helitype = "_encstr_9867080A50FD0FDBE03F";
    var_5.boxmodel = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_5.origin - ( 0, 0, 100 ) );
    var_5.boxmodel setmodel( "_encstr_A9E31AECB20D70AF6B96D87DD83719AFEED0DE472B8DBEC693C2D195" );
    var_5.boxmodel.angles = var_5.angles;
    var_5.boxmodel linkto( var_5 );
    var_5.intromodel = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_5.boxmodel.origin );
    var_5.intromodel setmodel( "_encstr_B601149D590DE07DDA9636FA1BDC23FADD1A7B1DCAD8" );
    var_5.intromodel.angles = var_5.boxmodel.angles;
    var_5.intromodel.owner = var_5.owner;
    var_5.intromodel linkto( var_5.boxmodel );
    var_5.turretmodel = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_5.intromodel gettagorigin( "_encstr_94FE0B5D3E12DFD32D9BD868EB" ) );
    var_5.turretmodel setmodel( "_encstr_95941BEBD9304899D1B3EB2F91087277A00D25F371A8E7E3359DABDFD9" );
    var_5.turretmodel.angles = var_5.intromodel.angles;
    var_5.turretmodel setotherent( var_5.owner );
    var_5.turretmodel linkto( var_5.intromodel );
    var_5.owner playerlinkweaponviewtodelta( var_5.turretmodel, "_encstr_BA010BA012DFB703A379A39542", 1, 0, 0, 0, 0, 1 );
    var_5.owner playerlinkedsetviewznear( 0 );
    var_5.intromodel scriptmodelplayanim( "_encstr_8FFE17B638F5DD1A2B5963E6DBB9AF199CDE1CBEA5738E93DB" );
    var_5.owner setclientomnvar( "_encstr_9B2E17AD633E13960F398BE2D8490A6F96DE0F3E0563A71D17", 1 );
    var_5.owner setclientomnvar( "_encstr_8017149D415723F3EEC9D860B2438D5AFFE3A71DA543", 0 );
    var_5.owner setclientomnvar( "_encstr_AA4F159574D9FF084CAB88A8CB9DC13721DC05178DC3A1", 3000 );
    var_5 thread scripts\mp\killstreaks\helicopter::heli_damage_monitor( "_encstr_9CB30B0EC28DFACD2BCD8E9CE5" );
    var_5 scripts\mp\utility\killstreak::addtoactivekillstreaklist( var_5.helitype, "_encstr_B2860FEF13897ACB10E3FFC6F871C1E25E", var_0, 0, 1, 100 );
    var_5 thread tank_handlehelidamage();
    return var_5;
}

createtank( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = level.tanksettings[var_0];
    var_7 = var_1.angles;

    if ( isdefined( var_4 ) )
        var_7 = var_4.angles;

    var_8 = spawnstruct();
    var_8.origin = var_3;
    var_8.angles = var_7;
    var_8.modelname = var_6.modelbase;
    var_9 = scripts\cp_mp\utility\player_utility::getplayersuperfaction( var_1 );

    if ( var_9 )
        var_8.modelname = var_6.modelbasealt;

    var_8.targetname = var_0;
    var_8.vehicletype = var_6.vehicleinfo;
    var_8.owner = var_1;
    var_8.cannotbesuspended = 1;
    var_10 = spawnstruct();
    var_11 = scripts\cp_mp\vehicles\vehicle_tracking::_spawnvehicle( var_8, var_10 );

    if ( !isdefined( var_11 ) )
        return undefined;

    var_12 = getdvarint( "_encstr_B4EF1870679A0E01CA0E607EE75241D3E9FF1028CB25A3CBD2B7", var_6.timeout );
    var_11.team = var_1.team;
    var_11.owner = var_1;
    var_11.streakinfo = var_2;
    var_11.tanktype = var_0;
    var_11.config = var_6;
    var_11.maxhealth = var_6.maxhealth;
    var_11.health = var_11.maxhealth;
    var_11.lifetime = var_12;
    var_11.superfaction = var_9;
    var_11.currentdamagestate = 0;
    var_11.objweapon = getcompleteweaponname( var_6.mgturretinfo );
    var_11 setotherent( var_1 );
    var_11 setvehicleteam( var_11.team );
    var_11 scripts\mp\sentientpoolmanager::registersentient( "_encstr_A129125A5AC636B9A3C9B258DAF51D93B7EAB9C8", var_1 );
    var_11 scripts\mp\utility\killstreak::killstreak_make_vehicle( var_2.streakname, var_6.scorepopup, var_6.vodestroyed, undefined, var_6.destroyedsplash );
    var_11 scripts\mp\utility\killstreak::killstreak_set_pre_mod_damage_callback( var_2.streakname, var_6.premoddamagefunc );
    var_11 scripts\mp\utility\killstreak::killstreak_set_post_mod_damage_callback( var_2.streakname, var_6.postmoddamagefunc );
    var_11 scripts\mp\utility\killstreak::killstreak_set_death_callback( var_2.streakname, var_6.deathfunc );
    scripts\cp_mp\utility\weapon_utility::setlockedoncallback( var_11, ::tank_lockedoncallback );
    scripts\cp_mp\utility\weapon_utility::setlockedonremovedcallback( var_11, ::tank_lockedonremovedcallback );
    var_11.useobj = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_11 gettagorigin( "_encstr_8B1E09E97A4FAFAD55C15A" ) );
    var_11.useobj linkto( var_11, "_encstr_8B1E09E97A4FAFAD55C15A" );
    var_14 = var_11 gettagorigin( "_encstr_94FE0B5D3E12DFD32D9BD868EB" );
    var_15 = var_6.mgturretmodelbase;

    if ( var_9 )
        var_15 = var_6.mgturretmodelbasealt;

    var_16 = spawnturret( "_encstr_88710C0763169AF7A3330A1229D8", var_14, var_6.mgturretinfo, 0 );
    var_16 linkto( var_11, "_encstr_94FE0B5D3E12DFD32D9BD868EB", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_16 setmodel( var_15 );
    var_16.owner = var_1;
    var_16.angles = var_11.angles;
    var_16.tank = var_11;
    var_16 makeusable();
    var_16 setdefaultdroppitch( 0 );
    var_16 setmode( "_encstr_8190077059F813F2FC" );
    var_16 setotherent( var_1 );
    var_11 scripts\cp_mp\vehicles\vehicle_damage::vehicle_damage_setcandamage( 0 );
    var_11.mgturret = var_16;

    if ( scripts\cp_mp\utility\game_utility::isnightmap() )
        var_11.mgturret setscriptablepartstate( "_encstr_B38A07C696D9A13ACD", "_encstr_9707035F3B" );

    var_11 thread tank_watchfortimeoutdisowned();
    var_11 thread _id_13A50();
    var_11 thread _id_13A51();
    var_11 thread tank_handleairburst();
    var_11 thread tank_handlewheeldustfx();
    var_11 thread tank_updatehudchassisangles();
    var_11 thread tank_updatehudviewstate();
    var_11 thread wheelson_enginesfx();
    var_11.childoutlineents = [ var_11, var_16 ];

    if ( istrue( var_5 ) )
    {
        var_17 = 1;
        var_18 = "_encstr_8A86148E342D9346F50E5939B9BDDCBE435719F5DBE6";

        if ( isdefined( var_1.previousremotetankviewstate ) )
        {
            var_17 = var_1.previousremotetankviewstate;

            if ( var_18 == 2 )
                var_18 = "_encstr_957714CC4BE46E3A7D07CAE4DCEDB9BED05D197DEDCD";
        }

        var_1 scripts\cp_mp\utility\killstreak_utility::_setvisibiilityomnvarforkillstreak( var_11.streakinfo.streakname, var_18 );
        var_1 setclientomnvar( "_encstr_9B2E17AD633E13960F398BE2D8490A6F96DE0F3E0563A71D17", var_17 );
        var_1 setclientomnvar( "_encstr_8017149D415723F3EEC9D860B2438D5AFFE3A71DA543", 0 );
        var_1 setclientomnvar( "_encstr_AA4F159574D9FF084CAB88A8CB9DC13721DC05178DC3A1", 3000 );
        scripts\mp\outofbounds::registerentforoob( var_11, "_encstr_B6CE0B0BB00A031B7B88355740" );
    }

    scripts\cp_mp\vehicles\vehicle_tracking::vehicle_tracking_registerinstance( var_11, var_1, var_1.team );
    level.remotetanks[level.remotetanks.size] = var_11;
    var_11 scripts\mp\utility\killstreak::addtoactivekillstreaklist( var_2.streakname, "_encstr_A129125A5AC636B9A3C9B258DAF51D93B7EAB9C8", var_1, 0, 1, 60 );
    level notify( "_encstr_93352485576B6FC43DF8FA322879FC2361D0030DFFB09BC1CF7822EBD041B98B992391BB8139", var_11 );
    return var_11;
}

tank_lockedoncallback()
{
    scripts\cp_mp\utility\killstreak_utility::playkillstreakoperatordialog( "_encstr_B11D180E2CC6F53756E63A39E5FA5BB4CD374BB1B2BE63ED1BB5" );
    scripts\cp_mp\utility\vehicle_omnvar_utility::vehomn_showwarning( "_encstr_AFFA0F6BB437B9A5C62B62BD36B54B733B", self.owner, "_encstr_B6CE0B0BB00A031B7B88355740" );
}

tank_lockedonremovedcallback()
{
    scripts\cp_mp\utility\vehicle_omnvar_utility::vehomn_hidewarning( "_encstr_AFFA0F6BB437B9A5C62B62BD36B54B733B", self.owner, "_encstr_B6CE0B0BB00A031B7B88355740" );
}

tank_finishdropoffsequence( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self waittill( "_encstr_AA7205F03A9609" );
    self setyawspeed( 40, 20, 20, 0.3 );
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 0.1 );
    self notify( "_encstr_8BA80B48328030BE3E4516541F" );
    self.boxmodel unlink();
    self.boxmodel moveto( var_1, 1.5, 1 );
    self.intromodel scriptmodelplayanim( "_encstr_805D193087BFC7DC81EFA9A0C0185FEC0A623841FA21EAB5E73BCF" );
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 1.5 );
    self.intromodel scriptmodelplayanim( "_encstr_A1FA166BC1EBBB865956D8DCDEB9F546E47BE0D7C6853791" );
    earthquake( 0.3, 0.1, self.intromodel.origin, 400 );
    playrumbleonposition( "_encstr_9DD11130F34C18E9EA7F26ABD92313408263E8", self.intromodel.origin );
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 0.7 );
    var_6 = self.turretmodel gettagorigin( "_encstr_BA010BA012DFB703A379A39542" );
    var_7 = self.turretmodel.angles;
    var_8 = var_6 - anglestoforward( var_7 ) * 100;
    var_9 = var_7;
    playfx( scripts\engine\utility::getfx( "_encstr_9CC31A93B26B7B1DB2FAA3C2CD6DD76CE4C2E856FA950F38B1F623AC" ), self.intromodel.origin );
    earthquake( 0.3, 0.1, self.intromodel.origin, 400 );
    playrumbleonposition( "_encstr_A4BE0D23B06BC2D995BEA1B258CECB", self.intromodel.origin );
    self.boxmodel delete();
    self.intromodel delete();
    self.turretmodel delete();
    scripts\cp_mp\vehicles\vehicle_tracking::clearvehiclereservation();
    var_10 = createtank( "_encstr_AFAC0C7D7F756724B550FBB312D8", var_0, var_3, var_1, self );

    if ( !isdefined( var_10 ) )
    {
        scripts\mp\utility\killstreak::decrementfauxvehiclecount();
        var_0 scripts\mp\utility\player::_freezecontrols( 0 );
        var_0 scripts\common\utility::allow_fire( 1 );
        return 0;
    }

    var_10 tank_playercameratransition( var_6, var_7, var_8, var_9 );
    var_0 scripts\common\utility::allow_fire( 1 );
    var_0 thread startusingtank( var_10 );
    self setvehgoalpos( var_2, 1 );
    self.leaving = 1;
    self waittill( "_encstr_AA7205F03A9609" );
    self delete();
    var_4 delete();
    var_5 delete();
}

tank_playercameratransition( var_0, var_1, var_2, var_3 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self.owner unlink();
    var_4 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0 );
    var_4 setmodel( "_encstr_BA010BA012DFB703A379A39542" );
    var_4.owner = self.owner;
    var_4.angles = var_1;
    self.owner playerlinkweaponviewtodelta( var_4, "_encstr_BA010BA012DFB703A379A39542", 1, 0, 0, 0, 0, 1 );
    self.owner playerlinkedsetviewznear( 0 );
    self.owner visionsetkillstreakforplayer( "_encstr_BC5911336A3EB1074FFE895360F00D8BE0F0E2", 0.2 );
    var_2 = var_2 + ( 0, 0, 20 );
    var_3 = vectortoangles( var_0 - var_2 );
    var_4 moveto( var_2, 0.5 );
    var_4 rotateto( var_3, 0.5 );
    self.owner thread tank_startfadetransition();
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 0.5 );
    self.owner visionsetkillstreakforplayer( "_encstr_A40101", 0.2 );
    self.owner unlink();
    var_4 delete();
}

tank_startfadetransition()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level thread scripts\cp_mp\utility\game_utility::fadetoblackforplayer( self, 1, 0.5 );
    wait 0.5;
    level thread scripts\cp_mp\utility\game_utility::fadetoblackforplayer( self, 0, 0.5 );
}

tank_turrethandleuse( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    tank_disableturretuseforenemies( var_0 );

    for (;;)
    {
        var_0 waittill( "_encstr_8B5C081B58E0B7A213E6", var_1 );
        var_1 setplayerangles( var_0.angles );
        var_1 playerlinkto( self, "_encstr_8C1B0F9BD01701134077B9DD96EB3F974B" );
        var_1 thread tank_watchstopuseturret( var_0, self );
    }
}

tank_disableturretuseforenemies( var_0 )
{
    foreach ( var_2 in level.players )
    {
        if ( isdefined( var_2.team ) && var_2.team == self.team )
            continue;

        var_2 disableplayeruse();
    }

    thread tank_disableturretforfutureenemies( var_0 );
}

tank_disableturretforfutureenemies( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        level waittill( "_encstr_9E7F0F83E0068BA8D3374EA2490F65E339", var_1 );

        if ( isdefined( var_1.team ) && var_1.team == self.team )
        {
            var_0 enableplayeruse( var_1 );
            continue;
        }

        var_0 disableplayeruse( var_1 );
    }
}

tank_watchstopuseturret( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A3750609A5E61883" );

    while ( isdefined( var_0 ) && self isusingturret() )
        waitframe();

    var_2 = tank_findsafedetach( var_1 );
    self unlink();
    self dontinterpolate();
    self.origin = var_2;
    self.angles = var_0.angles;
    self notify( "_encstr_B3B312FD87F06B20CFAB677EE907D3FD02733D6D" );
}

tank_findsafedetach( var_0 )
{
    var_1 = undefined;
    var_2 = anglestoforward( var_0.angles );
    var_3 = anglestoright( var_0.angles );
    var_4 = var_0.origin + var_2 * 100;
    var_5 = var_0.origin - var_2 * 100;
    var_6 = var_0.origin + var_3 * 100;
    var_7 = var_0.origin - var_3 * 100;
    var_8 = [ var_5, var_6, var_7, var_4 ];

    foreach ( var_11, var_10 in var_8 )
    {
        if ( capsuletracepassed( var_10, 40, 80, var_0, 0, 1 ) )
        {
            var_1 = var_10;
            break;
        }
    }

    return var_1;
}

startusingtank( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 scripts\cp_mp\vehicles\vehicle_damage::vehicle_damage_setcandamage( 1 );
    var_2 = spawnstruct();
    var_2.playdeathfx = 1;
    var_2.deathoverridecallback = ::tank_override_moving_platform_death;
    var_0 thread scripts\mp\movers::handle_moving_platforms( var_2 );
    var_0 setotherent( self );
    var_0 setentityowner( self );
    var_0.driver = self;

    if ( istrue( var_1 ) )
        self unlink();

    self controlslinkto( var_0 );
    self remotecontrolturret( var_0.mgturret );
    self painvisionoff();
    scripts\cp_mp\utility\killstreak_utility::killstreak_savenvgstate();
    self setclientomnvar( "_encstr_A42D18CD082E5CE1F178A2E9364DE7A24FDF78C8B250272DC450", gettime() + int( var_0.lifetime * 1000 ) );
    self setclientomnvar( "_encstr_AA4F159574D9FF084CAB88A8CB9DC13721DC05178DC3A1", var_0.health / var_0.maxhealth );
    scripts\cp_mp\utility\shellshock_utility::_stopshellshock();
    scripts\common\utility::allow_shellshock( 0 );
    scripts\mp\outofbounds::registerentforoob( var_0, "_encstr_B6CE0B0BB00A031B7B88355740" );
    var_0 thread tank_earthquake();
    var_0 thread scripts\mp\killstreaks\killstreaks::allowridekillstreakplayerexit( "_encstr_A3750609A5E61883" );
    scripts\mp\utility\player::enableplayerforspawnlogic( 0, "_encstr_94300BF83A35AFFBEFD437B8F3" );
    scripts\mp\spawnlogic::addspawnviewer( var_0 );
    var_0 scripts\cp_mp\emp_debuff::set_start_emp_callback( ::tank_empstarted );
    var_0 scripts\cp_mp\emp_debuff::set_clear_emp_callback( ::tank_empcleared );
    scripts\mp\utility\player::_freezecontrols( 0 );
}

tank_handlehelidamage()
{
    self endon( "_encstr_A3750609A5E61883" );
    scripts\mp\damage::monitordamage( self.maxhealth, "_encstr_A40101", ::tank_handlehelideathdamage, ::tank_modifyhelidamage, 1 );
}

tank_modifyhelidamage( var_0 )
{
    var_1 = var_0.attacker;
    var_2 = var_0.objweapon;
    var_3 = var_0.meansofdeath;
    var_4 = var_0.damage;
    var_5 = var_0.idflags;
    var_6 = var_4;
    var_6 = scripts\mp\utility\killstreak::getmodifiedantikillstreakdamage( var_1, var_2, var_3, var_6, self.maxhealth, 1, 1, 1 );
    return var_6;
}

tank_handlehelideathdamage( var_0 )
{
    var_1 = var_0.attacker;
    var_2 = var_0.objweapon;
    var_3 = var_0.meansofdeath;
    var_4 = var_0.damage;
    var_5 = var_0.idflags;

    if ( isdefined( self.intromodel ) )
        self.intromodel delete();

    self notify( "_encstr_A3750609A5E61883" );
}

tank_modifydamageresponse( var_0 )
{
    thread tank_modifydamagestate( var_0 );
    var_1 = var_0.damage;
    var_2 = var_0.meansofdeath;

    if ( isdefined( self.owner ) && self.owner scripts\mp\utility\player::isusingremote() )
    {
        if ( isexplosivedamagemod( var_2 ) )
        {
            if ( ceil( var_1 / self.maxhealth ) >= 0.33 )
            {
                self.owner earthquakeforplayer( 0.25, 0.2, self.mgturret.origin, 150 );
                self.owner playrumbleonpositionforclient( "_encstr_A4BE0D23B06BC2D995BEA1B258CECB", self.owner geteye() );
            }
        }
        else
        {
            self.owner earthquakeforplayer( 0.15, 0.15, self.mgturret.origin, 150 );
            self.owner playrumbleonpositionforclient( "_encstr_9C4F0D87B1F0F9E23D3733DFBF531B", self.owner geteye() );
        }
    }

    return 1;
}

tank_modifydamagestate( var_0 )
{
    var_1 = var_0.damage;
    self.currenthealth = self.health - var_1;

    if ( self.currenthealth <= int( self.maxhealth / 1.2 ) && self.currentdamagestate == 0 )
    {
        self.currentdamagestate = 1;
        self setscriptablepartstate( "_encstr_B1291298F623F2EB460BD60BEC59FAD85A76343A", "_encstr_9707035F3B" );
    }
    else if ( self.currenthealth <= int( self.maxhealth / 2 ) && self.currentdamagestate == 1 )
    {
        self.currentdamagestate = 2;
        self setscriptablepartstate( "_encstr_97BC13D218214F716990429AB8B3B9D7F975515DA1", "_encstr_9707035F3B" );
    }
    else if ( self.currenthealth <= int( self.maxhealth / 3 ) && self.currentdamagestate == 2 )
    {
        self.currentdamagestate = 3;
        self setscriptablepartstate( "_encstr_A34112C47B32BCEB32B06B58EC56EB43CA85CE5E", "_encstr_9707035F3B" );
        self.mgturret setscriptablepartstate( "_encstr_97A50EC9558288A5C3F989D1226F6CF8", "_encstr_9707035F3B" );
    }

    self.owner setclientomnvar( "_encstr_AA4F159574D9FF084CAB88A8CB9DC13721DC05178DC3A1", self.currenthealth / self.maxhealth );
    return 1;
}

tank_override_moving_platform_death( var_0 )
{
    thread tank_destroy();
}

tank_watchfortimeoutdisowned()
{
    self endon( "_encstr_A3750609A5E61883" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    tank_watchfortimeoutdisownedendearly();
    scripts\cp_mp\utility\killstreak_utility::playkillstreakoperatordialog( "_encstr_98F413A8E23D99885B83F7FBD18BB70F793D9375CA", 1 );
    thread tank_destroy();
}

tank_watchfortimeoutdisownedendearly()
{
    self endon( "_encstr_8CDA0F40BF7498F74B9A4D4734B029E0B4" );
    self.owner endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self.owner endon( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
    self.owner endon( "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
    self.owner endon( "_encstr_825E117CC30B556FA230E2EADE079FCD2897E8" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( self.lifetime );
}

_id_13A50()
{
    self endon( "_encstr_A3750609A5E61883" );
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    thread tank_destroy();
}

_id_13A51()
{
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        scripts\cp_mp\vehicles\vehicle::_id_14103( self );
        waitframe();
    }
}

tank_destroy( var_0, var_1 )
{
    if ( istrue( self.destroyed ) )
        return;
    else
        self.destroyed = 1;

    self notify( "_encstr_A3750609A5E61883" );
    self.mgturret notify( "_encstr_A3750609A5E61883" );

    if ( isdefined( level.killstreakfinishusefunc ) )
        level thread [[ level.killstreakfinishusefunc ]]( self.streakinfo );

    if ( !isdefined( var_0 ) )
        var_0 = self.owner;

    scripts\cp_mp\vehicles\vehicle_tracking::vehicle_tracking_deregisterinstance( self );

    if ( isdefined( self.driver ) )
        thread tank_driverexit( self.driver );

    self.useobj delete();
    self.health = 0;
    scripts\cp_mp\vehicles\vehicle_damage::vehicle_damage_setcandamage( 0 );
    self.mgturret setmode( "_encstr_81FD0F630D75B34B6377920CF0B2D09EB3" );
    removefromugvlist( self getentitynumber() );
    scripts\cp_mp\emp_debuff::clear_emp( 1 );
    scripts\cp_mp\emp_debuff::allow_emp( 0 );
    scripts\mp\outofbounds::clearoob( self, 1 );
    self.streakinfo.onspray = istrue( var_1 );
    self.owner scripts\cp_mp\utility\killstreak_utility::_id_12AA7( self.streakinfo );
    waitframe();
    self playsound( "_encstr_B7A11838930F209B82258E15BA4AD368A77B90503FD89B4B7ACA" );
    var_2 = level._effect["_encstr_AD1314C6A72A277B959740D06BA3567B238AB1C07F02"];

    if ( self.superfaction )
        var_2 = level._effect["_encstr_A11B1872418087A36D67034F1D0259C5508B6DBDD9686F0A3119"];

    playfx( var_2, self.origin );
    scripts\mp\utility\killstreak::decrementfauxvehiclecount();
    self.mgturret setscriptablepartstate( "_encstr_B38A07C696D9A13ACD", "_encstr_9819045FD029" );
    self.mgturret delete();
    level.remotetanks = scripts\engine\utility::array_remove( level.remotetanks, self );
    scripts\cp_mp\vehicles\vehicle_tracking::_deletevehicle( self );
}

tank_destroycallback( var_0 )
{
    thread tank_destroy( var_0.attacker, 1 );
    return 0;
}

tank_driverexit( var_0 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    tank_lockedonremovedcallback();
    self.driver = undefined;
    var_0 controlsunlink();

    if ( isdefined( self.mgturret ) )
        var_0 remotecontrolturretoff( self.mgturret );

    var_0 scripts\cp_mp\utility\killstreak_utility::_setvisibiilityomnvarforkillstreak( self.streakinfo.streakname, "_encstr_9819045FD029" );
    var_0 setclientomnvar( "_encstr_9B2E17AD633E13960F398BE2D8490A6F96DE0F3E0563A71D17", 0 );

    if ( var_0 scripts\mp\utility\player::isusingremote() )
        self.streakinfo notify( "_encstr_8260276F8848A4FB39EE87BE5A476279D060F7EB70E1DFE37B85CC3935EB3B349858CF0FD83948AA5D" );

    var_0 painvisionon();
    var_0 scripts\cp_mp\utility\killstreak_utility::killstreak_restorenvgstate();
    var_0 scripts\mp\utility\player::enableplayerforspawnlogic( 1, "_encstr_94300BF83A35AFFBEFD437B8F3" );
    scripts\mp\spawnlogic::removespawnviewer( self );

    if ( var_0 scripts\cp_mp\utility\player_utility::_isalive() )
    {
        var_0 scripts\cp_mp\utility\shellshock_utility::_stopshellshock();
        var_0 scripts\common\utility::allow_shellshock( 1 );
        level thread scripts\cp_mp\utility\killstreak_utility::_id_12CC6( var_0 );
    }
}

tank_riderexit( var_0, var_1 )
{
    var_0 unlink();
}

tank_handleairburst()
{
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        self.mgturret waittill( "_encstr_B9A30D87785B4BAA99F599CFEB8D22", var_0 );
        var_0.owner = self.owner;
        var_0.streakinfo = self.streakinfo;
        var_1 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0.origin );
        var_1 setmodel( "_encstr_BDB31160D24F90A72A5FCFFB83037690372D8B" );
        var_1.angles = var_0.angles;
        var_1.team = self.team;
        var_1.owner = self.owner;
        var_1.streakinfo = self.streakinfo;
        var_1 setentityowner( self.owner );
        var_1 dontinterpolate();
        self.streakinfo.shots_fired++;
        tank_findclosestairbursttarget( var_0, var_1 );
    }
}

tank_findclosestairbursttarget( var_0, var_1 )
{
    var_2 = anglestoforward( var_0.angles );
    var_3 = var_0.origin;
    var_4 = var_3 + var_2 * 22500;
    var_5 = [ var_0, var_1, self.owner ];
    var_6 = scripts\engine\trace::create_contents( 1, 0, 0, 0, 0, 0, 0, 0, 0 );
    var_7 = scripts\engine\trace::sphere_trace_get_all_results( var_3, var_4, 60, var_5, var_6 );
    var_8 = 0;

    if ( isdefined( var_7[0] ) )
    {
        for ( var_9 = 0; var_9 < var_7.size - 1; var_9++ )
        {
            var_10 = var_7[var_9]["_encstr_B60E07C9FD1C2055E3"];
            var_11 = var_7[var_9]["_encstr_B7260923C89E8F3378E72E"];
            var_12 = var_7[var_9]["_encstr_8B320F8A639B5B058EE8CFB7C803F1526D"];

            if ( isdefined( var_10 ) )
            {
                if ( level.teambased )
                {
                    if ( var_10.team == var_1.team )
                        continue;
                }

                if ( !scripts\engine\trace::ray_trace_passed( var_12, var_11, var_1 ) )
                    continue;
            }

            var_8 = 1;
            var_13 = distance( var_3, var_12 ) / 7500;
            var_0 thread tank_watchforairburstdetonate( var_11, var_12, var_13, var_1, self );
            break;
        }
    }

    if ( !istrue( var_8 ) )
    {
        if ( isdefined( var_1 ) )
            var_1 delete();
    }
}

tank_watchforairburstdetonate( var_0, var_1, var_2, var_3, var_4 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( self ) )
        self delete();

    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_2 );
    var_3.origin = var_1;
    var_3 setscriptablepartstate( "_encstr_801C09855AE426AE93B947", "_encstr_9E5B08B817C20559A385" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_BA8A06D740769010", "_encstr_AD3113526089EAFB19944664A7C09FAF0D093A5A80" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_BA8A06D740769010", "_encstr_AD3113526089EAFB19944664A7C09FAF0D093A5A80" ) ]]( var_1, 100, 100, var_3.team, 1, var_3.owner, 1 );

    var_3 thread tank_delayairburstscriptabledeath();
}

tank_delayairburstscriptabledeath()
{
    self endon( "_encstr_A3750609A5E61883" );
    self.dying = 1;
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 1 );
    self delete();
}

tank_handlewheeldustfx()
{
    self endon( "_encstr_A3750609A5E61883" );
    var_0 = 0;

    for (;;)
    {
        var_1 = self vehicle_getspeed();
        var_2 = var_1 * 1.60934;

        if ( var_1 > 1 && !istrue( var_0 ) )
        {
            var_0 = 1;
            self setscriptablepartstate( "_encstr_A96605235D37A3", "_encstr_9707035F3B" );
        }
        else if ( var_1 <= 1 && istrue( var_0 ) )
        {
            var_0 = 0;
            self setscriptablepartstate( "_encstr_A96605235D37A3", "_encstr_9819045FD029" );
        }

        self.owner setclientomnvar( "_encstr_8017149D415723F3EEC9D860B2438D5AFFE3A71DA543", int( var_2 ) );
        waitframe();
    }
}

wheelson_enginesfx()
{
    self endon( "_encstr_A3750609A5E61883" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    thread wheelson_engine_audio_game_end();

    for (;;)
    {
        var_0 = self.owner;

        if ( isdefined( var_0 ) )
        {
            var_1 = var_0 getnormalizedmovement();
            var_2 = abs( var_1[0] );

            if ( var_2 >= 0.15 )
                wheelson_start_engine_audio();
            else
                wheelson_stop_engine_audio();
        }
        else
            wheelson_stop_engine_audio();

        waitframe();
    }
}

wheelson_start_engine_audio()
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_875515C043192709BAFDDE7E4768E727C9C325E7E0608B" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( istrue( self.engine_audio_active ) )
        return;

    self.engine_audio_active = 1;
    self playsoundonmovingent( "_encstr_A47D1AB3AC0DFAEE34B2598DE67B73FA59E6765A732B7D9B470BC91D" );
    wait 0.5;
    self playloopsound( "_encstr_813F17DD5534D19C834AB9803347D8198FA6777BF6DF89698B" );
}

wheelson_stop_engine_audio( var_0 )
{
    if ( istrue( var_0 ) )
    {
        self notify( "_encstr_875515C043192709BAFDDE7E4768E727C9C325E7E0608B" );
        self.engine_audio_active = undefined;
        self stoploopsound( "_encstr_813F17DD5534D19C834AB9803347D8198FA6777BF6DF89698B" );
    }
    else if ( istrue( self.engine_audio_active ) )
    {
        self notify( "_encstr_875515C043192709BAFDDE7E4768E727C9C325E7E0608B" );
        self endon( "_encstr_875515C043192709BAFDDE7E4768E727C9C325E7E0608B" );
        self.engine_audio_active = undefined;
        self playsoundonmovingent( "_encstr_892119D9B286AFDD0D59B2B1DCF6E6F59537762DCDACF53747F683" );
        wait 0.5;

        if ( isdefined( self ) )
            self stoploopsound( "_encstr_813F17DD5534D19C834AB9803347D8198FA6777BF6DF89698B" );
    }
}

wheelson_engine_audio_game_end()
{
    self endon( "_encstr_A3750609A5E61883" );
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    thread wheelson_stop_engine_audio();
}

tank_empstarted( var_0 )
{
    if ( !isdefined( self.owner ) )
        return;

    self.owner controlsunlink();
    thread scripts\cp_mp\emp_debuff::_id_1241A( self.owner, 5 );
}

tank_empcleared( var_0 )
{
    if ( !isdefined( self.owner ) )
        return;

    if ( !istrue( var_0 ) )
        self.owner controlslinkto( self );
}

tank_watchfiring( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_9F0E0B56DC8C7D93ACADF6472B" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    var_1 = 50;
    var_2 = var_1;
    var_3 = weaponfiretime( level.tanksettings[var_0.tanktype].mgturretinfo );

    for (;;)
    {
        if ( var_0.mgturret isfiringvehicleturret() )
        {
            var_2--;

            if ( var_2 <= 0 )
            {
                var_0.mgturret turretfiredisable();
                wait 2.5;
                var_0 playsound( "_encstr_B8F70D88EB4850D0F6B00D924F67C2" );
                self playlocalsound( "_encstr_98741195F66A7768FF53B8E83F19E1DF535D0E" );
                var_2 = var_1;
                var_0.mgturret turretfireenable();
            }
        }

        wait( var_3 );
    }
}

tank_earthquake()
{
    self endon( "_encstr_A3750609A5E61883" );
    self.owner endon( "_encstr_9F0E0B56DC8C7D93ACADF6472B" );
    self.owner endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    for (;;)
    {
        self.owner earthquakeforplayer( 0.05, 0.05, self gettagorigin( "_encstr_8B1E09E97A4FAFAD55C15A" ), 500 );
        wait 0.05;
    }
}

addtougvlist( var_0 )
{
    level.ugvs[var_0] = self;
}

removefromugvlist( var_0 )
{
    level.ugvs[var_0] = undefined;
}

tank_watchridermount()
{
    self endon( "_encstr_A3750609A5E61883" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self.useobj scripts\mp\utility\killstreak::setkillstreakcontrolpriority( self.owner, &"_encstr_A8A523969213C49A51A4540A2D9AFA124A27A2D4F20550A1AF35A2722AA465BE359EAA9315", 90, 90, 150, 150, 3, 1 );
    tank_enableriderprompt();

    for (;;)
    {
        self.useobj waittill( "_encstr_8B5C081B58E0B7A213E6", var_0 );

        if ( isdefined( self.rider ) && self.rider == var_0 )
        {
            var_0 unlink();
            self.rider = undefined;
            tank_enableriderprompt();
            continue;
        }

        if ( var_0 scripts\mp\utility\player::isusingremote() )
            continue;

        if ( !var_0 scripts\common\utility::is_usability_allowed() )
            continue;

        self.rider = var_0;
        var_0 playerlinkto( self, "_encstr_8C1B0F9BD01701134077B9DD96EB3F974B", 0.8 );
        thread tank_watchriderturn( var_0, 20 );
        thread tank_watchriderabandon( var_0 );
        thread tank_watchriderautodismount( var_0 );
        tank_disableriderprompt( var_0 );
    }
}

tank_watchriderturn( var_0, var_1 )
{
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A3750609A5E61883" );
    var_2 = 0;
    var_3 = 0;

    for (;;)
    {
        var_4 = var_0 getplayerangles();
        var_5 = var_4[1];
        var_6 = self.angles[1];

        switch ( var_2 )
        {
            case 0:
                var_7 = 90 - var_1 * 0.5;
                var_8 = angleclamp180( var_5 - var_6 );

                if ( abs( var_8 ) >= var_7 )
                {
                    var_3 = 2;
                    var_2 = 1;
                }

                break;
            case 1:
                var_9 = vectordot( anglestoforward( var_4 ), anglestoright( self.angles ) );
                var_10 = -1.0 * var_1;

                if ( var_9 > 0 )
                {
                    var_11 = angleclamp180( var_5 - var_6 + 90 );

                    if ( var_11 < var_10 )
                    {
                        var_3 = 2;
                        var_2 = 2;
                    }
                    else if ( var_11 > var_1 )
                    {
                        var_3 = 0;
                        var_2 = 0;
                    }
                }
                else
                {
                    var_11 = angleclamp180( var_5 - var_6 - 90 );

                    if ( var_11 > var_1 )
                    {
                        var_3 = 2;
                        var_2 = 2;
                    }
                    else if ( var_11 < var_10 )
                    {
                        var_3 = 0;
                        var_2 = 0;
                    }
                }

                break;
            case 2:
                var_7 = 90 - var_1 * 0.5;
                var_11 = angleclamp180( var_5 - var_6 + 180 );

                if ( abs( var_11 ) >= var_7 )
                {
                    var_3 = 0;
                    var_2 = 1;
                }

                break;
        }

        waitframe();
    }
}

tank_watchriderabandon( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    var_0 waittill( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self.rider = undefined;
    tank_enableriderprompt();
}

tank_watchriderautodismount( var_0 )
{
    self waittill( "_encstr_A3750609A5E61883" );

    if ( isdefined( self.rider ) && var_0 == self.rider )
        var_0 unlink();
}

tank_enableriderprompt()
{
    if ( level.teambased )
    {
        foreach ( var_1 in level.players )
        {
            if ( var_1.team != self.team )
                continue;

            self enableplayeruse( var_1 );
        }
    }
}

tank_disableriderprompt( var_0 )
{
    if ( level.teambased )
    {
        foreach ( var_2 in level.players )
        {
            if ( var_2.team != self.team )
                continue;

            if ( var_2 == var_0 )
                continue;

            self disableplayeruse( var_2 );
        }
    }
}

tank_findsafespawn( var_0 )
{
    var_1 = undefined;
    var_2 = self.origin;
    var_3 = self.angles;
    var_4 = anglestoforward( var_3 );
    var_5 = anglestoright( var_3 );
    var_6 = [ var_2 + var_0 * var_4, var_2 - var_0 * var_4, var_2 + var_0 * var_5, var_2 - var_0 * var_5, var_2 + 0.707 * var_0 * ( var_4 + var_5 ), var_2 + 0.707 * var_0 * ( var_4 - var_5 ), var_2 + 0.707 * var_0 * ( var_5 - var_4 ), var_2 + 0.707 * var_0 * ( -1 * var_4 - var_5 ) ];

    foreach ( var_8 in var_6 )
    {
        var_1 = tank_checkspawnpoint( var_2, var_8 );

        if ( isdefined( var_1 ) )
            break;
    }

    return var_1;
}

tank_checkspawnpoint( var_0, var_1 )
{
    var_2 = undefined;
    var_3 = ( 0, 0, 45 );
    var_4 = scripts\engine\trace::create_contents( 1, 1, 1, 1, 1, 1, 1, 0, 1 );
    var_5 = var_0 + var_3;
    var_6 = var_1 + var_3;
    var_7 = 40;
    var_8 = scripts\engine\trace::ray_trace_passed( var_5, var_6, self, var_4 );

    if ( !istrue( var_8 ) )
        return var_2;

    var_9 = scripts\engine\trace::ray_trace( var_6, var_6 - ( 0, 0, 500 ), level.players, var_4 );

    if ( isdefined( var_9["_encstr_B7260923C89E8F3378E72E"] ) && var_9["_encstr_871C08D169E3584B33BA"] != "_encstr_B94B0D11A9A3180B73FA4E506233CD" )
    {
        var_10 = var_9["_encstr_B7260923C89E8F3378E72E"] + var_3;
        var_11 = scripts\engine\trace::sphere_trace_passed( var_10, var_10, var_7, level.players, var_4 );
        var_12 = undefined;

        if ( level.teambased )
            var_12 = self.team;

        if ( istrue( var_11 ) && !scripts\mp\outofbounds::ispointinoutofbounds( var_9["_encstr_B7260923C89E8F3378E72E"], var_12 ) )
            var_2 = var_9["_encstr_B7260923C89E8F3378E72E"];
        else
        {

        }
    }

    return var_2;
}

tank_updatehudchassisangles()
{
    self endon( "_encstr_A3750609A5E61883" );
    self.owner endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        var_0 = self.mgturret gettagangles( "_encstr_A94F0AD158D9BECCD80BE6A1" );
        var_1 = invertangles( self.angles );
        var_2 = combineangles( var_1, var_0 );
        var_3 = var_2[1] * -1.0;
        self.owner setclientomnvar( "_encstr_BA21167B2D80F36E20FF3B3585C0F29F2819F2C28B657F22", var_3 );
        waitframe();
    }
}

tank_updatehudviewstate()
{
    self endon( "_encstr_A3750609A5E61883" );
    self.owner endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    thread tank_watchownerdeath();
    self.owner notifyonplayercommand( "_encstr_ADDC0C3B9001973233509B54A5CF", "_encstr_93600E36DB10CC8ADC5AA850F35121D8" );
    var_0 = 1;
    var_1 = "_encstr_8A86148E342D9346F50E5939B9BDDCBE435719F5DBE6";

    if ( isdefined( self.owner.previousremotetankviewstate ) )
    {
        var_0 = self.owner.previousremotetankviewstate;

        if ( var_1 == 2 )
            var_1 = "_encstr_957714CC4BE46E3A7D07CAE4DCEDB9BED05D197DEDCD";
    }

    for (;;)
    {
        self.owner waittill( "_encstr_ADDC0C3B9001973233509B54A5CF" );
        var_0++;

        if ( var_0 == 2 )
        {
            self.owner scripts\cp_mp\utility\shellshock_utility::_shellshock( "_encstr_AF7A1937B410B827CCC3DB6BA8792BC178C6B0D9A3C566B6BEAD9B", "_encstr_B91904EC4718", self.lifetime, 0 );
            var_1 = "_encstr_957714CC4BE46E3A7D07CAE4DCEDB9BED05D197DEDCD";
        }
        else if ( var_0 > 2 )
        {
            self.owner scripts\cp_mp\utility\shellshock_utility::_stopshellshock();
            var_0 = 1;
            var_1 = "_encstr_8A86148E342D9346F50E5939B9BDDCBE435719F5DBE6";
        }

        self.owner.previousremotetankviewstate = var_0;
        self.owner scripts\cp_mp\utility\killstreak_utility::_setvisibiilityomnvarforkillstreak( self.streakinfo.streakname, var_1 );
        self.owner setclientomnvar( "_encstr_9B2E17AD633E13960F398BE2D8490A6F96DE0F3E0563A71D17", var_0 );
    }
}

tank_watchownerdeath()
{
    var_0 = self.owner;
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 notify( "_encstr_ADC2159B02ABBAF19A651F3B9C0960732FDBF7036ABBE5" );
    var_0 endon( "_encstr_ADC2159B02ABBAF19A651F3B9C0960732FDBF7036ABBE5" );
    var_0 waittill( "_encstr_A3750609A5E61883" );

    if ( isdefined( var_0.previousremotetankviewstate ) )
        var_0.previousremotetankviewstate = undefined;
}
