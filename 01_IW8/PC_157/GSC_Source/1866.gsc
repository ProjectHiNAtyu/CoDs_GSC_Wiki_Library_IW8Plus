// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.activejuggernauts = [];
    level._id_11B5F = getdvarint( "_encstr_939E15371B9CBEDA37F54D57CECED7479558DAFAB6850F", 0 );
}

jugg_makejuggernaut( var_0, var_1 )
{
    var_2 = vehicle_damage_setweaponhitdamagedata( var_0 );

    if ( !isdefined( var_2 ) )
    {
        scripts\mp\hud_message::showerrormessage( "_encstr_AAB91FDC0BD37193ED6D50203A8F1A8267972097AF994D454D17DFC00D453FBD03" );
        return 0;
    }

    var_3 = var_2 != self getstance();
    self.isjuggernaut = 1;
    scripts\mp\battlechatter_mp::disablebattlechatter( self );
    scripts\mp\equipment\gas_grenade::gas_updateplayereffects();
    var_4 = spawnstruct();
    var_4.juggconfig = var_0;
    var_4.prevhealth = self.health;
    var_4.prevmaxhealth = self.maxhealth;
    var_4.prevbody = self getcustomizationbody();
    var_4.prevhead = self getcustomizationhead();
    var_4.prevviewmodel = self getcustomizationviewmodel();
    var_4.prevspeedscale = self.playerstreakspeedscale;
    var_4.prevsuit = self.suit;
    var_4.prevclothtype = self.clothtype;
    var_4.maskomnvar = "_encstr_AFB1170304B7C7831EDFF2D16F0BC9057B8777FDEE8A8187FC";
    self.maxhealth = var_0.maxhealth;
    self.health = var_0.startinghealth;
    scripts\mp\weapons::savetogglescopestates();
    scripts\mp\weapons::savealtstates();

    if ( isdefined( level.headiconbox ) )
        self [[ level.headiconbox ]]();

    if ( isdefined( var_0.classstruct ) )
    {
        var_5 = scripts\mp\class::respawnitems_saveplayeritemstostruct();
        var_4.respawnitems = var_5;
        var_4.prevclass = self.lastclass;
        var_4.prevclassstruct = self.classstruct;
        scripts\mp\class::loadout_updateclass( var_0.classstruct, "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D" );
        scripts\mp\class::preloadandqueueclassstruct( var_0.classstruct, 1, 1 );
        scripts\mp\class::giveloadout( self.team, "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", 0, 1 );
    }

    self.lastdroppableweaponobj = undefined;

    foreach ( var_8, var_7 in var_0.perks )
        scripts\mp\utility\perk::giveperk( var_8 );

    if ( istrue( self._id_12346 ) )
    {
        scripts\mp\playeractions::allowactionset( "_encstr_B72C09345EB2CBB48D6FD0", 1 );
        self._id_12346 = undefined;
    }

    jugg_toggleallows( var_0.allows, 0 );
    self skydive_setbasejumpingstatus( 0 );
    scripts\cp_mp\killstreaks\white_phosphorus::enableloopingcoughaudiosupression();
    jugg_setmodel();
    self.playerstreakspeedscale = var_0.movespeedscalar;
    scripts\mp\weapons::updatemovespeedscale();
    scripts\mp\utility\player::_setsuit( var_0.suit );
    self setclothtype( var_0.clothtype );
    jugg_enableoverlay( var_4 );
    self.juggcontext = var_4;

    if ( var_0.infiniteammo )
        thread scripts\mp\utility\weapon::infiniteammothread( var_0.infiniteammoupdaterate );
    else
    {
        var_9 = self getweaponslistexclusives();

        foreach ( var_11 in var_9 )
        {
            self setweaponammoclip( var_11, weaponclipsize( var_11 ) );

            if ( vehicle_damage_registervisualpercentcallback() )
            {
                self givemaxammo( var_11 );
                thread vehicle_damage_updatestatemaxhealthvalues( var_11 );
            }
        }
    }

    self.streakinfo = var_1;
    self notify( "_encstr_9B0211FAEB8C10B050BDA8757CD99F738972FB" );
    thread scripts\mp\gameobjects::onjuggernaut();
    thread vehicle_getturretbyweapon();
    thread jugg_watchmusictoggle();
    thread jugg_watchfordeath();
    thread jugg_watchforgameend();
    thread jugg_watchfordisconnect();
    thread vehicle_interact_initdev();
    thread vehicle_is_ambient();

    if ( vehicle_damage_registerinstance() )
    {
        self skydive_setbasejumpingstatus( 1 );
        self skydive_setdeploymentstatus( 1 );
    }

    if ( isdefined( level.battle_tracks_standingonvehicletimeout ) )
        self [[ level.battle_tracks_standingonvehicletimeout ]]();

    if ( var_3 )
        self setstance( var_2 );

    scripts\mp\healthoverlay::onexitdeathsdoor( 1 );
    vehicle_damage_onexitstatemedium();
    return 1;
}

jugg_removejuggernaut()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self notify( "_encstr_80B00FCBC8890F3A954026DBB527F2DE31" );
    var_0 = self.juggcontext;
    var_1 = var_0.juggconfig;
    self.musicplaying = undefined;
    jugg_disableoverlay( var_0 );
    jugg_toggleallows( var_1.allows, 1 );

    if ( scripts\mp\utility\player::isreallyalive( self ) )
    {
        self.maxhealth = var_0.prevmaxhealth;
        self.health = var_0.prevhealth;
        scripts\cp_mp\killstreaks\white_phosphorus::disableloopingcoughaudiosupression();

        if ( isdefined( var_1.classstruct ) )
        {
            scripts\mp\class::respawnitems_assignrespawnitems( var_0.respawnitems );
            scripts\mp\class::giveloadout( self.team, var_0.prevclass, 0, 1, 1 );
        }

        foreach ( var_4, var_3 in var_1.perks )
            scripts\mp\utility\perk::removeperk( var_4 );
    }

    if ( var_1.infiniteammo )
        scripts\mp\utility\weapon::stopinfiniteammothread();

    jugg_restoremodel( var_0 );
    self.playerstreakspeedscale = var_0.prevspeedscale;
    scripts\mp\weapons::updatemovespeedscale();
    scripts\mp\utility\player::_setsuit( var_0.prevsuit );
    self setclothtype( var_0.prevclothtype );
    self setscriptablepartstate( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", "_encstr_9BA4080D39CFFB5AB7C1", 0 );
    self setscriptablepartstate( "_encstr_AA9108994991F173B8B9", "_encstr_9BA4080D39CFFB5AB7C1", 0 );

    if ( vehicle_damage_registerinstance() )
    {
        self skydive_setbasejumpingstatus( 0 );
        self skydive_setdeploymentstatus( 0 );
    }

    self.isjuggernaut = 0;
    self.juggcontext = undefined;
    self.streakinfo = undefined;
    scripts\mp\battlechatter_mp::enablebattlechatter( self );
}

jugg_createconfig( var_0, var_1 )
{
    var_2 = spawnstruct();
    var_2.maxhealth = 3000;
    var_2.startinghealth = var_2.maxhealth;
    var_2.movespeedscalar = -0.2;
    var_2._id_11B7D = 5;

    if ( level.gametype == "_encstr_9507034B25" )
        var_2._id_11B7D = 3;

    var_2.forcetostand = 1;
    var_3 = "_encstr_B34212BBD38FB7487567C8C02BB6E12BF37121BF";

    if ( scripts\common\utility::iscp() )
        var_3 = "_encstr_A342127FFB135973AB278F055E3046285DC918E0";

    var_2.suit = var_3;
    var_2.infiniteammo = 0;
    var_2.infiniteammoupdaterate = undefined;
    var_2.classstruct = jugg_getdefaultclassstruct();
    var_2.allows = [];
    var_2.allows["_encstr_82290B6EE8B48D5BAFD65A1B36"] = 1;
    var_2.allows["_encstr_9D350DD38D6F6019EC0990206247F5"] = 1;
    var_2.allows["_encstr_A993155F3D6D29B0984311E519C8C5C22895CFD7A183F2"] = 1;
    var_2.allows["_encstr_BA4008CC8DC2B9345991"] = 1;
    var_2.allows["_encstr_BAD908A3D3A5A0E08A73"] = 1;
    var_2.allows["_encstr_9F24062875D5FD98"] = 1;
    var_2.allows["_encstr_BE8F0A2BB8D596386BB273A3"] = 1;
    var_2.allows["_encstr_BEF407B95DC1B227E6"] = 1;
    var_2.allows["_encstr_B6190C6DB4C68DB9A327CA0B6DDC"] = 1;
    var_2.allows["_encstr_B76B069BB196C856"] = 1;
    var_2.allows["_encstr_A14C0E78A29718E8A8C95FF78F273DB8"] = 1;
    var_2.allows["_encstr_B84E11CA1E56D8AB3A5A7BE6D79DA56CD12D6B"] = 1;
    var_2.allows["_encstr_9D1E0EAE4FF7C9F9F94210D80B0B85C1"] = 1;
    var_2.allows["_encstr_89861220E407316238CA17636C9B821309AF81E0"] = 1;
    var_2.perks = [];
    var_2.perks["_encstr_AAC01A87A9F5722930B83378F6887CABD85F1B57572BBB0C6880EE47"] = 1;
    var_2.perks["_encstr_804116B6608779CB46E288F8C99A8171A30828A4C7376307"] = 1;
    var_2.perks["_encstr_BA24179B38ACD8962CC6A32FF5AD95D8AC59FA39CA9B4BE6A3"] = 1;
    var_2.perks["_encstr_A2CF16DCE02BD896C2361DE5EB4CD816DCA39BA15A56B18C"] = 1;
    var_2.perks["_encstr_8F2D18E6E0ACB1D216C6475EEB2C27D6ED3983B42B93365A9B3B"] = 1;
    return var_2;
}

jugg_toggleallows( var_0, var_1 )
{
    foreach ( var_4, var_3 in var_0 )
    {
        if ( var_3 )
        {
            var_4 = tolower( var_4 );
            self thread [[ level.allow_funcs[var_4] ]]( var_1, "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D" );
        }
    }

    if ( !istrue( level.loadout_updateammo ) )
    {
        scripts\common\utility::allow_mount_top( var_1, "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D" );
        scripts\common\utility::allow_mount_side( var_1, "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D" );
    }
}

jugg_getdefaultclassstruct()
{
    var_0 = scripts\mp\class::loadout_getclassstruct();
    var_0.loadoutarchetype = "_encstr_A6B3120F05CFBC15435ADB2FF1F723E338B88B13";
    var_0.loadoutprimary = "_encstr_AD13154B237F47589953A8E007A6D05702CB34C4B182A1";
    var_0.loadoutsecondary = "_encstr_AABA05236DC831";
    return var_0;
}

vehicle_getturretbyweapon()
{
    if ( vehicle_damage_registerdefaultvisuals() )
    {
        var_0 = getdvarint( "_encstr_8F27160BBFE8A92B3D61E26909942F5D705F9D6FD9082D87", 0 );

        if ( var_0 )
        {
            var_1 = undefined;

            if ( vehicle_damage_updatestate_br( var_0 ) )
                var_1 = "_encstr_810E079AA3E7E5C573";

            if ( isdefined( var_1 ) )
                self setscriptablepartstate( "_encstr_AA9108994991F173B8B9", var_1, 0 );
        }
    }
}

jugg_watchmusictoggle()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_80B00FCBC8890F3A954026DBB527F2DE31" );
    var_0 = 0;

    if ( isdefined( level.disable_super_in_turret ) && isdefined( level.disable_super_in_turret.name ) && getdvarint( "_encstr_8F1414201B1B01E69B063E412C088815216DE1AA13C2", 0 ) )
        return;

    if ( !isbot( self ) && !isagent( self ) )
    {
        self notifyonplayercommand( "_encstr_B14F0D85EF3F7FD151C1D2CBE7406A", "_encstr_A25C0E0EB07FAB174090D3F4380BFAA2" );
        self notifyonplayercommand( "_encstr_B14F0D85EF3F7FD151C1D2CBE7406A", "_encstr_81DB11B65A3663CD474E560BB5EBDDD0565663" );
    }

    var_1 = getcompleteweaponname( "_encstr_8A71196D37BECE596E47D593ACAF4DAE3B3BD75B5DDC4BB1FA5BE0" );
    var_2 = weaponfiretime( var_1 );

    if ( !isdefined( self.musicplaying ) )
    {
        var_3 = self getjuggdefaultmusicenabled();
        self.musicplaying = var_3;
    }

    if ( !istrue( self.musicplaying ) )
        self setscriptablepartstate( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", "_encstr_9BA4080D39CFFB5AB7C1", 0 );
    else
        self setscriptablepartstate( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", "_encstr_B23F062A5346A7DE", 0 );

    for (;;)
    {
        self waittill( "_encstr_B14F0D85EF3F7FD151C1D2CBE7406A" );

        if ( self isonladder() || self ismantling() )
            continue;

        self giveandfireoffhand( var_1 );
        self playsoundonmovingent( "_encstr_8A4A19B5387DD4AE9DD9EB6BEA9BAFE8DED9D936B2EBCCDB36CAF2" );
        self playlocalsound( "_encstr_B38A1AD607D7A9BA9D9D7DB5AB9B7D477B76B3632BBE89D5D13AF6DC" );
        var_4 = 0.2;

        if ( istrue( self.musicplaying ) )
            var_4 = 0.65;

        scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_4 );

        if ( istrue( self.musicplaying ) )
        {
            self.musicplaying = 0;
            self setscriptablepartstate( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", "_encstr_9BA4080D39CFFB5AB7C1", 0 );
        }
        else
        {
            self.musicplaying = 1;
            self setscriptablepartstate( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", "_encstr_B23F062A5346A7DE", 0 );
        }

        scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 1.5 );
    }
}

jugg_watchfordeath()
{
    self endon( "_encstr_80B00FCBC8890F3A954026DBB527F2DE31" );
    self waittill( "_encstr_A3750609A5E61883" );
    thread jugg_removejuggernaut();
}

jugg_watchforgameend()
{
    self endon( "_encstr_80B00FCBC8890F3A954026DBB527F2DE31" );
    var_0 = self.juggcontext;
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( self ) )
    {
        self.maxhealth = var_0.prevmaxhealth;
        self.health = var_0.prevhealth;
        jugg_disableoverlay( var_0 );
        self setscriptablepartstate( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", "_encstr_9BA4080D39CFFB5AB7C1", 0 );
    }
}

jugg_watchfordisconnect()
{
    self endon( "_encstr_80B00FCBC8890F3A954026DBB527F2DE31" );
    var_0 = self.juggcontext;
    self waittill( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( isdefined( self ) )
    {
        self.maxhealth = var_0.prevmaxhealth;
        self.health = var_0.prevhealth;
    }
}

vehicle_interact_initdev()
{
    self endon( "_encstr_80B00FCBC8890F3A954026DBB527F2DE31" );

    for (;;)
    {
        self waittill( "_encstr_BE140D3FF56983E5E5C94AB288DB1F" );

        if ( isdefined( self.streakinfo ) && isdefined( self.streakinfo.shots_fired ) )
            self.streakinfo.shots_fired++;
    }
}

vehicle_damage_registerdefaultvisuals()
{
    var_0 = 0;
    var_1 = getdvarint( "_encstr_B2DF16584FB2566DE3771430CFEB4BB81C274020A77D6B17", 0 );

    if ( scripts\mp\utility\game::matchmakinggame() || var_1 )
        var_0 = 1;

    return var_0;
}

jugg_getjuggmodels()
{
    var_0 = [];
    var_0["_encstr_A39B05D63DA213"] = "_encstr_8097203237754389777A65156E3325B822EB719F75784E8F13A5B7A00B20FD70E8A9";
    var_0["_encstr_B2CC0571402BC0"] = "_encstr_AA9B180D59C2C8BEF638CCBD9C6C59BE355D76EC954E372CAE8E";

    if ( vehicle_damage_registerdefaultvisuals() )
    {
        var_1 = getdvarint( "_encstr_8F27160BBFE8A92B3D61E26909942F5D705F9D6FD9082D87", 0 );

        if ( var_1 )
        {
            if ( vehicle_damage_updatestate_br( var_1 ) )
            {
                var_2 = [ "_encstr_A1D12BD38D6F614FADFBF9480205F1D89F35ED58DF530B63D252B060D9DCA31137D7E14776EBF1653D3962E157", "_encstr_A1D12BD38D6F614FADFBF9480205F1D89F35ED58DF530B63D252B060D9DCA31137D7E14776EBF1653D396AE157" ];
                var_0["_encstr_B2CC0571402BC0"] = var_2[randomint( var_2.size )];
            }
        }
    }

    var_0["_encstr_B401052BBC8D50"] = "_encstr_A6601DB320C107F2BB489F52387FABDE28406F67F9585D4A9FD5E20D1F23A3";
    return var_0;
}

jugg_setmodel()
{
    var_0 = jugg_getjuggmodels();

    if ( isdefined( self.headmodel ) )
        self detach( self.headmodel );

    var_1 = var_0["_encstr_A39B05D63DA213"];
    var_2 = var_0["_encstr_B2CC0571402BC0"];
    var_3 = var_0["_encstr_B401052BBC8D50"];
    self setmodel( var_1 );
    self setviewmodel( var_3 );
    self attach( var_2, "_encstr_A40101", 1 );
    self.headmodel = var_2;
}

jugg_restoremodel( var_0 )
{
    self.operatorcustomization = undefined;

    if ( scripts\cp_mp\utility\player_utility::_isalive() )
    {
        self setcustomization( var_0.prevbody, var_0.prevhead );
        scripts\mp\teams::setcharactermodels( var_0.prevbody, var_0.prevhead, var_0.prevviewmodel );
    }
}

vehicle_damage_setweaponhitdamagedata( var_0 )
{
    var_1 = undefined;
    var_2 = self getstance();

    if ( var_2 != "_encstr_B1AD06374716DC8C" )
    {
        var_3 = !istrue( var_0.forcetostand ) && !isdefined( var_0.allows["_encstr_9C3D071B63023B26C3"] ) || istrue( var_0.allowcrouch );
        var_4 = !istrue( var_0.forcetostand ) && !isdefined( var_0.allows["_encstr_9F24062875D5FD98"] ) || istrue( var_0.allowprone );
        var_5 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 0, 1, 1, 0 );

        if ( !var_3 && !var_4 )
            var_1 = "_encstr_B1AD06374716DC8C";
        else if ( var_2 == "_encstr_9C3D071B63023B26C3" )
        {
            if ( !var_3 )
            {
                var_6 = scripts\engine\trace::ray_trace_passed( self.origin, scripts\mp\utility\player::round_smoke_logic( "_encstr_B1AD06374716DC8C" ), self, var_5 );

                if ( var_6 )
                    var_1 = "_encstr_B1AD06374716DC8C";
            }
            else
                var_1 = "_encstr_9C3D071B63023B26C3";
        }
        else if ( var_2 == "_encstr_9F24062875D5FD98" )
        {
            if ( !var_4 )
            {
                if ( var_3 )
                {
                    var_7 = scripts\engine\trace::ray_trace_passed( self.origin, scripts\mp\utility\player::round_smoke_logic( "_encstr_9C3D071B63023B26C3" ), self, var_5 );

                    if ( var_7 )
                        var_1 = "_encstr_9C3D071B63023B26C3";
                }
                else
                {
                    var_6 = scripts\engine\trace::ray_trace_passed( self.origin, scripts\mp\utility\player::round_smoke_logic( "_encstr_B1AD06374716DC8C" ), self, var_5 );

                    if ( var_6 )
                        var_1 = "_encstr_B1AD06374716DC8C";
                }
            }
            else
                var_1 = "_encstr_9F24062875D5FD98";
        }
    }
    else
        var_1 = "_encstr_B1AD06374716DC8C";

    return var_1;
}

jugg_enableoverlay( var_0 )
{
    scripts\cp_mp\utility\killstreak_utility::_setvisibiilityomnvarforkillstreak( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", "_encstr_B211081BA162E0180F4A" );
    self setclientomnvar( var_0.maskomnvar, 1 );
    self.juggoverlaystatelabel = "_encstr_B211081BA162E0180F4A";
    self.juggoverlaystate = 1;
    thread jugg_watchoverlaydamagestates( var_0 );
    thread jugg_watchforoverlayexecutiontoggle( var_0 );
}

jugg_watchoverlaydamagestates( var_0 )
{
    self endon( "_encstr_80B00FCBC8890F3A954026DBB527F2DE31" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = self.health;
    var_2 = var_1 - var_1 * 0.1;
    var_3 = var_1 - var_1 * 0.35;
    var_4 = var_1 - var_1 * 0.6;
    var_5 = var_1 - var_1 * 0.85;
    var_6 = 1;
    var_7 = var_6;
    var_8 = "_encstr_B211081BA162E0180F4A";

    for (;;)
    {
        scripts\engine\utility::_id_143A5( "_encstr_B8BE07320B5B16ECAC", "_encstr_A1D212D20D592F7979888A522851A1A3F1FC255E" );

        if ( self.health <= var_5 )
        {
            var_8 = "_encstr_935E15AD2CCDAD7D8C856B0BEC56D71BC9B4D15A3658B1";
            var_6 = 5;
        }
        else if ( self.health <= var_4 )
        {
            var_8 = "_encstr_82D411DAB06EDABE2316B5C2B3B2AF1AA5CE0D";
            var_6 = 4;
        }
        else if ( self.health <= var_3 )
        {
            var_8 = "_encstr_B8DC10B971DF78A7073240384A1FEFF0FF1C";
            var_6 = 3;
        }
        else if ( self.health <= var_2 )
        {
            var_8 = "_encstr_B7DC1015FFB7E207D168DFF74029CF5A770C";
            var_6 = 2;
        }
        else
        {
            var_8 = "_encstr_B211081BA162E0180F4A";
            var_6 = 1;
        }

        if ( var_7 != var_6 )
        {
            scripts\cp_mp\utility\killstreak_utility::_setvisibiilityomnvarforkillstreak( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", var_8 );
            self setclientomnvar( var_0.maskomnvar, var_6 );
            var_7 = var_6;
            self.juggoverlaystatelabel = var_8;
            self.juggoverlaystate = var_6;
        }
    }
}

jugg_watchforoverlayexecutiontoggle( var_0 )
{
    self endon( "_encstr_80B00FCBC8890F3A954026DBB527F2DE31" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = 0;

    for (;;)
    {
        if ( !self isinexecutionattack() )
        {
            if ( istrue( var_1 ) )
            {
                scripts\cp_mp\utility\killstreak_utility::_setvisibiilityomnvarforkillstreak( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", self.juggoverlaystatelabel );
                self setclientomnvar( var_0.maskomnvar, self.juggoverlaystate );
                var_1 = 0;
            }

            waitframe();
            continue;
        }

        if ( !istrue( var_1 ) )
        {
            scripts\cp_mp\utility\killstreak_utility::_setvisibiilityomnvarforkillstreak( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", "_encstr_9819045FD029" );
            self setclientomnvar( var_0.maskomnvar, -1 );
            var_1 = 1;
        }

        waitframe();
    }
}

jugg_disableoverlay( var_0 )
{
    scripts\cp_mp\utility\killstreak_utility::_setvisibiilityomnvarforkillstreak( "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D", "_encstr_9819045FD029" );
    self setclientomnvar( var_0.maskomnvar, 0 );
    self.juggoverlaystatelabel = undefined;
    self.juggoverlaystate = undefined;
}

jugg_getmovespeedscalar()
{
    return -0.2;
}

vehicle_damage_setweaponclassmoddamageforvehicle()
{
    return self.juggcontext.juggconfig.classstruct.loadoutprimary;
}

vehicle_damage_registervisualpercentcallback()
{
    return istrue( self.juggcontext.juggconfig._id_14092 );
}

vehicle_damage_setdeathcallback()
{
    return istrue( self.juggcontext.juggconfig._id_140A7 );
}

vehicle_damage_updatestatemaxhealthvalues( var_0 )
{
    self endon( "_encstr_80B00FCBC8890F3A954026DBB527F2DE31" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = self getweaponammostock( var_0 );
    thread vehicle_isenemytoplayer( var_0, var_1 );
    thread vehicle_has_flare( var_0, var_1 );

    for (;;)
    {
        self waittill( "_encstr_8A4510ADD880999A5D3DA71B0306F3C780E0" );
        self setweaponammostock( var_0, var_1 );
    }
}

vehicle_isenemytoplayer( var_0, var_1 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_80B00FCBC8890F3A954026DBB527F2DE31" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        if ( self startragdollfromvehicleimpact() )
        {
            var_2 = self getweaponammostock( var_0 );

            if ( var_2 < var_1 )
                self notify( "_encstr_8A4510ADD880999A5D3DA71B0306F3C780E0" );
        }

        waitframe();
    }
}

vehicle_has_flare( var_0, var_1 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_80B00FCBC8890F3A954026DBB527F2DE31" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        var_2 = self getweaponammoclip( var_0 );

        if ( var_2 == 0 )
        {
            var_3 = self getweaponammostock( var_0 );

            if ( var_3 < var_1 )
                self notify( "_encstr_8A4510ADD880999A5D3DA71B0306F3C780E0" );
        }

        waitframe();
    }
}

vehicle_damage_onexitstatemedium()
{
    if ( !isdefined( level.activejuggernauts ) )
        level.activejuggernauts = [];

    level.activejuggernauts[level.activejuggernauts.size] = self;
    thread vehicle_invalid_seats();
}

vehicle_invalid_seats()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\engine\utility::waittill_any_in_array_return_no_endon_death( [ "_encstr_80B00FCBC8890F3A954026DBB527F2DE31", "_encstr_8A820B4696CDB1ED3737AC1B3A" ] );
    vehicle_getteamfriendlyto();
}

vehicle_getteamfriendlyto()
{
    if ( !isdefined( self ) )
        level.activejuggernauts = scripts\engine\utility::array_removeundefined( level.activejuggernauts );
    else
        level.activejuggernauts = scripts\engine\utility::array_remove( level.activejuggernauts, self );
}

vehicle_is_ambient()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_80B00FCBC8890F3A954026DBB527F2DE31" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = self.juggcontext.juggconfig;
    var_0.spawn_all_unique_drones = 0;

    for (;;)
    {
        self waittill( "_encstr_81971207B24ECCF6C9B5D786599CF6AF9139B7E0" );

        if ( !istrue( var_0.spawn_all_unique_drones ) )
        {
            var_0.spawn_all_unique_drones = 1;
            self radiusdamage( self.origin, 500, 2000, 500, self, "_encstr_8A4E0A41A7FB067762A99949" );
            thread vehicle_getturrets( var_0 );
        }
    }
}

vehicle_getturrets( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_80B00FCBC8890F3A954026DBB527F2DE31" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self setscriptablepartstate( "_encstr_A27A0CC085FE5FA510E382636A30", "_encstr_9707035F3B", 0 );
    wait 1;
    self setscriptablepartstate( "_encstr_A27A0CC085FE5FA510E382636A30", "_encstr_9819045FD029", 0 );
    var_0.spawn_all_unique_drones = 0;
}

vehicle_deletenextframe()
{
    if ( self isskydiving() )
        self skydive_interrupt();

    self notify( "_encstr_81971207B24ECCF6C9B5D786599CF6AF9139B7E0" );
    return 0;
}

vehicle_deregister_on_death( var_0, var_1 )
{
    var_2 = self.maxhealth;
    var_3 = self.juggcontext.juggconfig;
    var_4 = 0.5;
    var_5 = 10;

    if ( isdefined( var_1 ) && isexplosivedamagemod( var_1 ) )
    {
        var_4 = 7;
        var_5 = var_3._id_11B7D;
    }

    var_6 = var_0 * var_4;
    var_7 = var_2 / var_5;
    var_8 = scripts\mp\utility\script::roundup( min( var_7, var_6 ) );
    return int( var_8 );
}

vehicle_deletenextframelate( var_0 )
{
    return int( var_0 / 2 );
}

vehicle_damage_registerinstance()
{
    var_0 = 0;
    var_1 = 0;

    if ( var_1 || scripts\mp\utility\game::gametypesupportsbasejumping() && scripts\mp\utility\game::mapsupportsbasejumping() )
        var_0 = 1;

    return var_0;
}

vehicle_damage_updatestate_br( var_0 )
{
    return istrue( level.setplayerselfrevivingextrainfo ) && var_0 == 1;
}

changecirclestateatlowtime()
{
    if ( istrue( level._id_11B5F ) && level.activejuggernauts.size > 0 )
    {
        var_0 = 0;
        var_1 = level.activejuggernauts.size;

        for ( var_2 = 0; var_2 < var_1; var_2++ )
        {
            var_3 = level.activejuggernauts[var_2];

            if ( isdefined( var_3 ) && self.team == var_3.team )
                var_0++;
        }

        if ( var_0 >= level._id_11B5F )
            return 1;
    }

    return 0;
}
