// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    var_0 = spawnstruct();
    var_0.id = "_encstr_95391023950763BDE58526B1B2D7EC59DCE8";
    var_0.weaponinfo = "_encstr_933D1A44AD13ABCDE30B223AD8574347AB8DF7F5373BCF17DDD9DAF3";
    var_0.modelbase = "_encstr_971118E3037FA07075587569C0EA8343A059B37B0F3DB819D3E7";
    var_0.modelbombsquad = "_encstr_AB26227288F06841CAC0EAA0C12B33FAA2213B8BF0F4C8D38F5C3158680BFE0F4B5BAA10";
    var_0.hintstring = &"_encstr_A68525CA3CA8F10F341379416F6BC6B18095DD4E01C42375C023A149635D1C7D498ADBFEEC4959";
    var_0.capturingstring = &"_encstr_9CAC1D9A0973CCEF5B717169D8A23FC5A7F018649DBB7783B548A9D9D04A11";
    var_0.event = "_encstr_AA4E161D772BF1C8599F136897A7232BE3DB189DCE32BB90";
    var_0.streakname = "_encstr_95391023950763BDE58526B1B2D7EC59DCE8";
    var_0.splashname = "_encstr_8F221523831B81CE12E140A188D9637AB35AF003EF4243";
    var_0.shadername = "_encstr_8CA021D6B8CB137973B8578F280820AABB409B419573CB8C18C05FA3C040ED4209E9A0";
    var_0.headiconoffset = 20;
    var_0.lifespan = 90.0;
    var_0.usexp = 50;
    var_0.scorepopup = "_encstr_88500F6A0FF6C812254085BD4F9B787AFB";
    var_0.vodestroyed = "_encstr_8A5319D6895B60232ABB4810E183E35B930F6DDDF343EB6790B2D8";
    var_0.deployedsfx = "_encstr_9B99141708573679B30B461B2BC8E00DA17080E6B583";
    var_0.onusesfx = "_encstr_AFC80F0BDA5BF6FA8D93C247ACFAD56E2B";
    var_0.onusecallback = ::onusedeployable;
    var_0.canusecallback = ::canusedeployable;
    var_0.usetime = 1000;
    var_0.maxhealth = 220;
    var_0.damagefeedback = "_encstr_8AB40F994F6878A8B3AFF5E1D7B9666817";
    var_0.deathvfx = loadfx( "_encstr_8043334DD5B11E8A5C468EE1732057E5D760F03B8AC25BDA20E8F879DF57267DF24BB221174B3DA42B7FCD0BF9C7DBE3D3CD13AC08" );
    var_0.allowmeleedamage = 1;
    var_0.allowgrenadedamage = 0;
    var_0.maxuses = 4;
    var_0.canuseotherboxes = 0;
    level.boxsettings["_encstr_95391023950763BDE58526B1B2D7EC59DCE8"] = var_0;
    level.deployable_box["_encstr_95391023950763BDE58526B1B2D7EC59DCE8"] = [];
}

tryusedeployablevest( var_0, var_1 )
{
    var_2 = scripts\mp\killstreaks\deployablebox::begindeployableviamarker( var_0, "_encstr_95391023950763BDE58526B1B2D7EC59DCE8" );

    if ( !isdefined( var_2 ) || !var_2 )
        return 0;

    scripts\common\utility::_id_13E0A( level._id_11B2A, "_encstr_95391023950763BDE58526B1B2D7EC59DCE8", self.origin );
    return 1;
}

canusedeployable( var_0 )
{
    return !scripts\mp\lightarmor::haslightarmor( self );
}

onusedeployable( var_0 )
{
    scripts\mp\perks\perkfunctions::setlightarmor();
}

get_adjusted_armor( var_0, var_1 )
{
    if ( var_0 + level.deployablebox_vest_rank[var_1] > level.deployablebox_vest_max )
        return level.deployablebox_vest_max;

    return var_0 + level.deployablebox_vest_rank[var_1];
}
