// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_giveexecution( var_0 )
{
    if ( isbot( self ) || isagent( self ) )
        return;

    _clearexecution();
    var_1 = execution_getpropweaponbyref( var_0 );

    if ( isdefined( var_1 ) )
    {
        self giveweapon( var_1 );
        self giveexecution( execution_getexecutionbyref( var_0 ), var_1 );
    }
    else
        self giveexecution( execution_getexecutionbyref( var_0 ) );

    self.executionref = var_0;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9C4806A3CA58DAE6", "_encstr_8B851C3A43BD970B30BF5855DD4853E75E1DD3A32BB77F8420CB54518F18" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9C4806A3CA58DAE6", "_encstr_8B851C3A43BD970B30BF5855DD4853E75E1DD3A32BB77F8420CB54518F18" ) ]]();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_9E79101BE03691590BA35D4EB21D0BA359C8" ) && ![[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_9E79101BE03691590BA35D4EB21D0BA359C8" ) ]]() )
        thread _id_144E0();
}

_clearexecution()
{
    if ( isdefined( self.executionref ) )
    {
        self clearexecution();
        var_0 = execution_getpropweaponbyref( self.executionref );

        if ( isdefined( var_0 ) && self hasweapon( var_0 ) )
            self takeweapon( var_0 );

        self.executionref = undefined;
    }
}

hasexecution()
{
    return isdefined( self.executionref );
}

execution_init()
{
    level.execution = spawnstruct();
    level.enableexecutionattackfunc = ::enableexecutionattackwrapper;
    level.disableexecutionattackfunc = ::disableexecutionattackwrapper;
    level.enableexecutionvictimfunc = ::enableexecutionvictimwrapper;
    level.disableexecutionvictimfunc = ::disableexecutionvictimwrapper;
    execution_loadtable();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_9C100AACE12B6CD5A3A5ED37", "_encstr_80C50550FA44C9" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_9C100AACE12B6CD5A3A5ED37", "_encstr_80C50550FA44C9" ) ]]();
}

enableexecutionattackwrapper()
{
    self enableexecutionattack();
}

disableexecutionattackwrapper()
{
    self disableexecutionattack();
}

enableexecutionvictimwrapper()
{
    self enableexecutionvictim();
}

disableexecutionvictimwrapper()
{
    self disableexecutionvictim();
}

execution_loadtable()
{
    level.execution.table = [];
    var_0 = 0;

    for (;;)
    {
        var_1 = tablelookupbyrow( "_encstr_8295195D17C6A73A7F30935A1813F34738F0CCC9A608E7D58FA87B", var_0, 1 );

        if ( !isdefined( var_1 ) || var_1 == "_encstr_A40101" )
            break;

        if ( scripts\common\utility::iscp() )
        {
            var_2 = scripts\engine\utility::_encstr_A80611A51BCB50A7C3994B041AECDF37B215C3( [ "_encstr_B48317ADC1799647955BE6EDEA276C561D2C261B56E2B137EC", "_encstr_A4C71BB538795AE82B5BB97BEA9CC62BE885311BCAAFD80D2317C6E6CE" ], 2, var_1, 3 );

            if ( isdefined( var_2 ) && var_2 != "_encstr_A40101" && var_2 != "_encstr_B8190402FF3A" )
            {
                var_0++;
                continue;
            }
        }

        var_3 = tolower( var_1 );
        var_4 = spawnstruct();
        var_4.ref = var_3;
        var_5 = tablelookupbyrow( "_encstr_8295195D17C6A73A7F30935A1813F34738F0CCC9A608E7D58FA87B", var_0, 0 );
        var_4.id = int( var_5 );
        var_6 = tablelookupbyrow( "_encstr_8295195D17C6A73A7F30935A1813F34738F0CCC9A608E7D58FA87B", var_0, 12 );

        if ( var_6 != "_encstr_AABA05236DC831" )
            var_4.execution = var_6;

        var_7 = tablelookupbyrow( "_encstr_8295195D17C6A73A7F30935A1813F34738F0CCC9A608E7D58FA87B", var_0, 13 );

        if ( var_7 != "_encstr_AABA05236DC831" )
        {
            var_4.propweapon = getcompleteweaponname( var_7 );

            if ( nullweapon( var_4.propweapon ) )
            {
                var_0++;
                continue;
            }
        }

        level.execution.table[var_3] = var_4;
        var_0++;
    }
}

execution_getexecutionbyref( var_0 )
{
    var_1 = level.execution.table[var_0];

    if ( isdefined( var_1 ) )
        return var_1.execution;

    if ( isdefined( var_0 ) )
    {
        var_2 = "_encstr_89050FACF095C6D51DD2DB9B1093CA9901" + var_0 + "_encstr_8F292258A57B6302B460C37A29BF1F5DD2099865510828DFEEDBCB3250E07213208D04ED";
        var_3 = var_2 == undefined;
    }

    return undefined;
}

execution_getpropweaponbyref( var_0 )
{
    var_1 = level.execution.table[var_0];

    if ( isdefined( var_1 ) )
        return var_1.propweapon;

    return undefined;
}

execution_getrefbyplayer( var_0 )
{
    return var_0.executionref;
}

execution_getidbyref( var_0 )
{
    var_1 = level.execution.table[var_0];

    if ( isdefined( var_1 ) )
        return var_1.id;
}

execution_blockladders()
{
    if ( self isonladder() )
    {
        if ( !istrue( self.ladderexecutionblocked ) )
        {
            scripts\common\utility::allow_execution_attack( 0 );
            scripts\common\utility::allow_execution_victim( 0 );
            self.ladderexecutionblocked = 1;
        }
    }
    else if ( istrue( self.ladderexecutionblocked ) )
    {
        scripts\common\utility::allow_execution_attack( 1 );
        scripts\common\utility::allow_execution_victim( 1 );
        self.ladderexecutionblocked = undefined;
    }
}

_id_144E0()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self notify( "_encstr_AA531194766BEF2869A339C8979B4309421D80" );
    self endon( "_encstr_AA531194766BEF2869A339C8979B4309421D80" );
    var_0 = 0;

    for (;;)
    {
        var_1 = self isinexecutionattack() || self isinexecutionvictim();

        if ( var_1 != var_0 )
        {
            if ( var_1 )
            {
                self enablephysicaldepthoffieldscripting();
                self setphysicaldepthoffield( 2.5, 60, 20, 20 );
            }
            else
                self disablephysicaldepthoffieldscripting();
        }

        var_0 = var_1;
        waitframe();
    }
}
