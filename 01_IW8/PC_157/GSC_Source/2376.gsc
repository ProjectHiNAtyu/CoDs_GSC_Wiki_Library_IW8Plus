// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

setbountyhunter()
{

}

unsetbountyhunter()
{

}

sethealer()
{
    thread radialhealer();
}

radialhealer()
{
    self endon( "_encstr_B91D0DED459BC77308A0E2AA487D13" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( !level.teambased )
        return;

    self.teammateswithhealperk = [];

    for (;;)
    {
        if ( scripts\cp_mp\utility\player_utility::_isalive() )
        {
            var_0 = scripts\mp\utility\player::getplayersinradius( self.origin, 350, self.team, self );

            foreach ( var_2 in var_0 )
            {
                if ( var_2 scripts\mp\utility\perk::_hasperk( "_encstr_BEF411B91C95B196C2368EBCD7A1CAC23659E4" ) )
                    continue;

                if ( self.team == var_2.team && var_2 scripts\cp_mp\utility\player_utility::_isalive() && !isdefined( var_2.healer ) )
                {
                    var_3 = var_2 getentitynumber();

                    if ( self.teammateswithhealperk.size == 0 )
                        scripts\mp\hud_message::showmiscmessage( "_encstr_BA5D10869516C696CDB3F507D82C2FAC4E6E" );

                    var_2.healer = self;
                    self.teammateswithhealperk[var_3] = 1;
                    var_2 scripts\mp\utility\perk::giveperk( "_encstr_8934169BD3FDB744B1FBA080DF33EF7058952C215BA931F3" );
                    var_2 scripts\mp\utility\perk::giveperk( "_encstr_AA6C1EDCC12B1BD2C2C6D197D7C92B3B95E6AF23CAD8C2E5AF279519D5D8CA8C" );
                    var_2 scripts\mp\hud_message::showmiscmessage( "_encstr_A1C31122C00FB43F89A9F1FE3496BB3E85706A" );
                    givehealedoverlay( var_2 );
                    thread healerperkteammatewatcher( var_2 );
                    thread healerperkteammatedestructor( var_2 );
                }
            }
        }

        wait 0.3;
    }
}

healerperkteammatewatcher( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_B91D0DED459BC77308A0E2AA487D13" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    for (;;)
    {
        var_1 = 400;

        if ( distancesquared( self.origin, var_0.origin ) > var_1 * var_1 || var_0.team != self.team )
        {
            var_0 notify( "_encstr_BEA81538239B06B2AA19C0693B44C1584F07BE8FE6B955" );
            return;
        }

        var_2 = var_0 getentitynumber();

        if ( var_0.health < var_0.maxhealth && var_0.healedoverlay.alpha == var_0.healedoverlay.lowalpha )
            var_0 thread healedoverlayfade( var_0.healedoverlay, self, var_0.healedoverlay.highalpha );
        else if ( var_0.health == var_0.maxhealth )
            var_0 thread healedoverlayfade( var_0.healedoverlay, self, var_0.healedoverlay.lowalpha );

        wait 0.1;
    }
}

healerperkteammatedestructor( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = var_0 getentitynumber();
    scripts\engine\utility::waittill_any_ents( self, "_encstr_B91D0DED459BC77308A0E2AA487D13", self, "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3", var_0, "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3", var_0, "_encstr_BEA81538239B06B2AA19C0693B44C1584F07BE8FE6B955" );

    if ( isdefined( var_0 ) )
    {
        var_0 scripts\mp\utility\perk::removeperk( "_encstr_8934169BD3FDB744B1FBA080DF33EF7058952C215BA931F3" );
        var_0 scripts\mp\utility\perk::removeperk( "_encstr_AA6C1EDCC12B1BD2C2C6D197D7C92B3B95E6AF23CAD8C2E5AF279519D5D8CA8C" );
        var_0.healer = undefined;
        var_0 scripts\mp\hud_message::showmiscmessage( "_encstr_BEA81538239B06B2AA19C0693B44C1584F07BE8FE6B955" );
    }

    if ( isdefined( self ) )
    {
        self.teammateswithhealperk[var_1] = undefined;

        if ( self.teammateswithhealperk.size == 0 )
            scripts\mp\hud_message::showmiscmessage( "_encstr_881113B2FD9FC8C15F605BF897290B61D603355BEF" );
    }
}

unsethealer()
{
    self notify( "_encstr_B91D0DED459BC77308A0E2AA487D13" );
}

givehealedoverlay( var_0 )
{
    var_1 = newclienthudelem( var_0 );
    var_1.x = 0;
    var_1.y = 0;
    var_1 setshader( "_encstr_8C730F30F3E5206107D866B1370970A008", 640, 480 );
    var_1.alignx = "_encstr_B1AD05C65666E8";
    var_1.aligny = "_encstr_B91904EC4718";
    var_1.horzalign = "_encstr_BC940BE9D5F91D47B0ABBD851E";
    var_1.vertalign = "_encstr_BC940BE9D5F91D47B0ABBD851E";
    var_1.alpha = 0;
    var_1.lowalpha = 0;
    var_1.highalpha = 0.75;
    var_0.healedoverlay = var_1;
    var_0 thread healedoverlayfade( var_1, self, var_1.lowalpha );
    var_0 thread healedoverlaydestructor( var_1, self );
}

healedoverlayfade( var_0, var_1, var_2 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_BEA81538239B06B2AA19C0693B44C1584F07BE8FE6B955" );
    var_1 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    var_1 endon( "_encstr_B91D0DED459BC77308A0E2AA487D13" );
    var_0 fadeovertime( 0.5 );
    var_0.alpha = var_2;
}

healedoverlaydestructor( var_0, var_1 )
{
    scripts\engine\utility::waittill_any_ents( level, "_encstr_AD1D0BEF9161A06F1F684ADA39", var_1, "_encstr_B91D0DED459BC77308A0E2AA487D13", var_1, "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3", self, "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3", self, "_encstr_BEA81538239B06B2AA19C0693B44C1584F07BE8FE6B955" );

    if ( isdefined( var_0 ) )
    {
        var_0 fadeovertime( 1 );
        var_0.alpha = 0;
        wait 1;
        var_0 destroy();
    }
}

settank()
{

}

unsettank()
{

}

setsurvivor()
{

}

unsetsurvivor()
{

}

setstealth()
{

}

unsetstealth()
{

}

setbreacher()
{
    scripts\mp\door::updatealldoorslockvisibilityforplayer( self, 1 );
}

unsetbreacher()
{
    scripts\mp\door::updatealldoorslockvisibilityforplayer( self, 0 );
}

setsupport()
{

}

unsetsupport()
{

}

setdemolitions()
{

}

unsetdemolitions()
{

}

setintel()
{

}

unsetintel()
{

}

sethunter()
{

}

unsethunter()
{

}

setspotter()
{

}

unsetspotter()
{

}

setmunitions()
{

}

unsetmunitions()
{

}

setoffhandprovider()
{
    thread offhandproviderthread();
}

offhandproviderthread()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_BAB917EA376ECA8EEBB799CC86C29B19F51C93B7D9B423AC4E" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    for (;;)
    {
        var_0 = scripts\mp\utility\player::getplayersinradius( self.origin, 144, self.team, self );

        foreach ( var_2 in var_0 )
        {
            if ( !isdefined( var_2.ohpequipmentrefills ) )
                var_2.ohpequipmentrefills = [];

            if ( var_2 equipmentusedbyslot( "_encstr_987F080E394BDAC2E45E" ) == 0 && var_2 equipmentusedbyslot( "_encstr_B98F0AC7D5B99F4DDBA8353B" ) == 0 )
                continue;

            if ( !isdefined( var_2.ohpequipmentrefills[self getentitynumber()] ) && var_2 scripts\cp_mp\utility\player_utility::_isalive() )
            {
                var_2.ohpequipmentrefills[self getentitynumber()] = 1;
                var_3 = var_2 refillequipment();

                for ( var_4 = 0; var_4 < var_3["_encstr_987F080E394BDAC2E45E"]; var_4++ )
                    var_2 thread ohpequipmentfillednotification( self.name, var_2 scripts\mp\equipment::getcurrentequipment( "_encstr_987F080E394BDAC2E45E" ) );

                for ( var_4 = 0; var_4 < var_3["_encstr_B98F0AC7D5B99F4DDBA8353B"]; var_4++ )
                    var_2 thread ohpequipmentfillednotification( self.name, var_2 scripts\mp\equipment::getcurrentequipment( "_encstr_B98F0AC7D5B99F4DDBA8353B" ) );

                thread ohpallowuseonplayerdeath( var_2 );
                var_2 playsoundtoplayer( "_encstr_BD1516E6D82C6795373BB2C9D70E586CD6BE07A5B1D6AB38", var_2 );
            }
        }

        wait 0.1;
    }
}

ohpallowuseonplayerdeath( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_1 = self getentitynumber();
    scripts\engine\utility::waittill_any_ents_return( self, "_encstr_8A820B4696CDB1ED3737AC1B3A", var_0, "_encstr_A3750609A5E61883" );
    var_0.ohpequipmentrefills[var_1] = undefined;
}

unsetoffhandprovider()
{
    self notify( "_encstr_BAB917EA376ECA8EEBB799CC86C29B19F51C93B7D9B423AC4E" );
}

refillequipment()
{
    var_0 = [];
    var_0["_encstr_987F080E394BDAC2E45E"] = equipmentusedbyslot( "_encstr_987F080E394BDAC2E45E", 1 );
    var_0["_encstr_B98F0AC7D5B99F4DDBA8353B"] = equipmentusedbyslot( "_encstr_B98F0AC7D5B99F4DDBA8353B", 1 );
    return var_0;
}

equipmentusedbyslot( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = 0;

    var_2 = scripts\mp\equipment::getcurrentequipment( var_0 );
    var_3 = getequipmentstartammo( var_0 );
    var_4 = scripts\mp\equipment::getequipmentammo( var_2 );

    if ( var_1 && var_3 - var_4 > 0 )
        scripts\mp\equipment::incrementequipmentammo( var_2, var_3 - var_4 );

    return var_3 - var_4;
}

getequipmentstartammo( var_0 )
{
    var_1 = scripts\mp\equipment::getcurrentequipment( var_0 );
    var_2 = scripts\mp\equipment::getequipmentstartammo( var_1 );

    if ( var_0 == "_encstr_987F080E394BDAC2E45E" && scripts\mp\utility\perk::_hasperk( "_encstr_81D117CDC159D84B58B1D1F2AFAC1E3A39B0F5465616C8C6BC" ) )
        var_2 = scripts\mp\equipment::getequipmentmaxammo( var_1 );

    return var_2;
}

ohpequipmentfillednotification( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( !isdefined( self.munitionsnotifications ) )
        self.munitionsnotifications = [];

    var_2 = self.munitionsnotifications.size;

    for ( var_3 = 0; var_3 < var_2; var_3++ )
    {
        if ( var_3 < 2 )
        {
            thread movenotificationup( self.munitionsnotifications[var_3] );
            continue;
        }

        var_4 = self.munitionsnotifications[var_3];
        self.munitionsnotifications[var_3] = undefined;
        var_4 notify( "_encstr_AFC311B9E7B2C5D8E551A0F945C6490D0A4F33" );
    }

    var_5 = 620;
    var_6 = 360;
    var_7 = 352.0;
    var_8 = 264.0;
    var_9 = newclienthudelem( self );
    var_9.x = var_7;
    var_9.y = var_8;
    var_9.alignx = "_encstr_9353062E718710C9";
    var_9.aligny = "_encstr_B91904EC4718";
    var_9.sort = 2;
    var_9.alpha = 0;
    var_10 = scripts\mp\equipment::getequipmenttableinfo( var_1 );
    var_9 setshader( var_10.image, 25, 25 );
    var_9 fadeovertime( 0.15 );
    var_9 moveovertime( 0.35 );
    var_9.alpha = 1;
    var_9.x = var_5;
    var_9.y = var_6;
    self.munitionsnotifications = scripts\engine\utility::array_insert( self.munitionsnotifications, var_9, 0 );
    var_9 endon( "_encstr_AFC311B9E7B2C5D8E551A0F945C6490D0A4F33" );
    thread ohpcleanupnotificationondeath( var_9 );
    var_9.isanimating = 1;
    wait 0.35;
    var_9.isanimating = 0;
    wait 3;
    var_9 fadeovertime( 0.5 );
    var_9.alpha = 0;
    wait 0.5;
    var_9 notify( "_encstr_AFC311B9E7B2C5D8E551A0F945C6490D0A4F33" );
}

ohpcleanupnotificationondeath( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\engine\utility::waittill_any_ents( self, "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3", var_0, "_encstr_AFC311B9E7B2C5D8E551A0F945C6490D0A4F33" );

    if ( isdefined( self ) )
        self.munitionsnotifications = scripts\engine\utility::array_remove( self.munitionsnotifications, var_0 );

    var_0 destroy();
}

movenotificationup( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    var_0 endon( "_encstr_AFC311B9E7B2C5D8E551A0F945C6490D0A4F33" );

    if ( !istrue( var_0.isanimating ) )
        var_0 moveovertime( 0.35 );

    var_0.y = var_0.y - 25;
    wait 0.35;
}

_id_131B3()
{
    for (;;)
    {
        var_0 = scripts\engine\utility::_id_143AF( "_encstr_BC1A0D3F70BB911AE9A8964FACFBD2", "_encstr_9B850B3ACF0A1148A4D78D2810", "_encstr_89390E4C39FEB818C099781C19966AEB", "_encstr_A3750609A5E61883" );
        thread set_train_stopped( var_0 );
    }
}

_id_13F6A()
{
    self setmovespeedscale( 1 );
}

set_train_stopped( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( var_0 == "_encstr_BC1A0D3F70BB911AE9A8964FACFBD2" )
    {
        if ( self.lastweaponobj hasattachment( "_encstr_B7E70EA7D308082256BF1F9FBBF30A5B" ) )
            self setmovespeedscale( 1.04 );
    }
    else if ( var_0 == "_encstr_9B850B3ACF0A1148A4D78D2810" || var_0 == "_encstr_A3750609A5E61883" )
        self setmovespeedscale( 1 );
    else if ( var_0 == "_encstr_89390E4C39FEB818C099781C19966AEB" )
    {
        waitframe();

        if ( !self.lastweaponobj hasattachment( "_encstr_B7E70EA7D308082256BF1F9FBBF30A5B" ) )
            self setmovespeedscale( 1 );
        else
            self setmovespeedscale( 1.04 );
    }
}

setoverkillpro()
{

}

unsetoverkillpro()
{

}

setempimmune()
{

}

unsetempimmune()
{

}

setautospot()
{
    if ( !isplayer( self ) )
        return;

    autospotadswatcher();
    autospotdeathwatcher();
}

autospotdeathwatcher()
{
    self waittill( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_AFC7162BDC1914ABD17BA607EDA3058C9BEA2CE86C862BE4" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self autospotoverlayoff();
}

unsetautospot()
{
    if ( !isplayer( self ) )
        return;

    self notify( "_encstr_AFC7162BDC1914ABD17BA607EDA3058C9BEA2CE86C862BE4" );
    self autospotoverlayoff();
}

autospotadswatcher()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AFC7162BDC1914ABD17BA607EDA3058C9BEA2CE86C862BE4" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = 0;

    for (;;)
    {
        waitframe();

        if ( self isusingturret() )
        {
            self autospotoverlayoff();
            continue;
        }

        var_1 = self playerads();

        if ( var_1 < 1 && var_0 )
        {
            var_0 = 0;
            self autospotoverlayoff();
        }

        if ( var_1 < 1 && !var_0 )
            continue;

        if ( var_1 == 1 && !var_0 )
        {
            var_0 = 1;
            self autospotoverlayon();
        }
    }
}

setregenfaster()
{

}

unsetregenfaster()
{

}

timeoutregenfaster()
{
    self.hasregenfaster = undefined;
    scripts\mp\utility\perk::removeperk( "_encstr_8934169BD3FDB744B1FBA080DF33EF7058952C215BA931F3" );
    self setclientdvar( "_encstr_B2FC21704A0905497795C0506E9773C16F63A948929F27AD67B4D9B353AF39AF15EA50", 0 );
    self notify( "_encstr_A490138ED25BCAD3EAE825AC9D56B9C885B91D954E" );
}

sethardshell()
{
    self.shellshockreduction = 0.25;
}

unsethardshell()
{
    self.shellshockreduction = 0;
}

setsharpfocus()
{
    thread monitorsharpfocus();
}

monitorsharpfocus()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_88CD17DC3AED07D7D6DBE6B447F6C9A9A12C270EC8DB36EACD" );

    for (;;)
    {
        updatesharpfocus();
        self waittill( "_encstr_89390E4C39FEB818C099781C19966AEB" );
    }
}

updatesharpfocus()
{
    var_0 = self.currentweapon;
    var_1 = undefined;
    var_2 = scripts\mp\utility\weapon::_id_14584( var_0 );

    if ( var_2 == 5 )
        var_1 = 0.85;
    else if ( var_2 == 4 )
        var_1 = 0.2;
    else if ( var_2 == 2 )
        var_1 = 0.08;
    else if ( var_2 == 3 )
        var_1 = 0.31;
    else if ( var_2 == 1 )
        var_1 = 0.25;
    else
        var_1 = 0.05;

    scripts\mp\weapons::updateviewkickscale( var_1 );
}

unsetsharpfocus()
{
    self notify( "_encstr_88CD17DC3AED07D7D6DBE6B447F6C9A9A12C270EC8DB36EACD" );
    scripts\mp\weapons::updateviewkickscale( 1.0 );
}

updatedefaultflinchreduction()
{
    if ( isagent( self ) )
        return;

    var_0 = undefined;
    var_1 = scripts\mp\utility\weapon::_id_14584( self.currentweapon );

    if ( var_1 == 5 )
        var_0 = 0.85;
    else if ( var_1 == 4 )
        var_0 = 0.2;
    else if ( var_1 == 2 )
    {
        if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
            var_0 = getdvarfloat( "_encstr_A3111AB98D39D7ADB04E6D375BC2B9BE338D96E68D0D37C60B630B93", 0.08 );
        else
            var_0 = 0.08;
    }
    else if ( var_1 == 3 )
        var_0 = 0.31;
    else if ( var_1 == 1 )
        var_0 = 0.25;
    else if ( var_1 == 6 )
        var_0 = getdvarfloat( "_encstr_A3111AB98D39D7ADB04E6D375BC2B9BE338D96E68D0D37C60B630B93", 0.08 );
    else
        var_0 = 0.05;

    scripts\mp\weapons::updateviewkickscale( var_0 );
}

_id_13121()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    scripts\mp\utility\perk::giveperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );
    wait( getdvarfloat( "_encstr_9871218BA05D612F0390D0FDB6E80736A7D813A2B8C3E34F3888F7F4CD13C73BDB902A", 5.0 ) );
    scripts\mp\utility\perk::removeperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );
}

_id_131D0()
{
    thread _id_11CFC();
}

_id_11CFC()
{
    self endon( "_encstr_80411135798F18F1C952B8783B91BB90A71DBD" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self notifyonplayercommand( "_encstr_B1EB0F5917C28318A75AE0DB098EB8C65A", "_encstr_9DE608483AFB1D28C673" );
    self notifyonplayercommand( "_encstr_B1EB0F5917C28318A75AE0DB098EB8C65A", "_encstr_B6D21A59B0E88EC236DAEBC2D62DD631BDFA16D8B1566E9B5A31C62B" );
    self notifyonplayercommand( "_encstr_A8FB1201813FA0E547F3E0CB497B15F8D7E197AB", "_encstr_981E08934F8BF5D8BB04" );
    self notifyonplayercommand( "_encstr_A8FB1201813FA0E547F3E0CB497B15F8D7E197AB", "_encstr_A1D51A95073B63F66FF86982D0532DE3B0E02153AEA1373A03A862DA" );

    for (;;)
    {
        self waittill( "_encstr_B1EB0F5917C28318A75AE0DB098EB8C65A" );

        if ( self.currentweapon hasattachment( "_encstr_AB6E12D9BA7383B293D67D475A9D34E8CEE49683" ) )
        {
            if ( !scripts\mp\utility\perk::_hasperk( "_encstr_BDDE1477E0D7903307BAFB42918BFB782C5CD7ED91FA" ) )
                scripts\mp\utility\perk::giveperk( "_encstr_BDDE1477E0D7903307BAFB42918BFB782C5CD7ED91FA" );
            else
                self notify( "_encstr_889713C9F0DFA86837920717B9229F9E28FC4D180A" );

            self waittill( "_encstr_A8FB1201813FA0E547F3E0CB497B15F8D7E197AB" );
            thread lobby_patrol_enemy_watcher();
        }
    }
}

lobby_patrol_enemy_watcher()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_889713C9F0DFA86837920717B9229F9E28FC4D180A" );
    wait 0.2;

    if ( self hasperk( "_encstr_BDDE1477E0D7903307BAFB42918BFB782C5CD7ED91FA" ) )
        scripts\mp\utility\perk::removeperk( "_encstr_BDDE1477E0D7903307BAFB42918BFB782C5CD7ED91FA" );
}

_id_13F70()
{
    self notify( "_encstr_80411135798F18F1C952B8783B91BB90A71DBD" );
    self notifyonplayercommandremove( "_encstr_B1EB0F5917C28318A75AE0DB098EB8C65A", "_encstr_9DE608483AFB1D28C673" );
    self notifyonplayercommandremove( "_encstr_B1EB0F5917C28318A75AE0DB098EB8C65A", "_encstr_B6D21A59B0E88EC236DAEBC2D62DD631BDFA16D8B1566E9B5A31C62B" );
    self notifyonplayercommandremove( "_encstr_A8FB1201813FA0E547F3E0CB497B15F8D7E197AB", "_encstr_981E08934F8BF5D8BB04" );
    self notifyonplayercommandremove( "_encstr_A8FB1201813FA0E547F3E0CB497B15F8D7E197AB", "_encstr_A1D51A95073B63F66FF86982D0532DE3B0E02153AEA1373A03A862DA" );

    if ( self hasperk( "_encstr_BDDE1477E0D7903307BAFB42918BFB782C5CD7ED91FA" ) )
        scripts\mp\utility\perk::removeperk( "_encstr_BDDE1477E0D7903307BAFB42918BFB782C5CD7ED91FA" );
}

_id_131B4()
{
    thread _id_11D1A();
}

_id_11D1A()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_9B2E11A96DF85F142FD84AB3801FCB3313DD14" );

    for (;;)
    {
        if ( self.currentweapon hasattachment( "_encstr_9D1E13AC559B2BE3B282C1C81B0CA76DB7EB209FDD" ) && self playerads() == 1 )
        {
            thread _id_131B5();

            while ( self playerads() == 1 )
                waitframe();

            if ( scripts\mp\utility\perk::_hasperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" ) )
                scripts\mp\utility\perk::removeperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );
        }

        waitframe();
    }
}

_id_131B5()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self notify( "_encstr_B9201A5CEA2D6CB6E6D8DBE0CAFAB0B136574E581BBCAFB91D5827A3" );
    self endon( "_encstr_B9201A5CEA2D6CB6E6D8DBE0CAFAB0B136574E581BBCAFB91D5827A3" );
    self endon( "_encstr_9B2E11A96DF85F142FD84AB3801FCB3313DD14" );

    if ( !scripts\mp\utility\perk::_hasperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" ) )
        scripts\mp\utility\perk::giveperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );

    wait 1.0;

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" ) )
        scripts\mp\utility\perk::removeperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );
}

_id_13F6B()
{
    self notify( "_encstr_9B2E11A96DF85F142FD84AB3801FCB3313DD14" );

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" ) )
        scripts\mp\utility\perk::removeperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );
}

_id_13159()
{
    thread _id_11D08();
}

_id_11D08()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_8F5E10D9699A20467702E3492907F020F7D4" );

    for (;;)
    {
        if ( self playerads() == 1 )
        {
            thread _id_1315A();

            while ( self playerads() == 1 )
                waitframe();

            self notify( "_encstr_AA771188DA5219BB578FDF5DA78F21C5FE6220" );

            if ( scripts\mp\utility\perk::_hasperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" ) )
                scripts\mp\utility\perk::removeperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );
        }

        waitframe();
    }
}

_id_1315A()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AA771188DA5219BB578FDF5DA78F21C5FE6220" );
    self endon( "_encstr_8F5E10D9699A20467702E3492907F020F7D4" );
    wait 0.5;
    scripts\mp\utility\perk::giveperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );
}

_id_13F65()
{
    self notify( "_encstr_8F5E10D9699A20467702E3492907F020F7D4" );

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" ) )
        scripts\mp\utility\perk::removeperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );
}

_id_13176()
{
    thread _id_11D13();
}

_id_11D13()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_9F8614DE59032EB1F070020E85A5D03B8725E366578B" );

    for (;;)
    {
        if ( isdefined( self.health ) && isdefined( self.maxhealth ) && self.health < self.maxhealth )
        {
            scripts\mp\utility\perk::giveperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );

            while ( self.health < self.maxhealth )
                waitframe();

            scripts\mp\utility\perk::removeperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );
        }

        waitframe();
    }
}

_id_13F66()
{
    self notify( "_encstr_9F8614DE59032EB1F070020E85A5D03B8725E366578B" );

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" ) )
        scripts\mp\utility\perk::removeperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );
}

_id_13195()
{
    thread _id_11D15();
}

_id_11D15()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( self.currentweapon hasattachment( "_encstr_9C340E81B3C86F623B62B7218EFD6AD8" ) )
        thread _id_13196();

    for (;;)
    {
        self waittill( "_encstr_89390E4C39FEB818C099781C19966AEB" );
        waitframe();

        if ( self.currentweapon hasattachment( "_encstr_9C340E81B3C86F623B62B7218EFD6AD8" ) )
        {
            thread _id_13196();
            continue;
        }

        if ( scripts\mp\utility\perk::_hasperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" ) )
            scripts\mp\utility\perk::removeperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );
    }
}

_id_13196()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self notify( "_encstr_B23B1388E7E8C3B967E2E83F8D9BE7289849A3F123" );
    self endon( "_encstr_B23B1388E7E8C3B967E2E83F8D9BE7289849A3F123" );
    self endon( "_encstr_8A270C62CF5D12EB6638236F803B" );

    if ( !scripts\mp\utility\perk::_hasperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" ) )
        scripts\mp\utility\perk::giveperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );

    wait 3.0;
    scripts\mp\utility\perk::removeperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );
}

_id_13F68()
{
    self notify( "_encstr_8A270C62CF5D12EB6638236F803B" );

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" ) )
        scripts\mp\utility\perk::removeperk( "_encstr_89211BCD3856B1A52C1B3AE5D796E636C9B2166EAC2C363657270BB1F2" );
}

ammodisabling_run( var_0 )
{
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( var_0.disabledspeedmod ) )
        return;
    else
        var_0.disabledspeedmod = -0.05;

    var_0 shellshock( "_encstr_AF030E3A48CB9A9F51419F8C6D3E7FA2", 0.8 );
    var_0 scripts\mp\weapons::updatemovespeedscale();
    var_0 ammodisabling_impair();
    scripts\engine\utility::_id_143B9( 0.8, "_encstr_A3750609A5E61883" );
    var_0 ammodisabling_impairend();
    var_0.disabledspeedmod = undefined;
    var_0 scripts\mp\weapons::updatemovespeedscale();
}

ammodisabling_impair()
{
    scripts\common\utility::allow_sprint( 0 );
    scripts\common\utility::allow_slide( 0 );
    scripts\common\utility::allow_jump( 0 );
}

ammodisabling_impairend()
{
    scripts\common\utility::allow_sprint( 1 );
    scripts\common\utility::allow_slide( 1 );
    scripts\common\utility::allow_jump( 1 );
}

setviewkickoverride()
{
    self.overrideviewkickscale = 0.05;
    self._id_1218D = 0.05;
    self._id_1218F = 0.08;
    self.overrideviewkickscalesniper = 0.3;
    self.overrideviewkickscalepistol = 0.05;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
        self._id_1218E = getdvarfloat( "_encstr_A3111AB98D39D7ADB04E6D375BC2B9BE338D96E68D0D37C60B630B93", 0.08 ) * getdvarfloat( "_encstr_B3BC186E6CC9FAC49CD733F68D579BE0AC4ED6F5B98DC2C6B093", 0.8 );
    else
        self._id_1218E = 0.02;

    scripts\mp\weapons::updateviewkickscale();
}

unsetviewkickoverride()
{
    self.overrideviewkickscale = undefined;
    self._id_1218D = undefined;
    self._id_1218F = undefined;
    self._id_1218E = undefined;
    self.overrideviewkickscalesniper = undefined;
    self.overrideviewkickscalepistol = undefined;
    scripts\mp\weapons::updateviewkickscale();
}

setaffinityspeedboost()
{
    self.weaponaffinityspeedboost = 0.08;
    scripts\mp\weapons::updatemovespeedscale();
}

unsetaffinityspeedboost()
{
    self.weaponaffinityspeedboost = undefined;
    scripts\mp\weapons::updatemovespeedscale();
}

setaffinityextralauncher()
{
    self.weaponaffinityextralauncher = 1;
    var_0 = scripts\mp\class::buildweapon( self.loadoutprimary, self.loadoutprimaryattachments, self.loadoutprimarycamo, self.loadoutprimaryreticle, self.loadoutprimaryvariantid );
    var_1 = scripts\mp\class::buildweapon( self.loadoutsecondary, self.loadoutsecondaryattachments, self.loadoutsecondarycamo, self.loadoutsecondaryreticle, self.loadoutsecondaryvariantid );

    if ( scripts\mp\utility\weapon::getweapongroup( var_0.basename ) == "_encstr_B7BF127F8889D85A6D18A25A780DB2937340ABBF" )
        self setweaponammoclip( var_0, weaponclipsize( var_0 ) );

    if ( scripts\mp\utility\weapon::getweapongroup( var_1.basename ) == "_encstr_B7BF127F8889D85A6D18A25A780DB2937340ABBF" )
        self setweaponammoclip( var_1, weaponclipsize( var_1 ) );
}

unsetaffinityextralauncher()
{
    self.weaponaffinityextralauncher = undefined;
}

setdoubleload()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A3900EDF38C114A2B36E7D37515F9AFC" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        self waittill( "_encstr_A64D0743C1D1370153" );
        var_0 = self getweaponslist( "_encstr_987F080E394BDAC2E45E" );

        foreach ( var_2 in var_0 )
        {
            var_3 = self getweaponammoclip( var_2 );
            var_4 = weaponclipsize( var_2 );
            var_5 = var_4 - var_3;
            var_6 = self getweaponammostock( var_2 );

            if ( var_3 != var_4 && var_6 > 0 )
            {
                if ( var_3 + var_6 >= var_4 )
                {
                    self setweaponammoclip( var_2, var_4 );
                    self setweaponammostock( var_2, var_6 - var_5 );
                    continue;
                }

                self setweaponammoclip( var_2, var_3 + var_6 );

                if ( var_6 - var_5 > 0 )
                {
                    self setweaponammostock( var_2, var_6 - var_5 );
                    continue;
                }

                self setweaponammostock( var_2, 0 );
            }
        }
    }
}

unsetdoubleload()
{
    self notify( "_encstr_A3900EDF38C114A2B36E7D37515F9AFC" );
}

setmarksman( var_0 )
{
    return;

    if ( !isdefined( var_0 ) )
        var_0 = 10;
    else
        var_0 = int( var_0 ) * 2;

    scripts\mp\utility\weapon::setrecoilscale( var_0 );
    self.recoilscale = var_0;
}

unsetmarksman()
{
    return;
    scripts\mp\utility\weapon::setrecoilscale( 0 );
    self.recoilscale = 0;
}

setfastcrouch()
{
    thread watchfastcrouch();
}

watchfastcrouch()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AAE111990BCDD1C69CB7AB361AAFBADC372BA3" );

    for (;;)
    {
        var_0 = ( self getstance() == "_encstr_9C3D071B63023B26C3" || self getstance() == "_encstr_9F24062875D5FD98" ) && !self issprintsliding();

        if ( !isdefined( self.fastcrouchspeedmod ) )
        {
            if ( var_0 )
            {
                self.fastcrouchspeedmod = 0.25;
                scripts\mp\weapons::updatemovespeedscale();
            }
        }
        else if ( !var_0 )
        {
            self.fastcrouchspeedmod = undefined;
            scripts\mp\weapons::updatemovespeedscale();
        }

        waitframe();
    }
}

unsetfastcrouch()
{
    self notify( "_encstr_AAE111990BCDD1C69CB7AB361AAFBADC372BA3" );

    if ( isdefined( self.fastcrouchspeedmod ) )
    {
        self.fastcrouchspeedmod = undefined;
        scripts\mp\weapons::updatemovespeedscale();
    }
}

setrshieldradar()
{
    self endon( "_encstr_A12E12DDFD53ABD30A1F0808AF5CA9BD1AE75FE6" );
    wait 0.75;
    self makeportableradar();
    thread setrshieldradar_cleanup();
}

setrshieldradar_cleanup()
{
    self endon( "_encstr_A12E12DDFD53ABD30A1F0808AF5CA9BD1AE75FE6" );
    self waittill( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( isdefined( self ) )
        unsetrshieldradar();
}

unsetrshieldradar()
{
    self clearportableradar();
    self notify( "_encstr_A12E12DDFD53ABD30A1F0808AF5CA9BD1AE75FE6" );
}

setrshieldscrambler()
{
    self makescrambler();
    thread setrshieldscrambler_cleanup();
}

setrshieldscrambler_cleanup()
{
    self endon( "_encstr_9C56163B8533936B99A941589F4A971BF6DA69358058250A" );
    self waittill( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( isdefined( self ) )
        unsetrshieldscrambler();
}

unsetrshieldscrambler()
{
    self clearscrambler();
    self notify( "_encstr_9C56163B8533936B99A941589F4A971BF6DA69358058250A" );
}

setstunresistance( var_0 )
{
    if ( !isdefined( var_0 ) )
        var_0 = 4;

    var_0 = int( var_0 );

    if ( var_0 == 10 )
        self.stunscalar = 0;
    else
        self.stunscalar = var_0 / 10;
}

unsetstunresistance()
{
    self.stunscalar = 1;
}

applystunresistence( var_0, var_1, var_2 )
{
    if ( var_1 scripts\mp\utility\perk::_hasperk( "_encstr_AAC01A87A9F5722930B83378F6887CABD85F1B57572BBB0C6880EE47" ) && var_0 != var_1 )
    {
        if ( isdefined( var_1.stunscalar ) && isdefined( var_2 ) )
            var_2 = var_2 * var_1.stunscalar;

        var_3 = scripts\engine\utility::ter_op( isdefined( var_0.owner ), var_0.owner, var_0 );
        var_4 = scripts\engine\utility::ter_op( isdefined( var_1.owner ), var_1.owner, var_1 );

        if ( isplayer( var_3 ) && var_3 != var_1 )
            var_0 scripts\mp\damagefeedback::updatedamagefeedback( "_encstr_8A760D43963AE8168D9356CD4BB93A", undefined, undefined, undefined, 1 );

        if ( istrue( scripts\cp_mp\utility\player_utility::playersareenemies( var_3, var_4 ) ) )
            var_1 scripts\cp\vehicles\vehicle_compass_cp::resistedstun( var_3 );
    }
    else if ( !istrue( var_1 scripts\mp\utility\player::is_allowed_to_be_stunned() ) )
        var_2 = 0.0;

    if ( var_1 scripts\mp\utility\game::ismatchstartprotected() )
        var_2 = var_2 * 0.1;

    return var_2;
}

setweaponlaser()
{
    if ( isagent( self ) )
        return;

    self endon( "_encstr_AF07118D78774FC191EA917378E0B531103DCB" );
    wait 0.5;
    thread setweaponlaser_internal();
}

unsetweaponlaser()
{
    self notify( "_encstr_AF07118D78774FC191EA917378E0B531103DCB" );

    if ( isdefined( self.perkweaponlaseron ) && self.perkweaponlaseron )
        scripts\mp\utility\weapon::disableweaponlaser();

    self.perkweaponlaseron = undefined;
    self.perkweaponlaseroffforswitchstart = undefined;
}

setweaponlaser_waitforlaserweapon( var_0 )
{
    var_0 = getweaponbasename( var_0 );

    for (;;)
    {
        if ( isdefined( var_0 ) && ( var_0 == "_encstr_88B60B3C884CD98B0761818562" || var_0 == "_encstr_95090E672FA449D920A2EA139371ED73" ) )
            break;

        self waittill( "_encstr_89390E4C39FEB818C099781C19966AEB", var_1 );
        var_0 = var_1.basename;
    }
}

setweaponlaser_internal()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AF07118D78774FC191EA917378E0B531103DCB" );
    self.perkweaponlaseron = 0;
    var_0 = self getcurrentweapon();

    for (;;)
    {
        setweaponlaser_waitforlaserweapon( var_0 );

        if ( self.perkweaponlaseron == 0 )
        {
            self.perkweaponlaseron = 1;
            scripts\mp\utility\weapon::enableweaponlaser();
        }

        childthread setweaponlaser_monitorads();
        childthread setweaponlaser_monitorweaponswitchstart( 1.0 );
        self.perkweaponlaseroffforswitchstart = undefined;
        self waittill( "_encstr_89390E4C39FEB818C099781C19966AEB" );

        if ( self.perkweaponlaseron == 1 )
        {
            self.perkweaponlaseron = 0;
            scripts\mp\utility\weapon::disableweaponlaser();
        }
    }
}

setweaponlaser_monitorweaponswitchstart( var_0 )
{
    self endon( "_encstr_89390E4C39FEB818C099781C19966AEB" );

    for (;;)
    {
        self waittill( "_encstr_B3C216770F8AA7D8C679DB539CA4C0D301CFF9E3FB03E548" );
        childthread setweaponlaser_onweaponswitchstart( var_0 );
    }
}

setweaponlaser_onweaponswitchstart( var_0 )
{
    self notify( "_encstr_AD9B23B7C713FC70017A80B86DE9082D8BC71705B7AABFA057D50F93CCC4D0D331F3838553" );
    self endon( "_encstr_AD9B23B7C713FC70017A80B86DE9082D8BC71705B7AABFA057D50F93CCC4D0D331F3838553" );

    if ( self.perkweaponlaseron == 1 )
    {
        self.perkweaponlaseroffforswitchstart = 1;
        self.perkweaponlaseron = 0;
        scripts\mp\utility\weapon::disableweaponlaser();
    }

    wait( var_0 );
    self.perkweaponlaseroffforswitchstart = undefined;

    if ( self.perkweaponlaseron == 0 && self playerads() <= 0.6 )
    {
        self.perkweaponlaseron = 1;
        scripts\mp\utility\weapon::enableweaponlaser();
    }
}

setweaponlaser_monitorads()
{
    self endon( "_encstr_89390E4C39FEB818C099781C19966AEB" );

    for (;;)
    {
        if ( !isdefined( self.perkweaponlaseroffforswitchstart ) || self.perkweaponlaseroffforswitchstart == 0 )
        {
            if ( self playerads() > 0.6 )
            {
                if ( self.perkweaponlaseron == 1 )
                {
                    self.perkweaponlaseron = 0;
                    scripts\mp\utility\weapon::disableweaponlaser();
                }
            }
            else if ( self.perkweaponlaseron == 0 )
            {
                self.perkweaponlaseron = 1;
                scripts\mp\utility\weapon::enableweaponlaser();
            }
        }

        waitframe();
    }
}

setsteadyaimpro()
{
    self setaimspreadmovementscale( 0.5 );
}

unsetsteadyaimpro()
{
    self notify( "_encstr_A129112B9B46AFA9A395B0195E14A56B28E4BD" );
    self setaimspreadmovementscale( 1.0 );
}

perkusedeathtracker()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self waittill( "_encstr_A3750609A5E61883" );
    self._useperkenabled = undefined;
}

setendgame()
{
    if ( isdefined( self.endgame ) )
        return;

    self.maxhealth = scripts\mp\tweakables::gettweakablevalue( "_encstr_AAB0079B102F47FF38", "_encstr_9C9F0A6B2C0F34590B3647A1" ) * 4;
    self.health = self.maxhealth;
    self.endgame = 1;
    self.attackertable[0] = "_encstr_A40101";
    self visionsetnakedforplayer( "_encstr_AFAF0901C55BB78F17ED72", 5 );
    thread endgamedeath( 7 );
    scripts\mp\gamelogic::sethasdonecombat( self, 1 );
}

unsetendgame()
{
    self notify( "_encstr_9F460C40959D91B7F0F7EC536A63" );
    self.endgame = undefined;
    scripts\mp\utility\player::restorebasevisionset( 1 );

    if ( !isdefined( self.endgametimer ) )
        return;

    self.endgametimer scripts\mp\hud_util::destroyelem();
    self.endgameicon scripts\mp\hud_util::destroyelem();
}

endgamedeath( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_B2170C4AD884CDC823B9DB9D9F42" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_9F460C40959D91B7F0F7EC536A63" );
    wait( var_0 + 1 );
    scripts\mp\utility\damage::_suicide();
}

setsaboteur()
{
    self.objectivescaler = 1.2;
}

unsetsaboteur()
{
    self.objectivescaler = 1;
}

setcombatspeed()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AD9311BB6DBB31DD21FD61B1635039D87D379A" );
    self.incombatspeed = 0;
    unsetcombatspeedscalar();

    for (;;)
    {
        self waittill( "_encstr_B8BE07320B5B16ECAC", var_0, var_1 );

        if ( !isdefined( var_1.team ) )
            continue;

        if ( level.teambased && var_1.team == self.team )
            continue;

        if ( self.incombatspeed )
            continue;

        setcombatspeedscalar();
        self.incombatspeed = 1;
        thread endofspeedwatcher();
    }
}

endofspeedwatcher()
{
    self notify( "_encstr_983A1275CD30C583B62B7A62B1ECD74370A9EDEA" );
    self endon( "_encstr_983A1275CD30C583B62B7A62B1ECD74370A9EDEA" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self waittill( "_encstr_8BB507A15985365923" );
    unsetcombatspeedscalar();
    self.incombatspeed = 0;
}

setcombatspeedscalar()
{
    if ( self.weaponspeed <= 0.8 )
        self.combatspeedscalar = 1.4;
    else if ( self.weaponspeed <= 0.9 )
        self.combatspeedscalar = 1.3;
    else
        self.combatspeedscalar = 1.2;

    scripts\mp\weapons::updatemovespeedscale();
}

unsetcombatspeedscalar()
{
    self.combatspeedscalar = 1;
    scripts\mp\weapons::updatemovespeedscale();
}

unsetcombatspeed()
{
    unsetcombatspeedscalar();
    self notify( "_encstr_AD9311BB6DBB31DD21FD61B1635039D87D379A" );
}

setlightweight()
{
    if ( !isdefined( self.cranked ) )
    {
        self.movespeedscaler = scripts\mp\utility\perk::lightweightscalar();
        scripts\mp\weapons::updatemovespeedscale();
    }
}

unsetlightweight()
{
    self.movespeedscaler = 1;
    scripts\mp\weapons::updatemovespeedscale();
}

setblackbox()
{

}

unsetblackbox()
{

}

setsteelnerves()
{
    scripts\mp\utility\perk::giveperk( "_encstr_A9C919B7201750F3C7FABB02D193B560ED8D310BDB7E3846EF6212" );
    scripts\mp\utility\perk::giveperk( "_encstr_AD691543325528832AF3A1A327E2D818EC0EEB199EACA8" );
}

unsetsteelnerves()
{
    scripts\mp\utility\perk::removeperk( "_encstr_A9C919B7201750F3C7FABB02D193B560ED8D310BDB7E3846EF6212" );
    scripts\mp\utility\perk::removeperk( "_encstr_AD691543325528832AF3A1A327E2D818EC0EEB199EACA8" );
}

setdelaymine()
{

}

unsetdelaymine()
{

}

setlocaljammer()
{
    if ( scripts\cp_mp\emp_debuff::is_empd() )
        self makescrambler();
}

unsetlocaljammer()
{
    self clearscrambler();
}

setthermal()
{
    self thermalvisionon();
}

unsetthermal()
{
    self thermalvisionoff();
}

setonemanarmy()
{
    thread onemanarmyweaponchangetracker();
}

unsetonemanarmy()
{
    self notify( "_encstr_97A717C754C598B8AFEAA954E2537F409DC1017DE9AE38FDF3" );
}

onemanarmyweaponchangetracker()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_97A717C754C598B8AFEAA954E2537F409DC1017DE9AE38FDF3" );

    for (;;)
    {
        self waittill( "_encstr_89390E4C39FEB818C099781C19966AEB", var_0 );

        if ( var_0.basename != "_encstr_8FEE0EED9BACB5169BC2C9D6977DDA38" )
            continue;

        thread selectonemanarmyclass();
    }
}

isonemanarmymenu( var_0 )
{
    if ( var_0 == game["_encstr_BAAE10C563D8F3CFB770921AF9E86F6A68E3"] )
        return 1;

    if ( isdefined( game["_encstr_89C925ADB2B9BAEBB79BCADA85732C4EB52F7D32AC990BAB8D3A37BE3783D8A5E8DC1BE42B59DC"] ) && var_0 == game["_encstr_89C925ADB2B9BAEBB79BCADA85732C4EB52F7D32AC990BAB8D3A37BE3783D8A5E8DC1BE42B59DC"] )
        return 1;

    if ( isdefined( game["_encstr_9D3B230DAB103B17D8B82A52A1A02732D03B878B1390038FF1B6438B280B0B2A08D535154D"] ) && var_0 == game["_encstr_9D3B230DAB103B17D8B82A52A1A02732D03B878B1390038FF1B6438B280B0B2A08D535154D"] )
        return 1;

    return 0;
}

selectonemanarmyclass()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\common\utility::allow_weapon_switch( 0 );
    scripts\common\utility::allow_offhand_weapons( 0 );
    scripts\common\utility::allow_usability( 0 );
    thread closeomamenuondeath();
    self waittill( "_encstr_8C2C0D2587DEEF4AEAFF71A8BEFB41", var_0, var_1 );
    scripts\common\utility::allow_weapon_switch( 1 );
    scripts\common\utility::allow_offhand_weapons( 1 );
    scripts\common\utility::allow_usability( 1 );

    if ( var_1 == "_encstr_959B05982C8DDA" || !isonemanarmymenu( var_0 ) || scripts\mp\utility\player::isusingremote() )
    {
        var_2 = self getcurrentweapon();

        if ( var_2.basename == "_encstr_8FEE0EED9BACB5169BC2C9D6977DDA38" )
        {
            scripts\common\utility::allow_weapon_switch( 0 );
            scripts\common\utility::allow_offhand_weapons( 0 );
            scripts\common\utility::allow_usability( 0 );
            scripts\cp_mp\utility\inventory_utility::_switchtoweapon( scripts\mp\utility\inventory::getlastweapon() );
            self waittill( "_encstr_89390E4C39FEB818C099781C19966AEB" );
            scripts\common\utility::allow_weapon_switch( 1 );
            scripts\common\utility::allow_offhand_weapons( 1 );
            scripts\common\utility::allow_usability( 1 );
        }

        return;
    }

    thread giveonemanarmyclass( var_1 );
}

closeomamenuondeath()
{
    self endon( "_encstr_8C2C0D2587DEEF4AEAFF71A8BEFB41" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self waittill( "_encstr_A3750609A5E61883" );
    scripts\common\utility::allow_weapon_switch( 1 );
    scripts\common\utility::allow_offhand_weapons( 1 );
    scripts\common\utility::allow_usability( 1 );
}

giveonemanarmyclass( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_89B41920BBE707E84FBCED63B74F50CB4A737858E2BEA9A11BDF7D" ) )
    {
        var_1 = 3.0;
        scripts\mp\utility\sound::playplayerandnpcsounds( self, "_encstr_9C1D197F50317BAF188897BF18D049139BF389F6CF5F97E7C38033", "_encstr_A81D195248F0AF484DE05DD3B10B2B78CD38CFB1CF61EA8952BF50" );
    }
    else
    {
        var_1 = 6.0;
        scripts\mp\utility\sound::playplayerandnpcsounds( self, "_encstr_87391933DBD82F7DDE73CAD61673B0E46BBCF513C2768DBEE036C9", "_encstr_BA3A1950927D9B86CF16CD31F1238955E55B21F8EAD74DDEF310C6" );
    }

    thread omausebar( var_1 );
    scripts\common\utility::allow_weapon( 0 );
    scripts\common\utility::allow_offhand_weapons( 0 );
    scripts\common\utility::allow_usability( 0 );
    wait( var_1 );
    scripts\common\utility::allow_weapon( 1 );
    scripts\common\utility::allow_offhand_weapons( 1 );
    scripts\common\utility::allow_usability( 1 );
    scripts\mp\class::giveloadout( self.pers["_encstr_89EF05D46BA8FD"], var_0 );

    if ( isdefined( self.carryflag ) )
        self attach( self.carryflag, "_encstr_BAEC0969474B3BE3CA7F05", 1 );

    self notify( "_encstr_AA840C8E23B0EABF13F22178CF44" );
    level notify( "_encstr_AA840C8E23B0EABF13F22178CF44" );
    scripts\mp\rank::tryresetrankxp();
}

omausebar( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_1 = scripts\mp\hud_util::createprimaryprogressbar();
    var_2 = scripts\mp\hud_util::createprimaryprogressbartext();
    var_2 settext( &"_encstr_B9CF1251396BD3AE4718F7782F57B4074110F961" );
    var_1 scripts\mp\hud_util::updatebar( 0, 1 / var_0 );

    for ( var_3 = 0; var_3 < var_0 && isalive( self ) && !level.gameended; var_3 = var_3 + 0.05 )
        wait 0.05;

    var_1 scripts\mp\hud_util::destroyelem();
    var_2 scripts\mp\hud_util::destroyelem();
}

setafterburner()
{
    self energy_setrestorerate( 0, scripts\engine\utility::ter_op( scripts\mp\utility\game::isanymlgmatch(), 600, 1000 ) );
    self energy_setresttimems( 0, scripts\engine\utility::ter_op( scripts\mp\utility\game::isanymlgmatch(), 750, 750 ) );
}

unsetafterburner()
{
    self energy_setrestorerate( 0, 400 );
    self energy_setresttimems( 0, 900 );
}

setblastshield()
{

}

unsetblastshield()
{

}

toggleblastshield( var_0 )
{

}

blastshieldusetracker( var_0, var_1 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_B3D613B5F841B7DA0B2802F938539B4B59D6332D0E" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        self waittill( "_encstr_97430EC1BAAB5DA889379D85286E582D" );

        if ( !scripts\common\utility::is_offhand_weapons_allowed() )
            continue;

        self [[ var_1 ]]( scripts\mp\utility\perk::_hasperk( "_encstr_A2CF16DCE02BD896C2361DE5EB4CD816DCA39BA15A56B18C" ) );
    }
}

setfreefall()
{

}

unsetfreefall()
{

}

settacticalinsertion()
{
    scripts\mp\equipment::giveequipment( "_encstr_807E112733EB73A8A93322B141D446233D8243", "_encstr_B98F0AC7D5B99F4DDBA8353B" );
}

unsettacticalinsertion()
{

}

setpainted( var_0 )
{
    if ( isplayer( self ) )
    {
        var_1 = 0.5;

        if ( !scripts\mp\utility\perk::_hasperk( "_encstr_AD63136E0ECA1B5A85633AE5AFB29BB3B47359B239" ) && !scripts\mp\utility\perk::_hasperk( "_encstr_A636199B38CA8DA5851B47977D73F637C6BD8395BDEAA3639637CA" ) )
        {
            self.painted = 1;
            var_2 = scripts\mp\utility\outline::outlineenableforplayer( self, var_0, "_encstr_8CA117D5B5F9D271D008578B40C9355B8143514D9E7B2A8759", "_encstr_B40D05E05627D6" );
            thread watchpainted( var_2, var_1 );
            thread watchpaintedagain( var_2 );
        }
    }
}

watchpainted( var_0, var_1 )
{
    self notify( "_encstr_8C970EE058B49B47ACC8F55876C24B73" );
    self endon( "_encstr_8C970EE058B49B47ACC8F55876C24B73" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\engine\utility::_id_143B9( var_1, "_encstr_A3750609A5E61883" );
    self.painted = 0;
    scripts\mp\utility\outline::outlinedisable( var_0, self );
    self notify( "_encstr_A8E60C492F3A9810DDA72E614D84" );
}

watchpaintedagain( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\engine\utility::_id_143A5( "_encstr_8C970EE058B49B47ACC8F55876C24B73", "_encstr_A8E60C492F3A9810DDA72E614D84" );
    scripts\mp\utility\outline::outlinedisable( var_0, self );
}

ispainted()
{
    return isdefined( self.painted ) && self.painted;
}

setassists()
{

}

unsetassists()
{

}

setrefillgrenades()
{
    if ( isdefined( self.primarygrenade ) )
        self givemaxammo( self.primarygrenade );

    if ( isdefined( self.secondarygrenade ) )
        self givemaxammo( self.secondarygrenade );
}

unsetrefillgrenades()
{

}

setrefillammo()
{
    if ( isdefined( self.primaryweapon ) )
        self givemaxammo( self.primaryweapon );

    if ( isdefined( self.secondaryweapon ) )
        self givemaxammo( self.secondaryweapon );
}

unsetrefillammo()
{

}

setcomexp()
{

}

unsetcomexp()
{

}

settagger()
{
    thread settaggerinternal();
}

settaggerinternal()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_8A5F0C0BCBE3750379F767E7FBDA" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        self waittill( "_encstr_B73D0733F23A23A750" );
        var_0 = self getplayerssightingme();

        foreach ( var_2 in var_0 )
        {
            if ( level.teambased && var_2.team == self.team )
                continue;

            if ( isalive( var_2 ) && var_2.sessionstate == "_encstr_8F7508BB18675378EBC7" )
            {
                if ( !isdefined( var_2.perkoutlined ) )
                    var_2.perkoutlined = 0;

                if ( !var_2.perkoutlined )
                    var_2.perkoutlined = 1;

                var_2 thread outlinewatcher( self );
            }
        }
    }
}

outlinewatcher( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AADE0895CB95CD9E9933" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        var_1 = 1;
        var_2 = var_0 getplayerssightingme();

        foreach ( var_4 in var_2 )
        {
            if ( var_4 == self )
            {
                var_1 = 0;
                break;
            }
        }

        if ( var_1 )
        {
            self.perkoutlined = 0;
            self notify( "_encstr_AADE0895CB95CD9E9933" );
        }

        wait 0.5;
    }
}

unsettagger()
{
    self notify( "_encstr_8A5F0C0BCBE3750379F767E7FBDA" );
}

setpitcher()
{
    thread setpitcherinternal();
}

setpitcherinternal()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AB010DBACD9B951DA0A58E1B0DCA93" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self setgrenadecookscale( 1.5 );

    for (;;)
    {
        self setgrenadethrowscale( 1.25 );
        self waittill( "_encstr_BD9B114A738DFB1E689B07108310650327C902", var_0 );
        var_1 = var_0.basename;

        if ( var_1 == "_encstr_941712A001F25ADA50B2C950D76897551BD06DE9" || var_1 == "_encstr_933D1A44AD13ABCDE30B223AD8574347AB8DF7F5373BCF17DDD9DAF3" || var_1 == "_encstr_B4B722E9450278A0F71A4970A29764F89EC87745D7AEF0FFEB72E658CA0B12A0F20FEBF1" )
            self setgrenadethrowscale( 1 );

        self waittill( "_encstr_AD620DEC4ECA7358912BAF99B43959", var_2, var_0 );
    }
}

unsetpitcher()
{
    self setgrenadecookscale( 1 );
    self setgrenadethrowscale( 1 );
    self notify( "_encstr_AB010DBACD9B951DA0A58E1B0DCA93" );
}

setboom()
{

}

setboominternal( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_ABD60A38724A5313ABC71801" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    waitframe();
    triggerportableradarping( self.origin, var_0, 800, 1500 );
    var_0 boomtrackplayers( self.origin, self );
}

boomtrackplayers( var_0, var_1 )
{
    var_2 = scripts\common\utility::playersinsphere( var_0, 700 );

    foreach ( var_4 in var_2 )
    {
        if ( var_1 == var_4 )
            continue;

        if ( scripts\mp\utility\player::isenemy( var_4 ) && isalive( var_4 ) && !var_4 scripts\mp\utility\perk::_hasperk( "_encstr_A169146E1CACB1D2851BA3CBBED907DCD4166B6B2BC9" ) )
        {

        }
    }
}

boomtrackplayerdeath( var_0, var_1 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 endon( "_encstr_A1171039ACB6DED9B2859C6C34CA8ECB072B" );
    var_2 = scripts\engine\utility::_id_143B9( 7.0, "_encstr_A3750609A5E61883" );

    if ( var_2 == "_encstr_945408D1B4B556B7BA3A" && isdefined( self.markedbyboomperk[var_1] ) )
        self.markedbyboomperk[var_1] = undefined;
    else
    {
        self waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
        self.markedbyboomperk = undefined;
    }
}

unsetboom()
{
    self notify( "_encstr_ABD60A38724A5313ABC71801" );
}

customjuiced( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A1D70BDE071B53794F208AE3F8" );
    self endon( "_encstr_978D14831040BD93600F177759104ACFD0DB3C8EE910" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self.isjuiced = 1;
    self.movespeedscaler = 1.1;
    scripts\mp\weapons::updatemovespeedscale();
    scripts\mp\utility\perk::giveperk( "_encstr_B9FE151A83CF7E72792BC5D85FBB632B045BEBE0AF06AA" );
    scripts\mp\utility\perk::giveperk( "_encstr_9E29141ED83FC163EE7A60CB218203D88F7B2D16218F" );
    scripts\mp\utility\perk::giveperk( "_encstr_976D1292779B62317163BB9781EBE48A71029F4A" );
    scripts\mp\utility\perk::giveperk( "_encstr_A14F1612C3E0AB520F61634F1FA49AF3D088CFDF38287EBA" );
    scripts\mp\utility\perk::giveperk( "_encstr_9F891DC3FB723B306010230B10A6F047D1239BE654E3A0BE9DF798061FE263" );
    scripts\mp\utility\perk::giveperk( "_encstr_B1AC14370756C62D581B1D97FA5CD5A5366DB9EEB007" );
    thread unsetcustomjuicedondeath();
    thread unsetcustomjuicedonride();
    thread unsetcustomjuicedonmatchend();
    var_1 = var_0 * 1000 + gettime();

    if ( !isai( self ) )
    {

    }

    wait( var_0 );
    unsetcustomjuiced();
}

unsetcustomjuiced( var_0 )
{
    if ( !isdefined( var_0 ) )
    {
        self.movespeedscaler = 1;

        if ( scripts\mp\utility\perk::_hasperk( "_encstr_94C9162F219AE69F03F8E0EA38AA91906BEB586BB0AF930B" ) )
            self.movespeedscaler = scripts\mp\utility\perk::lightweightscalar();

        scripts\mp\weapons::updatemovespeedscale();
    }

    scripts\mp\utility\perk::removeperk( "_encstr_B9FE151A83CF7E72792BC5D85FBB632B045BEBE0AF06AA" );
    scripts\mp\utility\perk::removeperk( "_encstr_9E29141ED83FC163EE7A60CB218203D88F7B2D16218F" );
    scripts\mp\utility\perk::removeperk( "_encstr_976D1292779B62317163BB9781EBE48A71029F4A" );
    scripts\mp\utility\perk::removeperk( "_encstr_A14F1612C3E0AB520F61634F1FA49AF3D088CFDF38287EBA" );
    scripts\mp\utility\perk::removeperk( "_encstr_9F891DC3FB723B306010230B10A6F047D1239BE654E3A0BE9DF798061FE263" );
    scripts\mp\utility\perk::removeperk( "_encstr_B1AC14370756C62D581B1D97FA5CD5A5366DB9EEB007" );
    self.isjuiced = undefined;

    if ( !isai( self ) )
    {

    }

    self notify( "_encstr_978D14831040BD93600F177759104ACFD0DB3C8EE910" );
}

unsetcustomjuicedonride()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_978D14831040BD93600F177759104ACFD0DB3C8EE910" );

    for (;;)
    {
        waitframe();

        if ( scripts\mp\utility\player::isusingremote() )
        {
            thread unsetcustomjuiced();
            break;
        }
    }
}

unsetcustomjuicedondeath()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_978D14831040BD93600F177759104ACFD0DB3C8EE910" );
    scripts\engine\utility::_id_143A5( "_encstr_A3750609A5E61883", "_encstr_A1D70BDE071B53794F208AE3F8" );
    thread unsetcustomjuiced( 1 );
}

unsetcustomjuicedonmatchend()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_978D14831040BD93600F177759104ACFD0DB3C8EE910" );
    level scripts\engine\utility::_id_143A5( "_encstr_B65713AE4DC34D01D717085017067895AAF22BBDE7", "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    thread unsetcustomjuiced();
}

settriggerhappy()
{

}

settriggerhappyinternal()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_9B261275C8936FEB597872AAE803229389AFF801" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = self.lastdroppableweaponobj;
    var_1 = self getweaponammostock( var_0 );
    var_2 = self getweaponammoclip( var_0 );
    self givestartammo( var_0 );
    var_3 = self getweaponammoclip( var_0 );
    var_4 = var_3 - var_2;
    var_5 = var_1 - var_4;

    if ( var_4 > var_1 )
    {
        self setweaponammoclip( var_0, var_2 + var_1 );
        var_5 = 0;
    }

    self setweaponammostock( var_0, var_5 );
    self playlocalsound( "_encstr_AFC80F0BDA5BF6FA8D93C247ACFAD56E2B" );
    self setclientomnvar( "_encstr_A3B7110DC39EA3F2BB582A02D8FF2CAF133779", 1 );
    wait 0.2;
    self setclientomnvar( "_encstr_A3B7110DC39EA3F2BB582A02D8FF2CAF133779", 0 );
}

unsettriggerhappy()
{
    self setclientomnvar( "_encstr_A3B7110DC39EA3F2BB582A02D8FF2CAF133779", 0 );
    self notify( "_encstr_9B261275C8936FEB597872AAE803229389AFF801" );
}

setincog()
{

}

unsetincog()
{

}

setblindeye()
{

}

unsetblindeye()
{

}

setquickswap()
{

}

unsetquickswap()
{

}

setextraammo()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_8F4D10D537CD56A3EBAC0FE8392C2CD6ADDE" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( self.gettingloadout )
        self waittill( "_encstr_B8030CCE4B3B2B627B8523DEBAD1" );

    var_0 = scripts\mp\utility\weapon::getvalidextraammoweapons();

    foreach ( var_2 in var_0 )
    {
        if ( isdefined( var_2 ) && !nullweapon( var_2 ) && var_2 hasattachment( "_encstr_A45E080BB1D0C071774A", 1 ) && !istrue( var_2.first_equipped ) )
        {
            self givemaxammo( var_2 );
            var_2.first_equipped = 1;
        }
    }
}

unsetextraammo()
{
    self notify( "_encstr_8F4D10D537CD56A3EBAC0FE8392C2CD6ADDE" );
}

setextraequipment()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_ABE91553D66A9895D7F2921BAB07C5E00339A1EB459558" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( self.gettingloadout )
        self waittill( "_encstr_B8030CCE4B3B2B627B8523DEBAD1" );

    var_0 = self.loadoutperkoffhand;

    if ( isdefined( var_0 ) && var_0 != "_encstr_B99C0FF382C5B813BA035133B732658894" )
    {
        if ( var_0 != "_encstr_81901C807B993F72F1900571D10C486E4DEB4829113B4E6A38BA74F94702" && var_0 != "_encstr_802311433F5F07C5494F1BE12DA911CD999558" && var_0 != "_encstr_A226180E1B852F2BC9AF474E7B83A15ED7CD2FCDE8AC6BD7B5E0" )
            self setweaponammoclip( var_0, 2 );
    }
}

unsetextraequipment()
{
    self notify( "_encstr_ABE91553D66A9895D7F2921BAB07C5E00339A1EB459558" );
}

setextradeadly()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_8C4012BA37DC951DD7590F4727B08CCAB0198DF2" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( self.gettingloadout )
        self waittill( "_encstr_B8030CCE4B3B2B627B8523DEBAD1" );

    var_0 = scripts\mp\equipment::getcurrentequipment( "_encstr_987F080E394BDAC2E45E" );

    if ( isdefined( var_0 ) && var_0 != "_encstr_AABA05236DC831" )
        scripts\mp\equipment::incrementequipmentammo( var_0 );
}

unsetextradeadly()
{
    self notify( "_encstr_8C4012BA37DC951DD7590F4727B08CCAB0198DF2" );
}

setbattleslide()
{

}

unsetbattleslide()
{

}

setoverkill()
{

}

unsetoverkill()
{

}

setactivereload()
{

}

unsetactivereload()
{

}

setlifepack()
{
    if ( !isdefined( level._effect["_encstr_B7FD113696CC2B7D38C21BADFA0EB48DB65D1C"] ) )
        level._effect["_encstr_B7FD113696CC2B7D38C21BADFA0EB48DB65D1C"] = undefined;

    thread watchlifepackkills();
}

watchlifepackkills()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self notify( "_encstr_89800F23CA5F7523E8CAF1320D70A7B212" );
    self endon( "_encstr_89800F23CA5F7523E8CAF1320D70A7B212" );

    for (;;)
    {
        self waittill( "_encstr_8B220BCF9A8BAFAB5920581491", var_0, var_1, var_2 );
        var_3 = self.origin;
        var_4 = 20;
        var_5 = 20;
        var_6 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self.origin + ( 0, 0, 10 ) );
        var_6 setmodel( "_encstr_9C1011EE950B0EBD737D8DB499B2F583C28DB5" );
        var_6.owner = self;
        var_6.team = self.team;
        var_6 hidefromplayer( self );
        var_7 = spawn( "_encstr_9E6B0FE8274B9DD92BC9D7278591B4D5E6", self.origin, 0, var_4, var_5 );
        var_7 thread watchlifepackuse( var_6 );
        var_7 thread watchlifepackdeath( var_6 );
        var_6 thread hoverlifepack();
        var_6 rotateyaw( 1000, 30, 0.2, 0.2 );
        var_6 thread watchlifepacklifetime( 10, var_7 );
        var_6 thread watchlifepackowner();

        foreach ( var_9 in level.players )
            var_6 setlifepackvisualforplayer( var_9 );
    }
}

activatelifepackboost( var_0, var_1, var_2 )
{
    self.lifeboostactive = 1;

    if ( isdefined( var_1 ) && var_1 > 0 )
        thread watchlifepackboostlifetime( var_1 );

    if ( isdefined( var_2 ) && var_2 )
        thread watchlifepackuserdeath();

    scripts\mp\utility\perk::giveperk( "_encstr_8934169BD3FDB744B1FBA080DF33EF7058952C215BA931F3" );
    self setclientomnvar( "_encstr_B9E90DABD2BEB1963395BEC65A73DA", 1 );
    self notify( "_encstr_B6AD18F3566E2019BF62F6989A9B4511C2B10767FF167BD09F7B" );
    self.lifepackowner = var_0;
    thread scripts\mp\gamescore::trackbuffassistfortime( var_0, self, "_encstr_AF1D0FB16D9B20D7C1DA681862228B39CF", var_1 );
}

watchlifepackboostlifetime( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    wait( var_0 );

    if ( isdefined( self.lifeboostactive ) )
        disablelifepackboost();
}

disablelifepackboost()
{
    if ( isdefined( self ) && isdefined( self.lifeboostactive ) )
    {
        self.lifeboostactive = undefined;
        self setclientomnvar( "_encstr_B9E90DABD2BEB1963395BEC65A73DA", 0 );
        self notify( "_encstr_A22A195388ABA9EA0965C731D92B6275F6A8BFC75B86E2627706CB" );
        scripts\mp\utility\perk::removeperk( "_encstr_8934169BD3FDB744B1FBA080DF33EF7058952C215BA931F3" );
        scripts\mp\gamescore::untrackbuffassist( self.lifepackowner, self, "_encstr_AF1D0FB16D9B20D7C1DA681862228B39CF" );
        self.lifepackowner = undefined;
    }
}

setlifepackvisualforplayer( var_0 )
{
    if ( level.teambased && var_0.team == self.team && var_0 != self.owner )
    {
        setlifepackoutlinestate( var_0 );
        self showtoplayer( var_0 );
        thread watchlifepackoutlinestate( var_0 );
    }
    else
        self hidefromplayer( var_0 );
}

setlifepackoutlinestate( var_0 )
{
    if ( isdefined( var_0.lifeboostactive ) )
    {
        if ( isdefined( var_0.lifepackoutlines ) && var_0.lifepackoutlines.size > 0 )
        {
            foreach ( var_2 in var_0.lifepackoutlines )
            {
                if ( self == var_2.pack )
                {
                    scripts\mp\utility\outline::outlinedisable( var_2.id, var_2.pack );
                    var_0.lifepackoutlines = scripts\engine\utility::array_remove( var_0.lifepackoutlines, var_2 );
                    var_2 = undefined;
                }
            }
        }
    }
    else
    {
        if ( !isdefined( var_0.lifepackoutlines ) )
            var_0.lifepackoutlines = [];

        var_4 = spawnstruct();
        var_4.id = scripts\mp\utility\outline::outlineenableforplayer( self, var_0, "_encstr_AD9D133F37A3D1A09EAF16895768801BC9C7ABABC3", "_encstr_BE8F0A2BB8D596386BB273A3" );
        var_4.pack = self;
        var_0.lifepackoutlines = scripts\engine\utility::array_add_safe( var_0.lifepackoutlines, var_4 );
    }
}

watchlifepackoutlinestate( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        var_0 scripts\engine\utility::_id_143A5( "_encstr_B6AD18F3566E2019BF62F6989A9B4511C2B10767FF167BD09F7B", "_encstr_A22A195388ABA9EA0965C731D92B6275F6A8BFC75B86E2627706CB" );
        setlifepackoutlinestate( var_0 );
    }
}

hoverlifepack()
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_93FB161C0D85E6CAEBC95637BDEA9C6C56AF0E5AB1ADD50E" );
    var_0 = self.origin;

    for (;;)
    {
        self moveto( var_0 + ( 0, 0, 15 ), 1, 0.2, 0.2 );
        wait 1;
        self moveto( var_0, 1, 0.2, 0.2 );
        wait 1;
    }
}

watchlifepackuse( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        self waittill( "_encstr_8B5C081B58E0B7A213E6", var_1 );

        if ( !isplayer( var_1 ) )
            continue;

        if ( var_1.team != var_0.team )
            continue;

        if ( isdefined( var_1.lifeboostactive ) )
            continue;

        if ( var_1 == var_0.owner )
            continue;

        var_1 activatelifepackboost( var_0.owner, 5, 1 );
        var_1 playlocalsound( "_encstr_BD1516E6D82C6795373BB2C9D70E586CD6BE07A5B1D6AB38" );
        var_2 = spawnfx( scripts\engine\utility::getfx( "_encstr_B7FD113696CC2B7D38C21BADFA0EB48DB65D1C" ), self.origin );
        triggerfx( var_2 );
        var_2 thread scripts\mp\utility\script::delayentdelete( 2 );

        foreach ( var_4 in level.players )
        {
            if ( var_4.team == var_1.team )
                continue;

            var_2 hidefromplayer( var_4 );
        }

        var_0 delete();
    }
}

watchlifepackdeath( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    var_0 waittill( "_encstr_A3750609A5E61883" );

    if ( isdefined( self ) )
        self delete();
}

watchlifepacklifetime( var_0, var_1 )
{
    self endon( "_encstr_A3750609A5E61883" );
    wait( var_0 );
    var_1 delete();
    self delete();
}

watchlifepackowner()
{
    self endon( "_encstr_A3750609A5E61883" );
    self.owner waittill( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( isdefined( self ) )
        self delete();
}

watchlifepackuserdeath()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self waittill( "_encstr_A3750609A5E61883" );
    disablelifepackboost();
}

unsetlifepack()
{
    disablelifepackboost();
    self notify( "_encstr_89800F23CA5F7523E8CAF1320D70A7B212" );
}

settoughenup()
{
    if ( !isdefined( level._effect["_encstr_A4B7128C275027A3B5C0E14B2B80F79EC0AB15EE"] ) )
        level._effect["_encstr_A4B7128C275027A3B5C0E14B2B80F79EC0AB15EE"] = loadfx( "_encstr_A9C629BD365032F39F4FD0C6038FB7A8AF9B312F97FD10E8B33232CE4B4F6D8084E5BDFF55E2210E1F4B88" );

    thread watchtoughenup();
}

watchtoughenup()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AF1D0FBD66C7A1F903EA8810B26795FFA3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = 0;
    var_1 = 15;
    var_2 = 7.5;
    var_3 = 4;
    var_4 = 5;
    var_5 = 2;
    var_6 = [];
    var_6 = scripts\engine\utility::array_add_safe( var_6, ( 35, 0, 10 ) );
    var_6 = scripts\engine\utility::array_add_safe( var_6, ( 0, 35, 10 ) );
    var_6 = scripts\engine\utility::array_add_safe( var_6, ( -35, 0, 10 ) );
    var_6 = scripts\engine\utility::array_add_safe( var_6, ( 0, -35, 10 ) );
    self waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );

    for (;;)
    {
        self waittill( "_encstr_8B220BCF9A8BAFAB5920581491", var_7, var_8, var_9 );

        if ( !isdefined( self.toughenedup ) )
        {
            self.toughenedup = 1;
            var_10 = spawnfxforclient( scripts\engine\utility::getfx( "_encstr_A4B7128C275027A3B5C0E14B2B80F79EC0AB15EE" ), self geteye(), self );
            triggerfx( var_10 );
            thread attachtoughenuparmor( "_encstr_82670B3327A462E2A088272EE1", level.bulletstormshield["_encstr_9CE1083BA1BEC34C60FD"].friendlymodel );
            thread attachtoughenuparmor( "_encstr_B3E815E88576AF4EB2CCC6CA8D8EBD93F516E4DAAFB195", level.bulletstormshield["_encstr_9CE1083BA1BEC34C60FD"].friendlymodel );
            thread attachtoughenuparmor( "_encstr_97E815E8B076D73995CC1BAC8DE8ED9C7D0B4ED6F59C5A", level.bulletstormshield["_encstr_9CE1083BA1BEC34C60FD"].friendlymodel );
            thread attachtoughenuparmor( "_encstr_B23B0D92F89BF1F805A258730F796E", level.bulletstormshield["_encstr_9CE1083BA1BEC34C60FD"].friendlymodel );
            thread attachtoughenuparmor( "_encstr_B29410E0C727D6DFB27495290FF9C5D98B77", level.bulletstormshield["_encstr_9CE1083BA1BEC34C60FD"].friendlymodel );
            thread attachtoughenuparmor( "_encstr_A6DD0992781498B7F76DD7", level.bulletstormshield["_encstr_9CE1083BA1BEC34C60FD"].friendlymodel );
            thread attachtoughenuparmor( "_encstr_A6DD0992781498B7F7EAD4", level.bulletstormshield["_encstr_9CE1083BA1BEC34C60FD"].friendlymodel );

            if ( var_5 == 1 )
            {
                scripts\mp\utility\damage::sethealthshield( var_1 );
                thread watchtoughenuplifetime( var_4 );
            }
            else
            {
                scripts\mp\lightarmor::setlightarmorvalue( self, 100 );
                thread watchtoughenuplightarmorend();
            }

            var_10 thread watchtoughenupplayerend( self );
            continue;
        }

        if ( var_5 == 1 )
        {
            self notify( "_encstr_AF6F113B7B93AFD3C1503F2D77AEF377C73843" );
            thread watchtoughenuplifetime( var_4 );
        }
    }
}

attachtoughenuparmor( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = self gettagorigin( var_0 );
    var_6 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_5 );
    var_6 setmodel( var_1 );
    var_7 = ( 0, 0, 0 );
    var_8 = ( 0, 0, 0 );

    if ( isdefined( var_2 ) )
        var_7 = var_2;

    if ( isdefined( var_3 ) )
        var_8 = var_3;

    var_6.angles = self.angles;
    var_6 linkto( self, var_0, var_7, var_8 );
    var_6 thread watchtoughenupplayerend( self );
    var_6 thread watchtoughenupgameend();
    return var_6;
}

settoughenupmodel( var_0, var_1, var_2, var_3 )
{
    var_4 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self.origin + ( 0, 0, 50 ) );
    var_4.team = self.owner.team;

    if ( var_3 == "_encstr_B9FC095F8BCCFF02D92B43" )
        var_4 setmodel( level.bulletstormshield["_encstr_9CE1083BA1BEC34C60FD"].friendlymodel );
    else
        var_4 setmodel( level.bulletstormshield["_encstr_9CE1083BA1BEC34C60FD"].enemymodel );

    var_4 linkto( self, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", var_1, ( 0, 90 * ( var_2 + 1 ), 0 ) );
    var_4 hide();
    var_4 thread watchtoughenupplayerend( self.owner );
    var_4 thread watchtoughenupgameend();
    var_4 thread settoughenupvisiblestate( var_3, self.owner );
}

watchtoughenuplightarmorend()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self waittill( "_encstr_8CBD135AE340F5EB85D682DAB96BBBA18875CDDF25" );
}

watchtoughenupplayerend( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    var_0 scripts\engine\utility::_id_143A5( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3", "_encstr_81860FD1DB57B3D0CACD7DD538D72BB9C8" );
    var_0.toughenedup = undefined;

    if ( var_0 scripts\mp\lightarmor::haslightarmor( var_0 ) )
        var_0 unsetlightarmor();

    if ( isdefined( self ) )
        self delete();
}

watchtoughenupgameend()
{
    self endon( "_encstr_A3750609A5E61883" );
    level waittill( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( self ) )
        self delete();
}

watchtoughenuplifetime( var_0 )
{
    self endon( "_encstr_A3750609A5E61883" );
    self endon( "_encstr_AF6F113B7B93AFD3C1503F2D77AEF377C73843" );

    while ( var_0 > 0 )
    {
        var_0 = var_0 - 1;
        wait 1;
    }

    self notify( "_encstr_81860FD1DB57B3D0CACD7DD538D72BB9C8" );
}

settoughenupvisiblestate( var_0, var_1 )
{
    foreach ( var_3 in level.players )
    {
        if ( !isdefined( var_3 ) )
            continue;

        if ( var_3 == var_1 )
            continue;

        if ( canshowtoughenupshield( var_3, var_0 ) )
            self showtoplayer( var_3 );

        thread watchtoughenupplayerbegin( var_3, var_0 );
    }
}

watchtoughenupplayerbegin( var_0, var_1 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        var_0 waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
        self hidefromplayer( var_0 );

        if ( canshowtoughenupshield( var_0, var_1 ) )
            self showtoplayer( var_0 );
    }
}

canshowtoughenupshield( var_0, var_1 )
{
    var_2 = 0;

    if ( var_1 == "_encstr_B9FC095F8BCCFF02D92B43" && var_0.team == self.team || var_1 == "_encstr_80BF06CA78A2226B" && var_0.team != self.team )
        var_2 = 1;

    return var_2;
}

unsettoughenup()
{
    scripts\mp\utility\damage::clearhealthshield();
    unsetlightarmor();
    self notify( "_encstr_AF1D0FBD66C7A1F903EA8810B26795FFA3" );
}

setscoutping()
{
    thread updatescoutping();
}

updatescoutping()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A6190F5B0B830518931E207BC3B8B8C87A" );
    var_0 = 50;
    var_1 = 1200;
    var_2 = undefined;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_B45B139B0B40B6635793415A39A93FAD48950C1549" ) )
        var_2 = level [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_B45B139B0B40B6635793415A39A93FAD48950C1549" ) ]]();

    for (;;)
    {
        var_3 = var_0;
        var_4 = var_1;

        if ( isdefined( self.scoutpingradius ) )
            var_3 = self.scoutpingradius;

        if ( isdefined( self.scoutsweeptime ) )
            var_4 = self.scoutsweeptime;

        var_3 = int( var_3 );
        var_4 = int( var_4 );

        if ( var_3 != var_0 )
        {
            if ( istrue( var_2 ) && getdvarint( "_encstr_AF71234B609DA1F7E15C0136FEE9ABF9C708F2A3406FA20F58CC37238FB387FF77D06AAA80", 0 ) )
            {
                var_5 = level.squaddata[self.team][self.squadindex].players;

                foreach ( var_7 in var_5 )
                    triggerportableradarping( self.origin, self, var_3, var_4 );
            }
            else
                triggerportableradarpingteam( self.origin, self.team, var_3, var_4 );
        }

        wait( var_1 / 1200 );
    }
}

updatescoutpingvalues( var_0 )
{
    var_1 = 0;
    var_2 = 150;
    var_3 = 3000;

    if ( isdefined( self.scoutpingmod ) )
        var_1 = self.scoutpingmod;

    if ( isdefined( self.scoutpingpreviousstage ) )
    {
        if ( var_0 > self.scoutpingpreviousstage )
        {
            var_4 = var_0 - self.scoutpingpreviousstage;
            var_1 = var_1 + var_4 / 10;
        }
        else if ( var_0 < self.scoutpingpreviousstage )
        {
            var_4 = self.scoutpingpreviousstage - var_0;
            var_1 = var_1 - var_4 / 10;
        }
    }

    if ( isdefined( self.scoutpingmod ) )
    {
        if ( var_1 > self.scoutpingmod || var_1 < self.scoutpingmod )
        {
            var_2 = var_2 + var_2 * var_1 * 1.5;
            var_3 = var_3 - var_3 * var_1 / 1.5;
            self.scoutpingradius = var_2;
            self.scoutsweeptime = var_3;
        }
    }

    if ( var_0 == 0 )
    {
        self.scoutpingradius = undefined;
        self.scoutsweeptime = undefined;
    }

    self.scoutpingmod = var_1;
    self.scoutpingpreviousstage = var_0;
}

unsetscoutping()
{
    self.scoutpingradius = undefined;
    self.scoutsweeptime = undefined;
    self.scoutpingmod = undefined;
    self.scoutpingpreviousstage = undefined;
    self notify( "_encstr_A6190F5B0B830518931E207BC3B8B8C87A" );
}

setphasespeed()
{
    thread watchphasespeedshift();
    thread watchphasespeedendshift();
}

watchphasespeedshift()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    for (;;)
    {
        self waittill( "_encstr_9D8F121C34C2CDAC7DDC1AA566A37DCDE816E41D" );
        self.phasespeedmod = 0.2;
        scripts\mp\weapons::updatemovespeedscale();
    }
}

watchphasespeedendshift()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    for (;;)
    {
        self waittill( "_encstr_9847161C0DC26E2BBE3786D2998EF5C67BAD0E63B2A39523" );
        self.phasespeedmod = undefined;
        scripts\mp\weapons::updatemovespeedscale();
    }
}

unsetphasespeed()
{
    self.phasespeedmod = undefined;
}

setdodge()
{
    self allowdodge( 1 );
}

unsetdodge()
{
    self allowdodge( 0 );
}

setextradodge()
{
    self energy_setmax( 1, 100 );
    self energy_setenergy( 1, 100 );
}

unsetextradodge()
{
    self energy_setmax( 1, 50 );
    self energy_setenergy( 1, 50 );
}

_id_133AF( var_0 )
{
    if ( !scripts\mp\utility\perk::_hasperk( "_encstr_937816A2CBAA37DA51F01B196F2F60182D620757F7DA5FB1" ) )
        return 0;

    if ( !scripts\cp_mp\utility\player_utility::_isalive() )
        return 0;

    if ( !isdefined( var_0 ) )
        return 0;

    if ( !var_0 scripts\cp_mp\utility\player_utility::_isalive() )
        return 0;

    if ( var_0.team == self.team )
        return 0;

    if ( distancesquared( var_0.origin, self.origin ) > 16000000 )
        return 0;

    if ( var_0 scripts\mp\utility\perk::_hasperk( "_encstr_B28B1D9B1C598D2D5836E82FF5DC5AF0D10DF59B5973DCB2FA96ADB657CD59" ) )
        return 0;

    var_1 = var_0 scripts\cp_mp\utility\player_utility::getvehicle();

    if ( isdefined( var_1 ) && isdefined( var_1.vehiclename ) )
    {
        var_2 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_occupantisvehicledriver( var_0 );

        if ( var_2 )
        {
            if ( var_1.vehiclename != "_encstr_A6390B63B4CEA1D17D1D16E6AD" && var_1.vehiclename != "_encstr_AB510CB03836AF93ABCD6ED21673" )
                return 0;
        }
        else if ( var_1.vehiclename == "_encstr_AB510CB03836AF93ABCD6ED21673" )
            return 0;
    }

    if ( var_0 scripts\mp\utility\player::isusingremote() )
    {
        var_3 = var_0 scripts\mp\utility\player::getremotename();

        if ( var_3 == "_encstr_ABFD089D57CD370DD21C" || var_3 == "_encstr_95B612AB8041DE4B9645020768F937A2FB38E2E2" || var_3 == "_encstr_AF330F47C0F793D23B32CF4A6D0E7592DA" || var_3 == "_encstr_B87010AA3BE80F83CFA7075A6D614F65EDBB" || var_3 == "_encstr_A2950E1A90EF5ED770CDAF8CE63873E7" )
            return 0;
    }

    return 1;
}

_id_133AD( var_0, var_1, var_2, var_3 )
{
    var_4 = var_1 - var_2;
    var_5 = vectordot( var_4, var_3 );

    if ( var_5 <= 0 )
        return 0;

    var_6 = length( var_4 );
    var_7 = 12;
    var_7 = var_7 + -0.15 * sqrt( var_6 );
    var_8 = scripts\engine\math::keypad_increase_failnum( var_7 );
    var_9 = 1 - 0.5 * var_8 * var_8;

    if ( var_5 < var_9 * var_6 )
        return 0;

    return 1;
}

_id_133AE( var_0, var_1, var_2 )
{
    var_3 = var_2 - var_1;
    var_4 = vectordot( var_0, vectornormalize( var_3 ) );

    if ( var_4 < 0.382683 )
        return 1;

    return 0;
}

sixthsense_think_internal()
{
    var_0 = scripts\engine\trace::create_default_contents( 1 );
    var_1 = 0;
    var_2 = getdvarint( "_encstr_947C1CF721D67077672B6C2858AB0806EBEF57EB1357195DE227E8E675FD" ) == 1;
    var_3 = 0;
    var_4 = undefined;
    var_5 = undefined;
    var_6 = getsystemtimeinmicroseconds();

    foreach ( var_28, var_8 in level.sixth_sense_players )
    {
        if ( !isdefined( var_8 ) )
        {
            level.sixth_sense_players[var_28] = undefined;
            break;
        }

        var_9 = 0;

        if ( var_2 && !isbot( var_8 ) )
        {
            if ( !var_8 scripts\mp\utility\perk::_hasperk( "_encstr_937816A2CBAA37DA51F01B196F2F60182D620757F7DA5FB1" ) )
                continue;

            if ( !var_8 scripts\cp_mp\utility\player_utility::_isalive() )
                continue;

            var_10 = var_8 scripts\mp\utility\player::getstancecenter();
            var_11 = var_8 getplayerssightingme();

            foreach ( var_13 in var_11 )
            {
                if ( var_3 >= 25 )
                {
                    var_3 = 0;
                    waitframe();
                }

                if ( !isdefined( var_8 ) )
                {
                    level.sixth_sense_players[var_28] = undefined;
                    break;
                }

                if ( !var_8 _id_133AF( var_13 ) )
                    continue;

                var_3++;
                var_14 = var_13 getvieworigin();
                var_15 = anglestoforward( var_13 getplayerangles() );

                if ( !var_8 _id_133AD( var_13, var_10, var_14, var_15 ) )
                    continue;

                var_9 = var_9 | var_8 roof_rpg_covers( var_13 );
            }
        }
        else
        {
            var_10 = var_8 gettagorigin( "_encstr_82890D35F5B90EA5CD95B1DEEEAC93" );
            var_17 = var_8 geteye();
            var_18 = anglestoforward( var_8 getplayerangles() );

            foreach ( var_13 in level.players )
            {
                if ( var_3 >= 25 )
                {
                    var_3 = 0;
                    waitframe();
                }

                if ( !isdefined( var_8 ) )
                {
                    level.sixth_sense_players[var_28] = undefined;
                    break;
                }

                if ( !var_8 _id_133AF( var_13 ) )
                    continue;

                var_3++;
                var_14 = var_13 getvieworigin();
                var_15 = anglestoforward( var_13 getplayerangles() );

                if ( !var_8 _id_133AD( var_13, var_10, var_14, var_15 ) )
                    continue;

                if ( _id_133AE( var_18, var_10, var_14 ) )
                {
                    var_3 = var_3 + 2;
                    var_20 = [ var_8 ];
                    var_21 = var_13 scripts\cp_mp\utility\player_utility::getvehicle();

                    if ( isdefined( var_21 ) )
                    {
                        var_22 = getchildoutlineents( var_21 );

                        foreach ( var_24 in var_22 )
                            var_20[var_20.size] = var_24;
                    }

                    var_26 = var_13.currentturret;

                    if ( isdefined( var_26 ) )
                        var_20[var_20.size] = var_26;

                    if ( scripts\engine\trace::ray_trace_detail_passed( var_14, var_17, var_20, var_0 ) )
                    {
                        var_9 = 255;
                        break;
                    }
                }
            }
        }

        if ( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::tutorial_showtext( "_encstr_BA6010374BF0D1436ACAB9B9CA2A34B437B6" ) )
            var_9 = var_9 | _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::_id_12E05( "_encstr_BA6010374BF0D1436ACAB9B9CA2A34B437B6", var_8 );

        var_8 updatesixthsensevfx( var_9 );
    }
}

sixthsense_think()
{
    level.sixth_sense_players = [];

    for (;;)
    {
        waitframe();
        sixthsense_think_internal();
    }
}

setsixthsense()
{
    if ( getdvarint( "_encstr_B2F0182B72EBAAE1CA79F9E99032C8E007EA21B0BBFF5630674C", 0 ) == 1 )
        return;

    self.sixthsenselastactivetime = 0;
    self.sixthsensestate = 0;
    updatesixthsensevfx( 0 );
    var_0 = self getentitynumber();
    level.sixth_sense_players[var_0] = self;
}

unsetsixthsense()
{
    thread health_reduction();
}

health_reduction()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self.sixthsenselastactivetime = undefined;
    self.sixthsensestate = undefined;
    self.sixthsensesource = undefined;
    self notify( "_encstr_AB4811C9CAADEDECCAD496F0A3434DCACDE656" );
    var_0 = self getentitynumber();
    level.sixth_sense_players[var_0] = undefined;
    waitframe();
    updatesixthsensevfx( 0 );
}

setenhancedsixthsense()
{

}

unsetenhancedsixthsense()
{

}

updatesixthsensevfx( var_0 )
{
    self setclientomnvar( "_encstr_8B090DA544E9D399779FF9C0438733", var_0 );
}

roof_rpg_covers( var_0 )
{
    var_1 = anglestoforward( self getplayerangles() );
    var_2 = ( var_1[0], var_1[1], var_1[2] );
    var_2 = vectornormalize( var_2 );
    var_3 = var_0.origin - self.origin;
    var_4 = ( var_3[0], var_3[1], var_3[2] );
    var_4 = vectornormalize( var_4 );
    var_5 = vectordot( var_2, var_4 );

    if ( var_5 >= 0.92388 )
        return 2;
    else if ( var_5 >= 0.5 )
        return scripts\engine\utility::ter_op( scripts\mp\utility\script::isleft2d( self.origin, var_2, var_0.origin ), 4, 1 );
    else if ( var_5 >= 0.5 )
        return scripts\engine\utility::ter_op( scripts\mp\utility\script::isleft2d( self.origin, var_2, var_0.origin ), 128, 64 );
    else if ( var_5 >= -0.707107 )
        return scripts\engine\utility::ter_op( scripts\mp\utility\script::isleft2d( self.origin, var_2, var_0.origin ), 32, 8 );
    else
        return 16;
}

markassixthsensesource( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self notify( "_encstr_82821780FA7227DD3753B3336C8347F3DD6348E972CB4DD147" );
    self endon( "_encstr_82821780FA7227DD3753B3336C8347F3DD6348E972CB4DD147" );
    var_1 = var_0 getentitynumber();
    self.sixthsensesource[var_1] = 1;
    var_0 scripts\engine\utility::waittill_any_in_array_or_timeout( [ "_encstr_A3750609A5E61883" ], 10 );
    self.sixthsensesource[var_1] = 0;
}

setcamoelite()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A1171039ACB6DED9B2059C6C34CA8ECB072B" );

    for (;;)
    {
        var_0 = 0;
        var_1 = level.players;
        var_2 = 0;

        foreach ( var_4 in var_1 )
        {
            if ( !isdefined( var_4 ) || !var_4 scripts\cp_mp\utility\player_utility::_isalive() )
                continue;

            if ( var_4.team == self.team )
                continue;

            if ( var_4 scripts\mp\utility\perk::_hasperk( "_encstr_956B14DB9F092FC45BF0CB1381BB3D9B60895D553851" ) )
                continue;

            var_5 = self.origin - var_4.origin;
            var_6 = anglestoforward( var_4 getplayerangles() );
            var_7 = vectordot( var_5, var_6 );

            if ( var_7 <= 0 )
                continue;

            var_8 = vectornormalize( var_5 );
            var_9 = vectornormalize( var_6 );
            var_7 = vectordot( var_8, var_9 );

            if ( var_7 < 12 )
                continue;

            var_0++;
            var_10 = var_4 geteye();
            var_11 = self geteye();

            if ( scripts\engine\trace::ray_trace_passed( var_10, var_11, self, scripts\engine\trace::create_default_contents( 1 ) ) )
            {
                var_2 = 1;
                break;
            }

            if ( var_0 >= 10 )
            {
                waitframe();
                var_0 = 0;
            }
        }

        updatecamoeliteoverlay( var_2 );
        waitframe();
    }
}

updatecamoeliteoverlay( var_0 )
{

}

unsetcamoelite()
{

}

setcarepackage()
{
    thread scripts\mp\killstreaks\killstreaks::givekillstreak( "_encstr_B6B5108F298BC9AD9553A1685BAA43232BDC", 0, 0, self );
}

unsetcarepackage()
{

}

setuav()
{
    thread scripts\mp\killstreaks\killstreaks::givekillstreak( "_encstr_B61904AEB067", 0, 0, self );
}

unsetuav()
{

}

setjuiced( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A1D70BDE071B53794F208AE3F8" );
    self endon( "_encstr_95C10D9DD08B77C367809B52A07BBF" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self.isjuiced = 1;
    self.movespeedscaler = 1.25;
    scripts\mp\weapons::updatemovespeedscale();
    scripts\mp\utility\perk::giveperk( "_encstr_B9FE151A83CF7E72792BC5D85FBB632B045BEBE0AF06AA" );
    scripts\mp\utility\perk::giveperk( "_encstr_9E29141ED83FC163EE7A60CB218203D88F7B2D16218F" );
    scripts\mp\utility\perk::giveperk( "_encstr_976D1292779B62317163BB9781EBE48A71029F4A" );
    scripts\mp\utility\perk::giveperk( "_encstr_A14F1612C3E0AB520F61634F1FA49AF3D088CFDF38287EBA" );
    scripts\mp\utility\perk::giveperk( "_encstr_9F891DC3FB723B306010230B10A6F047D1239BE654E3A0BE9DF798061FE263" );
    scripts\mp\utility\perk::giveperk( "_encstr_B1AC14370756C62D581B1D97FA5CD5A5366DB9EEB007" );
    thread unsetjuicedondeath();
    thread unsetjuicedonride();
    thread unsetjuicedonmatchend();

    if ( !isdefined( var_0 ) )
        var_0 = 10;

    var_1 = var_0 * 1000 + gettime();

    if ( !isai( self ) )
    {

    }

    wait( var_0 );
    unsetjuiced();
}

unsetjuiced( var_0 )
{
    if ( !isdefined( var_0 ) )
    {
        self.movespeedscaler = 1;

        if ( scripts\mp\utility\perk::_hasperk( "_encstr_94C9162F219AE69F03F8E0EA38AA91906BEB586BB0AF930B" ) )
            self.movespeedscaler = scripts\mp\utility\perk::lightweightscalar();

        scripts\mp\weapons::updatemovespeedscale();
    }

    scripts\mp\utility\perk::removeperk( "_encstr_B9FE151A83CF7E72792BC5D85FBB632B045BEBE0AF06AA" );
    scripts\mp\utility\perk::removeperk( "_encstr_9E29141ED83FC163EE7A60CB218203D88F7B2D16218F" );
    scripts\mp\utility\perk::removeperk( "_encstr_976D1292779B62317163BB9781EBE48A71029F4A" );
    scripts\mp\utility\perk::removeperk( "_encstr_A14F1612C3E0AB520F61634F1FA49AF3D088CFDF38287EBA" );
    scripts\mp\utility\perk::removeperk( "_encstr_9F891DC3FB723B306010230B10A6F047D1239BE654E3A0BE9DF798061FE263" );
    scripts\mp\utility\perk::removeperk( "_encstr_B1AC14370756C62D581B1D97FA5CD5A5366DB9EEB007" );
    self.isjuiced = undefined;

    if ( !isai( self ) )
    {

    }

    self notify( "_encstr_95C10D9DD08B77C367809B52A07BBF" );
}

unsetjuicedonride()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_95C10D9DD08B77C367809B52A07BBF" );

    for (;;)
    {
        waitframe();

        if ( scripts\mp\utility\player::isusingremote() )
        {
            thread unsetjuiced();
            break;
        }
    }
}

unsetjuicedondeath()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_95C10D9DD08B77C367809B52A07BBF" );
    scripts\engine\utility::_id_143A5( "_encstr_A3750609A5E61883", "_encstr_A1D70BDE071B53794F208AE3F8" );
    thread unsetjuiced( 1 );
}

unsetjuicedonmatchend()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_95C10D9DD08B77C367809B52A07BBF" );
    level scripts\engine\utility::_id_143A5( "_encstr_B65713AE4DC34D01D717085017067895AAF22BBDE7", "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    thread unsetjuiced();
}

hasjuiced()
{
    return isdefined( self.isjuiced );
}

setcombathigh()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AF571157E6DCCA1DAF6CB7AD4C168E34D2B386" );
    level endon( "_encstr_AFAF0901C55BB78F17ED72" );
    self.damageblockedtotal = 0;

    if ( level.splitscreen )
    {
        var_0 = 56;
        var_1 = 21;
    }
    else
    {
        var_0 = 112;
        var_1 = 32;
    }

    if ( isdefined( self.juicedtimer ) )
        self.juicedtimer destroy();

    if ( isdefined( self.juicedicon ) )
        self.juicedicon destroy();

    self.combathighoverlay = newclienthudelem( self );
    self.combathighoverlay.x = 0;
    self.combathighoverlay.y = 0;
    self.combathighoverlay.alignx = "_encstr_B1AD05C65666E8";
    self.combathighoverlay.aligny = "_encstr_B91904EC4718";
    self.combathighoverlay.horzalign = "_encstr_BC940BE9D5F91D47B0ABBD851E";
    self.combathighoverlay.vertalign = "_encstr_BC940BE9D5F91D47B0ABBD851E";
    self.combathighoverlay setshader( "_encstr_B85813B1DB6B982C3A86D2CE86D77B67CA27D8B0CB", 640, 480 );
    self.combathighoverlay.sort = -10;
    self.combathighoverlay.archived = 1;
    self.combathightimer = scripts\mp\hud_util::createtimer( "_encstr_BDB2090D537488A10A93F1", 1.0 );
    self.combathightimer scripts\mp\hud_util::setpoint( "_encstr_B1C4073FFD25110DE3", "_encstr_B1C4073FFD25110DE3", 0, var_0 );
    self.combathightimer settimer( 10.0 );
    self.combathightimer.color = ( 0.8, 0.8, 0 );
    self.combathightimer.archived = 0;
    self.combathightimer.foreground = 1;
    self.combathighicon = scripts\mp\hud_util::createicon( "_encstr_AB941597D8F103F2AB596B2028718AC17898775390A96A", var_1, var_1 );
    self.combathighicon.alpha = 0;
    self.combathighicon scripts\mp\hud_util::setparent( self.combathightimer );
    self.combathighicon scripts\mp\hud_util::setpoint( "_encstr_A94607FEAFB36F77BD", "_encstr_B91904CC0719" );
    self.combathighicon.archived = 1;
    self.combathighicon.sort = 1;
    self.combathighicon.foreground = 1;
    self.combathighoverlay.alpha = 0.0;
    self.combathighoverlay fadeovertime( 1.0 );
    self.combathighicon fadeovertime( 1.0 );
    self.combathighoverlay.alpha = 1.0;
    self.combathighicon.alpha = 0.85;
    thread unsetcombathighondeath();
    thread unsetcombathighonride();
    wait 8;
    self.combathighicon fadeovertime( 2.0 );
    self.combathighicon.alpha = 0.0;
    self.combathighoverlay fadeovertime( 2.0 );
    self.combathighoverlay.alpha = 0.0;
    self.combathightimer fadeovertime( 2.0 );
    self.combathightimer.alpha = 0.0;
    wait 2;
    self.damageblockedtotal = undefined;
    scripts\mp\utility\perk::removeperk( "_encstr_944915F347D1F72CB30823CBA98FE58769A77C90533963" );
}

unsetcombathighondeath()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_AF571157E6DCCA1DAF6CB7AD4C168E34D2B386" );
    self waittill( "_encstr_A3750609A5E61883" );
    thread scripts\mp\utility\perk::removeperk( "_encstr_944915F347D1F72CB30823CBA98FE58769A77C90533963" );
}

unsetcombathighonride()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_AF571157E6DCCA1DAF6CB7AD4C168E34D2B386" );

    for (;;)
    {
        waitframe();

        if ( scripts\mp\utility\player::isusingremote() )
        {
            thread scripts\mp\utility\perk::removeperk( "_encstr_944915F347D1F72CB30823CBA98FE58769A77C90533963" );
            break;
        }
    }
}

unsetcombathigh()
{
    self notify( "_encstr_AF571157E6DCCA1DAF6CB7AD4C168E34D2B386" );
    self.combathighoverlay destroy();
    self.combathighicon destroy();
    self.combathightimer destroy();
}

setlightarmor()
{
    scripts\mp\lightarmor::setlightarmorvalue( self, 150 );
}

unsetlightarmor()
{
    scripts\mp\lightarmor::lightarmor_unset( self );
}

setrevenge()
{
    self notify( "_encstr_89200CCD3AF63849AC9DB2B9D956" );
    waitframe();

    if ( !isdefined( self.lastkilledby ) )
        return;

    if ( level.teambased && self.team == self.lastkilledby.team )
        return;

    var_0 = spawnstruct();
    var_0.showto = self;
    var_0.icon = "_encstr_94A2140778DF8B6887602933F2E78F0DC3F0658282DB";
    var_0.offset = ( 0, 0, 64 );
    var_0.width = 10;
    var_0.height = 10;
    var_0.archived = 0;
    var_0.delay = 1.5;
    var_0.constantsize = 0;
    var_0.pintoscreenedge = 1;
    var_0.fadeoutpinnedicon = 0;
    var_0.is3d = 0;
    self.revengeparams = var_0;
    self.lastkilledby thread scripts\cp_mp\entityheadicons::setheadicon_singleimage( var_0.showto, var_0.icon, var_0.offset, undefined, undefined, undefined, var_0.delay );
    thread watchrevengedeath();
    thread watchrevengekill();
    thread watchrevengedisconnected();
    thread watchrevengevictimdisconnected();
    thread watchstoprevenge();
}

watchrevengedeath()
{
    self endon( "_encstr_89200CCD3AF63849AC9DB2B9D956" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 = self.lastkilledby;

    for (;;)
    {
        var_0 waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
        var_0 thread scripts\cp_mp\entityheadicons::setheadicon_singleimage( self.revengeparams.showto, self.revengeparams.icon, self.revengeparams.offset, undefined, undefined, undefined, self.revengeparams.delay );
    }
}

watchrevengekill()
{
    self endon( "_encstr_89200CCD3AF63849AC9DB2B9D956" );
    self waittill( "_encstr_B1390D9208119B77108725269B3038" );
    self notify( "_encstr_89200CCD3AF63849AC9DB2B9D956" );
}

watchrevengedisconnected()
{
    self endon( "_encstr_89200CCD3AF63849AC9DB2B9D956" );
    self.lastkilledby waittill( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self notify( "_encstr_89200CCD3AF63849AC9DB2B9D956" );
}

watchstoprevenge()
{
    var_0 = self.lastkilledby;
    self waittill( "_encstr_89200CCD3AF63849AC9DB2B9D956" );

    if ( !isdefined( var_0 ) )
        return;

    foreach ( var_3, var_2 in var_0.entityheadicons )
    {
        if ( !isdefined( var_2 ) )
            continue;

        var_2 destroy();
    }
}

watchrevengevictimdisconnected()
{
    var_0 = self.objidfriendly;
    var_1 = self.lastkilledby;
    var_1 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_89200CCD3AF63849AC9DB2B9D956" );
    self waittill( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( !isdefined( var_1 ) )
        return;

    foreach ( var_4, var_3 in var_1.entityheadicons )
    {
        if ( !isdefined( var_3 ) )
            continue;

        var_3 destroy();
    }
}

unsetrevenge()
{
    self notify( "_encstr_89200CCD3AF63849AC9DB2B9D956" );
}

setphaseslide()
{
    self.canphaseslide = 1;
}

unsetphaseslide()
{
    self.canphaseslide = 0;
}

setteleslide()
{
    self.canteleslide = 1;
}

unsetteleslide()
{
    self.canteleslide = 0;
}

setphaseslashrephase()
{
    self.hasrephase = 1;
}

unsetphaseslashrephase()
{
    self.hasrephase = 0;
}

setphasefall()
{

}

unsetphasefall()
{

}

setextenddodge()
{

}

unsetextenddodge()
{

}

setauraquickswap()
{
    scripts\mp\archetypes\archassault::auraquickswap_run();
}

unsetauraquickswap()
{

}

setauraspeed()
{

}

unsetauraspeed()
{

}

setmarktargets()
{
    scripts\mp\perks\perk_mark_targets::marktarget_init();
}

unsetmarktargets()
{

}

setbatterypack()
{

}

unsetbatterypack()
{

}

setcamoclone()
{

}

unsetcamoclone()
{

}

setblockhealthregen()
{
    self.healthregendisabled = 1;
    self notify( "_encstr_AACA134BA89BBB8A5FDEB72F4DD542520198EFE718" );
}

unsetblockhealthregen()
{
    self.healthregendisabled = undefined;
    self notify( "_encstr_AACA134BA89BBB8A5FDEB72F4DD542520198EFE718" );
}

setscorestreakpack()
{

}

unsetscorestreakpack()
{

}

setsuperpack()
{

}

unsetsuperpack()
{

}

setspawncloak()
{

}

unsetspawncloak()
{

}

setdodgedefense()
{
    scripts\cp_mp\utility\damage_utility::adddamagemodifier( "_encstr_B7740D7902635CC0F785151BA66298", 0.5, 0, ::dodgedefenseignorefunc );
}

unsetdodgedefense()
{
    scripts\cp_mp\utility\damage_utility::removedamagemodifier( "_encstr_B7740D7902635CC0F785151BA66298", 0 );
}

dodgedefenseignorefunc( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( !( isdefined( var_2.dodging ) && var_2.dodging && var_2 scripts\mp\utility\perk::_hasperk( "_encstr_AB4E18B93856B14B0BB18EF2F523DB91EC56D7C8599956379B2B" ) ) )
        return 1;

    return 0;
}

setdodgewave()
{

}

unsetdodgewave()
{

}

setgroundpound()
{

}

unsetgroundpound()
{

}

setmeleekill()
{
    self giveweapon( "_encstr_B9491113B7734184179B2BF3931F4628B135A9" );
    self assignweaponmeleeslot( "_encstr_B9491113B7734184179B2BF3931F4628B135A9" );

    if ( self hasweapon( "_encstr_9B660D018F3841EE3A23DBEE3639F0" ) )
    {
        var_0 = self getcurrentweapon();
        scripts\cp_mp\utility\inventory_utility::_takeweapon( "_encstr_9B660D018F3841EE3A23DBEE3639F0" );
        self giveweapon( "_encstr_8114137BDF6B59AC3FA303EBBAE75D18162C8FFB60" );

        if ( var_0.basename == "_encstr_9B660D018F3841EE3A23DBEE3639F0" )
        {
            scripts\cp_mp\utility\inventory_utility::_switchtoweapon( "_encstr_8114137BDF6B59AC3FA303EBBAE75D18162C8FFB60" );

            if ( isdefined( self.gettingloadout ) && self.gettingloadout && isdefined( self.spawnweaponobj ) && self.spawnweaponobj.basename == "_encstr_9B660D018F3841EE3A23DBEE3639F0" )
            {
                self.spawnweaponobj = getcompleteweaponname( "_encstr_8114137BDF6B59AC3FA303EBBAE75D18162C8FFB60" );
                self setspawnweapon( self.spawnweaponobj );
            }
        }
    }
}

unsetmeleekill()
{
    scripts\cp_mp\utility\inventory_utility::_takeweapon( "_encstr_B9491113B7734184179B2BF3931F4628B135A9" );

    if ( self hasweapon( "_encstr_8114137BDF6B59AC3FA303EBBAE75D18162C8FFB60" ) )
    {
        var_0 = self.currentweapon;
        scripts\cp_mp\utility\inventory_utility::_takeweapon( "_encstr_8114137BDF6B59AC3FA303EBBAE75D18162C8FFB60" );
        self giveweapon( "_encstr_9B660D018F3841EE3A23DBEE3639F0" );

        if ( var_0.basename == "_encstr_8114137BDF6B59AC3FA303EBBAE75D18162C8FFB60" )
            scripts\cp_mp\utility\inventory_utility::_switchtoweapon( "_encstr_9B660D018F3841EE3A23DBEE3639F0" );
    }
}

setpowercell()
{

}

unsetpowercell()
{

}

sethardline()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_9811121755FB588767A268A9DA3E95F13BF19005" );
    scripts\mp\killstreaks\killstreaks::updatestreakcosts();
    scripts\mp\killstreaks\killstreaks::checkstreakreward( self.streakpoints, 1 );
    scripts\mp\killstreaks\killstreaks::updatestreakmeterui();
    self.hardlineactive["_encstr_A9F30862E89734A7EBE6"] = 0;
}

watchhardlineassists()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_9811121755FB588767A268A9DA3E95F13BF19005" );
}

unsethardline()
{
    self.hardlineactive = undefined;
    self notify( "_encstr_9811121755FB588767A268A9DA3E95F13BF19005" );
}

setoverclock()
{

}

unsetoverclock()
{

}

setovercharge()
{
    thread _calloutmarkerping_handleluinotify_added::_id_1313D( "_encstr_95E70E685211170347AA6ED39133E9DB", 1 );
}

unsetovercharge()
{
    thread _calloutmarkerping_handleluinotify_added::_id_1313D( "_encstr_95E70E685211170347AA6ED39133E9DB", 0 );
}

setsupersprintenhanced()
{
    thread watchforsupersprintenhancedused();
}

unsetsupersprintenhanced()
{
    self notify( "_encstr_A12B19DDFD53ABD30B87C868F3632BFD9A65D57D553A6B58E3FF70" );
}

watchforsupersprintenhancedused()
{
    self endon( "_encstr_A12B19DDFD53ABD30B87C868F3632BFD9A65D57D553A6B58E3FF70" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 = 0;

    while ( 2000 > var_0 )
    {
        waitframe();

        if ( isdefined( self ) && istrue( self issupersprinting() ) )
        {
            var_1 = level.frameduration;
            var_0 = var_0 + var_1;
        }
    }

    scripts\mp\gamelogic::sethasdonecombat( self, 1 );
}

settracker()
{

}

unsettracker()
{

}

setpersonaltrophy()
{

}

unsetpersonaltrophy()
{

}

setdisruptorpunch()
{

}

unsetdisruptorpunch()
{

}

setequipmentping()
{
    if ( !scripts\mp\utility\game::lpcfeaturegated() )
        level.equipmentpingactive = 1;
}

unsetequipmentping()
{

}

setruggedeqp()
{

}

unsetruggedeqp()
{

}

feedbackruggedeqp( var_0, var_1, var_2, var_3 )
{

}

setmanatarms()
{

}

unsetmanatarms()
{

}

setoutlinekillstreaks()
{
    thread outlinekillstreaks_enablemarksafterprematch();
}

outlinekillstreaks_enablemarksafterprematch()
{
    self endon( "_encstr_AB26173368737DF3E7606BA0C1FA77D802ED9AA7C8F2D5D7FF" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    var_0 = 1000000;

    if ( level.gametype == "_encstr_9507034B25" )
        var_0 = 1000;

    if ( isdefined( self ) )
    {
        self enableentitymarks( "_encstr_B6CE0B0BB00A031B7B88355740", var_0 );
        self enableentitymarks( "_encstr_A9940F6733E629B39840DD623B38C58232", var_0 );
        self.perkoutlinekillstreaksset = 1;
        _calloutmarkerping_predicted_timeout::_id_14130( self );
    }
}

unsetoutlinekillstreaks()
{
    if ( istrue( self.perkoutlinekillstreaksset ) )
    {
        self disableentitymarks( "_encstr_B6CE0B0BB00A031B7B88355740" );
        self disableentitymarks( "_encstr_A9940F6733E629B39840DD623B38C58232" );
        self.perkoutlinekillstreaksset = undefined;
    }

    _calloutmarkerping_predicted_timeout::_id_14130( self );
    self notify( "_encstr_AB26173368737DF3E7606BA0C1FA77D802ED9AA7C8F2D5D7FF" );
}

setengineer()
{
    thread engineer_enablemarksafterprematch();
}

engineer_enablemarksafterprematch()
{
    self endon( "_encstr_BC960EEF48532503C3788F0450BB2AFA" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    var_0 = 1000000;

    if ( level.gametype == "_encstr_9507034B25" )
        var_0 = 1000;

    if ( isdefined( self ) )
    {
        self enableentitymarks( "_encstr_BE8F0A2BB8D596386BB273A3", var_0 );
        self.perkengineerset = 1;
    }
}

unsetengineer()
{
    if ( istrue( self.perkengineerset ) )
    {
        self disableentitymarks( "_encstr_BE8F0A2BB8D596386BB273A3" );
        self.perkengineerset = undefined;
    }

    self notify( "_encstr_BC960EEF48532503C3788F0450BB2AFA" );
}

setnoscopeoutline()
{
    if ( !isdefined( level.noscopeoutlinesetnotifs ) )
    {
        level.noscopeoutlinesetnotifs = [];
        level.noscopeoutlineunsetnotifs = [];
        level thread processnoscopeoutlinesetnotifs();
        level thread processnoscopeoutlineunsetnotifs();
    }

    level.noscopeoutlinesetnotifs[level.noscopeoutlinesetnotifs.size] = self;
}

unsetnoscopeoutline()
{
    level.noscopeoutlineunsetnotifs[level.noscopeoutlineunsetnotifs.size] = self;
}

processnoscopeoutlinesetnotifs()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        if ( level.noscopeoutlinesetnotifs.size > 0 )
        {
            var_0 = 0;

            while ( isdefined( level.noscopeoutlinesetnotifs[var_0] ) )
            {
                level notify( "_encstr_89EC13D36BA3711318DB8A32C3655FB358D17146F3", level.noscopeoutlinesetnotifs[var_0] );
                level.noscopeoutlinesetnotifs[var_0] notify( "_encstr_89EC13D36BA3711318DB8A32C3655FB358D17146F3" );
                var_0++;
                waitframe();
            }

            level.noscopeoutlinesetnotifs = [];
            continue;
        }

        waitframe();
    }
}

processnoscopeoutlineunsetnotifs()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        if ( level.noscopeoutlineunsetnotifs.size > 0 )
        {
            var_0 = 0;

            while ( isdefined( level.noscopeoutlineunsetnotifs[var_0] ) )
            {
                level notify( "_encstr_BEF215BA9BCDB247BE37EDB9D8BDE0CAB75DE8D85AE62B", level.noscopeoutlineunsetnotifs[var_0] );
                level.noscopeoutlineunsetnotifs[var_0] notify( "_encstr_BEF215BA9BCDB247BE37EDB9D8BDE0CAB75DE8D85AE62B" );
                var_0++;
                waitframe();
            }

            level.noscopeoutlineunsetnotifs = [];
            continue;
        }

        waitframe();
    }
}

setcloak()
{

}

unsetcloak()
{

}

setwalllock()
{

}

unsetwalllock()
{

}

setrush()
{

}

unsetrush()
{
    self notify( "_encstr_ABB011EEF80A20FBF7181298062753E83F47C2" );
    self.speedonkillmod = undefined;
}

sethover()
{
    thread runhover();
}

unsethover()
{

}

setmomentum()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_ABF20F6BDE6B2B37D1ABDAD75D9BDC59D1" );
    self.momentumspeedincrease = 0;
    scripts\mp\weapons::updatemovespeedscale();

    for (;;)
    {
        self waittill( "_encstr_B1390D9208119B77108725269B3038" );
        thread _id_11CD0();
    }
}

unsetmomentum()
{
    self notify( "_encstr_ABF20F6BDE6B2B37D1ABDAD75D9BDC59D1" );
    self.momentumspeedincrease = undefined;
    scripts\mp\weapons::updatemovespeedscale();
}

_id_11CD0()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_ABF20F6BDE6B2B37D1ABDAD75D9BDC59D1" );
    self.momentumspeedincrease = self.momentumspeedincrease + 0.04;
    self.momentumspeedincrease = min( self.momentumspeedincrease, 0.12 );
    scripts\mp\weapons::updatemovespeedscale();
    thread _id_11CCF();
}

_id_11CCF()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self notify( "_encstr_8CE015EB5F752B10F34BB8E6236F56C8CB975F49FDDF50" );
    self endon( "_encstr_8CE015EB5F752B10F34BB8E6236F56C8CB975F49FDDF50" );
    wait 5.0;
    self.momentumspeedincrease = 0;
    scripts\mp\weapons::updatemovespeedscale();
}

setscavengereqp()
{

}

unsetscavengereqp()
{

}

setspawnview()
{

}

unsetspawnview()
{
    foreach ( var_1 in level.players )
        var_1 notify( "_encstr_80320EACB923AFE61C16BBCDB35A56DD" );
}

setheadgear( var_0 )
{

}

unsetheadgear()
{

}

setftlslide()
{

}

unsetftlslide()
{

}

setimprovedprone()
{

}

unsetimprovedprone()
{

}

setghost()
{
    thread startgpsjammer();
}

unsetghost()
{
    thread removegpsjammer();
}

setsupportkillstreaks()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self waittill( "_encstr_B74C1959E2D55A38B4A58D366EE8E4B285D6E664D2DCD2B934CA8C" );

    if ( !isdefined( self.streakdata.streaks[1] ) )
    {
        foreach ( var_1 in self.streakdata.streaks["_encstr_B6190C6DB4C68DB9A327CA0B6DDC"] )
            var_1.earned = 0;
    }
}

unsetsupportkillstreaks()
{
    self notify( "_encstr_A14B18E81215376B253B5FEFCB5B17607BE5103ACC720AF8230B" );
}

setoverrideweaponspeed()
{
    self.overrideweaponspeed_speedscale = 0.98;
    scripts\mp\weapons::updatemovespeedscale();
}

unsetoverrideweaponspeed()
{
    self.overrideweaponspeed_speedscale = undefined;
}

setcloakaerial()
{

}

unsetcloakaerial()
{

}

setspawnradar()
{
    self.hasspawnradar = 1;
}

unsetspawnradar()
{
    self.hasspawnradar = 1;
}

setimprovedmelee()
{

}

unsetimprovedmelee()
{

}

setthief()
{

}

unsetthief()
{

}

setadsawareness()
{
    thread runadsawareness();
    self setscriptablepartstate( "_encstr_B63312D059B4D90D3AB2CDB291D7DCCA37DC95B9", "_encstr_AA1608C07786F13312D3" );
}

runadsawareness()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_8C2612AB3737563A05884D8277C2E459CDACDC37" );
    self.awarenessradius = 256;
    self.awarenessqueryrate = 2.0;
    thread awarenessmonitorstance();

    for (;;)
    {
        wait( self.awarenessqueryrate );
        var_0 = scripts\common\utility::playersinsphere( self.origin, self.awarenessradius );

        foreach ( var_2 in level.players )
        {
            if ( var_2.team == self.team )
                continue;

            if ( var_2 scripts\mp\utility\perk::_hasperk( "_encstr_8F6B166E83568D4B58631D5EBE8DDBD88C8963F6DE462B23" ) )
                continue;

            if ( var_2 isonground() && !var_2 issprinting() && !var_2 iswallrunning() && !var_2 issprintsliding() )
                continue;

            thread playincomingwarning( var_2 );
        }
    }
}

playincomingwarning( var_0 )
{
    self setscriptablepartstate( "_encstr_B63312D059B4D90D3AB2CDB291D7DCCA37DC95B9", "_encstr_B3BA0B6E6CC973BE1C5D633795" );
    self playrumbleonentity( "_encstr_A4BE0D23B06BC2D995BEA1B258CECB" );
    var_0 playsoundtoplayer( "_encstr_AF8D126110CF275B79FFDFE2C00AFB677B9C383C", self );
    wait 0.2;

    if ( isdefined( self ) )
    {
        self setscriptablepartstate( "_encstr_B63312D059B4D90D3AB2CDB291D7DCCA37DC95B9", "_encstr_AA1608C07786F13312D3" );

        if ( scripts\cp_mp\utility\player_utility::_isalive() )
        {
            self playrumbleonentity( "_encstr_A4BE0D23B06BC2D995BEA1B258CECB" );

            if ( isdefined( var_0 ) && var_0 scripts\cp_mp\utility\player_utility::_isalive() )
                var_0 playsoundtoplayer( "_encstr_AF8D126110CF275B79FFDFE2C00AFB677B9C383C", self );
        }
    }
}

awarenessmonitorstance()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    for (;;)
    {
        var_0 = self getstance();
        var_1 = self getvelocity();

        switch ( var_0 )
        {
            case "_encstr_B1AD06374716DC8C":
                self.awarenessradius = 400;
                self.awarenessqueryrate = 2.0;
                break;
            case "_encstr_9C3D071B63023B26C3":
                self.awarenessradius = 650;
                self.awarenessqueryrate = 1.0;
                break;
            case "_encstr_9F24062875D5FD98":
                self.awarenessradius = 700;
                self.awarenessqueryrate = 0.5;
                break;
        }

        wait 0.01;
    }
}

awarenessaudiopulse()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_B27B0F8634FF4BF7162350F03AED4BE357" );

    for (;;)
    {
        playsoundatpos( self.origin + ( 0, 0, 5 ), "_encstr_AF8D126110CF275B79FFDFE2C00AFB677B9C383C" );
        wait 2.0;
    }
}

unsetadsawareness()
{
    self notify( "_encstr_8C2612AB3737563A05884D8277C2E459CDACDC37" );
    self setscriptablepartstate( "_encstr_B63312D059B4D90D3AB2CDB291D7DCCA37DC95B9", "_encstr_AA1608C07786F13312D3" );
}

setrearguard()
{

}

unsetrearguard()
{
    self.hasrearguardshield = undefined;
}

setsolobuddyboost()
{
    self.hassolobuddyboost = 1;
}

unsetsolobuddyboost()
{
    self.hassolobuddyboost = undefined;
}

setthrowingknifemelee()
{
    self giveweapon( self._id_13B5C );
    self assignweaponmeleeslot( self._id_13B5C );
    thread watchthrowingknifescavenge();

    if ( self._id_13B5C == "_encstr_952020890F22313BDBBB0A732020BFF4489B3E0DC7B8C47B7536225AA88DCFA1F851" )
        thread _id_144FD();
    else if ( self._id_13B5C == "_encstr_B3C2244B471F30A3C03258539CBEE05212A7DDEB4F126140E38BE3E806A7789D8AFF43177FEB" )
        thread _id_144FC();
}

unsetthrowingknifemelee()
{
    if ( isdefined( self._id_13B5C ) && self hasweapon( self._id_13B5C ) )
        self takeweapon( self._id_13B5C );

    self notify( "_encstr_8A2022A7EB97BE93F0D5906BF10BA18B83F21FEC282D02885010624480DA3DD09789E3E9" );

    if ( isdefined( self._id_13B5C ) && self._id_13B5C == "_encstr_952020890F22313BDBBB0A732020BFF4489B3E0DC7B8C47B7536225AA88DCFA1F851" )
        votesys_think();
    else if ( isdefined( self._id_13B5C ) && self._id_13B5C == "_encstr_B3C2244B471F30A3C03258539CBEE05212A7DDEB4F126140E38BE3E806A7789D8AFF43177FEB" )
        votesys_new();
}

_id_144FD()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_8A2022A7EB97BE93F0D5906BF10BA18B83F21FEC282D02885010624480DA3DD09789E3E9" );

    for (;;)
    {
        self waittill( "_encstr_89390E4C39FEB818C099781C19966AEB", var_0 );

        if ( var_0.basename == "_encstr_952020890F22313BDBBB0A732020BFF4489B3E0DC7B8C47B7536225AA88DCFA1F851" )
        {
            self setscriptablepartstate( "_encstr_BD7B13BF9059A010E64D89E8BB810B633DB027BB98", "_encstr_AFBD0D154011A7CCA05F3378B8D6FB" );
            self waittill( "_encstr_89390E4C39FEB818C099781C19966AEB" );
            self setscriptablepartstate( "_encstr_BD7B13BF9059A010E64D89E8BB810B633DB027BB98", "_encstr_9BA4080D39CFFB5AB7C1" );
        }
    }
}

votesys_think()
{
    self setscriptablepartstate( "_encstr_BD7B13BF9059A010E64D89E8BB810B633DB027BB98", "_encstr_9BA4080D39CFFB5AB7C1" );
}

_id_144FC()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_8A2022A7EB97BE93F0D5906BF10BA18B83F21FEC282D02885010624480DA3DD09789E3E9" );

    for (;;)
    {
        self waittill( "_encstr_89390E4C39FEB818C099781C19966AEB", var_0 );

        if ( var_0.basename == "_encstr_B3C2244B471F30A3C03258539CBEE05212A7DDEB4F126140E38BE3E806A7789D8AFF43177FEB" )
        {
            self setscriptablepartstate( "_encstr_BD7B13BF9059A010E64D89E8BB810B633DB027BB98", "_encstr_8BC80EAD11E01603EEF0D258384B934F" );
            self waittill( "_encstr_89390E4C39FEB818C099781C19966AEB" );
            self setscriptablepartstate( "_encstr_BD7B13BF9059A010E64D89E8BB810B633DB027BB98", "_encstr_9BA4080D39CFFB5AB7C1" );
        }
    }
}

votesys_new()
{
    self setscriptablepartstate( "_encstr_BD7B13BF9059A010E64D89E8BB810B633DB027BB98", "_encstr_9BA4080D39CFFB5AB7C1" );
}

watchthrowingknifescavenge()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_8A2022A7EB97BE93F0D5906BF10BA18B83F21FEC282D02885010624480DA3DD09789E3E9" );

    for (;;)
    {
        self waittill( "_encstr_8C600EDECC9934C2E623EB665AC9CA46", var_0 );

        if ( scripts\mp\utility\weapon::isthrowingknife( var_0 ) )
        {
            var_1 = self getammocount( var_0 );

            if ( var_1 == 0 )
            {
                if ( isdefined( self._id_13B5C ) && self hasweapon( self._id_13B5C ) )
                    self takeweapon( self._id_13B5C );
            }

            while ( self getammocount( var_0 ) == 0 )
                wait 0.05;

            self giveweapon( self._id_13B5C );
            self assignweaponmeleeslot( self._id_13B5C );
        }
    }
}

setbulletoutline()
{
    self.bulletoutline = spawnstruct();
    self.bulletoutline.player = self;
    self.bulletoutline.enemies = [];
    self.bulletoutline.enemyids = [];
    self.bulletoutline.enemyendtimes = [];
    self.bulletoutline thread watchbulletoutline();
    self.bulletoutline thread watchbulletoutlinecleanup();
}

unsetbulletoutline()
{
    self notify( "_encstr_A985137F751EF2D4893B959DD1D0270B7599979BDB" );
    self.bulletoutline = undefined;
}

watchbulletoutline()
{
    self.player endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self.player endon( "_encstr_A985137F751EF2D4893B959DD1D0270B7599979BDB" );

    while ( isdefined( self.player ) )
    {
        var_0 = gettime();

        foreach ( var_3, var_2 in self.enemies )
        {
            if ( !isdefined( var_2 ) )
            {
                bulletoutlineremoveenemy( undefined, var_3 );
                continue;
            }

            if ( var_2 scripts\mp\utility\perk::_hasperk( "_encstr_A636199B38CA8DA5851B47977D73F637C6BD8395BDEAA3639637CA" ) )
            {
                bulletoutlineremoveenemy( var_2, var_3 );
                continue;
            }

            if ( var_0 >= self.enemyendtimes[var_3] )
                bulletoutlineremoveenemy( var_2, var_3 );
        }

        waitframe();
    }
}

watchbulletoutlinecleanup()
{
    self.player scripts\engine\utility::_id_143A5( "_encstr_8A820B4696CDB1ED3737AC1B3A", "_encstr_A985137F751EF2D4893B959DD1D0270B7599979BDB" );

    foreach ( var_2, var_1 in self.enemies )
    {
        if ( isdefined( var_1 ) )
            bulletoutlineremoveenemy( var_1, var_2 );
    }
}

bulletoutlineaddenemy( var_0, var_1, var_2 )
{
    var_3 = var_0 getentitynumber();
    var_4 = gettime() + var_1 * 1000;
    self.enemies[var_3] = var_0;

    if ( !isdefined( self.enemyids[var_3] ) )
        self.enemyids[var_3] = scripts\mp\utility\outline::outlineenableforplayer( var_0, self.player, "_encstr_AD0F1217CDFBC334B548A91260A12B8BF6366594", "_encstr_B40D05E05627D6" );

    if ( !isdefined( self.enemyendtimes[var_3] ) || !isdefined( var_2 ) || var_2 )
        self.enemyendtimes[var_3] = var_4;
}

bulletoutlineremoveenemy( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = var_0 getentitynumber();

    self.enemies[var_1] = undefined;
    self.enemyendtimes[var_1] = undefined;

    if ( isdefined( var_0 ) )
        scripts\mp\utility\outline::outlinedisable( self.enemyids[var_1], var_0 );

    self.enemyids[var_1] = undefined;
}

bulletoutlinecheck( var_0, var_1, var_2, var_3 )
{
    if ( !( var_3 == "_encstr_8F280E35E759A9A325A5D069CF8B87D3" || var_3 == "_encstr_A88211C92CA36712F335C480B96EE5B4143049" || var_3 == "_encstr_9E0A12A801F1A13344CE341769AE337BB97150B1" || var_3 == "_encstr_9BE3150DAD1C47870999C0F8AF5C37E55EDEC7E1CD5543" ) )
        return;

    if ( !isdefined( var_0 ) || !isdefined( var_1 ) )
        return;

    if ( !isplayer( var_0 ) || !isplayer( var_1 ) )
        return;

    var_4 = var_0;

    if ( isdefined( var_0.owner ) )
        var_4 = var_0.owner;

    var_5 = var_1;

    if ( isdefined( var_1.owner ) )
        var_5 = var_1.owner;

    if ( !istrue( scripts\cp_mp\utility\player_utility::playersareenemies( var_4, var_5 ) ) )
        return;

    if ( isplayer( var_0 ) && isplayer( var_1 ) && scripts\mp\utility\outline::outlineoccluded( var_0 geteye(), var_1 geteye() ) )
        return;

    if ( isdefined( var_0.bulletoutline ) && !var_1 scripts\mp\utility\perk::_hasperk( "_encstr_A636199B38CA8DA5851B47977D73F637C6BD8395BDEAA3639637CA" ) )
        var_0.bulletoutline bulletoutlineaddenemy( var_1, 1 );

    if ( isdefined( var_1.bulletoutline ) && !var_0 scripts\mp\utility\perk::_hasperk( "_encstr_A636199B38CA8DA5851B47977D73F637C6BD8395BDEAA3639637CA" ) )
        var_1.bulletoutline bulletoutlineaddenemy( var_0, 2.0, 0 );
}

markempsignatures( var_0, var_1 )
{
    if ( !isdefined( var_0.empmarked ) )
        var_0.empmarked = [];

    if ( isdefined( var_0.empmarked[var_1] ) && var_0.empmarked[var_1] == "_encstr_B30B07E216CBFFC4C2" )
        return;

    var_0.empmarked[var_1] = "_encstr_B30B07E216CBFFC4C2";
    thread empvfx( var_0, var_1 );
    var_0 scripts\engine\utility::_id_143A5( "_encstr_A3750609A5E61883", "_encstr_980A0A1B1BB7B0B67D59B923" );
    var_0.empmarked[var_1] = undefined;
}

empvfx( var_0, var_1 )
{
    var_2 = [ "_encstr_9DB30E35EB9B1A7BD56323B24ED74E96", "_encstr_AAB30E3A7626037DAB69DCA52D29C57F", "_encstr_A6DD0992781498B7F7EAD4", "_encstr_A6DD0992781498B7F76DD7", "_encstr_BAEC0968474B3BE3CA7F05", "_encstr_82190BA2777052776E5311CBD8", "_encstr_A9190B4D7DEE39A537D1D7B12B" ];
    var_0.empmarked[var_1] = undefined;
}

startgpsjammer()
{
    self endon( "_encstr_A95F1127ACADF6CE56FA9D079B53585BB55627" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( isai( self ) )
    {
        while ( isdefined( self.avoidkillstreakonspawntimer ) && self.avoidkillstreakonspawntimer > 0 )
            waitframe();
    }

    if ( level.minspeedsq == 0 )
        return;

    if ( level.timeperiod < 0.05 )
        return;

    self.timesincelastweaponfire = 0.0;
    thread ghostadvanceduavwatcher();

    if ( scripts\mp\utility\game::unset_relic_grounded() && getdvarint( "_encstr_AF2B1DE032FABF86EF10C83EE4E7486DA55B21507A54F999370DC0B4C17B31", 1 ) )
        thread _id_11D12();
    else
    {
        self setplayerghost( 1 );
        self._id_122FE = 1;
    }

    self.timesincelastweaponfire = 0.0;

    for (;;)
    {
        self waittill( "_encstr_BE140D3FF56983E5E5C94AB288DB1F", var_0 );

        if ( scripts\mp\class::vehicle_checkpiggybackexploit( var_0 ) )
            continue;

        doghostweaponfired();
    }
}

doghostweaponfired()
{
    self endon( "_encstr_A95F1127ACADF6CE56FA9D079B53585BB55627" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self setplayerghost( 0 );
    self.playbattlechattersound = 1;
    thread checkforghostweaponfire();

    while ( self.timesincelastweaponfire < 3.0 )
    {
        wait( level.timeperiod );
        self.timesincelastweaponfire = self.timesincelastweaponfire + level.timeperiod;
    }

    self notify( "_encstr_8F720FCA985F47902FED096F8BA07D2DCF" );
    self.timesincelastweaponfire = 0.0;

    if ( self._id_122FE )
        self setplayerghost( 1 );

    self.playbattlechattersound = undefined;
}

checkforghostweaponfire()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A95F1127ACADF6CE56FA9D079B53585BB55627" );
    self endon( "_encstr_8F720FCA985F47902FED096F8BA07D2DCF" );

    for (;;)
    {
        self waittill( "_encstr_BE140D3FF56983E5E5C94AB288DB1F" );
        self.timesincelastweaponfire = 0.0;
    }
}

ghostadvanceduavwatcher()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A95F1127ACADF6CE56FA9D079B53585BB55627" );
    var_0 = scripts\mp\utility\game::getgametype() == "_encstr_9507034B25";

    if ( var_0 )
    {
        self setplayeradvanceduavdot( 1 );
        return;
    }

    for (;;)
    {
        if ( level.teambased )
        {
            var_1 = sat_setup_interactions();

            if ( var_1 )
            {
                self setplayeradvanceduavdot( 1 );
                self setplayerghost( 0 );

                while ( var_1 )
                {
                    waitframe();
                    var_1 = sat_setup_interactions();
                }

                self setplayerghost( 1 );
                self setplayeradvanceduavdot( 0 );
            }
        }
        else
        {
            foreach ( var_3 in level.players )
            {
                if ( var_3 == self )
                    continue;

                if ( istrue( level.activeadvanceduavs[var_3.guid] ) && level.activeadvanceduavs[var_3.guid] > 0 )
                {
                    self setplayeradvanceduavdot( 1 );
                    self setplayerghost( 0 );

                    while ( istrue( level.activeadvanceduavs[var_3.guid] ) && level.activeadvanceduavs[var_3.guid] > 0 )
                        level waittill( "_encstr_AA540B1DABD8B9A74FF192CB39" );

                    self setplayerghost( 1 );
                    self setplayeradvanceduavdot( 0 );
                }
            }
        }

        waitframe();
    }
}

sat_setup_interactions()
{
    var_0 = 0;
    var_1 = undefined;

    if ( !isdefined( level.audio_heli_end_fade_out ) || !isdefined( level.activeadvanceduavs ) )
        return var_0;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "_encstr_A47205E8C28D13", "_encstr_B45B139B0B40B6635793415A39A93FAD48950C1549" ) )
        var_1 = level [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "_encstr_A47205E8C28D13", "_encstr_B45B139B0B40B6635793415A39A93FAD48950C1549" ) ]]();

    if ( istrue( var_1 ) && getdvarint( "_encstr_B8D817B673DBFEF34643D133CADAEF33AF0D37A5F707CD39A8", 1 ) )
    {
        var_2 = 0;

        foreach ( var_5, var_4 in level.squaddata[self.team] )
            var_2 = var_2 + level.activeadvanceduavs[self.team + var_5];

        var_0 = level.audio_heli_end_fade_out - var_2 > 0;
    }
    else
        var_0 = level.audio_heli_end_fade_out - level.activeadvanceduavs[self.team] > 0;

    return var_0;
}

_id_11D12()
{
    self endon( "_encstr_A95F1127ACADF6CE56FA9D079B53585BB55627" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 = getdvarint( "_encstr_B3571B6B408DBC1FB1633F3B05DEE702DB28B2117011320FEB5B372C15", 190 );
    self._id_122FE = 0;
    var_1 = 0;

    for (;;)
    {
        var_2 = self.super;
        var_3 = isdefined( var_2 ) && isdefined( var_2.staticdata.ref ) && isdefined( var_2.usepercent );

        if ( var_3 && var_2.staticdata.ref == "_encstr_A86C12EBDBF8A0B6610B6B6B238B73B0857591A1" && var_2.usepercent > 0 || isdefined( self.vehicle ) )
        {
            if ( !self._id_122FE )
            {
                self._id_122FE = 1;
                var_1 = 0;
                self setplayerghost( 1 );
            }

            if ( var_1 && self._id_122FE )
            {
                self notify( "_encstr_8BCF0D1363CAEE808D3919F0DD63B8" );
                var_1 = 0;
            }

            waitframe();
            continue;
        }

        var_4 = self getvelocity();
        var_5 = abs( var_4[0] ) + abs( var_4[1] ) + abs( var_4[2] );

        if ( var_5 >= var_0 && !self._id_122FE && !self isjumping() && !istrue( self.playbattlechattersound ) )
        {
            self._id_122FE = 1;
            var_1 = 0;
            self setplayerghost( 1 );
        }
        else if ( var_5 >= var_0 && var_1 && self._id_122FE )
        {
            self notify( "_encstr_8BCF0D1363CAEE808D3919F0DD63B8" );
            var_1 = 0;
        }
        else if ( var_5 < var_0 && self._id_122FE && !var_1 )
        {
            thread _id_122FD();
            var_1 = 1;
        }

        waitframe();
    }
}

_id_122FD()
{
    self endon( "_encstr_8BCF0D1363CAEE808D3919F0DD63B8" );
    self endon( "_encstr_A95F1127ACADF6CE56FA9D079B53585BB55627" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    wait( getdvarfloat( "_encstr_BA8F19D155B27088BF9AF8634387DCE8CDA46765FE5150EDFB2232", 2.0 ) );

    if ( !isdefined( self ) )
        return;

    self._id_122FE = 0;
    self setplayerghost( 0 );
}

removegpsjammer()
{
    self notify( "_encstr_A95F1127ACADF6CE56FA9D079B53585BB55627" );
    self setplayerghost( 0 );
    self._id_122FE = undefined;
    self setplayeradvanceduavdot( 0 );
}

setgroundpoundshield()
{
    level._effect["_encstr_9D4A19ECC9F6BAB91905EDEACD32A6A1D2566319BE5AB50E85B147"] = loadfx( "_encstr_95F42BB399879796EE9B5EAFE456B8AEB26E1DE65E6B0E5E9D331E7D235698BA3BAFBBC24EB92DDC3B8B3B66E1" );
}

unsetgroundpoundshield()
{
    self notify( "_encstr_A9DE18CE39EDEA372305DED5DC32D434D2CAD846FAAEDCE62BE8" );
}

groundpoundshield_onimpact( var_0 )
{
    thread groundpoundshield_raiseondelay();
}

groundpoundshield_raiseondelay()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_807112EF7B4845CA1581A7C7D5CD019DA8A3E7B3" );
    self endon( "_encstr_8F2210A7930FA3E812475F9380C43979BB4A" );
    wait 0.25;
    groundpoundshield_raise();
}

groundpoundshield_raise()
{
    if ( isdefined( self.groundpoundshield ) )
        thread groundpoundshield_lower( self.groundpoundshield );

    var_0 = self.origin + anglestoforward( self.angles ) * 5;
    var_1 = self.angles + ( 0, 90, 0 );
    var_2 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0 );
    var_2.angles = var_1;
    var_2 setmodel( "_encstr_B85118EE59161C7B37D79B865A9B9DAE854E23EBD8B7637DDD6B" );
    var_3 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0 );
    var_3.angles = var_1;
    var_3 setmodel( "_encstr_A38417A7DF5A772836890B602CEEB02DB27B096F7BD3A8A05D" );
    var_3.outlineid = scripts\mp\utility\outline::outlineenableforall( var_3, "_encstr_BCBD15F0DB9349B823C50898D7536139FB72F908B36E95", "_encstr_BE8F0A2BB8D596386BB273A3" );
    var_4 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0 );
    var_4.angles = var_1;
    var_4 setmodel( "_encstr_9D66177BA1BFD3CD689F5B58EB30978FD73BC2610980B70398" );
    var_4.outlineid = scripts\mp\utility\outline::outlineenableforall( var_4, "_encstr_8CA117D5B5F9D271D008578B40C9355B8143514D9E7B2A8759", "_encstr_BE8F0A2BB8D596386BB273A3" );
    var_2.visfr = var_3;
    var_2.visen = var_4;
    var_2.owner = self;
    var_2 setcandamage( 1 );
    var_2.health = 9999;
    var_2.shieldhealth = 210;
    self.groundpoundshield = var_2;
    var_5 = level.characters;

    foreach ( var_7 in var_5 )
    {
        if ( !isdefined( var_7 ) )
            continue;

        if ( level.teambased && var_7.team == self.team )
        {
            var_4 hidefromplayer( var_7 );
            continue;
        }

        var_3 hidefromplayer( var_7 );
    }

    thread groundpoundshield_monitorjoinedteam( var_2 );
    thread groundpoundshield_loweronleavearea( var_2 );
    thread groundpoundshield_lowerontime( var_2, 3.25 );
    thread groundpoundshield_loweronjump( var_2 );
    thread groundpoundshield_deleteondisconnect( var_2 );
    thread groundpoundshield_monitorhealth( var_2 );
    thread groundpound_raisefx();
    return var_2;
}

groundpoundshield_lower( var_0 )
{
    self notify( "_encstr_B63E1631BB577B2D5F9970D8F52A49B22FF85B3CC9221659" );

    if ( !isdefined( var_0 ) )
        return;

    thread groundpoundshield_lowerfx();
    thread groundpoundshield_deleteshield( var_0 );
}

groundpoundshield_break( var_0 )
{
    self notify( "_encstr_B63E1631BB577B2D5F9970D8F52A49B22FF85B3CC9221659" );

    if ( !isdefined( var_0 ) )
        return;

    thread groundpoundshield_breakfx();
    thread groundpoundshield_deleteshield( var_0 );
}

groundpoundshield_monitorhealth( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_807112EF7B4845CA1581A7C7D5CD019DA8A3E7B3" );
    self endon( "_encstr_B63E1631BB577B2D5F9970D8F52A49B22FF85B3CC9221659" );
    self endon( "_encstr_98201F07033A75A0BCCA08436D649123B2A799991F3235F8D5DB719F144168693A" );

    for (;;)
    {
        var_0 waittill( "_encstr_B8BE07320B5B16ECAC", var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 );

        if ( isdefined( var_2 ) )
        {
            if ( var_2 == self || var_2.team != self.team )
                var_0.shieldhealth = var_0.shieldhealth - var_1;
        }

        var_0.health = 9999;
        thread groundpoundshield_damagedfx( var_2, var_4, var_3 );

        if ( var_0.shieldhealth <= 0 )
        {
            thread groundpoundshield_break( var_0 );
            return;
        }
        else if ( var_0.shieldhealth <= 105.0 )
        {
            if ( var_0.visfr.model != "_encstr_AFF31807F50B708DDEDFC3D8902DACADBF76CAC1020651970F3D" )
            {
                var_0.visfr setmodel( "_encstr_AFF31807F50B708DDEDFC3D8902DACADBF76CAC1020651970F3D" );
                scripts\mp\utility\outline::outlinerefresh( var_0.visfr );
            }

            if ( var_0.visen.model != "_encstr_AFF31807F50B708DDEDFC3D8902DACADBF76CAC1020651970F3D" )
            {
                var_0.visen setmodel( "_encstr_AFF31807F50B708DDEDFC3D8902DACADBF76CAC1020651970F3D" );
                scripts\mp\utility\outline::outlinerefresh( var_0.visen );
            }
        }
    }
}

groundpoundshield_loweronjump( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_807112EF7B4845CA1581A7C7D5CD019DA8A3E7B3" );
    self endon( "_encstr_B63E1631BB577B2D5F9970D8F52A49B22FF85B3CC9221659" );
    self endon( "_encstr_98201F07033A75A0BCCA08436D649123B2A799991F3235F8D5DB719F144168693A" );
    var_1 = self isjumping();
    var_2 = undefined;

    for (;;)
    {
        var_2 = var_1;
        var_1 = self isjumping();

        if ( !var_2 && var_1 )
        {
            thread groundpoundshield_lower( var_0 );
            return;
        }

        waitframe();
    }
}

groundpoundshield_lowerontime( var_0, var_1 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_807112EF7B4845CA1581A7C7D5CD019DA8A3E7B3" );
    self endon( "_encstr_B63E1631BB577B2D5F9970D8F52A49B22FF85B3CC9221659" );
    self endon( "_encstr_98201F07033A75A0BCCA08436D649123B2A799991F3235F8D5DB719F144168693A" );
    wait( var_1 );
    thread groundpoundshield_lower( var_0 );
}

groundpoundshield_loweronleavearea( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_807112EF7B4845CA1581A7C7D5CD019DA8A3E7B3" );
    self endon( "_encstr_B63E1631BB577B2D5F9970D8F52A49B22FF85B3CC9221659" );
    self endon( "_encstr_98201F07033A75A0BCCA08436D649123B2A799991F3235F8D5DB719F144168693A" );

    while ( isdefined( var_0 ) )
    {
        if ( lengthsquared( var_0.origin - self.origin ) > 11664 )
        {
            thread groundpoundshield_lower( var_0 );
            return;
        }

        waitframe();
    }
}

groundpoundshield_deleteondisconnect( var_0 )
{
    self endon( "_encstr_98201F07033A75A0BCCA08436D649123B2A799991F3235F8D5DB719F144168693A" );
    scripts\engine\utility::_id_143A5( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3", "_encstr_807112EF7B4845CA1581A7C7D5CD019DA8A3E7B3" );
    thread groundpoundshield_deleteshield( var_0 );
}

groundpoundshield_monitorjoinedteam( var_0 )
{

}

groundpoundshield_deleteshield( var_0 )
{
    self notify( "_encstr_98201F07033A75A0BCCA08436D649123B2A799991F3235F8D5DB719F144168693A" );
    scripts\mp\utility\outline::outlinedisable( var_0.visen.outlineid, var_0.visen );
    scripts\mp\utility\outline::outlinedisable( var_0.visfr.outlineid, var_0.visfr );
    var_0.visfr delete();
    var_0.visen delete();
    var_0 delete();
}

groundpound_raisefx()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_807112EF7B4845CA1581A7C7D5CD019DA8A3E7B3" );
    self endon( "_encstr_B63E1631BB577B2D5F9970D8F52A49B22FF85B3CC9221659" );
    self endon( "_encstr_98201F07033A75A0BCCA08436D649123B2A799991F3235F8D5DB719F144168693A" );
}

groundpoundshield_lowerfx()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_807112EF7B4845CA1581A7C7D5CD019DA8A3E7B3" );
    self endon( "_encstr_B63E1631BB577B2D5F9970D8F52A49B22FF85B3CC9221659" );
    self endon( "_encstr_98201F07033A75A0BCCA08436D649123B2A799991F3235F8D5DB719F144168693A" );
}

groundpoundshield_damagedfx( var_0, var_1, var_2 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_807112EF7B4845CA1581A7C7D5CD019DA8A3E7B3" );
    self endon( "_encstr_B63E1631BB577B2D5F9970D8F52A49B22FF85B3CC9221659" );
    self endon( "_encstr_98201F07033A75A0BCCA08436D649123B2A799991F3235F8D5DB719F144168693A" );
    playfx( scripts\engine\utility::getfx( "_encstr_9D4A19ECC9F6BAB91905EDEACD32A6A1D2566319BE5AB50E85B147" ), var_1, -1 * var_2 );
    playsoundatpos( var_1, "_encstr_8966115FCF06BBE418B799823F5CBDC0207954" );
    var_0 scripts\mp\damagefeedback::updatedamagefeedback( "_encstr_9D4E0FD0963A4CBA1B36B23ADCA3DB27AD" );
}

groundpoundshield_breakfx()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_807112EF7B4845CA1581A7C7D5CD019DA8A3E7B3" );
    self endon( "_encstr_B63E1631BB577B2D5F9970D8F52A49B22FF85B3CC9221659" );
    self endon( "_encstr_98201F07033A75A0BCCA08436D649123B2A799991F3235F8D5DB719F144168693A" );
}

setgroundpoundshock()
{
    level._effect["_encstr_B3301B671D40A39EC8EF058BCDE0EB2A28572F0FB3F93B490873311218"] = loadfx( "_encstr_95F42BB399879796EE9B5EAFE456B8AEB26E1DE65E6B0E5E9D331E7D235698BA3BAFBBC24EB92DDC3B8B3B66E1" );
    level._effect["_encstr_87F91C519B070DC0B7F87F73FE9FE15BDF6228DEB2A7C7E00EB417490A87"] = loadfx( "_encstr_95F42BB399879796EE9B5EAFE456B8AEB26E1DE65E6B0E5E9D331E7D235698BA3BAFBBC24EB92DDC3B8B3B66E1" );
}

unsetgroundpoundshock()
{
    self notify( "_encstr_A6D71740DA75171897F7B7AB5B97DE325A81686E285E431BE3" );
}

groundpoundshock_onimpact( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_807112EF7B4845CA1581A7C7D5CD019DA8A3E7B3" );
    self endon( "_encstr_A6D71740DA75171897F7B7AB5B97DE325A81686E285E431BE3" );
    var_1 = undefined;
    var_2 = undefined;

    switch ( var_0 )
    {
        case "_encstr_9CDF157A43B8C78D38814745E5605DDF50F9C102098E0A":
            var_2 = scripts\engine\utility::getfx( "_encstr_B3301B671D40A39EC8EF058BCDE0EB2A28572F0FB3F93B490873311218" );
            var_1 = 144;
            break;
        case "_encstr_98DF1559930F15D8BFF0477BE66711D7E30AB72D4AC36F":
            var_2 = scripts\engine\utility::getfx( "_encstr_B3301B671D40A39EC8EF058BCDE0EB2A28572F0FB3F93B490873311218" );
            var_1 = 180;
            break;
        case "_encstr_9EDF153B1BE5AB88DB50E0E506E3F44B0DE21188827A9D":
            var_2 = scripts\engine\utility::getfx( "_encstr_87F91C519B070DC0B7F87F73FE9FE15BDF6228DEB2A7C7E00EB417490A87" );
            var_1 = 216;
            break;
    }

    thread groundpoundshock_onimpactfx( var_1, var_2 );
    var_3 = undefined;

    if ( level.teambased )
        var_3 = scripts\mp\utility\teams::getenemyplayers( self.team, 1 );
    else
        var_3 = level.characters;

    var_4 = var_1 * var_1;
    var_5 = scripts\engine\trace::create_contents( 0, 1, 0, 0, 1, 0, 0 );

    foreach ( var_7 in var_3 )
    {
        if ( lengthsquared( var_7 geteye() - self geteye() ) > var_4 )
            continue;

        var_8 = physics_raycast( self geteye(), var_7 geteye(), var_5, undefined, 0, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3" );

        if ( isdefined( var_8 ) && var_8.size > 0 )
            continue;

        thread groundpoundshock_empplayer( var_7 );
    }
}

groundpoundshock_empplayer( var_0 )
{
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    thread scripts\mp\gamescore::trackdebuffassistfortime( self, var_0, "_encstr_B1520F0CF22F37D57133F2CBDD28A98A32", 3 );
}

groundpoundshock_onimpactfx( var_0, var_1 )
{
    playfx( var_1, self.origin + ( 0, 0, 20 ), ( 0, 0, 1 ) );
}

setgroundpoundboost()
{

}

unsetgroundpoundboost()
{
    self notify( "_encstr_B61217809B652B085B8060658663B5D7CD1390B903FD9F2173" );
}

groundpoundboost_onimpact( var_0 )
{
    scripts\common\utility::set_doublejumpenergy( self energy_getmax( 0 ) );
}

setbattleslideshield()
{
    level._effect["_encstr_B78C1912190DEB2568EF3C31A940A2233B316AFA26ED775D10FF2D"] = loadfx( "_encstr_95F42BB399879796EE9B5EAFE456B8AEB26E1DE65E6B0E5E9D331E7D235698BA3BAFBBC24EB92DDC3B8B3B66E1" );
    thread battleslideshield_monitor();
}

unsetbattleslideshield()
{
    self notify( "_encstr_A6A618AD097BC069CF61C0687AA78E58546529298FE3D82E172B" );
}

battleslideshield_monitor()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AF4512E2D7C5B4F94572D10C99110FA52D2061B1" );
    self notify( "_encstr_B25B1A733BCDB39CC08FC58C41E8EB2A2B5B33E3DFF9CA4658733D52" );
    self endon( "_encstr_B25B1A733BCDB39CC08FC58C41E8EB2A2B5B33E3DFF9CA4658733D52" );

    for (;;)
    {
        self waittill( "_encstr_B60E130B7A1A20583307675137DA1549A29731C065" );
        thread battleslideshield_raise();
    }
}

battleslideshield_monitorhealth( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_AF4512E2D7C5B4F94572D10C99110FA52D2061B1" );

    while ( isdefined( var_0 ) )
    {
        var_0 waittill( "_encstr_B8BE07320B5B16ECAC", var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 );
        thread battleslideshield_damagedfx( var_0, var_2, var_4, var_3 );

        if ( var_0.health <= 0 )
        {
            thread battleslideshield_break( var_0 );
            var_0 delete();
            continue;
        }

        if ( var_0.health <= 125.0 )
        {
            if ( var_0.model != "_encstr_AFF31807F50B708DDEDFC3D8902DACADBF76CAC1020651970F3D" )
                var_0 setmodel( "_encstr_AFF31807F50B708DDEDFC3D8902DACADBF76CAC1020651970F3D" );

            continue;
        }

        if ( var_0.model != "_encstr_94F214DDCA1638F69BBEE6439637B3572C9C91F5EEB6" )
            var_0 setmodel( "_encstr_94F214DDCA1638F69BBEE6439637B3572C9C91F5EEB6" );
    }
}

battleslideshield_raise()
{
    if ( isdefined( self.battleslideshield ) )
        thread battleslideshield_lower( self.battleslideshield );

    var_0 = scripts\engine\utility::spawn_tag_origin();
    var_0 setmodel( "_encstr_94F214DDCA1638F69BBEE6439637B3572C9C91F5EEB6" );
    var_0 setcandamage( 1 );
    var_0.health = 250;
    var_0 linkto( self, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", ( 30, 0, 0 ), ( 0, 90, 0 ) );
    var_0 show();
    self.battleslideshield = var_0;
    thread battleslideshield_killonjumpfall( var_0 );
    thread battleslideshield_killonsprint( var_0 );
    thread battleslideshield_killontime( var_0 );
    thread battleslideshield_unlinkonstop( var_0 );
    thread battleslideshield_monitorhealth( var_0 );
    thread battleslideshield_killondeathdisconnectunset( var_0 );
    thread battleslideshield_raisefx( var_0 );
    return var_0;
}

battleslideshield_lower( var_0 )
{
    self notify( "_encstr_82A11602091DFB35189F2C219970B2D3CB215AEA567D5BEF" );

    if ( !isdefined( var_0 ) )
        return;

    thread battleslideshield_lowerfx( var_0 );
    var_0 delete();
}

battleslideshield_killondeathdisconnectunset( var_0 )
{
    var_0 endon( "_encstr_A3750609A5E61883" );
    scripts\engine\utility::_id_143A5( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3", "_encstr_AF4512E2D7C5B4F94572D10C99110FA52D2061B1" );
    var_0 delete();
}

battleslideshield_killonjumpfall( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AF4512E2D7C5B4F94572D10C99110FA52D2061B1" );
    self endon( "_encstr_AA6419E3AB5D230C703F551CB1187B9ABBCB43736F054AF4C8A08C" );
    self endon( "_encstr_82A11602091DFB35189F2C219970B2D3CB215AEA567D5BEF" );
    var_0 endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        if ( !self isonground() )
        {
            var_0 delete();
            self notify( "_encstr_82A11602091DFB35189F2C219970B2D3CB215AEA567D5BEF" );
            return;
        }

        waitframe();
    }
}

battleslideshield_killonsprint( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AF4512E2D7C5B4F94572D10C99110FA52D2061B1" );
    self endon( "_encstr_AA6419E3AB5D230C703F551CB1187B9ABBCB43736F054AF4C8A08C" );
    self endon( "_encstr_82A11602091DFB35189F2C219970B2D3CB215AEA567D5BEF" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    self waittill( "_encstr_BC1A0D3F70BB911AE9A8964FACFBD2" );
    var_0 delete();
    self notify( "_encstr_82A11602091DFB35189F2C219970B2D3CB215AEA567D5BEF" );
}

battleslideshield_loweronleavearea( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AF4512E2D7C5B4F94572D10C99110FA52D2061B1" );
    self endon( "_encstr_82A11602091DFB35189F2C219970B2D3CB215AEA567D5BEF" );
    var_0 endon( "_encstr_A3750609A5E61883" );

    for (;;)
    {
        if ( lengthsquared( var_0.origin - self.origin ) > 11664 )
        {
            thread battleslideshield_lower( var_0 );
            return;
        }

        waitframe();
    }
}

battleslideshield_lowerontime( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AF4512E2D7C5B4F94572D10C99110FA52D2061B1" );
    self endon( "_encstr_82A11602091DFB35189F2C219970B2D3CB215AEA567D5BEF" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    wait 3.5;
    thread battleslideshield_lower( var_0 );
}

battleslideshield_unlink( var_0 )
{
    if ( !isdefined( var_0 ) )
        return;

    var_0 unlink();
    self notify( "_encstr_AA6419E3AB5D230C703F551CB1187B9ABBCB43736F054AF4C8A08C" );
    thread battleslideshield_lowerontime( var_0 );
    thread battleslideshield_loweronleavearea( var_0 );
    self notify( "_encstr_AA6419E3AB5D230C703F551CB1187B9ABBCB43736F054AF4C8A08C" );
}

battleslideshield_killontime( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AF4512E2D7C5B4F94572D10C99110FA52D2061B1" );
    self endon( "_encstr_AA6419E3AB5D230C703F551CB1187B9ABBCB43736F054AF4C8A08C" );
    self endon( "_encstr_82A11602091DFB35189F2C219970B2D3CB215AEA567D5BEF" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    self waittill( "_encstr_A874111B73BBDB187B3FBF89212718888FEA71" );
    wait 0.75;
    var_0 delete();
    self notify( "_encstr_82A11602091DFB35189F2C219970B2D3CB215AEA567D5BEF" );
}

battleslideshield_unlinkonstop( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_AF4512E2D7C5B4F94572D10C99110FA52D2061B1" );
    self endon( "_encstr_AA6419E3AB5D230C703F551CB1187B9ABBCB43736F054AF4C8A08C" );
    self endon( "_encstr_82A11602091DFB35189F2C219970B2D3CB215AEA567D5BEF" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    self waittill( "_encstr_A874111B73BBDB187B3FBF89212718888FEA71" );

    for (;;)
    {
        if ( lengthsquared( self getvelocity() ) < 100 )
        {
            thread battleslideshield_unlink( var_0 );
            return;
        }

        waitframe();
    }
}

battleslideshield_break( var_0 )
{
    if ( !isdefined( var_0 ) )
        return;

    thread battleslideshield_breakfx( var_0 );
    self notify( "_encstr_82A11602091DFB35189F2C219970B2D3CB215AEA567D5BEF" );
}

battleslideshield_raisefx( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_AF4512E2D7C5B4F94572D10C99110FA52D2061B1" );
    var_0 endon( "_encstr_A3750609A5E61883" );
}

battleslideshield_lowerfx( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_AF4512E2D7C5B4F94572D10C99110FA52D2061B1" );
    var_0 endon( "_encstr_A3750609A5E61883" );
}

battleslideshield_damagedfx( var_0, var_1, var_2, var_3 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_AF4512E2D7C5B4F94572D10C99110FA52D2061B1" );
    var_0 endon( "_encstr_A3750609A5E61883" );
    playfx( scripts\engine\utility::getfx( "_encstr_B78C1912190DEB2568EF3C31A940A2233B316AFA26ED775D10FF2D" ), var_2, -1 * var_3 );
    playsoundatpos( var_2, "_encstr_8966115FCF06BBE418B799823F5CBDC0207954" );
    var_1 scripts\mp\damagefeedback::updatedamagefeedback( "_encstr_9D4E0FD0963A4CBA1B36B23ADCA3DB27AD" );
}

battleslideshield_breakfx( var_0 )
{

}

setbattleslideoffense()
{

}

unsetbattleslideoffense()
{

}

getbattleslideoffensedamage()
{
    return 100;
}

setthruster()
{
    level._effect["_encstr_A82E0E587A62EB6BDB752E3649A3F5AD"] = loadfx( "_encstr_8CF63F6733F0F2B4EE73E58DF69CCAE5B6C1E583DBDD2B936ECBD143C957B98E7D89630B9B8E5ECE66C3D71D1AC9D59BE8AF138D0BB93AFA27B019B4AECDFA99C9" );
    level._effect["_encstr_812E0EF5B81B7B3FC3B27861EA1F9BD0"] = loadfx( "_encstr_8FF63F2E16FB6DFA6F1B5839E0FE0B1D394BD630E0C78A4BB310292072C5B6F479DA80168AAB4A0B6AC257315B9BE5E02B31333AC1F313EFC3F1C3204B7BDEB91A" );
    thrusterwatchdoublejump();
}

unsetthruster()
{
    if ( isdefined( self.thrustfxent ) )
        self.thrustfxent delete();

    self notify( "_encstr_818B0FA31A4E5D6E8EB227BE57DC37593A" );
}

thrusterwatchdoublejump()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_818B0FA31A4E5D6E8EB227BE57DC37593A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        self waittill( "_encstr_944815E4C8D3F36DBB39338AD0CDE58F4B2D4A9D54F87B" );
        thread thrusterloop();
        thread thrusterdamageloop();
    }
}

thrusterloop()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_818B0FA31A4E5D6E8EB227BE57DC37593A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_98BE13E308DB1ABA4BA2D3CDA72D42AFA378FF4328" );
    thread thrusterstopfx();

    if ( !isdefined( self.thrustfxent ) )
    {
        self.thrustfxent = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", self.origin );
        self.thrustfxent setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    }
    else
        self.thrustfxent.origin = self.origin;

    waitframe();

    for (;;)
    {
        self playrumbleonentity( "_encstr_9C4F0D87B1F0F9E23D3733DFBF531B" );
        earthquake( 0.1, 0.3, self.origin, 120 );
        var_0 = playerphysicstrace( self.origin + ( 0, 0, 10 ), self.origin - ( 0, 0, 600 ) ) + ( 0, 0, 1 );
        self.thrustfxent.origin = var_0;
        self.thrustfxent.angles = ( 90, 0, 0 );
        waitframe();
        wait 0.33;
    }
}

thrusterdamageloop()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_818B0FA31A4E5D6E8EB227BE57DC37593A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_98BE13E308DB1ABA4BA2D3CDA72D42AFA378FF4328" );

    for (;;)
    {
        scripts\mp\utility\damage::radiusplayerdamage( self.origin, 12, 64, 5, 12, self, undefined, "_encstr_A9ED0B35F488AF94A9A0A00D8A", "_encstr_A1320C94EB930F0A39E0E349D849", 1 );
        wait 0.05;
    }
}

thrusterstopfx()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\engine\utility::_id_143A5( "_encstr_98BE13E308DB1ABA4BA2D3CDA72D42AFA378FF4328", "_encstr_818B0FA31A4E5D6E8EB227BE57DC37593A" );
    waitframe();
}

runhover()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A1171039ACB6DED9B2059C6C34CA8ECB072B" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        if ( self ishighjumping() && self playerads() > 0.3 && self energy_getenergy( 0 ) > 0 )
        {
            executehover();
            thread watchhoverend();
            self waittill( "_encstr_B3B70C0D7B67AC27BEB273919591" );
            endhover();
        }

        wait 0.1;
    }
}

watchhoverend()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A1171039ACB6DED9B2059C6C34CA8ECB072B" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_BADE0FDDB08DB11BED365B7D56DC23B232" );

    while ( self playerads() > 0.3 )
        waitframe();

    self notify( "_encstr_B3B70C0D7B67AC27BEB273919591" );
}

executehover()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A1171039ACB6DED9B2059C6C34CA8ECB072B" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self.ishovering = 1;
    self allowmovement( 0 );
    self allowjump( 0 );
    self playlocalsound( "_encstr_BA65127643DECDA3EBEE8536D8AFB03A3A161B1A" );
    var_0 = scripts\engine\utility::spawn_tag_origin();
    self playerlinkto( var_0 );
    thread managetimeout( var_0 );
}

managetimeout( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A1171039ACB6DED9B2059C6C34CA8ECB072B" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = self energy_getrestorerate( 0 );
    self energy_setrestorerate( 0, 1.0 );
    wait 2;
    self notify( "_encstr_B3B70C0D7B67AC27BEB273919591" );
    self energy_setrestorerate( 0, var_1 );
    self energy_setenergy( 0, 0 );
}

endhover()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_A1171039ACB6DED9B2059C6C34CA8ECB072B" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self.ishovering = undefined;
    self allowmovement( 1 );
    self allowjump( 1 );
    self playlocalsound( "_encstr_AB2E12B31AEDE6A3BE77581B36FA46B2A3C2C643" );
    self unlink();
}

setadsmarktarget()
{

}

perk_adsmarktarget_think()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_B116136D2889115073428FBBCD388E80B72AA8CFDC" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    for (;;)
    {
        if ( self playerads() > 0.5 )
        {
            foreach ( var_1 in level.players )
            {
                if ( var_1 scripts\mp\utility\perk::_hasperk( "_encstr_A636199B38CA8DA5851B47977D73F637C6BD8395BDEAA3639637CA" ) )
                    continue;

                if ( var_1.team == self.team )
                    continue;

                if ( istrue( var_1.isperk_adsmarked ) )
                    continue;

                if ( istrue( var_1.ischeckingadsmarking ) )
                    continue;

                var_1.ischeckingadsmarking = 1;
                thread perk_adstargetmark_disconnectcleanupthink( var_1 );
                var_1 thread perk_adstargetmark_disconnectcleanupthink( var_1 );

                if ( perk_adsmarktarget_check( var_1 ) )
                {
                    thread perk_adsmarktarget_confirmtargetandmark( var_1 );
                    continue;
                }

                var_1.ischeckingadsmarking = 0;
            }
        }

        wait 0.2;
    }
}

perk_adsmarktarget_check( var_0 )
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_B116136D2889115073428FBBCD388E80B72AA8CFDC" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 = physics_createcontents( [ "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_941116D7F47B0FC88317C8B07BCC017DD35AD8D44D52D773", "_encstr_A18816F8C3E1EFFCFF5A92BF8363BBF55BCBD9C3538DF74D", "_encstr_B7F9145B18AB8AF721FE235718AB8F95E96811E39843", "_encstr_9DD6156A78B803FAD687D7EF95056246B86329B453E0D5", "_encstr_B7D018B89C4B13AC473342305523920D607E50E3571038A69138" ] );
    var_2 = distance( var_0.origin, self.origin );
    var_3 = 0;

    if ( var_2 != 0 )
        var_3 = 1000 * ( 10 / var_2 );

    var_4 = var_0 geteye();

    if ( var_0.team != self.team && ( self worldpointinreticle_circle( var_0.origin + ( 0, 0, 24 ), 90, var_3 ) || self worldpointinreticle_circle( var_4, 90, var_3 ) ) )
    {
        var_5 = self geteye();
        var_6 = var_4;
        var_7 = physics_raycast( var_5, var_6, var_1, undefined, 0, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3", 1 );

        if ( isdefined( var_7 ) && var_7.size == 0 )
            return 1;

        waitframe();
        var_6 = var_0.origin + ( 0, 0, 24 );
        var_8 = physics_raycast( var_5, var_6, var_1, undefined, 0, "_encstr_828C15A7C847CB7B768330689A4A13067764A09E5D87D3", 1 );

        if ( isdefined( var_8 ) && var_8.size == 0 )
            return 1;
    }

    return 0;
}

perk_adsmarktarget_confirmtargetandmark( var_0 )
{
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_B116136D2889115073428FBBCD388E80B72AA8CFDC" );
    var_1 = undefined;
    var_2 = getdvarfloat( "_encstr_B37A23E39A154856B98B6321D9C348EF71E3B68B2F01F3D7FC57EB433F63B2C1D33662D191" );

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_9FCB1FB6608779CB46E288F8C91C8B53A317BC25CCC743236A7A0898A1354BEB6F" ) )
        var_2 = var_2 * getdvarfloat( "_encstr_8F431D8303E2A71F88116B8CDB16B7B8308BB7020B4ECBBED39296F29EB49F" );

    wait( var_2 );

    if ( self playerads() > 0.5 && perk_adsmarktarget_check( var_0 ) )
    {
        var_3 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_0.origin );

        if ( scripts\cp_mp\utility\game_utility::isrealismenabled() )
        {
            var_4 = 0;
            var_5 = 5000;
            var_6 = 100;
        }
        else
        {
            var_4 = 1;
            var_5 = 5000;
            var_6 = 0;
        }

        var_7 = var_3 thread scripts\cp_mp\entityheadicons::setheadicon_singleimage( getlivingplayers_team( self.team ), "_encstr_B43212B4D8F6E6AFB90B3BC4B093F5ACE656D6CB", 35, var_4, var_5, var_6, undefined, 1 );
        var_1 = scripts\mp\utility\outline::outlineenableforplayer( var_0, self, "_encstr_872E1B50979C204B0E3A5752638DB806B0ABCF570B0B01A5826AC2346B", "_encstr_BE8F0A2BB8D596386BB273A3" );
        var_0 scripts\mp\utility\outline::_hudoutlineviewmodelenable( "_encstr_8CA117D5B5F9D271D008578B40C9355B8143514D9E7B2A8759", 0 );
        var_0.isperk_adsmarked = 1;
        thread perk_trackadsmarktargetoutline( var_7, var_3, var_1, var_0 );
    }
    else
        var_0.ischeckingadsmarking = 0;
}

perk_trackadsmarktargetoutline( var_0, var_1, var_2, var_3 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    wait 0.6;
    scripts\mp\utility\outline::outlinedisable( var_2, var_3 );

    if ( isdefined( var_3 ) )
        var_3 scripts\mp\utility\outline::_hudoutlineviewmodeldisable();

    var_4 = getdvarfloat( "_encstr_B71624B09D2E50B08E28426F6073C64CD1F308C0B79DA3DF618937205989F7405B9993E98871" );

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_9FCB1FB6608779CB46E288F8C91C8B53A317BC25CCC743236A7A0898A1354BEB6F" ) )
        var_4 = var_4 * getdvarfloat( "_encstr_ABF81F13926D08EFECA975714B3CC7C16E83FC5D146F7CAFF6746B425703DACB37" );

    wait( var_4 - 0.6 );
    scripts\cp_mp\entityheadicons::setheadicon_deleteicon( var_0 );
    var_1 delete();

    if ( isdefined( var_3 ) )
    {
        var_3.isperk_adsmarked = 0;
        var_3.ischeckingadsmarking = 0;
    }

    self notify( "_encstr_A4670E2C19E6B6C293B6EB953732958C" );
}

getlivingplayers_team( var_0 )
{
    var_1 = [];

    foreach ( var_3 in level.players )
    {
        if ( !isdefined( var_3.team ) )
            continue;

        if ( var_3 scripts\cp_mp\utility\player_utility::_isalive() && var_3.team == var_0 )
            var_1[var_1.size] = var_3;
    }

    return var_1;
}

perk_adstargetmark_disconnectcleanupthink( var_0 )
{
    scripts\engine\utility::_id_143A5( "_encstr_B116136D2889115073428FBBCD388E80B72AA8CFDC", "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    if ( isdefined( var_0 ) )
        var_0.ischeckingadsmarking = 0;
}

unsetadsmarktarget()
{
    self notify( "_encstr_B116136D2889115073428FBBCD388E80B72AA8CFDC" );
}

sethelmet()
{

}

unsethelmet()
{

}

setarmorvest()
{
    self.tookvesthit = 0;
}

unsetarmorvest()
{

}

setladder()
{

}

unsetladder()
{

}

setdoorbreach()
{
    scripts\mp\destructible::allowplayertobreach( self );
    scripts\mp\door::updatealldoorslockvisibilityforplayer( self, 1 );
}

unsetdoorbreach()
{
    scripts\mp\destructible::allowplayertobreach( self );
}

setdoorsense()
{
    if ( !isdefined( level.playerswithdoorsense ) )
        level.playerswithdoorsense = 1;
    else
        level.playerswithdoorsense = level.playerswithdoorsense + 1;
}

unsetdoorsense()
{
    level.playerswithdoorsense = level.playerswithdoorsense - 1;
}

setworsenedgunkick()
{
    updateweaponkick();
}

unsetworsenedgunkick()
{
    updateweaponkick( 1 );
}

updateweaponkick( var_0 )
{
    if ( !isdefined( self.weaponkickrecoil ) )
        self.weaponkickrecoil = 0;

    var_1 = -25;

    if ( scripts\mp\utility\perk::_hasperk( "_encstr_BD331AA8F35541FB32052DB3D18B2FABAB5FC8800BEFDBBDFA6CAEB2" ) && !istrue( var_0 ) )
    {
        if ( isdefined( self.currentweapon ) )
        {
            switch ( self.currentweapon.classname )
            {
                case "_encstr_B453063D7FBAE9C8":
                    var_1 = -20;
                    break;
                case "_encstr_BE0703815F":
                    var_1 = -20;
                    break;
            }
        }
    }
    else
        var_1 = 0;

    if ( var_1 != self.weaponkickrecoil )
    {
        scripts\mp\utility\weapon::setrecoilscale( -1 * self.weaponkickrecoil );
        scripts\mp\utility\weapon::setrecoilscale( var_1 );
        self.weaponkickrecoil = var_1;
    }
}

setkillstreaktoscorestreak()
{
    var_0 = undefined;

    if ( isdefined( self.pers["_encstr_97321FBAD093E103C07315F26A64A20E1722436FE7A32ECA29FAAF60F8A0A20FF9"] ) && self.pers["_encstr_97321FBAD093E103C07315F26A64A20E1722436FE7A32ECA29FAAF60F8A0A20FF9"] == self.lifeid )
    {
        var_0 = self.pers["_encstr_B1E418B62D8DB19BA327CA2CAD2ABDD4C6DB39ACE6E8932B2CDA"];
        self.pers["_encstr_B1E418B62D8DB19BA327CA2CAD2ABDD4C6DB39ACE6E8932B2CDA"] = undefined;
        self.pers["_encstr_97321FBAD093E103C07315F26A64A20E1722436FE7A32ECA29FAAF60F8A0A20FF9"] = undefined;
    }
    else
        var_0 = vote_player_reset( self.streakpoints );

    scripts\mp\killstreaks\killstreaks::updatestreakcosts();
    scripts\mp\killstreaks\killstreaks::setstreakpoints( var_0 );
    scripts\mp\killstreaks\killstreaks::checkstreakreward( self.streakpoints, 1 );
    scripts\mp\killstreaks\killstreaks::updatestreakmeterui();
}

unsetkillstreaktoscorestreak()
{
    self.pers["_encstr_B1E418B62D8DB19BA327CA2CAD2ABDD4C6DB39ACE6E8932B2CDA"] = self.streakpoints;
    self.pers["_encstr_97321FBAD093E103C07315F26A64A20E1722436FE7A32ECA29FAAF60F8A0A20FF9"] = self.lifeid;
    var_0 = vote_player_set( self.streakpoints );
    scripts\mp\killstreaks\killstreaks::updatestreakcosts();
    scripts\mp\killstreaks\killstreaks::setstreakpoints( var_0 );
    scripts\mp\killstreaks\killstreaks::checkstreakreward( self.streakpoints, 1 );
    scripts\mp\killstreaks\killstreaks::updatestreakmeterui();
}

vote_player_reset( var_0 )
{
    return var_0 * 125;
}

vote_player_set( var_0 )
{
    return int( var_0 / 125 );
}

_id_13137()
{
    if ( self.streakpoints <= 0 )
        self.pers["_encstr_ABCE0DD9FB0D5003417160F4FEE228"] = 1;
}

_id_13F64()
{
    if ( !istrue( level.gameended ) )
        self.pers["_encstr_ABCE0DD9FB0D5003417160F4FEE228"] = undefined;
}

setscrapweapons()
{
    if ( getdvarint( "_encstr_A870198BDFFAD020E2536345279B70C082B7B3E6475E4866AA1751" ) == 1 )
        self setclientomnvar( "_encstr_BD290FD5D27D9DC9163B9593DE4C26594E", 1 );
}

unsetscrapweapons()
{
    self setclientomnvar( "_encstr_BD290FD5D27D9DC9163B9593DE4C26594E", 0 );
}

setdooralarm()
{
    self.alarmeddoors = [];
    scripts\mp\door::updatealldoorsalarmvisibilityforplayer( self, 1 );
}

unsetdooralarm()
{
    foreach ( var_1 in self.alarmeddoors )
        var_1 scripts\mp\door::removealarmdoor( 0 );

    self.alarmeddoors = undefined;
    scripts\mp\door::updatealldoorsalarmvisibilityforplayer( self, 0 );
}

setreviveuseweapon()
{
    thread proximityrevivethink();
}

proximityrevivethink()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_9F5618B57EDFB9F1C9032B80AADB9BB6BF0B3538DF2FE1012DEA" );

    if ( !isdefined( self.proximityrevivefauxtrigger ) )
    {
        var_0 = spawnstruct();
        var_0.usetime = getdvarfloat( "_encstr_9D7E1B1C959C5BAFB659195AC6A495CEA5B35935C1569591A41647B4DB" ) * scripts\mp\utility\dvars::getwatcheddvar( "_encstr_8C0615C60BCDD1A6A3C273C829ACECA53B562A5A5B5639" );
        var_0.curprogress = 0;
        var_0.owner = undefined;
        var_0.id = "_encstr_BC4312806793533F9396F08D618B6B5BE1A340C8";
        var_0.trigger = spawnstruct();
        var_0.trigger.id = "_encstr_BC4312806793533F9396F08D618B6B5BE1A340C8";
        self.proximityrevivefauxtrigger = var_0;
    }

    var_0 = self.proximityrevivefauxtrigger;

    if ( !isdefined( self.hiddenreviveents ) )
        self.hiddenreviveents = [];

    self.canrevivewithweapon = 1;

    if ( isdefined( level.revivetriggers ) )
    {
        foreach ( var_3, var_2 in level.revivetriggers )
        {
            if ( !isdefined( self.hiddenreviveents[var_3] ) )
            {
                var_2.trigger disableplayeruse( self );
                self.hiddenreviveents[var_3] = var_2.trigger;
            }
        }
    }

    foreach ( var_3, var_2 in level.laststandreviveents )
    {
        if ( !isdefined( self.hiddenreviveents[var_3] ) )
        {
            var_2 disableplayeruse( self );
            self.hiddenreviveents[var_3] = var_2;
        }
    }

    for (;;)
    {
        var_5 = scripts\mp\utility\player::getplayersinradius( self.origin, 150, self.team, self );

        foreach ( var_7 in var_5 )
        {
            if ( istrue( var_7.inlaststand ) && !istrue( var_7.stuckinlaststand ) && !istrue( var_7.laststandhealisactive ) && !istrue( var_7 scripts\mp\playerlogic::registerpuzzleinteractions() ) && !isdefined( var_0.owner ) )
                thread proximityrevive( var_7, var_0 );
        }

        if ( isdefined( level.revivetriggers ) )
        {
            foreach ( var_10 in level.revivetriggers )
            {
                if ( var_10.ownerteam == self.team )
                {
                    if ( !istrue( var_10.trigger.owner scripts\mp\playerlogic::registerpuzzleinteractions() ) && !isdefined( var_0.owner ) )
                    {
                        if ( distancesquared( var_10.trigger.origin, self.origin ) <= 22500 )
                            thread proximityrevive( var_10.trigger.owner, var_0, var_10 );
                    }
                }
            }
        }

        wait 0.1;
    }
}

proximityrevive( var_0, var_1, var_2 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_9F5618B57EDFB9F1C9032B80AADB9BB6BF0B3538DF2FE1012DEA" );
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    var_0 endon( "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );
    var_0 scripts\mp\playerlogic::_id_1312B( 1 );
    var_1.owner = var_0;
    var_1.trigger.owner = var_0;
    thread watchproximityrevivefail( var_0, var_1, var_2 );

    if ( isdefined( var_2 ) )
    {
        var_2.trigger hide();
        var_2.trigger makeunusable();
        var_2 scripts\mp\teamrevive::revivetriggerholdonusebegin( self, 1 );
    }
    else if ( isdefined( var_0.laststandreviveent ) )
    {
        var_0.laststandreviveent hide();
        var_0.laststandreviveent makeunusable();
    }

    var_0 notify( "_encstr_989416C3014E1B0CC839DB5743123320F1AD110B681E4A62" );
    var_0 scripts\mp\utility\player::_freezecontrols( 1, undefined, "_encstr_9EF41062CB7F10ECA09383BBF15276F2DC38" );

    while ( var_1.curprogress < var_1.usetime )
    {
        if ( distancesquared( self.origin, var_0.origin ) > 90000 )
        {
            self notify( "_encstr_BE1D113827B7C3AF939567A59DB2F56658B4B1" );
            return;
        }

        scripts\mp\gameobjects::updateuiprogress( var_1, 1 );
        var_1.curprogress = var_1.curprogress + level.framedurationseconds;
        waitframe();
    }

    scripts\mp\gameobjects::updateuiprogress( var_1, 0 );
    var_0 scripts\mp\gameobjects::updateuiprogress( var_1, 0 );
    var_0 scripts\mp\utility\player::_freezecontrols( 0, undefined, "_encstr_9EF41062CB7F10ECA09383BBF15276F2DC38" );
    var_1.curprogress = 0;
    var_1.owner = undefined;
    var_1.trigger.owner = undefined;

    if ( istrue( var_0.inlaststand ) )
        var_0 notify( "_encstr_895913DD772F8B8FBB786753D0167A42CD9BA3176D" );
    else
    {
        var_2 scripts\mp\teamrevive::revivetriggerholdonuseend( self.team, self, 1, 1 );
        var_2 scripts\mp\teamrevive::revivetriggerholdonuse( self );
    }
}

watchproximityrevivefail( var_0, var_1, var_2 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_895913DD772F8B8FBB786753D0167A42CD9BA3176D" );
    var_0 endon( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
    var_3 = var_0.team;
    scripts\engine\utility::waittill_any_ents_return( self, "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3", self, "_encstr_9F5618B57EDFB9F1C9032B80AADB9BB6BF0B3538DF2FE1012DEA", self, "_encstr_BE1D113827B7C3AF939567A59DB2F56658B4B1", var_0, "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3", var_0, "_encstr_B62B1411FAD375317F6BA9359580179933903BFA4B33" );

    if ( isdefined( var_2 ) )
    {
        var_2.trigger show();
        var_2.trigger makeusable();
        var_2 scripts\mp\teamrevive::revivetriggerholdonuseend( var_3, self, 0, 1 );
    }

    if ( isdefined( var_0 ) )
    {
        var_0 scripts\mp\playerlogic::_id_1312B( 0 );
        var_0 scripts\mp\gameobjects::updateuiprogress( var_1, 0 );
        var_0 scripts\mp\utility\player::_freezecontrols( 0, undefined, "_encstr_9EF41062CB7F10ECA09383BBF15276F2DC38" );

        if ( isdefined( var_0.laststandreviveent ) )
        {
            var_0.laststandreviveent show();
            var_0.laststandreviveent makeusable();
        }

        var_0 notify( "_encstr_989416C3014E1B0CC839DB5743123320F1AD110B681E4A62" );
    }

    if ( isdefined( self ) )
    {
        var_1.owner = undefined;
        var_1.trigger.owner = undefined;
        var_1.curprogress = 0;
        scripts\mp\gameobjects::updateuiprogress( var_1, 0 );
    }
}

unsetreviveuseweapon()
{
    self notify( "_encstr_9F5618B57EDFB9F1C9032B80AADB9BB6BF0B3538DF2FE1012DEA" );
    self.canrevivewithweapon = undefined;

    foreach ( var_2, var_1 in self.hiddenreviveents )
    {
        if ( isdefined( var_1 ) && var_1.owner != self )
        {
            var_1 showtoplayer( self );
            var_1 enableplayeruse( self );
        }
    }
}

setlocationmarking()
{

}

unsetlocationmarking()
{

}

setremotedefuse()
{

}

unsetremotedefuse()
{

}

setalwaysminimap()
{
    scripts\mp\utility\player::showminimap();
}

unsetalwaysminimap()
{
    scripts\mp\utility\player::hideminimap();
}

supersprintkillrefresh_init()
{
    level._effect["_encstr_8AC415DCEA382B27EBCDC19C5AE68ED79CAC66392B9B43"] = loadfx( "_encstr_87971F3BF5D08674D39B16BA43D870F72802307DD3583762236F5B754745E8B6DA" );
    level._effect["_encstr_A4641BB95783CA9CF5CD8393D29BE8EBE456CCC9AC6E1AFA9B96EC348E"] = loadfx( "_encstr_9B0F25B31CC1C651D38237E7D880702A6D226D2BF4291968BBB093EB5866C6522FCB03B5644D23" );
}

supersprintkillrefresh_onkill()
{
    self refreshsprinttime();
}

setgasgrenaderesist()
{
    if ( scripts\cp_mp\utility\player_utility::_isalive() )
        return;

    scripts\mp\equipment\gas_grenade::gas_updateplayereffects();
}

unsetgasgrenaderesist()
{
    if ( scripts\cp_mp\utility\player_utility::_isalive() )
        return;

    scripts\mp\equipment\gas_grenade::gas_updateplayereffects();
}

setfastreloadlaunchers()
{

}

unsetfastreloadlaunchers()
{
    if ( istrue( self.fastreloadlaunchers ) )
    {
        scripts\mp\utility\perk::removeperk( "_encstr_B9FE151A83CF7E72792BC5D85FBB632B045BEBE0AF06AA" );
        self.fastreloadlaunchers = undefined;
    }
}

setreduceregendelay()
{
    self.regendelayspeed = 2;
}

unsetreduceregendelay()
{
    self.regendelayspeed = 1;
}

regendelayreduce_onkill()
{
    var_0 = scripts\cp_mp\utility\game_utility::isnightmap();
    var_1 = self isnightvisionon();
    var_2 = var_0 && !var_1;
    var_3 = scripts\engine\utility::ter_op( var_2, scripts\engine\utility::getfx( "_encstr_A4641BB95783CA9CF5CD8393D29BE8EBE456CCC9AC6E1AFA9B96EC348E" ), scripts\engine\utility::getfx( "_encstr_8AC415DCEA382B27EBCDC19C5AE68ED79CAC66392B9B43" ) );
    playfxontagforclients( var_3, self, "_encstr_A93008E0529FF7E1B73D", self );
    thread _id_12ACF();
}

_id_12ACF()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self notify( "_encstr_B8931EC995ECACE611ACD8C22F255619AED8B2BE23B26385975946A495EC59B9" );
    self endon( "_encstr_B8931EC995ECACE611ACD8C22F255619AED8B2BE23B26385975946A495EC59B9" );
    var_0 = gettime();

    while ( var_0 + 140 > gettime() )
    {
        scripts\mp\healthoverlay::reducehealthregendelay( 10000 );
        waitframe();
    }
}

_id_131B8()
{
    if ( isdefined( self.waittoopenaltbunker ) && self.waittoopenaltbunker == gettime() )
        regendelayreduce_onkill();
}

_id_13F6C()
{

}

_id_12AD0()
{
    var_0 = scripts\cp_mp\utility\game_utility::isnightmap();
    var_1 = self isnightvisionon();
    var_2 = var_0 && !var_1;
    var_3 = scripts\engine\utility::ter_op( var_2, scripts\engine\utility::getfx( "_encstr_A4641BB95783CA9CF5CD8393D29BE8EBE456CCC9AC6E1AFA9B96EC348E" ), scripts\engine\utility::getfx( "_encstr_8AC415DCEA382B27EBCDC19C5AE68ED79CAC66392B9B43" ) );
    playfxontagforclients( var_3, self, "_encstr_A93008E0529FF7E1B73D", self );
    thread _id_12ACF();
}

_id_131BA()
{
    if ( isdefined( self.tracking_max_health ) && istrue( self.tracking_max_health ) )
        _id_12AD0();
}

setreduceregendelayonobjective()
{
    updatereduceregendelayonobjective();
    thread monitorreduceregendelayonobjective();
}

unsetreduceregendelayonobjective()
{
    self notify( "_encstr_898C21AB37CD2BD1A459915D1B2B92ACB356CD88ACD8C2F23DDC7A31D4B2B1D14BECB2" );
    updatereduceregendelayonobjective( 1 );
}

monitorreduceregendelayonobjective()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_898C21AB37CD2BD1A459915D1B2B92ACB356CD88ACD8C2F23DDC7A31D4B2B1D14BECB2" );

    for (;;)
    {
        wait 0.5;
        updatereduceregendelayonobjective();
    }
}

updatereduceregendelayonobjective( var_0 )
{
    var_1 = isdefined( self.carryobject );
    var_2 = isdefined( self.touchinggameobjects ) && self.touchinggameobjects.size > 0;
    var_3 = isdefined( self.usinggameobjects ) && self.usinggameobjects.size > 0;
    var_4 = var_1 || var_2 || var_3;

    if ( var_4 && !istrue( var_0 ) )
    {
        if ( !istrue( self.isonobjective ) )
        {
            self.isonobjective = 1;
            scripts\mp\utility\perk::giveperk( "_encstr_AA6C1EDCC12B1BD2C2C6D197D7C92B3B95E6AF23CAD8C2E5AF279519D5D8CA8C" );
        }
    }
    else if ( istrue( self.isonobjective ) )
    {
        self.isonobjective = 0;
        scripts\mp\utility\perk::removeperk( "_encstr_AA6C1EDCC12B1BD2C2C6D197D7C92B3B95E6AF23CAD8C2E5AF279519D5D8CA8C" );
    }
}

setrechargeequipment()
{
    if ( !isdefined( level.perkrechargeequipmentplayers ) )
        return;

    self notify( "_encstr_A32B156EACA392B23634C2E4CE2B8AC5D54BE0B6B2E6A3" );
    level.perkrechargeequipmentplayers = scripts\engine\utility::array_add( level.perkrechargeequipmentplayers, self );
}

unsetrechargeequipment()
{
    if ( !isdefined( level.perkrechargeequipmentplayers ) )
        return;

    level.perkrechargeequipmentplayers = scripts\engine\utility::array_remove( level.perkrechargeequipmentplayers, self );
    thread rechargeequipment_clearplayer( self );
}

rechargeequipmentthink_init()
{
    level.perkrechargeequipmentplayers = [];
    var_0 = int( ceil( 0.5 / level.framedurationseconds ) );

    for (;;)
    {
        var_1 = level.perkrechargeequipmentplayers;
        var_2 = int( ceil( var_1.size / var_0 ) );

        for ( var_3 = 0; var_3 < var_0; var_3++ )
        {
            for ( var_4 = 0; var_4 < var_2; var_4++ )
            {
                var_5 = var_3 * var_2 + var_4;

                if ( var_5 > var_1.size )
                    break;

                var_6 = var_1[var_5];

                if ( !isdefined( var_6 ) )
                    continue;

                if ( !var_6 scripts\cp_mp\utility\player_utility::_isalive() || istrue( var_6.inlaststand ) || istrue( self.stuckinlaststand ) )
                    continue;

                rechargeequipment_updatestate( var_6 );
            }

            waitframe();
        }
    }
}

rechargeequipment_updatestate( var_0 )
{
    if ( !isdefined( var_0.rechargeequipmentstate ) )
    {
        var_0.rechargeequipmentstate = spawnstruct();
        var_0.rechargeequipmentstate.progress = [];
        var_0.rechargeequipmentstate.recharged = [];
    }

    rechargeequipment_updateslot( var_0, "_encstr_987F080E394BDAC2E45E" );
    rechargeequipment_updateslot( var_0, "_encstr_B98F0AC7D5B99F4DDBA8353B" );
    rechargeequipment_updateui( var_0 );
}

rechargeequipment_updateslot( var_0, var_1 )
{
    var_2 = var_0.rechargeequipmentstate;

    if ( !isdefined( var_2.progress[var_1] ) )
        var_2.progress[var_1] = 0;

    var_2.recharged[var_1] = undefined;
    var_3 = var_0 scripts\mp\equipment::getcurrentequipment( var_1 );

    if ( !isdefined( var_3 ) )
        return;

    var_4 = relic_squadlink_remove_visionset( var_3 );
    var_5 = var_0 scripts\mp\equipment::getequipmentammo( var_3 );
    var_6 = var_0 scripts\mp\equipment::getequipmentmaxammo( var_3 );
    var_7 = var_0 scripts\mp\equipment::getequipmentstartammo( var_3 );

    if ( isdefined( level.playerzombiewaittillinputreturn ) )
        var_8 = level.playerzombiewaittillinputreturn;
    else if ( var_4 == "_encstr_A4190459B2A3" )
        var_8 = scripts\engine\utility::ter_op( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25", 0.00833333, 0.02 );
    else
        var_8 = scripts\engine\utility::ter_op( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25", 0.02, 0.02 );

    if ( var_1 == "_encstr_B98F0AC7D5B99F4DDBA8353B" && var_5 < var_6 && var_7 > 1 )
        var_2.progress[var_1] = var_2.progress[var_1] + var_8 * 2;
    else if ( var_5 < var_6 )
        var_2.progress[var_1] = var_2.progress[var_1] + var_8;
    else
        var_2.progress[var_1] = 0;

    if ( var_2.progress[var_1] >= 1 )
    {
        var_0 scripts\mp\equipment::incrementequipmentslotammo( var_1, 1 );
        var_2.progress[var_1] = 0;
        var_2.recharged[var_1] = 1;
    }
}

relic_squadlink_remove_visionset( var_0 )
{
    var_1 = undefined;

    switch ( var_0 )
    {
        case "_encstr_930F1135B3F80C9BF0492A53D1B01785E065AD":
            var_1 = "_encstr_A4190459B2A3";
            break;
        default:
            var_1 = "_encstr_930E073E8FC00DDF69";
            break;
    }

    return var_1;
}

rechargeequipment_clearplayer( var_0 )
{
    var_0 endon( "_encstr_A32B156EACA392B23634C2E4CE2B8AC5D54BE0B6B2E6A3" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0.rechargeequipmentstate = undefined;
    waitframe();
    rechargeequipment_updateui( var_0 );
}

rechargeequipment_updateui( var_0 )
{
    var_1 = 0;
    var_2 = 0;
    var_3 = -1;

    if ( isdefined( var_0 ) && isdefined( var_0.rechargeequipmentstate ) )
    {
        var_0 scripts\mp\utility\stats::initpersstat( "_encstr_9B670D1AC7738BE79A3B3DE073B8F4" );
        var_4 = var_0.rechargeequipmentstate;

        if ( isdefined( var_4.progress["_encstr_987F080E394BDAC2E45E"] ) )
            var_1 = var_4.progress["_encstr_987F080E394BDAC2E45E"];

        if ( isdefined( var_4.progress["_encstr_B98F0AC7D5B99F4DDBA8353B"] ) )
            var_2 = var_4.progress["_encstr_B98F0AC7D5B99F4DDBA8353B"];

        foreach ( var_7, var_6 in var_4.recharged )
        {
            if ( var_7 == "_encstr_987F080E394BDAC2E45E" )
            {
                var_3 = var_3 + 1;
                var_0 playlocalsound( "_encstr_B82913BA96BE9C56B98EEDB1DAD763CAE834C263DC" );
                var_0 scripts\mp\utility\stats::incpersstat( "_encstr_9B670D1AC7738BE79A3B3DE073B8F4", 1 );
            }

            if ( var_7 == "_encstr_B98F0AC7D5B99F4DDBA8353B" )
            {
                var_3 = var_3 + 2;
                var_0 playlocalsound( "_encstr_8F1E1423226F438963C35FBFA8FF49798F4BEB52FF85" );
                var_0 scripts\mp\utility\stats::incpersstat( "_encstr_9B670D1AC7738BE79A3B3DE073B8F4", 1 );
            }
        }
    }

    var_0 setclientomnvar( "_encstr_BE9F1CF5CB96CB2F9928729AA9AD67BF28A77A9F553E033247B84B02A0C7", var_1 );
    var_0 setclientomnvar( "_encstr_A9BC1E57B4EBA385C6A3A58D0B36D7E4ACB10D0B4E3B95BEC1E4F69D392BCD9B", var_2 );
    var_0 setclientomnvar( "_encstr_B8C01343D73F2D7D6ECBCE038F91C00657CDB04F5B", var_3 );
    var_0 trajectoryupdateoriginandangles( "_encstr_987F080E394BDAC2E45E", var_1 );
    var_0 trajectoryupdateoriginandangles( "_encstr_B98F0AC7D5B99F4DDBA8353B", var_2 );
}

markequipment_monitorlook()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_AD33119248A5E44799975D492FE6976D21F08A" );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    if ( !isdefined( self.markequipmentstate ) )
    {
        self.markequipmentstate = spawnstruct();
        self.markequipmentstate.markingtime = 0;
        self.markequipmentstate.markingent = undefined;
        self.markequipmentstate.markedents = [];
        self.markequipmentstate.markedentindex = 0;
        self.markequipmentstate.pastmarkedents = [];
        self.markequipmentstate.pastmarkedentindex = 0;
    }

    for (;;)
    {
        self waittill( "_encstr_B98B15FBD79B8F0A37A313BEEF5F1B584EB296033CCBFA", var_0 );
        var_1 = isdefined( var_0 ) && !isdefined( self.markequipmentstate.markingent );
        self.markequipmentstate.markingent = var_0;
        self.markequipmentstate.markingtime = 0;

        if ( var_1 )
            thread markequipment_updatestate();
    }
}

markequipment_updatestate()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_AD33119248A5E44799975D492FE6976D21F08A" );
    var_0 = gettime();
    var_1 = 0;

    if ( self entityhasmark( "_encstr_A9940F6733E629B39840DD623B38C58232", self.markequipmentstate.markingent ) )
        var_1 = getdvarint( "_encstr_B8FF21485FBAA87F8BEF1D08C6026D961BC73020FF544333F21418ADDC5BB9197677F0" );
    else if ( self entityhasmark( "_encstr_B6CE0B0BB00A031B7B88355740", self.markequipmentstate.markingent ) )
        var_1 = getdvarint( "_encstr_B26C1DF3FB60D21F335D022922B3B860C8A04BD921E0AE37A0EE88D7BAF847" );
    else if ( self entityhasmark( "_encstr_BE8F0A2BB8D596386BB273A3", self.markequipmentstate.markingent ) )
        var_1 = getdvarint( "_encstr_943C1C6B1D124747C6057A563FC2EBD903B5A760439EF140BF2DCB8512F9" );
    else
    {

    }

    var_2 = var_1 * var_1;

    while ( isdefined( self.markequipmentstate.markingent ) && !istrue( self.ishacking ) )
    {
        if ( self entitymarkfilteredin( self.markequipmentstate.markingent ) )
            break;

        if ( isdefined( self.vehicle ) && self.vehicle == self.markequipmentstate.markingent )
            break;

        if ( scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_occupantisvehicledriver( self ) )
            break;

        if ( distancesquared( self.origin, self.markequipmentstate.markingent.origin ) > var_2 )
            break;

        var_3 = gettime();
        var_4 = var_3 - var_0;
        self.markequipmentstate.markingtime = self.markequipmentstate.markingtime + var_4;

        if ( !scripts\engine\utility::array_contains( self.markequipmentstate.markedents, self.markequipmentstate.markingent ) )
        {
            if ( scripts\mp\utility\player::isplayerads() )
            {
                var_5 = self.markequipmentstate.markedentindex;
                var_6 = self.markequipmentstate.markedents[var_5];

                if ( isdefined( var_6 ) )
                {
                    var_6 filterinplayermarks( undefined );
                    outlinehelper_updateentityoutline( var_6 );
                }

                if ( level.teambased )
                    self.markequipmentstate.markingent filterinplayermarks( self.team );
                else
                    self.markequipmentstate.markingent filterinplayermarks( self );

                outlinehelper_updateentityoutline( self.markequipmentstate.markingent );
                self playlocalsound( "_encstr_9D3722098FA2B1DF579E7BD2C322DFB3B00FAC813F0B054F7EF1427A68106FAE80E73514" );

                if ( level.teambased && _calloutmarkerping_predicted_timeout::_id_14126( self.markequipmentstate.markingent ) )
                {
                    self.markequipmentstate.markingent._id_13AB2 = self.team;
                    var_7 = scripts\mp\utility\player::getteamarray( self.markequipmentstate.markingent._id_13AB2 );

                    foreach ( var_9 in var_7 )
                        _calloutmarkerping_predicted_timeout::_id_14132( self.markequipmentstate.markingent, var_9 );
                }

                self.markequipmentstate.markedents[var_5] = self.markequipmentstate.markingent;
                self.markequipmentstate.markedentindex = ( var_5 + 1 ) % 999;

                if ( !scripts\engine\utility::array_contains( self.markequipmentstate.pastmarkedents, self.markequipmentstate.markingent ) )
                {
                    scripts\mp\killstreaks\killstreaks::givescoreformarktarget( 1 );
                    self.markequipmentstate.pastmarkedents[self.markequipmentstate.pastmarkedentindex] = self.markequipmentstate.markingent;
                    self.markequipmentstate.pastmarkedentindex++;
                }
                else
                    scripts\mp\killstreaks\killstreaks::givescoreformarktarget( 0 );

                thread unmarkafterduration( self.markequipmentstate.markingent );
                break;
            }
        }

        var_0 = var_3;
        waitframe();
    }

    if ( !istrue( self.ishacking ) )
    {
        self setclientomnvar( "_encstr_82370C57A5EBB92B1B57C9B4DC9D", 0 );
        self setclientomnvar( "_encstr_87B915D748EE7B5AD7AD827C18F7B1201310E743B0C3B3", 0 );
    }

    self.markequipmentstate.markingent = undefined;
    self.markequipmentstate.markingtime = 0;
}

unmarkafterduration( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_AD33119248A5E44799975D492FE6976D21F08A" );
    self endon( "_encstr_87460B6B22770F286CF57549C7" + self getentitynumber() );
    var_0 endon( "_encstr_A3750609A5E61883" );
    var_1 = getdvarint( "_encstr_A42E1DC8898B5CD7F310E2D7A04DEFAD79936848B250E9EFC5B06F9D9FFF30" );
    scripts\engine\utility::_id_143BF( var_1, "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    unmarkent( var_0 );
}

unmarkent( var_0 )
{
    var_0 filterinplayermarks( undefined );

    if ( isdefined( var_0._id_13AB2 ) )
    {
        if ( level.teambased && _calloutmarkerping_predicted_timeout::_id_14126( var_0 ) )
        {
            var_1 = scripts\mp\utility\player::getteamarray( var_0._id_13AB2 );

            foreach ( var_3 in var_1 )
                _calloutmarkerping_predicted_timeout::_id_14132( var_0, var_3 );
        }

        var_0._id_13AB2 = undefined;
    }

    if ( isdefined( self ) )
    {
        self.markequipmentstate.markedents = scripts\engine\utility::array_remove( self.markequipmentstate.markedents, var_0 );
        var_0 notify( "_encstr_87460B6B22770F286CF57549C7" + self getentitynumber() );
    }
}

setmarkequipment()
{
    if ( !level.teambased )
        return;

    self enabletargetmarks();
    thread markequipment_monitorlook();
}

unsetmarkequipment()
{
    if ( !level.teambased )
        return;

    if ( isdefined( self.markequipmentstate ) )
    {
        foreach ( var_1 in self.markequipmentstate.markedents )
        {
            if ( isdefined( var_1 ) )
                unmarkent( var_1 );
        }
    }

    self.markequipmentstate = undefined;
    self disabletargetmarks();
    self notify( "_encstr_AD33119248A5E44799975D492FE6976D21F08A" );
}

getchildoutlineents( var_0 )
{
    if ( !isdefined( var_0 ) )
        return [];

    if ( !isdefined( var_0.childoutlineents ) )
        return [ var_0 ];

    return var_0.childoutlineents;
}

outlinehelper_getallplayers( var_0, var_1 )
{
    return level.players;
}

outlinehelper_validplayer( var_0 )
{
    return 1;
}

outlinehelper_verifydata( var_0 )
{
    if ( !isdefined( var_0.getplayers ) )
        var_0.getplayers = ::outlinehelper_getallplayers;

    if ( !isdefined( var_0.validplayer ) )
        var_0.validplayer = ::outlinehelper_validplayer;

    if ( !isdefined( var_0.hudoutlineassetname ) )
        var_0.hudoutlineassetname = "_encstr_A8DD11E6837B3A8E954ED7E6EDE816E43B2BD1";

    if ( !isdefined( var_0.prioritygroup ) )
        var_0.prioritygroup = "_encstr_B40D05E05627D6";

    if ( !isdefined( var_0.waittime ) )
        var_0.waittime = 0.1;
}

outlinehelper_updateentityoutline( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_1 = var_0 getentitynumber();
        outlinehelper_disableentityoutline( var_1 );
        outlinehelper_enableentityoutline( var_0 );
    }
}

outlinehelper_enableentityoutline( var_0 )
{
    if ( !isdefined( var_0 ) )
        return;

    var_1 = var_0 getentitynumber();
    var_2 = self.entityoutlines[var_1];

    if ( isdefined( var_2 ) )
        return;

    var_3 = undefined;

    if ( self entitymarkfilteredin( var_0 ) )
    {
        var_3 = spawnstruct();
        var_3.prioritygroup = "_encstr_819E0E988F6A78AF3B5BC74572720783";
        var_3.hudoutlineassetname = "_encstr_ABAA0FEBAF7843934310893360858FDFB3";
        outlinehelper_verifydata( var_3 );
    }

    var_4 = self entitymarkfilteredin( var_0 );

    if ( self entityhasmark( "_encstr_A9940F6733E629B39840DD623B38C58232", var_0 ) )
    {
        if ( !isdefined( var_0.model ) )
            return;

        var_3 = spawnstruct();

        if ( var_4 )
        {
            var_3.prioritygroup = "_encstr_819E0E988F6A78AF3B5BC74572720783";
            var_3.hudoutlineassetname = "_encstr_943E1E5B970F3B11CD8ED9332F02CAD51339248040F8DFE3BBA5CB8FD179021A";
        }
        else
        {
            var_3.prioritygroup = "_encstr_B40D05E05627D6";
            var_3.hudoutlineassetname = "_encstr_957D2093E7300BCB1B58315AC841C65B69C51C07F21893151F40EBE29057B1CF2D36";
        }

        outlinehelper_verifydata( var_3 );
    }
    else if ( self entityhasmark( "_encstr_B6CE0B0BB00A031B7B88355740", var_0 ) )
    {
        if ( !isdefined( var_0.model ) )
            return;

        var_3 = spawnstruct();

        if ( var_4 )
        {
            var_3.prioritygroup = "_encstr_819E0E988F6A78AF3B5BC74572720783";
            var_3.hudoutlineassetname = "_encstr_93441A63127FB02D4AEB97D9BF63FC701CA1E8B8BDD450E5D39FE3EF";
        }
        else
        {
            var_3.prioritygroup = "_encstr_B40D05E05627D6";
            var_3.hudoutlineassetname = "_encstr_B3111CCBA31FA538CFE2375D1773686ED76AA3F6BA5FD1B062DC75B3019C";
        }

        outlinehelper_verifydata( var_3 );
    }
    else if ( self entityhasmark( "_encstr_BE8F0A2BB8D596386BB273A3", var_0 ) )
    {
        var_3 = spawnstruct();

        if ( var_4 )
        {
            var_3.prioritygroup = "_encstr_819E0E988F6A78AF3B5BC74572720783";
            var_3.hudoutlineassetname = "_encstr_95BF19EBB110D4B3C53501B803AA0FAD5D4F21CB702CA3E313CD1B";
        }
        else
        {
            var_3.prioritygroup = "_encstr_B40D05E05627D6";
            var_3.hudoutlineassetname = "_encstr_BEF91B3FA80D70F55FE356785A732718A71589EF2572B0B3330A6960D3";
        }

        outlinehelper_verifydata( var_3 );
    }

    if ( isdefined( var_3 ) )
    {
        var_2 = spawnstruct();
        self.entityoutlines[var_1] = var_2;
        var_2.list = [];
        var_2.ent = var_0;
        var_5 = getchildoutlineents( var_0 );

        foreach ( var_7 in var_5 )
        {
            var_8 = scripts\mp\utility\outline::outlineenableforplayer( var_7, self, var_3.hudoutlineassetname, var_3.prioritygroup );
            var_9 = spawnstruct();
            var_9.ent = var_7;
            var_9.id = var_8;
            var_10 = var_7 getentitynumber();
            var_2.list[var_10] = var_9;
        }
    }
}

outlinehelper_disableentityoutline( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_1 = self.entityoutlines[var_0];

        if ( isdefined( var_1 ) )
        {
            foreach ( var_3 in var_1.list )
                scripts\mp\utility\outline::outlinedisable( var_3.id, var_3.ent );

            self.entityoutlines[var_0] = undefined;
        }
    }
}

_id_11B0B( var_0, var_1 )
{
    var_2 = [];

    foreach ( var_4 in var_0 )
    {
        if ( !isdefined( var_4 ) )
            continue;

        var_5 = var_4 getentitynumber();

        if ( !scripts\engine\utility::array_contains( var_1, var_5 ) )
            var_2[var_2.size] = var_4;
    }

    return var_2;
}

markedentities_think()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self.entityoutlines = [];

    for (;;)
    {
        self waittill( "_encstr_B11F0EFF40033B63E7EE7C36404FDAFC", var_0, var_1, var_2 );

        if ( isdefined( var_0 ) )
        {
            foreach ( var_4 in var_0 )
                outlinehelper_disableentityoutline( var_4 );

            if ( isdefined( self.markequipmentstate ) )
            {
                self.markequipmentstate.markedents = _id_11B0B( self.markequipmentstate.markedents, var_0 );

                if ( self.markequipmentstate.markedentindex > self.markequipmentstate.markedents.size )
                    self.markequipmentstate.markedentindex = self.markequipmentstate.markedents.size;
            }
        }

        if ( isdefined( var_1 ) )
        {
            foreach ( var_7 in var_1 )
                outlinehelper_disableentityoutline( var_7 );
        }

        if ( isdefined( var_2 ) )
        {
            foreach ( var_10 in var_2 )
                outlinehelper_enableentityoutline( var_10 );
        }
    }
}

_id_1312C()
{
    self notify( "_encstr_AF082486990357E34849F127A030FF5371357A67B243F7F83F327A2FC97BA1E3D0D326B7859C" );
    self.should_drop_scavenger_bag = 1;
    _id_14022( self.team );
    thread ks_airdroppercircle();
}

_id_13F63()
{

}

ks_airdroppercircle()
{
    var_0 = self.team;
    self endon( "_encstr_AF082486990357E34849F127A030FF5371357A67B243F7F83F327A2FC97BA1E3D0D326B7859C" );
    scripts\engine\utility::_id_143A5( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C", "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( isdefined( self ) )
        self.should_drop_scavenger_bag = undefined;

    _id_14022( var_0 );
}

_id_14022( var_0 )
{
    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" )
        return;

    var_1 = _encstr_A83527375FF36358943A0858E22728AFFAAFA1ABAB2A36DADA520ED34B55D05D71772933B3C6F4F0F3::rewardangles( var_0 );

    if ( !isdefined( level.clearlethalonunresolvedcollision ) )
        level.clearlethalonunresolvedcollision = [];

    var_2 = 0;

    if ( isdefined( level.clearlethalonunresolvedcollision[var_0] ) )
        var_2 = level.clearlethalonunresolvedcollision[var_0];

    var_3 = var_1 - var_2;

    if ( var_3 != 0 )
        _encstr_A83527375FF36358943A0858E22728AFFAAFA1ABAB2A36DADA520ED34B55D05D71772933B3C6F4F0F3::battletracksmusicstate( var_0, var_3 );

    level.clearlethalonunresolvedcollision[var_0] = var_1;
}

_id_131C2()
{
    self clearvehicleturretsticker( 1 );

    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" )
        self setclientomnvar( "_encstr_A35A1B1B22CF1628FFC34B53E424E85D276AD0E04BC758E816CC736515", 1 );
}

_id_13F6E()
{
    self clearvehicleturretsticker( 0 );

    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" )
        self setclientomnvar( "_encstr_A35A1B1B22CF1628FFC34B53E424E85D276AD0E04BC758E816CC736515", 0 );
}

_id_13199()
{
    self._id_12369 = spawnstruct();
    self._id_12369._id_13A72 = [];
    self._id_12369.targetids = [];
    self._id_12369._id_12367 = [];
    self._id_12369.instant_revived = 0;

    for ( var_0 = 0; var_0 < 4; var_0++ )
        self._id_12369._id_12367[var_0] = -1;
}

maxmuncurrencycap( var_0 )
{
    if ( !isdefined( var_0 ) || !scripts\mp\utility\player::isreallyalive( var_0 ) )
        return;

    if ( var_0.team == self.team )
        return;

    if ( isdefined( self._id_12369 ) )
    {
        _id_1236A( var_0 );
        _id_1236B( var_0 );
        var_0._id_13A70 = 1;
    }
}

_id_1236A( var_0 )
{
    var_1 = "_encstr_ABA815F02D19EFD44FF89A8128AB0EDBD69941624A414B";
    var_2 = 8;
    var_3 = 1;
    var_4 = 0;
    var_5 = 500;

    if ( isdefined( var_0._id_13A70 ) )
        return;

    var_6 = self._id_12369._id_13A72[var_0 getentitynumber()];

    if ( !isdefined( var_6 ) )
    {
        self._id_12369._id_13A72[var_0 getentitynumber()] = var_0;
        var_6 = var_0;
        var_7 = self._id_12369.instant_revived;
        self._id_12369.instant_revived = ( self._id_12369.instant_revived + 1 ) % 4;

        if ( isdefined( self._id_12369._id_13A72[self._id_12369._id_12367[var_7]] ) )
        {
            var_8 = self._id_12369._id_13A72[self._id_12369._id_12367[var_7]];
            self._id_12369._id_12367[var_7] = -1;
            var_8 thread _id_1236D( var_8, var_8.headicon );
            thread _id_12372( var_8 );
        }

        self._id_12369._id_12367[var_7] = var_0 getentitynumber();
        var_9 = _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::round_enemy_stuck_logic( self.team, self.squadindex );
        var_6.headicon = var_0 scripts\cp_mp\entityheadicons::setheadicon_singleimage( var_9, var_1, var_2, var_3, var_4, var_5, undefined, 1, 1 );
        self playlocalsound( "_encstr_959F1F269CEB1CCA27B6D75823EC85378DCA32BEB9D8ED571DFADA8539B52DCDCE", self );
        _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_1276A( "_encstr_959F1F269CEB1CCA27B6D75823EC85378DCA32BEB9D8ED571DFADA8539B52DCDCE", self.team, var_0 );
        var_0 thread _id_1236F( var_0, var_6.headicon );
        thread _id_12373( var_0 );
    }
}

_id_1236B( var_0 )
{
    var_1 = scripts\mp\utility\outline::outlineenableforplayer( var_0, self, "_encstr_872E1B50979C204B0E3A5752638DB806B0ABCF570B0B01A5826AC2346B", "_encstr_B40D05E05627D6" );
    var_0 scripts\mp\utility\outline::_hudoutlineviewmodelenable( "_encstr_B61510205AE621AB6BBFED6C9A6730CB0F72", 0 );

    if ( !isdefined( var_0._id_13A70 ) )
        var_0 playlocalsound( "_encstr_A4C5226170C7228778CA8E79DC3BB915E74D0C895F6E85B385E7B337838BC05CD1C3BDD3" );

    var_0 thread _id_12371( var_1, var_0 );
}

_id_1236F( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_2 = var_0 getentitynumber();
    var_0 endon( "_encstr_8B57109C59D6B7CEB212562C8C928DB79BFA" + var_2 );
    var_0 scripts\engine\utility::waittill_notify_or_timeout( "_encstr_A3750609A5E61883", 3.0 );
    scripts\cp_mp\entityheadicons::setheadicon_deleteicon( var_1 );
}

_id_12373( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_B6EA1751D93590A71BD8B92092E7DD410F29FFC1719BF8E55F" );
    var_1 = var_0 getentitynumber();
    self endon( "_encstr_ADC80EE23D20371B4B51922B11B3153F" + var_1 );
    var_0 scripts\engine\utility::waittill_notify_or_timeout( "_encstr_A3750609A5E61883", 3.0 );

    if ( isdefined( self._id_12369 ) && isdefined( self._id_12369._id_13A72 ) )
    {
        var_2 = self._id_12369._id_13A72[var_1];

        if ( isdefined( var_2 ) )
        {
            var_0._id_13A70 = undefined;
            self._id_12369._id_13A72[var_1] = undefined;
        }
    }

    foreach ( var_5, var_4 in self._id_12369._id_12367 )
    {
        if ( var_4 == var_1 )
        {
            self._id_12369._id_12367[var_5] = -1;
            return;
        }
    }
}

_id_1236D( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_2 = var_0 getentitynumber();
    var_0 notify( "_encstr_8B57109C59D6B7CEB212562C8C928DB79BFA" + var_2 );
    scripts\cp_mp\entityheadicons::setheadicon_deleteicon( var_1 );
}

_id_12372( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_B6EA1751D93590A71BD8B92092E7DD410F29FFC1719BF8E55F" );
    var_1 = var_0 getentitynumber();
    self notify( "_encstr_ADC80EE23D20371B4B51922B11B3153F" + var_1 );

    if ( isdefined( self._id_12369 ) && isdefined( self._id_12369._id_13A72 ) )
    {
        var_2 = self._id_12369._id_13A72[var_1];

        if ( isdefined( var_2 ) )
        {
            var_0._id_13A70 = undefined;
            self._id_12369._id_13A72[var_1] = undefined;
        }
    }
}

_id_12371( var_0, var_1 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    var_1 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_1 scripts\engine\utility::waittill_notify_or_timeout( "_encstr_A3750609A5E61883", 0.6 );
    scripts\mp\utility\outline::outlinedisable( var_0, var_1 );
    var_1 scripts\mp\utility\outline::_hudoutlineviewmodeldisable();
}

_id_12374()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( isdefined( self._id_11B14 ) )
        return;

    self._id_11B14 = 1;
    self iprintlnbold( &"_encstr_BE8820CA3CA8F10F341379416F6BC6B18095DD4E1DE13BF5C74BA131174F5C5B994C" );
    self playlocalsound( "_encstr_A3852A8D83B977782A848E416FF680A09227096F2FC2B0B04491F05912C388E88A67DD93B70A06405732D833", self );
    wait 1.0;
    self._id_11B14 = undefined;
}

_id_13F69()
{
    if ( isdefined( self._id_12369._id_13A72 ) && self._id_12369._id_13A72.size > 0 )
    {
        foreach ( var_1 in self._id_12369._id_13A72 )
            thread _id_12372( var_1 );
    }

    self._id_12369 = undefined;
    self notify( "_encstr_B6EA1751D93590A71BD8B92092E7DD410F29FFC1719BF8E55F" );
}

_id_121B7( var_0 )
{
    var_1 = _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::round_at_max( self.team, self.squadindex, "_encstr_B45019337F2966689DB679169A75501052FFB5A7E7C23828A54A80" );

    if ( !isdefined( var_1 ) )
        var_1 = 0;

    var_2 = scripts\engine\utility::ter_op( isdefined( self.pers["_encstr_9B3E1132C34089A2791367430B8E38CEB02968"] ), self.pers["_encstr_9B3E1132C34089A2791367430B8E38CEB02968"] - 1, 0 );
    var_3 = 1 << var_2;
    var_4 = scripts\engine\utility::ter_op( istrue( var_0 ), var_1 | var_3, var_1 ^ var_3 );
    _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::_id_131C3( self.team, self.squadindex, "_encstr_B45019337F2966689DB679169A75501052FFB5A7E7C23828A54A80", var_4 );
    var_5 = _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::round_enemy_stuck_logic( self.team, self.squadindex );

    foreach ( var_7 in var_5 )
        var_7 setclientomnvar( "_encstr_B45019337F2966689DB679169A75501052FFB5A7E7C23828A54A80", var_4 );
}

_id_13928()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_A3750609A5E61883" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( !self isonground() )
    {
        self waittill( "_encstr_8A12134C2C429940051FE058871FB9EBCA564C5DC7" );

        if ( istrue( self.instantclassswapallowed ) )
            scripts\mp\class::disableclassswapallowed();
    }
}

_id_131C5()
{
    if ( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::unset_relic_aggressive_melee( "_encstr_9BB6062FDE751D33" ) )
        return;

    thread _id_13928();
    _encstr_BD96220B5106E75AE8B7770D890AA70F2109F353DB5537C530DD0F0965F06D1BF8E11B7A::searchcirclesize( 1 );
    _id_121B7( 1 );
}

_id_13F6F()
{
    if ( _encstr_AD64266E6CE44B1CD19B97B53897D9B0B62B1DBC389537F2139CBE7658D6AC8E2F3895DC17B3DC8D::unset_relic_aggressive_melee( "_encstr_9BB6062FDE751D33" ) )
        return;

    if ( istrue( self.instantclassswapallowed ) )
        _encstr_BD96220B5106E75AE8B7770D890AA70F2109F353DB5537C530DD0F0965F06D1BF8E11B7A::searchcirclesize( 0 );

    _id_121B7( 0 );
}

_id_13716()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( isdefined( self._id_11B14 ) )
        return;

    self._id_11B14 = 1;
    self iprintlnbold( &"_encstr_B4C51EBB23523FD96717E98226A68E77E5A2C7536911D740C9271571677B03B0" );
    self playlocalsound( "_encstr_A3852A8D83B977782A848E416FF680A09227096F2FC2B0B04491F05912C388E88A67DD93B70A06405732D833", self );
    wait 1.0;
    self._id_11B14 = undefined;
}
