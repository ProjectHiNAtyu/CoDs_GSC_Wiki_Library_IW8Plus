// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level scripts\mp\utility\lui_game_event_aggregator::registeronluieventcallback( ::onversusdone );
}

timeuntilwavespawn( var_0 )
{
    if ( !self.hasspawned )
        return 0;

    var_1 = gettime() + var_0 * 1000;
    var_2 = level.lastwave[self.pers["_encstr_89EF05D46BA8FD"]];
    var_3 = level.wavedelay[self.pers["_encstr_89EF05D46BA8FD"]] * 1000;
    var_4 = ( var_1 - var_2 ) / var_3;
    var_5 = ceil( var_4 );
    var_6 = var_2 + var_5 * var_3;

    if ( isdefined( self.respawntimerstarttime ) )
    {
        var_7 = ( gettime() - self.respawntimerstarttime ) / 1000.0;

        if ( self.respawntimerstarttime < var_2 )
            return 0;
    }

    if ( isdefined( self.wavespawnindex ) )
        var_6 = var_6 + 50 * self.wavespawnindex;

    return ( var_6 - gettime() ) / 1000;
}

teamkilldelay()
{
    var_0 = self.pers["_encstr_879C0AA323D24A27248A899B"];

    if ( !isdefined( var_0 ) || level.maxallowedteamkills < 0 || var_0 <= level.maxallowedteamkills )
        return 0;

    var_1 = var_0 - level.maxallowedteamkills;
    return scripts\mp\tweakables::gettweakablevalue( "_encstr_89EF05D46BA8FD", "_encstr_B3D513A47DE17F1C13D8729B205B533BF9D534298B" ) * var_1;
}

timeuntilspawn( var_0 )
{
    if ( level.ingraceperiod && !self.hasspawned || level.gameended )
        return 0;

    var_1 = 0;

    if ( self.hasspawned )
    {
        var_2 = self [[ level.onrespawndelay ]]();

        if ( isdefined( var_2 ) )
            var_1 = var_2;
        else
            var_1 = getdvarfloat( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_B41314BEC18D165E56E4E459E61C0BEEE6322B3658CB" );

        if ( var_0 && isdefined( self.pers["_encstr_A2ED0F7B8081DDB46B89DDDA6D3D7A8B08"] ) && self.pers["_encstr_A2ED0F7B8081DDB46B89DDDA6D3D7A8B08"] )
            var_1 = var_1 + teamkilldelay();

        if ( isdefined( self.suicidespawndelay ) )
            var_1 = var_1 + getdvarfloat( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_A1B61370028B0BB9B95BE82073C9734DC22F51E718" );

        if ( isdefined( self.respawntimerstarttime ) && !isdefined( level.spawndelay ) )
        {
            var_3 = ( gettime() - self.respawntimerstarttime ) / 1000.0;
            var_1 = var_1 - var_3;

            if ( var_1 < 0 )
                var_1 = 0;
        }

        if ( isdefined( self.setspawnpoint ) )
            var_1 = var_1 + level.tispawndelay;
    }

    var_4 = getdvarint( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_939F12F5BB58EC5927566E07C2EE9B46951BC2CB" ) > 0;

    if ( var_4 )
        var_1 = timeuntilwavespawn( var_1 );

    if ( level.ingraceperiod && !self.hasspawned || level.gameended )
        var_1 = 0;
    else if ( getdvarint( "_encstr_810915670FA32890FD8F76C9F6D5E8F6CA9731C3937B8C", 0 ) == 1 )
        var_1 = 999.0;

    if ( !isdefined( self.tiers ) )
        self.tiers = var_1;

    return var_1;
}

isdevelopmentspawningofbotclient( var_0 )
{
    return 0;
}

mayspawn()
{
    if ( istrue( level.nukegameover ) )
        return 0;

    if ( scripts\mp\utility\game::getgametypenumlives() || isdefined( level.disablespawning ) )
    {
        if ( isdefined( level.teamswithplayers ) && level.teamswithplayers.size == 1 )
            return 1;

        if ( istrue( level.disablespawning ) )
        {
            if ( !isdevelopmentspawningofbotclient( self ) )
                return 0;
        }

        if ( istrue( self.pers["_encstr_A2ED0F7B8081DDB46B89DDDA6D3D7A8B08"] ) )
            return 0;

        if ( self.pers["_encstr_A2AA0636969D2BE6"] <= 0 && scripts\mp\utility\game::gamehasstarted() )
            return 0;
        else if ( scripts\mp\utility\game::gamehasstarted() )
        {
            if ( level.ingraceperiod && !self.hasspawned )
                return 1;

            if ( !level.ingraceperiod && !self.hasspawned && ( isdefined( level.allowlatecomers ) && !level.allowlatecomers ) )
            {
                if ( isdefined( self.siegelatecomer ) && !self.siegelatecomer )
                    return 1;

                if ( isdevelopmentspawningofbotclient( self ) )
                    return 1;

                return 0;
            }
        }
    }

    if ( isdefined( level.loadoutdrop ) && [[ level.loadoutdrop ]]( self ) )
        return 0;

    return 1;
}

spawnclient( var_0 )
{
    self endon( "_encstr_95A410981FEBA95B2AA257D586138BB35FEB" );

    if ( isdefined( level._id_11C84 ) )
    {
        self [[ level._id_11C84 ]]( var_0 );
        return;
    }

    if ( isdefined( self.pers["_encstr_9E4311DCCA87E8F593B75DE691BE6C362CE66E"] ) && !self.hasspawned )
        self.class = self.pers["_encstr_9E4311DCCA87E8F593B75DE691BE6C362CE66E"];

    if ( isdefined( self.waitingtoselectclass ) && self.waitingtoselectclass )
        self waittill( "_encstr_95490A804AEBDF6FCB71AC28" );

    if ( isdefined( self.addtoteam ) )
    {
        scripts\mp\menus::addtoteam( self.addtoteam );
        self.addtoteam = undefined;
    }

    if ( !mayspawn() )
    {
        waitframe();
        var_1 = self.origin;
        var_2 = self.angles;
        self notify( "_encstr_886B100FA3FB7318C07B88B8EFFB73B313CD" );

        if ( istrue( self.pers["_encstr_A2ED0F7B8081DDB46B89DDDA6D3D7A8B08"] ) )
        {
            self.pers["_encstr_879C0AA323D24A27248A899B"] = max( self.pers["_encstr_879C0AA323D24A27248A899B"] - 1, 0 );
            scripts\mp\utility\lower_message::setlowermessageomnvar( 24 );

            if ( !self.hasspawned && self.pers["_encstr_879C0AA323D24A27248A899B"] <= level.maxallowedteamkills )
                self.pers["_encstr_A2ED0F7B8081DDB46B89DDDA6D3D7A8B08"] = 0;
        }
        else if ( scripts\mp\utility\game::isroundbased() && game["_encstr_B4DF0BAA398619B80A80DB6EFD"] == 0 || scripts\mp\utility\game::getgametypenumlives() != 0 && game["_encstr_B4DF0BAA398619B80A80DB6EFD"] == 0 || istrue( level.disablespawning ) )
        {
            var_3 = undefined;

            if ( scripts\mp\utility\game::getgametype() != "_encstr_9DB606854E567385" && isdefined( self.tagavailable ) && self.tagavailable )
                scripts\mp\utility\lower_message::setlowermessageomnvar( 8 );
            else if ( istrue( self.revivetriggerblockedinremote ) && level.teamdata[self.team]["_encstr_892A0BA3D3F25C4033ADD34893"] > 0 )
                scripts\mp\utility\lower_message::setlowermessageomnvar( 64 );
            else if ( istrue( self.revivetriggeravailable ) )
            {
                if ( isdefined( self.timeuntilbleedout ) )
                {
                    if ( isdefined( self.rallypoint ) )
                        scripts\mp\utility\lower_message::setlowermessageomnvar( 25, int( gettime() + self.timeuntilbleedout * 1000 ) );
                    else if ( !istrue( self.eliminated ) )
                        scripts\mp\utility\lower_message::setlowermessageomnvar( 6, int( gettime() + self.timeuntilbleedout * 1000 ) );
                }
                else if ( level.teamdata[self.team]["_encstr_892A0BA3D3F25C4033ADD34893"] > 0 )
                    scripts\mp\utility\lower_message::setlowermessageomnvar( 64 );
                else
                    scripts\mp\utility\lower_message::setlowermessageomnvar( 2 );
            }
            else if ( scripts\mp\utility\game::getgametype() == "_encstr_B14F0606E93B7FC3" )
            {
                scripts\mp\utility\lower_message::setlowermessageomnvar( 4 );
                var_3 = 10;
            }
            else if ( istrue( level.exfilstarted ) )
                scripts\mp\utility\lower_message::setlowermessageomnvar( 26 );
            else if ( scripts\mp\utility\game::isroundbased() )
                scripts\mp\utility\lower_message::setlowermessageomnvar( 2 );
            else if ( scripts\mp\utility\game::getgametype() == "_encstr_821904A71BD0" && scripts\mp\utility\game::matchmakinggame() )
            {
                scripts\mp\utility\lower_message::setlowermessageomnvar( 78 );
                var_3 = 30;
            }
            else
            {
                scripts\mp\utility\lower_message::setlowermessageomnvar( 18 );
                var_3 = 10;
            }

            if ( !isdefined( self.revivetriggeravailable ) )
                thread removespawnmessageshortly( scripts\engine\utility::ter_op( isdefined( var_3 ), var_3, 6.0 ) );
        }

        if ( self.sessionstate != "_encstr_A68C0A5803A5D151A2B310A6" )
            var_1 = var_1 + ( 0, 0, 60 );

        if ( scripts\mp\utility\player::isusingremote() )
        {
            self.spawningafterremotedeath = 1;
            self.deathposition = self.origin;
            self waittill( "_encstr_B1D215D3FB078F30F7CC1F73E3DC08DC1F73E998D2C34D" );
        }

        if ( !istrue( level.nukegameover ) )
        {
            if ( !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
                logstring( "_encstr_94F73BB4E9BB010AC2BDE50B43E85A6D7FF02F1C90CBC2CA6EC1553F2C36B83F6FBB60894A9F1D02C2CA5BB3210BF08B12F25BC8A6737F409BB57D1508" + self.name );

            thread spawnspectator( var_1, var_2 );
        }

        return;
    }

    if ( self.waitingtospawn )
        return;

    self.waitingtospawn = 1;
    waitandspawnclient( var_0 );

    if ( isdefined( self ) )
        self.waitingtospawn = 0;
}

waittillcanspawnclient( var_0 )
{
    self endon( "_encstr_8F1614200C576863C761B17F2817CB5549E902CA9D42" );

    for (;;)
    {
        waitframe();

        if ( self.team == "_encstr_A68C0A5803A5D151A2B310A6" || self.team == "_encstr_B33E0979A77828123F58A2" )
            return;

        if ( isdefined( self ) && ( self.sessionstate == "_encstr_A68C0A5803A5D151A2B310A6" || !scripts\mp\utility\player::isreallyalive( self ) ) )
        {
            if ( istrue( var_0 ) )
                self.pers["_encstr_A2ED0F7B8081DDB46B89DDDA6D3D7A8B08"] = 0;

            self.pers["_encstr_A2AA0636969D2BE6"] = 1;
            thread spawnclient( var_0 );
            continue;
        }

        return;
    }
}

waitandspawnclient( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_A2BF0CF1C504995E3ABF99435772" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self notify( "_encstr_886B100FA3FB7318C07B88B8EFFB73B313CD" );

    if ( isdefined( level._id_12888 ) )
        [[ level._id_12888 ]]( var_0 );

    _id_1437C();
    var_1 = 0;

    if ( istrue( self.pers["_encstr_A2ED0F7B8081DDB46B89DDDA6D3D7A8B08"] ) )
    {
        var_2 = teamkilldelay();

        if ( var_2 > 0 )
        {
            scripts\mp\utility\lower_message::setlowermessageomnvar( 65, int( gettime() + var_2 * 1000 ) );
            thread respawn_asspectator( self.origin + ( 0, 0, 60 ), self.angles );
            var_1 = 1;
            wait( var_2 );
            scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
            self.respawntimerstarttime = gettime();
        }

        self.pers["_encstr_A2ED0F7B8081DDB46B89DDDA6D3D7A8B08"] = 0;
    }
    else if ( teamkilldelay() )
        self.pers["_encstr_879C0AA323D24A27248A899B"] = max( self.pers["_encstr_879C0AA323D24A27248A899B"] - 1, 0 );

    if ( !isdefined( self.wavespawnindex ) && isdefined( level.waveplayerspawnindex[self.team] ) )
    {
        self.wavespawnindex = level.waveplayerspawnindex[self.team];
        level.waveplayerspawnindex[self.team]++;
    }

    if ( isdefined( self.setspawnpoint ) && !tivalidationcheck() )
        scripts\mp\equipment\tac_insert::_id_13681( 1 );

    var_3 = timeuntilspawn( 0 );
    var_4 = 0.0;

    if ( !istrue( level.loadoutdefaultfiresalediscount ) )
        var_4 = scripts\engine\utility::ter_op( istrue( level.snaptospawncamera ), 1.25, 2.0 );

    if ( istrue( level.usespawnselection ) )
        var_4 = 0.5;

    if ( level.ingraceperiod && !self.hasspawned || level.gameended )
    {
        var_4 = 0;
        var_3 = 0;
    }

    var_5 = 0;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_BA07038803" && isdefined( level.zone ) && level.zone.ownerteam == self.team )
        var_5 = 1;

    if ( !istrue( self.skippedkillcam ) && isdefined( self.killcamwatchtime ) && !var_5 )
    {
        if ( isdefined( self.tiers ) )
            var_3 = max( self.tiers - self.killcamwatchtime, 0 );
        else
            var_3 = max( var_3 - self.killcamwatchtime, 0 );

        self.killcamwatchtime = undefined;
    }

    if ( isdefined( self.setspawnpoint ) )
    {
        var_4 = 0;
        var_3 = 0;
    }

    var_3 = max( var_3, var_4 );

    if ( scripts\mp\arbitrary_up::isinarbitraryup() )
    {
        var_6 = self getworldupreferenceangles();
        var_7 = anglestoup( var_6 );
        var_8 = var_7 * 60;
    }
    else
        var_8 = ( 0, 0, 60 );

    var_9 = istrue( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) );
    var_10 = scripts\mp\flags::gameflag( "_encstr_B87F0F4428EDB244C6889FF328BE123BA5" ) && !istrue( scripts\mp\flags::gameflag( "_encstr_A20D0EF9B8412F9D3FE0337AF0B117D3" ) );

    if ( scripts\mp\utility\game::getgametype() == "_encstr_BD19047616EB" && !var_10 && !var_9 )
    {
        var_11 = _encstr_8CD91D80976A38F14BDA6841F21617E1AD27A358431533172282B1F80F8B67::getmissedinfilcamerapositions( self.team );
        var_12 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_11.startorigin );
        var_12 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
        var_12.angles = var_11.startangles;
        self cameralinkto( var_12, "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
        var_12 moveto( var_11.endorigin, 18 );
        var_12 rotateto( var_11.endangles, 18 );
        scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
        var_9 = 1;
        self cameraunlink();
    }

    if ( !istrue( level.loadoutdefaultfiresalediscount ) && var_9 && !istrue( self.skipspawncamera ) && !istrue( level.usespawnselection ) && var_3 > 0 )
        thread scripts\mp\spawncamera::startspawncamera();

    if ( istrue( level.usespawnselection ) && !isdefined( self.setspawnpoint ) )
        scripts\mp\spawnselection::waitforspawnselection( var_3, !istrue( var_9 ) );
    else if ( var_3 > 0 )
    {
        var_13 = 9;

        if ( scripts\mp\utility\game::getgametype() == "_encstr_BA07038803" )
        {
            if ( isdefined( level.zone ) )
            {
                if ( level.zone.ownerteam == self.team )
                {
                    scripts\mp\utility\dialog::leaderdialogonplayer( "_encstr_A2EB080B2846D4E27B8D" );
                    var_13 = 30;

                    if ( isdefined( self.suicidespawndelay ) )
                    {
                        var_3 = var_3 - getdvarfloat( "_encstr_894619530AF398707277C7F379DEB0DD77E3CB99D32B4D404D21DB" );
                        var_3 = max( 0, var_3 );
                    }
                }
                else if ( isdefined( self.suicidespawndelay ) && getdvarfloat( "_encstr_894619530AF398707277C7F379DEB0DD77E3CB99D32B4D404D21DB" ) > 0 && level.zone.ownerteam == "_encstr_9BA4080D39CFFB5AB7C1" )
                {
                    var_13 = 31;
                    self.suicidespawndelay = undefined;
                }
            }
        }
        else if ( isdefined( self.suicidespawndelay ) && getdvarfloat( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_A1B61370028B0BB9B95BE82073C9734DC22F51E718" ) > 0 )
        {
            var_13 = 31;
            self.suicidespawndelay = undefined;
        }

        scripts\mp\utility\lower_message::setlowermessageomnvar( var_13, int( gettime() + var_3 * 1000 ) );

        if ( !var_1 )
            thread respawn_asspectator( self.origin + var_8, self.angles );

        var_1 = 1;
        scripts\engine\utility::_id_143BF( var_3, "_encstr_AFD50C2238A5E6AFDE965841ACC0" );

        if ( !istrue( self.waitingtoselectclass ) )
            self notify( "_encstr_98CC1C4AAD479BFF4BA0176B39A3B9823B50D2029FAFB23731387B13A038" );
    }

    if ( needsbuttontorespawn() )
    {
        if ( !istrue( self.waitingtoselectclass ) )
            scripts\mp\utility\lower_message::setlowermessageomnvar( 1 );

        if ( !var_1 )
            thread respawn_asspectator( self.origin + var_8, self.angles );

        var_1 = 1;
        waitrespawnbutton();
    }

    if ( !istrue( level.loadoutdefaultfiresalediscount ) || scripts\mp\utility\game::getgametype() == "_encstr_BD19047616EB" )
        thread scripts\mp\spawncamera::endspawncamera();

    waitclassselected();

    if ( isbot( self ) )
    {
        if ( !scripts\mp\bots\bots::bot_is_ready_to_spawn() )
            self waittill( "_encstr_B7EA13159863F9E22A8E291711A3D840B2B84ECCC0" );
    }

    self.waitingtospawn = 0;
    scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
    self.wavespawnindex = undefined;
    thread spawnplayer( undefined, var_0 );
}

_id_1437C()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( scripts\mp\utility\player::isusingremote() )
    {
        self.spawningafterremotedeath = 1;
        self.deathposition = self.origin;
        self waittill( "_encstr_B1D215D3FB078F30F7CC1F73E3DC08DC1F73E998D2C34D" );

        if ( istrue( level.nukegameover ) )
            return;
    }
}

shouldwaitforsquadspawn()
{
    return 0;
}

queueclientforsquadspawn()
{
    while ( !level.squaddata[self.team][self.squadindex].isfull && !level.squaddata[self.team][self.squadindex].isstale )
        waitframe();
}

waitclassselected()
{
    while ( istrue( self.waitingtoselectclass ) )
        waitframe();
}

needsbuttontorespawn()
{
    if ( scripts\mp\tweakables::gettweakablevalue( "_encstr_AAB0079B102F47FF38", "_encstr_BD6B0D67EFF3E67770BD6280530775" ) != 0 )
        return 0;

    if ( !self.hasspawned )
        return 0;

    var_0 = getdvarint( "_encstr_A61805573F9318" + scripts\mp\utility\game::getgametype() + "_encstr_939F12F5BB58EC5927566E07C2EE9B46951BC2CB" ) > 0;

    if ( var_0 )
        return 0;

    if ( self.wantsafespawn )
        return 0;

    return 1;
}

waitrespawnbutton()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_A2BF0CF1C504995E3ABF99435772" );

    for (;;)
    {
        if ( self usebuttonpressed() )
            break;

        wait 0.05;
    }
}

removespawnmessageshortly( var_0 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    waittillframeend;
    self endon( "_encstr_A2BF0CF1C504995E3ABF99435772" );
    wait( var_0 );
    scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
}

tivalidationcheck()
{
    if ( !isdefined( self.setspawnpoint ) )
        return 0;

    if ( isdefined( level.get_br_jugg_setting ) && ![[ level.get_br_jugg_setting ]]( self ) )
        return 0;

    var_0 = getentarray( "_encstr_98E50D36B03956BE1C851BDAC2D9CA", "_encstr_B8CE0BE43FC317DF690862BA48" );

    foreach ( var_2 in var_0 )
    {
        if ( distancesquared( var_2.origin, self.setspawnpoint.playerspawnpos ) > 4096 )
            continue;

        if ( isdefined( var_2.owner ) )
            scripts\mp\hud_message::showsplash( "_encstr_82C414B96F4B9806B2AF9B911FFA4018F5022390158E", undefined, var_2.owner );

        scripts\mp\equipment\tac_insert::_id_13681();
        return 0;
    }

    var_4 = ( 30, 30, 80 );
    var_5 = self.setspawnpoint.playerspawnpos - var_4;
    var_6 = self.setspawnpoint.playerspawnpos + var_4;
    var_7 = physics_createcontents( [ "_encstr_B7D018B89C4B13AC473342305523920D607E50E3571038A69138" ] );
    var_8 = [];
    var_9 = physics_aabbbroadphasequery( var_5, var_6, var_7, var_8 );

    if ( isdefined( var_9 ) && var_9.size > 0 )
    {
        var_10 = 1;

        foreach ( var_12 in var_9 )
        {
            var_13 = var_12.code_classname == "_encstr_B4010B8B3E9AA0D7B37FC5D187" || var_12.code_classname == "_encstr_B74E0BBBF6393646B93885BBE6";

            if ( !var_13 )
            {
                var_10 = 0;
                break;
            }
        }

        if ( !var_10 )
            return 0;
    }

    var_15 = self.setspawnpoint.playerspawnpos + ( 0, 0, 60 );
    var_16 = self.setspawnpoint.playerspawnpos + ( 0, 0, 1 );
    var_17 = [];
    var_17[0] = self;
    var_17[1] = self.setspawnpoint;
    var_18 = physics_createcontents( [ "_encstr_9F57173778F77BCBC6133048DA5B9B90BB0B28AFC43FE22B6A", "_encstr_BA411B0E0DF2B9B4D8CD1BB7B9D1B2B93A37D707C6162FAC9C8DB196E0", "_encstr_B874166814E073EA0FAE63B79B8107BB5BD25F7F1821CF8A", "_encstr_9E9C1638865EB95A6CE68DDEE64795B98E6EAF9BF6B1968C", "_encstr_B7F9145B18AB8AF721FE235718AB8F95E96811E39843", "_encstr_941116D7F47B0FC88317C8B07BCC017DD35AD8D44D52D773" ] );

    if ( !scripts\engine\trace::ray_trace_passed( var_15, var_16, var_17, var_18 ) )
        return 0;

    var_19 = self.setspawnpoint.playerspawnpos + ( 0, 0, 1 );
    var_20 = playerphysicstrace( var_19, self.setspawnpoint.playerspawnpos + ( 0, 0, -16 ) );

    if ( var_19[2] == var_20[2] )
        return 0;

    return 1;
}

revivespawnvalidationcheck()
{
    if ( !isdefined( self.forcespawnorigin ) )
        return 0;

    var_0 = spawnstruct();
    var_0._id_1368A = self.forcespawnorigin;
    var_0.vandalize_spotlight_speed = 1;
    var_1 = [];
    var_1[0] = self;
    var_2 = scripts\engine\trace::create_contents( 1, 1, 1, 0, 0, 1, 1 );

    if ( !scripts\engine\trace::ray_trace_passed( self.forcespawnorigin + ( 0, 0, 60 ), self.forcespawnorigin, var_1, var_2 ) )
    {
        var_0.vandalize_spotlight_speed = 0;
        return var_0;
    }

    var_3 = anglestoforward( self.angles );
    var_4 = vectornormalize( var_3 ) * 5;

    if ( !scripts\engine\trace::ray_trace_passed( self.forcespawnorigin + var_4, self.forcespawnorigin + var_4 - ( 0, 0, 16 ), var_1, var_2 ) )
    {
        var_0.vandalize_spotlight_speed = 0;
        return var_0;
    }

    var_5 = self.forcespawnorigin + ( 0, 0, 1 );
    var_6 = playerphysicstrace( var_5, self.forcespawnorigin + ( 0, 0, -16 ) );

    if ( var_5[2] == var_6[2] )
    {
        var_0.vandalize_spotlight_speed = 0;
        return var_0;
    }
    else
    {
        var_0._id_1368A = var_6;
        var_0.vandalize_spotlight_speed = 0;
    }

    self.faux_spawn_stance = "_encstr_9C3D071B63023B26C3";
    var_0.vandalize_spotlight_speed = 1;
    return var_0;
}

spawningclientthisframereset()
{
    self notify( "_encstr_AB281DB298316F52C1B85A45C48A778AD3E3DA93F0C65ED7E7F57260661B7B" );
    self endon( "_encstr_AB281DB298316F52C1B85A45C48A778AD3E3DA93F0C65ED7E7F57260661B7B" );
    waitframe();
    level.numplayerswaitingtospawn--;
}

getplayerassets( var_0 )
{
    var_1 = spawnstruct();

    if ( isdefined( var_0.loadoutprimaryfullname ) && var_0.loadoutprimaryfullname != "_encstr_AABA05236DC831" )
        var_1.primaryweapon = var_0.loadoutprimaryfullname;

    if ( isdefined( var_0.loadoutsecondaryfullname ) && var_0.loadoutsecondaryfullname != "_encstr_AABA05236DC831" )
        var_1.secondaryweapon = var_0.loadoutsecondaryfullname;

    var_2 = scripts\mp\teams::getcustomization();

    if ( isdefined( var_2["_encstr_A39B05D63DA213"] ) )
        var_1.body = var_2["_encstr_A39B05D63DA213"];

    if ( isdefined( var_2["_encstr_B2CC0571402BC0"] ) )
        var_1.head = var_2["_encstr_B2CC0571402BC0"];

    return var_1;
}

loadplayerassets( var_0, var_1, var_2 )
{
    var_3 = [];

    foreach ( var_5 in var_0 )
    {
        if ( isdefined( var_5.primaryweapon ) )
            var_3[var_3.size] = var_5.primaryweapon;

        if ( isdefined( var_5.secondaryweapon ) )
            var_3[var_3.size] = var_5.secondaryweapon;

        if ( !istrue( var_2 ) )
            self loadcustomization( var_5.body, var_5.head, var_1 );
    }

    if ( var_3.size > 0 )
        self loadweaponsforplayer( var_3, var_1 );
}

allplayershaveassetsloaded( var_0 )
{
    var_1 = [];

    if ( isdefined( var_0.primaryweapon ) )
        var_1[var_1.size] = var_0.primaryweapon;

    if ( isdefined( var_0.secondaryweapon ) )
        var_1[var_1.size] = var_0.secondaryweapon;

    if ( !self hasloadedviewweapons( var_1 ) )
        return 0;

    if ( !self hasloadedcustomizationviewmodels( var_0.body ) )
        return 0;

    return 1;
}

getspawnpoint()
{
    var_0 = undefined;
    var_1 = undefined;
    var_2 = undefined;
    self.ti_spawn = 0;

    if ( getdvarint( "_encstr_B767149B8D27BE573795829CDB33D21BB235E02CEE73", 0 ) != 0 )
    {
        var_3 = getspawnarray( "_encstr_A9C01AAD83BE1D91B5FA6E38587737FA8536365A59377DE63A58E4D1" );
        var_0 = var_3[0];
        var_1 = var_0.origin;
        var_2 = var_0.angles;
    }
    else if ( isdefined( self.forcespawnorigin ) )
    {
        var_4 = revivespawnvalidationcheck();

        if ( !var_4.vandalize_spotlight_speed && isdefined( self.prevrevivepos ) && !isdefined( self.rallypoint ) )
            var_1 = self.prevrevivepos;
        else
        {
            var_1 = self.forcespawnorigin;
            self.forcespawnorigin = undefined;
        }

        if ( isdefined( self.forcespawnangles ) )
        {
            var_2 = self.forcespawnangles;
            self.forcespawnangles = undefined;
        }
        else
            var_2 = ( 0, randomfloatrange( 0, 360 ), 0 );

        if ( isdefined( self.reviver ) )
        {
            if ( positionwouldtelefrag( var_1 ) || !var_4.vandalize_spotlight_speed )
            {
                var_0 = scripts\mp\spawnscoring::findteammatebuddyspawn( self.reviver );
                self.reviver = undefined;

                if ( isdefined( var_0 ) )
                {
                    var_1 = var_0.origin;
                    var_2 = var_0.angles;
                }
            }
            else
                var_1 = var_4._id_1368A;
        }
    }
    else if ( isdefined( self.setspawnpoint ) )
    {
        var_0 = self.setspawnpoint;

        if ( !istrue( self.setspawnpoint.notti ) )
        {
            if ( istrue( level.unset_relic_laststandmelee ) && level.mapname != "_encstr_B3FB0A309BE727E0D4F143A9" )
            {
                self._id_11D9E = undefined;
                var_5 = scripts\engine\utility::ter_op( istrue( level.brmini_playerwelcomesplashes ), 1, istrue( self.setspawnpoint.issuper ) );

                if ( var_5 )
                {
                    var_6 = min( level.steam_fx_on - self.setspawnpoint.playerspawnpos[2], level.steam_fx_on );

                    if ( var_6 < level.steam_fx_on - 950 )
                        var_6 = var_6 + 950;

                    self.setspawnpoint.playerspawnpos = self.setspawnpoint.playerspawnpos + ( 0, 0, var_6 );
                    self.updatearenaomnvardata = 1;
                }
            }

            self.ti_spawn = 1;
            self playlocalsound( "_encstr_82B70FCB0AA641403AEAE5064BAA7803B5" );

            if ( level.teambased )
            {
                foreach ( var_8 in level.teamnamelist )
                {
                    if ( var_8 != self.team )
                        self playsoundtoteam( "_encstr_82B70FCB0AA641403AEAE5064BAA7803B5", var_8 );
                }
            }
            else
                self playsound( "_encstr_82B70FCB0AA641403AEAE5064BAA7803B5" );
        }

        foreach ( var_11 in level.ugvs )
        {
            if ( distancesquared( var_11.origin, var_0.playerspawnpos ) < 1024 )
                var_11 notify( "_encstr_B8BE07320B5B16ECAC", 5000, var_11.owner, ( 0, 0, 0 ), ( 0, 0, 0 ), "_encstr_A45C0E4B9FDF3165A3B93C4491BFA4A9", "_encstr_A40101", "_encstr_A40101", "_encstr_A40101", undefined, getcompleteweaponname( "_encstr_BAA815B8478C503F9352750F6C5975B9E5CF40C837552B" ) );
        }

        var_1 = self.setspawnpoint.playerspawnpos;
        var_2 = self.setspawnpoint.playerspawnangles;
        scripts\mp\equipment\tac_insert::_id_13681( 0, 1 );
        var_0 = undefined;
    }
    else if ( istrue( level.usespawnselection ) && istrue( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) ) )
    {
        var_0 = scripts\mp\spawnselection::getspawnpoint();
        var_1 = var_0.origin;
        var_2 = var_0.angles;
    }
    else
    {
        var_0 = self [[ level.getspawnpoint ]]();
        var_1 = var_0.origin;
        var_2 = var_0.angles;
    }

    var_13 = spawnstruct();
    var_13.spawnpoint = var_0;
    var_13.spawnorigin = var_1;

    if ( !isdefined( var_2 ) )
        var_2 = ( 0, 0, 0 );

    var_13.spawnangles = ( 0, var_2[1], 0 );
    return var_13;
}

spawnplayer( var_0, var_1 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
    self notify( "_encstr_983508635BE787C548A1" );
    self notify( "_encstr_A2BF0CF1C504995E3ABF99435772" );
    self notify( "_encstr_8F1614200C576863C761B17F2817CB5549E902CA9D42" );

    if ( !isdefined( var_0 ) )
        var_0 = 0;

    if ( !isdefined( var_1 ) )
        var_1 = 0;

    if ( scripts\mp\utility\game::teamhasinfil( self.team ) && !scripts\mp\flags::gameflag( "_encstr_A20D0EF9B8412F9D3FE0337AF0B117D3" ) && !isdefined( level.bypassclasschoicefunc ) )
    {
        if ( getdvarint( "_encstr_A6121C6EC64ED799ED93B1B2FAC62CD8BE37E456FAD8B0D8B16E470B6CB6", 0 ) == 1 && scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_BE180432D63D" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_89E10946E1536E6DD6A2B0" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_AD1F058082CACF" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_943608AF02ED7706E041" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_B26E07FBDB98427952" )
        {
            var_2 = scripts\mp\utility\game::teamhasinfil( self.team );
            var_3 = scripts\mp\flags::gameflag( "_encstr_A20D0EF9B8412F9D3FE0337AF0B117D3" );
            var_4 = isdefined( level.bypassclasschoicefunc );
            scripts\mp\utility\script::laststand_dogtags( "_encstr_97AB0EB6121AE7C8504BF82077AAC893" + self.name + "_encstr_8A2322014B94A09078D3780ABD278F888575B7B88289D7527920024364AA3DB0F121AE61" + var_2 + "_encstr_BE9F12A0CBB0E32CA991531B58AD23A7A90735D8" + var_3 + "_encstr_A82E19E86BE2C36BC75321AF5BFF55998DF268A8F0FB65A162C51F" + var_4 );
        }

        self setclientomnvar( "_encstr_82FB10DDD989C0419BF3886E8BD742E738CB", 2 );
    }
    else if ( !isdefined( game["_encstr_A9AD064B0D19E377"] ) || game["_encstr_A9AD064B0D19E377"] != "_encstr_8F7508BB18675378EBC7" )
        self setclientomnvar( "_encstr_82FB10DDD989C0419BF3886E8BD742E738CB", 0 );

    scripts\mp\utility\game::checkrealismhudsettings();
    self setclientomnvar( "_encstr_982A0DAED2EBA15DC8AFE64316D62B", 0 );
    self.lastkillsplash = undefined;
    self._id_1363E = undefined;
    self.scorestreakvariantattackerinfo = undefined;
    self.cratemantle = undefined;

    if ( getdvarint( "_encstr_BC21121F77DB50386955B9F6BF5FA8F602B7B36D" ) > 1 )
        level thread scripts\cp_mp\killstreaks\uav::setforceradars( self );

    level.numplayerswaitingtospawn++;

    if ( level.numplayerswaitingtospawn > 1 )
    {
        self.waitingtospawnamortize = 1;
        wait( level.framedurationseconds * ( level.numplayerswaitingtospawn - 1 ) );
    }

    thread spawningclientthisframereset();
    self.waitingtospawnamortize = 0;

    if ( !isdefined( self.pers["_encstr_8A460C2E187099BAD5676B572F06"] ) )
        var_6 = scripts\mp\class::preloadandqueueclass( self.class, 1 );
    else
    {
        var_7 = scripts\mp\class::loadout_getorbuildclassstruct( self.class );
        scripts\mp\class::zombiesdamagezombies( self.pers["_encstr_8A460C2E187099BAD5676B572F06"], var_7 );

        if ( isdefined( self.pers["_encstr_9CBD0B9103C3AD17906BB5C0DA"] ) )
        {
            _id_119CB( self.pers["_encstr_9CBD0B9103C3AD17906BB5C0DA"] );
            self.pers["_encstr_9CBD0B9103C3AD17906BB5C0DA"] = undefined;
        }

        scripts\mp\class::preloadandqueueclassstruct( self.pers["_encstr_8A460C2E187099BAD5676B572F06"], 1 );
        var_6 = self.pers["_encstr_8A460C2E187099BAD5676B572F06"];
        self.pers["_encstr_8A460C2E187099BAD5676B572F06"] = undefined;
    }

    var_8 = gettime();
    self.spawndata = getspawnpoint();
    setspawnvariables();
    var_9 = self.hasspawned;
    self.suicidespawndelay = undefined;
    self.fauxdead = undefined;
    self startragdollfromvehiclehit( 0 );

    if ( !var_0 )
    {
        self.killsthislife = [];

        if ( !istrue( self.inspawncamera ) )
            scripts\mp\utility\player::updatesessionstate( "_encstr_8F7508BB18675378EBC7" );

        scripts\mp\utility\player::clearkillcamstate();
        self.cancelkillcam = undefined;
        self.maxhealth = scripts\mp\tweakables::gettweakablevalue( "_encstr_AAB0079B102F47FF38", "_encstr_9C9F0A6B2C0F34590B3647A1" );

        if ( istrue( var_1 ) )
        {
            var_10 = scripts\mp\utility\dvars::getwatcheddvar( "_encstr_AD2516B1166EE8D4E8B0E63229ACCE96CE598459B08DD186" );

            if ( !isdefined( var_10 ) )
                self.health = getdvarint( "_encstr_976021CD6CC9F58336B0CBCA93EBB1C2B947A947C2CD1994CA9D5A3BCA12CA2C63D10D", 50 );
            else
                self.health = var_10;

            thread notifyreviveregen();
        }
        else
            self.health = self.maxhealth;

        if ( istrue( self.playersetarenaomnvarwithloadout ) )
        {
            self.playersetarenaomnvarwithloadout = undefined;
            thread _encstr_88EA20CDD8932D38E8B9CB5BC1BCD985D6AC47E58395CD5ED8F6B6B5DBDCE2B3378D::ffmessageonspawn();
        }

        self.friendlydamage = undefined;
        self.spawntime = gettime();
        self.wasti = self.ti_spawn;
        self.damagedplayers = [];
        self.objectivescaler = 1;
        self.shieldbullethits = 0;
        self.recentshieldxp = 0;
        self.respawntimerstarttime = undefined;
        self.tiers = undefined;
        self.lastgastouchtime = undefined;
        self.lastsnapshotgrenadetime = undefined;
        self.lastinsmoketime = undefined;
        self.lastburntime = undefined;
        self.lastdamagetime = undefined;
        self.lasttimedamaged = undefined;

        if ( isdefined( self.should_hide_buried_mother_corpse ) )
            self.should_hide_buried_mother_corpse = 0;

        if ( isdefined( self.stuckbygrenade ) && self.stuckbygrenade.stuckenemyentity == self )
            self.stuckbygrenade.stuckenemyentity = undefined;

        self.stuckbygrenade = undefined;
        self._id_13935 = undefined;
        self.lifeid = 0;

        if ( isdefined( self.pers["_encstr_BA0607842BE8FB4B56"] ) )
            self.lifeid = self.pers["_encstr_BA0607842BE8FB4B56"];

        scripts\cp_mp\utility\damage_utility::cleardamagemodifiers();
        scripts\mp\killcam::clearkillcamomnvars();
    }

    self.movespeedscaler = 1;

    if ( !var_0 )
    {
        self.avoidkillstreakonspawntimer = 5.0;
        var_11 = self.pers["_encstr_A2AA0636969D2BE6"];

        if ( var_11 == scripts\mp\utility\game::getgametypenumlives() )
            addtolivescount();

        if ( var_11 )
            self.pers["_encstr_A2AA0636969D2BE6"]--;

        if ( !istrue( self.gulag ) && !istrue( self.respawningfromtoken ) && !istrue( self._id_12CA8 ) || istrue( self._encstr_B31617022B151F5AB59A68522231D721EDE10B4930B0B30B5F ) )
        {
            addtoalivecount( "_encstr_9E790CDCE016DD9B8263582FB2C9" );
            self._encstr_B31617022B151F5AB59A68522231D721EDE10B4930B0B30B5F = undefined;
        }

        if ( !var_9 || scripts\mp\utility\game::gamehasstarted() || scripts\mp\utility\game::gamehasstarted() && level.ingraceperiod && self.hasdonecombat )
            removefromlivescount();

        if ( !self.wasaliveatmatchstart )
        {
            var_12 = 20;

            if ( scripts\mp\utility\game::gettimelimit() > 0 && var_12 < scripts\mp\utility\game::gettimelimit() / 4 )
                var_12 = scripts\mp\utility\game::gettimelimit() / 4;

            if ( level.ingraceperiod || scripts\mp\utility\game::gettimepassed() < var_12 * 1000 )
                self.wasaliveatmatchstart = 1;
        }
    }

    thread scripts\cp\vehicles\vehicle_compass_cp::onspawn();
    var_13 = getdvar( "_encstr_ABF4109BC693FAB7D92BE49C5A1959913DAC", "_encstr_A40703B19A" );

    if ( self isconsoleplayer() )
        self setclientdvar( "_encstr_9C4A0A8AA8D4A0A8C913D389", var_13 );

    if ( isdefined( self.spawndata.spawnpoint ) )
    {
        if ( !istrue( self._id_132FF ) )
            scripts\mp\spawnlogic::finalizespawnpointchoice( self.spawndata.spawnpoint );

        self.lastspawntime = gettime();
    }
    else if ( !isdefined( self.faux_spawn_infected ) )
        self.lastspawntime = gettime();

    self.spawnpos = self.spawndata.spawnorigin;

    if ( var_0 && scripts\mp\gameobjects::touchingarbitraryuptrigger() )
    {
        if ( self isonground() )
        {
            self normalizeworldupreferenceangles();
            self.spawndata.spawnorigin = self.spawndata.spawnorigin - ( 0, 0, 80 );
        }

        var_14 = self getworldupreferenceangles();
    }

    scripts\mp\spectating::setspectatepermissions();
    self spawn( self.spawndata.spawnorigin, self.spawndata.spawnangles );
    self setplayerangles( ( 0, self.spawndata.spawnangles[1], 0 ) );
    scripts\mp\utility\player::_id_12898( "_encstr_95C52E98D1C907873DB03AB2F0772872E347111778379B4EF3C0F33EEAC926D611B6B79C15913F5AABB938A682233E0B" + self.spawndata.spawnorigin );

    if ( !isdefined( level.was_seq3_gassed ) )
        level.was_seq3_gassed = [];

    level.was_seq3_gassed[self.team] = self.spawndata.spawnorigin;
    self.death_timer_length = 1023;

    if ( ( var_0 || var_1 ) && isdefined( self.faux_spawn_stance ) )
    {
        self setstance( self.faux_spawn_stance );
        self.faux_spawn_stance = undefined;
    }

    if ( isai( self ) )
        scripts\mp\utility\player::_freezecontrols( 1, undefined, "_encstr_BA8A06D740769010" );

    self motionblurhqenable();

    if ( !var_0 && !( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" ) )
        self painvisionon();

    scripts\mp\utility\game::get_allowed_vehicle_types_from_spawnpoint( self );
    [[ level.onspawnplayer ]]();
    self clearpredictedstreampos();
    var_15 = !var_0 || istrue( self.faux_spawn_infected );

    if ( var_15 )
    {
        if ( isai( self ) && isdefined( level.bot_funcs ) && isdefined( level.bot_funcs["_encstr_9E7F0F83E0068BA8D3374EA2490F65E339"] ) )
            self [[ level.bot_funcs["_encstr_9E7F0F83E0068BA8D3374EA2490F65E339"] ]]();

        if ( isdefined( level.matchrecording_logevent ) )
            [[ level.matchrecording_logevent ]]( self.clientid, self.team, "_encstr_BA8A0697607E9127", self.spawnpos[0], self.spawnpos[1], self.spawntime );

        if ( !isai( self ) )
        {
            if ( !isdefined( self.pers["_encstr_8A0C1332B4E6E8A24E1636B696739D0558CD6EAC23"] ) )
                thread totaldisttracking( self.spawndata.spawnorigin );
            else
            {
                var_16 = _id_1331C();

                if ( var_16 )
                {
                    var_17 = scripts\mp\persistence::statgetchildbuffered( "_encstr_A2460627DEABDC23", "_encstr_801A0BD15ADA560A63B09795C8", 0 );

                    if ( var_17 - self.pers["_encstr_9B350DDAF81F5257D305C4FC2B381F"] > 240 )
                    {
                        self.pers["_encstr_9B350DDAF81F5257D305C4FC2B381F"] = var_17;
                        self.pers["_encstr_8A0C1332B4E6E8A24E1636B696739D0558CD6EAC23"] = undefined;
                        self.pers["_encstr_A1FF15E8DE8E16B188B4DCE8A29CC2B32BC659C8822396"] = undefined;
                        thread totaldisttracking( self.spawndata.spawnorigin );
                    }
                }
            }
        }
    }

    if ( !var_0 )
    {
        self.matchdatalifeindex = scripts\common\utility::_id_13E0A( level._id_11B2E );
        self.lastmatchdatakillstreakindex = -1;

        if ( getdvarint( "_encstr_B1B60AC10CAECB5C010FEDFB" ) != 0 )
            setmatchdata( "_encstr_8F720A7AB87B6B29EFE36873", game["_encstr_9D7F0B1BA5992BAFB1DB5D9BE8"] );
    }

    if ( isdefined( self.selectedspawnarea ) )
        scripts\mp\analyticslog::_id_119BA( self, self.selectedspawnarea );

    if ( !istrue( self._id_132FF ) )
        self.selectedspawnarea = undefined;

    scripts\mp\equipment::clearallequipment();
    scripts\mp\class::setclass( self.class );

    if ( isdefined( level.custom_giveloadout ) )
        self [[ level.custom_giveloadout ]]( var_0 );
    else
        scripts\mp\class::giveloadout( self.team, self.class, undefined, undefined, var_1 );

    if ( getomnvar( "_encstr_A9431365899FEB0DB722F0A03A0C9F23AF3AE3D01C" ) )
        thread showgamemodeobjectivetext();

    if ( !istrue( game["_encstr_87010E111E3823354DC251C560F3ED0A"] ) )
    {
        thread logstartingloadout();

        if ( level.codcasterenabled && !self ismlgspectator() )
            thread _id_13FFB( self );
    }

    if ( isdefined( game["_encstr_8AC30D9CDEBA73466E41B1585E568C"] ) && game["_encstr_8AC30D9CDEBA73466E41B1585E568C"] > 0 )
    {
        if ( !isdefined( self.classrefreshed ) || !self.classrefreshed )
        {
            if ( isdefined( self.class_num ) )
                self.classrefreshed = 1;
        }
    }

    if ( getdvarint( "_encstr_93570B93F4A9629272A825B426" ) )
        scripts\mp\utility\player::setthirdpersondof( 1 );

    if ( isai( self ) )
        scripts\mp\utility\player::_freezecontrols( 0, undefined, "_encstr_BA8A06D740769010" );

    if ( istrue( game["_encstr_9E810CC8F04D83308F7B40264A13"] ) || scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" && !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
    {

    }
    else if ( !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        allowprematchlook( self );
    else
    {
        var_18 = !self.hasspawned;
        scripts\mp\utility\player::_freezecontrols( 0, var_18, "_encstr_BA8A06D740769010" );
        scripts\mp\utility\player::_freezelookcontrols( 0, var_18 );
    }

    if ( !istrue( self.hasspawned ) )
        scripts\mp\gamelogic::updatematchhasmorethan1playeromnvaronplayersfirstspawn();

    self.hasspawned = 1;
    self.pers["_encstr_A9310B43529AEF43D72F68D514"] = 1;
    waittillframeend;
    self.spawningafterremotedeath = undefined;
    self.delayedspawnedplayernotify = undefined;

    if ( !istrue( level.loadoutdefaultfiresalediscount ) && isdefined( self.spawncameraent ) || istrue( level.loadoutdefaultfiresalediscount ) && isdefined( self.spawncameraent ) && scripts\mp\utility\game::getgametype() == "_encstr_BD19047616EB" )
    {
        self.wasrevivespawn = var_1;
        self.delayedspawnedplayernotify = 1;
        self notify( "_encstr_9391122A5A175BB69781D83522731038CBC745A8" );
    }

    if ( !istrue( self.delayedspawnedplayernotify ) )
    {
        self notify( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
        level notify( "_encstr_9E7F0F83E0068BA8D3374EA2490F65E339", self, var_1 );
        thread setspawnnotifyomnvar();
    }

    if ( game["_encstr_A9AD064B0D19E377"] == "_encstr_B9E70983DEE6D1760BB5CA" )
        scripts\mp\gamelogic::freezeplayerforroundend();

    if ( scripts\mp\analyticslog::analyticsspawnlogenabled() && !var_0 )
    {
        if ( scripts\mp\analyticslog::analyticsdoesspawndataexist() )
            level.spawncount = level.spawncount + 1;
        else
            scripts\mp\analyticslog::analyticsinitspawndata();

        if ( scripts\mp\analyticslog::analyticssend_shouldsenddata( level.spawncount ) )
        {
            if ( isdefined( level.spawnglobals.spawnpointslist ) )
            {
                scripts\mp\analyticslog::analyticssend_spawnfactors( self, self.spawnpointslist, level.spawncount, self.spawndata.spawnpoint );
                scripts\mp\analyticslog::analyticssend_spawntype( self.spawndata.spawnpoint.origin, self.team, self.lifeid, level.spawncount );
                scripts\mp\analyticslog::analyticssend_spawnplayerdetails( self, self.spawndata.spawnpoint.origin, level.spawncount );
            }
        }

        self.lastspawnpoint = self.spawndata.spawnpoint;
    }

    if ( !istrue( self.delayedspawnedplayernotify ) )
        self.spawndata = undefined;

    if ( !isdefined( self.revive_chosenclass ) )
        thread scripts\mp\class::updateinstantclassswapallowed();

    var_19 = 0;

    if ( ( var_19 || scripts\mp\utility\game::gametypesupportsbasejumping() && scripts\mp\utility\game::mapsupportsbasejumping() ) && !istrue( level.client_activate ) )
    {
        self skydive_setbasejumpingstatus( 1 );
        self skydive_setdeploymentstatus( 1 );
    }
}

_id_119CB( var_0 )
{
    if ( isdefined( var_0 ) )
        self dlog_recordplayerevent( "_encstr_8F8E1823E2FDE7C6A74E8D702427E8AF26CAE0ABFB192718CB59", [ "_encstr_8FC61A39596C592D3BCAE4AF1CD885CBACE47D6CB12D56378EF596C8", self.clientid, "_encstr_A2831227B2D8562DCE2BC9AF9D85DAB239A30BCE", self.name, "_encstr_984817893C1E405681BB594B77CA9E49A3D5F0416564D9830A", var_0.clientid, "_encstr_AB890FEC2D67AC4EEB9D85D62B39470B76", var_0.name ] );
}

logstartingloadout()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        return;

    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );

    if ( isdefined( self.curclass ) && self.curclass != "_encstr_AAFC0BA9AB3B9DCAC9DC2C571D" )
        scripts\mp\class::loadout_lognewlygivenloadout( self.select_bridge_two_spawners, self.classstruct, self.curclass );
}

notifyreviveregen()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    waitframe();
    self notify( "_encstr_AACA134BA89BBB8A5FDEB72F4DD542520198EFE718" );
}

setspawnnotifyomnvar()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    waitframe();
    self setclientomnvar( "_encstr_B20819AE2DEBE0B12C972B27EBB9C1C2EE9B5991F5E67B3A9699F2", gettime() );
}

playerprematchallow( var_0 )
{
    self allowmovement( var_0 );
    scripts\common\utility::allow_fire( var_0, "_encstr_B8D50907932BB558D1B10D" );
    scripts\mp\equipment::allow_equipment( var_0, "_encstr_B8D50907932BB558D1B10D" );
    scripts\common\utility::allow_supers( var_0, "_encstr_B8D50907932BB558D1B10D" );
    scripts\common\utility::allow_jump( var_0, "_encstr_B8D50907932BB558D1B10D" );
    scripts\common\utility::allow_melee( var_0, "_encstr_B8D50907932BB558D1B10D" );
    scripts\common\utility::allow_sprint( var_0, "_encstr_B8D50907932BB558D1B10D" );
    scripts\common\utility::allow_killstreaks( var_0, "_encstr_B8D50907932BB558D1B10D" );

    if ( !istrue( level.loadout_updateammo ) )
    {
        scripts\common\utility::allow_mount_top( var_0, "_encstr_B8D50907932BB558D1B10D" );
        scripts\common\utility::allow_mount_side( var_0, "_encstr_B8D50907932BB558D1B10D" );
    }
}

allowprematchlook( var_0 )
{
    var_0 [[ level.prematchallowfunc ]]( 0 );
    var_0.prematchlook = 1;
}

clearprematchlook( var_0 )
{
    if ( istrue( var_0.prematchlook ) && !level.gameended )
    {
        var_0 [[ level.prematchallowfunc ]]( 1 );
        var_0.prematchlook = undefined;
    }
}

waitforversusmenudone()
{
    level endon( "_encstr_8BF80EDBDA10705A600880871A60DF03" );
    self endon( "_encstr_A91C11CE954EB9D5377D5B9573BAD719B7DC59" );

    for (;;)
    {
        self waittill( "_encstr_8AEB10D3C848069A99C3E7D8365383C61158", var_0, var_1 );

        if ( var_0 == "_encstr_A9390CECB24EE6576E7D46BDB9B2" )
            self notify( "_encstr_A91C11CE954EB9D5377D5B9573BAD719B7DC59" );
    }
}

_id_13FFB( var_0 )
{
    var_0 endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );

    for (;;)
    {
        var_0 setbeingrevived();
        var_0 getmid1damage();
        wait 0.05;
    }
}

spawnspectatormapcam( var_0 )
{
    var_1 = 6;
    var_2 = 4;
    var_3 = 4;
    var_4 = 0;
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( isai( self ) )
        return;

    if ( level.splitscreen || self issplitscreenplayer() )
        self setclientdvars( "_encstr_A91E0A88F1CF752F94F25006", "_encstr_A1F90581B8C69A" );
    else
        self setclientdvars( "_encstr_A91E0A88F1CF752F94F25006", "_encstr_AF4C02EA" );

    self setclientomnvar( "_encstr_B341121BA11E20F223E8B8E5F9514710A177AAEB", 1 );
    self lerpfovbypreset( "_encstr_A1D50BD507BB2BB55BD8FBC218" );
    var_5 = scripts\engine\utility::getstructarray( "_encstr_A9430D6E8157490DB601B0704B8AFF", "_encstr_B8CE0BE43FC317DF690862BA48" );

    switch ( level.mapname )
    {
        case "_encstr_9D940C3DB1A9CBFF69E87A02D19E":
            var_5[0].origin = ( 1606.95, 2238.61, 958.77 );
            var_5[0].angles = ( 17, 215, -4.14 );
            break;
        case "_encstr_BA2D0C1A1889F6509358B288911B":
            var_5[0].origin = ( 310, -627, 279 );
            var_5[0].angles = ( 4, 196, 0 );
            break;
        case "_encstr_B9F70BD873EFA07BE2C720359B":
            var_5[0].origin = ( 1867, -2487, 664 );
            var_5[0].angles = ( 15, 118, 0 );
            break;
        case "_encstr_93670AB8D3011F93679BDBEE":
            var_5[0].origin = ( -856, 2771, 1030 );
            var_5[0].angles = ( 18, 313, 0 );
            break;
        case "_encstr_A8990A2D4FC7AADFE8C02B07":
            var_5[0].origin = ( 691, -536, 223 );
            var_5[0].angles = ( 9, 159, 0 );
            var_5[1] = spawnstruct();
            var_5[1].origin = ( 428, 508, 14 );
            var_5[1].angles = ( 0, 182, 0 );
            var_4 = 1;
            break;
        case "_encstr_87D50A3A6857BD9FD363BEAD":
            var_5[0].origin = ( 1260, 203, 239 );
            var_5[0].angles = ( 15, 189, 0 );
            var_5[1] = spawnstruct();
            var_5[1].origin = ( -582, -154, 64 );
            var_5[1].angles = ( 0, 137, 0 );
            var_4 = 1;
            break;
        case "_encstr_8BD60D11D8D7AD0F6A3AB87082420F":
            var_5[0].origin = ( 2446, 19, 377 );
            var_5[0].angles = ( 24, 178, 0 );
            var_5[1] = spawnstruct();
            var_5[1].origin = ( 435, 11, 15 );
            var_5[1].angles = ( 0, 0, 0 );
            var_4 = 1;
            break;
        case "_encstr_898F0A6B387D6B7DD05AB11B":
            var_5[0].origin = ( 254, 1651, 353 );
            var_5[0].angles = ( 10, 253, 0 );
            var_5[1] = spawnstruct();
            var_5[1].origin = ( 231, -1024, 37 );
            var_5[1].angles = ( 353, 89, 0 );
            var_4 = 1;
            break;
    }

    if ( var_5.size == 0 || scripts\mp\flags::gameflag( "_encstr_B87F0F4428EDB244C6889FF328BE123BA5" ) )
    {
        self visionsetfadetoblackforplayer( "_encstr_A40101", 0.75 );
        return;
    }

    var_6 = undefined;
    var_7 = undefined;
    var_8 = undefined;
    setspawnvariables();
    scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
    scripts\mp\utility\player::updatesessionstate( "_encstr_A68C0A5803A5D151A2B310A6" );
    self.pers["_encstr_89EF05D46BA8FD"] = "_encstr_A68C0A5803A5D151A2B310A6";
    self.team = "_encstr_A68C0A5803A5D151A2B310A6";
    scripts\mp\utility\player::clearkillcamstate();
    self.friendlydamage = undefined;
    resetuidvarsonspectate();

    foreach ( var_10 in level.teamnamelist )
        self allowspectateteam( var_10, 0 );

    self allowspectateteam( "_encstr_B287095B250DEAD4C8407C", 0 );
    self allowspectateteam( "_encstr_AABA05236DC831", 0 );

    if ( isdefined( var_5 ) && var_5.size > 1 && !istrue( var_4 ) )
    {
        var_12 = randomintrange( 0, var_5.size - 1 );
        var_6 = var_5[var_12];
    }
    else if ( isdefined( var_5 ) )
    {
        var_6 = var_5[0];

        if ( istrue( var_4 ) )
            var_8 = var_5[1];
    }
    else
    {

    }

    var_6.fil = 1;
    scripts\mp\utility\player::_freezecontrols( 1, undefined, "_encstr_97E31022389F822B5FA5088391606971D640" );
    self setspectatedefaults( var_6.origin, var_6.angles );
    self spawn( var_6.origin, var_6.angles );
    scripts\mp\utility\player::_id_12898( "_encstr_A20E37E0B9A16FDF6518821A289FC0AA5B1F797FC08F13E76F306A2330D5457FD31EC1ED4B189ABE93A2B0A81183D6FF8FF77FB657B1E62679" + var_6.origin );
    var_13 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_6.origin );
    var_13 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
    var_13.angles = var_6.angles;
    var_14 = undefined;

    if ( istrue( var_4 ) )
    {
        var_14 = spawn( "_encstr_93DC0DCD1B272D3847AF5BED23B2C6", var_8.origin );
        var_14 setmodel( "_encstr_8CB40B4BB398B1C0A81FDF6BEA" );
        var_14.angles = var_8.angles;
    }

    thread waitforversusmenudone();

    if ( isdefined( var_0 ) && var_0 == 99 )
        var_15 = "_encstr_BA750691954CEA76";
    else if ( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        var_15 = "_encstr_8BF80EDBDA10705A600880871A60DF03";
    else if ( self.versusdone )
        var_15 = "_encstr_A91C11CE954EB9D5377D5B9573BAD719B7DC59";
    else
        var_15 = scripts\engine\utility::_id_143BA( 2, "_encstr_A91C11CE954EB9D5377D5B9573BAD719B7DC59", "_encstr_8BF80EDBDA10705A600880871A60DF03" );

    if ( var_15 == "_encstr_945408D1B4B556B7BA3A" )
    {
        if ( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
            var_15 = "_encstr_8BF80EDBDA10705A600880871A60DF03";
        else
            var_15 = "_encstr_A91C11CE954EB9D5377D5B9573BAD719B7DC59";
    }

    if ( var_15 == "_encstr_8BF80EDBDA10705A600880871A60DF03" )
    {
        self visionsetfadetoblackforplayer( "_encstr_A40101", 0.75 );
        return;
    }

    if ( self issplitscreenplayer() && self issplitscreenplayerprimary() )
    {
        var_16 = self getothersplitscreenplayer();
        var_16 notify( "_encstr_A91C11CE954EB9D5377D5B9573BAD719B7DC59" );
        waitframe();
    }

    self cameralinkto( var_13, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", 1 );
    var_17 = scripts\cp_mp\utility\game_utility::getmapname();
    self notify( "_encstr_80841051892B8533ADAA900BE1C2C1198B24" );

    switch ( var_17 )
    {
        case "_encstr_934D0BCDAF279BC1EBF00F6F50":
            var_13 scriptmodelplayanimdeltamotion( "_encstr_B8AA1C5A77DCF5B683FA2DB91D39DE7DD8B0DA2BC958D738C29CB5DBAEC9" );
            self visionsetfadetoblackforplayer( "_encstr_A40101", 0.75 );
            self playlocalsound( "_encstr_822F175B0EBE8D166B95C90BEB5ADC47E4DED7EEA1DEEDCD34" );
            wait( var_1 - 0.25 );
            return;
        default:
            break;
    }

    wait 0.25;
    self visionsetfadetoblackforplayer( "_encstr_A40101", 0.75 );
    self playlocalsound( "_encstr_822F175B0EBE8D166B95C90BEB5ADC47E4DED7EEA1DEEDCD34" );
    var_18 = var_6;
    var_7[0] = spawnstruct();
    var_7[0] = scripts\engine\utility::getstruct( var_6.target, "_encstr_B8CE0BE43FC317DF690862BA48" );

    switch ( level.mapname )
    {
        case "_encstr_9D940C3DB1A9CBFF69E87A02D19E":
            var_7[0].origin = ( 1925, -857, 1033 );
            var_7[0].angles = ( 362, 127, 0 );
            break;
        case "_encstr_BA2D0C1A1889F6509358B288911B":
            var_7[0].origin = ( -399, -1457, 667 );
            var_7[0].angles = ( 15, 57, 0 );
            break;
        case "_encstr_B9F70BD873EFA07BE2C720359B":
            var_7[0].origin = ( 1422, 2073, 464 );
            var_7[0].angles = ( 6, 236, 0 );
            break;
        case "_encstr_93670AB8D3011F93679BDBEE":
            var_7[0].origin = ( 1559, 1586, 1030 );
            var_7[0].angles = ( 30, 234, 0 );
            break;
        case "_encstr_A8990A2D4FC7AADFE8C02B07":
            var_7[0].origin = ( 921, 300, 223 );
            var_7[0].angles = ( 8, 202, 0 );
            var_7[1] = spawnstruct();
            var_7[1].origin = ( 415, 372, 14 );
            var_7[1].angles = ( 3, 179, 0 );
            break;
        case "_encstr_87D50A3A6857BD9FD363BEAD":
            var_7[0].origin = ( 714, 440, 167 );
            var_7[0].angles = ( 13, 205, 0 );
            var_7[1] = spawnstruct();
            var_7[1].origin = ( -859, -349, 75 );
            var_7[1].angles = ( 7, 104, 0 );
            break;
        case "_encstr_8BD60D11D8D7AD0F6A3AB87082420F":
            var_7[0].origin = ( 1952, 354, 77 );
            var_7[0].angles = ( 6, 208, 0 );
            var_7[1] = spawnstruct();
            var_7[1].origin = ( 906, 9, 15 );
            var_7[1].angles = ( 0, 0, 0 );
            var_4 = 1;
            break;
        case "_encstr_898F0A6B387D6B7DD05AB11B":
            var_7[0].origin = ( -1332, 483, 252 );
            var_7[0].angles = ( 11, 313, 0 );
            var_7[1] = spawnstruct();
            var_7[1].origin = ( 65, -547, 351 );
            var_7[1].angles = ( 16, 83, 0 );
            break;
    }

    var_19 = 0;

    for (;;)
    {
        if ( isdefined( var_18.speedadjust ) )
        {
            var_20 = 1 / var_18.speedadjust;
            var_21 = var_20 * distance( var_18.origin, var_7[0].origin );
        }
        else
            var_21 = distance( var_18.origin, var_7[0].origin );

        var_19 = var_19 + var_21;
        var_18.distancetotarg = var_21;
        var_18 = var_7[0];

        if ( isdefined( var_18.target ) )
        {
            var_7[0] = scripts\engine\utility::getstruct( var_18.target, "_encstr_B8CE0BE43FC317DF690862BA48" );
            continue;
        }

        break;
    }

    var_18.eol = 1;
    var_18 = var_6;
    var_7[0] = scripts\engine\utility::getstruct( var_6.target, "_encstr_B8CE0BE43FC317DF690862BA48" );

    for (;;)
    {
        var_22 = var_18.distancetotarg / var_19;
        var_23 = scripts\engine\utility::ter_op( istrue( var_4 ), var_22 * var_2, var_22 * var_1 );

        if ( isdefined( var_7[0].eol ) )
            var_24 = var_23 / 2;
        else
            var_24 = 0;

        if ( isdefined( var_18.fil ) )
            var_25 = var_23 / 2;
        else
            var_25 = 0;

        var_13 moveto( var_7[0].origin, var_23, var_25, var_24 );
        var_13 rotateto( var_7[0].angles, var_23, var_25, var_24 );

        if ( isdefined( var_7[0].eol ) )
        {
            var_26 = int( var_23 / 2 );
            wait( var_26 );
            wait( var_26 );
        }
        else
            wait( var_23 );

        var_18 = var_7[0];

        if ( isdefined( var_18.target ) )
        {
            var_7[0] = scripts\engine\utility::getstruct( var_18.target, "_encstr_B8CE0BE43FC317DF690862BA48" );
            continue;
        }

        break;
    }

    if ( istrue( var_4 ) )
    {
        var_19 = 0;
        var_27 = var_8;
        self spawn( var_8.origin, var_8.angles );
        self cameralinkto( var_14, "_encstr_8CB40B4BB398B1C0A81FDF6BEA", 1 );
        wait 0.25;
        self visionsetfadetoblackforplayer( "_encstr_A40101", 0.75 );
        self playlocalsound( "_encstr_822F175B0EBE8D166B95C90BEB5ADC47E4DED7EEA1DEEDCD34" );

        for (;;)
        {
            if ( isdefined( var_27.speedadjust ) )
            {
                var_20 = 1 / var_27.speedadjust;
                var_21 = var_20 * distance( var_27.origin, var_7[1].origin );
            }
            else
                var_21 = distance( var_27.origin, var_7[1].origin );

            var_19 = var_19 + var_21;
            var_27.distancetotarg = var_21;

            if ( isdefined( var_27.target ) )
            {
                var_7[1] = scripts\engine\utility::getstruct( var_18.target, "_encstr_B8CE0BE43FC317DF690862BA48" );
                continue;
            }

            break;
        }

        var_27.eol = 1;
        var_27.fil = 1;
        var_7[1].eol = 1;

        for (;;)
        {
            var_22 = var_27.distancetotarg / var_19;
            var_23 = scripts\engine\utility::ter_op( istrue( var_4 ), var_22 * var_3, var_22 * var_1 );

            if ( isdefined( var_7[1].eol ) )
                var_24 = var_23 / 2;
            else
                var_24 = 0;

            if ( isdefined( var_27.fil ) )
                var_25 = var_23 / 2;
            else
                var_25 = 0;

            var_14 moveto( var_7[1].origin, var_23, var_25, var_24 );
            var_14 rotateto( var_7[1].angles, var_23, var_25, var_24 );

            if ( isdefined( var_7[1].eol ) )
            {
                var_26 = int( var_23 / 2 );
                wait( var_26 );
                wait( var_26 );
            }
            else
                wait( var_23 );

            var_27 = var_7[1];

            if ( isdefined( var_27.target ) )
            {
                var_7[1] = scripts\engine\utility::getstruct( var_27.target, "_encstr_B8CE0BE43FC317DF690862BA48" );
                continue;
            }

            break;
        }
    }

    scripts\mp\utility\player::_freezecontrols( 0, undefined, "_encstr_97E31022389F822B5FA5088391606971D640" );
    self.startcament = var_13;
    self setclientomnvar( "_encstr_B341121BA11E20F223E8B8E5F9514710A177AAEB", 0 );
}

spawnspectator( var_0, var_1, var_2 )
{
    self notify( "_encstr_983508635BE787C548A1" );
    self notify( "_encstr_A2BF0CF1C504995E3ABF99435772" );
    self notify( "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B" );
    level notify( "_encstr_8CD0124A97D7F07BAD07C8C342FAA010C490DD5B", self );
    self._id_1363E = 1;

    if ( isdefined( self.deathspectatepos ) )
    {
        var_0 = self.deathspectatepos;
        var_1 = vectortoangles( self.origin - self.deathspectatepos );
    }

    if ( isdefined( self.startcament ) && !isdefined( var_0 ) )
    {
        var_0 = self.startcament.origin;
        var_1 = self.startcament.angles;
        self.startcament delete();
    }

    in_spawnspectator( var_0, var_1, var_2 );
}

respawn_asspectator( var_0, var_1 )
{
    if ( isdefined( self.deathspectatepos ) )
    {
        var_0 = self.deathspectatepos;

        if ( isdefined( self.deathspectateangles ) )
            var_1 = self.deathspectateangles;
        else
            var_1 = vectortoangles( self.origin - self.deathspectatepos );
    }

    in_spawnspectator( var_0, var_1 );
}

in_spawnspectator( var_0, var_1, var_2 )
{
    setspawnvariables();
    var_3 = self.pers["_encstr_89EF05D46BA8FD"];

    if ( isdefined( var_3 ) && ( var_3 == "_encstr_A68C0A5803A5D151A2B310A6" || var_3 == "_encstr_B33E0979A77828123F58A2" ) && !level.gameended )
        scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );

    scripts\mp\class::loadout_clearperks();
    scripts\mp\utility\player::updatesessionstate( "_encstr_A68C0A5803A5D151A2B310A6" );
    scripts\mp\utility\player::clearkillcamstate();
    self.friendlydamage = undefined;
    resetuidvarsonspectate();
    scripts\mp\spectating::setspectatepermissions();
    onspawnspectator( var_0, var_1, var_2 );

    if ( level.teambased && !level.splitscreen && !self issplitscreenplayer() )
        scripts\mp\utility\player::setdof_spectator();
}

getplayerfromclientnum( var_0 )
{
    if ( var_0 < 0 )
        return undefined;

    for ( var_1 = 0; var_1 < level.players.size; var_1++ )
    {
        if ( level.players[var_1] getentitynumber() == var_0 )
            return level.players[var_1];
    }

    return undefined;
}

onspawnspectator( var_0, var_1, var_2 )
{
    if ( isdefined( var_0 ) && isdefined( var_1 ) )
    {
        self setspectatedefaults( var_0, var_1 );
        self spawn( var_0, var_1 );
        scripts\mp\utility\player::_id_12898( "_encstr_9D9B33EB605F17AF68D96777CB38A0D2F0985173A92C136A5023636CF3E8BD4B8B98DEEE39AF6F55895BD873E9794BF367014686BD" + var_0 );
        return;
    }

    var_3 = getspectatepoint();

    if ( istrue( level.usespawnselection ) )
    {
        if ( self.sessionteam == "_encstr_BC850785638DA59537" )
            var_3 = level.spawncameras["_encstr_A4B9109F170167BF36E602DAA89BAF9A11C3"]["_encstr_BC850785638DA59537"];
        else if ( self.sessionteam == "_encstr_BA840579D3F7F6" )
            var_3 = level.spawncameras["_encstr_9C6B0EAF178968E0DBB96932A2E73B99"]["_encstr_BA840579D3F7F6"];
    }

    var_4 = 8;

    if ( isdefined( level.camerapos ) && level.camerapos.size )
    {
        for ( var_5 = 0; var_5 < level.camerahighestindex + 1 && var_5 < var_4; var_5++ )
        {
            if ( !isdefined( level.camerapos[var_5] ) || !isdefined( level.cameraang[var_5] ) )
                continue;

            self setmlgcameradefaults( var_5, level.camerapos[var_5], level.cameraang[var_5] );
            level.cameramapobjs[var_5].origin = level.camerapos[var_5];
            level.numbermapobjs[var_5].origin = level.camerapos[var_5];
            level.cameramapobjs[var_5].angles = level.cameraang[var_5];
            level.numbermapobjs[var_5].angles = level.cameraang[var_5];
        }
    }
    else
    {
        for ( var_5 = 0; var_5 < var_4; var_5++ )
            self setmlgcameradefaults( var_5, var_3.origin, var_3.angles );
    }

    self setspectatedefaults( var_3.origin, var_3.angles );

    if ( isdefined( var_2 ) )
    {
        self allowspectateteam( "_encstr_B287095B250DEAD4C8407C", 1 );
        self allowspectateteam( "_encstr_AABA05236DC831", 1 );
    }

    if ( scripts\mp\utility\game::unset_relic_landlocked() && !self.hasspawned )
        self predictstreampos( var_3.origin );

    self spawn( var_3.origin, var_3.angles );
    scripts\mp\utility\player::_id_12898( "_encstr_9D9B33EB605F17AF68D96777CB38A0D2F0985173A92C136A5023636CF3E8BD4B8B98DEEE39AF6F55895BD873E9794BF367014686BD" + var_3.origin );
}

getspectatepoint()
{
    var_0 = getentarray( "_encstr_A4D3177D8391473C2F1EFE301F30CA83C12B2BF9BBFBB492F2", "_encstr_B9110A36362C3737732CDA59" );
    var_1 = [];

    if ( scripts\mp\utility\game::getgametype() == "_encstr_B31D06435BCB61E0" )
        return level.endsuperdisableweaponbr._id_136DC;

    if ( isdefined( scripts\cp_mp\utility\game_utility::getlocaleid() ) )
    {
        if ( level.localeid == "_encstr_8934097830FBB305B537B2" )
        {
            var_2 = spawn( "_encstr_A3050EDF6FF5DC081CC1AFA37097B80B", ( 25642, -26550, 1818 ) );
            var_2.angles = ( 14, 101, 0 );
            return var_2;
        }
        else if ( level.localeid == "_encstr_A83409096FE267B885318B" )
        {
            var_2 = spawn( "_encstr_A3050EDF6FF5DC081CC1AFA37097B80B", ( 34440, -18522, 995 ) );
            var_2.angles = ( 10, 281, 0 );
            return var_2;
        }

        var_2 = undefined;

        foreach ( var_4 in var_0 )
        {
            if ( isdefined( var_4.script_noteworthy ) && var_4.script_noteworthy == level.localeid )
                var_2 = var_4;
        }

        if ( isdefined( var_2 ) )
            return var_2;
        else
        {
            foreach ( var_4 in var_0 )
            {
                if ( !isdefined( var_4.script_noteworthy ) || !issubstr( var_4.script_noteworthy, "_encstr_93E0078DDBB1B0C62B" ) )
                {
                    var_1[var_1.size] = var_4;
                    continue;
                }

                var_4 delete();
            }
        }
    }
    else if ( var_0.size != 1 )
    {
        foreach ( var_4 in var_0 )
        {
            if ( !isdefined( var_4.script_noteworthy ) || !issubstr( var_4.script_noteworthy, "_encstr_93E0078DDBB1B0C62B" ) )
            {
                var_1[var_1.size] = var_4;
                continue;
            }

            var_4 delete();
        }
    }
    else
        var_1 = var_0;

    var_4 = scripts\mp\spawnlogic::getspawnpoint_random( var_1 );
    return var_4;
}

spawnintermission( var_0, var_1, var_2 )
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self notify( "_encstr_983508635BE787C548A1" );
    self notify( "_encstr_A2BF0CF1C504995E3ABF99435772" );

    if ( !isdefined( var_1 ) )
        var_1 = "_encstr_AFBC0D0BCD04870AC0430B90B8DFED";

    if ( !isdefined( var_2 ) )
        var_2 = 1;

    setspawnvariables();
    scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
    scripts\mp\utility\lower_message::clearlowermessages();
    scripts\mp\utility\player::_freezecontrols( 1, undefined, "_encstr_AF70124BF8BBABCB4450143D76E89FF2C758F212" );

    if ( var_2 )
        self setclientdvar( "_encstr_AFD20B80C9D72A7F9C077A7130", 1 );

    if ( isdefined( level.finalkillcam_winner ) && level.finalkillcam_winner != "_encstr_AABA05236DC831" && isdefined( level.match_end_delay ) && scripts\mp\utility\game::waslastround() && !istrue( level.doingbroshot ) )
        wait( level.match_end_delay );

    if ( !istrue( level.doingbroshot ) )
        scripts\mp\utility\player::updatesessionstate( var_1 );

    scripts\mp\utility\player::clearkillcamstate();
    self.friendlydamage = undefined;

    if ( !isdefined( var_0 ) )
    {
        if ( !isdefined( level.localeid ) )
        {
            var_3 = getentarray( "_encstr_A4D3177D8391473C2F1EFE301F30CA83C12B2BF9BBFBB492F2", "_encstr_B9110A36362C3737732CDA59" );
            var_3 = scripts\mp\spawnscoring::checkdynamicspawns( var_3 );
            var_0 = var_3[0];
        }
        else
            var_0 = getspectatepoint();
    }

    if ( !isdefined( level.custom_ending ) )
    {
        self spawn( var_0.origin, var_0.angles );
        scripts\mp\utility\player::_id_12898( "_encstr_A61C345103A20B90B2DD2039848B22E23BDBEBD7F3C85820FD3268F02A6360F08222F3816616B7513F8715E1DA686924586E5B0BFAA8" + var_0.origin );
        scripts\mp\utility\player::setdof_spectator();
    }

    scripts\mp\utility\player::_freezecontrols( 1, undefined, "_encstr_AF70124BF8BBABCB4450143D76E89FF2C758F212" );
}

spawnendofgame()
{
    if ( isdefined( level._id_11C85 ) && self [[ level._id_11C85 ]]() )
        return;

    if ( isdefined( level.custom_ending ) && scripts\mp\utility\game::waslastround() )
        level notify( "_encstr_AA5E144BD130A293E821036BEBD8CF51B87DD4A90DD8" );

    if ( !istrue( self.controlsfrozen ) )
        scripts\mp\utility\player::_freezecontrols( 1, undefined, "_encstr_89A00F7BA331C37D6515BA61C6C75EC737" );

    if ( istrue( level.doingbroshot ) )
    {
        self notify( "_encstr_983508635BE787C548A1" );
        scripts\mp\utility\player::clearkillcamstate();
    }
    else
        spawnspectator();
}

setspawnvariables()
{
    scripts\cp_mp\utility\shellshock_utility::_stopshellshock();
    self stoprumble( "_encstr_A4BE0D23B06BC2D995BEA1B258CECB" );
    self.deathposition = undefined;
}

callback_playerdisconnect( var_0 )
{
    if ( !isdefined( self.connected ) )
        return;

    self.locationtriggersetpaused = 1;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" && self isinexecutionvictim() && isalive( self ) )
    {
        var_1 = self getmountconfigenabled();

        if ( !isbot( self ) )
        {
            var_2 = self.health;

            if ( scripts\mp\damage::_id_1331E( self ) )
            {
                var_1 scripts\mp\utility\stats::incpersstat( "_encstr_B8BE07320B5B16ECAC", var_2 );

                if ( !isdefined( var_1.isbecomingzombie ) )
                    var_1.isbecomingzombie = var_2;
                else
                    var_1.isbecomingzombie = var_1.isbecomingzombie + var_2;
            }
            else if ( isdefined( level._id_12001 ) )
                var_1 [[ level._id_12001 ]]( var_2 );

            var_1 _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::updatebrscoreboardstat( "_encstr_9BB10C4A0BD35E9F51D59589E95B", var_1.pers["_encstr_B8BE07320B5B16ECAC"] );
            self kill( self.origin, var_1, var_1, "_encstr_87230ED5301DEFDF39A94821C9F38573" );
            self notify( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
        }
    }

    if ( getdvarint( "_encstr_B1B60AC10CAECB5C010FEDFB" ) != 0 )
    {
        var_3 = getmatchdata( "_encstr_93981089125769A04D9D0B29DBB481275B6A", "_encstr_9F19128B4207C350EA2FAFBF2DD5E0989B4AC173" );
        var_3++;
        setmatchdata( "_encstr_93981089125769A04D9D0B29DBB481275B6A", "_encstr_9F19128B4207C350EA2FAFBF2DD5E0989B4AC173", var_3 );
    }

    var_4 = undefined;

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
    {
        if ( istrue( self.pers["_encstr_BAD511D357F011D848FD8F053AB62F0DD61103"] ) || istrue( self.pers["_encstr_BED60ECA673D9B8989A0337FA02077C2"] ) )
            var_4 = "_encstr_A8EB0BDF6B40BFFF9069A0C89F";

        if ( scripts\mp\utility\game::round_vehicle_logic() == "_encstr_9507034B25" )
        {
            var_5 = [];

            foreach ( var_7 in scripts\mp\utility\teams::getenemyteams( self.team ) )
            {
                if ( scripts\mp\utility\teams::getteamdata( var_7, "_encstr_892A0BA3D3F25C4033ADD34893" ) )
                    var_5[var_5.size] = var_7;
            }

            var_9 = var_5.size + 1;
            scripts\cp_mp\utility\game_utility::_id_13168( var_9 );
        }
    }

    if ( isdefined( level.music_timer_10seconds ) )
        var_4 = level.music_timer_10seconds;

    scripts\cp_mp\utility\game_utility::stopkeyearning( var_4 );

    if ( scripts\mp\utility\killstreak::iscontrollingproxyagent() )
        self restorecontrolagent();

    removeplayerondisconnect();
    scripts\mp\spawnlogic::removefromparticipantsarray();
    scripts\mp\spawnlogic::removefromcharactersarray();
    scripts\cp_mp\utility\player_utility::_id_12C03();
    var_10 = self getentitynumber();

    if ( !level.teambased )
        game["_encstr_BD1B0AB298DBD25C53F9F7EB"][self.guid] = undefined;

    if ( level.splitscreen )
    {
        var_11 = level.players;

        if ( var_11.size <= 1 )
            level thread scripts\mp\gamelogic::forceend();
    }

    if ( isdefined( self.kills ) && isdefined( self.deaths ) )
    {
        if ( scripts\mp\utility\game::getgametype() == "_encstr_9DB606854E567385" && 3 > self.timeplayed["_encstr_BE7D068EF6D10B1B"] )
        {
            if ( !isdefined( self.arenadamage ) )
                return;

            var_12 = self.arenadamage;
            setplayerteamrank( self, self.clientid, var_12 );
        }
        else if ( 120 < self.timeplayed["_encstr_BE7D068EF6D10B1B"] )
        {
            var_13 = ( self.kills - self.deaths ) / ( self.timeplayed["_encstr_BE7D068EF6D10B1B"] / 60 );
            setplayerteamrank( self, self.clientid, var_13 );
        }
    }
    else
    {

    }

    var_14 = self getentitynumber();
    var_15 = self.guid;
    logprint( "_encstr_B607035967" + var_15 + "_encstr_B14C0267" + var_14 + "_encstr_B14C0267" + self.name + "_encstr_A34C02A0" );

    if ( drawentitybounds() )
        analyticsstreamerlogfiletagplayer( "_encstr_B607035967" + var_15 + "_encstr_B14C0267" + var_14 + "_encstr_B14C0267" + self.name + "_encstr_A34C02A0" );

    thread scripts\mp\events::disconnected();

    if ( level.gameended )
        scripts\mp\gamescore::removedisconnectedplayerfromplacement();

    if ( isdefined( self.team ) )
        removefromteamcount();

    scripts\cp_mp\utility\weapon_utility::clearlockedonondisconnect( self );

    if ( isdefined( self.team ) && isdefined( self.squadindex ) && self.team != "_encstr_A68C0A5803A5D151A2B310A6" && self.team != "_encstr_B33E0979A77828123F58A2" )
        scripts\mp\menus::leavesquad( self.team, self.squadindex );

    if ( self.sessionstate == "_encstr_8F7508BB18675378EBC7" && !( isdefined( self.fauxdead ) && self.fauxdead ) )
        removefromalivecount( 1, "_encstr_9FAA0CFCF8EFF3ADEE0877E7E3D2" );
    else if ( self.sessionstate != "_encstr_8F7508BB18675378EBC7" && scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" && ( _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::iswaitingtoentergulag( self ) || _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::update_current_solution( self ) || _encstr_9E81231898C28383CB8760E558BF27EB18E74BB010797A7D4A032187800594B088064FFB1B::use_csm( self ) ) )
        removefromalivecount( 1, "_encstr_93AA0CFCAB688FB50DE0F90EACDF" );
    else if ( self.sessionstate == "_encstr_AFBC0D0BCD04870AC0430B90B8DFED" && isdefined( self.team ) && scripts\engine\utility::array_contains( level.teamdata[self.team]["_encstr_A31C0D41AACF5C484A3493BB25AAB0"], self ) )
        removefromalivecount( 1, "_encstr_B7AA0C09A962A0B70B4A09F1D346" );
    else if ( self.sessionstate == "_encstr_A68C0A5803A5D151A2B310A6" || self.sessionstate == "_encstr_816705F27BBF90" )
    {
        if ( isdefined( self.team ) && scripts\engine\utility::array_contains( level.teamdata[self.team]["_encstr_A31C0D41AACF5C484A3493BB25AAB0"], self ) )
            removefromalivecount( 1, "_encstr_A1AA0C7BA083930225C85FD62D49" );

        level thread [[ level.updategameevents ]]();
    }

    if ( isdefined( self.team ) )
        scripts\mp\utility\teams::_id_140C9( "_encstr_8A820B4696CDB1ED3737AC1B3A", self.team, self );

    scripts\mp\utility\disconnect_event_aggregator::rundisconnectcallbacks( self );
    scripts\mp\gamelogic::updatematchhasmorethan1playeromnvaronplayerdisconnect();
    scripts\common\utility::_id_13E0A( level._id_11B2C, var_0 );

    if ( level.players.size == 0 )
        level thread mp_oilrig_patches();
}

mp_oilrig_patches()
{
    level notify( "_encstr_AB7814AD4EB38DF33273F0795A0DAB87FFFC2693DD03" );
    level endon( "_encstr_AB7814AD4EB38DF33273F0795A0DAB87FFFC2693DD03" );
    level endon( "_encstr_87940A7F075A88E8ABD37951" );
    var_0 = getdvarfloat( "_encstr_B199254BB6535EC090EE50282BF8AA1BA428C71B759DA9A83B90E78BE578D1EF9BCB11FCD82A10", 30.0 );
    wait( var_0 );

    if ( scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" && getdvarint( "_encstr_9C0F326E8D93EB910BD12CAF99B7271BCA7DB9567319D7B52C1DD84346853AC27DCCDBC9F573F6F50EB1852FAC9C9BAF63CA33D1", 1 ) == 1 && istrue( level.br_prematchstarted ) )
        scripts\mp\gamelogic::_id_1301F();

    thread scripts\mp\gamelogic::endgame( undefined, game["_encstr_94EA0B2BE623AF39CA589BBDB9"]["_encstr_BD4D10FC08789429650D5B5771AFD2F9E0D1"] );
}

removeplayerondisconnect()
{
    var_0 = 0;

    for ( var_1 = 0; var_1 < level.players.size; var_1++ )
    {
        if ( level.players[var_1] == self )
        {
            for ( var_0 = 1; var_1 < level.players.size - 1; var_1++ )
                level.players[var_1] = level.players[var_1 + 1];

            level.players[var_1] = undefined;
            break;
        }
    }

    if ( !isbot( self ) )
        level.playercustomizationdata[self getentitynumber()] = undefined;

    level.playersbyentitynumber[self getentitynumber()] = undefined;
}

initclientdvarssplitscreenspecific()
{
    if ( level.splitscreen || self issplitscreenplayer() )
    {
        self setclientdvars( "_encstr_A91E0A88F1CF752F94F25006", "_encstr_94F9059B7E460D" );
        setdvar( "_encstr_8F64243389CFC7D0371AB39B3CD658989FC20CDFD15F86E08AF4F3934B0328DEDF4AA1218ABF", 0 );
    }
    else
        self setclientdvars( "_encstr_A91E0A88F1CF752F94F25006", "_encstr_AF4C02EA" );
}

initclientdvars()
{
    setdvar( "_encstr_AD550B6DD82130DBC7E1CBF331", 1 );
    setdvar( "_encstr_88E60B315AD749117181B993EF", 1 );

    if ( level.hardcoremode )
    {
        setdvar( "_encstr_AD550B6DD82130DBC7E1CBF331", 0 );
        setdvar( "_encstr_88E60B315AD749117181B993EF", 1 );
    }

    if ( isdefined( level.alwaysdrawfriendlynames ) && level.alwaysdrawfriendlynames )
        setdvar( "_encstr_9F290B16075DB531C71F7F7DF9", 1 );
    else
        setdvar( "_encstr_9F290B16075DB531C71F7F7DF9", 0 );

    self setclientdvars( "_encstr_951F19832F19FF235F1BC903A1A6F37698972A25B31042377471C3", 1 );
    initclientdvarssplitscreenspecific();

    if ( scripts\mp\utility\game::getgametypenumlives() )
    {
        if ( level.teambased )
            self setclientdvars( "_encstr_9F5F0AC12A24C752271971D8", 0, "_encstr_AACD0A6A96936AA545158A92", 1, "_encstr_A6040BDF73F06E391FC2F48C3A", 1, "_encstr_87660BE414130B6E6AE9405115", 0 );
        else
            self setclientdvars( "_encstr_9F5F0AC12A24C752271971D8", 1, "_encstr_AACD0A6A96936AA545158A92", 0, "_encstr_A6040BDF73F06E391FC2F48C3A", 0, "_encstr_87660BE414130B6E6AE9405115", 0 );
    }
    else
        self setclientdvars( "_encstr_9F5F0AC12A24C752271971D8", 0, "_encstr_AACD0A6A96936AA545158A92", 1, "_encstr_A6040BDF73F06E391FC2F48C3A", 1, "_encstr_87660BE414130B6E6AE9405115", 0 );

    if ( level.teambased )
        self setclientdvars( "_encstr_AFD20B80C9D72A7F9C077A7130", 0 );

    self setclientdvar( "_encstr_AD6B0C83746F38017B8F8F9BE332", 0 );

    if ( getdvarint( "_encstr_B18711376C9CFA344B8ED8B76C7D469589D5D9" ) )
    {
        for ( var_0 = 0; var_0 < 6; var_0++ )
            self setclientdvar( "_encstr_BD260BD5D27DA1A54736BD1BBE" + var_0, "_encstr_A40101" );

        self.hitlocinited = 1;
    }
}

connect_validateplayerteam()
{
    if ( !isdefined( self ) )
        return;

    if ( self.sessionteam == "_encstr_AABA05236DC831" && scripts\mp\utility\game::matchmakinggame() && level.teambased && !isbot( self ) && !initmaxspeedforpathlengthtable( self ) && !self ismlgspectator() && scripts\mp\utility\game::getgametype() != "_encstr_87E507D23766566CD1" )
    {
        getentitylessscriptablearray( "_encstr_BCA516CF99D8E21ED849450CC1B94C7AAFCB7F6705F64ADA", [ "_encstr_81E90C8336B097CA93AF3C5D9619", self getxuid(), "_encstr_B96B07E81A80B07693", self ishost() ] );
        wait 1.5;
        kick( self getentitynumber(), "_encstr_A62A1D80DE7566CA816BA9BDA551442F8A9508A94458CBF6D943AC5493391D" );
    }
}

queueconnectednotify()
{
    for (;;)
    {
        if ( !isdefined( level.players_waiting_for_callback ) )
        {
            waitframe();
            continue;
        }

        break;
    }

    for (;;)
    {
        for ( var_0 = 0; var_0 < level.players_waiting_for_callback.size; var_0++ )
        {
            var_1 = level.players_waiting_for_callback[var_0];

            if ( isdefined( var_1 ) )
            {
                level notify( "_encstr_87940A7F075A88E8ABD37951", var_1 );
                var_1 notify( "_encstr_87B5138F78C8665AD72D473F80FFB23ED320C35FB0" );
                level.players_waiting_for_callback[var_0] = undefined;
                break;
            }
        }

        var_2 = scripts\engine\utility::array_removeundefined( level.players_waiting_for_callback );
        level.players_waiting_for_callback = var_2;
        waitframe();
    }
}

onversusdone( var_0, var_1 )
{
    if ( var_0 != "_encstr_A9390CECB24EE6576E7D46BDB9B2" )
        return;

    self.versusdone = 1;
}

initsegmentstats()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    level thread recordplayersegmentdata();

    for (;;)
    {
        level waittill( "_encstr_87940A7F075A88E8ABD37951", var_0 );
        level thread createplayersegmentstats( var_0 );
    }
}

recordplayersegmentdata()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    wait 4;

    for (;;)
    {
        wait 1;

        foreach ( var_1 in level.players )
        {
            if ( istrue( var_1.get_baseaccuracy ) )
                var_1 thread updateplayersegmentdata();
        }
    }
}

createplayersegmentstats( var_0 )
{
    var_0 endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    var_0 waittill( "_encstr_9B6F0FDC8316DDE62B8CF507C616CB599C" );
    var_0.segments = [];
    var_0.segments["_encstr_B3060EB213BB8B4F7248174B25D90E3D"] = 0;
    var_0.segments["_encstr_8C900C30AAC3B3A8F724C045E923"] = 0;
    var_0.segments["_encstr_943F14BA18167F23CD806B176B87AAC4573E2503CDFB"] = 0;
    var_0.savedsegmentposition = var_0.origin;
    var_0.positionptm = var_0.origin;
    var_0.get_baseaccuracy = 1;
}

updateplayersegmentdata()
{
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    if ( !isdefined( self.savedsegmentposition ) )
    {
        self.savedsegmentposition = self.origin;
        self.positionptm = self.origin;
    }

    if ( scripts\mp\utility\player::isusingremote() )
    {
        self waittill( "_encstr_B1D215D3FB078F30F7CC1F73E3DC08DC1F73E998D2C34D" );
        self.savedsegmentposition = self.origin;
        self.positionptm = self.origin;
        return;
    }

    self.segments["_encstr_943F14BA18167F23CD806B176B87AAC4573E2503CDFB"]++;
    self.segments["_encstr_B3060EB213BB8B4F7248174B25D90E3D"] = self.segments["_encstr_B3060EB213BB8B4F7248174B25D90E3D"] + distance2d( self.savedsegmentposition, self.origin );
    self.savedsegmentposition = self.origin;

    if ( self.segments["_encstr_943F14BA18167F23CD806B176B87AAC4573E2503CDFB"] % 5 == 0 )
    {
        var_0 = distance2d( self.positionptm, self.origin );
        self.positionptm = self.origin;

        if ( var_0 > 16 )
            self.segments["_encstr_8C900C30AAC3B3A8F724C045E923"]++;
    }
}

shouldshowwidemapshot( var_0 )
{
    return scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" && var_0 < level.prematchperiod && !istrue( self.btestclient ) && !scripts\mp\flags::gameflag( "_encstr_B87F0F4428EDB244C6889FF328BE123BA5" );
}

setuipregamefadeup( var_0 )
{
    var_1 = newclienthudelem( self );
    var_1.x = 0;
    var_1.y = 0;
    var_1.alignx = "_encstr_B1AD05C65666E8";
    var_1.aligny = "_encstr_B91904EC4718";
    var_1.sort = 1;
    var_1.horzalign = "_encstr_BC940BE9D5F91D47B0ABBD851E";
    var_1.vertalign = "_encstr_BC940BE9D5F91D47B0ABBD851E";
    var_1.foreground = 1;
    var_2 = 0.0;
    var_3 = 0.5;

    if ( isdefined( var_2 ) && var_2 > 0 )
        var_1.alpha = 0;
    else
        var_1.alpha = 1;

    var_1 setshader( "_encstr_82AB06A9FD89F05A", 640, 480 );

    if ( isdefined( var_2 ) && var_2 > 0 )
    {
        if ( isdefined( self ) )
            self notify( "_encstr_950B0F5B038DEAFCC8433D49FB28E1535D" );

        var_1 fadeovertime( var_2 );
        var_1.alpha = 1.0;
        wait( var_2 );
    }

    if ( isdefined( self ) )
        self waittill( var_0 );

    var_1 fadeovertime( var_3 );
    var_1.alpha = 0.0;
    wait( var_3 );

    if ( isdefined( var_1 ) )
        var_1 destroy();
}

friendlystatuschangedcallback()
{
    self.pers["_encstr_B7A81327B422900707998A50A287C8187A3483D14D"] = 1;
    self notify( "_encstr_B4DE0ECB3C89019902869A63F5A87B7D" );

    if ( isdefined( self.team ) && scripts\mp\utility\teams::isgameplayteam( self.team ) )
    {
        var_0 = scripts\mp\teams::getoperatorcustomization();
        var_1 = var_0[0];
        var_2 = var_0[1];
        self setcustomization( var_1, var_2 );

        if ( !isdefined( var_1 ) || var_1 == "_encstr_A40101" )
        {
            var_3 = scripts\mp\teams::lookupcurrentoperator( self.team );
            var_4 = scripts\mp\teams::lookupcurrentoperatorskin( self.team );
            scripts\mp\utility\script::laststand_dogtags( "_encstr_BE4E3B8827C44449F20227B55D5BF7CB2B9B4040BF72D9095A6DA8932456DDB1743750D0170439D322D29DC35E0ADF59D1FA786023988B890AB81D4E36" + self getentitynumber() + "_encstr_BED108EDF701BA9158FA" + self.team + "_encstr_9D5D111608B70795C92C1D7B4E4A738C590F02" + var_3 + "_encstr_8A06150B02DB1CB2272C8EDE9C9AB65AE694DC19ACE180" + var_4 );
        }
        else if ( !isdefined( var_2 ) || var_2 == "_encstr_A40101" )
        {
            var_3 = scripts\mp\teams::lookupcurrentoperator( self.team );
            var_4 = scripts\mp\teams::lookupcurrentoperatorskin( self.team );
            scripts\mp\utility\script::laststand_dogtags( "_encstr_8BEB3B7656E89EE02B9CB047ED9C34576EA3BDAD2DE9588E2DB79B14258093CAA3AE4ECDB23201AC5B07D1BC0134AC85461033DE930407B116BC2B3908" + self getentitynumber() + "_encstr_BED108EDF701BA9158FA" + self.team + "_encstr_9D5D111608B70795C92C1D7B4E4A738C590F02" + var_3 + "_encstr_8A06150B02DB1CB2272C8EDE9C9AB65AE694DC19ACE180" + var_4 );
        }
    }
}

_id_119CD()
{
    var_0 = isbot( self ) || initmaxspeedforpathlengthtable( self ) || isai( self );

    if ( scripts\mp\utility\game::rankingenabled() )
    {
        var_1 = self getplayerdata( "_encstr_9F7C076CF6B5D6F6E6", "_encstr_A2FD0E482332CDC0AF4A8DFE23FF88AD", "_encstr_9EA30C0153F25BC082E551CB5774", "_encstr_9507032321" );
        var_2 = self getplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_ADBC0C49D2972E100B43E1C38C32", "_encstr_BA8D06E75935489E" );
        var_3 = self getplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_ADBC0C49D2972E100B43E1C38C32", "_encstr_BA0607842BE8FB4B56" );
        var_4 = self getplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_87270B6B16E88DA14D470B1DE6", "_encstr_9DF605EE5ADC37" );
        var_5 = self getplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_87270B6B16E88DA14D470B1DE6", "_encstr_9E6807D8F69BCD599B" );
        var_6 = self getplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_ADBC0C49D2972E100B43E1C38C32", "_encstr_80CC058CB830E3" );
        var_7 = self getplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_ADBC0C49D2972E100B43E1C38C32", "_encstr_BADA076094A34865EB" );
        var_8 = self getplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_ADBC0C49D2972E100B43E1C38C32", "_encstr_B9410A4838994B4D069B7F48" );
        var_9 = self getplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_ADBC0C49D2972E100B43E1C38C32", "_encstr_8BD00B054FCAE68981329B51DA" );
        var_10 = self getplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_87270B6B16E88DA14D470B1DE6", "_encstr_9EB80C78A01D335B67504210E3A7" );
        var_11 = self getplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_87270B6B16E88DA14D470B1DE6", "_encstr_809310348B90AF22E920B34A30A12523C9E1" );
        var_12 = self getplayerdata( "_encstr_A20703C962", "_encstr_9BA20C8A189F5A9F3EBF93A7CBB8", "_encstr_87270B6B16E88DA14D470B1DE6", "_encstr_93FB06DC6CBDE4CA" );
        var_13 = self getplayerdata( level.loadoutsgroup, "_encstr_9BE80D401A8D9849BD7562D5552BD8", "_encstr_82250C6ECAB0CD7B37BE9C5837B5" );
    }
    else
    {
        var_1 = 0;
        var_2 = 0;
        var_3 = 0;
        var_4 = 0;
        var_5 = 0;
        var_6 = 0;
        var_7 = 0;
        var_8 = 0;
        var_9 = 0;
        var_10 = 0;
        var_11 = 0;
        var_12 = 0;
        var_13 = 0;
    }

    var_14 = self setstrafereverse();
    var_15[0] = "_encstr_A40101";
    var_15[1] = "_encstr_A40101";
    var_16[0] = -1;
    var_16[1] = -1;
    var_17[0] = "_encstr_AABA05236DC831";
    var_17[1] = "_encstr_AABA05236DC831";

    if ( !istrue( game["_encstr_87010E111E3823354DC251C560F3ED0A"] ) && !isbot( self ) )
    {
        if ( level.teambased )
        {
            var_15[0] = scripts\mp\teams::lookupcurrentoperator( "_encstr_BC850785638DA59537" );
            var_15[1] = scripts\mp\teams::lookupcurrentoperator( "_encstr_BA840579D3F7F6" );
            var_16[0] = scripts\mp\teams::lookupcurrentoperatorskin( "_encstr_BC850785638DA59537" );
            var_16[1] = scripts\mp\teams::lookupcurrentoperatorskin( "_encstr_BA840579D3F7F6" );
            var_18 = scripts\mp\teams::getoperatorexecution( var_15[0] );

            if ( isdefined( var_18 ) )
                var_17[0] = var_18;

            var_18 = scripts\mp\teams::getoperatorexecution( var_15[1] );

            if ( isdefined( var_18 ) )
                var_17[1] = var_18;
        }
        else
        {
            var_15[0] = scripts\mp\teams::lookupcurrentoperator( "_encstr_BC850785638DA59537" );
            var_16[0] = scripts\mp\teams::lookupcurrentoperatorskin( "_encstr_BC850785638DA59537" );
            var_18 = scripts\mp\teams::getoperatorexecution( var_15[0] );

            if ( isdefined( var_18 ) )
                var_17[0] = var_18;
        }
    }

    var_19 = 0;

    if ( level.onlinegame )
        var_19 = self isfireteamleader();

    self.pers["_encstr_82901345154157FEFF68F25A18113933F871DDF72E"] = getsystemtime();
    var_20 = _func_042D();
    self dlog_recordplayerevent( "_encstr_88DB1E87A97FD2F701B32F7B683E902A3BBB4FBA98934A04E9D8CF0740D16A73", [ "_encstr_82901345154157FEFF68F25A18113933F871DDF72E", self.pers["_encstr_82901345154157FEFF68F25A18113933F871DDF72E"], "_encstr_9806093B58B6B227D1589D", self.name, "_encstr_89EF05D46BA8FD", self.sessionteam, "_encstr_B10B0AA002AC2516D37137A5", self getjointype(), "_encstr_A6C007B4B9F54CDB8E", var_0, "_encstr_B24106CB904BB31D", self getskill(), "_encstr_884109AF838E1B034718F0", self isguest(), "_encstr_87530E534F71BF80E28BB24EB4D758F5", var_19, "_encstr_8AC5055AE0AF0B", var_14[0], "_encstr_A2C5054BC1D731", var_14[1], "_encstr_BCC505E3BBB77F", var_14[2], "_encstr_98C5052D07D7C8", var_14[3], "_encstr_A4E4094BDCF5B3ABB2E6E8", self getmissilevelocity(), "_encstr_B9B0097B3D29CBE34730EB", var_1, "_encstr_8A510C5E9C6FA319214A4868D2C2", var_2, "_encstr_97B90D2F40C99AAB4FC5A75E35C913", var_3, "_encstr_A3AD0B371D16E41DFABB2D9BDC", var_4, "_encstr_8CE60D9BE858E43AAF8DBD9B6E59B9", var_5, "_encstr_B6300BE61DB09C8EAF342D3ACD", var_6, "_encstr_B6250DC32D885BACD9C9102A4A4890", var_7, "_encstr_9C351103934F6E739E6CCB19CDB1DAC87BBF67", var_8, "_encstr_9CAB118634C70BA199B270684B2D53E357CD0E", var_9, "_encstr_9F2213835097BB933717EF104D6FF6A2323158FAF9", var_10, "_encstr_A43818E6E8B0C9477DD1A5D695AF076316F295C87D1DEDA316D8", var_11, "_encstr_B45F0C9B01E07223589332FA5BAD", var_12, "_encstr_97360F0ECC3FF32911CB40F0D3F32BE987", var_13, "_encstr_A1EC108709C07277CD1023F939299B6C68B7", var_15[0], "_encstr_8FF30E57684182E211489AD9A7D1BA4B", var_15[1], "_encstr_A4FB15B7AB3A56780CA5CB66CECCC803921F5F17AF8210", var_16[0], "_encstr_88A41370B85F8313CB2A7011E2E0DB7B5F438AFB0E", var_16[1], "_encstr_A3D71E97EB350E509188BEA13B6BD8E83BBADE7D91A522C39B67CFFA69C67B12", var_17[0], "_encstr_95801CA0390F503F91ED86916E0B90B39F0A68A106FB93232FED8080D521", var_17[1], "_encstr_95900C2C1B89183AD7A9EBC7AF86", self calloutmarkerping_getactive(), "_encstr_8FD40EE368570FF5B81F7457CD107DA7", var_20, "_encstr_B4640CE553719217AE133359988D", self _meth_87C3() ] );
}

repair_grill_fixing_long_sfx()
{
    if ( level.gametype != "_encstr_9507034B25" )
        return 30;
    else
        return 200;
}

callback_playerconnect()
{
    self.versusdone = 0;
    self.pers["_encstr_9B350DDAF81F5257D305C4FC2B381F"] = 0;
    self.statusicon = "_encstr_AAD816CBC0E12F4391CF9BD32E1F9AD708A0777FA038464A";
    self waittill( "_encstr_815E0685D732F338" );
    self.statusicon = "_encstr_A40101";

    if ( isai( self ) || getdvarint( "_encstr_B45C0B9D35E0F3234530425A99", 0 ) == 1 )
        friendlystatuschangedcallback();

    self.connecttime = undefined;
    self clearpredictedstreampos();

    if ( scripts\mp\utility\game::getgametype() != "_encstr_9507034B25" )
        self clearadditionalstreampos();

    var_0 = 1;

    if ( isdefined( level._id_12065 ) )
        var_0 = self thread [[ level._id_12065 ]]();

    if ( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) && istrue( level.usespawnselection ) && isdefined( self.sessionteam ) )
    {
        if ( self.sessionteam == "_encstr_BC850785638DA59537" )
        {
            var_1 = level.spawncameras["_encstr_A4B9109F170167BF36E602DAA89BAF9A11C3"]["_encstr_BC850785638DA59537"];
            self setadditionalstreampos( var_1.origin, 1 );
        }
        else if ( self.sessionteam == "_encstr_BA840579D3F7F6" )
        {
            var_1 = level.spawncameras["_encstr_9C6B0EAF178968E0DBB96932A2E73B99"]["_encstr_BA840579D3F7F6"];
            self setadditionalstreampos( var_1.origin, 1 );
        }
    }

    self visionsetfadetoblackforplayer( "_encstr_98070313DD", 0 );
    var_2 = "_encstr_87B5138F78C8665AD72D473F80FFB23ED320C35FB0";
    var_3 = scripts\mp\utility\game::gettimepassed() / 1000 + 6;

    if ( !isdefined( self.pers["_encstr_B7A81327B422900707998A50A287C8187A3483D14D"] ) && shouldshowwidemapshot( var_3 ) )
        var_2 = "_encstr_B4DE0ECB3C89019902869A63F5A87B7D";

    thread setuipregamefadeup( var_2 );
    scripts\mp\utility\game::checkrealismhudsettings();
    level.players_waiting_for_callback[level.players_waiting_for_callback.size] = self;
    self waittill( "_encstr_87B5138F78C8665AD72D473F80FFB23ED320C35FB0" );
    self.connected = 1;

    if ( !isdefined( level.uniqueplayersconnected ) )
        level.uniqueplayersconnected = 1;
    else
        level.uniqueplayersconnected++;

    initinputtypewatcher();
    self setclientomnvar( "_encstr_A2F415739F916BA167A06F26AFB9BB58C13F58354543ED", 0 );

    if ( self ishost() )
        level.player = self;

    if ( !level.splitscreen && !isdefined( self.pers["_encstr_93FB06DC6CBDE4CA"] ) )
    {
        var_4 = 0;
        var_5 = getdvarint( "_encstr_B1C6221FC0A20F739C2D833FF3673BEA89D6F01D87162D7850AF2046EBB0A9B1F573AA60", 0 );

        if ( var_5 > 0 )
        {
            if ( isdefined( level.starttime ) )
            {
                var_6 = ( gettime() - level.starttime ) / 1000;

                if ( var_6 <= var_5 )
                    var_4 = 1;
            }
            else
                var_4 = 1;
        }

        if ( var_4 == 0 )
        {

        }
    }

    self.usingonlinedataoffline = self isusingonlinedataoffline();
    initclientdvars();
    initplayerstats();
    scripts\mp\accolades::applyaccoladestructtoplayerpers();

    if ( getdvar( "_encstr_8B7A0B3524F7A9F8501F910F6C" ) == "_encstr_AF4C02EA" )
        level waittill( "_encstr_A1400915DC3FE36DECFB08" );

    self.guid = scripts\mp\utility\player::getuniqueid();
    var_7 = 0;

    if ( !isdefined( self.pers["_encstr_AFD2097220936783BB9B4C"] ) )
    {
        self.pers["_encstr_AFD2097220936783BB9B4C"] = game["_encstr_AFD2097220936783BB9B4C"];
        game["_encstr_AFD2097220936783BB9B4C"]++;
        var_8 = repair_grill_fixing_long_sfx();

        if ( game["_encstr_AFD2097220936783BB9B4C"] >= var_8 )
        {
            game["_encstr_AFD2097220936783BB9B4C"] = var_8 - 1;
            self.pers["_encstr_AFD2097220936783BB9B4C"] = var_8 - 1;
        }

        var_7 = 1;
        self.pers["_encstr_94A4153F7FBBE920A9F0213761EF7709D7307E23E2F9AB"] = [];
        self.pers["_encstr_8AE31A8F30B323C281FF4B06CEB78AFA39896B57A06BBBFACB3753BA"] = [];
        self.pers["_encstr_BE4F0E7073F12331B242ADADDF6A9968"] = 0;
        self.pers["_encstr_892F1187EF925E40316BF4A952EC811DAA1B09"] = 0;
    }

    if ( istrue( level.flashpointactive ) )
        thread scripts\mp\flashpoint::flashpoint_trackplayerevents( self );

    if ( var_7 )
    {
        scripts\mp\persistence::statsetchildbuffered( "_encstr_A2460627DEABDC23", "_encstr_801A0BD15ADA560A63B09795C8", 0, 1 );
        self setplayerdata( "_encstr_9F7C076CF6B5D6F6E6", "_encstr_A2460627DEABDC23", "_encstr_873608A3DBE82CB1B083", 0 );
        scripts\cp_mp\utility\game_utility::startkeyearning();

        if ( !isdefined( game["_encstr_B356123B18BB3AB7F17F3C298399E3CECFA812A3"] ) )
            game["_encstr_B356123B18BB3AB7F17F3C298399E3CECFA812A3"] = 1;
        else
            game["_encstr_B356123B18BB3AB7F17F3C298399E3CECFA812A3"]++;
    }

    self.clientid = self.pers["_encstr_AFD2097220936783BB9B4C"];
    self.pers["_encstr_A2ED0F7B8081DDB46B89DDDA6D3D7A8B08"] = 0;
    logprint( "_encstr_8B07033AD0" + self.guid + "_encstr_B14C0267" + self getentitynumber() + "_encstr_B14C0267" + self.name + "_encstr_A34C02A0" );

    if ( drawentitybounds() )
        analyticsstreamerlogfiletagplayer( "_encstr_8B07033AD0" + self.guid + "_encstr_B14C0267" + self getentitynumber() + "_encstr_B14C0267" + self.name + "_encstr_A34C02A0" );

    self logstatmatchguid();

    if ( getdvarint( "_encstr_B1B60AC10CAECB5C010FEDFB" ) != 0 )
    {
        var_9 = getmatchdata( "_encstr_93981089125769A04D9D0B29DBB481275B6A", "_encstr_9BE60D585D99584B726882CF5D5BE0" );

        if ( var_7 )
        {
            var_9++;
            setmatchdata( "_encstr_93981089125769A04D9D0B29DBB481275B6A", "_encstr_9BE60D585D99584B726882CF5D5BE0", var_9 );
        }

        if ( isbot( self ) || initmaxspeedforpathlengthtable( self ) || isai( self ) )
            var_10 = 1;
        else
            var_10 = 0;

        if ( scripts\mp\utility\game::matchmakinggame() && !scripts\mp\utility\game::denysystemicteamchoice() && !var_10 )
        {

        }
    }

    if ( var_7 )
        _id_119CD();

    if ( level.uniqueplayersconnected <= repair_grill_fixing_long_sfx() )
    {
        if ( var_7 && isdefined( level.matchrecording_logeventplayername ) )
            [[ level.matchrecording_logeventplayername ]]( self.clientid, self.team, self.name );
    }

    if ( !level.teambased )
        game["_encstr_BD1B0AB298DBD25C53F9F7EB"][self.guid] = 0;

    if ( !isdefined( self.pers["_encstr_81C910A89FDA9F18A0527BA7DF74C830B630"] ) )
        self.pers["_encstr_81C910A89FDA9F18A0527BA7DF74C830B630"] = 0;

    if ( !isdefined( self.pers["_encstr_BD0511A7B743C848152EF38859EBA396EA4F0F"] ) )
        self.pers["_encstr_BD0511A7B743C848152EF38859EBA396EA4F0F"] = 0;

    if ( level.onlinestatsenabled )
        self.bestlifetimekillstreak = scripts\mp\playerstats_interface::getplayerstat( "_encstr_B97F0A0E6DEB716E60A89363", "_encstr_B6CE0B0BB00A03197B88355740" );

    self.lastgrenadesuicidetime = -1;
    self.hasspawned = 0;
    self.waitingtospawn = 0;
    self.wantsafespawn = 0;
    self.wasaliveatmatchstart = 0;
    self.movespeedscaler = 1;
    self.objectivescaler = 1;
    self.killcountthislife = 0;
    self.intel_guys = 0;
    self._id_11BC2 = 0;
    self.show_balloon_deploy_hint = undefined;
    self.shouldxmike109hitmarker = undefined;
    self.lifeid = 0;

    if ( isdefined( self.pers["_encstr_BA0607842BE8FB4B56"] ) )
        self.lifeid = self.pers["_encstr_BA0607842BE8FB4B56"];

    resetuidvarsonconnect();
    waittillframeend;
    level.players[level.players.size] = self;
    level.playersbyentitynumber[self getentitynumber()] = self;
    scripts\mp\spawnlogic::addtoparticipantsarray();
    scripts\mp\spawnlogic::addtocharactersarray();
    scripts\cp_mp\utility\player_utility::being_kicked_from_inactivity();

    if ( game["_encstr_A9AD064B0D19E377"] == "_encstr_B9E70983DEE6D1760BB5CA" )
    {
        self.connectedpostgame = 1;
        self setclientdvars( "_encstr_951F19832F19FF235F1BC903A1A6F37698972A25B31042377471C3", 0 );
        self visionsetfadetoblackforplayer( "_encstr_A40101", 0.25 );
        spawnintermission();
        return;
    }

    if ( var_7 && ( scripts\mp\utility\game::gettimepassed() >= 60000 || game["_encstr_8AC30D9CDEBA73466E41B1585E568C"] > 0 ) )
        self.joinedinprogress = 1;

    if ( isai( self ) && isdefined( level.bot_funcs ) && isdefined( level.bot_funcs["_encstr_957206E843D2CDB5"] ) )
        self thread [[ level.bot_funcs["_encstr_957206E843D2CDB5"] ]]();

    if ( drawentitybounds() && !isai( self ) )
        analyticsstreamerislogfilestreamingenabled( self.guid );

    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );

    if ( isdefined( level.hostmigrationtimer ) )
        thread scripts\mp\hostmigration::hostmigrationtimerthink();

    if ( isdefined( level.onplayerconnectaudioinit ) )
        [[ level.onplayerconnectaudioinit ]]();

    thread scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_monitorplayerusability( self );
    thread abilityleft::claymore_crate_update_hint_logic_alt( self );
    thread scripts\mp\perks\perkfunctions::markedentities_think();

    if ( !isdefined( self.pers["_encstr_89EF05D46BA8FD"] ) )
    {
        var_3 = scripts\mp\utility\game::gettimepassed() / 1000 + 6;

        if ( shouldshowwidemapshot( var_3 ) )
        {
            spawnspectatormapcam();
            self lerpfovbypreset( "_encstr_AA1608C07786F13312D3" );
            self setclientomnvar( "_encstr_B341121BA11E20F223E8B8E5F9514710A177AAEB", 0 );
            initclientdvarssplitscreenspecific();
            self.pers["_encstr_89EF05D46BA8FD"] = "_encstr_A40101";
            self.team = "_encstr_B77805CC2759AC";
        }
        else
            self visionsetfadetoblackforplayer( "_encstr_A40101", 0.5 );

        connect_validateplayerteam();

        if ( self ismlgspectator() )
        {
            if ( self ismlgfollower() )
                thread scripts\mp\menus::setfollower();
            else
                thread scripts\mp\menus::setspectator();
        }
        else if ( dotournamentendgame() && ( self.sessionteam == "_encstr_A68C0A5803A5D151A2B310A6" || self.sessionteam == "_encstr_B33E0979A77828123F58A2" ) )
        {
            self.pers["_encstr_89EF05D46BA8FD"] = self.sessionteam;
            self.team = self.sessionteam;
            thread spawnspectator();
        }
        else if ( ( scripts\mp\utility\game::matchmakinggame() || scripts\mp\utility\game::lobbyteamselectenabled() || isgamebattlematch() ) && self.sessionteam != "_encstr_AABA05236DC831" )
        {
            if ( var_0 )
                thread spawnspectator();

            if ( ( getdvar( "_encstr_A10E10BABF1EB12D4B819F18E8488BAA02E5", "_encstr_A40101" ) == "_encstr_BE180432D63D" || getdvar( "_encstr_A10E10BABF1EB12D4B819F18E8488BAA02E5", "_encstr_A40101" ) == "_encstr_89E10946E1536E6DD6A2B0" || getdvar( "_encstr_A10E10BABF1EB12D4B819F18E8488BAA02E5", "_encstr_A40101" ) == "_encstr_AD1F058082CACF" ) && getdvarint( "_encstr_8A4E1E5E8B2306356A09680BF243EBB83F24EDDFEDEF895F1272C060FA1FBDF3", 0 ) == 1 )
                thread scripts\mp\teams::_id_12304();
            else
            {
                if ( scripts\mp\menus::brking_updateteamscore() )
                    self.sessionteam = "_encstr_BC850785638DA59537";

                thread scripts\mp\menus::setteam( self.sessionteam );
            }

            if ( scripts\mp\utility\game::allowclasschoice() || scripts\mp\utility\game::showfakeloadout() && !isai( self ) )
            {
                if ( getdvarint( "_encstr_A6121C6EC64ED799ED93B1B2FAC62CD8BE37E456FAD8B0D8B16E470B6CB6", 0 ) == 1 && scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_BE180432D63D" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_89E10946E1536E6DD6A2B0" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_AD1F058082CACF" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_B26E07FBDB98427952" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_943608AF02ED7706E041" )
                {
                    var_14 = isdefined( level.allowclasschoicefunc ) && istrue( self [[ level.allowclasschoicefunc ]]() );
                    scripts\mp\utility\script::laststand_dogtags( "_encstr_B40725D0B0C63689161B5BF528D8B05E2B4E86BD9BB959B11DA04A10CAB19BCA4B3380A653A310" + self.name + "_encstr_AB2F2E105D2DBE7BE0475ADB379BF5B62BDCEA019E4023B04085D8B17BBBD0D8166ECD3443ED2D6C563257E6B1084F01" + var_14 );
                }

                self setclientomnvar( "_encstr_82FB10DDD989C0419BF3886E8BD742E738CB", 2 );
            }

            if ( !scripts\mp\utility\game::runleanthreadmode() && scripts\mp\utility\game::matchmakinggame() && !isgamebattlematch() )
                thread kickifdontspawn();

            clearpinnedobjectives();
            return;
        }
        else
        {
            if ( var_0 )
                thread spawnspectator();

            scripts\mp\menus::autoassign();

            if ( scripts\mp\utility\game::allowclasschoice() || scripts\mp\utility\game::showfakeloadout() && !isai( self ) )
            {
                if ( getdvarint( "_encstr_A6121C6EC64ED799ED93B1B2FAC62CD8BE37E456FAD8B0D8B16E470B6CB6", 0 ) == 1 && scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_BE180432D63D" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_89E10946E1536E6DD6A2B0" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_AD1F058082CACF" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_B26E07FBDB98427952" && scripts\mp\utility\game::round_vehicle_logic() != "_encstr_943608AF02ED7706E041" )
                {
                    var_14 = isdefined( level.allowclasschoicefunc ) && istrue( self [[ level.allowclasschoicefunc ]]() );
                    scripts\mp\utility\script::laststand_dogtags( "_encstr_AB341FF617BAF27AEBDF23C70759D6F179423B381803A7371B63D6E6AD452F1F01" + self.name + "_encstr_AB2F2E105D2DBE7BE0475ADB379BF5B62BDCEA019E4023B04085D8B17BBBD0D8166ECD3443ED2D6C563257E6B1084F01" + var_14 );
                }

                self setclientomnvar( "_encstr_82FB10DDD989C0419BF3886E8BD742E738CB", 2 );
            }

            if ( !scripts\mp\utility\game::runleanthreadmode() && scripts\mp\utility\game::matchmakinggame() )
                thread kickifdontspawn();

            clearpinnedobjectives();
            return;
        }
    }
    else
    {
        self visionsetfadetoblackforplayer( "_encstr_A40101", 0.5 );
        connect_validateplayerteam();
        var_15 = self.pers["_encstr_89EF05D46BA8FD"];

        if ( scripts\mp\utility\game::matchmakinggame() && !isbot( self ) && !initmaxspeedforpathlengthtable( self ) && !self ismlgspectator() && getdvarint( "_encstr_8F7B0AE92488FF22E1659980" ) )
            var_15 = self.sessionteam;

        scripts\mp\menus::addtoteam( var_15, 1 );

        if ( scripts\mp\menus::shouldmodesetsquads() )
            thread scripts\mp\menus::setsquad( var_15 );

        if ( isdefined( level._id_12065 ) )
            self thread [[ level._id_12065 ]]();

        if ( self ismlgspectator() )
        {
            thread spawnspectator();
            clearpinnedobjectives();
            return;
        }

        if ( scripts\mp\class::isvalidclass( self.pers["_encstr_9E95066E81471B5F"] ) && var_15 != "_encstr_A68C0A5803A5D151A2B310A6" )
        {
            thread spawnclient();
            clearpinnedobjectives();
            return;
        }

        if ( var_0 )
            thread spawnspectator();

        if ( self.pers["_encstr_89EF05D46BA8FD"] == "_encstr_A68C0A5803A5D151A2B310A6" )
        {
            if ( scripts\mp\utility\game::doesmodesupportplayerteamchoice() && !istrue( self.pers["_encstr_BE08190F54BF128BDA7810205337DF8B07C3950FA45FBBA1472220"] ) )
                scripts\mp\menus::beginteamchoice();
        }
        else
            scripts\mp\menus::beginclasschoice();
    }

    clearpinnedobjectives();
}

callback_playermigrated()
{
    if ( isdefined( self.connected ) && self.connected )
        scripts\mp\utility\game::updateobjectivetext();

    if ( self ishost() )
        initclientdvarssplitscreenspecific();

    var_0 = 0;

    foreach ( var_2 in level.players )
    {
        if ( !isbot( var_2 ) && !initmaxspeedforpathlengthtable( var_2 ) )
            var_0++;
    }

    if ( !isbot( self ) && !initmaxspeedforpathlengthtable( self ) )
    {
        level.hostmigrationreturnedplayercount++;

        if ( level.hostmigrationreturnedplayercount >= var_0 * 2 / 3 )
            level notify( "_encstr_BA3E1C0DEDE63AB65A9D93B0D1A5B7B9AF569BF657760D0E1B85E556E437" );
    }
}

addlevelstoexperience( var_0, var_1 )
{
    var_2 = scripts\mp\rank::getrankforxp( var_0 );
    var_3 = scripts\mp\rank::getrankinfominxp( var_2 );
    var_4 = scripts\mp\rank::getrankinfomaxxp( var_2 );
    var_2 = var_2 + ( var_0 - var_3 ) / ( var_4 - var_3 );
    var_2 = var_2 + var_1;

    if ( var_2 < 0 )
    {
        var_2 = 0;
        var_5 = 0.0;
    }
    else if ( var_2 >= level.maxrank + 1.0 )
    {
        var_2 = level.maxrank;
        var_5 = 1.0;
    }
    else
    {
        var_5 = var_2 - floor( var_2 );
        var_2 = int( floor( var_2 ) );
    }

    var_3 = scripts\mp\rank::getrankinfominxp( var_2 );
    var_4 = scripts\mp\rank::getrankinfomaxxp( var_2 );
    return int( var_5 * ( var_4 - var_3 ) ) + var_3;
}

forcespawn()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_983508635BE787C548A1" );
    wait 60.0;

    if ( self.hasspawned )
        return;

    if ( self.pers["_encstr_89EF05D46BA8FD"] == "_encstr_A68C0A5803A5D151A2B310A6" || self.pers["_encstr_89EF05D46BA8FD"] == "_encstr_B33E0979A77828123F58A2" )
        return;

    if ( !scripts\mp\class::isvalidclass( self.pers["_encstr_9E95066E81471B5F"] ) )
    {
        self.pers["_encstr_9E95066E81471B5F"] = "_encstr_BD8F0E8E13AF371A7023A121543F87CE";
        self.class = self.pers["_encstr_9E95066E81471B5F"];
    }

    thread spawnclient();
}

kickifdontspawn()
{
    if ( getdvarint( "_encstr_9E5E139027D203675142AD389A68FD0C1BEB1030B7", 0 ) == 1 )
        return;

    if ( istrue( self._id_1363E ) && !mayspawn() )
        return;

    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self endon( "_encstr_983508635BE787C548A1" );
    self endon( "_encstr_886B100FA3FB7318C07B88B8EFFB73B313CD" );
    var_0 = getdvarfloat( "_encstr_B9BF0E376CE4D7DAA536DABE8ED2DA2B", 90 );
    var_1 = getdvarfloat( "_encstr_8B3A11DCD8C9AFD6961BADAF6BA5CD1DD2DA95", 45 );
    var_2 = getdvarfloat( "_encstr_B8FD125047BA2E172A6E1A0884626FF304C73868", 120 );
    var_3 = gettime();

    if ( self ishost() )
        kickwait( var_2 );
    else
        kickwait( var_0 );

    var_4 = ( gettime() - var_3 ) / 1000;

    if ( var_4 < var_0 - 0.1 && var_4 < var_1 )
        return;

    if ( self.hasspawned )
        return;

    if ( self.pers["_encstr_89EF05D46BA8FD"] == "_encstr_A68C0A5803A5D151A2B310A6" || self.pers["_encstr_89EF05D46BA8FD"] == "_encstr_B33E0979A77828123F58A2" )
        return;

    kick( self getentitynumber(), "_encstr_A8CC1A3866CDCE621903D1D53DF9FCB7627DA0012C302FEEF1FBD6DD", 1 );
    level thread [[ level.updategameevents ]]();
}

kickwait( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( var_0 );
}

monitorvotekick()
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );

    for ( self.votestokick = 0; self.votestokick < 2; self.votestokick++ )
        self waittill( "_encstr_9EDE0B88CA238BCFF71BE3EE03" );

    kick( self getentitynumber(), "_encstr_87731B9139EF9FCFFB917B7DBADFD48FC47011B91137FB248FF1E9C153" );
}

fakevote()
{
    wait 1.0;
    self notify( "_encstr_9EDE0B88CA238BCFF71BE3EE03" );
    wait 3.0;
    self notify( "_encstr_9EDE0B88CA238BCFF71BE3EE03" );
    wait 2.0;
    self notify( "_encstr_9EDE0B88CA238BCFF71BE3EE03" );
}

totaldisttracking( var_0 )
{
    level endon( "_encstr_AD1D0BEF9161A06F1F684ADA39" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    self endon( "_encstr_983508635BE787C548A1" );
    self notify( "_encstr_B70C1624A8576DA67DEAF3DF50595C8D494049C7CBBBC54F" );
    self endon( "_encstr_B70C1624A8576DA67DEAF3DF50595C8D494049C7CBBBC54F" );
    var_1 = var_0;

    if ( !scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
    {
        scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
        var_1 = self.origin;
    }

    var_2 = 0;
    var_3 = 0;

    for (;;)
    {
        var_4 = scripts\engine\utility::_id_143BD( 5.0, "_encstr_A3750609A5E61883", "_encstr_A11C0E7341A881D2E913AF5F1D8DFAD2", "_encstr_A886143B07903FF2885960019B495012C2A10B8031DD", "_encstr_9D130DCE2B0DA5D8C695FA95C3B48E", "_encstr_ABB21467E06A38BBAB3AD2A8C41B62FF5345737DB86D" );

        if ( var_4 == "_encstr_9D130DCE2B0DA5D8C695FA95C3B48E" && !isdefined( self.lastvehicleseatchangetime ) )
            continue;

        if ( istrue( self.stack_patch_waittill_node ) )
            continue;

        if ( var_4 == "_encstr_ABB21467E06A38BBAB3AD2A8C41B62FF5345737DB86D" )
        {
            var_1 = self.origin;
            continue;
        }

        if ( !isdefined( self.pers["_encstr_9CA812052F9369915FC2C0C029EA43430FC405F5"] ) )
            scripts\mp\utility\stats::initpersstat( "_encstr_9CA812052F9369915FC2C0C029EA43430FC405F5" );

        if ( !isdefined( self.pers["_encstr_A1FF15E8DE8E16B188B4DCE8A29CC2B32BC659C8822396"] ) )
            scripts\mp\utility\stats::initpersstat( "_encstr_A1FF15E8DE8E16B188B4DCE8A29CC2B32BC659C8822396" );

        if ( !isdefined( var_1 ) )
            var_1 = self.origin;

        var_5 = distance( var_1, self.origin );
        scripts\mp\utility\stats::incpersstat( "_encstr_9CA812052F9369915FC2C0C029EA43430FC405F5", var_5 );
        scripts\mp\utility\stats::incpersstat( "_encstr_A1FF15E8DE8E16B188B4DCE8A29CC2B32BC659C8822396", var_5 );

        if ( isdefined( scripts\mp\utility\stats::getpersstat( "_encstr_87F01AC8A59B470BCD8D598AC958B395B1953225E695ACA1B4B1632B" ) ) && ( var_4 == "_encstr_9D130DCE2B0DA5D8C695FA95C3B48E" || isdefined( self.vehicle ) ) )
            scripts\mp\utility\stats::incpersstat( "_encstr_87F01AC8A59B470BCD8D598AC958B395B1953225E695ACA1B4B1632B", var_5 );

        if ( var_4 == "_encstr_A11C0E7341A881D2E913AF5F1D8DFAD2" )
        {
            var_3 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_occupantisvehicledriver( self );
            self.lastvehicleseatchangetime = gettime();
        }

        if ( var_4 == "_encstr_A886143B07903FF2885960019B495012C2A10B8031DD" )
            var_3 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_occupantisvehicledriver( self );

        if ( var_2 != var_3 || var_4 == "_encstr_9D130DCE2B0DA5D8C695FA95C3B48E" )
        {
            var_6 = self.lastvehicleseatchangetime;
            var_7 = ( gettime() - var_6 ) / 1000;

            if ( var_2 )
            {
                if ( isdefined( scripts\mp\utility\stats::getpersstat( "_encstr_B88E12FB8C403D7F10B20BBD7F9008605B9B65A3" ) ) )
                    scripts\mp\utility\stats::incpersstat( "_encstr_B88E12FB8C403D7F10B20BBD7F9008605B9B65A3", var_7 );
            }
            else if ( isdefined( scripts\mp\utility\stats::getpersstat( "_encstr_ABA315F35B2BA2ABF328B3C3114B602AAFEE3FED34538B" ) ) )
                scripts\mp\utility\stats::incpersstat( "_encstr_ABA315F35B2BA2ABF328B3C3114B602AAFEE3FED34538B", var_7 );
        }

        if ( var_4 == "_encstr_A11C0E7341A881D2E913AF5F1D8DFAD2" || var_4 == "_encstr_A886143B07903FF2885960019B495012C2A10B8031DD" )
            var_2 = var_3;

        if ( var_4 == "_encstr_A886143B07903FF2885960019B495012C2A10B8031DD" )
            self.lastvehicleseatchangetime = gettime();

        var_1 = self.origin;

        if ( scripts\mp\utility\game::getgametype() == "_encstr_9DB606854E567385" )
        {
            if ( self.pers["_encstr_A1FF15E8DE8E16B188B4DCE8A29CC2B32BC659C8822396"] > 50 )
            {
                self.pers["_encstr_8A0C1332B4E6E8A24E1636B696739D0558CD6EAC23"] = 1;
                self.pers["_encstr_80600AD2F0172A071B98CCD3"] = 0;
            }
        }
        else if ( !istrue( self.pers["_encstr_8A0C1332B4E6E8A24E1636B696739D0558CD6EAC23"] ) )
        {
            if ( self.pers["_encstr_A1FF15E8DE8E16B188B4DCE8A29CC2B32BC659C8822396"] > 300 )
                self.pers["_encstr_8A0C1332B4E6E8A24E1636B696739D0558CD6EAC23"] = 1;
        }
        else
        {
            var_8 = _id_1331C();

            if ( var_8 )
            {
                var_9 = scripts\mp\persistence::statgetchildbuffered( "_encstr_A2460627DEABDC23", "_encstr_801A0BD15ADA560A63B09795C8", 0 );

                if ( var_9 - self.pers["_encstr_9B350DDAF81F5257D305C4FC2B381F"] > 240 )
                {
                    self.pers["_encstr_9B350DDAF81F5257D305C4FC2B381F"] = var_9;
                    self.pers["_encstr_8A0C1332B4E6E8A24E1636B696739D0558CD6EAC23"] = undefined;
                    self.pers["_encstr_A1FF15E8DE8E16B188B4DCE8A29CC2B32BC659C8822396"] = undefined;
                }
            }
        }

        scripts\mp\utility\stats::incpersstat( "_encstr_8B6910A7CDAD3B7928A156E57BA09483F573", self.origin[2] );
        scripts\mp\utility\stats::incpersstat( "_encstr_887C15018D48FAEFDCD96842032373F398039B87137803", 1 );
    }
}

initleanplayerstats()
{
    if ( !isdefined( self.pers["_encstr_BA0607842BE8FB4B56"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_BA0607842BE8FB4B56" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_BA0607842BE8FB4B56", 0 );
    }

    self.deaths = scripts\mp\utility\stats::getpersstat( "_encstr_BA0607842BE8FB4B56" );
    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_BA0607842BE8FB4B56" );

    if ( !isdefined( self.pers["_encstr_93FB06DC6CBDE4CA"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_93FB06DC6CBDE4CA" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_93FB06DC6CBDE4CA", 0 );
    }

    self.score = scripts\mp\utility\stats::getpersstat( "_encstr_93FB06DC6CBDE4CA" );
    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_93FB06DC6CBDE4CA" );

    if ( !isdefined( self.pers["_encstr_BA8D06E75935489E"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_BA8D06E75935489E" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_BA8D06E75935489E", 0 );
    }

    self.kills = scripts\mp\utility\stats::getpersstat( "_encstr_BA8D06E75935489E" );
    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_BA8D06E75935489E" );
}

initplayerstats()
{
    scripts\mp\playerstats::initplayer();
    scripts\mp\persistence::initbufferedstats();

    if ( !isdefined( self.watchvehicleingas ) )
        self.watchvehicleingas = [];

    initleanplayerstats();

    if ( !isdefined( self.pers["_encstr_A88209D66B171F296551FB"] ) )
        scripts\mp\utility\stats::initpersstat( "_encstr_A88209D66B171F296551FB" );

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_A88209D66B171F296551FB" );

    if ( !isdefined( self.pers["_encstr_B4D30A88DFE9A8361227494F"] ) )
        scripts\mp\utility\stats::initpersstat( "_encstr_B4D30A88DFE9A8361227494F" );

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_B4D30A88DFE9A8361227494F" );

    if ( !isdefined( self.pers["_encstr_93B30B67015DDA9D40F00D55AB"] ) )
        scripts\mp\utility\stats::initpersstat( "_encstr_93B30B67015DDA9D40F00D55AB" );

    if ( !isdefined( self.pers["_encstr_A9F30862E89734A7EBE6"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_A9F30862E89734A7EBE6" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_A9F30862E89734A7EBE6", 0 );
    }

    self.assists = scripts\mp\utility\stats::getpersstat( "_encstr_A9F30862E89734A7EBE6" );
    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_A9F30862E89734A7EBE6" );

    if ( !isdefined( self.pers["_encstr_B2CF0967600940A373E78A"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_B2CF0967600940A373E78A" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_B2CF0967600940A373E78A", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_B2CF0967600940A373E78A" );

    if ( !isdefined( self.pers["_encstr_9DF7084E59E85727CD37"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_9DF7084E59E85727CD37" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9DF7084E59E85727CD37", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_9DF7084E59E85727CD37" );

    if ( !isdefined( self.pers["_encstr_9CF70851FD0FB8B81BB3"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_9CF70851FD0FB8B81BB3" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9CF70851FD0FB8B81BB3", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_9CF70851FD0FB8B81BB3" );

    if ( !isdefined( self.pers["_encstr_8BB00783957F8B8B08"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_8BB00783957F8B8B08" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_8BB00783957F8B8B08", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_8BB00783957F8B8B08" );

    if ( !isdefined( self.pers["_encstr_B27B080D25DBEBAF1763"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_B27B080D25DBEBAF1763" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_B27B080D25DBEBAF1763", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_B27B080D25DBEBAF1763" );

    if ( !isdefined( self.pers["_encstr_AA460DCF7948A4EB7D076B1777A8A3"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_AA460DCF7948A4EB7D076B1777A8A3" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_AA460DCF7948A4EB7D076B1777A8A3", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_AA460DCF7948A4EB7D076B1777A8A3" );

    if ( !isdefined( self.pers["_encstr_930E0A338F20CFFF66C83A32"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_930E0A338F20CFFF66C83A32" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_930E0A338F20CFFF66C83A32", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_930E0A338F20CFFF66C83A32" );

    if ( !isdefined( self.pers["_encstr_954E074A20D55C9771"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_954E074A20D55C9771" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_954E074A20D55C9771", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_954E074A20D55C9771" );

    if ( !isdefined( self.pers["_encstr_9394086A1F5F5EAD9B93"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_9394086A1F5F5EAD9B93" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9394086A1F5F5EAD9B93", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_9394086A1F5F5EAD9B93" );

    if ( !isdefined( self.pers["_encstr_9EF70B2072DB4F8003F72490C3"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_9EF70B2072DB4F8003F72490C3" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9EF70B2072DB4F8003F72490C3", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_9EF70B2072DB4F8003F72490C3" );

    if ( !isdefined( self.pers["_encstr_AA980BCC5ACAD8C876B7C2B1DC"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_AA980BCC5ACAD8C876B7C2B1DC" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_AA980BCC5ACAD8C876B7C2B1DC", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_AA980BCC5ACAD8C876B7C2B1DC" );

    if ( !isdefined( self.pers["_encstr_AA560B03BB08757F4351126AFB"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_AA560B03BB08757F4351126AFB" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_AA560B03BB08757F4351126AFB", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_AA560B03BB08757F4351126AFB" );

    if ( !isdefined( self.pers["_encstr_97EC10B230B85D364728478F8ECB637B02AB"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_97EC10B230B85D364728478F8ECB637B02AB" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_97EC10B230B85D364728478F8ECB637B02AB", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_97EC10B230B85D364728478F8ECB637B02AB" );

    if ( !isdefined( self.pers["_encstr_B870102A57201B835F8B9B46EC6347656FDA"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_B870102A57201B835F8B9B46EC6347656FDA" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_B870102A57201B835F8B9B46EC6347656FDA", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_B870102A57201B835F8B9B46EC6347656FDA" );

    if ( !isdefined( self.pers["_encstr_879C0AA323D24A27248A899B"] ) )
        scripts\mp\utility\stats::initpersstat( "_encstr_879C0AA323D24A27248A899B" );

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_879C0AA323D24A27248A899B" );

    if ( !isdefined( self.pers["_encstr_89220C953C4739856ED8B7C95903"] ) )
        scripts\mp\utility\stats::initpersstat( "_encstr_89220C953C4739856ED8B7C95903" );

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_89220C953C4739856ED8B7C95903" );

    if ( !isdefined( self.pers["_encstr_81220C227A4DB326184FFFEA6B22"] ) )
        scripts\mp\utility\stats::initpersstat( "_encstr_81220C227A4DB326184FFFEA6B22" );

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_81220C227A4DB326184FFFEA6B22" );

    if ( !isdefined( self.pers["_encstr_87AD06CD3A58986E"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_87AD06CD3A58986E" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_87AD06CD3A58986E", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_87AD06CD3A58986E" );

    if ( !isdefined( self.pers["_encstr_A37F09DC953A260B36ADE6"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_A37F09DC953A260B36ADE6" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_A37F09DC953A260B36ADE6", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_A37F09DC953A260B36ADE6" );

    if ( !isdefined( self.pers["_encstr_B9F50890960B9B01773F"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_B9F50890960B9B01773F" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_B9F50890960B9B01773F", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_B9F50890960B9B01773F" );

    if ( !isdefined( self.pers["_encstr_9BE80EE01E95B85B35F5E2B7565FD08F"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_9BE80EE01E95B85B35F5E2B7565FD08F" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9BE80EE01E95B85B35F5E2B7565FD08F", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_9BE80EE01E95B85B35F5E2B7565FD08F" );

    if ( !isdefined( self.pers["_encstr_B8BE07320B5B16ECAC"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_B8BE07320B5B16ECAC" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_B8BE07320B5B16ECAC", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_B8BE07320B5B16ECAC" );

    if ( !isdefined( self.pers["_encstr_A2A50DB9AEE0569CB98A8539B92B19"] ) )
        scripts\mp\utility\stats::initpersstat( "_encstr_A2A50DB9AEE0569CB98A8539B92B19" );

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_A2A50DB9AEE0569CB98A8539B92B19" );

    if ( !isdefined( self.pers["_encstr_9DAB06C05F97103F"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_9DAB06C05F97103F" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9DAB06C05F97103F", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_9DAB06C05F97103F" );

    if ( !isdefined( self.pers["_encstr_9B7D0A40E736DBB55A9E058E"] ) )
    {
        scripts\mp\utility\stats::initpersstat( "_encstr_9B7D0A40E736DBB55A9E058E" );
        scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9B7D0A40E736DBB55A9E058E", 0 );
    }

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_9B7D0A40E736DBB55A9E058E" );

    if ( !isdefined( self.pers["_encstr_9DF605EE5ADC37"] ) )
        scripts\mp\utility\stats::initpersstat( "_encstr_9DF605EE5ADC37" );

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_9DF605EE5ADC37" );

    if ( !isdefined( self.pers["_encstr_A3F20893E293B55C6C2B"] ) )
        scripts\mp\utility\stats::initpersstat( "_encstr_A3F20893E293B55C6C2B" );

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_A3F20893E293B55C6C2B" );

    if ( !isdefined( self.pers["_encstr_9319075BFD9A2CEBF0"] ) )
        scripts\mp\utility\stats::initpersstat( "_encstr_9319075BFD9A2CEBF0" );

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_9319075BFD9A2CEBF0" );

    if ( !isdefined( self.pers["_encstr_A9AB0E4C803B63F3E3505B8339D36B7F"] ) )
        scripts\mp\utility\stats::initpersstat( "_encstr_A9AB0E4C803B63F3E3505B8339D36B7F" );

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_A9AB0E4C803B63F3E3505B8339D36B7F" );

    if ( !isdefined( self.pers["_encstr_9EB80C78A01D335B67504210E3A7"] ) )
        scripts\mp\utility\stats::initpersstat( "_encstr_9EB80C78A01D335B67504210E3A7" );

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_9EB80C78A01D335B67504210E3A7" );

    if ( !isdefined( self.pers["_encstr_A490056CC2DCD0"] ) )
        scripts\mp\utility\stats::initpersstat( "_encstr_A490056CC2DCD0" );

    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_A490056CC2DCD0" );

    if ( !isdefined( self.pers["_encstr_A2ED0F7B8081DDB46B89DDDA6D3D7A8B08"] ) )
        self.pers["_encstr_A2ED0F7B8081DDB46B89DDDA6D3D7A8B08"] = 0;

    scripts\mp\utility\stats::initpersstat( "_encstr_8FF20E5B902097A21FC5D2132EEB3A53" );
    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_8FF20E5B902097A21FC5D2132EEB3A53" );
    self.pers["_encstr_A2AA0636969D2BE6"] = scripts\mp\utility\game::getgametypenumlives();
    scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_B6CE0B0BB00A03197B88355740", 0 );
    scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_A2AD0536F6DC9B", 0 );
    scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_A1190433C098", 0 );
    scripts\mp\persistence::statsetchild( "_encstr_A2460627DEABDC23", "_encstr_9DEE0F1B4198FB6F289F292291C130BB35", "_encstr_AABA05236DC831" );
    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_B6CE0B0BB00A03197B88355740" );
    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_A2AD0536F6DC9B" );
    scripts\mp\utility\stats::timedrun_finishlinevfx( "_encstr_A1190433C098" );
}

addtoteamcount( var_0 )
{
    thread scripts\mp\utility\teams::addplayertoteam( self, self.team, var_0 );
    [[ level.updategameevents ]]();
}

removefromteamcount()
{
    scripts\mp\utility\teams::removeplayerfromteam( self, self.team );
}

addtoalivecount( var_0 )
{
    var_1 = self.team;

    if ( !( isdefined( self.alreadyaddedtoalivecount ) && self.alreadyaddedtoalivecount ) )
    {
        scripts\mp\utility\teams::modifyteamdata( var_1, "_encstr_A9310B43529AEF43D72F68D514", 1 );
        incrementalivecount( var_1, 0, var_0 );
    }

    self.alreadyaddedtoalivecount = undefined;
    var_2 = 0;

    foreach ( var_4 in level.teamnamelist )
        var_2 = var_2 + scripts\mp\utility\teams::getteamdata( var_4, "_encstr_892A0BA3D3F25C4033ADD34893" );

    if ( var_2 > level.maxplayercount )
        level.maxplayercount = var_2;
}

incrementalivecount( var_0, var_1, var_2 )
{
    scripts\mp\utility\teams::addtoteamlives( self, var_0, var_1, var_2 );
    [[ level.updategameevents ]]();
}

removefromalivecount( var_0, var_1 )
{
    var_2 = self.pers["_encstr_A2AA0636969D2BE6"];
    var_3 = scripts\mp\utility\game::getgametypenumlives() != 0 && var_2 == 0 && !istrue( level._id_133DF );
    self notify( "_encstr_BCFB1863631152D6B07E171A9018374A7993EBB7AF4E1AADB023" );
    var_4 = self.team;

    if ( isdefined( self.switching_teams ) && self.switching_teams && isdefined( self.joining_team ) && self.joining_team == self.team )
        var_4 = self.leaving_team;

    if ( isdefined( var_0 ) )
        removeallfromlivescount();
    else if ( isdefined( self.switching_teams ) )
    {
        if ( !level.ingraceperiod || self.hasdonecombat )
        {
            scripts\mp\utility\teams::modifyteamdata( var_4, "_encstr_A9310B43529AEF43D72F68D514", -1 );

            if ( var_2 )
                self.pers["_encstr_A2AA0636969D2BE6"]--;
        }
    }

    decrementalivecount( var_4, var_3, var_1 );
}

decrementalivecount( var_0, var_1, var_2 )
{
    scripts\mp\utility\teams::removefromteamlives( self, var_0, var_1, var_2 );
    [[ level.updategameevents ]]();
}

addtolivescount()
{
    scripts\mp\utility\teams::modifyteamdata( self.team, "_encstr_BDDF0B49F913A03E8F8ADBA023", self.pers["_encstr_A2AA0636969D2BE6"] );
}

removefromlivescount()
{
    scripts\mp\utility\teams::setteamdata( self.team, "_encstr_BDDF0B49F913A03E8F8ADBA023", int( max( 0, scripts\mp\utility\teams::getteamdata( self.team, "_encstr_BDDF0B49F913A03E8F8ADBA023" ) - 1 ) ) );
}

removeallfromlivescount()
{
    scripts\mp\utility\teams::setteamdata( self.team, "_encstr_BDDF0B49F913A03E8F8ADBA023", int( max( 0, scripts\mp\utility\teams::getteamdata( self.team, "_encstr_BDDF0B49F913A03E8F8ADBA023" ) - self.pers["_encstr_A2AA0636969D2BE6"] ) ) );
}

resetuiomnvarscommon()
{
    if ( isdefined( level.resetuiomnvargamemode ) )
        [[ level.resetuiomnvargamemode ]]();

    self setclientomnvar( "_encstr_8038139574D9F7694A8F08A8A78E415FE3DB079DCF", 0 );
    self setclientomnvar( "_encstr_82370C57A5EBB92B1B57C9B4DC9D", 0 );
    self setclientomnvar( "_encstr_A3FC0E033AD79E8803F17D43F2A1206D", -1 );
    self setclientomnvar( "_encstr_B94D1C2BA969E003036AC9B142F7CD737F0793EB440D48564FF240583AAF", 0 );
    self setclientomnvar( "_encstr_8B090DA544E9D399779FF9C0438733", 0 );
    self setclientomnvar( "_encstr_9B4C27CD7BCFFE9A58FB8FA004CE693508FEC7ABB120B205DEF81D0B97C0FB80434F12156B689505E0", 0 );
    self setclientomnvar( "_encstr_8C421393641F20F32AC7E7B7CFB24971FB7D1B08CB", 0 );
    self setclientomnvar( "_encstr_94FC10DD3C91B33307E340D8EB43ABDBEAE7", 0 );
}

resetuidvarsonconnect()
{
    resetuiomnvarscommon();
    self setclientdvar( "_encstr_933F1C55ABF68F48DB90F10A8057876B4918C5F1B1F8C792F338FA12F827", 0 );
    self setclientomnvar( "_encstr_AD061ACF50F64D32C19E2CE9FEB94A1CDB18EF03F808AC19E9A5305B", -1 );
    self setclientomnvar( "_encstr_8B2210E19A4A03D75761D81DF7B06370DD98", 0 );

    if ( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        self setclientomnvar( "_encstr_932315EAA5F56B2CE86CD0D72D9BFAC14E7B3B9356B937", 1 );
    else
        self setclientomnvar( "_encstr_932315EAA5F56B2CE86CD0D72D9BFAC14E7B3B9356B937", 0 );
}

resetuidvarsonspectate()
{
    resetuiomnvarscommon();
    self setclientdvar( "_encstr_933F1C55ABF68F48DB90F10A8057876B4918C5F1B1F8C792F338FA12F827", 0 );
}

clearpinnedobjectives()
{
    if ( isbot( self ) )
        return;

    if ( isdefined( level.objectives ) )
    {
        foreach ( var_1 in level.objectives )
        {
            if ( isdefined( var_1.objidnum ) )
                scripts\mp\objidpoolmanager::objective_unpin_player( var_1.objidnum, self, var_1.showoncompass );
        }
    }

    if ( isdefined( level.uncapturableobjectives ) )
    {
        foreach ( var_1 in level.uncapturableobjectives )
        {
            if ( isdefined( var_1.objidnum ) )
                scripts\mp\objidpoolmanager::objective_unpin_player( var_1.objidnum, self, var_1.showoncompass );
        }
    }
}

watchtargethealth()
{
    self endon( "_encstr_87DC14B3C0C903B191786B89AC8373FA90A51D5742F3" );
    self.targethealthinfo = [];

    for (;;)
    {
        var_0 = ( self.origin[0], self.origin[1], self.origin[2] + 64 );
        var_1 = self getplayerangles();
        var_2 = anglestoforward( var_1 );
        var_3 = var_0 + var_2 * 10000;
        var_4 = scripts\engine\trace::_bullet_trace( var_0, var_3, 1, self, 0, 0, 0, 0, 0 );
        var_5 = var_4["_encstr_B60E07C9FD1C2055E3"];

        if ( isdefined( var_5 ) && isplayer( var_5 ) && var_5.team != self.team )
        {
            if ( isdefined( var_5 ) )
                updatetargethealthvariable( "_encstr_956B11DD134E73C67DA8DAC381A13FDFC00558", var_5.health );

            if ( isdefined( var_5 ) )
                updatetargethealthvariable( "_encstr_9C9C15AB2DEB3A5893B356D1AF6B16C3FA432B0B36E81A", var_5.maxhealth );

            if ( isdefined( var_5 ) )
                updatetargethealthvariable( "_encstr_8AAB15D5A5EBE858933B59A3F559CD474B3AF2D7735DD6", var_5 getentitynumber() );
        }
        else
            updatetargethealthvariable( "_encstr_8AAB15D5A5EBE858933B59A3F559CD474B3AF2D7735DD6", -1 );

        wait 0.1;
    }
}

updatetargethealthvariable( var_0, var_1 )
{
    waitframe();

    if ( !isdefined( self ) )
        return;

    if ( !isdefined( var_1 ) )
        return;

    if ( !isdefined( self.targethealthinfo[var_0] ) || var_1 != self.targethealthinfo[var_0] )
    {
        self setclientomnvar( var_0, var_1 );
        self.targethealthinfo[var_0] = var_1;
    }
}

showgamemodeobjectivetext()
{
    if ( self.hasspawned )
        return;

    if ( !showmatchhint() )
        return;

    if ( scripts\mp\flags::gameflag( "_encstr_989F0E38272BD6161DB143F532BDDC2B" ) )
        return;

    scripts\mp\flags::gameflagwait( "_encstr_989F0E38272BD6161DB143F532BDDC2B" );
    self endon( "_encstr_8A820B4696CDB1ED3737AC1B3A" );
    wait 1.0;

    if ( !isdefined( self ) )
        return;

    if ( !isdefined( self.pers["_encstr_89EF05D46BA8FD"] ) )
        return;

    var_0 = self.pers["_encstr_89EF05D46BA8FD"];
    var_1 = scripts\mp\utility\game::getobjectivehinttext( var_0 );

    if ( isdefined( var_1 ) )
    {
        var_2 = 0;

        if ( game["_encstr_95A70AA81FEE295D3A2F56DE"] == var_0 )
            var_2 = 1;

        self setclientomnvar( "_encstr_98E91257B4AFF6C49A951B1DD29DCAFA3A560FE8", var_2 );
        wait 6;
        self setclientomnvar( "_encstr_98E91257B4AFF6C49A951B1DD29DCAFA3A560FE8", -1 );
    }
}

showmatchhint()
{
    var_0 = scripts\mp\utility\game::getgametype();

    switch ( var_0 )
    {
        case "_encstr_9DB606854E567385":
            if ( isdefined( game["_encstr_8AC30D9CDEBA73466E41B1585E568C"] ) && game["_encstr_8AC30D9CDEBA73466E41B1585E568C"] > 0 )
                return 0;

            break;
        default:
            break;
    }

    return 1;
}

trydisableminimap()
{
    if ( scripts\mp\utility\player::alwaysshowminimap() || scripts\mp\utility\game::getgametype() == "_encstr_9507034B25" )
        return;

    if ( !istrue( self.showuavminimaponspawn ) && !scripts\mp\utility\perk::_hasperk( "_encstr_87B419CF80A96B9AD321037880FB822771A0B7F7F080AE42334F0A" ) )
        scripts\mp\utility\player::hideminimap( 1 );

    self.showuavminimaponspawn = 0;
}

initinputtypewatcher()
{
    self.gamepadwasenabled = scripts\engine\utility::is_player_gamepad_enabled();
}

updateinputtypewatcher()
{
    var_0 = scripts\engine\utility::is_player_gamepad_enabled();

    if ( self.gamepadwasenabled != var_0 )
    {
        self notify( "_encstr_876313230D937B03D753B0F0FF3F39992AB5ACBDE7", var_0 );
        self.gamepadwasenabled = var_0;
    }
}

updateplayerwindmaterial()
{
    var_0 = 100;
    var_1 = 700;
    var_2 = var_1 - var_0;
    var_3 = 0;
    var_4 = 10;

    for (;;)
    {
        foreach ( var_6 in level.players )
        {
            if ( !isdefined( var_6 ) )
                continue;

            if ( !scripts\mp\utility\player::isreallyalive( var_6 ) )
                continue;

            if ( istrue( var_6.manualoverridewindmaterial ) )
                continue;

            if ( isdefined( var_6.vehicle ) )
                var_7 = clamp( length( var_6.vehicle vehicle_getvelocity() ), var_0, var_1 );
            else
                var_7 = clamp( length( var_6 getvelocity() ), var_0, var_1 );

            var_8 = ( var_7 - var_0 ) / var_2;
            var_8 = var_8 * 10;
            var_8 = int( var_8 );

            if ( !isdefined( var_6._id_145C6 ) || var_6._id_145C6 != var_8 )
            {
                switch ( var_8 )
                {
                    case 0:
                        var_6 setscriptablepartstate( "_encstr_B7F6052B10854F", "_encstr_B34C0233", 0 );
                        break;
                    case 1:
                        var_6 setscriptablepartstate( "_encstr_B7F6052B10854F", "_encstr_A607030FA8", 0 );
                        break;
                    case 2:
                        var_6 setscriptablepartstate( "_encstr_B7F6052B10854F", "_encstr_9407030723", 0 );
                        break;
                    case 3:
                        var_6 setscriptablepartstate( "_encstr_B7F6052B10854F", "_encstr_8A0703CC03", 0 );
                        break;
                    case 4:
                        var_6 setscriptablepartstate( "_encstr_B7F6052B10854F", "_encstr_8707032BAF", 0 );
                        break;
                    case 5:
                        var_6 setscriptablepartstate( "_encstr_B7F6052B10854F", "_encstr_9307036531", 0 );
                        break;
                    case 6:
                        var_6 setscriptablepartstate( "_encstr_B7F6052B10854F", "_encstr_9C0703DAA7", 0 );
                        break;
                    case 7:
                        var_6 setscriptablepartstate( "_encstr_B7F6052B10854F", "_encstr_B80703E603", 0 );
                        break;
                    case 8:
                        var_6 setscriptablepartstate( "_encstr_B7F6052B10854F", "_encstr_810703F142", 0 );
                        break;
                    case 9:
                        var_6 setscriptablepartstate( "_encstr_B7F6052B10854F", "_encstr_B207032706", 0 );
                        break;
                    case 10:
                        var_6 setscriptablepartstate( "_encstr_B7F6052B10854F", "_encstr_BC18043672F3", 0 );
                        break;
                }
            }

            var_6._id_145C6 = var_8;
            var_3++;

            if ( var_3 == var_4 )
            {
                waitframe();
                var_3 = 0;
            }
        }

        wait 0.1;
    }
}

_id_1312B( var_0 )
{
    self.beingrevived = var_0;
    self getbeingrevived( var_0 );
}

registerpuzzleinteractions()
{
    return istrue( self.beingrevived ) || istrue( self.usedprops );
}

_id_1331C()
{
    if ( isdefined( level._id_1331D ) )
        return [[ level._id_1331D ]]();

    return 1;
}
